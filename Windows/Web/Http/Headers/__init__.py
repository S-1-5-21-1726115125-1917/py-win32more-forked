from __future__ import annotations
from ctypes import c_void_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from typing import Generic, TypeVar
K = TypeVar('T')
T = TypeVar('T')
V = TypeVar('V')
TProgress = TypeVar('TProgress')
TResult = TypeVar('TResult')
TSender = TypeVar('TSender')
from Windows import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
from Windows._winrt import WinRT_String, winrt_commethod, winrt_mixinmethod, winrt_classmethod, winrt_factorymethod, winrt_activatemethod
import Windows.Win32.System.WinRT
import Windows.Foundation
import Windows.Foundation.Collections
import Windows.Globalization
import Windows.Networking
import Windows.Storage.Streams
import Windows.Web.Http
import Windows.Web.Http.Headers
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
class HttpCacheDirectiveHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection'
    @winrt_mixinmethod
    def get_MaxAge(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_MaxAge(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_MaxStale(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_MaxStale(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_MinFresh(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_MinFresh(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_SharedMaxAge(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_SharedMaxAge(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpCacheDirectiveHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpNameValueHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], value: Windows.Web.Http.Headers.HttpNameValueHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpNameValueHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpNameValueHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], value: Windows.Web.Http.Headers.HttpNameValueHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpNameValueHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpNameValueHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpNameValueHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    MaxAge = property(get_MaxAge, put_MaxAge)
    MaxStale = property(get_MaxStale, put_MaxStale)
    MinFresh = property(get_MinFresh, put_MinFresh)
    SharedMaxAge = property(get_SharedMaxAge, put_SharedMaxAge)
    Size = property(get_Size, None)
class HttpChallengeHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpChallengeHeaderValue'
    @winrt_factorymethod
    def CreateFromScheme(cls: Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory, scheme: WinRT_String) -> Windows.Web.Http.Headers.HttpChallengeHeaderValue: ...
    @winrt_factorymethod
    def CreateFromSchemeWithToken(cls: Windows.Web.Http.Headers.IHttpChallengeHeaderValueFactory, scheme: WinRT_String, token: WinRT_String) -> Windows.Web.Http.Headers.HttpChallengeHeaderValue: ...
    @winrt_mixinmethod
    def get_Parameters(self: Windows.Web.Http.Headers.IHttpChallengeHeaderValue) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def get_Scheme(self: Windows.Web.Http.Headers.IHttpChallengeHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Token(self: Windows.Web.Http.Headers.IHttpChallengeHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpChallengeHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpChallengeHeaderValueStatics, input: WinRT_String, challengeHeaderValue: POINTER(Windows.Web.Http.Headers.HttpChallengeHeaderValue)) -> Boolean: ...
    Parameters = property(get_Parameters, None)
    Scheme = property(get_Scheme, None)
    Token = property(get_Token, None)
class HttpChallengeHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpChallengeHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpChallengeHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpChallengeHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], value: Windows.Web.Http.Headers.HttpChallengeHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpChallengeHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpChallengeHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], value: Windows.Web.Http.Headers.HttpChallengeHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpChallengeHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpChallengeHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpChallengeHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpChallengeHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpChallengeHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpConnectionOptionHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue'
    @winrt_factorymethod
    def Create(cls: Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueFactory, token: WinRT_String) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue: ...
    @winrt_mixinmethod
    def get_Token(self: Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueStatics, input: WinRT_String, connectionOptionHeaderValue: POINTER(Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue)) -> Boolean: ...
    Token = property(get_Token, None)
class HttpConnectionOptionHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpConnectionOptionHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], value: Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], value: Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpContentCodingHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpContentCodingHeaderValue'
    @winrt_factorymethod
    def Create(cls: Windows.Web.Http.Headers.IHttpContentCodingHeaderValueFactory, contentCoding: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingHeaderValue: ...
    @winrt_mixinmethod
    def get_ContentCoding(self: Windows.Web.Http.Headers.IHttpContentCodingHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpContentCodingHeaderValueStatics, input: WinRT_String, contentCodingHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentCodingHeaderValue)) -> Boolean: ...
    ContentCoding = property(get_ContentCoding, None)
class HttpContentCodingHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpContentCodingHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpContentCodingHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpContentCodingHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], value: Windows.Web.Http.Headers.HttpContentCodingHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpContentCodingHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpContentCodingHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], value: Windows.Web.Http.Headers.HttpContentCodingHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpContentCodingHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpContentCodingHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpContentCodingHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpContentCodingHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpContentCodingWithQualityHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue'
    @winrt_factorymethod
    def CreateFromValue(cls: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory, contentCoding: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue: ...
    @winrt_factorymethod
    def CreateFromValueWithQuality(cls: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueFactory, contentCoding: WinRT_String, quality: Double) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue: ...
    @winrt_mixinmethod
    def get_ContentCoding(self: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Quality(self: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValue) -> Windows.Foundation.IReference[Double]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueStatics, input: WinRT_String, contentCodingWithQualityHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue)) -> Boolean: ...
    ContentCoding = property(get_ContentCoding, None)
    Quality = property(get_Quality, None)
class HttpContentCodingWithQualityHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpContentCodingWithQualityHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], value: Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], value: Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpContentDispositionHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpContentDispositionHeaderValue'
    @winrt_factorymethod
    def Create(cls: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueFactory, dispositionType: WinRT_String) -> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue: ...
    @winrt_mixinmethod
    def get_DispositionType(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_DispositionType(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_FileName(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_FileName(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_FileNameStar(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_FileNameStar(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Name(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Name(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Parameters(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def put_Size(self: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValue, value: Windows.Foundation.IReference[UInt64]) -> Void: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpContentDispositionHeaderValueStatics, input: WinRT_String, contentDispositionHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentDispositionHeaderValue)) -> Boolean: ...
    DispositionType = property(get_DispositionType, put_DispositionType)
    FileName = property(get_FileName, put_FileName)
    FileNameStar = property(get_FileNameStar, put_FileNameStar)
    Name = property(get_Name, put_Name)
    Parameters = property(get_Parameters, None)
    Size = property(get_Size, put_Size)
class HttpContentHeaderCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpContentHeaderCollection'
    @winrt_activatemethod
    def New(cls) -> Windows.Web.Http.Headers.HttpContentHeaderCollection: ...
    @winrt_mixinmethod
    def get_ContentDisposition(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue: ...
    @winrt_mixinmethod
    def put_ContentDisposition(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Web.Http.Headers.HttpContentDispositionHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def get_ContentEncoding(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_ContentLanguage(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_ContentLength(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def put_ContentLength(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Foundation.IReference[UInt64]) -> Void: ...
    @winrt_mixinmethod
    def get_ContentLocation(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_ContentLocation(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_ContentMD5(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_mixinmethod
    def put_ContentMD5(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Storage.Streams.IBuffer) -> Void: ...
    @winrt_mixinmethod
    def get_ContentRange(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_mixinmethod
    def put_ContentRange(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Web.Http.Headers.HttpContentRangeHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def get_ContentType(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Web.Http.Headers.HttpMediaTypeHeaderValue: ...
    @winrt_mixinmethod
    def put_ContentType(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Web.Http.Headers.HttpMediaTypeHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def get_Expires(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def put_Expires(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_mixinmethod
    def get_LastModified(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def put_LastModified(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, name: WinRT_String, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryAppendWithoutValidation(self: Windows.Web.Http.Headers.IHttpContentHeaderCollection, name: WinRT_String, value: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def Lookup(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> UInt32: ...
    @winrt_mixinmethod
    def HasKey(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> Windows.Foundation.Collections.IMapView[WinRT_String, WinRT_String]: ...
    @winrt_mixinmethod
    def Insert(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String, value: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def Remove(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]) -> Windows.Foundation.Collections.IIterator[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    ContentDisposition = property(get_ContentDisposition, put_ContentDisposition)
    ContentEncoding = property(get_ContentEncoding, None)
    ContentLanguage = property(get_ContentLanguage, None)
    ContentLength = property(get_ContentLength, put_ContentLength)
    ContentLocation = property(get_ContentLocation, put_ContentLocation)
    ContentMD5 = property(get_ContentMD5, put_ContentMD5)
    ContentRange = property(get_ContentRange, put_ContentRange)
    ContentType = property(get_ContentType, put_ContentType)
    Expires = property(get_Expires, put_Expires)
    LastModified = property(get_LastModified, put_LastModified)
    Size = property(get_Size, None)
class HttpContentRangeHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpContentRangeHeaderValue'
    @winrt_factorymethod
    def CreateFromLength(cls: Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory, length: UInt64) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_factorymethod
    def CreateFromRange(cls: Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory, from_: UInt64, to: UInt64) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_factorymethod
    def CreateFromRangeWithLength(cls: Windows.Web.Http.Headers.IHttpContentRangeHeaderValueFactory, from_: UInt64, to: UInt64, length: UInt64) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_mixinmethod
    def get_FirstBytePosition(self: Windows.Web.Http.Headers.IHttpContentRangeHeaderValue) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def get_LastBytePosition(self: Windows.Web.Http.Headers.IHttpContentRangeHeaderValue) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def get_Length(self: Windows.Web.Http.Headers.IHttpContentRangeHeaderValue) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def get_Unit(self: Windows.Web.Http.Headers.IHttpContentRangeHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Unit(self: Windows.Web.Http.Headers.IHttpContentRangeHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpContentRangeHeaderValueStatics, input: WinRT_String, contentRangeHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentRangeHeaderValue)) -> Boolean: ...
    FirstBytePosition = property(get_FirstBytePosition, None)
    LastBytePosition = property(get_LastBytePosition, None)
    Length = property(get_Length, None)
    Unit = property(get_Unit, put_Unit)
class HttpCookiePairHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpCookiePairHeaderValue'
    @winrt_factorymethod
    def CreateFromName(cls: Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory, name: WinRT_String) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValue: ...
    @winrt_factorymethod
    def CreateFromNameWithValue(cls: Windows.Web.Http.Headers.IHttpCookiePairHeaderValueFactory, name: WinRT_String, value: WinRT_String) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValue: ...
    @winrt_mixinmethod
    def get_Name(self: Windows.Web.Http.Headers.IHttpCookiePairHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Value(self: Windows.Web.Http.Headers.IHttpCookiePairHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Value(self: Windows.Web.Http.Headers.IHttpCookiePairHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpCookiePairHeaderValueStatics, input: WinRT_String, cookiePairHeaderValue: POINTER(Windows.Web.Http.Headers.HttpCookiePairHeaderValue)) -> Boolean: ...
    Name = property(get_Name, None)
    Value = property(get_Value, put_Value)
class HttpCookiePairHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpCookiePairHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpCookiePairHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], value: Windows.Web.Http.Headers.HttpCookiePairHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpCookiePairHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpCookiePairHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], value: Windows.Web.Http.Headers.HttpCookiePairHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpCookiePairHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpCookiePairHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpCookiePairHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpCookiePairHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpCookiePairHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpCredentialsHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpCredentialsHeaderValue'
    @winrt_factorymethod
    def CreateFromScheme(cls: Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory, scheme: WinRT_String) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_factorymethod
    def CreateFromSchemeWithToken(cls: Windows.Web.Http.Headers.IHttpCredentialsHeaderValueFactory, scheme: WinRT_String, token: WinRT_String) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_mixinmethod
    def get_Parameters(self: Windows.Web.Http.Headers.IHttpCredentialsHeaderValue) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def get_Scheme(self: Windows.Web.Http.Headers.IHttpCredentialsHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Token(self: Windows.Web.Http.Headers.IHttpCredentialsHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpCredentialsHeaderValueStatics, input: WinRT_String, credentialsHeaderValue: POINTER(Windows.Web.Http.Headers.HttpCredentialsHeaderValue)) -> Boolean: ...
    Parameters = property(get_Parameters, None)
    Scheme = property(get_Scheme, None)
    Token = property(get_Token, None)
class HttpDateOrDeltaHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue'
    @winrt_mixinmethod
    def get_Date(self: Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def get_Delta(self: Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValue) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpDateOrDeltaHeaderValueStatics, input: WinRT_String, dateOrDeltaHeaderValue: POINTER(Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue)) -> Boolean: ...
    Date = property(get_Date, None)
    Delta = property(get_Delta, None)
class HttpExpectationHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpExpectationHeaderValue'
    @winrt_factorymethod
    def CreateFromName(cls: Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory, name: WinRT_String) -> Windows.Web.Http.Headers.HttpExpectationHeaderValue: ...
    @winrt_factorymethod
    def CreateFromNameWithValue(cls: Windows.Web.Http.Headers.IHttpExpectationHeaderValueFactory, name: WinRT_String, value: WinRT_String) -> Windows.Web.Http.Headers.HttpExpectationHeaderValue: ...
    @winrt_mixinmethod
    def get_Name(self: Windows.Web.Http.Headers.IHttpExpectationHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Value(self: Windows.Web.Http.Headers.IHttpExpectationHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Value(self: Windows.Web.Http.Headers.IHttpExpectationHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Parameters(self: Windows.Web.Http.Headers.IHttpExpectationHeaderValue) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpExpectationHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpExpectationHeaderValueStatics, input: WinRT_String, expectationHeaderValue: POINTER(Windows.Web.Http.Headers.HttpExpectationHeaderValue)) -> Boolean: ...
    Name = property(get_Name, None)
    Value = property(get_Value, put_Value)
    Parameters = property(get_Parameters, None)
class HttpExpectationHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpExpectationHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpExpectationHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpExpectationHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], value: Windows.Web.Http.Headers.HttpExpectationHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpExpectationHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpExpectationHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], value: Windows.Web.Http.Headers.HttpExpectationHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpExpectationHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpExpectationHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpExpectationHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpExpectationHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpExpectationHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpLanguageHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpLanguageHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], index: UInt32) -> Windows.Globalization.Language: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language]) -> Windows.Foundation.Collections.IVectorView[Windows.Globalization.Language]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], value: Windows.Globalization.Language, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], index: UInt32, value: Windows.Globalization.Language) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], index: UInt32, value: Windows.Globalization.Language) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], value: Windows.Globalization.Language) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], startIndex: UInt32, items: POINTER(Windows.Globalization.Language)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Globalization.Language], items: POINTER(Windows.Globalization.Language)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Globalization.Language]) -> Windows.Foundation.Collections.IIterator[Windows.Globalization.Language]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpLanguageRangeWithQualityHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue'
    @winrt_factorymethod
    def CreateFromLanguageRange(cls: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory, languageRange: WinRT_String) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue: ...
    @winrt_factorymethod
    def CreateFromLanguageRangeWithQuality(cls: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueFactory, languageRange: WinRT_String, quality: Double) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue: ...
    @winrt_mixinmethod
    def get_LanguageRange(self: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Quality(self: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValue) -> Windows.Foundation.IReference[Double]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueStatics, input: WinRT_String, languageRangeWithQualityHeaderValue: POINTER(Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue)) -> Boolean: ...
    LanguageRange = property(get_LanguageRange, None)
    Quality = property(get_Quality, None)
class HttpLanguageRangeWithQualityHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpLanguageRangeWithQualityHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], value: Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], value: Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpMediaTypeHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpMediaTypeHeaderValue'
    @winrt_factorymethod
    def Create(cls: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueFactory, mediaType: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeHeaderValue: ...
    @winrt_mixinmethod
    def get_CharSet(self: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_CharSet(self: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_MediaType(self: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_MediaType(self: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Parameters(self: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValue) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpMediaTypeHeaderValueStatics, input: WinRT_String, mediaTypeHeaderValue: POINTER(Windows.Web.Http.Headers.HttpMediaTypeHeaderValue)) -> Boolean: ...
    CharSet = property(get_CharSet, put_CharSet)
    MediaType = property(get_MediaType, put_MediaType)
    Parameters = property(get_Parameters, None)
class HttpMediaTypeWithQualityHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue'
    @winrt_factorymethod
    def CreateFromMediaType(cls: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory, mediaType: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue: ...
    @winrt_factorymethod
    def CreateFromMediaTypeWithQuality(cls: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueFactory, mediaType: WinRT_String, quality: Double) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue: ...
    @winrt_mixinmethod
    def get_CharSet(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_CharSet(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_MediaType(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_MediaType(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Parameters(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def get_Quality(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue) -> Windows.Foundation.IReference[Double]: ...
    @winrt_mixinmethod
    def put_Quality(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValue, value: Windows.Foundation.IReference[Double]) -> Void: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueStatics, input: WinRT_String, mediaTypeWithQualityHeaderValue: POINTER(Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue)) -> Boolean: ...
    CharSet = property(get_CharSet, put_CharSet)
    MediaType = property(get_MediaType, put_MediaType)
    Parameters = property(get_Parameters, None)
    Quality = property(get_Quality, put_Quality)
class HttpMediaTypeWithQualityHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpMediaTypeWithQualityHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], value: Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], value: Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpMethodHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpMethodHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpMethodHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], index: UInt32) -> Windows.Web.Http.HttpMethod: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.HttpMethod]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], value: Windows.Web.Http.HttpMethod, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], index: UInt32, value: Windows.Web.Http.HttpMethod) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], index: UInt32, value: Windows.Web.Http.HttpMethod) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], value: Windows.Web.Http.HttpMethod) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], startIndex: UInt32, items: POINTER(Windows.Web.Http.HttpMethod)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.HttpMethod], items: POINTER(Windows.Web.Http.HttpMethod)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.HttpMethod]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.HttpMethod]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpNameValueHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpNameValueHeaderValue'
    @winrt_factorymethod
    def CreateFromName(cls: Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory, name: WinRT_String) -> Windows.Web.Http.Headers.HttpNameValueHeaderValue: ...
    @winrt_factorymethod
    def CreateFromNameWithValue(cls: Windows.Web.Http.Headers.IHttpNameValueHeaderValueFactory, name: WinRT_String, value: WinRT_String) -> Windows.Web.Http.Headers.HttpNameValueHeaderValue: ...
    @winrt_mixinmethod
    def get_Name(self: Windows.Web.Http.Headers.IHttpNameValueHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Value(self: Windows.Web.Http.Headers.IHttpNameValueHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Value(self: Windows.Web.Http.Headers.IHttpNameValueHeaderValue, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpNameValueHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpNameValueHeaderValueStatics, input: WinRT_String, nameValueHeaderValue: POINTER(Windows.Web.Http.Headers.HttpNameValueHeaderValue)) -> Boolean: ...
    Name = property(get_Name, None)
    Value = property(get_Value, put_Value)
class HttpProductHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpProductHeaderValue'
    @winrt_factorymethod
    def CreateFromName(cls: Windows.Web.Http.Headers.IHttpProductHeaderValueFactory, productName: WinRT_String) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
    @winrt_factorymethod
    def CreateFromNameWithVersion(cls: Windows.Web.Http.Headers.IHttpProductHeaderValueFactory, productName: WinRT_String, productVersion: WinRT_String) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
    @winrt_mixinmethod
    def get_Name(self: Windows.Web.Http.Headers.IHttpProductHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Version(self: Windows.Web.Http.Headers.IHttpProductHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpProductHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpProductHeaderValueStatics, input: WinRT_String, productHeaderValue: POINTER(Windows.Web.Http.Headers.HttpProductHeaderValue)) -> Boolean: ...
    Name = property(get_Name, None)
    Version = property(get_Version, None)
class HttpProductInfoHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpProductInfoHeaderValue'
    @winrt_factorymethod
    def CreateFromComment(cls: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory, productComment: WinRT_String) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValue: ...
    @winrt_factorymethod
    def CreateFromNameWithVersion(cls: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueFactory, productName: WinRT_String, productVersion: WinRT_String) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValue: ...
    @winrt_mixinmethod
    def get_Product(self: Windows.Web.Http.Headers.IHttpProductInfoHeaderValue) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
    @winrt_mixinmethod
    def get_Comment(self: Windows.Web.Http.Headers.IHttpProductInfoHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueStatics, input: WinRT_String, productInfoHeaderValue: POINTER(Windows.Web.Http.Headers.HttpProductInfoHeaderValue)) -> Boolean: ...
    Product = property(get_Product, None)
    Comment = property(get_Comment, None)
class HttpProductInfoHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpProductInfoHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpProductInfoHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], value: Windows.Web.Http.Headers.HttpProductInfoHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpProductInfoHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpProductInfoHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], value: Windows.Web.Http.Headers.HttpProductInfoHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpProductInfoHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpProductInfoHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpProductInfoHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpProductInfoHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpProductInfoHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class HttpRequestHeaderCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpRequestHeaderCollection'
    @winrt_mixinmethod
    def get_Accept(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_AcceptEncoding(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_AcceptLanguage(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_Authorization(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_mixinmethod
    def put_Authorization(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Web.Http.Headers.HttpCredentialsHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def get_CacheControl(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_Connection(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_Cookie(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_Date(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def put_Date(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_mixinmethod
    def get_Expect(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_From(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_From(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Host(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Networking.HostName: ...
    @winrt_mixinmethod
    def put_Host(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Networking.HostName) -> Void: ...
    @winrt_mixinmethod
    def get_IfModifiedSince(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def put_IfModifiedSince(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_mixinmethod
    def get_IfUnmodifiedSince(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def put_IfUnmodifiedSince(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_mixinmethod
    def get_MaxForwards(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Foundation.IReference[UInt32]: ...
    @winrt_mixinmethod
    def put_MaxForwards(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Foundation.IReference[UInt32]) -> Void: ...
    @winrt_mixinmethod
    def get_ProxyAuthorization(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_mixinmethod
    def put_ProxyAuthorization(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Web.Http.Headers.HttpCredentialsHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def get_Referer(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Referer(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_TransferEncoding(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_UserAgent(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection: ...
    @winrt_mixinmethod
    def Append(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, name: WinRT_String, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryAppendWithoutValidation(self: Windows.Web.Http.Headers.IHttpRequestHeaderCollection, name: WinRT_String, value: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def Lookup(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> UInt32: ...
    @winrt_mixinmethod
    def HasKey(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> Windows.Foundation.Collections.IMapView[WinRT_String, WinRT_String]: ...
    @winrt_mixinmethod
    def Insert(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String, value: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def Remove(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]) -> Windows.Foundation.Collections.IIterator[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Accept = property(get_Accept, None)
    AcceptEncoding = property(get_AcceptEncoding, None)
    AcceptLanguage = property(get_AcceptLanguage, None)
    Authorization = property(get_Authorization, put_Authorization)
    CacheControl = property(get_CacheControl, None)
    Connection = property(get_Connection, None)
    Cookie = property(get_Cookie, None)
    Date = property(get_Date, put_Date)
    Expect = property(get_Expect, None)
    From = property(get_From, put_From)
    Host = property(get_Host, put_Host)
    IfModifiedSince = property(get_IfModifiedSince, put_IfModifiedSince)
    IfUnmodifiedSince = property(get_IfUnmodifiedSince, put_IfUnmodifiedSince)
    MaxForwards = property(get_MaxForwards, put_MaxForwards)
    ProxyAuthorization = property(get_ProxyAuthorization, put_ProxyAuthorization)
    Referer = property(get_Referer, put_Referer)
    TransferEncoding = property(get_TransferEncoding, None)
    UserAgent = property(get_UserAgent, None)
    Size = property(get_Size, None)
class HttpResponseHeaderCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpResponseHeaderCollection'
    @winrt_mixinmethod
    def get_Age(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_Age(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_Allow(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Web.Http.Headers.HttpMethodHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_CacheControl(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_Connection(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_Date(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def put_Date(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_mixinmethod
    def get_Location(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Location(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_ProxyAuthenticate(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_RetryAfter(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue: ...
    @winrt_mixinmethod
    def put_RetryAfter(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection, value: Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def get_TransferEncoding(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection: ...
    @winrt_mixinmethod
    def get_WwwAuthenticate(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection) -> Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection: ...
    @winrt_mixinmethod
    def Append(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection, name: WinRT_String, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryAppendWithoutValidation(self: Windows.Web.Http.Headers.IHttpResponseHeaderCollection, name: WinRT_String, value: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def Lookup(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> UInt32: ...
    @winrt_mixinmethod
    def HasKey(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> Windows.Foundation.Collections.IMapView[WinRT_String, WinRT_String]: ...
    @winrt_mixinmethod
    def Insert(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String, value: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def Remove(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String], key: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IMap[WinRT_String, WinRT_String]) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]) -> Windows.Foundation.Collections.IIterator[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, WinRT_String]]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Age = property(get_Age, put_Age)
    Allow = property(get_Allow, None)
    CacheControl = property(get_CacheControl, None)
    Connection = property(get_Connection, None)
    Date = property(get_Date, put_Date)
    Location = property(get_Location, put_Location)
    ProxyAuthenticate = property(get_ProxyAuthenticate, None)
    RetryAfter = property(get_RetryAfter, put_RetryAfter)
    TransferEncoding = property(get_TransferEncoding, None)
    WwwAuthenticate = property(get_WwwAuthenticate, None)
    Size = property(get_Size, None)
class HttpTransferCodingHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpTransferCodingHeaderValue'
    @winrt_factorymethod
    def Create(cls: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueFactory, input: WinRT_String) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValue: ...
    @winrt_mixinmethod
    def get_Parameters(self: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_mixinmethod
    def get_Value(self: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValue) -> WinRT_String: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    @winrt_classmethod
    def Parse(cls: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics, input: WinRT_String) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValue: ...
    @winrt_classmethod
    def TryParse(cls: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueStatics, input: WinRT_String, transferCodingHeaderValue: POINTER(Windows.Web.Http.Headers.HttpTransferCodingHeaderValue)) -> Boolean: ...
    Parameters = property(get_Parameters, None)
    Value = property(get_Value, None)
class HttpTransferCodingHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection'
    @winrt_mixinmethod
    def ParseAdd(self: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection, input: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TryParseAdd(self: Windows.Web.Http.Headers.IHttpTransferCodingHeaderValueCollection, input: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], index: UInt32) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValue: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue]) -> UInt32: ...
    @winrt_mixinmethod
    def GetView(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue]) -> Windows.Foundation.Collections.IVectorView[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue]: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], value: Windows.Web.Http.Headers.HttpTransferCodingHeaderValue, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def SetAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpTransferCodingHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def InsertAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], index: UInt32, value: Windows.Web.Http.Headers.HttpTransferCodingHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAt(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], index: UInt32) -> Void: ...
    @winrt_mixinmethod
    def Append(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], value: Windows.Web.Http.Headers.HttpTransferCodingHeaderValue) -> Void: ...
    @winrt_mixinmethod
    def RemoveAtEnd(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue]) -> Void: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], startIndex: UInt32, items: POINTER(Windows.Web.Http.Headers.HttpTransferCodingHeaderValue)) -> UInt32: ...
    @winrt_mixinmethod
    def ReplaceAll(self: Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue], items: POINTER(Windows.Web.Http.Headers.HttpTransferCodingHeaderValue)) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue]) -> Windows.Foundation.Collections.IIterator[Windows.Web.Http.Headers.HttpTransferCodingHeaderValue]: ...
    @winrt_mixinmethod
    def ToString(self: Windows.Foundation.IStringable) -> WinRT_String: ...
    Size = property(get_Size, None)
class IHttpCacheDirectiveHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('9a586b89-d5d0-4fbe-bd-9d-b5-b3-63-68-11-b4')
    @winrt_commethod(6)
    def get_MaxAge(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(7)
    def put_MaxAge(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(8)
    def get_MaxStale(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(9)
    def put_MaxStale(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(10)
    def get_MinFresh(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(11)
    def put_MinFresh(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(12)
    def get_SharedMaxAge(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(13)
    def put_SharedMaxAge(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(14)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(15)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
    MaxAge = property(get_MaxAge, put_MaxAge)
    MaxStale = property(get_MaxStale, put_MaxStale)
    MinFresh = property(get_MinFresh, put_MinFresh)
    SharedMaxAge = property(get_SharedMaxAge, put_SharedMaxAge)
class IHttpChallengeHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('393361af-0f7d-4820-9f-dd-a2-b9-56-ee-ae-ab')
    @winrt_commethod(6)
    def get_Parameters(self) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_commethod(7)
    def get_Scheme(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_Token(self) -> WinRT_String: ...
    Parameters = property(get_Parameters, None)
    Scheme = property(get_Scheme, None)
    Token = property(get_Token, None)
class IHttpChallengeHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('ca9e5f81-aee0-4353-a1-0b-e6-25-ba-bd-64-c2')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpChallengeHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('c452c451-d99c-40aa-93-99-90-ee-b9-8f-c6-13')
    @winrt_commethod(6)
    def CreateFromScheme(self, scheme: WinRT_String) -> Windows.Web.Http.Headers.HttpChallengeHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromSchemeWithToken(self, scheme: WinRT_String, token: WinRT_String) -> Windows.Web.Http.Headers.HttpChallengeHeaderValue: ...
class IHttpChallengeHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f3d38a72-fc01-4d01-a0-08-fc-b7-c4-59-d6-35')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpChallengeHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, challengeHeaderValue: POINTER(Windows.Web.Http.Headers.HttpChallengeHeaderValue)) -> Boolean: ...
class IHttpConnectionOptionHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('cb4af27a-4e90-45eb-8d-cd-fd-14-08-f4-c4-4f')
    @winrt_commethod(6)
    def get_Token(self) -> WinRT_String: ...
    Token = property(get_Token, None)
class IHttpConnectionOptionHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('e4f56c1d-5142-4e00-8e-0f-01-95-09-33-76-29')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpConnectionOptionHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('d93ccc1e-0b7d-4c3f-a5-8d-a2-a1-bd-ea-bc-0a')
    @winrt_commethod(6)
    def Create(self, token: WinRT_String) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue: ...
class IHttpConnectionOptionHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('aaa75d37-a946-4b1f-85-af-48-b6-8b-3c-50-bd')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, connectionOptionHeaderValue: POINTER(Windows.Web.Http.Headers.HttpConnectionOptionHeaderValue)) -> Boolean: ...
class IHttpContentCodingHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('bcf7f92a-9376-4d85-bc-cc-9f-4f-9a-ca-b4-34')
    @winrt_commethod(6)
    def get_ContentCoding(self) -> WinRT_String: ...
    ContentCoding = property(get_ContentCoding, None)
class IHttpContentCodingHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7d221721-a6db-436e-8e-83-91-59-61-92-81-9c')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpContentCodingHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('c53d2bd7-332b-4350-85-10-2e-67-a2-28-9a-5a')
    @winrt_commethod(6)
    def Create(self, contentCoding: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingHeaderValue: ...
class IHttpContentCodingHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('94d8602e-f9bf-42f7-aa-46-ed-27-2a-41-e2-12')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, contentCodingHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentCodingHeaderValue)) -> Boolean: ...
class IHttpContentCodingWithQualityHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('94531cd5-8b13-4d73-86-51-f7-6b-38-f8-84-95')
    @winrt_commethod(6)
    def get_ContentCoding(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Quality(self) -> Windows.Foundation.IReference[Double]: ...
    ContentCoding = property(get_ContentCoding, None)
    Quality = property(get_Quality, None)
class IHttpContentCodingWithQualityHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7c0d753e-e899-4378-b5-c8-41-2d-82-07-11-cc')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpContentCodingWithQualityHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('c45eee1a-c553-46fc-ad-e2-d7-5c-1d-53-df-7b')
    @winrt_commethod(6)
    def CreateFromValue(self, contentCoding: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromValueWithQuality(self, contentCoding: WinRT_String, quality: Double) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue: ...
class IHttpContentCodingWithQualityHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('e8c9357c-8f89-4801-8e-75-4c-9a-bf-c3-de-71')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, contentCodingWithQualityHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValue)) -> Boolean: ...
class IHttpContentDispositionHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f2a2eedc-2629-4b49-99-08-96-a1-68-e9-36-5e')
    @winrt_commethod(6)
    def get_DispositionType(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_DispositionType(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_FileName(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_FileName(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(10)
    def get_FileNameStar(self) -> WinRT_String: ...
    @winrt_commethod(11)
    def put_FileNameStar(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(12)
    def get_Name(self) -> WinRT_String: ...
    @winrt_commethod(13)
    def put_Name(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(14)
    def get_Parameters(self) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_commethod(15)
    def get_Size(self) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_commethod(16)
    def put_Size(self, value: Windows.Foundation.IReference[UInt64]) -> Void: ...
    DispositionType = property(get_DispositionType, put_DispositionType)
    FileName = property(get_FileName, put_FileName)
    FileNameStar = property(get_FileNameStar, put_FileNameStar)
    Name = property(get_Name, put_Name)
    Parameters = property(get_Parameters, None)
    Size = property(get_Size, put_Size)
class IHttpContentDispositionHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('9915bbc4-456c-4e81-82-95-b2-ab-3c-bc-f5-45')
    @winrt_commethod(6)
    def Create(self, dispositionType: WinRT_String) -> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue: ...
class IHttpContentDispositionHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('29c56067-5a37-46e4-b0-74-c5-17-7d-69-ca-66')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, contentDispositionHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentDispositionHeaderValue)) -> Boolean: ...
class IHttpContentHeaderCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('40612a44-47ae-4b7e-91-24-69-62-8b-64-aa-18')
    @winrt_commethod(6)
    def get_ContentDisposition(self) -> Windows.Web.Http.Headers.HttpContentDispositionHeaderValue: ...
    @winrt_commethod(7)
    def put_ContentDisposition(self, value: Windows.Web.Http.Headers.HttpContentDispositionHeaderValue) -> Void: ...
    @winrt_commethod(8)
    def get_ContentEncoding(self) -> Windows.Web.Http.Headers.HttpContentCodingHeaderValueCollection: ...
    @winrt_commethod(9)
    def get_ContentLanguage(self) -> Windows.Web.Http.Headers.HttpLanguageHeaderValueCollection: ...
    @winrt_commethod(10)
    def get_ContentLength(self) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_commethod(11)
    def put_ContentLength(self, value: Windows.Foundation.IReference[UInt64]) -> Void: ...
    @winrt_commethod(12)
    def get_ContentLocation(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(13)
    def put_ContentLocation(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(14)
    def get_ContentMD5(self) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_commethod(15)
    def put_ContentMD5(self, value: Windows.Storage.Streams.IBuffer) -> Void: ...
    @winrt_commethod(16)
    def get_ContentRange(self) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_commethod(17)
    def put_ContentRange(self, value: Windows.Web.Http.Headers.HttpContentRangeHeaderValue) -> Void: ...
    @winrt_commethod(18)
    def get_ContentType(self) -> Windows.Web.Http.Headers.HttpMediaTypeHeaderValue: ...
    @winrt_commethod(19)
    def put_ContentType(self, value: Windows.Web.Http.Headers.HttpMediaTypeHeaderValue) -> Void: ...
    @winrt_commethod(20)
    def get_Expires(self) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_commethod(21)
    def put_Expires(self, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_commethod(22)
    def get_LastModified(self) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_commethod(23)
    def put_LastModified(self, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_commethod(24)
    def Append(self, name: WinRT_String, value: WinRT_String) -> Void: ...
    @winrt_commethod(25)
    def TryAppendWithoutValidation(self, name: WinRT_String, value: WinRT_String) -> Boolean: ...
    ContentDisposition = property(get_ContentDisposition, put_ContentDisposition)
    ContentEncoding = property(get_ContentEncoding, None)
    ContentLanguage = property(get_ContentLanguage, None)
    ContentLength = property(get_ContentLength, put_ContentLength)
    ContentLocation = property(get_ContentLocation, put_ContentLocation)
    ContentMD5 = property(get_ContentMD5, put_ContentMD5)
    ContentRange = property(get_ContentRange, put_ContentRange)
    ContentType = property(get_ContentType, put_ContentType)
    Expires = property(get_Expires, put_Expires)
    LastModified = property(get_LastModified, put_LastModified)
class IHttpContentRangeHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('04d967d3-a4f6-495c-95-30-85-79-fc-ba-8a-a9')
    @winrt_commethod(6)
    def get_FirstBytePosition(self) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_commethod(7)
    def get_LastBytePosition(self) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_commethod(8)
    def get_Length(self) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_commethod(9)
    def get_Unit(self) -> WinRT_String: ...
    @winrt_commethod(10)
    def put_Unit(self, value: WinRT_String) -> Void: ...
    FirstBytePosition = property(get_FirstBytePosition, None)
    LastBytePosition = property(get_LastBytePosition, None)
    Length = property(get_Length, None)
    Unit = property(get_Unit, put_Unit)
class IHttpContentRangeHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('3f5bd691-a03c-4456-9a-6f-ef-27-ec-d0-3c-ae')
    @winrt_commethod(6)
    def CreateFromLength(self, length: UInt64) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromRange(self, from_: UInt64, to: UInt64) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_commethod(8)
    def CreateFromRangeWithLength(self, from_: UInt64, to: UInt64, length: UInt64) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
class IHttpContentRangeHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('80a346ca-174c-4fae-82-1c-13-4c-d2-94-aa-38')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpContentRangeHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, contentRangeHeaderValue: POINTER(Windows.Web.Http.Headers.HttpContentRangeHeaderValue)) -> Boolean: ...
class IHttpCookiePairHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('cbd46217-4b29-412b-bd-90-b3-d8-14-ab-8e-1b')
    @winrt_commethod(6)
    def get_Name(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Value(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def put_Value(self, value: WinRT_String) -> Void: ...
    Name = property(get_Name, None)
    Value = property(get_Value, put_Value)
class IHttpCookiePairHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f3f44350-581e-4ecc-9f-59-e5-07-d0-4f-06-e6')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpCookiePairHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('635e326f-146f-4f56-aa-21-2c-b7-d6-d5-8b-1e')
    @winrt_commethod(6)
    def CreateFromName(self, name: WinRT_String) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromNameWithValue(self, name: WinRT_String, value: WinRT_String) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValue: ...
class IHttpCookiePairHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('6e866d48-06af-4462-81-58-99-38-8d-5d-ca-81')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, cookiePairHeaderValue: POINTER(Windows.Web.Http.Headers.HttpCookiePairHeaderValue)) -> Boolean: ...
class IHttpCredentialsHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('c34cc3cb-542e-4177-a6-c7-b6-74-ce-19-3f-bf')
    @winrt_commethod(6)
    def get_Parameters(self) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_commethod(7)
    def get_Scheme(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_Token(self) -> WinRT_String: ...
    Parameters = property(get_Parameters, None)
    Scheme = property(get_Scheme, None)
    Token = property(get_Token, None)
class IHttpCredentialsHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f21d9e91-4d1c-4182-bf-d1-34-47-0a-62-f9-50')
    @winrt_commethod(6)
    def CreateFromScheme(self, scheme: WinRT_String) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromSchemeWithToken(self, scheme: WinRT_String, token: WinRT_String) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
class IHttpCredentialsHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('a69b2be6-ce8c-4443-a3-5a-1b-72-7b-13-10-36')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, credentialsHeaderValue: POINTER(Windows.Web.Http.Headers.HttpCredentialsHeaderValue)) -> Boolean: ...
class IHttpDateOrDeltaHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('eafcaa6a-c4dc-49e2-a2-7d-04-3a-df-58-67-a3')
    @winrt_commethod(6)
    def get_Date(self) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_commethod(7)
    def get_Delta(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    Date = property(get_Date, None)
    Delta = property(get_Delta, None)
class IHttpDateOrDeltaHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7c2659a8-6672-4e90-9a-9a-f3-97-66-f7-f5-76')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, dateOrDeltaHeaderValue: POINTER(Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue)) -> Boolean: ...
class IHttpExpectationHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('4ce585cd-3a99-43af-a2-e6-ec-23-2f-ea-96-58')
    @winrt_commethod(6)
    def get_Name(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Value(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def put_Value(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(9)
    def get_Parameters(self) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    Name = property(get_Name, None)
    Value = property(get_Value, put_Value)
    Parameters = property(get_Parameters, None)
class IHttpExpectationHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('e78521b3-a0e2-4ac4-9e-66-79-70-6c-b9-fd-58')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpExpectationHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('4ea275cb-d53e-4868-88-56-1e-21-a5-03-0d-c0')
    @winrt_commethod(6)
    def CreateFromName(self, name: WinRT_String) -> Windows.Web.Http.Headers.HttpExpectationHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromNameWithValue(self, name: WinRT_String, value: WinRT_String) -> Windows.Web.Http.Headers.HttpExpectationHeaderValue: ...
class IHttpExpectationHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('3019abe2-cfe5-473b-a5-7f-fb-a5-b1-4e-b2-57')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpExpectationHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, expectationHeaderValue: POINTER(Windows.Web.Http.Headers.HttpExpectationHeaderValue)) -> Boolean: ...
class IHttpLanguageHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('9ebd7ca3-8219-44f6-99-02-8c-56-df-d3-34-0c')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpLanguageRangeWithQualityHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7256e102-0080-4db4-a0-83-7d-e7-b2-e5-ba-4c')
    @winrt_commethod(6)
    def get_LanguageRange(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Quality(self) -> Windows.Foundation.IReference[Double]: ...
    LanguageRange = property(get_LanguageRange, None)
    Quality = property(get_Quality, None)
class IHttpLanguageRangeWithQualityHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('885d5abd-4b4f-480a-89-ce-8a-ed-ce-e6-e3-a0')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpLanguageRangeWithQualityHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7bb83970-780f-4c83-9f-e4-dc-30-87-f6-bd-55')
    @winrt_commethod(6)
    def CreateFromLanguageRange(self, languageRange: WinRT_String) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromLanguageRangeWithQuality(self, languageRange: WinRT_String, quality: Double) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue: ...
class IHttpLanguageRangeWithQualityHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('2541e146-f308-46f5-b6-95-42-f5-40-24-ec-68')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, languageRangeWithQualityHeaderValue: POINTER(Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValue)) -> Boolean: ...
class IHttpMediaTypeHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('16b28533-e728-4fcb-bd-b0-08-a4-31-a1-48-44')
    @winrt_commethod(6)
    def get_CharSet(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_CharSet(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_MediaType(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_MediaType(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(10)
    def get_Parameters(self) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    CharSet = property(get_CharSet, put_CharSet)
    MediaType = property(get_MediaType, put_MediaType)
    Parameters = property(get_Parameters, None)
class IHttpMediaTypeHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('bed747a8-cd17-42dd-93-67-ab-9c-5b-56-dd-7d')
    @winrt_commethod(6)
    def Create(self, mediaType: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeHeaderValue: ...
class IHttpMediaTypeHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('e04d83df-1d41-4d8c-a2-de-6f-d2-ed-87-39-9b')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, mediaTypeHeaderValue: POINTER(Windows.Web.Http.Headers.HttpMediaTypeHeaderValue)) -> Boolean: ...
class IHttpMediaTypeWithQualityHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('188d5e32-76be-44a0-b1-cd-20-74-bd-ed-2d-de')
    @winrt_commethod(6)
    def get_CharSet(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_CharSet(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_MediaType(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_MediaType(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(10)
    def get_Parameters(self) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_commethod(11)
    def get_Quality(self) -> Windows.Foundation.IReference[Double]: ...
    @winrt_commethod(12)
    def put_Quality(self, value: Windows.Foundation.IReference[Double]) -> Void: ...
    CharSet = property(get_CharSet, put_CharSet)
    MediaType = property(get_MediaType, put_MediaType)
    Parameters = property(get_Parameters, None)
    Quality = property(get_Quality, put_Quality)
class IHttpMediaTypeWithQualityHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('3c0c6b73-1342-4587-a0-56-18-d0-2f-f6-71-65')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpMediaTypeWithQualityHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('4c6d20f4-9457-44e6-a3-23-d1-22-b9-58-78-0b')
    @winrt_commethod(6)
    def CreateFromMediaType(self, mediaType: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromMediaTypeWithQuality(self, mediaType: WinRT_String, quality: Double) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue: ...
class IHttpMediaTypeWithQualityHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('5b070cd9-b560-4fc8-98-35-7e-6c-0a-65-7b-24')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, mediaTypeWithQualityHeaderValue: POINTER(Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValue)) -> Boolean: ...
class IHttpMethodHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('43bc3ff4-6119-4adf-93-8c-34-bf-ff-cf-92-ed')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpNameValueHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('d8ba7463-5b9a-4d1b-93-f9-aa-5b-44-ec-fd-df')
    @winrt_commethod(6)
    def get_Name(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Value(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def put_Value(self, value: WinRT_String) -> Void: ...
    Name = property(get_Name, None)
    Value = property(get_Value, put_Value)
class IHttpNameValueHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('770e2267-cbf8-4736-a9-25-93-fb-e1-0c-7c-a8')
    @winrt_commethod(6)
    def CreateFromName(self, name: WinRT_String) -> Windows.Web.Http.Headers.HttpNameValueHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromNameWithValue(self, name: WinRT_String, value: WinRT_String) -> Windows.Web.Http.Headers.HttpNameValueHeaderValue: ...
class IHttpNameValueHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('ffd4030f-1130-4152-86-59-25-69-09-a9-d1-15')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpNameValueHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, nameValueHeaderValue: POINTER(Windows.Web.Http.Headers.HttpNameValueHeaderValue)) -> Boolean: ...
class IHttpProductHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f4feee03-ebd4-4160-b9-ff-80-7c-51-83-b6-e6')
    @winrt_commethod(6)
    def get_Name(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Version(self) -> WinRT_String: ...
    Name = property(get_Name, None)
    Version = property(get_Version, None)
class IHttpProductHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('611aa4f5-82bc-42fb-97-7b-dc-00-53-6e-5e-86')
    @winrt_commethod(6)
    def CreateFromName(self, productName: WinRT_String) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromNameWithVersion(self, productName: WinRT_String, productVersion: WinRT_String) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
class IHttpProductHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('90c33e29-befc-4337-be-62-49-f0-97-97-5f-53')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, productHeaderValue: POINTER(Windows.Web.Http.Headers.HttpProductHeaderValue)) -> Boolean: ...
class IHttpProductInfoHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('1b1a8732-4c35-486a-96-6f-64-64-89-19-8e-4d')
    @winrt_commethod(6)
    def get_Product(self) -> Windows.Web.Http.Headers.HttpProductHeaderValue: ...
    @winrt_commethod(7)
    def get_Comment(self) -> WinRT_String: ...
    Product = property(get_Product, None)
    Comment = property(get_Comment, None)
class IHttpProductInfoHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('877df74a-d69b-44f8-ad-4f-45-3a-f9-c4-2e-d0')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpProductInfoHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('24220fbe-eabe-4464-b4-60-ec-01-0b-7c-41-e2')
    @winrt_commethod(6)
    def CreateFromComment(self, productComment: WinRT_String) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValue: ...
    @winrt_commethod(7)
    def CreateFromNameWithVersion(self, productName: WinRT_String, productVersion: WinRT_String) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValue: ...
class IHttpProductInfoHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('db7fd857-327a-4e73-81-e5-70-59-a3-02-b0-42')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, productInfoHeaderValue: POINTER(Windows.Web.Http.Headers.HttpProductInfoHeaderValue)) -> Boolean: ...
class IHttpRequestHeaderCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('af40329b-b544-469b-86-b9-ac-3d-46-6f-ea-36')
    @winrt_commethod(6)
    def get_Accept(self) -> Windows.Web.Http.Headers.HttpMediaTypeWithQualityHeaderValueCollection: ...
    @winrt_commethod(7)
    def get_AcceptEncoding(self) -> Windows.Web.Http.Headers.HttpContentCodingWithQualityHeaderValueCollection: ...
    @winrt_commethod(8)
    def get_AcceptLanguage(self) -> Windows.Web.Http.Headers.HttpLanguageRangeWithQualityHeaderValueCollection: ...
    @winrt_commethod(9)
    def get_Authorization(self) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_commethod(10)
    def put_Authorization(self, value: Windows.Web.Http.Headers.HttpCredentialsHeaderValue) -> Void: ...
    @winrt_commethod(11)
    def get_CacheControl(self) -> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection: ...
    @winrt_commethod(12)
    def get_Connection(self) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection: ...
    @winrt_commethod(13)
    def get_Cookie(self) -> Windows.Web.Http.Headers.HttpCookiePairHeaderValueCollection: ...
    @winrt_commethod(14)
    def get_Date(self) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_commethod(15)
    def put_Date(self, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_commethod(16)
    def get_Expect(self) -> Windows.Web.Http.Headers.HttpExpectationHeaderValueCollection: ...
    @winrt_commethod(17)
    def get_From(self) -> WinRT_String: ...
    @winrt_commethod(18)
    def put_From(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(19)
    def get_Host(self) -> Windows.Networking.HostName: ...
    @winrt_commethod(20)
    def put_Host(self, value: Windows.Networking.HostName) -> Void: ...
    @winrt_commethod(21)
    def get_IfModifiedSince(self) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_commethod(22)
    def put_IfModifiedSince(self, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_commethod(23)
    def get_IfUnmodifiedSince(self) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_commethod(24)
    def put_IfUnmodifiedSince(self, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_commethod(25)
    def get_MaxForwards(self) -> Windows.Foundation.IReference[UInt32]: ...
    @winrt_commethod(26)
    def put_MaxForwards(self, value: Windows.Foundation.IReference[UInt32]) -> Void: ...
    @winrt_commethod(27)
    def get_ProxyAuthorization(self) -> Windows.Web.Http.Headers.HttpCredentialsHeaderValue: ...
    @winrt_commethod(28)
    def put_ProxyAuthorization(self, value: Windows.Web.Http.Headers.HttpCredentialsHeaderValue) -> Void: ...
    @winrt_commethod(29)
    def get_Referer(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(30)
    def put_Referer(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(31)
    def get_TransferEncoding(self) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection: ...
    @winrt_commethod(32)
    def get_UserAgent(self) -> Windows.Web.Http.Headers.HttpProductInfoHeaderValueCollection: ...
    @winrt_commethod(33)
    def Append(self, name: WinRT_String, value: WinRT_String) -> Void: ...
    @winrt_commethod(34)
    def TryAppendWithoutValidation(self, name: WinRT_String, value: WinRT_String) -> Boolean: ...
    Accept = property(get_Accept, None)
    AcceptEncoding = property(get_AcceptEncoding, None)
    AcceptLanguage = property(get_AcceptLanguage, None)
    Authorization = property(get_Authorization, put_Authorization)
    CacheControl = property(get_CacheControl, None)
    Connection = property(get_Connection, None)
    Cookie = property(get_Cookie, None)
    Date = property(get_Date, put_Date)
    Expect = property(get_Expect, None)
    From = property(get_From, put_From)
    Host = property(get_Host, put_Host)
    IfModifiedSince = property(get_IfModifiedSince, put_IfModifiedSince)
    IfUnmodifiedSince = property(get_IfUnmodifiedSince, put_IfUnmodifiedSince)
    MaxForwards = property(get_MaxForwards, put_MaxForwards)
    ProxyAuthorization = property(get_ProxyAuthorization, put_ProxyAuthorization)
    Referer = property(get_Referer, put_Referer)
    TransferEncoding = property(get_TransferEncoding, None)
    UserAgent = property(get_UserAgent, None)
class IHttpResponseHeaderCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7a990969-fa3f-41ed-aa-c6-bf-95-79-75-c1-6b')
    @winrt_commethod(6)
    def get_Age(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(7)
    def put_Age(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(8)
    def get_Allow(self) -> Windows.Web.Http.Headers.HttpMethodHeaderValueCollection: ...
    @winrt_commethod(9)
    def get_CacheControl(self) -> Windows.Web.Http.Headers.HttpCacheDirectiveHeaderValueCollection: ...
    @winrt_commethod(10)
    def get_Connection(self) -> Windows.Web.Http.Headers.HttpConnectionOptionHeaderValueCollection: ...
    @winrt_commethod(11)
    def get_Date(self) -> Windows.Foundation.IReference[Windows.Foundation.DateTime]: ...
    @winrt_commethod(12)
    def put_Date(self, value: Windows.Foundation.IReference[Windows.Foundation.DateTime]) -> Void: ...
    @winrt_commethod(13)
    def get_Location(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(14)
    def put_Location(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(15)
    def get_ProxyAuthenticate(self) -> Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection: ...
    @winrt_commethod(16)
    def get_RetryAfter(self) -> Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue: ...
    @winrt_commethod(17)
    def put_RetryAfter(self, value: Windows.Web.Http.Headers.HttpDateOrDeltaHeaderValue) -> Void: ...
    @winrt_commethod(18)
    def get_TransferEncoding(self) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValueCollection: ...
    @winrt_commethod(19)
    def get_WwwAuthenticate(self) -> Windows.Web.Http.Headers.HttpChallengeHeaderValueCollection: ...
    @winrt_commethod(20)
    def Append(self, name: WinRT_String, value: WinRT_String) -> Void: ...
    @winrt_commethod(21)
    def TryAppendWithoutValidation(self, name: WinRT_String, value: WinRT_String) -> Boolean: ...
    Age = property(get_Age, put_Age)
    Allow = property(get_Allow, None)
    CacheControl = property(get_CacheControl, None)
    Connection = property(get_Connection, None)
    Date = property(get_Date, put_Date)
    Location = property(get_Location, put_Location)
    ProxyAuthenticate = property(get_ProxyAuthenticate, None)
    RetryAfter = property(get_RetryAfter, put_RetryAfter)
    TransferEncoding = property(get_TransferEncoding, None)
    WwwAuthenticate = property(get_WwwAuthenticate, None)
class IHttpTransferCodingHeaderValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('436f32f9-3ded-42bd-b3-8a-54-96-a2-51-1c-e6')
    @winrt_commethod(6)
    def get_Parameters(self) -> Windows.Foundation.Collections.IVector[Windows.Web.Http.Headers.HttpNameValueHeaderValue]: ...
    @winrt_commethod(7)
    def get_Value(self) -> WinRT_String: ...
    Parameters = property(get_Parameters, None)
    Value = property(get_Value, None)
class IHttpTransferCodingHeaderValueCollection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('202c8c34-2c03-49b8-96-65-73-e2-7c-b2-fc-79')
    @winrt_commethod(6)
    def ParseAdd(self, input: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def TryParseAdd(self, input: WinRT_String) -> Boolean: ...
class IHttpTransferCodingHeaderValueFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('bb62dffc-e361-4f08-8e-4f-c9-e7-23-de-70-3b')
    @winrt_commethod(6)
    def Create(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValue: ...
class IHttpTransferCodingHeaderValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('6ab8892a-1a98-4d32-a9-06-74-70-a9-87-5c-e5')
    @winrt_commethod(6)
    def Parse(self, input: WinRT_String) -> Windows.Web.Http.Headers.HttpTransferCodingHeaderValue: ...
    @winrt_commethod(7)
    def TryParse(self, input: WinRT_String, transferCodingHeaderValue: POINTER(Windows.Web.Http.Headers.HttpTransferCodingHeaderValue)) -> Boolean: ...
make_head(_module, 'HttpCacheDirectiveHeaderValueCollection')
make_head(_module, 'HttpChallengeHeaderValue')
make_head(_module, 'HttpChallengeHeaderValueCollection')
make_head(_module, 'HttpConnectionOptionHeaderValue')
make_head(_module, 'HttpConnectionOptionHeaderValueCollection')
make_head(_module, 'HttpContentCodingHeaderValue')
make_head(_module, 'HttpContentCodingHeaderValueCollection')
make_head(_module, 'HttpContentCodingWithQualityHeaderValue')
make_head(_module, 'HttpContentCodingWithQualityHeaderValueCollection')
make_head(_module, 'HttpContentDispositionHeaderValue')
make_head(_module, 'HttpContentHeaderCollection')
make_head(_module, 'HttpContentRangeHeaderValue')
make_head(_module, 'HttpCookiePairHeaderValue')
make_head(_module, 'HttpCookiePairHeaderValueCollection')
make_head(_module, 'HttpCredentialsHeaderValue')
make_head(_module, 'HttpDateOrDeltaHeaderValue')
make_head(_module, 'HttpExpectationHeaderValue')
make_head(_module, 'HttpExpectationHeaderValueCollection')
make_head(_module, 'HttpLanguageHeaderValueCollection')
make_head(_module, 'HttpLanguageRangeWithQualityHeaderValue')
make_head(_module, 'HttpLanguageRangeWithQualityHeaderValueCollection')
make_head(_module, 'HttpMediaTypeHeaderValue')
make_head(_module, 'HttpMediaTypeWithQualityHeaderValue')
make_head(_module, 'HttpMediaTypeWithQualityHeaderValueCollection')
make_head(_module, 'HttpMethodHeaderValueCollection')
make_head(_module, 'HttpNameValueHeaderValue')
make_head(_module, 'HttpProductHeaderValue')
make_head(_module, 'HttpProductInfoHeaderValue')
make_head(_module, 'HttpProductInfoHeaderValueCollection')
make_head(_module, 'HttpRequestHeaderCollection')
make_head(_module, 'HttpResponseHeaderCollection')
make_head(_module, 'HttpTransferCodingHeaderValue')
make_head(_module, 'HttpTransferCodingHeaderValueCollection')
make_head(_module, 'IHttpCacheDirectiveHeaderValueCollection')
make_head(_module, 'IHttpChallengeHeaderValue')
make_head(_module, 'IHttpChallengeHeaderValueCollection')
make_head(_module, 'IHttpChallengeHeaderValueFactory')
make_head(_module, 'IHttpChallengeHeaderValueStatics')
make_head(_module, 'IHttpConnectionOptionHeaderValue')
make_head(_module, 'IHttpConnectionOptionHeaderValueCollection')
make_head(_module, 'IHttpConnectionOptionHeaderValueFactory')
make_head(_module, 'IHttpConnectionOptionHeaderValueStatics')
make_head(_module, 'IHttpContentCodingHeaderValue')
make_head(_module, 'IHttpContentCodingHeaderValueCollection')
make_head(_module, 'IHttpContentCodingHeaderValueFactory')
make_head(_module, 'IHttpContentCodingHeaderValueStatics')
make_head(_module, 'IHttpContentCodingWithQualityHeaderValue')
make_head(_module, 'IHttpContentCodingWithQualityHeaderValueCollection')
make_head(_module, 'IHttpContentCodingWithQualityHeaderValueFactory')
make_head(_module, 'IHttpContentCodingWithQualityHeaderValueStatics')
make_head(_module, 'IHttpContentDispositionHeaderValue')
make_head(_module, 'IHttpContentDispositionHeaderValueFactory')
make_head(_module, 'IHttpContentDispositionHeaderValueStatics')
make_head(_module, 'IHttpContentHeaderCollection')
make_head(_module, 'IHttpContentRangeHeaderValue')
make_head(_module, 'IHttpContentRangeHeaderValueFactory')
make_head(_module, 'IHttpContentRangeHeaderValueStatics')
make_head(_module, 'IHttpCookiePairHeaderValue')
make_head(_module, 'IHttpCookiePairHeaderValueCollection')
make_head(_module, 'IHttpCookiePairHeaderValueFactory')
make_head(_module, 'IHttpCookiePairHeaderValueStatics')
make_head(_module, 'IHttpCredentialsHeaderValue')
make_head(_module, 'IHttpCredentialsHeaderValueFactory')
make_head(_module, 'IHttpCredentialsHeaderValueStatics')
make_head(_module, 'IHttpDateOrDeltaHeaderValue')
make_head(_module, 'IHttpDateOrDeltaHeaderValueStatics')
make_head(_module, 'IHttpExpectationHeaderValue')
make_head(_module, 'IHttpExpectationHeaderValueCollection')
make_head(_module, 'IHttpExpectationHeaderValueFactory')
make_head(_module, 'IHttpExpectationHeaderValueStatics')
make_head(_module, 'IHttpLanguageHeaderValueCollection')
make_head(_module, 'IHttpLanguageRangeWithQualityHeaderValue')
make_head(_module, 'IHttpLanguageRangeWithQualityHeaderValueCollection')
make_head(_module, 'IHttpLanguageRangeWithQualityHeaderValueFactory')
make_head(_module, 'IHttpLanguageRangeWithQualityHeaderValueStatics')
make_head(_module, 'IHttpMediaTypeHeaderValue')
make_head(_module, 'IHttpMediaTypeHeaderValueFactory')
make_head(_module, 'IHttpMediaTypeHeaderValueStatics')
make_head(_module, 'IHttpMediaTypeWithQualityHeaderValue')
make_head(_module, 'IHttpMediaTypeWithQualityHeaderValueCollection')
make_head(_module, 'IHttpMediaTypeWithQualityHeaderValueFactory')
make_head(_module, 'IHttpMediaTypeWithQualityHeaderValueStatics')
make_head(_module, 'IHttpMethodHeaderValueCollection')
make_head(_module, 'IHttpNameValueHeaderValue')
make_head(_module, 'IHttpNameValueHeaderValueFactory')
make_head(_module, 'IHttpNameValueHeaderValueStatics')
make_head(_module, 'IHttpProductHeaderValue')
make_head(_module, 'IHttpProductHeaderValueFactory')
make_head(_module, 'IHttpProductHeaderValueStatics')
make_head(_module, 'IHttpProductInfoHeaderValue')
make_head(_module, 'IHttpProductInfoHeaderValueCollection')
make_head(_module, 'IHttpProductInfoHeaderValueFactory')
make_head(_module, 'IHttpProductInfoHeaderValueStatics')
make_head(_module, 'IHttpRequestHeaderCollection')
make_head(_module, 'IHttpResponseHeaderCollection')
make_head(_module, 'IHttpTransferCodingHeaderValue')
make_head(_module, 'IHttpTransferCodingHeaderValueCollection')
make_head(_module, 'IHttpTransferCodingHeaderValueFactory')
make_head(_module, 'IHttpTransferCodingHeaderValueStatics')
