from __future__ import annotations
from ctypes import c_void_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from typing import Generic, TypeVar
K = TypeVar('T')
T = TypeVar('T')
V = TypeVar('V')
TProgress = TypeVar('TProgress')
TResult = TypeVar('TResult')
TSender = TypeVar('TSender')
from Windows import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
from Windows._winrt import WinRT_String, winrt_commethod, winrt_mixinmethod, winrt_classmethod, winrt_factorymethod, winrt_activatemethod
import Windows.Win32.System.WinRT
import Windows.Devices.Enumeration
import Windows.Foundation
import Windows.Foundation.Collections
import Windows.Foundation.Numerics
import Windows.Graphics.DirectX.Direct3D11
import Windows.Media
import Windows.Media.Audio
import Windows.Media.Casting
import Windows.Media.Core
import Windows.Media.MediaProperties
import Windows.Media.Playback
import Windows.Media.Protection
import Windows.Storage
import Windows.Storage.Streams
import Windows.UI.Composition
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
AutoLoadedDisplayPropertyKind = Int32
AutoLoadedDisplayPropertyKind_None: AutoLoadedDisplayPropertyKind = 0
AutoLoadedDisplayPropertyKind_MusicOrVideo: AutoLoadedDisplayPropertyKind = 1
AutoLoadedDisplayPropertyKind_Music: AutoLoadedDisplayPropertyKind = 2
AutoLoadedDisplayPropertyKind_Video: AutoLoadedDisplayPropertyKind = 3
class BackgroundMediaPlayer(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    @winrt_classmethod
    def get_Current(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_classmethod
    def add_MessageReceivedFromBackground(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics, value: Windows.Foundation.EventHandler[Windows.Media.Playback.MediaPlayerDataReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_classmethod
    def remove_MessageReceivedFromBackground(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_classmethod
    def add_MessageReceivedFromForeground(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics, value: Windows.Foundation.EventHandler[Windows.Media.Playback.MediaPlayerDataReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_classmethod
    def remove_MessageReceivedFromForeground(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_classmethod
    def SendMessageToBackground(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics, value: Windows.Foundation.Collections.ValueSet) -> Void: ...
    @winrt_classmethod
    def SendMessageToForeground(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics, value: Windows.Foundation.Collections.ValueSet) -> Void: ...
    @winrt_classmethod
    def IsMediaPlaying(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics) -> Boolean: ...
    @winrt_classmethod
    def Shutdown(cls: Windows.Media.Playback.IBackgroundMediaPlayerStatics) -> Void: ...
    Current = property(get_Current, None)
class CurrentMediaPlaybackItemChangedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.ICurrentMediaPlaybackItemChangedEventArgs
    _classid_ = 'Windows.Media.Playback.CurrentMediaPlaybackItemChangedEventArgs'
    @winrt_mixinmethod
    def get_NewItem(self: Windows.Media.Playback.ICurrentMediaPlaybackItemChangedEventArgs) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def get_OldItem(self: Windows.Media.Playback.ICurrentMediaPlaybackItemChangedEventArgs) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def get_Reason(self: Windows.Media.Playback.ICurrentMediaPlaybackItemChangedEventArgs2) -> Windows.Media.Playback.MediaPlaybackItemChangedReason: ...
    NewItem = property(get_NewItem, None)
    OldItem = property(get_OldItem, None)
    Reason = property(get_Reason, None)
FailedMediaStreamKind = Int32
FailedMediaStreamKind_Unknown: FailedMediaStreamKind = 0
FailedMediaStreamKind_Audio: FailedMediaStreamKind = 1
FailedMediaStreamKind_Video: FailedMediaStreamKind = 2
class IBackgroundMediaPlayerStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{856ddbc1-55f7-471f-a0f2-68ac4c904592}')
    @winrt_commethod(6)
    def get_Current(self) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_commethod(7)
    def add_MessageReceivedFromBackground(self, value: Windows.Foundation.EventHandler[Windows.Media.Playback.MediaPlayerDataReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(8)
    def remove_MessageReceivedFromBackground(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(9)
    def add_MessageReceivedFromForeground(self, value: Windows.Foundation.EventHandler[Windows.Media.Playback.MediaPlayerDataReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(10)
    def remove_MessageReceivedFromForeground(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(11)
    def SendMessageToBackground(self, value: Windows.Foundation.Collections.ValueSet) -> Void: ...
    @winrt_commethod(12)
    def SendMessageToForeground(self, value: Windows.Foundation.Collections.ValueSet) -> Void: ...
    @winrt_commethod(13)
    def IsMediaPlaying(self) -> Boolean: ...
    @winrt_commethod(14)
    def Shutdown(self) -> Void: ...
    Current = property(get_Current, None)
class ICurrentMediaPlaybackItemChangedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{1743a892-5c43-4a15-967a-572d2d0f26c6}')
    @winrt_commethod(6)
    def get_NewItem(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(7)
    def get_OldItem(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    NewItem = property(get_NewItem, None)
    OldItem = property(get_OldItem, None)
class ICurrentMediaPlaybackItemChangedEventArgs2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{1d80a51e-996e-40a9-be48-e66ec90b2b7d}')
    @winrt_commethod(6)
    def get_Reason(self) -> Windows.Media.Playback.MediaPlaybackItemChangedReason: ...
    Reason = property(get_Reason, None)
class IMediaBreak(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{714be270-0def-4ebc-a489-6b34930e1558}')
    @winrt_commethod(6)
    def get_PlaybackList(self) -> Windows.Media.Playback.MediaPlaybackList: ...
    @winrt_commethod(7)
    def get_PresentationPosition(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(8)
    def get_InsertionMethod(self) -> Windows.Media.Playback.MediaBreakInsertionMethod: ...
    @winrt_commethod(9)
    def get_CustomProperties(self) -> Windows.Foundation.Collections.ValueSet: ...
    @winrt_commethod(10)
    def get_CanStart(self) -> Boolean: ...
    @winrt_commethod(11)
    def put_CanStart(self, value: Boolean) -> Void: ...
    PlaybackList = property(get_PlaybackList, None)
    PresentationPosition = property(get_PresentationPosition, None)
    InsertionMethod = property(get_InsertionMethod, None)
    CustomProperties = property(get_CustomProperties, None)
    CanStart = property(get_CanStart, put_CanStart)
class IMediaBreakEndedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{32b93276-1c5d-4fee-8732-236dc3a88580}')
    @winrt_commethod(6)
    def get_MediaBreak(self) -> Windows.Media.Playback.MediaBreak: ...
    MediaBreak = property(get_MediaBreak, None)
class IMediaBreakFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{4516e002-18e0-4079-8b5f-d33495c15d2e}')
    @winrt_commethod(6)
    def Create(self, insertionMethod: Windows.Media.Playback.MediaBreakInsertionMethod) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_commethod(7)
    def CreateWithPresentationPosition(self, insertionMethod: Windows.Media.Playback.MediaBreakInsertionMethod, presentationPosition: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.MediaBreak: ...
class IMediaBreakManager(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{a854ddb1-feb4-4d9b-9d97-0fdbe58e5e39}')
    @winrt_commethod(6)
    def add_BreaksSeekedOver(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakSeekedOverEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_BreaksSeekedOver(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def add_BreakStarted(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakStartedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_BreakStarted(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(10)
    def add_BreakEnded(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakEndedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(11)
    def remove_BreakEnded(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(12)
    def add_BreakSkipped(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakSkippedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(13)
    def remove_BreakSkipped(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(14)
    def get_CurrentBreak(self) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_commethod(15)
    def get_PlaybackSession(self) -> Windows.Media.Playback.MediaPlaybackSession: ...
    @winrt_commethod(16)
    def PlayBreak(self, value: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_commethod(17)
    def SkipCurrentBreak(self) -> Void: ...
    CurrentBreak = property(get_CurrentBreak, None)
    PlaybackSession = property(get_PlaybackSession, None)
class IMediaBreakSchedule(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{a19a5813-98b6-41d8-83da-f971d22b7bba}')
    @winrt_commethod(6)
    def add_ScheduleChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakSchedule, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_ScheduleChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def InsertMidrollBreak(self, mediaBreak: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_commethod(9)
    def RemoveMidrollBreak(self, mediaBreak: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_commethod(10)
    def get_MidrollBreaks(self) -> Windows.Foundation.Collections.IVectorView[Windows.Media.Playback.MediaBreak]: ...
    @winrt_commethod(11)
    def put_PrerollBreak(self, value: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_commethod(12)
    def get_PrerollBreak(self) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_commethod(13)
    def put_PostrollBreak(self, value: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_commethod(14)
    def get_PostrollBreak(self) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_commethod(15)
    def get_PlaybackItem(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    MidrollBreaks = property(get_MidrollBreaks, None)
    PrerollBreak = property(get_PrerollBreak, put_PrerollBreak)
    PostrollBreak = property(get_PostrollBreak, put_PostrollBreak)
    PlaybackItem = property(get_PlaybackItem, None)
class IMediaBreakSeekedOverEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{e5aa6746-0606-4492-b9d3-c3c8fde0a4ea}')
    @winrt_commethod(6)
    def get_SeekedOverBreaks(self) -> Windows.Foundation.Collections.IVectorView[Windows.Media.Playback.MediaBreak]: ...
    @winrt_commethod(7)
    def get_OldPosition(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(8)
    def get_NewPosition(self) -> Windows.Foundation.TimeSpan: ...
    SeekedOverBreaks = property(get_SeekedOverBreaks, None)
    OldPosition = property(get_OldPosition, None)
    NewPosition = property(get_NewPosition, None)
class IMediaBreakSkippedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{6ee94c05-2f54-4a3e-a3ab-24c3b270b4a3}')
    @winrt_commethod(6)
    def get_MediaBreak(self) -> Windows.Media.Playback.MediaBreak: ...
    MediaBreak = property(get_MediaBreak, None)
class IMediaBreakStartedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{a87efe71-dfd4-454a-956e-0a4a648395f8}')
    @winrt_commethod(6)
    def get_MediaBreak(self) -> Windows.Media.Playback.MediaBreak: ...
    MediaBreak = property(get_MediaBreak, None)
class IMediaEnginePlaybackSource(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{5c1d0ba7-3856-48b9-8dc6-244bf107bf8c}')
    @winrt_commethod(6)
    def get_CurrentItem(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(7)
    def SetPlaybackSource(self, source: Windows.Media.Playback.IMediaPlaybackSource) -> Void: ...
    CurrentItem = property(get_CurrentItem, None)
class IMediaItemDisplayProperties(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{1e3c1b48-7097-4384-a217-c1291dfa8c16}')
    @winrt_commethod(6)
    def get_Type(self) -> Windows.Media.MediaPlaybackType: ...
    @winrt_commethod(7)
    def put_Type(self, value: Windows.Media.MediaPlaybackType) -> Void: ...
    @winrt_commethod(8)
    def get_MusicProperties(self) -> Windows.Media.MusicDisplayProperties: ...
    @winrt_commethod(9)
    def get_VideoProperties(self) -> Windows.Media.VideoDisplayProperties: ...
    @winrt_commethod(10)
    def get_Thumbnail(self) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_commethod(11)
    def put_Thumbnail(self, value: Windows.Storage.Streams.RandomAccessStreamReference) -> Void: ...
    @winrt_commethod(12)
    def ClearAll(self) -> Void: ...
    Type = property(get_Type, put_Type)
    MusicProperties = property(get_MusicProperties, None)
    VideoProperties = property(get_VideoProperties, None)
    Thumbnail = property(get_Thumbnail, put_Thumbnail)
class IMediaPlaybackCommandManager(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{5acee5a6-5cb6-4a5a-8521-cc86b1c1ed37}')
    @winrt_commethod(6)
    def get_IsEnabled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_IsEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_MediaPlayer(self) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_commethod(9)
    def get_PlayBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(10)
    def get_PauseBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(11)
    def get_NextBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(12)
    def get_PreviousBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(13)
    def get_FastForwardBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(14)
    def get_RewindBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(15)
    def get_ShuffleBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(16)
    def get_AutoRepeatModeBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(17)
    def get_PositionBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(18)
    def get_RateBehavior(self) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_commethod(19)
    def add_PlayReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPlayReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(20)
    def remove_PlayReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(21)
    def add_PauseReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPauseReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(22)
    def remove_PauseReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(23)
    def add_NextReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerNextReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(24)
    def remove_NextReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(25)
    def add_PreviousReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPreviousReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(26)
    def remove_PreviousReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(27)
    def add_FastForwardReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerFastForwardReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(28)
    def remove_FastForwardReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(29)
    def add_RewindReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerRewindReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(30)
    def remove_RewindReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(31)
    def add_ShuffleReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerShuffleReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(32)
    def remove_ShuffleReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(33)
    def add_AutoRepeatModeReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(34)
    def remove_AutoRepeatModeReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(35)
    def add_PositionReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPositionReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(36)
    def remove_PositionReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(37)
    def add_RateReceived(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerRateReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(38)
    def remove_RateReceived(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
    MediaPlayer = property(get_MediaPlayer, None)
    PlayBehavior = property(get_PlayBehavior, None)
    PauseBehavior = property(get_PauseBehavior, None)
    NextBehavior = property(get_NextBehavior, None)
    PreviousBehavior = property(get_PreviousBehavior, None)
    FastForwardBehavior = property(get_FastForwardBehavior, None)
    RewindBehavior = property(get_RewindBehavior, None)
    ShuffleBehavior = property(get_ShuffleBehavior, None)
    AutoRepeatModeBehavior = property(get_AutoRepeatModeBehavior, None)
    PositionBehavior = property(get_PositionBehavior, None)
    RateBehavior = property(get_RateBehavior, None)
class IMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{3d6f4f23-5230-4411-a0e9-bad94c2a045c}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_AutoRepeatMode(self) -> Windows.Media.MediaPlaybackAutoRepeatMode: ...
    @winrt_commethod(9)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    AutoRepeatMode = property(get_AutoRepeatMode, None)
class IMediaPlaybackCommandManagerCommandBehavior(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{786c1e78-ce78-4a10-afd6-843fcbb90c2e}')
    @winrt_commethod(6)
    def get_CommandManager(self) -> Windows.Media.Playback.MediaPlaybackCommandManager: ...
    @winrt_commethod(7)
    def get_IsEnabled(self) -> Boolean: ...
    @winrt_commethod(8)
    def get_EnablingRule(self) -> Windows.Media.Playback.MediaCommandEnablingRule: ...
    @winrt_commethod(9)
    def put_EnablingRule(self, value: Windows.Media.Playback.MediaCommandEnablingRule) -> Void: ...
    @winrt_commethod(10)
    def add_IsEnabledChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(11)
    def remove_IsEnabledChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    CommandManager = property(get_CommandManager, None)
    IsEnabled = property(get_IsEnabled, None)
    EnablingRule = property(get_EnablingRule, put_EnablingRule)
class IMediaPlaybackCommandManagerFastForwardReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{30f064d9-b491-4d0a-bc21-3098bd1332e9}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class IMediaPlaybackCommandManagerNextReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{e1504433-a2b0-45d4-b9de-5f42ac14a839}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class IMediaPlaybackCommandManagerPauseReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{5ceccd1c-c25c-4221-b16c-c3c98ce012d6}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class IMediaPlaybackCommandManagerPlayReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{9af0004e-578b-4c56-a006-16159d888a48}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class IMediaPlaybackCommandManagerPositionReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{5591a754-d627-4bdd-a90d-86a015b24902}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_Position(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    Position = property(get_Position, None)
class IMediaPlaybackCommandManagerPreviousReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{525e3081-4632-4f76-99b1-d771623f6287}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class IMediaPlaybackCommandManagerRateReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{18ea3939-4a16-4169-8b05-3eb9f5ff78eb}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_PlaybackRate(self) -> Double: ...
    @winrt_commethod(9)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    PlaybackRate = property(get_PlaybackRate, None)
class IMediaPlaybackCommandManagerRewindReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{9f085947-a3c0-425d-aaef-97ba7898b141}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class IMediaPlaybackCommandManagerShuffleReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{50a05cef-63ee-4a96-b7b5-fee08b9ff90c}')
    @winrt_commethod(6)
    def get_Handled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_Handled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_IsShuffleRequested(self) -> Boolean: ...
    @winrt_commethod(9)
    def GetDeferral(self) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    IsShuffleRequested = property(get_IsShuffleRequested, None)
class IMediaPlaybackItem(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{047097d2-e4af-48ab-b283-6929e674ece2}')
    @winrt_commethod(6)
    def add_AudioTracksChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackItem, Windows.Foundation.Collections.IVectorChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_AudioTracksChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def add_VideoTracksChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackItem, Windows.Foundation.Collections.IVectorChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_VideoTracksChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(10)
    def add_TimedMetadataTracksChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackItem, Windows.Foundation.Collections.IVectorChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(11)
    def remove_TimedMetadataTracksChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(12)
    def get_Source(self) -> Windows.Media.Core.MediaSource: ...
    @winrt_commethod(13)
    def get_AudioTracks(self) -> Windows.Media.Playback.MediaPlaybackAudioTrackList: ...
    @winrt_commethod(14)
    def get_VideoTracks(self) -> Windows.Media.Playback.MediaPlaybackVideoTrackList: ...
    @winrt_commethod(15)
    def get_TimedMetadataTracks(self) -> Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList: ...
    Source = property(get_Source, None)
    AudioTracks = property(get_AudioTracks, None)
    VideoTracks = property(get_VideoTracks, None)
    TimedMetadataTracks = property(get_TimedMetadataTracks, None)
class IMediaPlaybackItem2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{d859d171-d7ef-4b81-ac1f-f40493cbb091}')
    @winrt_commethod(6)
    def get_BreakSchedule(self) -> Windows.Media.Playback.MediaBreakSchedule: ...
    @winrt_commethod(7)
    def get_StartTime(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(8)
    def get_DurationLimit(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(9)
    def get_CanSkip(self) -> Boolean: ...
    @winrt_commethod(10)
    def put_CanSkip(self, value: Boolean) -> Void: ...
    @winrt_commethod(11)
    def GetDisplayProperties(self) -> Windows.Media.Playback.MediaItemDisplayProperties: ...
    @winrt_commethod(12)
    def ApplyDisplayProperties(self, value: Windows.Media.Playback.MediaItemDisplayProperties) -> Void: ...
    BreakSchedule = property(get_BreakSchedule, None)
    StartTime = property(get_StartTime, None)
    DurationLimit = property(get_DurationLimit, None)
    CanSkip = property(get_CanSkip, put_CanSkip)
class IMediaPlaybackItem3(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{0d328220-b80a-4d09-9ff8-f87094a1c831}')
    @winrt_commethod(6)
    def get_IsDisabledInPlaybackList(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_IsDisabledInPlaybackList(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_TotalDownloadProgress(self) -> Double: ...
    @winrt_commethod(9)
    def get_AutoLoadedDisplayProperties(self) -> Windows.Media.Playback.AutoLoadedDisplayPropertyKind: ...
    @winrt_commethod(10)
    def put_AutoLoadedDisplayProperties(self, value: Windows.Media.Playback.AutoLoadedDisplayPropertyKind) -> Void: ...
    IsDisabledInPlaybackList = property(get_IsDisabledInPlaybackList, put_IsDisabledInPlaybackList)
    TotalDownloadProgress = property(get_TotalDownloadProgress, None)
    AutoLoadedDisplayProperties = property(get_AutoLoadedDisplayProperties, put_AutoLoadedDisplayProperties)
class IMediaPlaybackItemError(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{69fbef2b-dcd6-4df9-a450-dbf4c6f1c2c2}')
    @winrt_commethod(6)
    def get_ErrorCode(self) -> Windows.Media.Playback.MediaPlaybackItemErrorCode: ...
    @winrt_commethod(7)
    def get_ExtendedError(self) -> Windows.Foundation.HResult: ...
    ErrorCode = property(get_ErrorCode, None)
    ExtendedError = property(get_ExtendedError, None)
class IMediaPlaybackItemFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{7133fce1-1769-4ff9-a7c1-38d2c4d42360}')
    @winrt_commethod(6)
    def Create(self, source: Windows.Media.Core.MediaSource) -> Windows.Media.Playback.MediaPlaybackItem: ...
class IMediaPlaybackItemFactory2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{d77cdf3a-b947-4972-b35d-adfb931a71e6}')
    @winrt_commethod(6)
    def CreateWithStartTime(self, source: Windows.Media.Core.MediaSource, startTime: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(7)
    def CreateWithStartTimeAndDurationLimit(self, source: Windows.Media.Core.MediaSource, startTime: Windows.Foundation.TimeSpan, durationLimit: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.MediaPlaybackItem: ...
class IMediaPlaybackItemFailedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{7703134a-e9a7-47c3-862c-c656d30683d4}')
    @winrt_commethod(6)
    def get_Item(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(7)
    def get_Error(self) -> Windows.Media.Playback.MediaPlaybackItemError: ...
    Item = property(get_Item, None)
    Error = property(get_Error, None)
class IMediaPlaybackItemOpenedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{cbd9bd82-3037-4fbe-ae8f-39fc39edf4ef}')
    @winrt_commethod(6)
    def get_Item(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    Item = property(get_Item, None)
class IMediaPlaybackItemStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{4b1be7f4-4345-403c-8a67-f5de91df4c86}')
    @winrt_commethod(6)
    def FindFromMediaSource(self, source: Windows.Media.Core.MediaSource) -> Windows.Media.Playback.MediaPlaybackItem: ...
class IMediaPlaybackList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{7f77ee9c-dc42-4e26-a98d-7850df8ec925}')
    @winrt_commethod(6)
    def add_ItemFailed(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackList, Windows.Media.Playback.MediaPlaybackItemFailedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_ItemFailed(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def add_CurrentItemChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackList, Windows.Media.Playback.CurrentMediaPlaybackItemChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_CurrentItemChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(10)
    def add_ItemOpened(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackList, Windows.Media.Playback.MediaPlaybackItemOpenedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(11)
    def remove_ItemOpened(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(12)
    def get_Items(self) -> Windows.Foundation.Collections.IObservableVector[Windows.Media.Playback.MediaPlaybackItem]: ...
    @winrt_commethod(13)
    def get_AutoRepeatEnabled(self) -> Boolean: ...
    @winrt_commethod(14)
    def put_AutoRepeatEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(15)
    def get_ShuffleEnabled(self) -> Boolean: ...
    @winrt_commethod(16)
    def put_ShuffleEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(17)
    def get_CurrentItem(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(18)
    def get_CurrentItemIndex(self) -> UInt32: ...
    @winrt_commethod(19)
    def MoveNext(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(20)
    def MovePrevious(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(21)
    def MoveTo(self, itemIndex: UInt32) -> Windows.Media.Playback.MediaPlaybackItem: ...
    Items = property(get_Items, None)
    AutoRepeatEnabled = property(get_AutoRepeatEnabled, put_AutoRepeatEnabled)
    ShuffleEnabled = property(get_ShuffleEnabled, put_ShuffleEnabled)
    CurrentItem = property(get_CurrentItem, None)
    CurrentItemIndex = property(get_CurrentItemIndex, None)
class IMediaPlaybackList2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{0e09b478-600a-4274-a14b-0b6723d0f48b}')
    @winrt_commethod(6)
    def get_MaxPrefetchTime(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(7)
    def put_MaxPrefetchTime(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(8)
    def get_StartingItem(self) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_commethod(9)
    def put_StartingItem(self, value: Windows.Media.Playback.MediaPlaybackItem) -> Void: ...
    @winrt_commethod(10)
    def get_ShuffledItems(self) -> Windows.Foundation.Collections.IVectorView[Windows.Media.Playback.MediaPlaybackItem]: ...
    @winrt_commethod(11)
    def SetShuffledItems(self, value: Windows.Foundation.Collections.IIterable[Windows.Media.Playback.MediaPlaybackItem]) -> Void: ...
    MaxPrefetchTime = property(get_MaxPrefetchTime, put_MaxPrefetchTime)
    StartingItem = property(get_StartingItem, put_StartingItem)
    ShuffledItems = property(get_ShuffledItems, None)
class IMediaPlaybackList3(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{dd24bba9-bc47-4463-aa90-c18b7e5ffde1}')
    @winrt_commethod(6)
    def get_MaxPlayedItemsToKeepOpen(self) -> Windows.Foundation.IReference[UInt32]: ...
    @winrt_commethod(7)
    def put_MaxPlayedItemsToKeepOpen(self, value: Windows.Foundation.IReference[UInt32]) -> Void: ...
    MaxPlayedItemsToKeepOpen = property(get_MaxPlayedItemsToKeepOpen, put_MaxPlayedItemsToKeepOpen)
class IMediaPlaybackSession(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{c32b683d-0407-41ba-8946-8b345a5a5435}')
    @winrt_commethod(6)
    def add_PlaybackStateChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_PlaybackStateChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def add_PlaybackRateChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_PlaybackRateChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(10)
    def add_SeekCompleted(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(11)
    def remove_SeekCompleted(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(12)
    def add_BufferingStarted(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(13)
    def remove_BufferingStarted(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(14)
    def add_BufferingEnded(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(15)
    def remove_BufferingEnded(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(16)
    def add_BufferingProgressChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(17)
    def remove_BufferingProgressChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(18)
    def add_DownloadProgressChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(19)
    def remove_DownloadProgressChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(20)
    def add_NaturalDurationChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(21)
    def remove_NaturalDurationChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(22)
    def add_PositionChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(23)
    def remove_PositionChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(24)
    def add_NaturalVideoSizeChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(25)
    def remove_NaturalVideoSizeChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(26)
    def get_MediaPlayer(self) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_commethod(27)
    def get_NaturalDuration(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(28)
    def get_Position(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(29)
    def put_Position(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(30)
    def get_PlaybackState(self) -> Windows.Media.Playback.MediaPlaybackState: ...
    @winrt_commethod(31)
    def get_CanSeek(self) -> Boolean: ...
    @winrt_commethod(32)
    def get_CanPause(self) -> Boolean: ...
    @winrt_commethod(33)
    def get_IsProtected(self) -> Boolean: ...
    @winrt_commethod(34)
    def get_PlaybackRate(self) -> Double: ...
    @winrt_commethod(35)
    def put_PlaybackRate(self, value: Double) -> Void: ...
    @winrt_commethod(36)
    def get_BufferingProgress(self) -> Double: ...
    @winrt_commethod(37)
    def get_DownloadProgress(self) -> Double: ...
    @winrt_commethod(38)
    def get_NaturalVideoHeight(self) -> UInt32: ...
    @winrt_commethod(39)
    def get_NaturalVideoWidth(self) -> UInt32: ...
    @winrt_commethod(40)
    def get_NormalizedSourceRect(self) -> Windows.Foundation.Rect: ...
    @winrt_commethod(41)
    def put_NormalizedSourceRect(self, value: Windows.Foundation.Rect) -> Void: ...
    @winrt_commethod(42)
    def get_StereoscopicVideoPackingMode(self) -> Windows.Media.MediaProperties.StereoscopicVideoPackingMode: ...
    @winrt_commethod(43)
    def put_StereoscopicVideoPackingMode(self, value: Windows.Media.MediaProperties.StereoscopicVideoPackingMode) -> Void: ...
    MediaPlayer = property(get_MediaPlayer, None)
    NaturalDuration = property(get_NaturalDuration, None)
    Position = property(get_Position, put_Position)
    PlaybackState = property(get_PlaybackState, None)
    CanSeek = property(get_CanSeek, None)
    CanPause = property(get_CanPause, None)
    IsProtected = property(get_IsProtected, None)
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
    BufferingProgress = property(get_BufferingProgress, None)
    DownloadProgress = property(get_DownloadProgress, None)
    NaturalVideoHeight = property(get_NaturalVideoHeight, None)
    NaturalVideoWidth = property(get_NaturalVideoWidth, None)
    NormalizedSourceRect = property(get_NormalizedSourceRect, put_NormalizedSourceRect)
    StereoscopicVideoPackingMode = property(get_StereoscopicVideoPackingMode, put_StereoscopicVideoPackingMode)
class IMediaPlaybackSession2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{f8ba7c79-1fc8-4097-ad70-c0fa18cc0050}')
    @winrt_commethod(6)
    def add_BufferedRangesChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_BufferedRangesChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def add_PlayedRangesChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_PlayedRangesChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(10)
    def add_SeekableRangesChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(11)
    def remove_SeekableRangesChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(12)
    def add_SupportedPlaybackRatesChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(13)
    def remove_SupportedPlaybackRatesChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(14)
    def get_SphericalVideoProjection(self) -> Windows.Media.Playback.MediaPlaybackSphericalVideoProjection: ...
    @winrt_commethod(15)
    def get_IsMirroring(self) -> Boolean: ...
    @winrt_commethod(16)
    def put_IsMirroring(self, value: Boolean) -> Void: ...
    @winrt_commethod(17)
    def GetBufferedRanges(self) -> Windows.Foundation.Collections.IVectorView[Windows.Media.MediaTimeRange]: ...
    @winrt_commethod(18)
    def GetPlayedRanges(self) -> Windows.Foundation.Collections.IVectorView[Windows.Media.MediaTimeRange]: ...
    @winrt_commethod(19)
    def GetSeekableRanges(self) -> Windows.Foundation.Collections.IVectorView[Windows.Media.MediaTimeRange]: ...
    @winrt_commethod(20)
    def IsSupportedPlaybackRateRange(self, rate1: Double, rate2: Double) -> Boolean: ...
    SphericalVideoProjection = property(get_SphericalVideoProjection, None)
    IsMirroring = property(get_IsMirroring, put_IsMirroring)
class IMediaPlaybackSession3(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{7ba2b41a-a3e2-405f-b77b-a4812c238b66}')
    @winrt_commethod(6)
    def get_PlaybackRotation(self) -> Windows.Media.MediaProperties.MediaRotation: ...
    @winrt_commethod(7)
    def put_PlaybackRotation(self, value: Windows.Media.MediaProperties.MediaRotation) -> Void: ...
    @winrt_commethod(8)
    def GetOutputDegradationPolicyState(self) -> Windows.Media.Playback.MediaPlaybackSessionOutputDegradationPolicyState: ...
    PlaybackRotation = property(get_PlaybackRotation, put_PlaybackRotation)
class IMediaPlaybackSessionBufferingStartedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{cd6aafed-74e2-43b5-b115-76236c33791a}')
    @winrt_commethod(6)
    def get_IsPlaybackInterruption(self) -> Boolean: ...
    IsPlaybackInterruption = property(get_IsPlaybackInterruption, None)
class IMediaPlaybackSessionOutputDegradationPolicyState(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{558e727d-f633-49f9-965a-abaa1db709be}')
    @winrt_commethod(6)
    def get_VideoConstrictionReason(self) -> Windows.Media.Playback.MediaPlaybackSessionVideoConstrictionReason: ...
    VideoConstrictionReason = property(get_VideoConstrictionReason, None)
class IMediaPlaybackSource(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{ef9dc2bc-9317-4696-b051-2bad643177b5}')
class IMediaPlaybackSphericalVideoProjection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{d405b37c-6f0e-4661-b8ee-d487ba9752d5}')
    @winrt_commethod(6)
    def get_IsEnabled(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_IsEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_FrameFormat(self) -> Windows.Media.MediaProperties.SphericalVideoFrameFormat: ...
    @winrt_commethod(9)
    def put_FrameFormat(self, value: Windows.Media.MediaProperties.SphericalVideoFrameFormat) -> Void: ...
    @winrt_commethod(10)
    def get_HorizontalFieldOfViewInDegrees(self) -> Double: ...
    @winrt_commethod(11)
    def put_HorizontalFieldOfViewInDegrees(self, value: Double) -> Void: ...
    @winrt_commethod(12)
    def get_ViewOrientation(self) -> Windows.Foundation.Numerics.Quaternion: ...
    @winrt_commethod(13)
    def put_ViewOrientation(self, value: Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_commethod(14)
    def get_ProjectionMode(self) -> Windows.Media.Playback.SphericalVideoProjectionMode: ...
    @winrt_commethod(15)
    def put_ProjectionMode(self, value: Windows.Media.Playback.SphericalVideoProjectionMode) -> Void: ...
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
    FrameFormat = property(get_FrameFormat, put_FrameFormat)
    HorizontalFieldOfViewInDegrees = property(get_HorizontalFieldOfViewInDegrees, put_HorizontalFieldOfViewInDegrees)
    ViewOrientation = property(get_ViewOrientation, put_ViewOrientation)
    ProjectionMode = property(get_ProjectionMode, put_ProjectionMode)
class IMediaPlaybackTimedMetadataTrackList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{72b41319-bbfb-46a3-9372-9c9c744b9438}')
    @winrt_commethod(6)
    def add_PresentationModeChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList, Windows.Media.Playback.TimedMetadataPresentationModeChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_PresentationModeChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def GetPresentationMode(self, index: UInt32) -> Windows.Media.Playback.TimedMetadataTrackPresentationMode: ...
    @winrt_commethod(9)
    def SetPresentationMode(self, index: UInt32, value: Windows.Media.Playback.TimedMetadataTrackPresentationMode) -> Void: ...
class IMediaPlayer(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{381a83cb-6fff-499b-8d64-2885dfc1249e}')
    @winrt_commethod(6)
    def get_AutoPlay(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_AutoPlay(self, value: Boolean) -> Void: ...
    @winrt_commethod(8)
    def get_NaturalDuration(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def get_Position(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(10)
    def put_Position(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(11)
    def get_BufferingProgress(self) -> Double: ...
    @winrt_commethod(12)
    def get_CurrentState(self) -> Windows.Media.Playback.MediaPlayerState: ...
    @winrt_commethod(13)
    def get_CanSeek(self) -> Boolean: ...
    @winrt_commethod(14)
    def get_CanPause(self) -> Boolean: ...
    @winrt_commethod(15)
    def get_IsLoopingEnabled(self) -> Boolean: ...
    @winrt_commethod(16)
    def put_IsLoopingEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(17)
    def get_IsProtected(self) -> Boolean: ...
    @winrt_commethod(18)
    def get_IsMuted(self) -> Boolean: ...
    @winrt_commethod(19)
    def put_IsMuted(self, value: Boolean) -> Void: ...
    @winrt_commethod(20)
    def get_PlaybackRate(self) -> Double: ...
    @winrt_commethod(21)
    def put_PlaybackRate(self, value: Double) -> Void: ...
    @winrt_commethod(22)
    def get_Volume(self) -> Double: ...
    @winrt_commethod(23)
    def put_Volume(self, value: Double) -> Void: ...
    @winrt_commethod(24)
    def get_PlaybackMediaMarkers(self) -> Windows.Media.Playback.PlaybackMediaMarkerSequence: ...
    @winrt_commethod(25)
    def add_MediaOpened(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(26)
    def remove_MediaOpened(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(27)
    def add_MediaEnded(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(28)
    def remove_MediaEnded(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(29)
    def add_MediaFailed(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Media.Playback.MediaPlayerFailedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(30)
    def remove_MediaFailed(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(31)
    def add_CurrentStateChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(32)
    def remove_CurrentStateChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(33)
    def add_PlaybackMediaMarkerReached(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Media.Playback.PlaybackMediaMarkerReachedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(34)
    def remove_PlaybackMediaMarkerReached(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(35)
    def add_MediaPlayerRateChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Media.Playback.MediaPlayerRateChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(36)
    def remove_MediaPlayerRateChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(37)
    def add_VolumeChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(38)
    def remove_VolumeChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(39)
    def add_SeekCompleted(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(40)
    def remove_SeekCompleted(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(41)
    def add_BufferingStarted(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(42)
    def remove_BufferingStarted(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(43)
    def add_BufferingEnded(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(44)
    def remove_BufferingEnded(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(45)
    def Play(self) -> Void: ...
    @winrt_commethod(46)
    def Pause(self) -> Void: ...
    @winrt_commethod(47)
    def SetUriSource(self, value: Windows.Foundation.Uri) -> Void: ...
    AutoPlay = property(get_AutoPlay, put_AutoPlay)
    NaturalDuration = property(get_NaturalDuration, None)
    Position = property(get_Position, put_Position)
    BufferingProgress = property(get_BufferingProgress, None)
    CurrentState = property(get_CurrentState, None)
    CanSeek = property(get_CanSeek, None)
    CanPause = property(get_CanPause, None)
    IsLoopingEnabled = property(get_IsLoopingEnabled, put_IsLoopingEnabled)
    IsProtected = property(get_IsProtected, None)
    IsMuted = property(get_IsMuted, put_IsMuted)
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
    Volume = property(get_Volume, put_Volume)
    PlaybackMediaMarkers = property(get_PlaybackMediaMarkers, None)
class IMediaPlayer2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{3c841218-2123-4fc5-9082-2f883f77bdf5}')
    @winrt_commethod(6)
    def get_SystemMediaTransportControls(self) -> Windows.Media.SystemMediaTransportControls: ...
    @winrt_commethod(7)
    def get_AudioCategory(self) -> Windows.Media.Playback.MediaPlayerAudioCategory: ...
    @winrt_commethod(8)
    def put_AudioCategory(self, value: Windows.Media.Playback.MediaPlayerAudioCategory) -> Void: ...
    @winrt_commethod(9)
    def get_AudioDeviceType(self) -> Windows.Media.Playback.MediaPlayerAudioDeviceType: ...
    @winrt_commethod(10)
    def put_AudioDeviceType(self, value: Windows.Media.Playback.MediaPlayerAudioDeviceType) -> Void: ...
    SystemMediaTransportControls = property(get_SystemMediaTransportControls, None)
    AudioCategory = property(get_AudioCategory, put_AudioCategory)
    AudioDeviceType = property(get_AudioDeviceType, put_AudioDeviceType)
class IMediaPlayer3(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{ee0660da-031b-4feb-bd9b-92e0a0a8d299}')
    @winrt_commethod(6)
    def add_IsMutedChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_IsMutedChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def add_SourceChanged(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(9)
    def remove_SourceChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(10)
    def get_AudioBalance(self) -> Double: ...
    @winrt_commethod(11)
    def put_AudioBalance(self, value: Double) -> Void: ...
    @winrt_commethod(12)
    def get_RealTimePlayback(self) -> Boolean: ...
    @winrt_commethod(13)
    def put_RealTimePlayback(self, value: Boolean) -> Void: ...
    @winrt_commethod(14)
    def get_StereoscopicVideoRenderMode(self) -> Windows.Media.Playback.StereoscopicVideoRenderMode: ...
    @winrt_commethod(15)
    def put_StereoscopicVideoRenderMode(self, value: Windows.Media.Playback.StereoscopicVideoRenderMode) -> Void: ...
    @winrt_commethod(16)
    def get_BreakManager(self) -> Windows.Media.Playback.MediaBreakManager: ...
    @winrt_commethod(17)
    def get_CommandManager(self) -> Windows.Media.Playback.MediaPlaybackCommandManager: ...
    @winrt_commethod(18)
    def get_AudioDevice(self) -> Windows.Devices.Enumeration.DeviceInformation: ...
    @winrt_commethod(19)
    def put_AudioDevice(self, value: Windows.Devices.Enumeration.DeviceInformation) -> Void: ...
    @winrt_commethod(20)
    def get_TimelineController(self) -> Windows.Media.MediaTimelineController: ...
    @winrt_commethod(21)
    def put_TimelineController(self, value: Windows.Media.MediaTimelineController) -> Void: ...
    @winrt_commethod(22)
    def get_TimelineControllerPositionOffset(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(23)
    def put_TimelineControllerPositionOffset(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(24)
    def get_PlaybackSession(self) -> Windows.Media.Playback.MediaPlaybackSession: ...
    @winrt_commethod(25)
    def StepForwardOneFrame(self) -> Void: ...
    @winrt_commethod(26)
    def StepBackwardOneFrame(self) -> Void: ...
    @winrt_commethod(27)
    def GetAsCastingSource(self) -> Windows.Media.Casting.CastingSource: ...
    AudioBalance = property(get_AudioBalance, put_AudioBalance)
    RealTimePlayback = property(get_RealTimePlayback, put_RealTimePlayback)
    StereoscopicVideoRenderMode = property(get_StereoscopicVideoRenderMode, put_StereoscopicVideoRenderMode)
    BreakManager = property(get_BreakManager, None)
    CommandManager = property(get_CommandManager, None)
    AudioDevice = property(get_AudioDevice, put_AudioDevice)
    TimelineController = property(get_TimelineController, put_TimelineController)
    TimelineControllerPositionOffset = property(get_TimelineControllerPositionOffset, put_TimelineControllerPositionOffset)
    PlaybackSession = property(get_PlaybackSession, None)
class IMediaPlayer4(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{80035db0-7448-4770-afcf-2a57450914c5}')
    @winrt_commethod(6)
    def SetSurfaceSize(self, size: Windows.Foundation.Size) -> Void: ...
    @winrt_commethod(7)
    def GetSurface(self, compositor: Windows.UI.Composition.Compositor) -> Windows.Media.Playback.MediaPlayerSurface: ...
class IMediaPlayer5(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{cfe537fd-f86a-4446-bf4d-c8e792b7b4b3}')
    @winrt_commethod(6)
    def add_VideoFrameAvailable(self, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_VideoFrameAvailable(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def get_IsVideoFrameServerEnabled(self) -> Boolean: ...
    @winrt_commethod(9)
    def put_IsVideoFrameServerEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(10)
    def CopyFrameToVideoSurface(self, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Void: ...
    @winrt_commethod(11)
    def CopyFrameToVideoSurfaceWithTargetRectangle(self, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface, targetRectangle: Windows.Foundation.Rect) -> Void: ...
    @winrt_commethod(12)
    def CopyFrameToStereoscopicVideoSurfaces(self, destinationLeftEye: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface, destinationRightEye: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Void: ...
    IsVideoFrameServerEnabled = property(get_IsVideoFrameServerEnabled, put_IsVideoFrameServerEnabled)
class IMediaPlayer6(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{e0caa086-ae65-414c-b010-8bc55f00e692}')
    @winrt_commethod(6)
    def add_SubtitleFrameChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(7)
    def remove_SubtitleFrameChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(8)
    def RenderSubtitlesToSurface(self, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Boolean: ...
    @winrt_commethod(9)
    def RenderSubtitlesToSurfaceWithTargetRectangle(self, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface, targetRectangle: Windows.Foundation.Rect) -> Boolean: ...
class IMediaPlayer7(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{5d1dc478-4500-4531-b3f4-777a71491f7f}')
    @winrt_commethod(6)
    def get_AudioStateMonitor(self) -> Windows.Media.Audio.AudioStateMonitor: ...
    AudioStateMonitor = property(get_AudioStateMonitor, None)
class IMediaPlayerDataReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{c75a9405-c801-412a-835b-83fc0e622a8e}')
    @winrt_commethod(6)
    def get_Data(self) -> Windows.Foundation.Collections.ValueSet: ...
    Data = property(get_Data, None)
class IMediaPlayerEffects(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{85a1deda-cab6-4cc0-8be3-6035f4de2591}')
    @winrt_commethod(6)
    def AddAudioEffect(self, activatableClassId: WinRT_String, effectOptional: Boolean, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_commethod(7)
    def RemoveAllEffects(self) -> Void: ...
class IMediaPlayerEffects2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{fa419a79-1bbe-46c5-ae1f-8ee69fb3c2c7}')
    @winrt_commethod(6)
    def AddVideoEffect(self, activatableClassId: WinRT_String, effectOptional: Boolean, effectConfiguration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
class IMediaPlayerFailedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{2744e9b9-a7e3-4f16-bac4-7914ebc08301}')
    @winrt_commethod(6)
    def get_Error(self) -> Windows.Media.Playback.MediaPlayerError: ...
    @winrt_commethod(7)
    def get_ExtendedErrorCode(self) -> Windows.Foundation.HResult: ...
    @winrt_commethod(8)
    def get_ErrorMessage(self) -> WinRT_String: ...
    Error = property(get_Error, None)
    ExtendedErrorCode = property(get_ExtendedErrorCode, None)
    ErrorMessage = property(get_ErrorMessage, None)
class IMediaPlayerRateChangedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{40600d58-3b61-4bb2-989f-fc65608b6cab}')
    @winrt_commethod(6)
    def get_NewRate(self) -> Double: ...
    NewRate = property(get_NewRate, None)
class IMediaPlayerSource(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{bd4f8897-1423-4c3e-82c5-0fb1af94f715}')
    @winrt_commethod(6)
    def get_ProtectionManager(self) -> Windows.Media.Protection.MediaProtectionManager: ...
    @winrt_commethod(7)
    def put_ProtectionManager(self, value: Windows.Media.Protection.MediaProtectionManager) -> Void: ...
    @winrt_commethod(8)
    def SetFileSource(self, file: Windows.Storage.IStorageFile) -> Void: ...
    @winrt_commethod(9)
    def SetStreamSource(self, stream: Windows.Storage.Streams.IRandomAccessStream) -> Void: ...
    @winrt_commethod(10)
    def SetMediaSource(self, source: Windows.Media.Core.IMediaSource) -> Void: ...
    ProtectionManager = property(get_ProtectionManager, put_ProtectionManager)
class IMediaPlayerSource2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{82449b9f-7322-4c0b-b03b-3e69a48260c5}')
    @winrt_commethod(6)
    def get_Source(self) -> Windows.Media.Playback.IMediaPlaybackSource: ...
    @winrt_commethod(7)
    def put_Source(self, value: Windows.Media.Playback.IMediaPlaybackSource) -> Void: ...
    Source = property(get_Source, put_Source)
class IMediaPlayerSurface(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{0ed653bc-b736-49c3-830b-764a3845313a}')
    @winrt_commethod(6)
    def get_CompositionSurface(self) -> Windows.UI.Composition.ICompositionSurface: ...
    @winrt_commethod(7)
    def get_Compositor(self) -> Windows.UI.Composition.Compositor: ...
    @winrt_commethod(8)
    def get_MediaPlayer(self) -> Windows.Media.Playback.MediaPlayer: ...
    CompositionSurface = property(get_CompositionSurface, None)
    Compositor = property(get_Compositor, None)
    MediaPlayer = property(get_MediaPlayer, None)
class IPlaybackMediaMarker(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{c4d22f5c-3c1c-4444-b6b9-778b0422d41a}')
    @winrt_commethod(6)
    def get_Time(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(7)
    def get_MediaMarkerType(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_Text(self) -> WinRT_String: ...
    Time = property(get_Time, None)
    MediaMarkerType = property(get_MediaMarkerType, None)
    Text = property(get_Text, None)
class IPlaybackMediaMarkerFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{8c530a78-e0ae-4e1a-a8c8-e23f982a937b}')
    @winrt_commethod(6)
    def CreateFromTime(self, value: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.PlaybackMediaMarker: ...
    @winrt_commethod(7)
    def Create(self, value: Windows.Foundation.TimeSpan, mediaMarketType: WinRT_String, text: WinRT_String) -> Windows.Media.Playback.PlaybackMediaMarker: ...
class IPlaybackMediaMarkerReachedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{578cd1b9-90e2-4e60-abc4-8740b01f6196}')
    @winrt_commethod(6)
    def get_PlaybackMediaMarker(self) -> Windows.Media.Playback.PlaybackMediaMarker: ...
    PlaybackMediaMarker = property(get_PlaybackMediaMarker, None)
class IPlaybackMediaMarkerSequence(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{f2810cee-638b-46cf-8817-1d111fe9d8c4}')
    @winrt_commethod(6)
    def get_Size(self) -> UInt32: ...
    @winrt_commethod(7)
    def Insert(self, value: Windows.Media.Playback.PlaybackMediaMarker) -> Void: ...
    @winrt_commethod(8)
    def Clear(self) -> Void: ...
    Size = property(get_Size, None)
class ITimedMetadataPresentationModeChangedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('{d1636099-65df-45ae-8cef-dc0b53fdc2bb}')
    @winrt_commethod(6)
    def get_Track(self) -> Windows.Media.Core.TimedMetadataTrack: ...
    @winrt_commethod(7)
    def get_OldPresentationMode(self) -> Windows.Media.Playback.TimedMetadataTrackPresentationMode: ...
    @winrt_commethod(8)
    def get_NewPresentationMode(self) -> Windows.Media.Playback.TimedMetadataTrackPresentationMode: ...
    Track = property(get_Track, None)
    OldPresentationMode = property(get_OldPresentationMode, None)
    NewPresentationMode = property(get_NewPresentationMode, None)
class MediaBreak(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaBreak
    _classid_ = 'Windows.Media.Playback.MediaBreak'
    @winrt_factorymethod
    def Create(cls: Windows.Media.Playback.IMediaBreakFactory, insertionMethod: Windows.Media.Playback.MediaBreakInsertionMethod) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_factorymethod
    def CreateWithPresentationPosition(cls: Windows.Media.Playback.IMediaBreakFactory, insertionMethod: Windows.Media.Playback.MediaBreakInsertionMethod, presentationPosition: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_mixinmethod
    def get_PlaybackList(self: Windows.Media.Playback.IMediaBreak) -> Windows.Media.Playback.MediaPlaybackList: ...
    @winrt_mixinmethod
    def get_PresentationPosition(self: Windows.Media.Playback.IMediaBreak) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def get_InsertionMethod(self: Windows.Media.Playback.IMediaBreak) -> Windows.Media.Playback.MediaBreakInsertionMethod: ...
    @winrt_mixinmethod
    def get_CustomProperties(self: Windows.Media.Playback.IMediaBreak) -> Windows.Foundation.Collections.ValueSet: ...
    @winrt_mixinmethod
    def get_CanStart(self: Windows.Media.Playback.IMediaBreak) -> Boolean: ...
    @winrt_mixinmethod
    def put_CanStart(self: Windows.Media.Playback.IMediaBreak, value: Boolean) -> Void: ...
    PlaybackList = property(get_PlaybackList, None)
    PresentationPosition = property(get_PresentationPosition, None)
    InsertionMethod = property(get_InsertionMethod, None)
    CustomProperties = property(get_CustomProperties, None)
    CanStart = property(get_CanStart, put_CanStart)
class MediaBreakEndedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaBreakEndedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaBreakEndedEventArgs'
    @winrt_mixinmethod
    def get_MediaBreak(self: Windows.Media.Playback.IMediaBreakEndedEventArgs) -> Windows.Media.Playback.MediaBreak: ...
    MediaBreak = property(get_MediaBreak, None)
MediaBreakInsertionMethod = Int32
MediaBreakInsertionMethod_Interrupt: MediaBreakInsertionMethod = 0
MediaBreakInsertionMethod_Replace: MediaBreakInsertionMethod = 1
class MediaBreakManager(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaBreakManager
    _classid_ = 'Windows.Media.Playback.MediaBreakManager'
    @winrt_mixinmethod
    def add_BreaksSeekedOver(self: Windows.Media.Playback.IMediaBreakManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakSeekedOverEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BreaksSeekedOver(self: Windows.Media.Playback.IMediaBreakManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BreakStarted(self: Windows.Media.Playback.IMediaBreakManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakStartedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BreakStarted(self: Windows.Media.Playback.IMediaBreakManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BreakEnded(self: Windows.Media.Playback.IMediaBreakManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakEndedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BreakEnded(self: Windows.Media.Playback.IMediaBreakManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BreakSkipped(self: Windows.Media.Playback.IMediaBreakManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakManager, Windows.Media.Playback.MediaBreakSkippedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BreakSkipped(self: Windows.Media.Playback.IMediaBreakManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_CurrentBreak(self: Windows.Media.Playback.IMediaBreakManager) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_mixinmethod
    def get_PlaybackSession(self: Windows.Media.Playback.IMediaBreakManager) -> Windows.Media.Playback.MediaPlaybackSession: ...
    @winrt_mixinmethod
    def PlayBreak(self: Windows.Media.Playback.IMediaBreakManager, value: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_mixinmethod
    def SkipCurrentBreak(self: Windows.Media.Playback.IMediaBreakManager) -> Void: ...
    CurrentBreak = property(get_CurrentBreak, None)
    PlaybackSession = property(get_PlaybackSession, None)
class MediaBreakSchedule(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaBreakSchedule
    _classid_ = 'Windows.Media.Playback.MediaBreakSchedule'
    @winrt_mixinmethod
    def add_ScheduleChanged(self: Windows.Media.Playback.IMediaBreakSchedule, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaBreakSchedule, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_ScheduleChanged(self: Windows.Media.Playback.IMediaBreakSchedule, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def InsertMidrollBreak(self: Windows.Media.Playback.IMediaBreakSchedule, mediaBreak: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_mixinmethod
    def RemoveMidrollBreak(self: Windows.Media.Playback.IMediaBreakSchedule, mediaBreak: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_mixinmethod
    def get_MidrollBreaks(self: Windows.Media.Playback.IMediaBreakSchedule) -> Windows.Foundation.Collections.IVectorView[Windows.Media.Playback.MediaBreak]: ...
    @winrt_mixinmethod
    def put_PrerollBreak(self: Windows.Media.Playback.IMediaBreakSchedule, value: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_mixinmethod
    def get_PrerollBreak(self: Windows.Media.Playback.IMediaBreakSchedule) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_mixinmethod
    def put_PostrollBreak(self: Windows.Media.Playback.IMediaBreakSchedule, value: Windows.Media.Playback.MediaBreak) -> Void: ...
    @winrt_mixinmethod
    def get_PostrollBreak(self: Windows.Media.Playback.IMediaBreakSchedule) -> Windows.Media.Playback.MediaBreak: ...
    @winrt_mixinmethod
    def get_PlaybackItem(self: Windows.Media.Playback.IMediaBreakSchedule) -> Windows.Media.Playback.MediaPlaybackItem: ...
    MidrollBreaks = property(get_MidrollBreaks, None)
    PrerollBreak = property(get_PrerollBreak, put_PrerollBreak)
    PostrollBreak = property(get_PostrollBreak, put_PostrollBreak)
    PlaybackItem = property(get_PlaybackItem, None)
class MediaBreakSeekedOverEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaBreakSeekedOverEventArgs
    _classid_ = 'Windows.Media.Playback.MediaBreakSeekedOverEventArgs'
    @winrt_mixinmethod
    def get_SeekedOverBreaks(self: Windows.Media.Playback.IMediaBreakSeekedOverEventArgs) -> Windows.Foundation.Collections.IVectorView[Windows.Media.Playback.MediaBreak]: ...
    @winrt_mixinmethod
    def get_OldPosition(self: Windows.Media.Playback.IMediaBreakSeekedOverEventArgs) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def get_NewPosition(self: Windows.Media.Playback.IMediaBreakSeekedOverEventArgs) -> Windows.Foundation.TimeSpan: ...
    SeekedOverBreaks = property(get_SeekedOverBreaks, None)
    OldPosition = property(get_OldPosition, None)
    NewPosition = property(get_NewPosition, None)
class MediaBreakSkippedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaBreakSkippedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaBreakSkippedEventArgs'
    @winrt_mixinmethod
    def get_MediaBreak(self: Windows.Media.Playback.IMediaBreakSkippedEventArgs) -> Windows.Media.Playback.MediaBreak: ...
    MediaBreak = property(get_MediaBreak, None)
class MediaBreakStartedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaBreakStartedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaBreakStartedEventArgs'
    @winrt_mixinmethod
    def get_MediaBreak(self: Windows.Media.Playback.IMediaBreakStartedEventArgs) -> Windows.Media.Playback.MediaBreak: ...
    MediaBreak = property(get_MediaBreak, None)
MediaCommandEnablingRule = Int32
MediaCommandEnablingRule_Auto: MediaCommandEnablingRule = 0
MediaCommandEnablingRule_Always: MediaCommandEnablingRule = 1
MediaCommandEnablingRule_Never: MediaCommandEnablingRule = 2
class MediaItemDisplayProperties(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaItemDisplayProperties
    _classid_ = 'Windows.Media.Playback.MediaItemDisplayProperties'
    @winrt_mixinmethod
    def get_Type(self: Windows.Media.Playback.IMediaItemDisplayProperties) -> Windows.Media.MediaPlaybackType: ...
    @winrt_mixinmethod
    def put_Type(self: Windows.Media.Playback.IMediaItemDisplayProperties, value: Windows.Media.MediaPlaybackType) -> Void: ...
    @winrt_mixinmethod
    def get_MusicProperties(self: Windows.Media.Playback.IMediaItemDisplayProperties) -> Windows.Media.MusicDisplayProperties: ...
    @winrt_mixinmethod
    def get_VideoProperties(self: Windows.Media.Playback.IMediaItemDisplayProperties) -> Windows.Media.VideoDisplayProperties: ...
    @winrt_mixinmethod
    def get_Thumbnail(self: Windows.Media.Playback.IMediaItemDisplayProperties) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_mixinmethod
    def put_Thumbnail(self: Windows.Media.Playback.IMediaItemDisplayProperties, value: Windows.Storage.Streams.RandomAccessStreamReference) -> Void: ...
    @winrt_mixinmethod
    def ClearAll(self: Windows.Media.Playback.IMediaItemDisplayProperties) -> Void: ...
    Type = property(get_Type, put_Type)
    MusicProperties = property(get_MusicProperties, None)
    VideoProperties = property(get_VideoProperties, None)
    Thumbnail = property(get_Thumbnail, put_Thumbnail)
class MediaPlaybackAudioTrackList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.AudioTrack]
    _classid_ = 'Windows.Media.Playback.MediaPlaybackAudioTrackList'
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.AudioTrack], index: UInt32) -> Windows.Media.Core.AudioTrack: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.AudioTrack]) -> UInt32: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.AudioTrack], value: Windows.Media.Core.AudioTrack, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.AudioTrack], startIndex: UInt32, items: POINTER(Windows.Media.Core.AudioTrack)) -> UInt32: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Media.Core.AudioTrack]) -> Windows.Foundation.Collections.IIterator[Windows.Media.Core.AudioTrack]: ...
    @winrt_mixinmethod
    def add_SelectedIndexChanged(self: Windows.Media.Core.ISingleSelectMediaTrackList, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Core.ISingleSelectMediaTrackList, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SelectedIndexChanged(self: Windows.Media.Core.ISingleSelectMediaTrackList, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def put_SelectedIndex(self: Windows.Media.Core.ISingleSelectMediaTrackList, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_SelectedIndex(self: Windows.Media.Core.ISingleSelectMediaTrackList) -> Int32: ...
    Size = property(get_Size, None)
    SelectedIndex = property(get_SelectedIndex, put_SelectedIndex)
class MediaPlaybackCommandManager(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManager
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManager'
    @winrt_mixinmethod
    def get_IsEnabled(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsEnabled(self: Windows.Media.Playback.IMediaPlaybackCommandManager, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_MediaPlayer(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_mixinmethod
    def get_PlayBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_PauseBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_NextBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_PreviousBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_FastForwardBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_RewindBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_ShuffleBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_AutoRepeatModeBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_PositionBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def get_RateBehavior(self: Windows.Media.Playback.IMediaPlaybackCommandManager) -> Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior: ...
    @winrt_mixinmethod
    def add_PlayReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPlayReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PlayReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PauseReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPauseReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PauseReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_NextReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerNextReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_NextReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PreviousReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPreviousReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PreviousReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_FastForwardReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerFastForwardReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_FastForwardReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_RewindReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerRewindReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_RewindReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_ShuffleReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerShuffleReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_ShuffleReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_AutoRepeatModeReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_AutoRepeatModeReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PositionReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerPositionReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PositionReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_RateReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManager, Windows.Media.Playback.MediaPlaybackCommandManagerRateReceivedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_RateReceived(self: Windows.Media.Playback.IMediaPlaybackCommandManager, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
    MediaPlayer = property(get_MediaPlayer, None)
    PlayBehavior = property(get_PlayBehavior, None)
    PauseBehavior = property(get_PauseBehavior, None)
    NextBehavior = property(get_NextBehavior, None)
    PreviousBehavior = property(get_PreviousBehavior, None)
    FastForwardBehavior = property(get_FastForwardBehavior, None)
    RewindBehavior = property(get_RewindBehavior, None)
    ShuffleBehavior = property(get_ShuffleBehavior, None)
    AutoRepeatModeBehavior = property(get_AutoRepeatModeBehavior, None)
    PositionBehavior = property(get_PositionBehavior, None)
    RateBehavior = property(get_RateBehavior, None)
class MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_AutoRepeatMode(self: Windows.Media.Playback.IMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs) -> Windows.Media.MediaPlaybackAutoRepeatMode: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    AutoRepeatMode = property(get_AutoRepeatMode, None)
class MediaPlaybackCommandManagerCommandBehavior(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerCommandBehavior
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior'
    @winrt_mixinmethod
    def get_CommandManager(self: Windows.Media.Playback.IMediaPlaybackCommandManagerCommandBehavior) -> Windows.Media.Playback.MediaPlaybackCommandManager: ...
    @winrt_mixinmethod
    def get_IsEnabled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerCommandBehavior) -> Boolean: ...
    @winrt_mixinmethod
    def get_EnablingRule(self: Windows.Media.Playback.IMediaPlaybackCommandManagerCommandBehavior) -> Windows.Media.Playback.MediaCommandEnablingRule: ...
    @winrt_mixinmethod
    def put_EnablingRule(self: Windows.Media.Playback.IMediaPlaybackCommandManagerCommandBehavior, value: Windows.Media.Playback.MediaCommandEnablingRule) -> Void: ...
    @winrt_mixinmethod
    def add_IsEnabledChanged(self: Windows.Media.Playback.IMediaPlaybackCommandManagerCommandBehavior, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackCommandManagerCommandBehavior, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_IsEnabledChanged(self: Windows.Media.Playback.IMediaPlaybackCommandManagerCommandBehavior, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    CommandManager = property(get_CommandManager, None)
    IsEnabled = property(get_IsEnabled, None)
    EnablingRule = property(get_EnablingRule, put_EnablingRule)
class MediaPlaybackCommandManagerFastForwardReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerFastForwardReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerFastForwardReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerFastForwardReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerFastForwardReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerFastForwardReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class MediaPlaybackCommandManagerNextReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerNextReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerNextReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerNextReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerNextReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerNextReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class MediaPlaybackCommandManagerPauseReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerPauseReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerPauseReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPauseReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPauseReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPauseReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class MediaPlaybackCommandManagerPlayReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerPlayReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerPlayReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPlayReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPlayReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPlayReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class MediaPlaybackCommandManagerPositionReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerPositionReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerPositionReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPositionReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPositionReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPositionReceivedEventArgs) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPositionReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    Position = property(get_Position, None)
class MediaPlaybackCommandManagerPreviousReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerPreviousReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerPreviousReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPreviousReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPreviousReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerPreviousReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class MediaPlaybackCommandManagerRateReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerRateReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerRateReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerRateReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerRateReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_PlaybackRate(self: Windows.Media.Playback.IMediaPlaybackCommandManagerRateReceivedEventArgs) -> Double: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerRateReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    PlaybackRate = property(get_PlaybackRate, None)
class MediaPlaybackCommandManagerRewindReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerRewindReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerRewindReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerRewindReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerRewindReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerRewindReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
class MediaPlaybackCommandManagerShuffleReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackCommandManagerShuffleReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackCommandManagerShuffleReceivedEventArgs'
    @winrt_mixinmethod
    def get_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerShuffleReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def put_Handled(self: Windows.Media.Playback.IMediaPlaybackCommandManagerShuffleReceivedEventArgs, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsShuffleRequested(self: Windows.Media.Playback.IMediaPlaybackCommandManagerShuffleReceivedEventArgs) -> Boolean: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.Media.Playback.IMediaPlaybackCommandManagerShuffleReceivedEventArgs) -> Windows.Foundation.Deferral: ...
    Handled = property(get_Handled, put_Handled)
    IsShuffleRequested = property(get_IsShuffleRequested, None)
class MediaPlaybackItem(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackItem
    _classid_ = 'Windows.Media.Playback.MediaPlaybackItem'
    @winrt_factorymethod
    def Create(cls: Windows.Media.Playback.IMediaPlaybackItemFactory, source: Windows.Media.Core.MediaSource) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_factorymethod
    def CreateWithStartTime(cls: Windows.Media.Playback.IMediaPlaybackItemFactory2, source: Windows.Media.Core.MediaSource, startTime: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_factorymethod
    def CreateWithStartTimeAndDurationLimit(cls: Windows.Media.Playback.IMediaPlaybackItemFactory2, source: Windows.Media.Core.MediaSource, startTime: Windows.Foundation.TimeSpan, durationLimit: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def add_AudioTracksChanged(self: Windows.Media.Playback.IMediaPlaybackItem, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackItem, Windows.Foundation.Collections.IVectorChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_AudioTracksChanged(self: Windows.Media.Playback.IMediaPlaybackItem, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_VideoTracksChanged(self: Windows.Media.Playback.IMediaPlaybackItem, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackItem, Windows.Foundation.Collections.IVectorChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_VideoTracksChanged(self: Windows.Media.Playback.IMediaPlaybackItem, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_TimedMetadataTracksChanged(self: Windows.Media.Playback.IMediaPlaybackItem, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackItem, Windows.Foundation.Collections.IVectorChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_TimedMetadataTracksChanged(self: Windows.Media.Playback.IMediaPlaybackItem, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_Source(self: Windows.Media.Playback.IMediaPlaybackItem) -> Windows.Media.Core.MediaSource: ...
    @winrt_mixinmethod
    def get_AudioTracks(self: Windows.Media.Playback.IMediaPlaybackItem) -> Windows.Media.Playback.MediaPlaybackAudioTrackList: ...
    @winrt_mixinmethod
    def get_VideoTracks(self: Windows.Media.Playback.IMediaPlaybackItem) -> Windows.Media.Playback.MediaPlaybackVideoTrackList: ...
    @winrt_mixinmethod
    def get_TimedMetadataTracks(self: Windows.Media.Playback.IMediaPlaybackItem) -> Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList: ...
    @winrt_mixinmethod
    def get_BreakSchedule(self: Windows.Media.Playback.IMediaPlaybackItem2) -> Windows.Media.Playback.MediaBreakSchedule: ...
    @winrt_mixinmethod
    def get_StartTime(self: Windows.Media.Playback.IMediaPlaybackItem2) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def get_DurationLimit(self: Windows.Media.Playback.IMediaPlaybackItem2) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def get_CanSkip(self: Windows.Media.Playback.IMediaPlaybackItem2) -> Boolean: ...
    @winrt_mixinmethod
    def put_CanSkip(self: Windows.Media.Playback.IMediaPlaybackItem2, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetDisplayProperties(self: Windows.Media.Playback.IMediaPlaybackItem2) -> Windows.Media.Playback.MediaItemDisplayProperties: ...
    @winrt_mixinmethod
    def ApplyDisplayProperties(self: Windows.Media.Playback.IMediaPlaybackItem2, value: Windows.Media.Playback.MediaItemDisplayProperties) -> Void: ...
    @winrt_mixinmethod
    def get_IsDisabledInPlaybackList(self: Windows.Media.Playback.IMediaPlaybackItem3) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsDisabledInPlaybackList(self: Windows.Media.Playback.IMediaPlaybackItem3, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_TotalDownloadProgress(self: Windows.Media.Playback.IMediaPlaybackItem3) -> Double: ...
    @winrt_mixinmethod
    def get_AutoLoadedDisplayProperties(self: Windows.Media.Playback.IMediaPlaybackItem3) -> Windows.Media.Playback.AutoLoadedDisplayPropertyKind: ...
    @winrt_mixinmethod
    def put_AutoLoadedDisplayProperties(self: Windows.Media.Playback.IMediaPlaybackItem3, value: Windows.Media.Playback.AutoLoadedDisplayPropertyKind) -> Void: ...
    @winrt_classmethod
    def FindFromMediaSource(cls: Windows.Media.Playback.IMediaPlaybackItemStatics, source: Windows.Media.Core.MediaSource) -> Windows.Media.Playback.MediaPlaybackItem: ...
    Source = property(get_Source, None)
    AudioTracks = property(get_AudioTracks, None)
    VideoTracks = property(get_VideoTracks, None)
    TimedMetadataTracks = property(get_TimedMetadataTracks, None)
    BreakSchedule = property(get_BreakSchedule, None)
    StartTime = property(get_StartTime, None)
    DurationLimit = property(get_DurationLimit, None)
    CanSkip = property(get_CanSkip, put_CanSkip)
    IsDisabledInPlaybackList = property(get_IsDisabledInPlaybackList, put_IsDisabledInPlaybackList)
    TotalDownloadProgress = property(get_TotalDownloadProgress, None)
    AutoLoadedDisplayProperties = property(get_AutoLoadedDisplayProperties, put_AutoLoadedDisplayProperties)
MediaPlaybackItemChangedReason = Int32
MediaPlaybackItemChangedReason_InitialItem: MediaPlaybackItemChangedReason = 0
MediaPlaybackItemChangedReason_EndOfStream: MediaPlaybackItemChangedReason = 1
MediaPlaybackItemChangedReason_Error: MediaPlaybackItemChangedReason = 2
MediaPlaybackItemChangedReason_AppRequested: MediaPlaybackItemChangedReason = 3
class MediaPlaybackItemError(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackItemError
    _classid_ = 'Windows.Media.Playback.MediaPlaybackItemError'
    @winrt_mixinmethod
    def get_ErrorCode(self: Windows.Media.Playback.IMediaPlaybackItemError) -> Windows.Media.Playback.MediaPlaybackItemErrorCode: ...
    @winrt_mixinmethod
    def get_ExtendedError(self: Windows.Media.Playback.IMediaPlaybackItemError) -> Windows.Foundation.HResult: ...
    ErrorCode = property(get_ErrorCode, None)
    ExtendedError = property(get_ExtendedError, None)
MediaPlaybackItemErrorCode = Int32
MediaPlaybackItemErrorCode_None: MediaPlaybackItemErrorCode = 0
MediaPlaybackItemErrorCode_Aborted: MediaPlaybackItemErrorCode = 1
MediaPlaybackItemErrorCode_NetworkError: MediaPlaybackItemErrorCode = 2
MediaPlaybackItemErrorCode_DecodeError: MediaPlaybackItemErrorCode = 3
MediaPlaybackItemErrorCode_SourceNotSupportedError: MediaPlaybackItemErrorCode = 4
MediaPlaybackItemErrorCode_EncryptionError: MediaPlaybackItemErrorCode = 5
class MediaPlaybackItemFailedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackItemFailedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackItemFailedEventArgs'
    @winrt_mixinmethod
    def get_Item(self: Windows.Media.Playback.IMediaPlaybackItemFailedEventArgs) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def get_Error(self: Windows.Media.Playback.IMediaPlaybackItemFailedEventArgs) -> Windows.Media.Playback.MediaPlaybackItemError: ...
    Item = property(get_Item, None)
    Error = property(get_Error, None)
class MediaPlaybackItemOpenedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackItemOpenedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackItemOpenedEventArgs'
    @winrt_mixinmethod
    def get_Item(self: Windows.Media.Playback.IMediaPlaybackItemOpenedEventArgs) -> Windows.Media.Playback.MediaPlaybackItem: ...
    Item = property(get_Item, None)
class MediaPlaybackList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackList
    _classid_ = 'Windows.Media.Playback.MediaPlaybackList'
    @winrt_activatemethod
    def New(cls) -> Windows.Media.Playback.MediaPlaybackList: ...
    @winrt_mixinmethod
    def add_ItemFailed(self: Windows.Media.Playback.IMediaPlaybackList, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackList, Windows.Media.Playback.MediaPlaybackItemFailedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_ItemFailed(self: Windows.Media.Playback.IMediaPlaybackList, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_CurrentItemChanged(self: Windows.Media.Playback.IMediaPlaybackList, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackList, Windows.Media.Playback.CurrentMediaPlaybackItemChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_CurrentItemChanged(self: Windows.Media.Playback.IMediaPlaybackList, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_ItemOpened(self: Windows.Media.Playback.IMediaPlaybackList, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackList, Windows.Media.Playback.MediaPlaybackItemOpenedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_ItemOpened(self: Windows.Media.Playback.IMediaPlaybackList, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_Items(self: Windows.Media.Playback.IMediaPlaybackList) -> Windows.Foundation.Collections.IObservableVector[Windows.Media.Playback.MediaPlaybackItem]: ...
    @winrt_mixinmethod
    def get_AutoRepeatEnabled(self: Windows.Media.Playback.IMediaPlaybackList) -> Boolean: ...
    @winrt_mixinmethod
    def put_AutoRepeatEnabled(self: Windows.Media.Playback.IMediaPlaybackList, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_ShuffleEnabled(self: Windows.Media.Playback.IMediaPlaybackList) -> Boolean: ...
    @winrt_mixinmethod
    def put_ShuffleEnabled(self: Windows.Media.Playback.IMediaPlaybackList, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_CurrentItem(self: Windows.Media.Playback.IMediaPlaybackList) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def get_CurrentItemIndex(self: Windows.Media.Playback.IMediaPlaybackList) -> UInt32: ...
    @winrt_mixinmethod
    def MoveNext(self: Windows.Media.Playback.IMediaPlaybackList) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def MovePrevious(self: Windows.Media.Playback.IMediaPlaybackList) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def MoveTo(self: Windows.Media.Playback.IMediaPlaybackList, itemIndex: UInt32) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def get_MaxPrefetchTime(self: Windows.Media.Playback.IMediaPlaybackList2) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_MaxPrefetchTime(self: Windows.Media.Playback.IMediaPlaybackList2, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_StartingItem(self: Windows.Media.Playback.IMediaPlaybackList2) -> Windows.Media.Playback.MediaPlaybackItem: ...
    @winrt_mixinmethod
    def put_StartingItem(self: Windows.Media.Playback.IMediaPlaybackList2, value: Windows.Media.Playback.MediaPlaybackItem) -> Void: ...
    @winrt_mixinmethod
    def get_ShuffledItems(self: Windows.Media.Playback.IMediaPlaybackList2) -> Windows.Foundation.Collections.IVectorView[Windows.Media.Playback.MediaPlaybackItem]: ...
    @winrt_mixinmethod
    def SetShuffledItems(self: Windows.Media.Playback.IMediaPlaybackList2, value: Windows.Foundation.Collections.IIterable[Windows.Media.Playback.MediaPlaybackItem]) -> Void: ...
    @winrt_mixinmethod
    def get_MaxPlayedItemsToKeepOpen(self: Windows.Media.Playback.IMediaPlaybackList3) -> Windows.Foundation.IReference[UInt32]: ...
    @winrt_mixinmethod
    def put_MaxPlayedItemsToKeepOpen(self: Windows.Media.Playback.IMediaPlaybackList3, value: Windows.Foundation.IReference[UInt32]) -> Void: ...
    Items = property(get_Items, None)
    AutoRepeatEnabled = property(get_AutoRepeatEnabled, put_AutoRepeatEnabled)
    ShuffleEnabled = property(get_ShuffleEnabled, put_ShuffleEnabled)
    CurrentItem = property(get_CurrentItem, None)
    CurrentItemIndex = property(get_CurrentItemIndex, None)
    MaxPrefetchTime = property(get_MaxPrefetchTime, put_MaxPrefetchTime)
    StartingItem = property(get_StartingItem, put_StartingItem)
    ShuffledItems = property(get_ShuffledItems, None)
    MaxPlayedItemsToKeepOpen = property(get_MaxPlayedItemsToKeepOpen, put_MaxPlayedItemsToKeepOpen)
class MediaPlaybackSession(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackSession
    _classid_ = 'Windows.Media.Playback.MediaPlaybackSession'
    @winrt_mixinmethod
    def add_PlaybackStateChanged(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PlaybackStateChanged(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PlaybackRateChanged(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PlaybackRateChanged(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_SeekCompleted(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SeekCompleted(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BufferingStarted(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BufferingStarted(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BufferingEnded(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BufferingEnded(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BufferingProgressChanged(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BufferingProgressChanged(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_DownloadProgressChanged(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_DownloadProgressChanged(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_NaturalDurationChanged(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_NaturalDurationChanged(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PositionChanged(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PositionChanged(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_NaturalVideoSizeChanged(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_NaturalVideoSizeChanged(self: Windows.Media.Playback.IMediaPlaybackSession, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_MediaPlayer(self: Windows.Media.Playback.IMediaPlaybackSession) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_mixinmethod
    def get_NaturalDuration(self: Windows.Media.Playback.IMediaPlaybackSession) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Media.Playback.IMediaPlaybackSession) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_Position(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_PlaybackState(self: Windows.Media.Playback.IMediaPlaybackSession) -> Windows.Media.Playback.MediaPlaybackState: ...
    @winrt_mixinmethod
    def get_CanSeek(self: Windows.Media.Playback.IMediaPlaybackSession) -> Boolean: ...
    @winrt_mixinmethod
    def get_CanPause(self: Windows.Media.Playback.IMediaPlaybackSession) -> Boolean: ...
    @winrt_mixinmethod
    def get_IsProtected(self: Windows.Media.Playback.IMediaPlaybackSession) -> Boolean: ...
    @winrt_mixinmethod
    def get_PlaybackRate(self: Windows.Media.Playback.IMediaPlaybackSession) -> Double: ...
    @winrt_mixinmethod
    def put_PlaybackRate(self: Windows.Media.Playback.IMediaPlaybackSession, value: Double) -> Void: ...
    @winrt_mixinmethod
    def get_BufferingProgress(self: Windows.Media.Playback.IMediaPlaybackSession) -> Double: ...
    @winrt_mixinmethod
    def get_DownloadProgress(self: Windows.Media.Playback.IMediaPlaybackSession) -> Double: ...
    @winrt_mixinmethod
    def get_NaturalVideoHeight(self: Windows.Media.Playback.IMediaPlaybackSession) -> UInt32: ...
    @winrt_mixinmethod
    def get_NaturalVideoWidth(self: Windows.Media.Playback.IMediaPlaybackSession) -> UInt32: ...
    @winrt_mixinmethod
    def get_NormalizedSourceRect(self: Windows.Media.Playback.IMediaPlaybackSession) -> Windows.Foundation.Rect: ...
    @winrt_mixinmethod
    def put_NormalizedSourceRect(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Foundation.Rect) -> Void: ...
    @winrt_mixinmethod
    def get_StereoscopicVideoPackingMode(self: Windows.Media.Playback.IMediaPlaybackSession) -> Windows.Media.MediaProperties.StereoscopicVideoPackingMode: ...
    @winrt_mixinmethod
    def put_StereoscopicVideoPackingMode(self: Windows.Media.Playback.IMediaPlaybackSession, value: Windows.Media.MediaProperties.StereoscopicVideoPackingMode) -> Void: ...
    @winrt_mixinmethod
    def add_BufferedRangesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BufferedRangesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PlayedRangesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PlayedRangesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_SeekableRangesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SeekableRangesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_SupportedPlaybackRatesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackSession, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SupportedPlaybackRatesChanged(self: Windows.Media.Playback.IMediaPlaybackSession2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_SphericalVideoProjection(self: Windows.Media.Playback.IMediaPlaybackSession2) -> Windows.Media.Playback.MediaPlaybackSphericalVideoProjection: ...
    @winrt_mixinmethod
    def get_IsMirroring(self: Windows.Media.Playback.IMediaPlaybackSession2) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsMirroring(self: Windows.Media.Playback.IMediaPlaybackSession2, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def GetBufferedRanges(self: Windows.Media.Playback.IMediaPlaybackSession2) -> Windows.Foundation.Collections.IVectorView[Windows.Media.MediaTimeRange]: ...
    @winrt_mixinmethod
    def GetPlayedRanges(self: Windows.Media.Playback.IMediaPlaybackSession2) -> Windows.Foundation.Collections.IVectorView[Windows.Media.MediaTimeRange]: ...
    @winrt_mixinmethod
    def GetSeekableRanges(self: Windows.Media.Playback.IMediaPlaybackSession2) -> Windows.Foundation.Collections.IVectorView[Windows.Media.MediaTimeRange]: ...
    @winrt_mixinmethod
    def IsSupportedPlaybackRateRange(self: Windows.Media.Playback.IMediaPlaybackSession2, rate1: Double, rate2: Double) -> Boolean: ...
    @winrt_mixinmethod
    def get_PlaybackRotation(self: Windows.Media.Playback.IMediaPlaybackSession3) -> Windows.Media.MediaProperties.MediaRotation: ...
    @winrt_mixinmethod
    def put_PlaybackRotation(self: Windows.Media.Playback.IMediaPlaybackSession3, value: Windows.Media.MediaProperties.MediaRotation) -> Void: ...
    @winrt_mixinmethod
    def GetOutputDegradationPolicyState(self: Windows.Media.Playback.IMediaPlaybackSession3) -> Windows.Media.Playback.MediaPlaybackSessionOutputDegradationPolicyState: ...
    MediaPlayer = property(get_MediaPlayer, None)
    NaturalDuration = property(get_NaturalDuration, None)
    Position = property(get_Position, put_Position)
    PlaybackState = property(get_PlaybackState, None)
    CanSeek = property(get_CanSeek, None)
    CanPause = property(get_CanPause, None)
    IsProtected = property(get_IsProtected, None)
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
    BufferingProgress = property(get_BufferingProgress, None)
    DownloadProgress = property(get_DownloadProgress, None)
    NaturalVideoHeight = property(get_NaturalVideoHeight, None)
    NaturalVideoWidth = property(get_NaturalVideoWidth, None)
    NormalizedSourceRect = property(get_NormalizedSourceRect, put_NormalizedSourceRect)
    StereoscopicVideoPackingMode = property(get_StereoscopicVideoPackingMode, put_StereoscopicVideoPackingMode)
    SphericalVideoProjection = property(get_SphericalVideoProjection, None)
    IsMirroring = property(get_IsMirroring, put_IsMirroring)
    PlaybackRotation = property(get_PlaybackRotation, put_PlaybackRotation)
class MediaPlaybackSessionBufferingStartedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackSessionBufferingStartedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlaybackSessionBufferingStartedEventArgs'
    @winrt_mixinmethod
    def get_IsPlaybackInterruption(self: Windows.Media.Playback.IMediaPlaybackSessionBufferingStartedEventArgs) -> Boolean: ...
    IsPlaybackInterruption = property(get_IsPlaybackInterruption, None)
class MediaPlaybackSessionOutputDegradationPolicyState(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackSessionOutputDegradationPolicyState
    _classid_ = 'Windows.Media.Playback.MediaPlaybackSessionOutputDegradationPolicyState'
    @winrt_mixinmethod
    def get_VideoConstrictionReason(self: Windows.Media.Playback.IMediaPlaybackSessionOutputDegradationPolicyState) -> Windows.Media.Playback.MediaPlaybackSessionVideoConstrictionReason: ...
    VideoConstrictionReason = property(get_VideoConstrictionReason, None)
MediaPlaybackSessionVideoConstrictionReason = Int32
MediaPlaybackSessionVideoConstrictionReason_None: MediaPlaybackSessionVideoConstrictionReason = 0
MediaPlaybackSessionVideoConstrictionReason_VirtualMachine: MediaPlaybackSessionVideoConstrictionReason = 1
MediaPlaybackSessionVideoConstrictionReason_UnsupportedDisplayAdapter: MediaPlaybackSessionVideoConstrictionReason = 2
MediaPlaybackSessionVideoConstrictionReason_UnsignedDriver: MediaPlaybackSessionVideoConstrictionReason = 3
MediaPlaybackSessionVideoConstrictionReason_FrameServerEnabled: MediaPlaybackSessionVideoConstrictionReason = 4
MediaPlaybackSessionVideoConstrictionReason_OutputProtectionFailed: MediaPlaybackSessionVideoConstrictionReason = 5
MediaPlaybackSessionVideoConstrictionReason_Unknown: MediaPlaybackSessionVideoConstrictionReason = 6
class MediaPlaybackSphericalVideoProjection(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection
    _classid_ = 'Windows.Media.Playback.MediaPlaybackSphericalVideoProjection'
    @winrt_mixinmethod
    def get_IsEnabled(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsEnabled(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_FrameFormat(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection) -> Windows.Media.MediaProperties.SphericalVideoFrameFormat: ...
    @winrt_mixinmethod
    def put_FrameFormat(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection, value: Windows.Media.MediaProperties.SphericalVideoFrameFormat) -> Void: ...
    @winrt_mixinmethod
    def get_HorizontalFieldOfViewInDegrees(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection) -> Double: ...
    @winrt_mixinmethod
    def put_HorizontalFieldOfViewInDegrees(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection, value: Double) -> Void: ...
    @winrt_mixinmethod
    def get_ViewOrientation(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection) -> Windows.Foundation.Numerics.Quaternion: ...
    @winrt_mixinmethod
    def put_ViewOrientation(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection, value: Windows.Foundation.Numerics.Quaternion) -> Void: ...
    @winrt_mixinmethod
    def get_ProjectionMode(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection) -> Windows.Media.Playback.SphericalVideoProjectionMode: ...
    @winrt_mixinmethod
    def put_ProjectionMode(self: Windows.Media.Playback.IMediaPlaybackSphericalVideoProjection, value: Windows.Media.Playback.SphericalVideoProjectionMode) -> Void: ...
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
    FrameFormat = property(get_FrameFormat, put_FrameFormat)
    HorizontalFieldOfViewInDegrees = property(get_HorizontalFieldOfViewInDegrees, put_HorizontalFieldOfViewInDegrees)
    ViewOrientation = property(get_ViewOrientation, put_ViewOrientation)
    ProjectionMode = property(get_ProjectionMode, put_ProjectionMode)
MediaPlaybackState = Int32
MediaPlaybackState_None: MediaPlaybackState = 0
MediaPlaybackState_Opening: MediaPlaybackState = 1
MediaPlaybackState_Buffering: MediaPlaybackState = 2
MediaPlaybackState_Playing: MediaPlaybackState = 3
MediaPlaybackState_Paused: MediaPlaybackState = 4
class MediaPlaybackTimedMetadataTrackList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.TimedMetadataTrack]
    _classid_ = 'Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList'
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.TimedMetadataTrack], index: UInt32) -> Windows.Media.Core.TimedMetadataTrack: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.TimedMetadataTrack]) -> UInt32: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.TimedMetadataTrack], value: Windows.Media.Core.TimedMetadataTrack, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.TimedMetadataTrack], startIndex: UInt32, items: POINTER(Windows.Media.Core.TimedMetadataTrack)) -> UInt32: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Media.Core.TimedMetadataTrack]) -> Windows.Foundation.Collections.IIterator[Windows.Media.Core.TimedMetadataTrack]: ...
    @winrt_mixinmethod
    def add_PresentationModeChanged(self: Windows.Media.Playback.IMediaPlaybackTimedMetadataTrackList, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlaybackTimedMetadataTrackList, Windows.Media.Playback.TimedMetadataPresentationModeChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PresentationModeChanged(self: Windows.Media.Playback.IMediaPlaybackTimedMetadataTrackList, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def GetPresentationMode(self: Windows.Media.Playback.IMediaPlaybackTimedMetadataTrackList, index: UInt32) -> Windows.Media.Playback.TimedMetadataTrackPresentationMode: ...
    @winrt_mixinmethod
    def SetPresentationMode(self: Windows.Media.Playback.IMediaPlaybackTimedMetadataTrackList, index: UInt32, value: Windows.Media.Playback.TimedMetadataTrackPresentationMode) -> Void: ...
    Size = property(get_Size, None)
class MediaPlaybackVideoTrackList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.VideoTrack]
    _classid_ = 'Windows.Media.Playback.MediaPlaybackVideoTrackList'
    @winrt_mixinmethod
    def GetAt(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.VideoTrack], index: UInt32) -> Windows.Media.Core.VideoTrack: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.VideoTrack]) -> UInt32: ...
    @winrt_mixinmethod
    def IndexOf(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.VideoTrack], value: Windows.Media.Core.VideoTrack, index: POINTER(UInt32)) -> Boolean: ...
    @winrt_mixinmethod
    def GetMany(self: Windows.Foundation.Collections.IVectorView[Windows.Media.Core.VideoTrack], startIndex: UInt32, items: POINTER(Windows.Media.Core.VideoTrack)) -> UInt32: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Media.Core.VideoTrack]) -> Windows.Foundation.Collections.IIterator[Windows.Media.Core.VideoTrack]: ...
    @winrt_mixinmethod
    def add_SelectedIndexChanged(self: Windows.Media.Core.ISingleSelectMediaTrackList, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Core.ISingleSelectMediaTrackList, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SelectedIndexChanged(self: Windows.Media.Core.ISingleSelectMediaTrackList, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def put_SelectedIndex(self: Windows.Media.Core.ISingleSelectMediaTrackList, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_SelectedIndex(self: Windows.Media.Core.ISingleSelectMediaTrackList) -> Int32: ...
    Size = property(get_Size, None)
    SelectedIndex = property(get_SelectedIndex, put_SelectedIndex)
class MediaPlayer(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlayer
    _classid_ = 'Windows.Media.Playback.MediaPlayer'
    @winrt_activatemethod
    def New(cls) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_mixinmethod
    def get_AutoPlay(self: Windows.Media.Playback.IMediaPlayer) -> Boolean: ...
    @winrt_mixinmethod
    def put_AutoPlay(self: Windows.Media.Playback.IMediaPlayer, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_NaturalDuration(self: Windows.Media.Playback.IMediaPlayer) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Media.Playback.IMediaPlayer) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_Position(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_BufferingProgress(self: Windows.Media.Playback.IMediaPlayer) -> Double: ...
    @winrt_mixinmethod
    def get_CurrentState(self: Windows.Media.Playback.IMediaPlayer) -> Windows.Media.Playback.MediaPlayerState: ...
    @winrt_mixinmethod
    def get_CanSeek(self: Windows.Media.Playback.IMediaPlayer) -> Boolean: ...
    @winrt_mixinmethod
    def get_CanPause(self: Windows.Media.Playback.IMediaPlayer) -> Boolean: ...
    @winrt_mixinmethod
    def get_IsLoopingEnabled(self: Windows.Media.Playback.IMediaPlayer) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsLoopingEnabled(self: Windows.Media.Playback.IMediaPlayer, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsProtected(self: Windows.Media.Playback.IMediaPlayer) -> Boolean: ...
    @winrt_mixinmethod
    def get_IsMuted(self: Windows.Media.Playback.IMediaPlayer) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsMuted(self: Windows.Media.Playback.IMediaPlayer, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_PlaybackRate(self: Windows.Media.Playback.IMediaPlayer) -> Double: ...
    @winrt_mixinmethod
    def put_PlaybackRate(self: Windows.Media.Playback.IMediaPlayer, value: Double) -> Void: ...
    @winrt_mixinmethod
    def get_Volume(self: Windows.Media.Playback.IMediaPlayer) -> Double: ...
    @winrt_mixinmethod
    def put_Volume(self: Windows.Media.Playback.IMediaPlayer, value: Double) -> Void: ...
    @winrt_mixinmethod
    def get_PlaybackMediaMarkers(self: Windows.Media.Playback.IMediaPlayer) -> Windows.Media.Playback.PlaybackMediaMarkerSequence: ...
    @winrt_mixinmethod
    def add_MediaOpened(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_MediaOpened(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_MediaEnded(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_MediaEnded(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_MediaFailed(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Media.Playback.MediaPlayerFailedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_MediaFailed(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_CurrentStateChanged(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_CurrentStateChanged(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PlaybackMediaMarkerReached(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Media.Playback.PlaybackMediaMarkerReachedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PlaybackMediaMarkerReached(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_MediaPlayerRateChanged(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Media.Playback.MediaPlayerRateChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_MediaPlayerRateChanged(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_VolumeChanged(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_VolumeChanged(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_SeekCompleted(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SeekCompleted(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BufferingStarted(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BufferingStarted(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_BufferingEnded(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_BufferingEnded(self: Windows.Media.Playback.IMediaPlayer, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def Play(self: Windows.Media.Playback.IMediaPlayer) -> Void: ...
    @winrt_mixinmethod
    def Pause(self: Windows.Media.Playback.IMediaPlayer) -> Void: ...
    @winrt_mixinmethod
    def SetUriSource(self: Windows.Media.Playback.IMediaPlayer, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_ProtectionManager(self: Windows.Media.Playback.IMediaPlayerSource) -> Windows.Media.Protection.MediaProtectionManager: ...
    @winrt_mixinmethod
    def put_ProtectionManager(self: Windows.Media.Playback.IMediaPlayerSource, value: Windows.Media.Protection.MediaProtectionManager) -> Void: ...
    @winrt_mixinmethod
    def SetFileSource(self: Windows.Media.Playback.IMediaPlayerSource, file: Windows.Storage.IStorageFile) -> Void: ...
    @winrt_mixinmethod
    def SetStreamSource(self: Windows.Media.Playback.IMediaPlayerSource, stream: Windows.Storage.Streams.IRandomAccessStream) -> Void: ...
    @winrt_mixinmethod
    def SetMediaSource(self: Windows.Media.Playback.IMediaPlayerSource, source: Windows.Media.Core.IMediaSource) -> Void: ...
    @winrt_mixinmethod
    def get_Source(self: Windows.Media.Playback.IMediaPlayerSource2) -> Windows.Media.Playback.IMediaPlaybackSource: ...
    @winrt_mixinmethod
    def put_Source(self: Windows.Media.Playback.IMediaPlayerSource2, value: Windows.Media.Playback.IMediaPlaybackSource) -> Void: ...
    @winrt_mixinmethod
    def get_SystemMediaTransportControls(self: Windows.Media.Playback.IMediaPlayer2) -> Windows.Media.SystemMediaTransportControls: ...
    @winrt_mixinmethod
    def get_AudioCategory(self: Windows.Media.Playback.IMediaPlayer2) -> Windows.Media.Playback.MediaPlayerAudioCategory: ...
    @winrt_mixinmethod
    def put_AudioCategory(self: Windows.Media.Playback.IMediaPlayer2, value: Windows.Media.Playback.MediaPlayerAudioCategory) -> Void: ...
    @winrt_mixinmethod
    def get_AudioDeviceType(self: Windows.Media.Playback.IMediaPlayer2) -> Windows.Media.Playback.MediaPlayerAudioDeviceType: ...
    @winrt_mixinmethod
    def put_AudioDeviceType(self: Windows.Media.Playback.IMediaPlayer2, value: Windows.Media.Playback.MediaPlayerAudioDeviceType) -> Void: ...
    @winrt_mixinmethod
    def AddAudioEffect(self: Windows.Media.Playback.IMediaPlayerEffects, activatableClassId: WinRT_String, effectOptional: Boolean, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def RemoveAllEffects(self: Windows.Media.Playback.IMediaPlayerEffects) -> Void: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    @winrt_mixinmethod
    def add_IsMutedChanged(self: Windows.Media.Playback.IMediaPlayer3, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_IsMutedChanged(self: Windows.Media.Playback.IMediaPlayer3, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_SourceChanged(self: Windows.Media.Playback.IMediaPlayer3, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SourceChanged(self: Windows.Media.Playback.IMediaPlayer3, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_AudioBalance(self: Windows.Media.Playback.IMediaPlayer3) -> Double: ...
    @winrt_mixinmethod
    def put_AudioBalance(self: Windows.Media.Playback.IMediaPlayer3, value: Double) -> Void: ...
    @winrt_mixinmethod
    def get_RealTimePlayback(self: Windows.Media.Playback.IMediaPlayer3) -> Boolean: ...
    @winrt_mixinmethod
    def put_RealTimePlayback(self: Windows.Media.Playback.IMediaPlayer3, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_StereoscopicVideoRenderMode(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Media.Playback.StereoscopicVideoRenderMode: ...
    @winrt_mixinmethod
    def put_StereoscopicVideoRenderMode(self: Windows.Media.Playback.IMediaPlayer3, value: Windows.Media.Playback.StereoscopicVideoRenderMode) -> Void: ...
    @winrt_mixinmethod
    def get_BreakManager(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Media.Playback.MediaBreakManager: ...
    @winrt_mixinmethod
    def get_CommandManager(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Media.Playback.MediaPlaybackCommandManager: ...
    @winrt_mixinmethod
    def get_AudioDevice(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Devices.Enumeration.DeviceInformation: ...
    @winrt_mixinmethod
    def put_AudioDevice(self: Windows.Media.Playback.IMediaPlayer3, value: Windows.Devices.Enumeration.DeviceInformation) -> Void: ...
    @winrt_mixinmethod
    def get_TimelineController(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Media.MediaTimelineController: ...
    @winrt_mixinmethod
    def put_TimelineController(self: Windows.Media.Playback.IMediaPlayer3, value: Windows.Media.MediaTimelineController) -> Void: ...
    @winrt_mixinmethod
    def get_TimelineControllerPositionOffset(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_TimelineControllerPositionOffset(self: Windows.Media.Playback.IMediaPlayer3, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_PlaybackSession(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Media.Playback.MediaPlaybackSession: ...
    @winrt_mixinmethod
    def StepForwardOneFrame(self: Windows.Media.Playback.IMediaPlayer3) -> Void: ...
    @winrt_mixinmethod
    def StepBackwardOneFrame(self: Windows.Media.Playback.IMediaPlayer3) -> Void: ...
    @winrt_mixinmethod
    def GetAsCastingSource(self: Windows.Media.Playback.IMediaPlayer3) -> Windows.Media.Casting.CastingSource: ...
    @winrt_mixinmethod
    def SetSurfaceSize(self: Windows.Media.Playback.IMediaPlayer4, size: Windows.Foundation.Size) -> Void: ...
    @winrt_mixinmethod
    def GetSurface(self: Windows.Media.Playback.IMediaPlayer4, compositor: Windows.UI.Composition.Compositor) -> Windows.Media.Playback.MediaPlayerSurface: ...
    @winrt_mixinmethod
    def AddVideoEffect(self: Windows.Media.Playback.IMediaPlayerEffects2, activatableClassId: WinRT_String, effectOptional: Boolean, effectConfiguration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def add_VideoFrameAvailable(self: Windows.Media.Playback.IMediaPlayer5, value: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_VideoFrameAvailable(self: Windows.Media.Playback.IMediaPlayer5, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_IsVideoFrameServerEnabled(self: Windows.Media.Playback.IMediaPlayer5) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsVideoFrameServerEnabled(self: Windows.Media.Playback.IMediaPlayer5, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def CopyFrameToVideoSurface(self: Windows.Media.Playback.IMediaPlayer5, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Void: ...
    @winrt_mixinmethod
    def CopyFrameToVideoSurfaceWithTargetRectangle(self: Windows.Media.Playback.IMediaPlayer5, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface, targetRectangle: Windows.Foundation.Rect) -> Void: ...
    @winrt_mixinmethod
    def CopyFrameToStereoscopicVideoSurfaces(self: Windows.Media.Playback.IMediaPlayer5, destinationLeftEye: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface, destinationRightEye: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Void: ...
    @winrt_mixinmethod
    def add_SubtitleFrameChanged(self: Windows.Media.Playback.IMediaPlayer6, handler: Windows.Foundation.TypedEventHandler[Windows.Media.Playback.MediaPlayer, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_SubtitleFrameChanged(self: Windows.Media.Playback.IMediaPlayer6, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def RenderSubtitlesToSurface(self: Windows.Media.Playback.IMediaPlayer6, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Boolean: ...
    @winrt_mixinmethod
    def RenderSubtitlesToSurfaceWithTargetRectangle(self: Windows.Media.Playback.IMediaPlayer6, destination: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface, targetRectangle: Windows.Foundation.Rect) -> Boolean: ...
    @winrt_mixinmethod
    def get_AudioStateMonitor(self: Windows.Media.Playback.IMediaPlayer7) -> Windows.Media.Audio.AudioStateMonitor: ...
    AutoPlay = property(get_AutoPlay, put_AutoPlay)
    NaturalDuration = property(get_NaturalDuration, None)
    Position = property(get_Position, put_Position)
    BufferingProgress = property(get_BufferingProgress, None)
    CurrentState = property(get_CurrentState, None)
    CanSeek = property(get_CanSeek, None)
    CanPause = property(get_CanPause, None)
    IsLoopingEnabled = property(get_IsLoopingEnabled, put_IsLoopingEnabled)
    IsProtected = property(get_IsProtected, None)
    IsMuted = property(get_IsMuted, put_IsMuted)
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
    Volume = property(get_Volume, put_Volume)
    PlaybackMediaMarkers = property(get_PlaybackMediaMarkers, None)
    ProtectionManager = property(get_ProtectionManager, put_ProtectionManager)
    Source = property(get_Source, put_Source)
    SystemMediaTransportControls = property(get_SystemMediaTransportControls, None)
    AudioCategory = property(get_AudioCategory, put_AudioCategory)
    AudioDeviceType = property(get_AudioDeviceType, put_AudioDeviceType)
    AudioBalance = property(get_AudioBalance, put_AudioBalance)
    RealTimePlayback = property(get_RealTimePlayback, put_RealTimePlayback)
    StereoscopicVideoRenderMode = property(get_StereoscopicVideoRenderMode, put_StereoscopicVideoRenderMode)
    BreakManager = property(get_BreakManager, None)
    CommandManager = property(get_CommandManager, None)
    AudioDevice = property(get_AudioDevice, put_AudioDevice)
    TimelineController = property(get_TimelineController, put_TimelineController)
    TimelineControllerPositionOffset = property(get_TimelineControllerPositionOffset, put_TimelineControllerPositionOffset)
    PlaybackSession = property(get_PlaybackSession, None)
    IsVideoFrameServerEnabled = property(get_IsVideoFrameServerEnabled, put_IsVideoFrameServerEnabled)
    AudioStateMonitor = property(get_AudioStateMonitor, None)
MediaPlayerAudioCategory = Int32
MediaPlayerAudioCategory_Other: MediaPlayerAudioCategory = 0
MediaPlayerAudioCategory_Communications: MediaPlayerAudioCategory = 3
MediaPlayerAudioCategory_Alerts: MediaPlayerAudioCategory = 4
MediaPlayerAudioCategory_SoundEffects: MediaPlayerAudioCategory = 5
MediaPlayerAudioCategory_GameEffects: MediaPlayerAudioCategory = 6
MediaPlayerAudioCategory_GameMedia: MediaPlayerAudioCategory = 7
MediaPlayerAudioCategory_GameChat: MediaPlayerAudioCategory = 8
MediaPlayerAudioCategory_Speech: MediaPlayerAudioCategory = 9
MediaPlayerAudioCategory_Movie: MediaPlayerAudioCategory = 10
MediaPlayerAudioCategory_Media: MediaPlayerAudioCategory = 11
MediaPlayerAudioDeviceType = Int32
MediaPlayerAudioDeviceType_Console: MediaPlayerAudioDeviceType = 0
MediaPlayerAudioDeviceType_Multimedia: MediaPlayerAudioDeviceType = 1
MediaPlayerAudioDeviceType_Communications: MediaPlayerAudioDeviceType = 2
class MediaPlayerDataReceivedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlayerDataReceivedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlayerDataReceivedEventArgs'
    @winrt_mixinmethod
    def get_Data(self: Windows.Media.Playback.IMediaPlayerDataReceivedEventArgs) -> Windows.Foundation.Collections.ValueSet: ...
    Data = property(get_Data, None)
MediaPlayerError = Int32
MediaPlayerError_Unknown: MediaPlayerError = 0
MediaPlayerError_Aborted: MediaPlayerError = 1
MediaPlayerError_NetworkError: MediaPlayerError = 2
MediaPlayerError_DecodingError: MediaPlayerError = 3
MediaPlayerError_SourceNotSupported: MediaPlayerError = 4
class MediaPlayerFailedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlayerFailedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlayerFailedEventArgs'
    @winrt_mixinmethod
    def get_Error(self: Windows.Media.Playback.IMediaPlayerFailedEventArgs) -> Windows.Media.Playback.MediaPlayerError: ...
    @winrt_mixinmethod
    def get_ExtendedErrorCode(self: Windows.Media.Playback.IMediaPlayerFailedEventArgs) -> Windows.Foundation.HResult: ...
    @winrt_mixinmethod
    def get_ErrorMessage(self: Windows.Media.Playback.IMediaPlayerFailedEventArgs) -> WinRT_String: ...
    Error = property(get_Error, None)
    ExtendedErrorCode = property(get_ExtendedErrorCode, None)
    ErrorMessage = property(get_ErrorMessage, None)
class MediaPlayerRateChangedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlayerRateChangedEventArgs
    _classid_ = 'Windows.Media.Playback.MediaPlayerRateChangedEventArgs'
    @winrt_mixinmethod
    def get_NewRate(self: Windows.Media.Playback.IMediaPlayerRateChangedEventArgs) -> Double: ...
    NewRate = property(get_NewRate, None)
MediaPlayerState = Int32
MediaPlayerState_Closed: MediaPlayerState = 0
MediaPlayerState_Opening: MediaPlayerState = 1
MediaPlayerState_Buffering: MediaPlayerState = 2
MediaPlayerState_Playing: MediaPlayerState = 3
MediaPlayerState_Paused: MediaPlayerState = 4
MediaPlayerState_Stopped: MediaPlayerState = 5
class MediaPlayerSurface(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IMediaPlayerSurface
    _classid_ = 'Windows.Media.Playback.MediaPlayerSurface'
    @winrt_mixinmethod
    def get_CompositionSurface(self: Windows.Media.Playback.IMediaPlayerSurface) -> Windows.UI.Composition.ICompositionSurface: ...
    @winrt_mixinmethod
    def get_Compositor(self: Windows.Media.Playback.IMediaPlayerSurface) -> Windows.UI.Composition.Compositor: ...
    @winrt_mixinmethod
    def get_MediaPlayer(self: Windows.Media.Playback.IMediaPlayerSurface) -> Windows.Media.Playback.MediaPlayer: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    CompositionSurface = property(get_CompositionSurface, None)
    Compositor = property(get_Compositor, None)
    MediaPlayer = property(get_MediaPlayer, None)
class PlaybackMediaMarker(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IPlaybackMediaMarker
    _classid_ = 'Windows.Media.Playback.PlaybackMediaMarker'
    @winrt_factorymethod
    def CreateFromTime(cls: Windows.Media.Playback.IPlaybackMediaMarkerFactory, value: Windows.Foundation.TimeSpan) -> Windows.Media.Playback.PlaybackMediaMarker: ...
    @winrt_factorymethod
    def Create(cls: Windows.Media.Playback.IPlaybackMediaMarkerFactory, value: Windows.Foundation.TimeSpan, mediaMarketType: WinRT_String, text: WinRT_String) -> Windows.Media.Playback.PlaybackMediaMarker: ...
    @winrt_mixinmethod
    def get_Time(self: Windows.Media.Playback.IPlaybackMediaMarker) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def get_MediaMarkerType(self: Windows.Media.Playback.IPlaybackMediaMarker) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Text(self: Windows.Media.Playback.IPlaybackMediaMarker) -> WinRT_String: ...
    Time = property(get_Time, None)
    MediaMarkerType = property(get_MediaMarkerType, None)
    Text = property(get_Text, None)
class PlaybackMediaMarkerReachedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IPlaybackMediaMarkerReachedEventArgs
    _classid_ = 'Windows.Media.Playback.PlaybackMediaMarkerReachedEventArgs'
    @winrt_mixinmethod
    def get_PlaybackMediaMarker(self: Windows.Media.Playback.IPlaybackMediaMarkerReachedEventArgs) -> Windows.Media.Playback.PlaybackMediaMarker: ...
    PlaybackMediaMarker = property(get_PlaybackMediaMarker, None)
class PlaybackMediaMarkerSequence(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.IPlaybackMediaMarkerSequence
    _classid_ = 'Windows.Media.Playback.PlaybackMediaMarkerSequence'
    @winrt_mixinmethod
    def get_Size(self: Windows.Media.Playback.IPlaybackMediaMarkerSequence) -> UInt32: ...
    @winrt_mixinmethod
    def Insert(self: Windows.Media.Playback.IPlaybackMediaMarkerSequence, value: Windows.Media.Playback.PlaybackMediaMarker) -> Void: ...
    @winrt_mixinmethod
    def Clear(self: Windows.Media.Playback.IPlaybackMediaMarkerSequence) -> Void: ...
    @winrt_mixinmethod
    def First(self: Windows.Foundation.Collections.IIterable[Windows.Media.Playback.PlaybackMediaMarker]) -> Windows.Foundation.Collections.IIterator[Windows.Media.Playback.PlaybackMediaMarker]: ...
    Size = property(get_Size, None)
SphericalVideoProjectionMode = Int32
SphericalVideoProjectionMode_Spherical: SphericalVideoProjectionMode = 0
SphericalVideoProjectionMode_Flat: SphericalVideoProjectionMode = 1
StereoscopicVideoRenderMode = Int32
StereoscopicVideoRenderMode_Mono: StereoscopicVideoRenderMode = 0
StereoscopicVideoRenderMode_Stereo: StereoscopicVideoRenderMode = 1
class TimedMetadataPresentationModeChangedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    default_interface: Windows.Media.Playback.ITimedMetadataPresentationModeChangedEventArgs
    _classid_ = 'Windows.Media.Playback.TimedMetadataPresentationModeChangedEventArgs'
    @winrt_mixinmethod
    def get_Track(self: Windows.Media.Playback.ITimedMetadataPresentationModeChangedEventArgs) -> Windows.Media.Core.TimedMetadataTrack: ...
    @winrt_mixinmethod
    def get_OldPresentationMode(self: Windows.Media.Playback.ITimedMetadataPresentationModeChangedEventArgs) -> Windows.Media.Playback.TimedMetadataTrackPresentationMode: ...
    @winrt_mixinmethod
    def get_NewPresentationMode(self: Windows.Media.Playback.ITimedMetadataPresentationModeChangedEventArgs) -> Windows.Media.Playback.TimedMetadataTrackPresentationMode: ...
    Track = property(get_Track, None)
    OldPresentationMode = property(get_OldPresentationMode, None)
    NewPresentationMode = property(get_NewPresentationMode, None)
TimedMetadataTrackPresentationMode = Int32
TimedMetadataTrackPresentationMode_Disabled: TimedMetadataTrackPresentationMode = 0
TimedMetadataTrackPresentationMode_Hidden: TimedMetadataTrackPresentationMode = 1
TimedMetadataTrackPresentationMode_ApplicationPresented: TimedMetadataTrackPresentationMode = 2
TimedMetadataTrackPresentationMode_PlatformPresented: TimedMetadataTrackPresentationMode = 3
make_head(_module, 'BackgroundMediaPlayer')
make_head(_module, 'CurrentMediaPlaybackItemChangedEventArgs')
make_head(_module, 'IBackgroundMediaPlayerStatics')
make_head(_module, 'ICurrentMediaPlaybackItemChangedEventArgs')
make_head(_module, 'ICurrentMediaPlaybackItemChangedEventArgs2')
make_head(_module, 'IMediaBreak')
make_head(_module, 'IMediaBreakEndedEventArgs')
make_head(_module, 'IMediaBreakFactory')
make_head(_module, 'IMediaBreakManager')
make_head(_module, 'IMediaBreakSchedule')
make_head(_module, 'IMediaBreakSeekedOverEventArgs')
make_head(_module, 'IMediaBreakSkippedEventArgs')
make_head(_module, 'IMediaBreakStartedEventArgs')
make_head(_module, 'IMediaEnginePlaybackSource')
make_head(_module, 'IMediaItemDisplayProperties')
make_head(_module, 'IMediaPlaybackCommandManager')
make_head(_module, 'IMediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerCommandBehavior')
make_head(_module, 'IMediaPlaybackCommandManagerFastForwardReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerNextReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerPauseReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerPlayReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerPositionReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerPreviousReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerRateReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerRewindReceivedEventArgs')
make_head(_module, 'IMediaPlaybackCommandManagerShuffleReceivedEventArgs')
make_head(_module, 'IMediaPlaybackItem')
make_head(_module, 'IMediaPlaybackItem2')
make_head(_module, 'IMediaPlaybackItem3')
make_head(_module, 'IMediaPlaybackItemError')
make_head(_module, 'IMediaPlaybackItemFactory')
make_head(_module, 'IMediaPlaybackItemFactory2')
make_head(_module, 'IMediaPlaybackItemFailedEventArgs')
make_head(_module, 'IMediaPlaybackItemOpenedEventArgs')
make_head(_module, 'IMediaPlaybackItemStatics')
make_head(_module, 'IMediaPlaybackList')
make_head(_module, 'IMediaPlaybackList2')
make_head(_module, 'IMediaPlaybackList3')
make_head(_module, 'IMediaPlaybackSession')
make_head(_module, 'IMediaPlaybackSession2')
make_head(_module, 'IMediaPlaybackSession3')
make_head(_module, 'IMediaPlaybackSessionBufferingStartedEventArgs')
make_head(_module, 'IMediaPlaybackSessionOutputDegradationPolicyState')
make_head(_module, 'IMediaPlaybackSource')
make_head(_module, 'IMediaPlaybackSphericalVideoProjection')
make_head(_module, 'IMediaPlaybackTimedMetadataTrackList')
make_head(_module, 'IMediaPlayer')
make_head(_module, 'IMediaPlayer2')
make_head(_module, 'IMediaPlayer3')
make_head(_module, 'IMediaPlayer4')
make_head(_module, 'IMediaPlayer5')
make_head(_module, 'IMediaPlayer6')
make_head(_module, 'IMediaPlayer7')
make_head(_module, 'IMediaPlayerDataReceivedEventArgs')
make_head(_module, 'IMediaPlayerEffects')
make_head(_module, 'IMediaPlayerEffects2')
make_head(_module, 'IMediaPlayerFailedEventArgs')
make_head(_module, 'IMediaPlayerRateChangedEventArgs')
make_head(_module, 'IMediaPlayerSource')
make_head(_module, 'IMediaPlayerSource2')
make_head(_module, 'IMediaPlayerSurface')
make_head(_module, 'IPlaybackMediaMarker')
make_head(_module, 'IPlaybackMediaMarkerFactory')
make_head(_module, 'IPlaybackMediaMarkerReachedEventArgs')
make_head(_module, 'IPlaybackMediaMarkerSequence')
make_head(_module, 'ITimedMetadataPresentationModeChangedEventArgs')
make_head(_module, 'MediaBreak')
make_head(_module, 'MediaBreakEndedEventArgs')
make_head(_module, 'MediaBreakManager')
make_head(_module, 'MediaBreakSchedule')
make_head(_module, 'MediaBreakSeekedOverEventArgs')
make_head(_module, 'MediaBreakSkippedEventArgs')
make_head(_module, 'MediaBreakStartedEventArgs')
make_head(_module, 'MediaItemDisplayProperties')
make_head(_module, 'MediaPlaybackAudioTrackList')
make_head(_module, 'MediaPlaybackCommandManager')
make_head(_module, 'MediaPlaybackCommandManagerAutoRepeatModeReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerCommandBehavior')
make_head(_module, 'MediaPlaybackCommandManagerFastForwardReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerNextReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerPauseReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerPlayReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerPositionReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerPreviousReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerRateReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerRewindReceivedEventArgs')
make_head(_module, 'MediaPlaybackCommandManagerShuffleReceivedEventArgs')
make_head(_module, 'MediaPlaybackItem')
make_head(_module, 'MediaPlaybackItemError')
make_head(_module, 'MediaPlaybackItemFailedEventArgs')
make_head(_module, 'MediaPlaybackItemOpenedEventArgs')
make_head(_module, 'MediaPlaybackList')
make_head(_module, 'MediaPlaybackSession')
make_head(_module, 'MediaPlaybackSessionBufferingStartedEventArgs')
make_head(_module, 'MediaPlaybackSessionOutputDegradationPolicyState')
make_head(_module, 'MediaPlaybackSphericalVideoProjection')
make_head(_module, 'MediaPlaybackTimedMetadataTrackList')
make_head(_module, 'MediaPlaybackVideoTrackList')
make_head(_module, 'MediaPlayer')
make_head(_module, 'MediaPlayerDataReceivedEventArgs')
make_head(_module, 'MediaPlayerFailedEventArgs')
make_head(_module, 'MediaPlayerRateChangedEventArgs')
make_head(_module, 'MediaPlayerSurface')
make_head(_module, 'PlaybackMediaMarker')
make_head(_module, 'PlaybackMediaMarkerReachedEventArgs')
make_head(_module, 'PlaybackMediaMarkerSequence')
make_head(_module, 'TimedMetadataPresentationModeChangedEventArgs')
