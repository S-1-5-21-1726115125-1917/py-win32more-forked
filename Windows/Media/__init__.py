from __future__ import annotations
from ctypes import c_void_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from typing import Generic, TypeVar
K = TypeVar('T')
T = TypeVar('T')
V = TypeVar('V')
TProgress = TypeVar('TProgress')
TResult = TypeVar('TResult')
TSender = TypeVar('TSender')
from Windows import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion
from Windows._winrt import WinRT_String, winrt_commethod, winrt_mixinmethod, winrt_classmethod, winrt_factorymethod, winrt_activatemethod
import Windows.Win32.System.WinRT
import Windows.ApplicationModel.AppService
import Windows.Foundation
import Windows.Foundation.Collections
import Windows.Graphics.DirectX
import Windows.Graphics.DirectX.Direct3D11
import Windows.Graphics.Imaging
import Windows.Media
import Windows.Storage
import Windows.Storage.Streams
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
class AudioBuffer(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.AudioBuffer'
    @winrt_mixinmethod
    def get_Capacity(self: Windows.Media.IAudioBuffer) -> UInt32: ...
    @winrt_mixinmethod
    def get_Length(self: Windows.Media.IAudioBuffer) -> UInt32: ...
    @winrt_mixinmethod
    def put_Length(self: Windows.Media.IAudioBuffer, value: UInt32) -> Void: ...
    @winrt_mixinmethod
    def CreateReference(self: Windows.Foundation.IMemoryBuffer) -> Windows.Foundation.IMemoryBufferReference: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    Capacity = property(get_Capacity, None)
    Length = property(get_Length, put_Length)
AudioBufferAccessMode = Int32
AudioBufferAccessMode_Read: AudioBufferAccessMode = 0
AudioBufferAccessMode_ReadWrite: AudioBufferAccessMode = 1
AudioBufferAccessMode_Write: AudioBufferAccessMode = 2
class AudioFrame(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.AudioFrame'
    @winrt_factorymethod
    def Create(cls: Windows.Media.IAudioFrameFactory, capacity: UInt32) -> Windows.Media.AudioFrame: ...
    @winrt_mixinmethod
    def LockBuffer(self: Windows.Media.IAudioFrame, mode: Windows.Media.AudioBufferAccessMode) -> Windows.Media.AudioBuffer: ...
    @winrt_mixinmethod
    def get_Type(self: Windows.Media.IMediaFrame) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_IsReadOnly(self: Windows.Media.IMediaFrame) -> Boolean: ...
    @winrt_mixinmethod
    def put_RelativeTime(self: Windows.Media.IMediaFrame, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_RelativeTime(self: Windows.Media.IMediaFrame) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_SystemRelativeTime(self: Windows.Media.IMediaFrame, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_SystemRelativeTime(self: Windows.Media.IMediaFrame) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_Duration(self: Windows.Media.IMediaFrame, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_Duration(self: Windows.Media.IMediaFrame) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_IsDiscontinuous(self: Windows.Media.IMediaFrame, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsDiscontinuous(self: Windows.Media.IMediaFrame) -> Boolean: ...
    @winrt_mixinmethod
    def get_ExtendedProperties(self: Windows.Media.IMediaFrame) -> Windows.Foundation.Collections.IPropertySet: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    Type = property(get_Type, None)
    IsReadOnly = property(get_IsReadOnly, None)
    RelativeTime = property(get_RelativeTime, put_RelativeTime)
    SystemRelativeTime = property(get_SystemRelativeTime, put_SystemRelativeTime)
    Duration = property(get_Duration, put_Duration)
    IsDiscontinuous = property(get_IsDiscontinuous, put_IsDiscontinuous)
    ExtendedProperties = property(get_ExtendedProperties, None)
AudioProcessing = Int32
AudioProcessing_Default: AudioProcessing = 0
AudioProcessing_Raw: AudioProcessing = 1
class AutoRepeatModeChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.AutoRepeatModeChangeRequestedEventArgs'
    @winrt_mixinmethod
    def get_RequestedAutoRepeatMode(self: Windows.Media.IAutoRepeatModeChangeRequestedEventArgs) -> Windows.Media.MediaPlaybackAutoRepeatMode: ...
    RequestedAutoRepeatMode = property(get_RequestedAutoRepeatMode, None)
class IAudioBuffer(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('35175827-724b-4c6a-b1-30-f6-53-7f-9a-e0-d0')
    @winrt_commethod(6)
    def get_Capacity(self) -> UInt32: ...
    @winrt_commethod(7)
    def get_Length(self) -> UInt32: ...
    @winrt_commethod(8)
    def put_Length(self, value: UInt32) -> Void: ...
    Capacity = property(get_Capacity, None)
    Length = property(get_Length, put_Length)
class IAudioFrame(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('e36ac304-aab2-4277-9e-d0-43-ce-df-8e-29-c6')
    @winrt_commethod(6)
    def LockBuffer(self, mode: Windows.Media.AudioBufferAccessMode) -> Windows.Media.AudioBuffer: ...
class IAudioFrameFactory(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('91a90ade-2422-40a6-b9-ad-30-d0-24-04-31-7d')
    @winrt_commethod(6)
    def Create(self, capacity: UInt32) -> Windows.Media.AudioFrame: ...
class IAutoRepeatModeChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('ea137efa-d852-438e-88-2b-c9-90-10-9a-78-f4')
    @winrt_commethod(6)
    def get_RequestedAutoRepeatMode(self) -> Windows.Media.MediaPlaybackAutoRepeatMode: ...
    RequestedAutoRepeatMode = property(get_RequestedAutoRepeatMode, None)
class IImageDisplayProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('cd0bc7ef-54e7-411f-99-33-f0-e9-8b-0a-96-d2')
    @winrt_commethod(6)
    def get_Title(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_Title(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_Subtitle(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_Subtitle(self, value: WinRT_String) -> Void: ...
    Title = property(get_Title, put_Title)
    Subtitle = property(get_Subtitle, put_Subtitle)
class IMediaExtension(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('07915118-45df-442b-8a-3f-f7-82-6a-63-70-ab')
    @winrt_commethod(6)
    def SetProperties(self, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
class IMediaExtensionManager(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('4a25eaf5-242d-4dfb-97-f4-69-b7-c4-25-76-ff')
    @winrt_commethod(6)
    def RegisterSchemeHandler(self, activatableClassId: WinRT_String, scheme: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def RegisterSchemeHandlerWithSettings(self, activatableClassId: WinRT_String, scheme: WinRT_String, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_commethod(8)
    def RegisterByteStreamHandler(self, activatableClassId: WinRT_String, fileExtension: WinRT_String, mimeType: WinRT_String) -> Void: ...
    @winrt_commethod(9)
    def RegisterByteStreamHandlerWithSettings(self, activatableClassId: WinRT_String, fileExtension: WinRT_String, mimeType: WinRT_String, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_commethod(10)
    def RegisterAudioDecoder(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_commethod(11)
    def RegisterAudioDecoderWithSettings(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_commethod(12)
    def RegisterAudioEncoder(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_commethod(13)
    def RegisterAudioEncoderWithSettings(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_commethod(14)
    def RegisterVideoDecoder(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_commethod(15)
    def RegisterVideoDecoderWithSettings(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_commethod(16)
    def RegisterVideoEncoder(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_commethod(17)
    def RegisterVideoEncoderWithSettings(self, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
class IMediaExtensionManager2(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('5bcebf47-4043-4fed-ac-af-54-ec-29-df-b1-f7')
    @winrt_commethod(6)
    def RegisterMediaExtensionForAppService(self, extension: Windows.Media.IMediaExtension, connection: Windows.ApplicationModel.AppService.AppServiceConnection) -> Void: ...
class IMediaFrame(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('bfb52f8c-5943-47d8-8e-10-05-30-8a-a5-fb-d0')
    @winrt_commethod(6)
    def get_Type(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_IsReadOnly(self) -> Boolean: ...
    @winrt_commethod(8)
    def put_RelativeTime(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(9)
    def get_RelativeTime(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(10)
    def put_SystemRelativeTime(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(11)
    def get_SystemRelativeTime(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(12)
    def put_Duration(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(13)
    def get_Duration(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(14)
    def put_IsDiscontinuous(self, value: Boolean) -> Void: ...
    @winrt_commethod(15)
    def get_IsDiscontinuous(self) -> Boolean: ...
    @winrt_commethod(16)
    def get_ExtendedProperties(self) -> Windows.Foundation.Collections.IPropertySet: ...
    Type = property(get_Type, None)
    IsReadOnly = property(get_IsReadOnly, None)
    RelativeTime = property(get_RelativeTime, put_RelativeTime)
    SystemRelativeTime = property(get_SystemRelativeTime, put_SystemRelativeTime)
    Duration = property(get_Duration, put_Duration)
    IsDiscontinuous = property(get_IsDiscontinuous, put_IsDiscontinuous)
    ExtendedProperties = property(get_ExtendedProperties, None)
class IMediaMarker(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('1803def8-dca5-4b6f-9c-20-e3-d3-c0-64-36-25')
    @winrt_commethod(6)
    def get_Time(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(7)
    def get_MediaMarkerType(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_Text(self) -> WinRT_String: ...
    Time = property(get_Time, None)
    MediaMarkerType = property(get_MediaMarkerType, None)
    Text = property(get_Text, None)
class IMediaMarkerTypesStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('bb198040-482f-4743-88-32-45-85-38-21-ec-e0')
    @winrt_commethod(6)
    def get_Bookmark(self) -> WinRT_String: ...
    Bookmark = property(get_Bookmark, None)
class IMediaMarkers(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('afeab189-f8dd-466e-aa-10-92-0b-52-35-3f-df')
    @winrt_commethod(6)
    def get_Markers(self) -> Windows.Foundation.Collections.IVectorView[Windows.Media.IMediaMarker]: ...
    Markers = property(get_Markers, None)
class IMediaProcessingTriggerDetails(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('eb8564ac-a351-4f4e-b4-f0-9b-f2-40-89-93-db')
    @winrt_commethod(6)
    def get_Arguments(self) -> Windows.Foundation.Collections.ValueSet: ...
    Arguments = property(get_Arguments, None)
class IMediaTimelineController(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('8ed361f3-0b78-4360-bf-71-0c-84-19-99-ea-1b')
    @winrt_commethod(6)
    def Start(self) -> Void: ...
    @winrt_commethod(7)
    def Resume(self) -> Void: ...
    @winrt_commethod(8)
    def Pause(self) -> Void: ...
    @winrt_commethod(9)
    def get_Position(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(10)
    def put_Position(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(11)
    def get_ClockRate(self) -> Double: ...
    @winrt_commethod(12)
    def put_ClockRate(self, value: Double) -> Void: ...
    @winrt_commethod(13)
    def get_State(self) -> Windows.Media.MediaTimelineControllerState: ...
    @winrt_commethod(14)
    def add_PositionChanged(self, positionChangedEventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(15)
    def remove_PositionChanged(self, eventCookie: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(16)
    def add_StateChanged(self, stateChangedEventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(17)
    def remove_StateChanged(self, eventCookie: Windows.Foundation.EventRegistrationToken) -> Void: ...
    Position = property(get_Position, put_Position)
    ClockRate = property(get_ClockRate, put_ClockRate)
    State = property(get_State, None)
class IMediaTimelineController2(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('ef74ea38-9e72-4df9-83-55-6e-90-c8-1b-ba-dd')
    @winrt_commethod(6)
    def get_Duration(self) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_commethod(7)
    def put_Duration(self, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_commethod(8)
    def get_IsLoopingEnabled(self) -> Boolean: ...
    @winrt_commethod(9)
    def put_IsLoopingEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(10)
    def add_Failed(self, eventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Media.MediaTimelineControllerFailedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(11)
    def remove_Failed(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(12)
    def add_Ended(self, eventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(13)
    def remove_Ended(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    Duration = property(get_Duration, put_Duration)
    IsLoopingEnabled = property(get_IsLoopingEnabled, put_IsLoopingEnabled)
class IMediaTimelineControllerFailedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('8821f81d-3e77-43fb-be-26-4f-c8-7a-04-48-34')
    @winrt_commethod(6)
    def get_ExtendedError(self) -> Windows.Foundation.HResult: ...
    ExtendedError = property(get_ExtendedError, None)
class IMusicDisplayProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('6bbf0c59-d0a0-4d26-92-a0-f9-78-e1-d1-8e-7b')
    @winrt_commethod(6)
    def get_Title(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_Title(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_AlbumArtist(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_AlbumArtist(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(10)
    def get_Artist(self) -> WinRT_String: ...
    @winrt_commethod(11)
    def put_Artist(self, value: WinRT_String) -> Void: ...
    Title = property(get_Title, put_Title)
    AlbumArtist = property(get_AlbumArtist, put_AlbumArtist)
    Artist = property(get_Artist, put_Artist)
class IMusicDisplayProperties2(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('00368462-97d3-44b9-b0-0f-00-8a-fc-ef-af-18')
    @winrt_commethod(6)
    def get_AlbumTitle(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_AlbumTitle(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_TrackNumber(self) -> UInt32: ...
    @winrt_commethod(9)
    def put_TrackNumber(self, value: UInt32) -> Void: ...
    @winrt_commethod(10)
    def get_Genres(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    AlbumTitle = property(get_AlbumTitle, put_AlbumTitle)
    TrackNumber = property(get_TrackNumber, put_TrackNumber)
    Genres = property(get_Genres, None)
class IMusicDisplayProperties3(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('4db51ac1-0681-4e8c-94-01-b8-15-9d-9e-ef-c7')
    @winrt_commethod(6)
    def get_AlbumTrackCount(self) -> UInt32: ...
    @winrt_commethod(7)
    def put_AlbumTrackCount(self, value: UInt32) -> Void: ...
    AlbumTrackCount = property(get_AlbumTrackCount, put_AlbumTrackCount)
class IPlaybackPositionChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('b4493f88-eb28-4961-9c-14-33-5e-44-f3-e1-25')
    @winrt_commethod(6)
    def get_RequestedPlaybackPosition(self) -> Windows.Foundation.TimeSpan: ...
    RequestedPlaybackPosition = property(get_RequestedPlaybackPosition, None)
class IPlaybackRateChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('2ce2c41f-3cd6-4f77-9b-a7-eb-27-c2-6a-21-40')
    @winrt_commethod(6)
    def get_RequestedPlaybackRate(self) -> Double: ...
    RequestedPlaybackRate = property(get_RequestedPlaybackRate, None)
class IShuffleEnabledChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('49b593fe-4fd0-4666-a3-14-c0-e0-19-40-d3-02')
    @winrt_commethod(6)
    def get_RequestedShuffleEnabled(self) -> Boolean: ...
    RequestedShuffleEnabled = property(get_RequestedShuffleEnabled, None)
class ISystemMediaTransportControls(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('99fa3ff4-1742-42a6-90-2e-08-7d-41-f9-65-ec')
    @winrt_commethod(6)
    def get_PlaybackStatus(self) -> Windows.Media.MediaPlaybackStatus: ...
    @winrt_commethod(7)
    def put_PlaybackStatus(self, value: Windows.Media.MediaPlaybackStatus) -> Void: ...
    @winrt_commethod(8)
    def get_DisplayUpdater(self) -> Windows.Media.SystemMediaTransportControlsDisplayUpdater: ...
    @winrt_commethod(9)
    def get_SoundLevel(self) -> Windows.Media.SoundLevel: ...
    @winrt_commethod(10)
    def get_IsEnabled(self) -> Boolean: ...
    @winrt_commethod(11)
    def put_IsEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(12)
    def get_IsPlayEnabled(self) -> Boolean: ...
    @winrt_commethod(13)
    def put_IsPlayEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(14)
    def get_IsStopEnabled(self) -> Boolean: ...
    @winrt_commethod(15)
    def put_IsStopEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(16)
    def get_IsPauseEnabled(self) -> Boolean: ...
    @winrt_commethod(17)
    def put_IsPauseEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(18)
    def get_IsRecordEnabled(self) -> Boolean: ...
    @winrt_commethod(19)
    def put_IsRecordEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(20)
    def get_IsFastForwardEnabled(self) -> Boolean: ...
    @winrt_commethod(21)
    def put_IsFastForwardEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(22)
    def get_IsRewindEnabled(self) -> Boolean: ...
    @winrt_commethod(23)
    def put_IsRewindEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(24)
    def get_IsPreviousEnabled(self) -> Boolean: ...
    @winrt_commethod(25)
    def put_IsPreviousEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(26)
    def get_IsNextEnabled(self) -> Boolean: ...
    @winrt_commethod(27)
    def put_IsNextEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(28)
    def get_IsChannelUpEnabled(self) -> Boolean: ...
    @winrt_commethod(29)
    def put_IsChannelUpEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(30)
    def get_IsChannelDownEnabled(self) -> Boolean: ...
    @winrt_commethod(31)
    def put_IsChannelDownEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(32)
    def add_ButtonPressed(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.SystemMediaTransportControlsButtonPressedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(33)
    def remove_ButtonPressed(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(34)
    def add_PropertyChanged(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.SystemMediaTransportControlsPropertyChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(35)
    def remove_PropertyChanged(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    PlaybackStatus = property(get_PlaybackStatus, put_PlaybackStatus)
    DisplayUpdater = property(get_DisplayUpdater, None)
    SoundLevel = property(get_SoundLevel, None)
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
    IsPlayEnabled = property(get_IsPlayEnabled, put_IsPlayEnabled)
    IsStopEnabled = property(get_IsStopEnabled, put_IsStopEnabled)
    IsPauseEnabled = property(get_IsPauseEnabled, put_IsPauseEnabled)
    IsRecordEnabled = property(get_IsRecordEnabled, put_IsRecordEnabled)
    IsFastForwardEnabled = property(get_IsFastForwardEnabled, put_IsFastForwardEnabled)
    IsRewindEnabled = property(get_IsRewindEnabled, put_IsRewindEnabled)
    IsPreviousEnabled = property(get_IsPreviousEnabled, put_IsPreviousEnabled)
    IsNextEnabled = property(get_IsNextEnabled, put_IsNextEnabled)
    IsChannelUpEnabled = property(get_IsChannelUpEnabled, put_IsChannelUpEnabled)
    IsChannelDownEnabled = property(get_IsChannelDownEnabled, put_IsChannelDownEnabled)
class ISystemMediaTransportControls2(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('ea98d2f6-7f3c-4af2-a5-86-72-88-98-08-ef-b1')
    @winrt_commethod(6)
    def get_AutoRepeatMode(self) -> Windows.Media.MediaPlaybackAutoRepeatMode: ...
    @winrt_commethod(7)
    def put_AutoRepeatMode(self, value: Windows.Media.MediaPlaybackAutoRepeatMode) -> Void: ...
    @winrt_commethod(8)
    def get_ShuffleEnabled(self) -> Boolean: ...
    @winrt_commethod(9)
    def put_ShuffleEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(10)
    def get_PlaybackRate(self) -> Double: ...
    @winrt_commethod(11)
    def put_PlaybackRate(self, value: Double) -> Void: ...
    @winrt_commethod(12)
    def UpdateTimelineProperties(self, timelineProperties: Windows.Media.SystemMediaTransportControlsTimelineProperties) -> Void: ...
    @winrt_commethod(13)
    def add_PlaybackPositionChangeRequested(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.PlaybackPositionChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(14)
    def remove_PlaybackPositionChangeRequested(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(15)
    def add_PlaybackRateChangeRequested(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.PlaybackRateChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(16)
    def remove_PlaybackRateChangeRequested(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(17)
    def add_ShuffleEnabledChangeRequested(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.ShuffleEnabledChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(18)
    def remove_ShuffleEnabledChangeRequested(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_commethod(19)
    def add_AutoRepeatModeChangeRequested(self, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.AutoRepeatModeChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(20)
    def remove_AutoRepeatModeChangeRequested(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    AutoRepeatMode = property(get_AutoRepeatMode, put_AutoRepeatMode)
    ShuffleEnabled = property(get_ShuffleEnabled, put_ShuffleEnabled)
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
class ISystemMediaTransportControlsButtonPressedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('b7f47116-a56f-4dc8-9e-11-92-03-1f-4a-87-c2')
    @winrt_commethod(6)
    def get_Button(self) -> Windows.Media.SystemMediaTransportControlsButton: ...
    Button = property(get_Button, None)
class ISystemMediaTransportControlsDisplayUpdater(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('8abbc53e-fa55-4ecf-ad-8e-c9-84-e5-dd-15-50')
    @winrt_commethod(6)
    def get_Type(self) -> Windows.Media.MediaPlaybackType: ...
    @winrt_commethod(7)
    def put_Type(self, value: Windows.Media.MediaPlaybackType) -> Void: ...
    @winrt_commethod(8)
    def get_AppMediaId(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_AppMediaId(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(10)
    def get_Thumbnail(self) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_commethod(11)
    def put_Thumbnail(self, value: Windows.Storage.Streams.RandomAccessStreamReference) -> Void: ...
    @winrt_commethod(12)
    def get_MusicProperties(self) -> Windows.Media.MusicDisplayProperties: ...
    @winrt_commethod(13)
    def get_VideoProperties(self) -> Windows.Media.VideoDisplayProperties: ...
    @winrt_commethod(14)
    def get_ImageProperties(self) -> Windows.Media.ImageDisplayProperties: ...
    @winrt_commethod(15)
    def CopyFromFileAsync(self, type: Windows.Media.MediaPlaybackType, source: Windows.Storage.StorageFile) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(16)
    def ClearAll(self) -> Void: ...
    @winrt_commethod(17)
    def Update(self) -> Void: ...
    Type = property(get_Type, put_Type)
    AppMediaId = property(get_AppMediaId, put_AppMediaId)
    Thumbnail = property(get_Thumbnail, put_Thumbnail)
    MusicProperties = property(get_MusicProperties, None)
    VideoProperties = property(get_VideoProperties, None)
    ImageProperties = property(get_ImageProperties, None)
class ISystemMediaTransportControlsPropertyChangedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('d0ca0936-339b-4cb3-8e-eb-73-76-07-f5-6e-08')
    @winrt_commethod(6)
    def get_Property(self) -> Windows.Media.SystemMediaTransportControlsProperty: ...
    Property = property(get_Property, None)
class ISystemMediaTransportControlsStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('43ba380a-eca4-4832-91-ab-d4-15-fa-e4-84-c6')
    @winrt_commethod(6)
    def GetForCurrentView(self) -> Windows.Media.SystemMediaTransportControls: ...
class ISystemMediaTransportControlsTimelineProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('5125316a-c3a2-475b-85-07-93-53-4d-c8-8f-15')
    @winrt_commethod(6)
    def get_StartTime(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(7)
    def put_StartTime(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(8)
    def get_EndTime(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(9)
    def put_EndTime(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(10)
    def get_MinSeekTime(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(11)
    def put_MinSeekTime(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(12)
    def get_MaxSeekTime(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(13)
    def put_MaxSeekTime(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(14)
    def get_Position(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(15)
    def put_Position(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    StartTime = property(get_StartTime, put_StartTime)
    EndTime = property(get_EndTime, put_EndTime)
    MinSeekTime = property(get_MinSeekTime, put_MinSeekTime)
    MaxSeekTime = property(get_MaxSeekTime, put_MaxSeekTime)
    Position = property(get_Position, put_Position)
class IVideoDisplayProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('5609fdb1-5d2d-4872-81-70-45-de-e5-bc-2f-5c')
    @winrt_commethod(6)
    def get_Title(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_Title(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(8)
    def get_Subtitle(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_Subtitle(self, value: WinRT_String) -> Void: ...
    Title = property(get_Title, put_Title)
    Subtitle = property(get_Subtitle, put_Subtitle)
class IVideoDisplayProperties2(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('b410e1ce-ab52-41ab-a4-86-cc-10-fa-b1-52-f9')
    @winrt_commethod(6)
    def get_Genres(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    Genres = property(get_Genres, None)
class IVideoEffectsStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('1fcda5e8-baf1-4521-98-0c-3b-ce-bb-44-cf-38')
    @winrt_commethod(6)
    def get_VideoStabilization(self) -> WinRT_String: ...
    VideoStabilization = property(get_VideoStabilization, None)
class IVideoFrame(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('0cc06625-90fc-4c92-bd-95-7d-ed-21-81-9d-1c')
    @winrt_commethod(6)
    def get_SoftwareBitmap(self) -> Windows.Graphics.Imaging.SoftwareBitmap: ...
    @winrt_commethod(7)
    def CopyToAsync(self, frame: Windows.Media.VideoFrame) -> Windows.Foundation.IAsyncAction: ...
    @winrt_commethod(8)
    def get_Direct3DSurface(self) -> Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface: ...
    SoftwareBitmap = property(get_SoftwareBitmap, None)
    Direct3DSurface = property(get_Direct3DSurface, None)
class IVideoFrame2(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('3837840d-336c-4366-8d-46-06-07-98-73-6c-5d')
    @winrt_commethod(6)
    def CopyToWithBoundsAsync(self, frame: Windows.Media.VideoFrame, sourceBounds: Windows.Foundation.IReference[Windows.Graphics.Imaging.BitmapBounds], destinationBounds: Windows.Foundation.IReference[Windows.Graphics.Imaging.BitmapBounds]) -> Windows.Foundation.IAsyncAction: ...
class IVideoFrameFactory(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('014b6d69-2228-4c92-92-ff-50-c3-80-d3-e7-76')
    @winrt_commethod(6)
    def Create(self, format: Windows.Graphics.Imaging.BitmapPixelFormat, width: Int32, height: Int32) -> Windows.Media.VideoFrame: ...
    @winrt_commethod(7)
    def CreateWithAlpha(self, format: Windows.Graphics.Imaging.BitmapPixelFormat, width: Int32, height: Int32, alpha: Windows.Graphics.Imaging.BitmapAlphaMode) -> Windows.Media.VideoFrame: ...
class IVideoFrameStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('ab2a556f-6111-4b33-8e-c3-2b-20-9a-02-e1-7a')
    @winrt_commethod(6)
    def CreateAsDirect3D11SurfaceBacked(self, format: Windows.Graphics.DirectX.DirectXPixelFormat, width: Int32, height: Int32) -> Windows.Media.VideoFrame: ...
    @winrt_commethod(7)
    def CreateAsDirect3D11SurfaceBackedWithDevice(self, format: Windows.Graphics.DirectX.DirectXPixelFormat, width: Int32, height: Int32, device: Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice) -> Windows.Media.VideoFrame: ...
    @winrt_commethod(8)
    def CreateWithSoftwareBitmap(self, bitmap: Windows.Graphics.Imaging.SoftwareBitmap) -> Windows.Media.VideoFrame: ...
    @winrt_commethod(9)
    def CreateWithDirect3D11Surface(self, surface: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Windows.Media.VideoFrame: ...
class ImageDisplayProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.ImageDisplayProperties'
    @winrt_mixinmethod
    def get_Title(self: Windows.Media.IImageDisplayProperties) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Title(self: Windows.Media.IImageDisplayProperties, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Subtitle(self: Windows.Media.IImageDisplayProperties) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Subtitle(self: Windows.Media.IImageDisplayProperties, value: WinRT_String) -> Void: ...
    Title = property(get_Title, put_Title)
    Subtitle = property(get_Subtitle, put_Subtitle)
class MediaExtensionManager(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.MediaExtensionManager'
    @winrt_activatemethod
    def New(cls) -> Windows.Media.MediaExtensionManager: ...
    @winrt_mixinmethod
    def RegisterSchemeHandler(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, scheme: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def RegisterSchemeHandlerWithSettings(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, scheme: WinRT_String, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def RegisterByteStreamHandler(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, fileExtension: WinRT_String, mimeType: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def RegisterByteStreamHandlerWithSettings(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, fileExtension: WinRT_String, mimeType: WinRT_String, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def RegisterAudioDecoder(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_mixinmethod
    def RegisterAudioDecoderWithSettings(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def RegisterAudioEncoder(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_mixinmethod
    def RegisterAudioEncoderWithSettings(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def RegisterVideoDecoder(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_mixinmethod
    def RegisterVideoDecoderWithSettings(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def RegisterVideoEncoder(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid) -> Void: ...
    @winrt_mixinmethod
    def RegisterVideoEncoderWithSettings(self: Windows.Media.IMediaExtensionManager, activatableClassId: WinRT_String, inputSubtype: Guid, outputSubtype: Guid, configuration: Windows.Foundation.Collections.IPropertySet) -> Void: ...
    @winrt_mixinmethod
    def RegisterMediaExtensionForAppService(self: Windows.Media.IMediaExtensionManager2, extension: Windows.Media.IMediaExtension, connection: Windows.ApplicationModel.AppService.AppServiceConnection) -> Void: ...
class MediaMarkerTypes(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.MediaMarkerTypes'
    @winrt_classmethod
    def get_Bookmark(cls: Windows.Media.IMediaMarkerTypesStatics) -> WinRT_String: ...
    Bookmark = property(get_Bookmark, None)
MediaPlaybackAutoRepeatMode = Int32
MediaPlaybackAutoRepeatMode_None: MediaPlaybackAutoRepeatMode = 0
MediaPlaybackAutoRepeatMode_Track: MediaPlaybackAutoRepeatMode = 1
MediaPlaybackAutoRepeatMode_List: MediaPlaybackAutoRepeatMode = 2
MediaPlaybackStatus = Int32
MediaPlaybackStatus_Closed: MediaPlaybackStatus = 0
MediaPlaybackStatus_Changing: MediaPlaybackStatus = 1
MediaPlaybackStatus_Stopped: MediaPlaybackStatus = 2
MediaPlaybackStatus_Playing: MediaPlaybackStatus = 3
MediaPlaybackStatus_Paused: MediaPlaybackStatus = 4
MediaPlaybackType = Int32
MediaPlaybackType_Unknown: MediaPlaybackType = 0
MediaPlaybackType_Music: MediaPlaybackType = 1
MediaPlaybackType_Video: MediaPlaybackType = 2
MediaPlaybackType_Image: MediaPlaybackType = 3
class MediaProcessingTriggerDetails(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.MediaProcessingTriggerDetails'
    @winrt_mixinmethod
    def get_Arguments(self: Windows.Media.IMediaProcessingTriggerDetails) -> Windows.Foundation.Collections.ValueSet: ...
    Arguments = property(get_Arguments, None)
class MediaTimeRange(EasyCastStructure):
    Start: Windows.Foundation.TimeSpan
    End: Windows.Foundation.TimeSpan
class MediaTimelineController(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.MediaTimelineController'
    @winrt_activatemethod
    def New(cls) -> Windows.Media.MediaTimelineController: ...
    @winrt_mixinmethod
    def Start(self: Windows.Media.IMediaTimelineController) -> Void: ...
    @winrt_mixinmethod
    def Resume(self: Windows.Media.IMediaTimelineController) -> Void: ...
    @winrt_mixinmethod
    def Pause(self: Windows.Media.IMediaTimelineController) -> Void: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Media.IMediaTimelineController) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_Position(self: Windows.Media.IMediaTimelineController, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_ClockRate(self: Windows.Media.IMediaTimelineController) -> Double: ...
    @winrt_mixinmethod
    def put_ClockRate(self: Windows.Media.IMediaTimelineController, value: Double) -> Void: ...
    @winrt_mixinmethod
    def get_State(self: Windows.Media.IMediaTimelineController) -> Windows.Media.MediaTimelineControllerState: ...
    @winrt_mixinmethod
    def add_PositionChanged(self: Windows.Media.IMediaTimelineController, positionChangedEventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PositionChanged(self: Windows.Media.IMediaTimelineController, eventCookie: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_StateChanged(self: Windows.Media.IMediaTimelineController, stateChangedEventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_StateChanged(self: Windows.Media.IMediaTimelineController, eventCookie: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_Duration(self: Windows.Media.IMediaTimelineController2) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_Duration(self: Windows.Media.IMediaTimelineController2, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_IsLoopingEnabled(self: Windows.Media.IMediaTimelineController2) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsLoopingEnabled(self: Windows.Media.IMediaTimelineController2, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def add_Failed(self: Windows.Media.IMediaTimelineController2, eventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Media.MediaTimelineControllerFailedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_Failed(self: Windows.Media.IMediaTimelineController2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_Ended(self: Windows.Media.IMediaTimelineController2, eventHandler: Windows.Foundation.TypedEventHandler[Windows.Media.MediaTimelineController, Windows.Win32.System.WinRT.IInspectable_head]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_Ended(self: Windows.Media.IMediaTimelineController2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    Position = property(get_Position, put_Position)
    ClockRate = property(get_ClockRate, put_ClockRate)
    State = property(get_State, None)
    Duration = property(get_Duration, put_Duration)
    IsLoopingEnabled = property(get_IsLoopingEnabled, put_IsLoopingEnabled)
class MediaTimelineControllerFailedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.MediaTimelineControllerFailedEventArgs'
    @winrt_mixinmethod
    def get_ExtendedError(self: Windows.Media.IMediaTimelineControllerFailedEventArgs) -> Windows.Foundation.HResult: ...
    ExtendedError = property(get_ExtendedError, None)
MediaTimelineControllerState = Int32
MediaTimelineControllerState_Paused: MediaTimelineControllerState = 0
MediaTimelineControllerState_Running: MediaTimelineControllerState = 1
MediaTimelineControllerState_Stalled: MediaTimelineControllerState = 2
MediaTimelineControllerState_Error: MediaTimelineControllerState = 3
class MusicDisplayProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.MusicDisplayProperties'
    @winrt_mixinmethod
    def get_Title(self: Windows.Media.IMusicDisplayProperties) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Title(self: Windows.Media.IMusicDisplayProperties, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_AlbumArtist(self: Windows.Media.IMusicDisplayProperties) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_AlbumArtist(self: Windows.Media.IMusicDisplayProperties, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Artist(self: Windows.Media.IMusicDisplayProperties) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Artist(self: Windows.Media.IMusicDisplayProperties, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_AlbumTitle(self: Windows.Media.IMusicDisplayProperties2) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_AlbumTitle(self: Windows.Media.IMusicDisplayProperties2, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_TrackNumber(self: Windows.Media.IMusicDisplayProperties2) -> UInt32: ...
    @winrt_mixinmethod
    def put_TrackNumber(self: Windows.Media.IMusicDisplayProperties2, value: UInt32) -> Void: ...
    @winrt_mixinmethod
    def get_Genres(self: Windows.Media.IMusicDisplayProperties2) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def get_AlbumTrackCount(self: Windows.Media.IMusicDisplayProperties3) -> UInt32: ...
    @winrt_mixinmethod
    def put_AlbumTrackCount(self: Windows.Media.IMusicDisplayProperties3, value: UInt32) -> Void: ...
    Title = property(get_Title, put_Title)
    AlbumArtist = property(get_AlbumArtist, put_AlbumArtist)
    Artist = property(get_Artist, put_Artist)
    AlbumTitle = property(get_AlbumTitle, put_AlbumTitle)
    TrackNumber = property(get_TrackNumber, put_TrackNumber)
    Genres = property(get_Genres, None)
    AlbumTrackCount = property(get_AlbumTrackCount, put_AlbumTrackCount)
class PlaybackPositionChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.PlaybackPositionChangeRequestedEventArgs'
    @winrt_mixinmethod
    def get_RequestedPlaybackPosition(self: Windows.Media.IPlaybackPositionChangeRequestedEventArgs) -> Windows.Foundation.TimeSpan: ...
    RequestedPlaybackPosition = property(get_RequestedPlaybackPosition, None)
class PlaybackRateChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.PlaybackRateChangeRequestedEventArgs'
    @winrt_mixinmethod
    def get_RequestedPlaybackRate(self: Windows.Media.IPlaybackRateChangeRequestedEventArgs) -> Double: ...
    RequestedPlaybackRate = property(get_RequestedPlaybackRate, None)
class ShuffleEnabledChangeRequestedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.ShuffleEnabledChangeRequestedEventArgs'
    @winrt_mixinmethod
    def get_RequestedShuffleEnabled(self: Windows.Media.IShuffleEnabledChangeRequestedEventArgs) -> Boolean: ...
    RequestedShuffleEnabled = property(get_RequestedShuffleEnabled, None)
SoundLevel = Int32
SoundLevel_Muted: SoundLevel = 0
SoundLevel_Low: SoundLevel = 1
SoundLevel_Full: SoundLevel = 2
class SystemMediaTransportControls(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.SystemMediaTransportControls'
    @winrt_mixinmethod
    def get_PlaybackStatus(self: Windows.Media.ISystemMediaTransportControls) -> Windows.Media.MediaPlaybackStatus: ...
    @winrt_mixinmethod
    def put_PlaybackStatus(self: Windows.Media.ISystemMediaTransportControls, value: Windows.Media.MediaPlaybackStatus) -> Void: ...
    @winrt_mixinmethod
    def get_DisplayUpdater(self: Windows.Media.ISystemMediaTransportControls) -> Windows.Media.SystemMediaTransportControlsDisplayUpdater: ...
    @winrt_mixinmethod
    def get_SoundLevel(self: Windows.Media.ISystemMediaTransportControls) -> Windows.Media.SoundLevel: ...
    @winrt_mixinmethod
    def get_IsEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsPlayEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsPlayEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsStopEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsStopEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsPauseEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsPauseEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsRecordEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsRecordEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsFastForwardEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsFastForwardEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsRewindEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsRewindEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsPreviousEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsPreviousEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsNextEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsNextEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsChannelUpEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsChannelUpEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsChannelDownEnabled(self: Windows.Media.ISystemMediaTransportControls) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsChannelDownEnabled(self: Windows.Media.ISystemMediaTransportControls, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def add_ButtonPressed(self: Windows.Media.ISystemMediaTransportControls, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.SystemMediaTransportControlsButtonPressedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_ButtonPressed(self: Windows.Media.ISystemMediaTransportControls, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PropertyChanged(self: Windows.Media.ISystemMediaTransportControls, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.SystemMediaTransportControlsPropertyChangedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PropertyChanged(self: Windows.Media.ISystemMediaTransportControls, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def get_AutoRepeatMode(self: Windows.Media.ISystemMediaTransportControls2) -> Windows.Media.MediaPlaybackAutoRepeatMode: ...
    @winrt_mixinmethod
    def put_AutoRepeatMode(self: Windows.Media.ISystemMediaTransportControls2, value: Windows.Media.MediaPlaybackAutoRepeatMode) -> Void: ...
    @winrt_mixinmethod
    def get_ShuffleEnabled(self: Windows.Media.ISystemMediaTransportControls2) -> Boolean: ...
    @winrt_mixinmethod
    def put_ShuffleEnabled(self: Windows.Media.ISystemMediaTransportControls2, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_PlaybackRate(self: Windows.Media.ISystemMediaTransportControls2) -> Double: ...
    @winrt_mixinmethod
    def put_PlaybackRate(self: Windows.Media.ISystemMediaTransportControls2, value: Double) -> Void: ...
    @winrt_mixinmethod
    def UpdateTimelineProperties(self: Windows.Media.ISystemMediaTransportControls2, timelineProperties: Windows.Media.SystemMediaTransportControlsTimelineProperties) -> Void: ...
    @winrt_mixinmethod
    def add_PlaybackPositionChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.PlaybackPositionChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PlaybackPositionChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_PlaybackRateChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.PlaybackRateChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_PlaybackRateChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_ShuffleEnabledChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.ShuffleEnabledChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_ShuffleEnabledChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_mixinmethod
    def add_AutoRepeatModeChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, handler: Windows.Foundation.TypedEventHandler[Windows.Media.SystemMediaTransportControls, Windows.Media.AutoRepeatModeChangeRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_AutoRepeatModeChangeRequested(self: Windows.Media.ISystemMediaTransportControls2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_classmethod
    def GetForCurrentView(cls: Windows.Media.ISystemMediaTransportControlsStatics) -> Windows.Media.SystemMediaTransportControls: ...
    PlaybackStatus = property(get_PlaybackStatus, put_PlaybackStatus)
    DisplayUpdater = property(get_DisplayUpdater, None)
    SoundLevel = property(get_SoundLevel, None)
    IsEnabled = property(get_IsEnabled, put_IsEnabled)
    IsPlayEnabled = property(get_IsPlayEnabled, put_IsPlayEnabled)
    IsStopEnabled = property(get_IsStopEnabled, put_IsStopEnabled)
    IsPauseEnabled = property(get_IsPauseEnabled, put_IsPauseEnabled)
    IsRecordEnabled = property(get_IsRecordEnabled, put_IsRecordEnabled)
    IsFastForwardEnabled = property(get_IsFastForwardEnabled, put_IsFastForwardEnabled)
    IsRewindEnabled = property(get_IsRewindEnabled, put_IsRewindEnabled)
    IsPreviousEnabled = property(get_IsPreviousEnabled, put_IsPreviousEnabled)
    IsNextEnabled = property(get_IsNextEnabled, put_IsNextEnabled)
    IsChannelUpEnabled = property(get_IsChannelUpEnabled, put_IsChannelUpEnabled)
    IsChannelDownEnabled = property(get_IsChannelDownEnabled, put_IsChannelDownEnabled)
    AutoRepeatMode = property(get_AutoRepeatMode, put_AutoRepeatMode)
    ShuffleEnabled = property(get_ShuffleEnabled, put_ShuffleEnabled)
    PlaybackRate = property(get_PlaybackRate, put_PlaybackRate)
SystemMediaTransportControlsButton = Int32
SystemMediaTransportControlsButton_Play: SystemMediaTransportControlsButton = 0
SystemMediaTransportControlsButton_Pause: SystemMediaTransportControlsButton = 1
SystemMediaTransportControlsButton_Stop: SystemMediaTransportControlsButton = 2
SystemMediaTransportControlsButton_Record: SystemMediaTransportControlsButton = 3
SystemMediaTransportControlsButton_FastForward: SystemMediaTransportControlsButton = 4
SystemMediaTransportControlsButton_Rewind: SystemMediaTransportControlsButton = 5
SystemMediaTransportControlsButton_Next: SystemMediaTransportControlsButton = 6
SystemMediaTransportControlsButton_Previous: SystemMediaTransportControlsButton = 7
SystemMediaTransportControlsButton_ChannelUp: SystemMediaTransportControlsButton = 8
SystemMediaTransportControlsButton_ChannelDown: SystemMediaTransportControlsButton = 9
class SystemMediaTransportControlsButtonPressedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.SystemMediaTransportControlsButtonPressedEventArgs'
    @winrt_mixinmethod
    def get_Button(self: Windows.Media.ISystemMediaTransportControlsButtonPressedEventArgs) -> Windows.Media.SystemMediaTransportControlsButton: ...
    Button = property(get_Button, None)
class SystemMediaTransportControlsDisplayUpdater(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.SystemMediaTransportControlsDisplayUpdater'
    @winrt_mixinmethod
    def get_Type(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> Windows.Media.MediaPlaybackType: ...
    @winrt_mixinmethod
    def put_Type(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater, value: Windows.Media.MediaPlaybackType) -> Void: ...
    @winrt_mixinmethod
    def get_AppMediaId(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_AppMediaId(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Thumbnail(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_mixinmethod
    def put_Thumbnail(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater, value: Windows.Storage.Streams.RandomAccessStreamReference) -> Void: ...
    @winrt_mixinmethod
    def get_MusicProperties(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> Windows.Media.MusicDisplayProperties: ...
    @winrt_mixinmethod
    def get_VideoProperties(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> Windows.Media.VideoDisplayProperties: ...
    @winrt_mixinmethod
    def get_ImageProperties(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> Windows.Media.ImageDisplayProperties: ...
    @winrt_mixinmethod
    def CopyFromFileAsync(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater, type: Windows.Media.MediaPlaybackType, source: Windows.Storage.StorageFile) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def ClearAll(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> Void: ...
    @winrt_mixinmethod
    def Update(self: Windows.Media.ISystemMediaTransportControlsDisplayUpdater) -> Void: ...
    Type = property(get_Type, put_Type)
    AppMediaId = property(get_AppMediaId, put_AppMediaId)
    Thumbnail = property(get_Thumbnail, put_Thumbnail)
    MusicProperties = property(get_MusicProperties, None)
    VideoProperties = property(get_VideoProperties, None)
    ImageProperties = property(get_ImageProperties, None)
SystemMediaTransportControlsProperty = Int32
SystemMediaTransportControlsProperty_SoundLevel: SystemMediaTransportControlsProperty = 0
class SystemMediaTransportControlsPropertyChangedEventArgs(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.SystemMediaTransportControlsPropertyChangedEventArgs'
    @winrt_mixinmethod
    def get_Property(self: Windows.Media.ISystemMediaTransportControlsPropertyChangedEventArgs) -> Windows.Media.SystemMediaTransportControlsProperty: ...
    Property = property(get_Property, None)
class SystemMediaTransportControlsTimelineProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.SystemMediaTransportControlsTimelineProperties'
    @winrt_activatemethod
    def New(cls) -> Windows.Media.SystemMediaTransportControlsTimelineProperties: ...
    @winrt_mixinmethod
    def get_StartTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_StartTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_EndTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_EndTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_MinSeekTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_MinSeekTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_MaxSeekTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_MaxSeekTime(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def put_Position(self: Windows.Media.ISystemMediaTransportControlsTimelineProperties, value: Windows.Foundation.TimeSpan) -> Void: ...
    StartTime = property(get_StartTime, put_StartTime)
    EndTime = property(get_EndTime, put_EndTime)
    MinSeekTime = property(get_MinSeekTime, put_MinSeekTime)
    MaxSeekTime = property(get_MaxSeekTime, put_MaxSeekTime)
    Position = property(get_Position, put_Position)
class VideoDisplayProperties(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.VideoDisplayProperties'
    @winrt_mixinmethod
    def get_Title(self: Windows.Media.IVideoDisplayProperties) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Title(self: Windows.Media.IVideoDisplayProperties, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Subtitle(self: Windows.Media.IVideoDisplayProperties) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Subtitle(self: Windows.Media.IVideoDisplayProperties, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Genres(self: Windows.Media.IVideoDisplayProperties2) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    Title = property(get_Title, put_Title)
    Subtitle = property(get_Subtitle, put_Subtitle)
    Genres = property(get_Genres, None)
class VideoEffects(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.VideoEffects'
    @winrt_classmethod
    def get_VideoStabilization(cls: Windows.Media.IVideoEffectsStatics) -> WinRT_String: ...
    VideoStabilization = property(get_VideoStabilization, None)
class VideoFrame(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Media.VideoFrame'
    @winrt_factorymethod
    def Create(cls: Windows.Media.IVideoFrameFactory, format: Windows.Graphics.Imaging.BitmapPixelFormat, width: Int32, height: Int32) -> Windows.Media.VideoFrame: ...
    @winrt_factorymethod
    def CreateWithAlpha(cls: Windows.Media.IVideoFrameFactory, format: Windows.Graphics.Imaging.BitmapPixelFormat, width: Int32, height: Int32, alpha: Windows.Graphics.Imaging.BitmapAlphaMode) -> Windows.Media.VideoFrame: ...
    @winrt_mixinmethod
    def get_SoftwareBitmap(self: Windows.Media.IVideoFrame) -> Windows.Graphics.Imaging.SoftwareBitmap: ...
    @winrt_mixinmethod
    def CopyToAsync(self: Windows.Media.IVideoFrame, frame: Windows.Media.VideoFrame) -> Windows.Foundation.IAsyncAction: ...
    @winrt_mixinmethod
    def get_Direct3DSurface(self: Windows.Media.IVideoFrame) -> Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface: ...
    @winrt_mixinmethod
    def get_Type(self: Windows.Media.IMediaFrame) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_IsReadOnly(self: Windows.Media.IMediaFrame) -> Boolean: ...
    @winrt_mixinmethod
    def put_RelativeTime(self: Windows.Media.IMediaFrame, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_RelativeTime(self: Windows.Media.IMediaFrame) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_SystemRelativeTime(self: Windows.Media.IMediaFrame, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_SystemRelativeTime(self: Windows.Media.IMediaFrame) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_Duration(self: Windows.Media.IMediaFrame, value: Windows.Foundation.IReference[Windows.Foundation.TimeSpan]) -> Void: ...
    @winrt_mixinmethod
    def get_Duration(self: Windows.Media.IMediaFrame) -> Windows.Foundation.IReference[Windows.Foundation.TimeSpan]: ...
    @winrt_mixinmethod
    def put_IsDiscontinuous(self: Windows.Media.IMediaFrame, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsDiscontinuous(self: Windows.Media.IMediaFrame) -> Boolean: ...
    @winrt_mixinmethod
    def get_ExtendedProperties(self: Windows.Media.IMediaFrame) -> Windows.Foundation.Collections.IPropertySet: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    @winrt_mixinmethod
    def CopyToWithBoundsAsync(self: Windows.Media.IVideoFrame2, frame: Windows.Media.VideoFrame, sourceBounds: Windows.Foundation.IReference[Windows.Graphics.Imaging.BitmapBounds], destinationBounds: Windows.Foundation.IReference[Windows.Graphics.Imaging.BitmapBounds]) -> Windows.Foundation.IAsyncAction: ...
    @winrt_classmethod
    def CreateAsDirect3D11SurfaceBacked(cls: Windows.Media.IVideoFrameStatics, format: Windows.Graphics.DirectX.DirectXPixelFormat, width: Int32, height: Int32) -> Windows.Media.VideoFrame: ...
    @winrt_classmethod
    def CreateAsDirect3D11SurfaceBackedWithDevice(cls: Windows.Media.IVideoFrameStatics, format: Windows.Graphics.DirectX.DirectXPixelFormat, width: Int32, height: Int32, device: Windows.Graphics.DirectX.Direct3D11.IDirect3DDevice) -> Windows.Media.VideoFrame: ...
    @winrt_classmethod
    def CreateWithSoftwareBitmap(cls: Windows.Media.IVideoFrameStatics, bitmap: Windows.Graphics.Imaging.SoftwareBitmap) -> Windows.Media.VideoFrame: ...
    @winrt_classmethod
    def CreateWithDirect3D11Surface(cls: Windows.Media.IVideoFrameStatics, surface: Windows.Graphics.DirectX.Direct3D11.IDirect3DSurface) -> Windows.Media.VideoFrame: ...
    SoftwareBitmap = property(get_SoftwareBitmap, None)
    Direct3DSurface = property(get_Direct3DSurface, None)
    Type = property(get_Type, None)
    IsReadOnly = property(get_IsReadOnly, None)
    RelativeTime = property(get_RelativeTime, put_RelativeTime)
    SystemRelativeTime = property(get_SystemRelativeTime, put_SystemRelativeTime)
    Duration = property(get_Duration, put_Duration)
    IsDiscontinuous = property(get_IsDiscontinuous, put_IsDiscontinuous)
    ExtendedProperties = property(get_ExtendedProperties, None)
make_head(_module, 'AudioBuffer')
make_head(_module, 'AudioFrame')
make_head(_module, 'AutoRepeatModeChangeRequestedEventArgs')
make_head(_module, 'IAudioBuffer')
make_head(_module, 'IAudioFrame')
make_head(_module, 'IAudioFrameFactory')
make_head(_module, 'IAutoRepeatModeChangeRequestedEventArgs')
make_head(_module, 'IImageDisplayProperties')
make_head(_module, 'IMediaExtension')
make_head(_module, 'IMediaExtensionManager')
make_head(_module, 'IMediaExtensionManager2')
make_head(_module, 'IMediaFrame')
make_head(_module, 'IMediaMarker')
make_head(_module, 'IMediaMarkerTypesStatics')
make_head(_module, 'IMediaMarkers')
make_head(_module, 'IMediaProcessingTriggerDetails')
make_head(_module, 'IMediaTimelineController')
make_head(_module, 'IMediaTimelineController2')
make_head(_module, 'IMediaTimelineControllerFailedEventArgs')
make_head(_module, 'IMusicDisplayProperties')
make_head(_module, 'IMusicDisplayProperties2')
make_head(_module, 'IMusicDisplayProperties3')
make_head(_module, 'IPlaybackPositionChangeRequestedEventArgs')
make_head(_module, 'IPlaybackRateChangeRequestedEventArgs')
make_head(_module, 'IShuffleEnabledChangeRequestedEventArgs')
make_head(_module, 'ISystemMediaTransportControls')
make_head(_module, 'ISystemMediaTransportControls2')
make_head(_module, 'ISystemMediaTransportControlsButtonPressedEventArgs')
make_head(_module, 'ISystemMediaTransportControlsDisplayUpdater')
make_head(_module, 'ISystemMediaTransportControlsPropertyChangedEventArgs')
make_head(_module, 'ISystemMediaTransportControlsStatics')
make_head(_module, 'ISystemMediaTransportControlsTimelineProperties')
make_head(_module, 'IVideoDisplayProperties')
make_head(_module, 'IVideoDisplayProperties2')
make_head(_module, 'IVideoEffectsStatics')
make_head(_module, 'IVideoFrame')
make_head(_module, 'IVideoFrame2')
make_head(_module, 'IVideoFrameFactory')
make_head(_module, 'IVideoFrameStatics')
make_head(_module, 'ImageDisplayProperties')
make_head(_module, 'MediaExtensionManager')
make_head(_module, 'MediaMarkerTypes')
make_head(_module, 'MediaProcessingTriggerDetails')
make_head(_module, 'MediaTimeRange')
make_head(_module, 'MediaTimelineController')
make_head(_module, 'MediaTimelineControllerFailedEventArgs')
make_head(_module, 'MusicDisplayProperties')
make_head(_module, 'PlaybackPositionChangeRequestedEventArgs')
make_head(_module, 'PlaybackRateChangeRequestedEventArgs')
make_head(_module, 'ShuffleEnabledChangeRequestedEventArgs')
make_head(_module, 'SystemMediaTransportControls')
make_head(_module, 'SystemMediaTransportControlsButtonPressedEventArgs')
make_head(_module, 'SystemMediaTransportControlsDisplayUpdater')
make_head(_module, 'SystemMediaTransportControlsPropertyChangedEventArgs')
make_head(_module, 'SystemMediaTransportControlsTimelineProperties')
make_head(_module, 'VideoDisplayProperties')
make_head(_module, 'VideoEffects')
make_head(_module, 'VideoFrame')
