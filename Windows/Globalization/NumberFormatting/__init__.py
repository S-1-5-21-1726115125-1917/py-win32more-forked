from __future__ import annotations
from ctypes import c_void_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from typing import Generic, TypeVar
K = TypeVar('T')
T = TypeVar('T')
V = TypeVar('V')
TProgress = TypeVar('TProgress')
TResult = TypeVar('TResult')
TSender = TypeVar('TSender')
from Windows import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
from Windows._winrt import WinRT_String, winrt_commethod, winrt_mixinmethod, winrt_classmethod, winrt_factorymethod, winrt_activatemethod
import Windows.Win32.System.WinRT
import Windows.Foundation
import Windows.Foundation.Collections
import Windows.Globalization.NumberFormatting
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
class CurrencyFormatter(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Globalization.NumberFormatting.CurrencyFormatter'
    @winrt_factorymethod
    def CreateCurrencyFormatterCode(cls: Windows.Globalization.NumberFormatting.ICurrencyFormatterFactory, currencyCode: WinRT_String) -> Windows.Globalization.NumberFormatting.CurrencyFormatter: ...
    @winrt_factorymethod
    def CreateCurrencyFormatterCodeContext(cls: Windows.Globalization.NumberFormatting.ICurrencyFormatterFactory, currencyCode: WinRT_String, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.CurrencyFormatter: ...
    @winrt_mixinmethod
    def get_Currency(self: Windows.Globalization.NumberFormatting.ICurrencyFormatter) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Currency(self: Windows.Globalization.NumberFormatting.ICurrencyFormatter, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Languages(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_mixinmethod
    def get_GeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_ResolvedLanguage(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_ResolvedGeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter2, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter2, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter2, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter2, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter2, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter2, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def ParseInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Int64]: ...
    @winrt_mixinmethod
    def ParseUInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def ParseDouble(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Double]: ...
    @winrt_mixinmethod
    def get_Mode(self: Windows.Globalization.NumberFormatting.ICurrencyFormatter2) -> Windows.Globalization.NumberFormatting.CurrencyFormatterMode: ...
    @winrt_mixinmethod
    def put_Mode(self: Windows.Globalization.NumberFormatting.ICurrencyFormatter2, value: Windows.Globalization.NumberFormatting.CurrencyFormatterMode) -> Void: ...
    @winrt_mixinmethod
    def ApplyRoundingForCurrency(self: Windows.Globalization.NumberFormatting.ICurrencyFormatter2, roundingAlgorithm: Windows.Globalization.NumberFormatting.RoundingAlgorithm) -> Void: ...
    @winrt_mixinmethod
    def get_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption) -> Int32: ...
    @winrt_mixinmethod
    def put_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption) -> Windows.Globalization.NumberFormatting.INumberRounder: ...
    @winrt_mixinmethod
    def put_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption, value: Windows.Globalization.NumberFormatting.INumberRounder) -> Void: ...
    @winrt_mixinmethod
    def get_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption, value: Boolean) -> Void: ...
    Currency = property(get_Currency, put_Currency)
    Languages = property(get_Languages, None)
    GeographicRegion = property(get_GeographicRegion, None)
    IntegerDigits = property(get_IntegerDigits, put_IntegerDigits)
    FractionDigits = property(get_FractionDigits, put_FractionDigits)
    IsGrouped = property(get_IsGrouped, put_IsGrouped)
    IsDecimalPointAlwaysDisplayed = property(get_IsDecimalPointAlwaysDisplayed, put_IsDecimalPointAlwaysDisplayed)
    NumeralSystem = property(get_NumeralSystem, put_NumeralSystem)
    ResolvedLanguage = property(get_ResolvedLanguage, None)
    ResolvedGeographicRegion = property(get_ResolvedGeographicRegion, None)
    Mode = property(get_Mode, put_Mode)
    SignificantDigits = property(get_SignificantDigits, put_SignificantDigits)
    NumberRounder = property(get_NumberRounder, put_NumberRounder)
    IsZeroSigned = property(get_IsZeroSigned, put_IsZeroSigned)
CurrencyFormatterMode = Int32
CurrencyFormatterMode_UseSymbol: CurrencyFormatterMode = 0
CurrencyFormatterMode_UseCurrencyCode: CurrencyFormatterMode = 1
class DecimalFormatter(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Globalization.NumberFormatting.DecimalFormatter'
    @winrt_factorymethod
    def CreateDecimalFormatter(cls: Windows.Globalization.NumberFormatting.IDecimalFormatterFactory, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.DecimalFormatter: ...
    @winrt_activatemethod
    def New(cls) -> Windows.Globalization.NumberFormatting.DecimalFormatter: ...
    @winrt_mixinmethod
    def get_Languages(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_mixinmethod
    def get_GeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_ResolvedLanguage(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_ResolvedGeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def ParseInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Int64]: ...
    @winrt_mixinmethod
    def ParseUInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def ParseDouble(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Double]: ...
    @winrt_mixinmethod
    def get_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption) -> Int32: ...
    @winrt_mixinmethod
    def put_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption) -> Windows.Globalization.NumberFormatting.INumberRounder: ...
    @winrt_mixinmethod
    def put_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption, value: Windows.Globalization.NumberFormatting.INumberRounder) -> Void: ...
    @winrt_mixinmethod
    def get_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption, value: Boolean) -> Void: ...
    Languages = property(get_Languages, None)
    GeographicRegion = property(get_GeographicRegion, None)
    IntegerDigits = property(get_IntegerDigits, put_IntegerDigits)
    FractionDigits = property(get_FractionDigits, put_FractionDigits)
    IsGrouped = property(get_IsGrouped, put_IsGrouped)
    IsDecimalPointAlwaysDisplayed = property(get_IsDecimalPointAlwaysDisplayed, put_IsDecimalPointAlwaysDisplayed)
    NumeralSystem = property(get_NumeralSystem, put_NumeralSystem)
    ResolvedLanguage = property(get_ResolvedLanguage, None)
    ResolvedGeographicRegion = property(get_ResolvedGeographicRegion, None)
    SignificantDigits = property(get_SignificantDigits, put_SignificantDigits)
    NumberRounder = property(get_NumberRounder, put_NumberRounder)
    IsZeroSigned = property(get_IsZeroSigned, put_IsZeroSigned)
class ICurrencyFormatter(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('11730ca5-4b00-41b2-b3-32-73-b1-2a-49-7d-54')
    @winrt_commethod(6)
    def get_Currency(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def put_Currency(self, value: WinRT_String) -> Void: ...
    Currency = property(get_Currency, put_Currency)
class ICurrencyFormatter2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('072c2f1d-e7ba-4197-92-0e-24-7c-92-f7-de-a6')
    @winrt_commethod(6)
    def get_Mode(self) -> Windows.Globalization.NumberFormatting.CurrencyFormatterMode: ...
    @winrt_commethod(7)
    def put_Mode(self, value: Windows.Globalization.NumberFormatting.CurrencyFormatterMode) -> Void: ...
    @winrt_commethod(8)
    def ApplyRoundingForCurrency(self, roundingAlgorithm: Windows.Globalization.NumberFormatting.RoundingAlgorithm) -> Void: ...
    Mode = property(get_Mode, put_Mode)
class ICurrencyFormatterFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('86c7537e-b938-4aa2-84-b0-2c-33-dc-5b-14-50')
    @winrt_commethod(6)
    def CreateCurrencyFormatterCode(self, currencyCode: WinRT_String) -> Windows.Globalization.NumberFormatting.CurrencyFormatter: ...
    @winrt_commethod(7)
    def CreateCurrencyFormatterCodeContext(self, currencyCode: WinRT_String, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.CurrencyFormatter: ...
class IDecimalFormatterFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('0d018c9a-e393-46b8-b8-30-7a-69-c8-f8-9f-bb')
    @winrt_commethod(6)
    def CreateDecimalFormatter(self, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.DecimalFormatter: ...
class IIncrementNumberRounder(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('70a64ff8-66ab-4155-9d-a1-73-9e-46-76-45-43')
    @winrt_commethod(6)
    def get_RoundingAlgorithm(self) -> Windows.Globalization.NumberFormatting.RoundingAlgorithm: ...
    @winrt_commethod(7)
    def put_RoundingAlgorithm(self, value: Windows.Globalization.NumberFormatting.RoundingAlgorithm) -> Void: ...
    @winrt_commethod(8)
    def get_Increment(self) -> Double: ...
    @winrt_commethod(9)
    def put_Increment(self, value: Double) -> Void: ...
    RoundingAlgorithm = property(get_RoundingAlgorithm, put_RoundingAlgorithm)
    Increment = property(get_Increment, put_Increment)
class INumberFormatter(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('a5007c49-7676-4db7-86-31-1b-6f-f2-65-ca-a9')
    @winrt_commethod(6)
    def FormatInt(self, value: Int64) -> WinRT_String: ...
    @winrt_commethod(7)
    def FormatUInt(self, value: UInt64) -> WinRT_String: ...
    @winrt_commethod(8)
    def FormatDouble(self, value: Double) -> WinRT_String: ...
class INumberFormatter2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('d4a8c1f0-80d0-4b0d-a8-9e-88-2c-1e-8f-83-10')
    @winrt_commethod(6)
    def FormatInt(self, value: Int64) -> WinRT_String: ...
    @winrt_commethod(7)
    def FormatUInt(self, value: UInt64) -> WinRT_String: ...
    @winrt_commethod(8)
    def FormatDouble(self, value: Double) -> WinRT_String: ...
class INumberFormatterOptions(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('80332d21-aee1-4a39-ba-a2-07-ed-8c-96-da-f6')
    @winrt_commethod(6)
    def get_Languages(self) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_commethod(7)
    def get_GeographicRegion(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_IntegerDigits(self) -> Int32: ...
    @winrt_commethod(9)
    def put_IntegerDigits(self, value: Int32) -> Void: ...
    @winrt_commethod(10)
    def get_FractionDigits(self) -> Int32: ...
    @winrt_commethod(11)
    def put_FractionDigits(self, value: Int32) -> Void: ...
    @winrt_commethod(12)
    def get_IsGrouped(self) -> Boolean: ...
    @winrt_commethod(13)
    def put_IsGrouped(self, value: Boolean) -> Void: ...
    @winrt_commethod(14)
    def get_IsDecimalPointAlwaysDisplayed(self) -> Boolean: ...
    @winrt_commethod(15)
    def put_IsDecimalPointAlwaysDisplayed(self, value: Boolean) -> Void: ...
    @winrt_commethod(16)
    def get_NumeralSystem(self) -> WinRT_String: ...
    @winrt_commethod(17)
    def put_NumeralSystem(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(18)
    def get_ResolvedLanguage(self) -> WinRT_String: ...
    @winrt_commethod(19)
    def get_ResolvedGeographicRegion(self) -> WinRT_String: ...
    Languages = property(get_Languages, None)
    GeographicRegion = property(get_GeographicRegion, None)
    IntegerDigits = property(get_IntegerDigits, put_IntegerDigits)
    FractionDigits = property(get_FractionDigits, put_FractionDigits)
    IsGrouped = property(get_IsGrouped, put_IsGrouped)
    IsDecimalPointAlwaysDisplayed = property(get_IsDecimalPointAlwaysDisplayed, put_IsDecimalPointAlwaysDisplayed)
    NumeralSystem = property(get_NumeralSystem, put_NumeralSystem)
    ResolvedLanguage = property(get_ResolvedLanguage, None)
    ResolvedGeographicRegion = property(get_ResolvedGeographicRegion, None)
class INumberParser(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('e6659412-4a13-4a53-83-a1-39-2f-be-4c-ff-9f')
    @winrt_commethod(6)
    def ParseInt(self, text: WinRT_String) -> Windows.Foundation.IReference[Int64]: ...
    @winrt_commethod(7)
    def ParseUInt(self, text: WinRT_String) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_commethod(8)
    def ParseDouble(self, text: WinRT_String) -> Windows.Foundation.IReference[Double]: ...
class INumberRounder(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('5473c375-38ed-4631-b8-0c-ef-34-fc-48-b7-f5')
    @winrt_commethod(6)
    def RoundInt32(self, value: Int32) -> Int32: ...
    @winrt_commethod(7)
    def RoundUInt32(self, value: UInt32) -> UInt32: ...
    @winrt_commethod(8)
    def RoundInt64(self, value: Int64) -> Int64: ...
    @winrt_commethod(9)
    def RoundUInt64(self, value: UInt64) -> UInt64: ...
    @winrt_commethod(10)
    def RoundSingle(self, value: Single) -> Single: ...
    @winrt_commethod(11)
    def RoundDouble(self, value: Double) -> Double: ...
class INumberRounderOption(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('3b088433-646f-4efe-8d-48-66-eb-2e-49-e7-36')
    @winrt_commethod(6)
    def get_NumberRounder(self) -> Windows.Globalization.NumberFormatting.INumberRounder: ...
    @winrt_commethod(7)
    def put_NumberRounder(self, value: Windows.Globalization.NumberFormatting.INumberRounder) -> Void: ...
    NumberRounder = property(get_NumberRounder, put_NumberRounder)
class INumeralSystemTranslator(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('28f5bc2c-8c23-4234-ad-2e-fa-5a-3a-42-6e-9b')
    @winrt_commethod(6)
    def get_Languages(self) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_commethod(7)
    def get_ResolvedLanguage(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_NumeralSystem(self) -> WinRT_String: ...
    @winrt_commethod(9)
    def put_NumeralSystem(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(10)
    def TranslateNumerals(self, value: WinRT_String) -> WinRT_String: ...
    Languages = property(get_Languages, None)
    ResolvedLanguage = property(get_ResolvedLanguage, None)
    NumeralSystem = property(get_NumeralSystem, put_NumeralSystem)
class INumeralSystemTranslatorFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('9630c8da-36ef-4d88-a8-5c-6f-0d-98-d6-20-a6')
    @winrt_commethod(6)
    def Create(self, languages: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Globalization.NumberFormatting.NumeralSystemTranslator: ...
class IPercentFormatterFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('b7828aef-fed4-4018-a6-e2-e0-99-61-e0-37-65')
    @winrt_commethod(6)
    def CreatePercentFormatter(self, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.PercentFormatter: ...
class IPermilleFormatterFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('2b37b4ac-e638-4ed5-a9-98-62-f6-b0-6a-49-ae')
    @winrt_commethod(6)
    def CreatePermilleFormatter(self, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.PermilleFormatter: ...
class ISignedZeroOption(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('fd1cdd31-0a3c-49c4-a6-42-96-a1-56-4f-4f-30')
    @winrt_commethod(6)
    def get_IsZeroSigned(self) -> Boolean: ...
    @winrt_commethod(7)
    def put_IsZeroSigned(self, value: Boolean) -> Void: ...
    IsZeroSigned = property(get_IsZeroSigned, put_IsZeroSigned)
class ISignificantDigitsNumberRounder(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f5941bca-6646-4913-8c-76-1b-19-1f-f9-4d-fd')
    @winrt_commethod(6)
    def get_RoundingAlgorithm(self) -> Windows.Globalization.NumberFormatting.RoundingAlgorithm: ...
    @winrt_commethod(7)
    def put_RoundingAlgorithm(self, value: Windows.Globalization.NumberFormatting.RoundingAlgorithm) -> Void: ...
    @winrt_commethod(8)
    def get_SignificantDigits(self) -> UInt32: ...
    @winrt_commethod(9)
    def put_SignificantDigits(self, value: UInt32) -> Void: ...
    RoundingAlgorithm = property(get_RoundingAlgorithm, put_RoundingAlgorithm)
    SignificantDigits = property(get_SignificantDigits, put_SignificantDigits)
class ISignificantDigitsOption(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('1d4dfcdd-2d43-4ee8-bb-f1-c1-b2-6a-71-1a-58')
    @winrt_commethod(6)
    def get_SignificantDigits(self) -> Int32: ...
    @winrt_commethod(7)
    def put_SignificantDigits(self, value: Int32) -> Void: ...
    SignificantDigits = property(get_SignificantDigits, put_SignificantDigits)
class IncrementNumberRounder(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Globalization.NumberFormatting.IncrementNumberRounder'
    @winrt_activatemethod
    def New(cls) -> Windows.Globalization.NumberFormatting.IncrementNumberRounder: ...
    @winrt_mixinmethod
    def RoundInt32(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Int32) -> Int32: ...
    @winrt_mixinmethod
    def RoundUInt32(self: Windows.Globalization.NumberFormatting.INumberRounder, value: UInt32) -> UInt32: ...
    @winrt_mixinmethod
    def RoundInt64(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Int64) -> Int64: ...
    @winrt_mixinmethod
    def RoundUInt64(self: Windows.Globalization.NumberFormatting.INumberRounder, value: UInt64) -> UInt64: ...
    @winrt_mixinmethod
    def RoundSingle(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Single) -> Single: ...
    @winrt_mixinmethod
    def RoundDouble(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Double) -> Double: ...
    @winrt_mixinmethod
    def get_RoundingAlgorithm(self: Windows.Globalization.NumberFormatting.IIncrementNumberRounder) -> Windows.Globalization.NumberFormatting.RoundingAlgorithm: ...
    @winrt_mixinmethod
    def put_RoundingAlgorithm(self: Windows.Globalization.NumberFormatting.IIncrementNumberRounder, value: Windows.Globalization.NumberFormatting.RoundingAlgorithm) -> Void: ...
    @winrt_mixinmethod
    def get_Increment(self: Windows.Globalization.NumberFormatting.IIncrementNumberRounder) -> Double: ...
    @winrt_mixinmethod
    def put_Increment(self: Windows.Globalization.NumberFormatting.IIncrementNumberRounder, value: Double) -> Void: ...
    RoundingAlgorithm = property(get_RoundingAlgorithm, put_RoundingAlgorithm)
    Increment = property(get_Increment, put_Increment)
class NumeralSystemTranslator(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Globalization.NumberFormatting.NumeralSystemTranslator'
    @winrt_factorymethod
    def Create(cls: Windows.Globalization.NumberFormatting.INumeralSystemTranslatorFactory, languages: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Globalization.NumberFormatting.NumeralSystemTranslator: ...
    @winrt_activatemethod
    def New(cls) -> Windows.Globalization.NumberFormatting.NumeralSystemTranslator: ...
    @winrt_mixinmethod
    def get_Languages(self: Windows.Globalization.NumberFormatting.INumeralSystemTranslator) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_mixinmethod
    def get_ResolvedLanguage(self: Windows.Globalization.NumberFormatting.INumeralSystemTranslator) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumeralSystemTranslator) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumeralSystemTranslator, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def TranslateNumerals(self: Windows.Globalization.NumberFormatting.INumeralSystemTranslator, value: WinRT_String) -> WinRT_String: ...
    Languages = property(get_Languages, None)
    ResolvedLanguage = property(get_ResolvedLanguage, None)
    NumeralSystem = property(get_NumeralSystem, put_NumeralSystem)
class PercentFormatter(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Globalization.NumberFormatting.PercentFormatter'
    @winrt_factorymethod
    def CreatePercentFormatter(cls: Windows.Globalization.NumberFormatting.IPercentFormatterFactory, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.PercentFormatter: ...
    @winrt_activatemethod
    def New(cls) -> Windows.Globalization.NumberFormatting.PercentFormatter: ...
    @winrt_mixinmethod
    def get_Languages(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_mixinmethod
    def get_GeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_ResolvedLanguage(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_ResolvedGeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def ParseInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Int64]: ...
    @winrt_mixinmethod
    def ParseUInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def ParseDouble(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Double]: ...
    @winrt_mixinmethod
    def get_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption) -> Int32: ...
    @winrt_mixinmethod
    def put_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption) -> Windows.Globalization.NumberFormatting.INumberRounder: ...
    @winrt_mixinmethod
    def put_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption, value: Windows.Globalization.NumberFormatting.INumberRounder) -> Void: ...
    @winrt_mixinmethod
    def get_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption, value: Boolean) -> Void: ...
    Languages = property(get_Languages, None)
    GeographicRegion = property(get_GeographicRegion, None)
    IntegerDigits = property(get_IntegerDigits, put_IntegerDigits)
    FractionDigits = property(get_FractionDigits, put_FractionDigits)
    IsGrouped = property(get_IsGrouped, put_IsGrouped)
    IsDecimalPointAlwaysDisplayed = property(get_IsDecimalPointAlwaysDisplayed, put_IsDecimalPointAlwaysDisplayed)
    NumeralSystem = property(get_NumeralSystem, put_NumeralSystem)
    ResolvedLanguage = property(get_ResolvedLanguage, None)
    ResolvedGeographicRegion = property(get_ResolvedGeographicRegion, None)
    SignificantDigits = property(get_SignificantDigits, put_SignificantDigits)
    NumberRounder = property(get_NumberRounder, put_NumberRounder)
    IsZeroSigned = property(get_IsZeroSigned, put_IsZeroSigned)
class PermilleFormatter(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Globalization.NumberFormatting.PermilleFormatter'
    @winrt_factorymethod
    def CreatePermilleFormatter(cls: Windows.Globalization.NumberFormatting.IPermilleFormatterFactory, languages: Windows.Foundation.Collections.IIterable[WinRT_String], geographicRegion: WinRT_String) -> Windows.Globalization.NumberFormatting.PermilleFormatter: ...
    @winrt_activatemethod
    def New(cls) -> Windows.Globalization.NumberFormatting.PermilleFormatter: ...
    @winrt_mixinmethod
    def get_Languages(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_mixinmethod
    def get_GeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_IntegerDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Int32: ...
    @winrt_mixinmethod
    def put_FractionDigits(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsGrouped(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsDecimalPointAlwaysDisplayed(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_NumeralSystem(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_ResolvedLanguage(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_ResolvedGeographicRegion(self: Windows.Globalization.NumberFormatting.INumberFormatterOptions) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Int64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatUInt(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: UInt64) -> WinRT_String: ...
    @winrt_mixinmethod
    def FormatDouble(self: Windows.Globalization.NumberFormatting.INumberFormatter, value: Double) -> WinRT_String: ...
    @winrt_mixinmethod
    def ParseInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Int64]: ...
    @winrt_mixinmethod
    def ParseUInt(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[UInt64]: ...
    @winrt_mixinmethod
    def ParseDouble(self: Windows.Globalization.NumberFormatting.INumberParser, text: WinRT_String) -> Windows.Foundation.IReference[Double]: ...
    @winrt_mixinmethod
    def get_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption) -> Int32: ...
    @winrt_mixinmethod
    def put_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsOption, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def get_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption) -> Windows.Globalization.NumberFormatting.INumberRounder: ...
    @winrt_mixinmethod
    def put_NumberRounder(self: Windows.Globalization.NumberFormatting.INumberRounderOption, value: Windows.Globalization.NumberFormatting.INumberRounder) -> Void: ...
    @winrt_mixinmethod
    def get_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption) -> Boolean: ...
    @winrt_mixinmethod
    def put_IsZeroSigned(self: Windows.Globalization.NumberFormatting.ISignedZeroOption, value: Boolean) -> Void: ...
    Languages = property(get_Languages, None)
    GeographicRegion = property(get_GeographicRegion, None)
    IntegerDigits = property(get_IntegerDigits, put_IntegerDigits)
    FractionDigits = property(get_FractionDigits, put_FractionDigits)
    IsGrouped = property(get_IsGrouped, put_IsGrouped)
    IsDecimalPointAlwaysDisplayed = property(get_IsDecimalPointAlwaysDisplayed, put_IsDecimalPointAlwaysDisplayed)
    NumeralSystem = property(get_NumeralSystem, put_NumeralSystem)
    ResolvedLanguage = property(get_ResolvedLanguage, None)
    ResolvedGeographicRegion = property(get_ResolvedGeographicRegion, None)
    SignificantDigits = property(get_SignificantDigits, put_SignificantDigits)
    NumberRounder = property(get_NumberRounder, put_NumberRounder)
    IsZeroSigned = property(get_IsZeroSigned, put_IsZeroSigned)
RoundingAlgorithm = Int32
RoundingAlgorithm_None: RoundingAlgorithm = 0
RoundingAlgorithm_RoundDown: RoundingAlgorithm = 1
RoundingAlgorithm_RoundUp: RoundingAlgorithm = 2
RoundingAlgorithm_RoundTowardsZero: RoundingAlgorithm = 3
RoundingAlgorithm_RoundAwayFromZero: RoundingAlgorithm = 4
RoundingAlgorithm_RoundHalfDown: RoundingAlgorithm = 5
RoundingAlgorithm_RoundHalfUp: RoundingAlgorithm = 6
RoundingAlgorithm_RoundHalfTowardsZero: RoundingAlgorithm = 7
RoundingAlgorithm_RoundHalfAwayFromZero: RoundingAlgorithm = 8
RoundingAlgorithm_RoundHalfToEven: RoundingAlgorithm = 9
RoundingAlgorithm_RoundHalfToOdd: RoundingAlgorithm = 10
class SignificantDigitsNumberRounder(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Globalization.NumberFormatting.SignificantDigitsNumberRounder'
    @winrt_activatemethod
    def New(cls) -> Windows.Globalization.NumberFormatting.SignificantDigitsNumberRounder: ...
    @winrt_mixinmethod
    def RoundInt32(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Int32) -> Int32: ...
    @winrt_mixinmethod
    def RoundUInt32(self: Windows.Globalization.NumberFormatting.INumberRounder, value: UInt32) -> UInt32: ...
    @winrt_mixinmethod
    def RoundInt64(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Int64) -> Int64: ...
    @winrt_mixinmethod
    def RoundUInt64(self: Windows.Globalization.NumberFormatting.INumberRounder, value: UInt64) -> UInt64: ...
    @winrt_mixinmethod
    def RoundSingle(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Single) -> Single: ...
    @winrt_mixinmethod
    def RoundDouble(self: Windows.Globalization.NumberFormatting.INumberRounder, value: Double) -> Double: ...
    @winrt_mixinmethod
    def get_RoundingAlgorithm(self: Windows.Globalization.NumberFormatting.ISignificantDigitsNumberRounder) -> Windows.Globalization.NumberFormatting.RoundingAlgorithm: ...
    @winrt_mixinmethod
    def put_RoundingAlgorithm(self: Windows.Globalization.NumberFormatting.ISignificantDigitsNumberRounder, value: Windows.Globalization.NumberFormatting.RoundingAlgorithm) -> Void: ...
    @winrt_mixinmethod
    def get_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsNumberRounder) -> UInt32: ...
    @winrt_mixinmethod
    def put_SignificantDigits(self: Windows.Globalization.NumberFormatting.ISignificantDigitsNumberRounder, value: UInt32) -> Void: ...
    RoundingAlgorithm = property(get_RoundingAlgorithm, put_RoundingAlgorithm)
    SignificantDigits = property(get_SignificantDigits, put_SignificantDigits)
make_head(_module, 'CurrencyFormatter')
make_head(_module, 'DecimalFormatter')
make_head(_module, 'ICurrencyFormatter')
make_head(_module, 'ICurrencyFormatter2')
make_head(_module, 'ICurrencyFormatterFactory')
make_head(_module, 'IDecimalFormatterFactory')
make_head(_module, 'IIncrementNumberRounder')
make_head(_module, 'INumberFormatter')
make_head(_module, 'INumberFormatter2')
make_head(_module, 'INumberFormatterOptions')
make_head(_module, 'INumberParser')
make_head(_module, 'INumberRounder')
make_head(_module, 'INumberRounderOption')
make_head(_module, 'INumeralSystemTranslator')
make_head(_module, 'INumeralSystemTranslatorFactory')
make_head(_module, 'IPercentFormatterFactory')
make_head(_module, 'IPermilleFormatterFactory')
make_head(_module, 'ISignedZeroOption')
make_head(_module, 'ISignificantDigitsNumberRounder')
make_head(_module, 'ISignificantDigitsOption')
make_head(_module, 'IncrementNumberRounder')
make_head(_module, 'NumeralSystemTranslator')
make_head(_module, 'PercentFormatter')
make_head(_module, 'PermilleFormatter')
make_head(_module, 'SignificantDigitsNumberRounder')
