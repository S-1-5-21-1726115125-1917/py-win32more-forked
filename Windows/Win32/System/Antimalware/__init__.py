from __future__ import annotations
from ctypes import c_void_p, c_char_p, c_wchar_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from Windows import ARCH, MissingType, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
import Windows.Win32.Foundation
import Windows.Win32.System.Antimalware
import Windows.Win32.System.Com
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
AMSI_ATTRIBUTE = Int32
AMSI_ATTRIBUTE_APP_NAME: AMSI_ATTRIBUTE = 0
AMSI_ATTRIBUTE_CONTENT_NAME: AMSI_ATTRIBUTE = 1
AMSI_ATTRIBUTE_CONTENT_SIZE: AMSI_ATTRIBUTE = 2
AMSI_ATTRIBUTE_CONTENT_ADDRESS: AMSI_ATTRIBUTE = 3
AMSI_ATTRIBUTE_SESSION: AMSI_ATTRIBUTE = 4
AMSI_ATTRIBUTE_REDIRECT_CHAIN_SIZE: AMSI_ATTRIBUTE = 5
AMSI_ATTRIBUTE_REDIRECT_CHAIN_ADDRESS: AMSI_ATTRIBUTE = 6
AMSI_ATTRIBUTE_ALL_SIZE: AMSI_ATTRIBUTE = 7
AMSI_ATTRIBUTE_ALL_ADDRESS: AMSI_ATTRIBUTE = 8
AMSI_ATTRIBUTE_QUIET: AMSI_ATTRIBUTE = 9
AMSI_RESULT = Int32
AMSI_RESULT_CLEAN: AMSI_RESULT = 0
AMSI_RESULT_NOT_DETECTED: AMSI_RESULT = 1
AMSI_RESULT_BLOCKED_BY_ADMIN_START: AMSI_RESULT = 16384
AMSI_RESULT_BLOCKED_BY_ADMIN_END: AMSI_RESULT = 20479
AMSI_RESULT_DETECTED: AMSI_RESULT = 32768
AMSI_UAC_MSI_ACTION = Int32
AMSI_UAC_MSI_ACTION_INSTALL: AMSI_UAC_MSI_ACTION = 0
AMSI_UAC_MSI_ACTION_UNINSTALL: AMSI_UAC_MSI_ACTION = 1
AMSI_UAC_MSI_ACTION_UPDATE: AMSI_UAC_MSI_ACTION = 2
AMSI_UAC_MSI_ACTION_MAINTENANCE: AMSI_UAC_MSI_ACTION = 3
AMSI_UAC_MSI_ACTION_MAX: AMSI_UAC_MSI_ACTION = 4
class AMSI_UAC_REQUEST_AX_INFO(EasyCastStructure):
    ulLength: UInt32
    lpwszLocalInstallPath: Windows.Win32.Foundation.PWSTR
    lpwszSourceURL: Windows.Win32.Foundation.PWSTR
class AMSI_UAC_REQUEST_COM_INFO(EasyCastStructure):
    ulLength: UInt32
    lpwszServerBinary: Windows.Win32.Foundation.PWSTR
    lpwszRequestor: Windows.Win32.Foundation.PWSTR
    Clsid: Guid
class AMSI_UAC_REQUEST_CONTEXT(EasyCastStructure):
    ulLength: UInt32
    ulRequestorProcessId: UInt32
    UACTrustState: Windows.Win32.System.Antimalware.AMSI_UAC_TRUST_STATE
    Type: Windows.Win32.System.Antimalware.AMSI_UAC_REQUEST_TYPE
    RequestType: _RequestType_e__Union
    bAutoElevateRequest: Windows.Win32.Foundation.BOOL
    class _RequestType_e__Union(EasyCastUnion):
        ExeInfo: Windows.Win32.System.Antimalware.AMSI_UAC_REQUEST_EXE_INFO
        ComInfo: Windows.Win32.System.Antimalware.AMSI_UAC_REQUEST_COM_INFO
        MsiInfo: Windows.Win32.System.Antimalware.AMSI_UAC_REQUEST_MSI_INFO
        ActiveXInfo: Windows.Win32.System.Antimalware.AMSI_UAC_REQUEST_AX_INFO
        PackagedAppInfo: Windows.Win32.System.Antimalware.AMSI_UAC_REQUEST_PACKAGED_APP_INFO
class AMSI_UAC_REQUEST_EXE_INFO(EasyCastStructure):
    ulLength: UInt32
    lpwszApplicationName: Windows.Win32.Foundation.PWSTR
    lpwszCommandLine: Windows.Win32.Foundation.PWSTR
    lpwszDLLParameter: Windows.Win32.Foundation.PWSTR
class AMSI_UAC_REQUEST_MSI_INFO(EasyCastStructure):
    ulLength: UInt32
    MsiAction: Windows.Win32.System.Antimalware.AMSI_UAC_MSI_ACTION
    lpwszProductName: Windows.Win32.Foundation.PWSTR
    lpwszVersion: Windows.Win32.Foundation.PWSTR
    lpwszLanguage: Windows.Win32.Foundation.PWSTR
    lpwszManufacturer: Windows.Win32.Foundation.PWSTR
    lpwszPackagePath: Windows.Win32.Foundation.PWSTR
    lpwszPackageSource: Windows.Win32.Foundation.PWSTR
    ulUpdates: UInt32
    ppwszUpdates: POINTER(Windows.Win32.Foundation.PWSTR)
    ppwszUpdateSources: POINTER(Windows.Win32.Foundation.PWSTR)
class AMSI_UAC_REQUEST_PACKAGED_APP_INFO(EasyCastStructure):
    ulLength: UInt32
    lpwszApplicationName: Windows.Win32.Foundation.PWSTR
    lpwszCommandLine: Windows.Win32.Foundation.PWSTR
    lpPackageFamilyName: Windows.Win32.Foundation.PWSTR
    lpApplicationId: Windows.Win32.Foundation.PWSTR
AMSI_UAC_REQUEST_TYPE = Int32
AMSI_UAC_REQUEST_TYPE_EXE: AMSI_UAC_REQUEST_TYPE = 0
AMSI_UAC_REQUEST_TYPE_COM: AMSI_UAC_REQUEST_TYPE = 1
AMSI_UAC_REQUEST_TYPE_MSI: AMSI_UAC_REQUEST_TYPE = 2
AMSI_UAC_REQUEST_TYPE_AX: AMSI_UAC_REQUEST_TYPE = 3
AMSI_UAC_REQUEST_TYPE_PACKAGED_APP: AMSI_UAC_REQUEST_TYPE = 4
AMSI_UAC_REQUEST_TYPE_MAX: AMSI_UAC_REQUEST_TYPE = 5
AMSI_UAC_TRUST_STATE = Int32
AMSI_UAC_TRUST_STATE_TRUSTED: AMSI_UAC_TRUST_STATE = 0
AMSI_UAC_TRUST_STATE_UNTRUSTED: AMSI_UAC_TRUST_STATE = 1
AMSI_UAC_TRUST_STATE_BLOCKED: AMSI_UAC_TRUST_STATE = 2
AMSI_UAC_TRUST_STATE_MAX: AMSI_UAC_TRUST_STATE = 3
@winfunctype('Amsi.dll')
def AmsiInitialize(appName: Windows.Win32.Foundation.PWSTR, amsiContext: POINTER(Windows.Win32.System.Antimalware.HAMSICONTEXT)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Amsi.dll')
def AmsiUninitialize(amsiContext: Windows.Win32.System.Antimalware.HAMSICONTEXT) -> Void: ...
@winfunctype('Amsi.dll')
def AmsiOpenSession(amsiContext: Windows.Win32.System.Antimalware.HAMSICONTEXT, amsiSession: POINTER(Windows.Win32.System.Antimalware.HAMSISESSION)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Amsi.dll')
def AmsiCloseSession(amsiContext: Windows.Win32.System.Antimalware.HAMSICONTEXT, amsiSession: Windows.Win32.System.Antimalware.HAMSISESSION) -> Void: ...
@winfunctype('Amsi.dll')
def AmsiScanBuffer(amsiContext: Windows.Win32.System.Antimalware.HAMSICONTEXT, buffer: c_void_p, length: UInt32, contentName: Windows.Win32.Foundation.PWSTR, amsiSession: Windows.Win32.System.Antimalware.HAMSISESSION, result: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Amsi.dll')
def AmsiNotifyOperation(amsiContext: Windows.Win32.System.Antimalware.HAMSICONTEXT, buffer: c_void_p, length: UInt32, contentName: Windows.Win32.Foundation.PWSTR, result: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('Amsi.dll')
def AmsiScanString(amsiContext: Windows.Win32.System.Antimalware.HAMSICONTEXT, string: Windows.Win32.Foundation.PWSTR, contentName: Windows.Win32.Foundation.PWSTR, amsiSession: Windows.Win32.System.Antimalware.HAMSISESSION, result: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('KERNEL32.dll')
def InstallELAMCertificateInfo(ELAMFile: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.BOOL: ...
CAntimalware = Guid('fdb00e52-a214-4aa1-8f-ba-43-57-bb-00-72-ec')
HAMSICONTEXT = IntPtr
HAMSISESSION = IntPtr
class IAmsiStream(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    Guid = Guid('3e47f2e5-81d4-4d3b-89-7f-54-50-96-77-03-73')
    @commethod(3)
    def GetAttribute(self, attribute: Windows.Win32.System.Antimalware.AMSI_ATTRIBUTE, dataSize: UInt32, data: POINTER(Byte), retData: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Read(self, position: UInt64, size: UInt32, buffer: POINTER(Byte), readSize: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class IAntimalware(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    Guid = Guid('82d29c2e-f062-44e6-b5-c9-3d-9a-2f-24-a2-df')
    @commethod(3)
    def Scan(self, stream: Windows.Win32.System.Antimalware.IAmsiStream_head, result: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT), provider: POINTER(Windows.Win32.System.Antimalware.IAntimalwareProvider_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def CloseSession(self, session: UInt64) -> Void: ...
class IAntimalware2(ComPtr):
    extends: Windows.Win32.System.Antimalware.IAntimalware
    Guid = Guid('301035b5-2d42-4f56-8c-65-2d-ca-a7-fb-3c-dc')
    @commethod(5)
    def Notify(self, buffer: c_void_p, length: UInt32, contentName: Windows.Win32.Foundation.PWSTR, appName: Windows.Win32.Foundation.PWSTR, pResult: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT)) -> Windows.Win32.Foundation.HRESULT: ...
class IAntimalwareProvider(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    Guid = Guid('b2cabfe3-fe04-42b1-a5-df-08-d4-83-d4-d1-25')
    @commethod(3)
    def Scan(self, stream: Windows.Win32.System.Antimalware.IAmsiStream_head, result: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def CloseSession(self, session: UInt64) -> Void: ...
    @commethod(5)
    def DisplayName(self, displayName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IAntimalwareProvider2(ComPtr):
    extends: Windows.Win32.System.Antimalware.IAntimalwareProvider
    Guid = Guid('7c1e6570-3f73-4e0f-8a-d4-98-b9-4c-d3-29-0f')
    @commethod(6)
    def Notify(self, buffer: c_void_p, length: UInt32, contentName: Windows.Win32.Foundation.PWSTR, appName: Windows.Win32.Foundation.PWSTR, pResult: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT)) -> Windows.Win32.Foundation.HRESULT: ...
class IAntimalwareUacProvider(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    Guid = Guid('b2cabfe4-fe04-42b1-a5-df-08-d4-83-d4-d1-25')
    @commethod(3)
    def UacScan(self, context: POINTER(Windows.Win32.System.Antimalware.AMSI_UAC_REQUEST_CONTEXT_head), result: POINTER(Windows.Win32.System.Antimalware.AMSI_RESULT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def DisplayName(self, displayName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
make_head(_module, 'AMSI_UAC_REQUEST_AX_INFO')
make_head(_module, 'AMSI_UAC_REQUEST_COM_INFO')
make_head(_module, 'AMSI_UAC_REQUEST_CONTEXT')
make_head(_module, 'AMSI_UAC_REQUEST_EXE_INFO')
make_head(_module, 'AMSI_UAC_REQUEST_MSI_INFO')
make_head(_module, 'AMSI_UAC_REQUEST_PACKAGED_APP_INFO')
make_head(_module, 'IAmsiStream')
make_head(_module, 'IAntimalware')
make_head(_module, 'IAntimalware2')
make_head(_module, 'IAntimalwareProvider')
make_head(_module, 'IAntimalwareProvider2')
make_head(_module, 'IAntimalwareUacProvider')
