from __future__ import annotations
from ctypes import c_void_p, c_char_p, c_wchar_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from Windows import ARCH, MissingType, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
import Windows.Win32.Foundation
import Windows.Win32.System.Com
import Windows.Win32.System.RemoteManagement
import Windows.Win32.System.Variant
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
WSMAN_FLAG_REQUESTED_API_VERSION_1_0: UInt32 = 0
WSMAN_FLAG_REQUESTED_API_VERSION_1_1: UInt32 = 1
WSMAN_OPERATION_INFOV1: UInt32 = 0
WSMAN_OPERATION_INFOV2: UInt32 = 2864434397
WSMAN_DEFAULT_TIMEOUT_MS: UInt32 = 60000
WSMAN_STREAM_ID_STDIN: String = 'stdin'
WSMAN_STREAM_ID_STDOUT: String = 'stdout'
WSMAN_STREAM_ID_STDERR: String = 'stderr'
WSMAN_SHELL_NS: String = 'http://schemas.microsoft.com/wbem/wsman/1/windows/shell'
WSMAN_CMDSHELL_OPTION_CODEPAGE: String = 'WINRS_CODEPAGE'
WSMAN_SHELL_OPTION_NOPROFILE: String = 'WINRS_NOPROFILE'
WSMAN_CMDSHELL_OPTION_CONSOLEMODE_STDIN: String = 'WINRS_CONSOLEMODE_STDIN'
WSMAN_CMDSHELL_OPTION_SKIP_CMD_SHELL: String = 'WINRS_SKIP_CMD_SHELL'
WSMAN_FLAG_RECEIVE_RESULT_NO_MORE_DATA: UInt32 = 1
WSMAN_FLAG_RECEIVE_FLUSH: UInt32 = 2
WSMAN_FLAG_RECEIVE_RESULT_DATA_BOUNDARY: UInt32 = 4
WSMAN_PLUGIN_PARAMS_MAX_ENVELOPE_SIZE: UInt32 = 1
WSMAN_PLUGIN_PARAMS_TIMEOUT: UInt32 = 2
WSMAN_PLUGIN_PARAMS_REMAINING_RESULT_SIZE: UInt32 = 3
WSMAN_PLUGIN_PARAMS_LARGEST_RESULT_SIZE: UInt32 = 4
WSMAN_PLUGIN_PARAMS_GET_REQUESTED_LOCALE: UInt32 = 5
WSMAN_PLUGIN_PARAMS_GET_REQUESTED_DATA_LOCALE: UInt32 = 6
WSMAN_PLUGIN_PARAMS_SHAREDHOST: UInt32 = 1
WSMAN_PLUGIN_PARAMS_RUNAS_USER: UInt32 = 2
WSMAN_PLUGIN_PARAMS_AUTORESTART: UInt32 = 3
WSMAN_PLUGIN_PARAMS_HOSTIDLETIMEOUTSECONDS: UInt32 = 4
WSMAN_PLUGIN_PARAMS_NAME: UInt32 = 5
WSMAN_PLUGIN_STARTUP_REQUEST_RECEIVED: UInt32 = 0
WSMAN_PLUGIN_STARTUP_AUTORESTARTED_REBOOT: UInt32 = 1
WSMAN_PLUGIN_STARTUP_AUTORESTARTED_CRASH: UInt32 = 2
WSMAN_PLUGIN_SHUTDOWN_SYSTEM: UInt32 = 1
WSMAN_PLUGIN_SHUTDOWN_SERVICE: UInt32 = 2
WSMAN_PLUGIN_SHUTDOWN_IISHOST: UInt32 = 3
WSMAN_PLUGIN_SHUTDOWN_IDLETIMEOUT_ELAPSED: UInt32 = 4
WSMAN_FLAG_SEND_NO_MORE_DATA: UInt32 = 1
ERROR_WSMAN_RESOURCE_NOT_FOUND: UInt32 = 2150858752
ERROR_WSMAN_INVALID_ACTIONURI: UInt32 = 2150858753
ERROR_WSMAN_INVALID_URI: UInt32 = 2150858754
ERROR_WSMAN_PROVIDER_FAILURE: UInt32 = 2150858755
ERROR_WSMAN_BATCH_COMPLETE: UInt32 = 2150858756
ERROR_WSMAN_CONFIG_CORRUPTED: UInt32 = 2150858757
ERROR_WSMAN_PULL_IN_PROGRESS: UInt32 = 2150858758
ERROR_WSMAN_ENUMERATION_CLOSED: UInt32 = 2150858759
ERROR_WSMAN_SUBSCRIPTION_CLOSED: UInt32 = 2150858760
ERROR_WSMAN_SUBSCRIPTION_CLOSE_IN_PROGRESS: UInt32 = 2150858761
ERROR_WSMAN_SUBSCRIPTION_CLIENT_DID_NOT_CALL_WITHIN_HEARTBEAT: UInt32 = 2150858762
ERROR_WSMAN_SUBSCRIPTION_NO_HEARTBEAT: UInt32 = 2150858763
ERROR_WSMAN_UNSUPPORTED_TIMEOUT: UInt32 = 2150858764
ERROR_WSMAN_SOAP_VERSION_MISMATCH: UInt32 = 2150858765
ERROR_WSMAN_SOAP_DATA_ENCODING_UNKNOWN: UInt32 = 2150858766
ERROR_WSMAN_INVALID_MESSAGE_INFORMATION_HEADER: UInt32 = 2150858767
ERROR_WSMAN_SOAP_FAULT_MUST_UNDERSTAND: UInt32 = 2150858768
ERROR_WSMAN_MESSAGE_INFORMATION_HEADER_REQUIRED: UInt32 = 2150858769
ERROR_WSMAN_DESTINATION_UNREACHABLE: UInt32 = 2150858770
ERROR_WSMAN_ACTION_NOT_SUPPORTED: UInt32 = 2150858771
ERROR_WSMAN_ENDPOINT_UNAVAILABLE: UInt32 = 2150858772
ERROR_WSMAN_INVALID_REPRESENTATION: UInt32 = 2150858773
ERROR_WSMAN_ENUMERATE_INVALID_EXPIRATION_TIME: UInt32 = 2150858774
ERROR_WSMAN_ENUMERATE_UNSUPPORTED_EXPIRATION_TIME: UInt32 = 2150858775
ERROR_WSMAN_ENUMERATE_FILTERING_NOT_SUPPORTED: UInt32 = 2150858776
ERROR_WSMAN_ENUMERATE_FILTER_DIALECT_REQUESTED_UNAVAILABLE: UInt32 = 2150858777
ERROR_WSMAN_ENUMERATE_CANNOT_PROCESS_FILTER: UInt32 = 2150858778
ERROR_WSMAN_ENUMERATE_INVALID_ENUMERATION_CONTEXT: UInt32 = 2150858779
ERROR_WSMAN_ENUMERATE_TIMED_OUT: UInt32 = 2150858780
ERROR_WSMAN_ENUMERATE_UNABLE_TO_RENEW: UInt32 = 2150858781
ERROR_WSMAN_EVENTING_DELIVERY_MODE_REQUESTED_UNAVAILABLE: UInt32 = 2150858782
ERROR_WSMAN_EVENTING_INVALID_EXPIRATION_TIME: UInt32 = 2150858783
ERROR_WSMAN_EVENTING_UNSUPPORTED_EXPIRATION_TYPE: UInt32 = 2150858784
ERROR_WSMAN_EVENTING_FILTERING_NOT_SUPPORTED: UInt32 = 2150858785
ERROR_WSMAN_EVENTING_FILTERING_REQUESTED_UNAVAILABLE: UInt32 = 2150858786
ERROR_WSMAN_EVENTING_SOURCE_UNABLE_TO_PROCESS: UInt32 = 2150858787
ERROR_WSMAN_EVENTING_UNABLE_TO_RENEW: UInt32 = 2150858788
ERROR_WSMAN_EVENTING_INVALID_MESSAGE: UInt32 = 2150858789
ERROR_WSMAN_ENVELOPE_TOO_LARGE: UInt32 = 2150858790
ERROR_WSMAN_INVALID_SOAP_BODY: UInt32 = 2150858791
ERROR_WSMAN_INVALID_RESUMPTION_CONTEXT: UInt32 = 2150858792
ERROR_WSMAN_OPERATION_TIMEDOUT: UInt32 = 2150858793
ERROR_WSMAN_RESUMPTION_NOT_SUPPORTED: UInt32 = 2150858794
ERROR_WSMAN_RESUMPTION_TYPE_NOT_SUPPORTED: UInt32 = 2150858795
ERROR_WSMAN_UNSUPPORTED_ENCODING: UInt32 = 2150858796
ERROR_WSMAN_URI_LIMIT: UInt32 = 2150858797
ERROR_WSMAN_INVALID_PROPOSED_ID: UInt32 = 2150858798
ERROR_WSMAN_INVALID_BATCH_PARAMETER: UInt32 = 2150858799
ERROR_WSMAN_NO_ACK: UInt32 = 2150858800
ERROR_WSMAN_ACTION_MISMATCH: UInt32 = 2150858801
ERROR_WSMAN_CONCURRENCY: UInt32 = 2150858802
ERROR_WSMAN_ALREADY_EXISTS: UInt32 = 2150858803
ERROR_WSMAN_DELIVERY_REFUSED: UInt32 = 2150858804
ERROR_WSMAN_ENCODING_LIMIT: UInt32 = 2150858805
ERROR_WSMAN_FAILED_AUTHENTICATION: UInt32 = 2150858806
ERROR_WSMAN_INCOMPATIBLE_EPR: UInt32 = 2150858807
ERROR_WSMAN_INVALID_BOOKMARK: UInt32 = 2150858808
ERROR_WSMAN_INVALID_OPTIONS: UInt32 = 2150858809
ERROR_WSMAN_INVALID_PARAMETER: UInt32 = 2150858810
ERROR_WSMAN_INVALID_RESOURCE_URI: UInt32 = 2150858811
ERROR_WSMAN_INVALID_SYSTEM: UInt32 = 2150858812
ERROR_WSMAN_INVALID_SELECTORS: UInt32 = 2150858813
ERROR_WSMAN_METADATA_REDIRECT: UInt32 = 2150858814
ERROR_WSMAN_QUOTA_LIMIT: UInt32 = 2150858815
ERROR_WSMAN_RENAME_FAILURE: UInt32 = 2150858816
ERROR_WSMAN_SCHEMA_VALIDATION_ERROR: UInt32 = 2150858817
ERROR_WSMAN_UNSUPPORTED_FEATURE: UInt32 = 2150858818
ERROR_WSMAN_INVALID_XML: UInt32 = 2150858819
ERROR_WSMAN_INVALID_KEY: UInt32 = 2150858820
ERROR_WSMAN_DELIVER_IN_PROGRESS: UInt32 = 2150858821
ERROR_WSMAN_SYSTEM_NOT_FOUND: UInt32 = 2150858822
ERROR_WSMAN_MAX_ENVELOPE_SIZE: UInt32 = 2150858823
ERROR_WSMAN_MAX_ENVELOPE_SIZE_EXCEEDED: UInt32 = 2150858824
ERROR_WSMAN_SERVER_ENVELOPE_LIMIT: UInt32 = 2150858825
ERROR_WSMAN_SELECTOR_LIMIT: UInt32 = 2150858826
ERROR_WSMAN_OPTION_LIMIT: UInt32 = 2150858827
ERROR_WSMAN_CHARACTER_SET: UInt32 = 2150858828
ERROR_WSMAN_UNREPORTABLE_SUCCESS: UInt32 = 2150858829
ERROR_WSMAN_WHITESPACE: UInt32 = 2150858830
ERROR_WSMAN_FILTERING_REQUIRED: UInt32 = 2150858831
ERROR_WSMAN_BOOKMARK_EXPIRED: UInt32 = 2150858832
ERROR_WSMAN_OPTIONS_NOT_SUPPORTED: UInt32 = 2150858833
ERROR_WSMAN_OPTIONS_INVALID_NAME: UInt32 = 2150858834
ERROR_WSMAN_OPTIONS_INVALID_VALUE: UInt32 = 2150858835
ERROR_WSMAN_PARAMETER_TYPE_MISMATCH: UInt32 = 2150858836
ERROR_WSMAN_INVALID_PARAMETER_NAME: UInt32 = 2150858837
ERROR_WSMAN_INVALID_XML_VALUES: UInt32 = 2150858838
ERROR_WSMAN_INVALID_XML_MISSING_VALUES: UInt32 = 2150858839
ERROR_WSMAN_INVALID_XML_NAMESPACE: UInt32 = 2150858840
ERROR_WSMAN_INVALID_XML_FRAGMENT: UInt32 = 2150858841
ERROR_WSMAN_INSUFFCIENT_SELECTORS: UInt32 = 2150858842
ERROR_WSMAN_UNEXPECTED_SELECTORS: UInt32 = 2150858843
ERROR_WSMAN_SELECTOR_TYPEMISMATCH: UInt32 = 2150858844
ERROR_WSMAN_INVALID_SELECTOR_VALUE: UInt32 = 2150858845
ERROR_WSMAN_AMBIGUOUS_SELECTORS: UInt32 = 2150858846
ERROR_WSMAN_DUPLICATE_SELECTORS: UInt32 = 2150858847
ERROR_WSMAN_INVALID_TARGET_SELECTORS: UInt32 = 2150858848
ERROR_WSMAN_INVALID_TARGET_RESOURCEURI: UInt32 = 2150858849
ERROR_WSMAN_INVALID_TARGET_SYSTEM: UInt32 = 2150858850
ERROR_WSMAN_TARGET_ALREADY_EXISTS: UInt32 = 2150858851
ERROR_WSMAN_AUTHORIZATION_MODE_NOT_SUPPORTED: UInt32 = 2150858852
ERROR_WSMAN_ACK_NOT_SUPPORTED: UInt32 = 2150858853
ERROR_WSMAN_OPERATION_TIMEOUT_NOT_SUPPORTED: UInt32 = 2150858854
ERROR_WSMAN_LOCALE_NOT_SUPPORTED: UInt32 = 2150858855
ERROR_WSMAN_EXPIRATION_TIME_NOT_SUPPORTED: UInt32 = 2150858856
ERROR_WSMAN_DELIVERY_RETRIES_NOT_SUPPORTED: UInt32 = 2150858857
ERROR_WSMAN_HEARTBEATS_NOT_SUPPORTED: UInt32 = 2150858858
ERROR_WSMAN_BOOKMARKS_NOT_SUPPORTED: UInt32 = 2150858859
ERROR_WSMAN_MAXITEMS_NOT_SUPPORTED: UInt32 = 2150858860
ERROR_WSMAN_MAXTIME_NOT_SUPPORTED: UInt32 = 2150858861
ERROR_WSMAN_MAXENVELOPE_SIZE_NOT_SUPPORTED: UInt32 = 2150858862
ERROR_WSMAN_MAXENVELOPE_POLICY_NOT_SUPPORTED: UInt32 = 2150858863
ERROR_WSMAN_FILTERING_REQUIRED_NOT_SUPPORTED: UInt32 = 2150858864
ERROR_WSMAN_INSECURE_ADDRESS_NOT_SUPPORTED: UInt32 = 2150858865
ERROR_WSMAN_FORMAT_MISMATCH_NOT_SUPPORTED: UInt32 = 2150858866
ERROR_WSMAN_FORMAT_SECURITY_TOKEN_NOT_SUPPORTED: UInt32 = 2150858867
ERROR_WSMAN_BAD_METHOD: UInt32 = 2150858868
ERROR_WSMAN_UNSUPPORTED_MEDIA: UInt32 = 2150858869
ERROR_WSMAN_UNSUPPORTED_ADDRESSING_MODE: UInt32 = 2150858870
ERROR_WSMAN_FRAGMENT_TRANSFER_NOT_SUPPORTED: UInt32 = 2150858871
ERROR_WSMAN_ENUMERATION_INITIALIZING: UInt32 = 2150858872
ERROR_WSMAN_CONNECTOR_GET: UInt32 = 2150858873
ERROR_WSMAN_URI_QUERY_STRING_SYNTAX_ERROR: UInt32 = 2150858874
ERROR_WSMAN_INEXISTENT_MAC_ADDRESS: UInt32 = 2150858875
ERROR_WSMAN_NO_UNICAST_ADDRESSES: UInt32 = 2150858876
ERROR_WSMAN_NO_DHCP_ADDRESSES: UInt32 = 2150858877
ERROR_WSMAN_MIN_ENVELOPE_SIZE: UInt32 = 2150858878
ERROR_WSMAN_EPR_NESTING_EXCEEDED: UInt32 = 2150858879
ERROR_WSMAN_REQUEST_INIT_ERROR: UInt32 = 2150858880
ERROR_WSMAN_INVALID_TIMEOUT_HEADER: UInt32 = 2150858881
ERROR_WSMAN_CERT_NOT_FOUND: UInt32 = 2150858882
ERROR_WSMAN_PLUGIN_FAILED: UInt32 = 2150858883
ERROR_WSMAN_ENUMERATION_INVALID: UInt32 = 2150858884
ERROR_WSMAN_CONFIG_CANNOT_CHANGE_MUTUAL: UInt32 = 2150858885
ERROR_WSMAN_ENUMERATION_MODE_UNSUPPORTED: UInt32 = 2150858886
ERROR_WSMAN_MUSTUNDERSTAND_ON_LOCALE_UNSUPPORTED: UInt32 = 2150858887
ERROR_WSMAN_POLICY_CORRUPTED: UInt32 = 2150858888
ERROR_WSMAN_LISTENER_ADDRESS_INVALID: UInt32 = 2150858889
ERROR_WSMAN_CONFIG_CANNOT_CHANGE_GPO_CONTROLLED_SETTING: UInt32 = 2150858890
ERROR_WSMAN_EVENTING_CONCURRENT_CLIENT_RECEIVE: UInt32 = 2150858891
ERROR_WSMAN_EVENTING_FAST_SENDER: UInt32 = 2150858892
ERROR_WSMAN_EVENTING_INSECURE_PUSHSUBSCRIPTION_CONNECTION: UInt32 = 2150858893
ERROR_WSMAN_EVENTING_INVALID_EVENTSOURCE: UInt32 = 2150858894
ERROR_WSMAN_EVENTING_NOMATCHING_LISTENER: UInt32 = 2150858895
ERROR_WSMAN_FRAGMENT_DIALECT_REQUESTED_UNAVAILABLE: UInt32 = 2150858896
ERROR_WSMAN_MISSING_FRAGMENT_PATH: UInt32 = 2150858897
ERROR_WSMAN_INVALID_FRAGMENT_DIALECT: UInt32 = 2150858898
ERROR_WSMAN_INVALID_FRAGMENT_PATH: UInt32 = 2150858899
ERROR_WSMAN_EVENTING_INCOMPATIBLE_BATCHPARAMS_AND_DELIVERYMODE: UInt32 = 2150858900
ERROR_WSMAN_EVENTING_LOOPBACK_TESTFAILED: UInt32 = 2150858901
ERROR_WSMAN_EVENTING_INVALID_ENDTO_ADDRESSS: UInt32 = 2150858902
ERROR_WSMAN_EVENTING_INVALID_INCOMING_EVENT_PACKET_HEADER: UInt32 = 2150858903
ERROR_WSMAN_SESSION_ALREADY_CLOSED: UInt32 = 2150858904
ERROR_WSMAN_SUBSCRIPTION_LISTENER_NOLONGERVALID: UInt32 = 2150858905
ERROR_WSMAN_PROVIDER_LOAD_FAILED: UInt32 = 2150858906
ERROR_WSMAN_EVENTING_SUBSCRIPTIONCLOSED_BYREMOTESERVICE: UInt32 = 2150858907
ERROR_WSMAN_EVENTING_DELIVERYFAILED_FROMSOURCE: UInt32 = 2150858908
ERROR_WSMAN_SECURITY_UNMAPPED: UInt32 = 2150858909
ERROR_WSMAN_EVENTING_SUBSCRIPTION_CANCELLED_BYSOURCE: UInt32 = 2150858910
ERROR_WSMAN_INVALID_HOSTNAME_PATTERN: UInt32 = 2150858911
ERROR_WSMAN_EVENTING_MISSING_NOTIFYTO: UInt32 = 2150858912
ERROR_WSMAN_EVENTING_MISSING_NOTIFYTO_ADDRESSS: UInt32 = 2150858913
ERROR_WSMAN_EVENTING_INVALID_NOTIFYTO_ADDRESSS: UInt32 = 2150858914
ERROR_WSMAN_EVENTING_INVALID_LOCALE_IN_DELIVERY: UInt32 = 2150858915
ERROR_WSMAN_EVENTING_INVALID_HEARTBEAT: UInt32 = 2150858916
ERROR_WSMAN_MACHINE_OPTION_REQUIRED: UInt32 = 2150858917
ERROR_WSMAN_UNSUPPORTED_FEATURE_OPTIONS: UInt32 = 2150858918
ERROR_WSMAN_BATCHSIZE_TOO_SMALL: UInt32 = 2150858919
ERROR_WSMAN_EVENTING_DELIVERY_MODE_REQUESTED_INVALID: UInt32 = 2150858920
ERROR_WSMAN_PROVSYS_NOT_SUPPORTED: UInt32 = 2150858921
ERROR_WSMAN_PUSH_SUBSCRIPTION_CONFIG_INVALID: UInt32 = 2150858922
ERROR_WSMAN_CREDS_PASSED_WITH_NO_AUTH_FLAG: UInt32 = 2150858923
ERROR_WSMAN_CLIENT_INVALID_FLAG: UInt32 = 2150858924
ERROR_WSMAN_CLIENT_MULTIPLE_AUTH_FLAGS: UInt32 = 2150858925
ERROR_WSMAN_CLIENT_SPN_WRONG_AUTH: UInt32 = 2150858926
ERROR_WSMAN_CLIENT_CERT_UNNEEDED_CREDS: UInt32 = 2150858927
ERROR_WSMAN_CLIENT_USERNAME_PASSWORD_NEEDED: UInt32 = 2150858928
ERROR_WSMAN_CLIENT_CERT_UNNEEDED_USERNAME: UInt32 = 2150858929
ERROR_WSMAN_CLIENT_CREDENTIALS_NEEDED: UInt32 = 2150858930
ERROR_WSMAN_CLIENT_CREDENTIALS_FLAG_NEEDED: UInt32 = 2150858931
ERROR_WSMAN_CLIENT_CERT_NEEDED: UInt32 = 2150858932
ERROR_WSMAN_CLIENT_CERT_UNKNOWN_TYPE: UInt32 = 2150858933
ERROR_WSMAN_CLIENT_CERT_UNKNOWN_LOCATION: UInt32 = 2150858934
ERROR_WSMAN_CLIENT_INVALID_CERT: UInt32 = 2150858935
ERROR_WSMAN_CLIENT_LOCAL_INVALID_CREDS: UInt32 = 2150858936
ERROR_WSMAN_CLIENT_LOCAL_INVALID_CONNECTION_OPTIONS: UInt32 = 2150858937
ERROR_WSMAN_CLIENT_CREATESESSION_NULL_PARAM: UInt32 = 2150858938
ERROR_WSMAN_CLIENT_ENUMERATE_NULL_PARAM: UInt32 = 2150858939
ERROR_WSMAN_CLIENT_SUBSCRIBE_NULL_PARAM: UInt32 = 2150858940
ERROR_WSMAN_CLIENT_NULL_RESULT_PARAM: UInt32 = 2150858941
ERROR_WSMAN_CLIENT_NO_HANDLE: UInt32 = 2150858942
ERROR_WSMAN_CLIENT_BLANK_URI: UInt32 = 2150858943
ERROR_WSMAN_CLIENT_INVALID_RESOURCE_LOCATOR: UInt32 = 2150858944
ERROR_WSMAN_CLIENT_BLANK_INPUT_XML: UInt32 = 2150858945
ERROR_WSMAN_CLIENT_BATCH_ITEMS_TOO_SMALL: UInt32 = 2150858946
ERROR_WSMAN_CLIENT_MAX_CHARS_TOO_SMALL: UInt32 = 2150858947
ERROR_WSMAN_CLIENT_BLANK_ACTION_URI: UInt32 = 2150858948
ERROR_WSMAN_CLIENT_ZERO_HEARTBEAT: UInt32 = 2150858949
ERROR_WSMAN_CLIENT_MULTIPLE_DELIVERY_MODES: UInt32 = 2150858950
ERROR_WSMAN_CLIENT_MULTIPLE_ENVELOPE_POLICIES: UInt32 = 2150858951
ERROR_WSMAN_CLIENT_UNKNOWN_EXPIRATION_TYPE: UInt32 = 2150858952
ERROR_WSMAN_CLIENT_MISSING_EXPIRATION: UInt32 = 2150858953
ERROR_WSMAN_CLIENT_PULL_INVALID_FLAGS: UInt32 = 2150858954
ERROR_WSMAN_CLIENT_PUSH_UNSUPPORTED_TRANSPORT: UInt32 = 2150858955
ERROR_WSMAN_CLIENT_PUSH_HOST_TOO_LONG: UInt32 = 2150858956
ERROR_WSMAN_CLIENT_COMPRESSION_INVALID_OPTION: UInt32 = 2150858957
ERROR_WSMAN_CLIENT_DELIVERENDSUBSCRIPTION_NULL_PARAM: UInt32 = 2150858958
ERROR_WSMAN_CLIENT_DELIVEREVENTS_NULL_PARAM: UInt32 = 2150858959
ERROR_WSMAN_CLIENT_GETBOOKMARK_NULL_PARAM: UInt32 = 2150858960
ERROR_WSMAN_CLIENT_DECODEOBJECT_NULL_PARAM: UInt32 = 2150858961
ERROR_WSMAN_CLIENT_ENCODEOBJECT_NULL_PARAM: UInt32 = 2150858962
ERROR_WSMAN_CLIENT_ENUMERATORADDOBJECT_NULL_PARAM: UInt32 = 2150858963
ERROR_WSMAN_CLIENT_ENUMERATORNEXTOBJECT_NULL_PARAM: UInt32 = 2150858964
ERROR_WSMAN_CLIENT_CONSTRUCTERROR_NULL_PARAM: UInt32 = 2150858965
ERROR_WSMAN_SERVER_NONPULLSUBSCRIBE_NULL_PARAM: UInt32 = 2150858966
ERROR_WSMAN_CLIENT_UNENCRYPTED_HTTP_ONLY: UInt32 = 2150858967
ERROR_WSMAN_CANNOT_USE_CERTIFICATES_FOR_HTTP: UInt32 = 2150858968
ERROR_WSMAN_CONNECTIONSTR_INVALID: UInt32 = 2150858969
ERROR_WSMAN_TRANSPORT_NOT_SUPPORTED: UInt32 = 2150858970
ERROR_WSMAN_PORT_INVALID: UInt32 = 2150858971
ERROR_WSMAN_CONFIG_PORT_INVALID: UInt32 = 2150858972
ERROR_WSMAN_SENDHEARBEAT_EMPTY_ENUMERATOR: UInt32 = 2150858973
ERROR_WSMAN_CLIENT_UNENCRYPTED_DISABLED: UInt32 = 2150858974
ERROR_WSMAN_CLIENT_BASIC_AUTHENTICATION_DISABLED: UInt32 = 2150858975
ERROR_WSMAN_CLIENT_DIGEST_AUTHENTICATION_DISABLED: UInt32 = 2150858976
ERROR_WSMAN_CLIENT_NEGOTIATE_AUTHENTICATION_DISABLED: UInt32 = 2150858977
ERROR_WSMAN_CLIENT_KERBEROS_AUTHENTICATION_DISABLED: UInt32 = 2150858978
ERROR_WSMAN_CLIENT_CERTIFICATES_AUTHENTICATION_DISABLED: UInt32 = 2150858979
ERROR_WSMAN_SERVER_NOT_TRUSTED: UInt32 = 2150858980
ERROR_WSMAN_EXPLICIT_CREDENTIALS_REQUIRED: UInt32 = 2150858981
ERROR_WSMAN_CERT_THUMBPRINT_NOT_BLANK: UInt32 = 2150858982
ERROR_WSMAN_CERT_THUMBPRINT_BLANK: UInt32 = 2150858983
ERROR_WSMAN_CONFIG_CANNOT_SHARE_SSL_CONFIG: UInt32 = 2150858984
ERROR_WSMAN_CONFIG_CERT_CN_DOES_NOT_MATCH_HOSTNAME: UInt32 = 2150858985
ERROR_WSMAN_CONFIG_HOSTNAME_CHANGE_WITHOUT_CERT: UInt32 = 2150858986
ERROR_WSMAN_CONFIG_THUMBPRINT_SHOULD_BE_EMPTY: UInt32 = 2150858987
ERROR_WSMAN_INVALID_IPFILTER: UInt32 = 2150858988
ERROR_WSMAN_CANNOT_CHANGE_KEYS: UInt32 = 2150858989
ERROR_WSMAN_CERT_INVALID_USAGE: UInt32 = 2150858990
ERROR_WSMAN_RESPONSE_NO_RESULTS: UInt32 = 2150858991
ERROR_WSMAN_CREATE_RESPONSE_NO_EPR: UInt32 = 2150858992
ERROR_WSMAN_RESPONSE_INVALID_ENUMERATION_CONTEXT: UInt32 = 2150858993
ERROR_WSMAN_RESPONSE_NO_XML_FRAGMENT_WRAPPER: UInt32 = 2150858994
ERROR_WSMAN_RESPONSE_INVALID_MESSAGE_INFORMATION_HEADER: UInt32 = 2150858995
ERROR_WSMAN_RESPONSE_NO_SOAP_HEADER_BODY: UInt32 = 2150858996
ERROR_WSMAN_HTTP_NO_RESPONSE_DATA: UInt32 = 2150858997
ERROR_WSMAN_RESPONSE_INVALID_SOAP_FAULT: UInt32 = 2150858998
ERROR_WSMAN_HTTP_INVALID_CONTENT_TYPE_IN_RESPONSE_DATA: UInt32 = 2150858999
ERROR_WSMAN_HTTP_CONTENT_TYPE_MISSMATCH_RESPONSE_DATA: UInt32 = 2150859000
ERROR_WSMAN_CANNOT_DECRYPT: UInt32 = 2150859001
ERROR_WSMAN_INVALID_URI_WMI_SINGLETON: UInt32 = 2150859002
ERROR_WSMAN_INVALID_URI_WMI_ENUM_WQL: UInt32 = 2150859003
ERROR_WSMAN_NO_IDENTIFY_FOR_LOCAL_SESSION: UInt32 = 2150859004
ERROR_WSMAN_NO_PUSH_SUBSCRIPTION_FOR_LOCAL_SESSION: UInt32 = 2150859005
ERROR_WSMAN_INVALID_SUBSCRIPTION_MANAGER: UInt32 = 2150859006
ERROR_WSMAN_NON_PULL_SUBSCRIPTION_NOT_SUPPORTED: UInt32 = 2150859007
ERROR_WSMAN_WMI_MAX_NESTED: UInt32 = 2150859008
ERROR_WSMAN_REMOTE_CIMPATH_NOT_SUPPORTED: UInt32 = 2150859009
ERROR_WSMAN_WMI_PROVIDER_NOT_CAPABLE: UInt32 = 2150859010
ERROR_WSMAN_WMI_INVALID_VALUE: UInt32 = 2150859011
ERROR_WSMAN_WMI_SVC_ACCESS_DENIED: UInt32 = 2150859012
ERROR_WSMAN_WMI_PROVIDER_ACCESS_DENIED: UInt32 = 2150859013
ERROR_WSMAN_WMI_CANNOT_CONNECT_ACCESS_DENIED: UInt32 = 2150859014
ERROR_WSMAN_INVALID_FILTER_XML: UInt32 = 2150859015
ERROR_WSMAN_ENUMERATE_WMI_INVALID_KEY: UInt32 = 2150859016
ERROR_WSMAN_INVALID_FRAGMENT_PATH_BLANK: UInt32 = 2150859017
ERROR_WSMAN_INVALID_CHARACTERS_IN_RESPONSE: UInt32 = 2150859018
ERROR_WSMAN_KERBEROS_IPADDRESS: UInt32 = 2150859019
ERROR_WSMAN_CLIENT_WORKGROUP_NO_KERBEROS: UInt32 = 2150859020
ERROR_WSMAN_INVALID_BATCH_SETTINGS_PARAMETER: UInt32 = 2150859021
ERROR_WSMAN_SERVER_DESTINATION_LOCALHOST: UInt32 = 2150859022
ERROR_WSMAN_UNKNOWN_HTTP_STATUS_RETURNED: UInt32 = 2150859023
ERROR_WSMAN_UNSUPPORTED_HTTP_STATUS_REDIRECT: UInt32 = 2150859024
ERROR_WSMAN_HTTP_REQUEST_TOO_LARGE_STATUS: UInt32 = 2150859025
ERROR_WSMAN_HTTP_SERVICE_UNAVAILABLE_STATUS: UInt32 = 2150859026
ERROR_WSMAN_HTTP_NOT_FOUND_STATUS: UInt32 = 2150859027
ERROR_WSMAN_EVENTING_MISSING_LOCALE_IN_DELIVERY: UInt32 = 2150859028
ERROR_WSMAN_QUICK_CONFIG_FAILED_CERT_REQUIRED: UInt32 = 2150859029
ERROR_WSMAN_QUICK_CONFIG_FIREWALL_EXCEPTIONS_DISALLOWED: UInt32 = 2150859030
ERROR_WSMAN_QUICK_CONFIG_LOCAL_POLICY_CHANGE_DISALLOWED: UInt32 = 2150859031
ERROR_WSMAN_INVALID_SELECTOR_NAME: UInt32 = 2150859032
ERROR_WSMAN_ENCODING_TYPE: UInt32 = 2150859033
ERROR_WSMAN_ENDPOINT_UNAVAILABLE_INVALID_VALUE: UInt32 = 2150859034
ERROR_WSMAN_INVALID_HEADER: UInt32 = 2150859035
ERROR_WSMAN_ENUMERATE_UNSUPPORTED_EXPIRATION_TYPE: UInt32 = 2150859036
ERROR_WSMAN_MAX_ELEMENTS_NOT_SUPPORTED: UInt32 = 2150859037
ERROR_WSMAN_WMI_PROVIDER_INVALID_PARAMETER: UInt32 = 2150859038
ERROR_WSMAN_CLIENT_MULTIPLE_ENUM_MODE_FLAGS: UInt32 = 2150859039
ERROR_WINRS_CLIENT_INVALID_FLAG: UInt32 = 2150859040
ERROR_WINRS_CLIENT_NULL_PARAM: UInt32 = 2150859041
ERROR_WSMAN_CANNOT_PROCESS_FILTER: UInt32 = 2150859042
ERROR_WSMAN_CLIENT_ENUMERATORADDEVENT_NULL_PARAM: UInt32 = 2150859043
ERROR_WSMAN_ADDOBJECT_MISSING_OBJECT: UInt32 = 2150859044
ERROR_WSMAN_ADDOBJECT_MISSING_EPR: UInt32 = 2150859045
ERROR_WSMAN_NETWORK_TIMEDOUT: UInt32 = 2150859046
ERROR_WINRS_RECEIVE_IN_PROGRESS: UInt32 = 2150859047
ERROR_WINRS_RECEIVE_NO_RESPONSE_DATA: UInt32 = 2150859048
ERROR_WINRS_CLIENT_CREATESHELL_NULL_PARAM: UInt32 = 2150859049
ERROR_WINRS_CLIENT_CLOSESHELL_NULL_PARAM: UInt32 = 2150859050
ERROR_WINRS_CLIENT_FREECREATESHELLRESULT_NULL_PARAM: UInt32 = 2150859051
ERROR_WINRS_CLIENT_RUNCOMMAND_NULL_PARAM: UInt32 = 2150859052
ERROR_WINRS_CLIENT_FREERUNCOMMANDRESULT_NULL_PARAM: UInt32 = 2150859053
ERROR_WINRS_CLIENT_SIGNAL_NULL_PARAM: UInt32 = 2150859054
ERROR_WINRS_CLIENT_RECEIVE_NULL_PARAM: UInt32 = 2150859055
ERROR_WINRS_CLIENT_FREEPULLRESULT_NULL_PARAM: UInt32 = 2150859056
ERROR_WINRS_CLIENT_PULL_NULL_PARAM: UInt32 = 2150859057
ERROR_WINRS_CLIENT_CLOSERECEIVEHANDLE_NULL_PARAM: UInt32 = 2150859058
ERROR_WINRS_CLIENT_SEND_NULL_PARAM: UInt32 = 2150859059
ERROR_WINRS_CLIENT_PUSH_NULL_PARAM: UInt32 = 2150859060
ERROR_WINRS_CLIENT_CLOSESENDHANDLE_NULL_PARAM: UInt32 = 2150859061
ERROR_WINRS_CLIENT_GET_NULL_PARAM: UInt32 = 2150859062
ERROR_WSMAN_POLYMORPHISM_MODE_UNSUPPORTED: UInt32 = 2150859063
ERROR_WSMAN_REQUEST_NOT_SUPPORTED_AT_SERVICE: UInt32 = 2150859064
ERROR_WSMAN_URI_NON_DMTF_CLASS: UInt32 = 2150859065
ERROR_WSMAN_URI_WRONG_DMTF_VERSION: UInt32 = 2150859066
ERROR_WSMAN_DIFFERENT_CIM_SELECTOR: UInt32 = 2150859067
ERROR_WSMAN_PUSHSUBSCRIPTION_INVALIDUSERACCOUNT: UInt32 = 2150859068
ERROR_WSMAN_EVENTING_NONDOMAINJOINED_PUBLISHER: UInt32 = 2150859069
ERROR_WSMAN_EVENTING_NONDOMAINJOINED_COLLECTOR: UInt32 = 2150859070
ERROR_WSMAN_CONFIG_READONLY_PROPERTY: UInt32 = 2150859071
ERROR_WINRS_CODE_PAGE_NOT_SUPPORTED: UInt32 = 2150859072
ERROR_WSMAN_CLIENT_DISABLE_LOOPBACK_WITH_EXPLICIT_CREDENTIALS: UInt32 = 2150859073
ERROR_WSMAN_CLIENT_INVALID_DISABLE_LOOPBACK: UInt32 = 2150859074
ERROR_WSMAN_CLIENT_ENUM_RECEIVED_TOO_MANY_ITEMS: UInt32 = 2150859075
ERROR_WSMAN_MULTIPLE_CREDENTIALS: UInt32 = 2150859076
ERROR_WSMAN_AUTHENTICATION_INVALID_FLAG: UInt32 = 2150859077
ERROR_WSMAN_CLIENT_CREDENTIALS_FOR_DEFAULT_AUTHENTICATION: UInt32 = 2150859078
ERROR_WSMAN_CLIENT_USERNAME_AND_PASSWORD_NEEDED: UInt32 = 2150859079
ERROR_WSMAN_CLIENT_INVALID_CERT_DNS_OR_UPN: UInt32 = 2150859080
ERROR_WSMAN_CREATESHELL_NULL_ENVIRONMENT_VARIABLE_NAME: UInt32 = 2150859081
ERROR_WSMAN_SHELL_ALREADY_CLOSED: UInt32 = 2150859082
ERROR_WSMAN_CREATESHELL_NULL_STREAMID: UInt32 = 2150859083
ERROR_WSMAN_SHELL_INVALID_SHELL_HANDLE: UInt32 = 2150859084
ERROR_WSMAN_SHELL_INVALID_COMMAND_HANDLE: UInt32 = 2150859085
ERROR_WSMAN_RUNSHELLCOMMAND_NULL_ARGUMENT: UInt32 = 2150859086
ERROR_WSMAN_COMMAND_ALREADY_CLOSED: UInt32 = 2150859087
ERROR_WSMAN_SENDSHELLINPUT_INVALID_STREAMID_INDEX: UInt32 = 2150859088
ERROR_WSMAN_SHELL_SYNCHRONOUS_NOT_SUPPORTED: UInt32 = 2150859089
ERROR_WSMAN_NO_CERTMAPPING_OPERATION_FOR_LOCAL_SESSION: UInt32 = 2150859090
ERROR_WSMAN_CERTMAPPING_CONFIGLIMIT_EXCEEDED: UInt32 = 2150859091
ERROR_WSMAN_CERTMAPPING_INVALIDUSERCREDENTIALS: UInt32 = 2150859092
ERROR_WSMAN_CERT_INVALID_USAGE_CLIENT: UInt32 = 2150859093
ERROR_WSMAN_CERT_MISSING_AUTH_FLAG: UInt32 = 2150859094
ERROR_WSMAN_CERT_MULTIPLE_CREDENTIALS_FLAG: UInt32 = 2150859095
ERROR_WSMAN_CONFIG_SHELL_URI_INVALID: UInt32 = 2150859096
ERROR_WSMAN_CONFIG_SHELL_URI_CMDSHELLURI_NOTPERMITTED: UInt32 = 2150859097
ERROR_WSMAN_CONFIG_SHELLURI_INVALID_PROCESSPATH: UInt32 = 2150859098
ERROR_WINRS_SHELL_URI_INVALID: UInt32 = 2150859099
ERROR_WSMAN_INVALID_SECURITY_DESCRIPTOR: UInt32 = 2150859100
ERROR_WSMAN_POLICY_TOO_COMPLEX: UInt32 = 2150859101
ERROR_WSMAN_POLICY_CANNOT_COMPLY: UInt32 = 2150859102
ERROR_WSMAN_INVALID_CONNECTIONRETRY: UInt32 = 2150859103
ERROR_WSMAN_URISECURITY_INVALIDURIKEY: UInt32 = 2150859104
ERROR_WSMAN_CERTMAPPING_INVALIDSUBJECTKEY: UInt32 = 2150859105
ERROR_WSMAN_CERTMAPPING_INVALIDISSUERKEY: UInt32 = 2150859106
ERROR_WSMAN_INVALID_PUBLISHERS_TYPE: UInt32 = 2150859107
ERROR_WSMAN_CLIENT_INVALID_DELIVERY_RETRY: UInt32 = 2150859108
ERROR_WSMAN_CLIENT_NULL_PUBLISHERS: UInt32 = 2150859109
ERROR_WSMAN_CLIENT_NULL_ISSUERS: UInt32 = 2150859110
ERROR_WSMAN_CLIENT_NO_SOURCES: UInt32 = 2150859111
ERROR_WSMAN_INVALID_SUBSCRIBE_OBJECT: UInt32 = 2150859112
ERROR_WSMAN_PUBLIC_FIREWALL_PROFILE_ACTIVE: UInt32 = 2150859113
ERROR_WSMAN_CERTMAPPING_PASSWORDTOOLONG: UInt32 = 2150859114
ERROR_WSMAN_CERTMAPPING_PASSWORDBLANK: UInt32 = 2150859115
ERROR_WSMAN_CERTMAPPING_PASSWORDUSERTUPLE: UInt32 = 2150859116
ERROR_WSMAN_INVALID_PROVIDER_RESPONSE: UInt32 = 2150859117
ERROR_WSMAN_SHELL_NOT_INITIALIZED: UInt32 = 2150859118
ERROR_WSMAN_CONFIG_SHELLURI_INVALID_OPERATION_ON_KEY: UInt32 = 2150859119
ERROR_WSMAN_HTTP_STATUS_SERVER_ERROR: UInt32 = 2150859120
ERROR_WSMAN_HTTP_STATUS_BAD_REQUEST: UInt32 = 2150859121
ERROR_WSMAN_CONFIG_CANNOT_CHANGE_CERTMAPPING_KEYS: UInt32 = 2150859122
ERROR_WSMAN_HTML_ERROR: UInt32 = 2150859123
ERROR_WSMAN_CLIENT_INITIALIZE_NULL_PARAM: UInt32 = 2150859124
ERROR_WSMAN_CLIENT_INVALID_INIT_APPLICATION_FLAG: UInt32 = 2150859125
ERROR_WSMAN_CLIENT_INVALID_DEINIT_APPLICATION_FLAG: UInt32 = 2150859126
ERROR_WSMAN_CLIENT_SETSESSIONOPTION_NULL_PARAM: UInt32 = 2150859127
ERROR_WSMAN_CLIENT_SETSESSIONOPTION_INVALID_PARAM: UInt32 = 2150859128
ERROR_WSMAN_CLIENT_GETSESSIONOPTION_INVALID_PARAM: UInt32 = 2150859129
ERROR_WSMAN_CLIENT_CREATESHELL_NULL_PARAM: UInt32 = 2150859130
ERROR_WSMAN_CLIENT_INVALID_CREATE_SHELL_FLAG: UInt32 = 2150859131
ERROR_WSMAN_CLIENT_INVALID_CLOSE_SHELL_FLAG: UInt32 = 2150859132
ERROR_WSMAN_CLIENT_INVALID_CLOSE_COMMAND_FLAG: UInt32 = 2150859133
ERROR_WSMAN_CLIENT_CLOSESHELL_NULL_PARAM: UInt32 = 2150859134
ERROR_WSMAN_CLIENT_CLOSECOMMAND_NULL_PARAM: UInt32 = 2150859135
ERROR_WSMAN_CLIENT_RUNCOMMAND_NULL_PARAM: UInt32 = 2150859136
ERROR_WSMAN_CLIENT_INVALID_RUNCOMMAND_FLAG: UInt32 = 2150859137
ERROR_WSMAN_CLIENT_RUNCOMMAND_NOTCOMPLETED: UInt32 = 2150859138
ERROR_WSMAN_NO_COMMAND_RESPONSE: UInt32 = 2150859139
ERROR_WSMAN_INVALID_OPTIONSET: UInt32 = 2150859140
ERROR_WSMAN_NO_COMMANDID: UInt32 = 2150859141
ERROR_WSMAN_CLIENT_SIGNAL_NULL_PARAM: UInt32 = 2150859142
ERROR_WSMAN_CLIENT_INVALID_SIGNAL_SHELL_FLAG: UInt32 = 2150859143
ERROR_WSMAN_CLIENT_SEND_NULL_PARAM: UInt32 = 2150859144
ERROR_WSMAN_CLIENT_INVALID_SEND_SHELL_FLAG: UInt32 = 2150859145
ERROR_WSMAN_CLIENT_INVALID_SEND_SHELL_PARAMETER: UInt32 = 2150859146
ERROR_WSMAN_SHELL_INVALID_INPUT_STREAM: UInt32 = 2150859147
ERROR_WSMAN_CLIENT_RECEIVE_NULL_PARAM: UInt32 = 2150859148
ERROR_WSMAN_SHELL_INVALID_DESIRED_STREAMS: UInt32 = 2150859149
ERROR_WSMAN_CLIENT_INVALID_RECEIVE_SHELL_FLAG: UInt32 = 2150859150
ERROR_WSMAN_NO_RECEIVE_RESPONSE: UInt32 = 2150859151
ERROR_WSMAN_PLUGIN_CONFIGURATION_CORRUPTED: UInt32 = 2150859152
ERROR_WSMAN_INVALID_FILEPATH: UInt32 = 2150859153
ERROR_WSMAN_FILE_NOT_PRESENT: UInt32 = 2150859154
ERROR_WSMAN_IISCONFIGURATION_READ_FAILED: UInt32 = 2150859155
ERROR_WSMAN_CLIENT_INVALID_LOCALE: UInt32 = 2150859156
ERROR_WSMAN_CLIENT_INVALID_UI_LANGUAGE: UInt32 = 2150859157
ERROR_WSMAN_CLIENT_GETERRORMESSAGE_NULL_PARAM: UInt32 = 2150859158
ERROR_WSMAN_CLIENT_INVALID_LANGUAGE_CODE: UInt32 = 2150859159
ERROR_WSMAN_CLIENT_INVALID_GETERRORMESSAGE_FLAG: UInt32 = 2150859160
ERROR_WSMAN_REDIRECT_REQUESTED: UInt32 = 2150859161
ERROR_WSMAN_PROXY_AUTHENTICATION_INVALID_FLAG: UInt32 = 2150859162
ERROR_WSMAN_CLIENT_CREDENTIALS_FOR_PROXY_AUTHENTICATION: UInt32 = 2150859163
ERROR_WSMAN_PROXY_ACCESS_TYPE: UInt32 = 2150859164
ERROR_WSMAN_INVALID_OPTION_NO_PROXY_SERVER: UInt32 = 2150859165
ERROR_WSMAN_CLIENT_GETSESSIONOPTION_DWORD_NULL_PARAM: UInt32 = 2150859166
ERROR_WSMAN_CLIENT_GETSESSIONOPTION_DWORD_INVALID_PARAM: UInt32 = 2150859167
ERROR_WSMAN_CLIENT_GETSESSIONOPTION_STRING_INVALID_PARAM: UInt32 = 2150859168
ERROR_WSMAN_CREDSSP_USERNAME_PASSWORD_NEEDED: UInt32 = 2150859169
ERROR_WSMAN_CLIENT_CREDSSP_AUTHENTICATION_DISABLED: UInt32 = 2150859170
ERROR_WSMAN_CLIENT_ALLOWFRESHCREDENTIALS: UInt32 = 2150859171
ERROR_WSMAN_CLIENT_ALLOWFRESHCREDENTIALS_NTLMONLY: UInt32 = 2150859172
ERROR_WSMAN_QUOTA_MAX_SHELLS: UInt32 = 2150859173
ERROR_WSMAN_QUOTA_MAX_OPERATIONS: UInt32 = 2150859174
ERROR_WSMAN_QUOTA_USER: UInt32 = 2150859175
ERROR_WSMAN_QUOTA_SYSTEM: UInt32 = 2150859176
ERROR_WSMAN_DIFFERENT_AUTHZ_TOKEN: UInt32 = 2150859177
ERROR_WSMAN_REDIRECT_LOCATION_NOT_AVAILABLE: UInt32 = 2150859178
ERROR_WSMAN_QUOTA_MAX_SHELLUSERS: UInt32 = 2150859179
ERROR_WSMAN_REMOTESHELLS_NOT_ALLOWED: UInt32 = 2150859180
ERROR_WSMAN_PULL_PARAMS_NOT_SAME_AS_ENUM: UInt32 = 2150859181
ERROR_WSMAN_DEPRECATED_CONFIG_SETTING: UInt32 = 2150859182
ERROR_WSMAN_URI_SECURITY_URI: UInt32 = 2150859183
ERROR_WSMAN_CANNOT_USE_ALLOW_NEGOTIATE_IMPLICIT_CREDENTIALS_FOR_HTTP: UInt32 = 2150859184
ERROR_WSMAN_CANNOT_USE_PROXY_SETTINGS_FOR_HTTP: UInt32 = 2150859185
ERROR_WSMAN_CANNOT_USE_PROXY_SETTINGS_FOR_KERBEROS: UInt32 = 2150859186
ERROR_WSMAN_CANNOT_USE_PROXY_SETTINGS_FOR_CREDSSP: UInt32 = 2150859187
ERROR_WSMAN_CLIENT_MULTIPLE_PROXY_AUTH_FLAGS: UInt32 = 2150859188
ERROR_WSMAN_INVALID_REDIRECT_ERROR: UInt32 = 2150859189
ERROR_REDIRECT_LOCATION_TOO_LONG: UInt32 = 2150859190
ERROR_REDIRECT_LOCATION_INVALID: UInt32 = 2150859191
ERROR_SERVICE_CBT_HARDENING_INVALID: UInt32 = 2150859192
ERROR_WSMAN_NAME_NOT_RESOLVED: UInt32 = 2150859193
ERROR_WSMAN_SSL_CONNECTION_ABORTED: UInt32 = 2150859194
ERROR_WSMAN_DEFAULTAUTH_IPADDRESS: UInt32 = 2150859195
ERROR_WSMAN_CUSTOMREMOTESHELL_DEPRECATED: UInt32 = 2150859196
ERROR_WSMAN_FEATURE_DEPRECATED: UInt32 = 2150859197
ERROR_WSMAN_INVALID_USESSL_PARAM: UInt32 = 2150859198
ERROR_WSMAN_INVALID_CONFIGSDDL_URL: UInt32 = 2150859199
ERROR_WSMAN_ENUMERATE_SHELLCOMAMNDS_FILTER_EXPECTED: UInt32 = 2150859200
ERROR_WSMAN_ENUMERATE_SHELLCOMMANDS_EPRS_NOTSUPPORTED: UInt32 = 2150859201
ERROR_WSMAN_CLIENT_CREATESHELL_NAME_INVALID: UInt32 = 2150859202
ERROR_WSMAN_RUNAS_INVALIDUSERCREDENTIALS: UInt32 = 2150859203
ERROR_WINRS_SHELL_DISCONNECTED: UInt32 = 2150859204
ERROR_WINRS_SHELL_DISCONNECT_NOT_SUPPORTED: UInt32 = 2150859205
ERROR_WINRS_SHELL_CLIENTSESSIONID_MISMATCH: UInt32 = 2150859206
ERROR_WSMAN_CLIENT_DISCONNECTSHELL_NULL_PARAM: UInt32 = 2150859207
ERROR_WSMAN_CLIENT_RECONNECTSHELL_NULL_PARAM: UInt32 = 2150859208
ERROR_WSMAN_CLIENT_CONNECTSHELL_NULL_PARAM: UInt32 = 2150859209
ERROR_WSMAN_CLIENT_CONNECTCOMMAND_NULL_PARAM: UInt32 = 2150859210
ERROR_WINRS_CONNECT_RESPONSE_BAD_BODY: UInt32 = 2150859211
ERROR_WSMAN_COMMAND_TERMINATED: UInt32 = 2150859212
ERROR_WINRS_SHELL_CONNECTED_TO_DIFFERENT_CLIENT: UInt32 = 2150859213
ERROR_WINRS_SHELL_DISCONNECT_OPERATION_NOT_GRACEFUL: UInt32 = 2150859214
ERROR_WINRS_SHELL_DISCONNECT_OPERATION_NOT_VALID: UInt32 = 2150859215
ERROR_WINRS_SHELL_RECONNECT_OPERATION_NOT_VALID: UInt32 = 2150859216
ERROR_WSMAN_CONFIG_GROUP_POLICY_CHANGE_NOTIFICATION_SUBSCRIPTION_FAILED: UInt32 = 2150859217
ERROR_WSMAN_CLIENT_RECONNECTSHELLCOMMAND_NULL_PARAM: UInt32 = 2150859218
ERROR_WINRS_SHELLCOMMAND_RECONNECT_OPERATION_NOT_VALID: UInt32 = 2150859219
ERROR_WINRS_SHELLCOMMAND_CLIENTID_NOT_VALID: UInt32 = 2150859220
ERROR_WINRS_SHELL_CLIENTID_NOT_VALID: UInt32 = 2150859221
ERROR_WINRS_SHELLCOMMAND_CLIENTID_RESOURCE_CONFLICT: UInt32 = 2150859222
ERROR_WINRS_SHELL_CLIENTID_RESOURCE_CONFLICT: UInt32 = 2150859223
ERROR_WINRS_SHELLCOMMAND_DISCONNECT_OPERATION_NOT_VALID: UInt32 = 2150859224
ERROR_WSMAN_SUBSCRIBE_WMI_INVALID_KEY: UInt32 = 2150859225
ERROR_WSMAN_CLIENT_INVALID_DISCONNECT_SHELL_FLAG: UInt32 = 2150859226
ERROR_WSMAN_CLIENT_INVALID_SHELL_COMMAND_PAIR: UInt32 = 2150859227
ERROR_WSMAN_SEMANTICCALLBACK_TIMEDOUT: UInt32 = 2150859228
ERROR_WSMAN_SERVICE_REMOTE_ACCESS_DISABLED: UInt32 = 2150859229
ERROR_WSMAN_SERVICE_STREAM_DISCONNECTED: UInt32 = 2150859230
ERROR_WSMAN_CREATESHELL_RUNAS_FAILED: UInt32 = 2150859231
ERROR_WSMAN_INVALID_XML_RUNAS_DISABLED: UInt32 = 2150859232
ERROR_WSMAN_WRONG_METADATA: UInt32 = 2150859233
ERROR_WSMAN_UNSUPPORTED_TYPE: UInt32 = 2150859234
ERROR_WSMAN_REMOTE_CONNECTION_NOT_ALLOWED: UInt32 = 2150859235
ERROR_WSMAN_QUOTA_MAX_SHELLS_PPQ: UInt32 = 2150859236
ERROR_WSMAN_QUOTA_MAX_USERS_PPQ: UInt32 = 2150859237
ERROR_WSMAN_QUOTA_MAX_PLUGINSHELLS_PPQ: UInt32 = 2150859238
ERROR_WSMAN_QUOTA_MAX_PLUGINOPERATIONS_PPQ: UInt32 = 2150859239
ERROR_WSMAN_QUOTA_MAX_OPERATIONS_USER_PPQ: UInt32 = 2150859240
ERROR_WSMAN_QUOTA_MAX_COMMANDS_PER_SHELL_PPQ: UInt32 = 2150859241
ERROR_WSMAN_QUOTA_MIN_REQUIREMENT_NOT_AVAILABLE_PPQ: UInt32 = 2150859242
ERROR_WSMAN_NEW_DESERIALIZER: UInt32 = 2150859243
ERROR_WSMAN_DESERIALIZE_CLASS: UInt32 = 2150859244
ERROR_WSMAN_GETCLASS: UInt32 = 2150859245
ERROR_WSMAN_NEW_SESSION: UInt32 = 2150859246
ERROR_WSMAN_NULL_KEY: UInt32 = 2150859247
ERROR_WSMAN_MUTUAL_AUTH_FAILED: UInt32 = 2150859248
ERROR_WSMAN_UNSUPPORTED_OCTETTYPE: UInt32 = 2150859249
ERROR_WINRS_IDLETIMEOUT_OUTOFBOUNDS: UInt32 = 2150859250
ERROR_WSMAN_INSUFFICIENT_METADATA_FOR_BASIC: UInt32 = 2150859251
ERROR_WSMAN_INVALID_LITERAL_URI: UInt32 = 2150859252
ERROR_WSMAN_OBJECTONLY_INVALID: UInt32 = 2150859253
ERROR_WSMAN_MISSING_CLASSNAME: UInt32 = 2150859254
ERROR_WSMAN_EVENTING_INVALID_ENCODING_IN_DELIVERY: UInt32 = 2150859255
ERROR_WSMAN_DESTINATION_INVALID: UInt32 = 2150859256
ERROR_WSMAN_UNSUPPORTED_FEATURE_IDENTIFY: UInt32 = 2150859257
ERROR_WSMAN_CLIENT_SESSION_UNUSABLE: UInt32 = 2150859258
ERROR_WSMAN_VIRTUALACCOUNT_NOTSUPPORTED: UInt32 = 2150859259
ERROR_WSMAN_VIRTUALACCOUNT_NOTSUPPORTED_DOWNLEVEL: UInt32 = 2150859260
ERROR_WSMAN_RUNASUSER_MANAGEDACCOUNT_LOGON_FAILED: UInt32 = 2150859261
ERROR_WSMAN_CERTMAPPING_CREDENTIAL_MANAGEMENT_FAILIED: UInt32 = 2150859262
ERROR_WSMAN_EVENTING_PUSH_SUBSCRIPTION_NOACTIVATE_EVENTSOURCE: UInt32 = 2150859263
@winfunctype('WsmSvc.dll')
def WSManInitialize(flags: UInt32, apiHandle: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_API_HANDLE)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManDeinitialize(apiHandle: Windows.Win32.System.RemoteManagement.WSMAN_API_HANDLE, flags: UInt32) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManGetErrorMessage(apiHandle: Windows.Win32.System.RemoteManagement.WSMAN_API_HANDLE, flags: UInt32, languageCode: Windows.Win32.Foundation.PWSTR, errorCode: UInt32, messageLength: UInt32, message: Windows.Win32.Foundation.PWSTR, messageLengthUsed: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManCreateSession(apiHandle: Windows.Win32.System.RemoteManagement.WSMAN_API_HANDLE, connection: Windows.Win32.Foundation.PWSTR, flags: UInt32, serverAuthenticationCredentials: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_AUTHENTICATION_CREDENTIALS_head), proxyInfo: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PROXY_INFO_head), session: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManCloseSession(session: Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE, flags: UInt32) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManSetSessionOption(session: Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE, option: Windows.Win32.System.RemoteManagement.WSManSessionOption, data: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManGetSessionOptionAsDword(session: Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE, option: Windows.Win32.System.RemoteManagement.WSManSessionOption, value: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManGetSessionOptionAsString(session: Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE, option: Windows.Win32.System.RemoteManagement.WSManSessionOption, stringLength: UInt32, string: Windows.Win32.Foundation.PWSTR, stringLengthUsed: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManCloseOperation(operationHandle: Windows.Win32.System.RemoteManagement.WSMAN_OPERATION_HANDLE, flags: UInt32) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManCreateShell(session: Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE, flags: UInt32, resourceUri: Windows.Win32.Foundation.PWSTR, startupInfo: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_STARTUP_INFO_V11_head), options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SET_head), createXml: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), shell: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManRunShellCommand(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, flags: UInt32, commandLine: Windows.Win32.Foundation.PWSTR, args: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_ARG_SET_head), options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SET_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), command: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManSignalShell(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, command: Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE, flags: UInt32, code: Windows.Win32.Foundation.PWSTR, async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), signalOperation: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPERATION_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManReceiveShellOutput(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, command: Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE, flags: UInt32, desiredStreamSet: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_STREAM_ID_SET_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), receiveOperation: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPERATION_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManSendShellInput(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, command: Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE, flags: UInt32, streamId: Windows.Win32.Foundation.PWSTR, streamData: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head), endOfStream: Windows.Win32.Foundation.BOOL, async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), sendOperation: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPERATION_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManCloseCommand(commandHandle: Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE, flags: UInt32, async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManCloseShell(shellHandle: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, flags: UInt32, async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManCreateShellEx(session: Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE, flags: UInt32, resourceUri: Windows.Win32.Foundation.PWSTR, shellId: Windows.Win32.Foundation.PWSTR, startupInfo: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_STARTUP_INFO_V11_head), options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SET_head), createXml: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), shell: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManRunShellCommandEx(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, flags: UInt32, commandId: Windows.Win32.Foundation.PWSTR, commandLine: Windows.Win32.Foundation.PWSTR, args: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_ARG_SET_head), options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SET_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), command: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManDisconnectShell(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, flags: UInt32, disconnectInfo: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_DISCONNECT_INFO_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManReconnectShell(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, flags: UInt32, async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManReconnectShellCommand(commandHandle: Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE, flags: UInt32, async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManConnectShell(session: Windows.Win32.System.RemoteManagement.WSMAN_SESSION_HANDLE, flags: UInt32, resourceUri: Windows.Win32.Foundation.PWSTR, shellID: Windows.Win32.Foundation.PWSTR, options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SET_head), connectXml: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), shell: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManConnectShellCommand(shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, flags: UInt32, commandID: Windows.Win32.Foundation.PWSTR, options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SET_head), connectXml: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head), async_: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_ASYNC_head), command: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE)) -> Void: ...
@winfunctype('WsmSvc.dll')
def WSManPluginReportContext(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, context: c_void_p) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginReceiveResult(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, stream: Windows.Win32.Foundation.PWSTR, streamResult: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head), commandState: Windows.Win32.Foundation.PWSTR, exitCode: UInt32) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginOperationComplete(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, errorCode: UInt32, extendedInformation: Windows.Win32.Foundation.PWSTR) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginGetOperationParameters(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, data: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginGetConfiguration(pluginContext: c_void_p, flags: UInt32, data: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginReportCompletion(pluginContext: c_void_p, flags: UInt32) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginFreeRequestDetails(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head)) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginAuthzUserComplete(senderDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SENDER_DETAILS_head), flags: UInt32, userAuthorizationContext: c_void_p, impersonationToken: Windows.Win32.Foundation.HANDLE, userIsAdministrator: Windows.Win32.Foundation.BOOL, errorCode: UInt32, extendedErrorInformation: Windows.Win32.Foundation.PWSTR) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginAuthzOperationComplete(senderDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SENDER_DETAILS_head), flags: UInt32, userAuthorizationContext: c_void_p, errorCode: UInt32, extendedErrorInformation: Windows.Win32.Foundation.PWSTR) -> UInt32: ...
@winfunctype('WsmSvc.dll')
def WSManPluginAuthzQueryQuotaComplete(senderDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SENDER_DETAILS_head), flags: UInt32, quota: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_AUTHZ_QUOTA_head), errorCode: UInt32, extendedErrorInformation: Windows.Win32.Foundation.PWSTR) -> UInt32: ...
class IWSMan(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    Guid = Guid('190d8637-5cd3-496d-ad-24-69-63-6b-b5-a3-b5')
    @commethod(7)
    def CreateSession(self, connection: Windows.Win32.Foundation.BSTR, flags: Int32, connectionOptions: Windows.Win32.System.Com.IDispatch_head, session: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def CreateConnectionOptions(self, connectionOptions: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CommandLine(self, value: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Error(self, value: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManConnectionOptions(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    Guid = Guid('f704e861-9e52-464f-b7-86-da-5e-b2-32-0f-dd')
    @commethod(7)
    def get_UserName(self, name: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_UserName(self, name: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_Password(self, password: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManConnectionOptionsEx(ComPtr):
    extends: Windows.Win32.System.RemoteManagement.IWSManConnectionOptions
    Guid = Guid('ef43edf7-2a48-4d93-95-26-8b-d6-ab-6d-4a-6b')
    @commethod(10)
    def get_CertificateThumbprint(self, thumbprint: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def put_CertificateThumbprint(self, thumbprint: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManConnectionOptionsEx2(ComPtr):
    extends: Windows.Win32.System.RemoteManagement.IWSManConnectionOptionsEx
    Guid = Guid('f500c9ec-24ee-48ab-b3-8d-fc-9a-16-4c-65-8e')
    @commethod(12)
    def SetProxy(self, accessType: Int32, authenticationMechanism: Int32, userName: Windows.Win32.Foundation.BSTR, password: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def ProxyIEConfig(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def ProxyWinHttpConfig(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def ProxyAutoDetect(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def ProxyNoProxyServer(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def ProxyAuthenticationUseNegotiate(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def ProxyAuthenticationUseBasic(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def ProxyAuthenticationUseDigest(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManEnumerator(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    Guid = Guid('f3457ca9-abb9-4fa5-b8-50-90-e8-ca-30-0e-7f')
    @commethod(7)
    def ReadItem(self, resource: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_AtEndOfStream(self, eos: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Error(self, value: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManEx(ComPtr):
    extends: Windows.Win32.System.RemoteManagement.IWSMan
    Guid = Guid('2d53bdaa-798e-49e6-a1-aa-74-d0-12-56-f4-11')
    @commethod(11)
    def CreateResourceLocator(self, strResourceLocator: Windows.Win32.Foundation.BSTR, newResourceLocator: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def SessionFlagUTF8(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def SessionFlagCredUsernamePassword(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def SessionFlagSkipCACheck(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def SessionFlagSkipCNCheck(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def SessionFlagUseDigest(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def SessionFlagUseNegotiate(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def SessionFlagUseBasic(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def SessionFlagUseKerberos(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def SessionFlagNoEncryption(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def SessionFlagEnableSPNServerPort(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def SessionFlagUseNoAuthentication(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def EnumerationFlagNonXmlText(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def EnumerationFlagReturnEPR(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def EnumerationFlagReturnObjectAndEPR(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def GetErrorMessage(self, errorNumber: UInt32, errorMessage: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def EnumerationFlagHierarchyDeep(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def EnumerationFlagHierarchyShallow(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def EnumerationFlagHierarchyDeepBasePropsOnly(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def EnumerationFlagReturnObject(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManEx2(ComPtr):
    extends: Windows.Win32.System.RemoteManagement.IWSManEx
    Guid = Guid('1d1b5ae0-42d9-4021-82-61-39-87-61-95-12-e9')
    @commethod(31)
    def SessionFlagUseClientCertificate(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManEx3(ComPtr):
    extends: Windows.Win32.System.RemoteManagement.IWSManEx2
    Guid = Guid('6400e966-011d-4eac-84-74-04-9e-08-48-af-ad')
    @commethod(32)
    def SessionFlagUTF16(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def SessionFlagUseCredSsp(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def EnumerationFlagAssociationInstance(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def EnumerationFlagAssociatedInstance(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def SessionFlagSkipRevocationCheck(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def SessionFlagAllowNegotiateImplicitCredentials(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def SessionFlagUseSsl(self, flags: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManInternal(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    Guid = Guid('04ae2b1d-9954-4d99-94-a9-a9-61-e7-2c-3a-13')
    @commethod(7)
    def ConfigSDDL(self, session: Windows.Win32.System.Com.IDispatch_head, resourceUri: Windows.Win32.System.Variant.VARIANT, flags: Int32, resource: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManResourceLocator(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    Guid = Guid('a7a1ba28-de41-466a-ad-0a-c4-05-9e-ad-74-28')
    @commethod(7)
    def put_ResourceURI(self, uri: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_ResourceURI(self, uri: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def AddSelector(self, resourceSelName: Windows.Win32.Foundation.BSTR, selValue: Windows.Win32.System.Variant.VARIANT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def ClearSelectors(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_FragmentPath(self, text: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_FragmentPath(self, text: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_FragmentDialect(self, text: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_FragmentDialect(self, text: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def AddOption(self, OptionName: Windows.Win32.Foundation.BSTR, OptionValue: Windows.Win32.System.Variant.VARIANT, mustComply: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def put_MustUnderstandOptions(self, mustUnderstand: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_MustUnderstandOptions(self, mustUnderstand: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def ClearOptions(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_Error(self, value: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWSManResourceLocatorInternal(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    Guid = Guid('effaead7-7ec8-4716-b9-be-f2-e7-e9-fb-4a-db')
class IWSManSession(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    Guid = Guid('fc84fc58-1286-40c4-9d-a0-c8-ef-6e-c2-41-e0')
    @commethod(7)
    def Get(self, resourceUri: Windows.Win32.System.Variant.VARIANT, flags: Int32, resource: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def Put(self, resourceUri: Windows.Win32.System.Variant.VARIANT, resource: Windows.Win32.Foundation.BSTR, flags: Int32, resultResource: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def Create(self, resourceUri: Windows.Win32.System.Variant.VARIANT, resource: Windows.Win32.Foundation.BSTR, flags: Int32, newUri: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def Delete(self, resourceUri: Windows.Win32.System.Variant.VARIANT, flags: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def Invoke(self, actionUri: Windows.Win32.Foundation.BSTR, resourceUri: Windows.Win32.System.Variant.VARIANT, parameters: Windows.Win32.Foundation.BSTR, flags: Int32, result: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def Enumerate(self, resourceUri: Windows.Win32.System.Variant.VARIANT, filter: Windows.Win32.Foundation.BSTR, dialect: Windows.Win32.Foundation.BSTR, flags: Int32, resultSet: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def Identify(self, flags: Int32, result: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_Error(self, value: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_BatchItems(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def put_BatchItems(self, value: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_Timeout(self, value: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def put_Timeout(self, value: Int32) -> Windows.Win32.Foundation.HRESULT: ...
WSMAN_API_HANDLE = IntPtr
class WSMAN_AUTHENTICATION_CREDENTIALS(EasyCastStructure):
    authenticationMechanism: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(EasyCastUnion):
        userAccount: Windows.Win32.System.RemoteManagement.WSMAN_USERNAME_PASSWORD_CREDS
        certificateThumbprint: Windows.Win32.Foundation.PWSTR
class WSMAN_AUTHZ_QUOTA(EasyCastStructure):
    maxAllowedConcurrentShells: UInt32
    maxAllowedConcurrentOperations: UInt32
    timeslotSize: UInt32
    maxAllowedOperationsPerTimeslot: UInt32
class WSMAN_CERTIFICATE_DETAILS(EasyCastStructure):
    subject: Windows.Win32.Foundation.PWSTR
    issuerName: Windows.Win32.Foundation.PWSTR
    issuerThumbprint: Windows.Win32.Foundation.PWSTR
    subjectName: Windows.Win32.Foundation.PWSTR
class WSMAN_COMMAND_ARG_SET(EasyCastStructure):
    argsCount: UInt32
    args: POINTER(Windows.Win32.Foundation.PWSTR)
WSMAN_COMMAND_HANDLE = IntPtr
class WSMAN_CONNECT_DATA(EasyCastStructure):
    data: Windows.Win32.System.RemoteManagement.WSMAN_DATA
class WSMAN_CREATE_SHELL_DATA(EasyCastStructure):
    data: Windows.Win32.System.RemoteManagement.WSMAN_DATA
class WSMAN_DATA(EasyCastStructure):
    type: Windows.Win32.System.RemoteManagement.WSManDataType
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(EasyCastUnion):
        text: Windows.Win32.System.RemoteManagement.WSMAN_DATA_TEXT
        binaryData: Windows.Win32.System.RemoteManagement.WSMAN_DATA_BINARY
        number: UInt32
class WSMAN_DATA_BINARY(EasyCastStructure):
    dataLength: UInt32
    data: POINTER(Byte)
class WSMAN_DATA_TEXT(EasyCastStructure):
    bufferLength: UInt32
    buffer: Windows.Win32.Foundation.PWSTR
class WSMAN_ENVIRONMENT_VARIABLE(EasyCastStructure):
    name: Windows.Win32.Foundation.PWSTR
    value: Windows.Win32.Foundation.PWSTR
class WSMAN_ENVIRONMENT_VARIABLE_SET(EasyCastStructure):
    varsCount: UInt32
    vars: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_ENVIRONMENT_VARIABLE_head)
class WSMAN_ERROR(EasyCastStructure):
    code: UInt32
    errorDetail: Windows.Win32.Foundation.PWSTR
    language: Windows.Win32.Foundation.PWSTR
    machineName: Windows.Win32.Foundation.PWSTR
    pluginName: Windows.Win32.Foundation.PWSTR
class WSMAN_FILTER(EasyCastStructure):
    filter: Windows.Win32.Foundation.PWSTR
    dialect: Windows.Win32.Foundation.PWSTR
class WSMAN_FRAGMENT(EasyCastStructure):
    path: Windows.Win32.Foundation.PWSTR
    dialect: Windows.Win32.Foundation.PWSTR
class WSMAN_KEY(EasyCastStructure):
    key: Windows.Win32.Foundation.PWSTR
    value: Windows.Win32.Foundation.PWSTR
WSMAN_OPERATION_HANDLE = IntPtr
class WSMAN_OPERATION_INFO(EasyCastStructure):
    fragment: Windows.Win32.System.RemoteManagement.WSMAN_FRAGMENT
    filter: Windows.Win32.System.RemoteManagement.WSMAN_FILTER
    selectorSet: Windows.Win32.System.RemoteManagement.WSMAN_SELECTOR_SET
    optionSet: Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SET
    reserved: c_void_p
    version: UInt32
class WSMAN_OPERATION_INFOEX(EasyCastStructure):
    fragment: Windows.Win32.System.RemoteManagement.WSMAN_FRAGMENT
    filter: Windows.Win32.System.RemoteManagement.WSMAN_FILTER
    selectorSet: Windows.Win32.System.RemoteManagement.WSMAN_SELECTOR_SET
    optionSet: Windows.Win32.System.RemoteManagement.WSMAN_OPTION_SETEX
    version: UInt32
    uiLocale: Windows.Win32.Foundation.PWSTR
    dataLocale: Windows.Win32.Foundation.PWSTR
class WSMAN_OPTION(EasyCastStructure):
    name: Windows.Win32.Foundation.PWSTR
    value: Windows.Win32.Foundation.PWSTR
    mustComply: Windows.Win32.Foundation.BOOL
class WSMAN_OPTION_SET(EasyCastStructure):
    optionsCount: UInt32
    options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_head)
    optionsMustUnderstand: Windows.Win32.Foundation.BOOL
class WSMAN_OPTION_SETEX(EasyCastStructure):
    optionsCount: UInt32
    options: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPTION_head)
    optionsMustUnderstand: Windows.Win32.Foundation.BOOL
    optionTypes: POINTER(Windows.Win32.Foundation.PWSTR)
@winfunctype_pointer
def WSMAN_PLUGIN_AUTHORIZE_OPERATION(pluginContext: c_void_p, senderDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SENDER_DETAILS_head), flags: UInt32, operation: UInt32, action: Windows.Win32.Foundation.PWSTR, resourceUri: Windows.Win32.Foundation.PWSTR) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_AUTHORIZE_QUERY_QUOTA(pluginContext: c_void_p, senderDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SENDER_DETAILS_head), flags: UInt32) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_AUTHORIZE_RELEASE_CONTEXT(userAuthorizationContext: c_void_p) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_AUTHORIZE_USER(pluginContext: c_void_p, senderDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SENDER_DETAILS_head), flags: UInt32) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_COMMAND(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, shellContext: c_void_p, commandLine: Windows.Win32.Foundation.PWSTR, arguments: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_ARG_SET_head)) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_CONNECT(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, shellContext: c_void_p, commandContext: c_void_p, inboundConnectInformation: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head)) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_RECEIVE(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, shellContext: c_void_p, commandContext: c_void_p, streamSet: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_STREAM_ID_SET_head)) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_RELEASE_COMMAND_CONTEXT(shellContext: c_void_p, commandContext: c_void_p) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_RELEASE_SHELL_CONTEXT(shellContext: c_void_p) -> Void: ...
class WSMAN_PLUGIN_REQUEST(EasyCastStructure):
    senderDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SENDER_DETAILS_head)
    locale: Windows.Win32.Foundation.PWSTR
    resourceUri: Windows.Win32.Foundation.PWSTR
    operationInfo: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_OPERATION_INFO_head)
    shutdownNotification: Int32
    shutdownNotificationHandle: Windows.Win32.Foundation.HANDLE
    dataLocale: Windows.Win32.Foundation.PWSTR
@winfunctype_pointer
def WSMAN_PLUGIN_SEND(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, shellContext: c_void_p, commandContext: c_void_p, stream: Windows.Win32.Foundation.PWSTR, inboundData: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head)) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_SHELL(pluginContext: c_void_p, requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, startupInfo: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_SHELL_STARTUP_INFO_V11_head), inboundShellInformation: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_DATA_head)) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_SHUTDOWN(pluginContext: c_void_p, flags: UInt32, reason: UInt32) -> UInt32: ...
@winfunctype_pointer
def WSMAN_PLUGIN_SIGNAL(requestDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_PLUGIN_REQUEST_head), flags: UInt32, shellContext: c_void_p, commandContext: c_void_p, code: Windows.Win32.Foundation.PWSTR) -> Void: ...
@winfunctype_pointer
def WSMAN_PLUGIN_STARTUP(flags: UInt32, applicationIdentification: Windows.Win32.Foundation.PWSTR, extraInfo: Windows.Win32.Foundation.PWSTR, pluginContext: POINTER(c_void_p)) -> UInt32: ...
class WSMAN_PROXY_INFO(EasyCastStructure):
    accessType: UInt32
    authenticationCredentials: Windows.Win32.System.RemoteManagement.WSMAN_AUTHENTICATION_CREDENTIALS
class WSMAN_RECEIVE_DATA_RESULT(EasyCastStructure):
    streamId: Windows.Win32.Foundation.PWSTR
    streamData: Windows.Win32.System.RemoteManagement.WSMAN_DATA
    commandState: Windows.Win32.Foundation.PWSTR
    exitCode: UInt32
class WSMAN_RESPONSE_DATA(EasyCastUnion):
    receiveData: Windows.Win32.System.RemoteManagement.WSMAN_RECEIVE_DATA_RESULT
    connectData: Windows.Win32.System.RemoteManagement.WSMAN_CONNECT_DATA
    createData: Windows.Win32.System.RemoteManagement.WSMAN_CREATE_SHELL_DATA
class WSMAN_SELECTOR_SET(EasyCastStructure):
    numberKeys: UInt32
    keys: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_KEY_head)
class WSMAN_SENDER_DETAILS(EasyCastStructure):
    senderName: Windows.Win32.Foundation.PWSTR
    authenticationMechanism: Windows.Win32.Foundation.PWSTR
    certificateDetails: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_CERTIFICATE_DETAILS_head)
    clientToken: Windows.Win32.Foundation.HANDLE
    httpURL: Windows.Win32.Foundation.PWSTR
WSMAN_SESSION_HANDLE = IntPtr
class WSMAN_SHELL_ASYNC(EasyCastStructure):
    operationContext: c_void_p
    completionFunction: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_COMPLETION_FUNCTION
@winfunctype_pointer
def WSMAN_SHELL_COMPLETION_FUNCTION(operationContext: c_void_p, flags: UInt32, error: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_ERROR_head), shell: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_HANDLE, command: Windows.Win32.System.RemoteManagement.WSMAN_COMMAND_HANDLE, operationHandle: Windows.Win32.System.RemoteManagement.WSMAN_OPERATION_HANDLE, data: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_RESPONSE_DATA_head)) -> Void: ...
class WSMAN_SHELL_DISCONNECT_INFO(EasyCastStructure):
    idleTimeoutMs: UInt32
WSMAN_SHELL_HANDLE = IntPtr
class WSMAN_SHELL_STARTUP_INFO_V10(EasyCastStructure):
    inputStreamSet: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_STREAM_ID_SET_head)
    outputStreamSet: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_STREAM_ID_SET_head)
    idleTimeoutMs: UInt32
    workingDirectory: Windows.Win32.Foundation.PWSTR
    variableSet: POINTER(Windows.Win32.System.RemoteManagement.WSMAN_ENVIRONMENT_VARIABLE_SET_head)
class WSMAN_SHELL_STARTUP_INFO_V11(EasyCastStructure):
    Base: Windows.Win32.System.RemoteManagement.WSMAN_SHELL_STARTUP_INFO_V10
    name: Windows.Win32.Foundation.PWSTR
class WSMAN_STREAM_ID_SET(EasyCastStructure):
    streamIDsCount: UInt32
    streamIDs: POINTER(Windows.Win32.Foundation.PWSTR)
class WSMAN_USERNAME_PASSWORD_CREDS(EasyCastStructure):
    username: Windows.Win32.Foundation.PWSTR
    password: Windows.Win32.Foundation.PWSTR
WSMan = Guid('bced617b-ec03-420b-85-08-97-7d-c7-a6-86-bd')
WSManAuthenticationFlags = Int32
WSMAN_FLAG_DEFAULT_AUTHENTICATION: WSManAuthenticationFlags = 0
WSMAN_FLAG_NO_AUTHENTICATION: WSManAuthenticationFlags = 1
WSMAN_FLAG_AUTH_DIGEST: WSManAuthenticationFlags = 2
WSMAN_FLAG_AUTH_NEGOTIATE: WSManAuthenticationFlags = 4
WSMAN_FLAG_AUTH_BASIC: WSManAuthenticationFlags = 8
WSMAN_FLAG_AUTH_KERBEROS: WSManAuthenticationFlags = 16
WSMAN_FLAG_AUTH_CREDSSP: WSManAuthenticationFlags = 128
WSMAN_FLAG_AUTH_CLIENT_CERTIFICATE: WSManAuthenticationFlags = 32
WSManCallbackFlags = Int32
WSMAN_FLAG_CALLBACK_END_OF_OPERATION: WSManCallbackFlags = 1
WSMAN_FLAG_CALLBACK_END_OF_STREAM: WSManCallbackFlags = 8
WSMAN_FLAG_CALLBACK_SHELL_SUPPORTS_DISCONNECT: WSManCallbackFlags = 32
WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTED: WSManCallbackFlags = 64
WSMAN_FLAG_CALLBACK_NETWORK_FAILURE_DETECTED: WSManCallbackFlags = 256
WSMAN_FLAG_CALLBACK_RETRYING_AFTER_NETWORK_FAILURE: WSManCallbackFlags = 512
WSMAN_FLAG_CALLBACK_RECONNECTED_AFTER_NETWORK_FAILURE: WSManCallbackFlags = 1024
WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTING: WSManCallbackFlags = 2048
WSMAN_FLAG_CALLBACK_RETRY_ABORTED_DUE_TO_INTERNAL_ERROR: WSManCallbackFlags = 4096
WSMAN_FLAG_CALLBACK_RECEIVE_DELAY_STREAM_REQUEST_PROCESSED: WSManCallbackFlags = 8192
WSManDataType = Int32
WSMAN_DATA_NONE: WSManDataType = 0
WSMAN_DATA_TYPE_TEXT: WSManDataType = 1
WSMAN_DATA_TYPE_BINARY: WSManDataType = 2
WSMAN_DATA_TYPE_DWORD: WSManDataType = 4
WSManEnumFlags = Int32
WSManEnumFlags_WSManFlagNonXmlText: WSManEnumFlags = 1
WSManEnumFlags_WSManFlagReturnObject: WSManEnumFlags = 0
WSManEnumFlags_WSManFlagReturnEPR: WSManEnumFlags = 2
WSManEnumFlags_WSManFlagReturnObjectAndEPR: WSManEnumFlags = 4
WSManEnumFlags_WSManFlagHierarchyDeep: WSManEnumFlags = 0
WSManEnumFlags_WSManFlagHierarchyShallow: WSManEnumFlags = 32
WSManEnumFlags_WSManFlagHierarchyDeepBasePropsOnly: WSManEnumFlags = 64
WSManEnumFlags_WSManFlagAssociatedInstance: WSManEnumFlags = 0
WSManEnumFlags_WSManFlagAssociationInstance: WSManEnumFlags = 128
WSManInternal = Guid('7de087a5-5dcb-4df7-bb-12-09-24-ad-8f-bd-9a')
WSManProxyAccessType = Int32
WSMAN_OPTION_PROXY_IE_PROXY_CONFIG: WSManProxyAccessType = 1
WSMAN_OPTION_PROXY_WINHTTP_PROXY_CONFIG: WSManProxyAccessType = 2
WSMAN_OPTION_PROXY_AUTO_DETECT: WSManProxyAccessType = 4
WSMAN_OPTION_PROXY_NO_PROXY_SERVER: WSManProxyAccessType = 8
WSManProxyAccessTypeFlags = Int32
WSManProxyAccessTypeFlags_WSManProxyIEConfig: WSManProxyAccessTypeFlags = 1
WSManProxyAccessTypeFlags_WSManProxyWinHttpConfig: WSManProxyAccessTypeFlags = 2
WSManProxyAccessTypeFlags_WSManProxyAutoDetect: WSManProxyAccessTypeFlags = 4
WSManProxyAccessTypeFlags_WSManProxyNoProxyServer: WSManProxyAccessTypeFlags = 8
WSManProxyAuthenticationFlags = Int32
WSManProxyAuthenticationFlags_WSManFlagProxyAuthenticationUseNegotiate: WSManProxyAuthenticationFlags = 1
WSManProxyAuthenticationFlags_WSManFlagProxyAuthenticationUseBasic: WSManProxyAuthenticationFlags = 2
WSManProxyAuthenticationFlags_WSManFlagProxyAuthenticationUseDigest: WSManProxyAuthenticationFlags = 4
WSManSessionFlags = Int32
WSManSessionFlags_WSManFlagUTF8: WSManSessionFlags = 1
WSManSessionFlags_WSManFlagCredUsernamePassword: WSManSessionFlags = 4096
WSManSessionFlags_WSManFlagSkipCACheck: WSManSessionFlags = 8192
WSManSessionFlags_WSManFlagSkipCNCheck: WSManSessionFlags = 16384
WSManSessionFlags_WSManFlagUseNoAuthentication: WSManSessionFlags = 32768
WSManSessionFlags_WSManFlagUseDigest: WSManSessionFlags = 65536
WSManSessionFlags_WSManFlagUseNegotiate: WSManSessionFlags = 131072
WSManSessionFlags_WSManFlagUseBasic: WSManSessionFlags = 262144
WSManSessionFlags_WSManFlagUseKerberos: WSManSessionFlags = 524288
WSManSessionFlags_WSManFlagNoEncryption: WSManSessionFlags = 1048576
WSManSessionFlags_WSManFlagUseClientCertificate: WSManSessionFlags = 2097152
WSManSessionFlags_WSManFlagEnableSPNServerPort: WSManSessionFlags = 4194304
WSManSessionFlags_WSManFlagUTF16: WSManSessionFlags = 8388608
WSManSessionFlags_WSManFlagUseCredSsp: WSManSessionFlags = 16777216
WSManSessionFlags_WSManFlagSkipRevocationCheck: WSManSessionFlags = 33554432
WSManSessionFlags_WSManFlagAllowNegotiateImplicitCredentials: WSManSessionFlags = 67108864
WSManSessionFlags_WSManFlagUseSsl: WSManSessionFlags = 134217728
WSManSessionOption = Int32
WSMAN_OPTION_DEFAULT_OPERATION_TIMEOUTMS: WSManSessionOption = 1
WSMAN_OPTION_MAX_RETRY_TIME: WSManSessionOption = 11
WSMAN_OPTION_TIMEOUTMS_CREATE_SHELL: WSManSessionOption = 12
WSMAN_OPTION_TIMEOUTMS_RUN_SHELL_COMMAND: WSManSessionOption = 13
WSMAN_OPTION_TIMEOUTMS_RECEIVE_SHELL_OUTPUT: WSManSessionOption = 14
WSMAN_OPTION_TIMEOUTMS_SEND_SHELL_INPUT: WSManSessionOption = 15
WSMAN_OPTION_TIMEOUTMS_SIGNAL_SHELL: WSManSessionOption = 16
WSMAN_OPTION_TIMEOUTMS_CLOSE_SHELL: WSManSessionOption = 17
WSMAN_OPTION_SKIP_CA_CHECK: WSManSessionOption = 18
WSMAN_OPTION_SKIP_CN_CHECK: WSManSessionOption = 19
WSMAN_OPTION_UNENCRYPTED_MESSAGES: WSManSessionOption = 20
WSMAN_OPTION_UTF16: WSManSessionOption = 21
WSMAN_OPTION_ENABLE_SPN_SERVER_PORT: WSManSessionOption = 22
WSMAN_OPTION_MACHINE_ID: WSManSessionOption = 23
WSMAN_OPTION_LOCALE: WSManSessionOption = 25
WSMAN_OPTION_UI_LANGUAGE: WSManSessionOption = 26
WSMAN_OPTION_MAX_ENVELOPE_SIZE_KB: WSManSessionOption = 28
WSMAN_OPTION_SHELL_MAX_DATA_SIZE_PER_MESSAGE_KB: WSManSessionOption = 29
WSMAN_OPTION_REDIRECT_LOCATION: WSManSessionOption = 30
WSMAN_OPTION_SKIP_REVOCATION_CHECK: WSManSessionOption = 31
WSMAN_OPTION_ALLOW_NEGOTIATE_IMPLICIT_CREDENTIALS: WSManSessionOption = 32
WSMAN_OPTION_USE_SSL: WSManSessionOption = 33
WSMAN_OPTION_USE_INTEARACTIVE_TOKEN: WSManSessionOption = 34
WSManShellFlag = Int32
WSMAN_FLAG_NO_COMPRESSION: WSManShellFlag = 1
WSMAN_FLAG_DELETE_SERVER_SESSION: WSManShellFlag = 2
WSMAN_FLAG_SERVER_BUFFERING_MODE_DROP: WSManShellFlag = 4
WSMAN_FLAG_SERVER_BUFFERING_MODE_BLOCK: WSManShellFlag = 8
WSMAN_FLAG_RECEIVE_DELAY_OUTPUT_STREAM: WSManShellFlag = 16
make_head(_module, 'IWSMan')
make_head(_module, 'IWSManConnectionOptions')
make_head(_module, 'IWSManConnectionOptionsEx')
make_head(_module, 'IWSManConnectionOptionsEx2')
make_head(_module, 'IWSManEnumerator')
make_head(_module, 'IWSManEx')
make_head(_module, 'IWSManEx2')
make_head(_module, 'IWSManEx3')
make_head(_module, 'IWSManInternal')
make_head(_module, 'IWSManResourceLocator')
make_head(_module, 'IWSManResourceLocatorInternal')
make_head(_module, 'IWSManSession')
make_head(_module, 'WSMAN_AUTHENTICATION_CREDENTIALS')
make_head(_module, 'WSMAN_AUTHZ_QUOTA')
make_head(_module, 'WSMAN_CERTIFICATE_DETAILS')
make_head(_module, 'WSMAN_COMMAND_ARG_SET')
make_head(_module, 'WSMAN_CONNECT_DATA')
make_head(_module, 'WSMAN_CREATE_SHELL_DATA')
make_head(_module, 'WSMAN_DATA')
make_head(_module, 'WSMAN_DATA_BINARY')
make_head(_module, 'WSMAN_DATA_TEXT')
make_head(_module, 'WSMAN_ENVIRONMENT_VARIABLE')
make_head(_module, 'WSMAN_ENVIRONMENT_VARIABLE_SET')
make_head(_module, 'WSMAN_ERROR')
make_head(_module, 'WSMAN_FILTER')
make_head(_module, 'WSMAN_FRAGMENT')
make_head(_module, 'WSMAN_KEY')
make_head(_module, 'WSMAN_OPERATION_INFO')
make_head(_module, 'WSMAN_OPERATION_INFOEX')
make_head(_module, 'WSMAN_OPTION')
make_head(_module, 'WSMAN_OPTION_SET')
make_head(_module, 'WSMAN_OPTION_SETEX')
make_head(_module, 'WSMAN_PLUGIN_AUTHORIZE_OPERATION')
make_head(_module, 'WSMAN_PLUGIN_AUTHORIZE_QUERY_QUOTA')
make_head(_module, 'WSMAN_PLUGIN_AUTHORIZE_RELEASE_CONTEXT')
make_head(_module, 'WSMAN_PLUGIN_AUTHORIZE_USER')
make_head(_module, 'WSMAN_PLUGIN_COMMAND')
make_head(_module, 'WSMAN_PLUGIN_CONNECT')
make_head(_module, 'WSMAN_PLUGIN_RECEIVE')
make_head(_module, 'WSMAN_PLUGIN_RELEASE_COMMAND_CONTEXT')
make_head(_module, 'WSMAN_PLUGIN_RELEASE_SHELL_CONTEXT')
make_head(_module, 'WSMAN_PLUGIN_REQUEST')
make_head(_module, 'WSMAN_PLUGIN_SEND')
make_head(_module, 'WSMAN_PLUGIN_SHELL')
make_head(_module, 'WSMAN_PLUGIN_SHUTDOWN')
make_head(_module, 'WSMAN_PLUGIN_SIGNAL')
make_head(_module, 'WSMAN_PLUGIN_STARTUP')
make_head(_module, 'WSMAN_PROXY_INFO')
make_head(_module, 'WSMAN_RECEIVE_DATA_RESULT')
make_head(_module, 'WSMAN_RESPONSE_DATA')
make_head(_module, 'WSMAN_SELECTOR_SET')
make_head(_module, 'WSMAN_SENDER_DETAILS')
make_head(_module, 'WSMAN_SHELL_ASYNC')
make_head(_module, 'WSMAN_SHELL_COMPLETION_FUNCTION')
make_head(_module, 'WSMAN_SHELL_DISCONNECT_INFO')
make_head(_module, 'WSMAN_SHELL_STARTUP_INFO_V10')
make_head(_module, 'WSMAN_SHELL_STARTUP_INFO_V11')
make_head(_module, 'WSMAN_STREAM_ID_SET')
make_head(_module, 'WSMAN_USERNAME_PASSWORD_CREDS')
