from __future__ import annotations
from ctypes import c_void_p, c_char_p, c_wchar_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from Windows import ARCH, MissingType, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
import Windows.Win32.Devices.Tapi
import Windows.Win32.Foundation
import Windows.Win32.Media.DirectShow
import Windows.Win32.Media.MediaFoundation
import Windows.Win32.System.AddressBook
import Windows.Win32.System.Com
import Windows.Win32.System.Variant
import Windows.Win32.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
ACDGROUP_EVENT = Int32
ACDGE_NEW_GROUP: ACDGROUP_EVENT = 0
ACDGE_GROUP_REMOVED: ACDGROUP_EVENT = 1
ACDQUEUE_EVENT = Int32
ACDQE_NEW_QUEUE: ACDQUEUE_EVENT = 0
ACDQE_QUEUE_REMOVED: ACDQUEUE_EVENT = 1
class ADDRALIAS(EasyCastStructure):
    rgchName: Windows.Win32.Foundation.CHAR * 41
    rgchEName: Windows.Win32.Foundation.CHAR * 11
    rgchSrvr: Windows.Win32.Foundation.CHAR * 12
    dibDetail: UInt32
    type: UInt16
ADDRESS_CAPABILITY = Int32
AC_ADDRESSTYPES: ADDRESS_CAPABILITY = 0
AC_BEARERMODES: ADDRESS_CAPABILITY = 1
AC_MAXACTIVECALLS: ADDRESS_CAPABILITY = 2
AC_MAXONHOLDCALLS: ADDRESS_CAPABILITY = 3
AC_MAXONHOLDPENDINGCALLS: ADDRESS_CAPABILITY = 4
AC_MAXNUMCONFERENCE: ADDRESS_CAPABILITY = 5
AC_MAXNUMTRANSCONF: ADDRESS_CAPABILITY = 6
AC_MONITORDIGITSUPPORT: ADDRESS_CAPABILITY = 7
AC_GENERATEDIGITSUPPORT: ADDRESS_CAPABILITY = 8
AC_GENERATETONEMODES: ADDRESS_CAPABILITY = 9
AC_GENERATETONEMAXNUMFREQ: ADDRESS_CAPABILITY = 10
AC_MONITORTONEMAXNUMFREQ: ADDRESS_CAPABILITY = 11
AC_MONITORTONEMAXNUMENTRIES: ADDRESS_CAPABILITY = 12
AC_DEVCAPFLAGS: ADDRESS_CAPABILITY = 13
AC_ANSWERMODES: ADDRESS_CAPABILITY = 14
AC_LINEFEATURES: ADDRESS_CAPABILITY = 15
AC_SETTABLEDEVSTATUS: ADDRESS_CAPABILITY = 16
AC_PARKSUPPORT: ADDRESS_CAPABILITY = 17
AC_CALLERIDSUPPORT: ADDRESS_CAPABILITY = 18
AC_CALLEDIDSUPPORT: ADDRESS_CAPABILITY = 19
AC_CONNECTEDIDSUPPORT: ADDRESS_CAPABILITY = 20
AC_REDIRECTIONIDSUPPORT: ADDRESS_CAPABILITY = 21
AC_REDIRECTINGIDSUPPORT: ADDRESS_CAPABILITY = 22
AC_ADDRESSCAPFLAGS: ADDRESS_CAPABILITY = 23
AC_CALLFEATURES1: ADDRESS_CAPABILITY = 24
AC_CALLFEATURES2: ADDRESS_CAPABILITY = 25
AC_REMOVEFROMCONFCAPS: ADDRESS_CAPABILITY = 26
AC_REMOVEFROMCONFSTATE: ADDRESS_CAPABILITY = 27
AC_TRANSFERMODES: ADDRESS_CAPABILITY = 28
AC_ADDRESSFEATURES: ADDRESS_CAPABILITY = 29
AC_PREDICTIVEAUTOTRANSFERSTATES: ADDRESS_CAPABILITY = 30
AC_MAXCALLDATASIZE: ADDRESS_CAPABILITY = 31
AC_LINEID: ADDRESS_CAPABILITY = 32
AC_ADDRESSID: ADDRESS_CAPABILITY = 33
AC_FORWARDMODES: ADDRESS_CAPABILITY = 34
AC_MAXFORWARDENTRIES: ADDRESS_CAPABILITY = 35
AC_MAXSPECIFICENTRIES: ADDRESS_CAPABILITY = 36
AC_MINFWDNUMRINGS: ADDRESS_CAPABILITY = 37
AC_MAXFWDNUMRINGS: ADDRESS_CAPABILITY = 38
AC_MAXCALLCOMPLETIONS: ADDRESS_CAPABILITY = 39
AC_CALLCOMPLETIONCONDITIONS: ADDRESS_CAPABILITY = 40
AC_CALLCOMPLETIONMODES: ADDRESS_CAPABILITY = 41
AC_PERMANENTDEVICEID: ADDRESS_CAPABILITY = 42
AC_GATHERDIGITSMINTIMEOUT: ADDRESS_CAPABILITY = 43
AC_GATHERDIGITSMAXTIMEOUT: ADDRESS_CAPABILITY = 44
AC_GENERATEDIGITMINDURATION: ADDRESS_CAPABILITY = 45
AC_GENERATEDIGITMAXDURATION: ADDRESS_CAPABILITY = 46
AC_GENERATEDIGITDEFAULTDURATION: ADDRESS_CAPABILITY = 47
ADDRESS_CAPABILITY_STRING = Int32
ACS_PROTOCOL: ADDRESS_CAPABILITY_STRING = 0
ACS_ADDRESSDEVICESPECIFIC: ADDRESS_CAPABILITY_STRING = 1
ACS_LINEDEVICESPECIFIC: ADDRESS_CAPABILITY_STRING = 2
ACS_PROVIDERSPECIFIC: ADDRESS_CAPABILITY_STRING = 3
ACS_SWITCHSPECIFIC: ADDRESS_CAPABILITY_STRING = 4
ACS_PERMANENTDEVICEGUID: ADDRESS_CAPABILITY_STRING = 5
ADDRESS_EVENT = Int32
AE_STATE: ADDRESS_EVENT = 0
AE_CAPSCHANGE: ADDRESS_EVENT = 1
AE_RINGING: ADDRESS_EVENT = 2
AE_CONFIGCHANGE: ADDRESS_EVENT = 3
AE_FORWARD: ADDRESS_EVENT = 4
AE_NEWTERMINAL: ADDRESS_EVENT = 5
AE_REMOVETERMINAL: ADDRESS_EVENT = 6
AE_MSGWAITON: ADDRESS_EVENT = 7
AE_MSGWAITOFF: ADDRESS_EVENT = 8
AE_LASTITEM: ADDRESS_EVENT = 8
ADDRESS_STATE = Int32
AS_INSERVICE: ADDRESS_STATE = 0
AS_OUTOFSERVICE: ADDRESS_STATE = 1
AGENTHANDLER_EVENT = Int32
AHE_NEW_AGENTHANDLER: AGENTHANDLER_EVENT = 0
AHE_AGENTHANDLER_REMOVED: AGENTHANDLER_EVENT = 1
AGENT_EVENT = Int32
AE_NOT_READY: AGENT_EVENT = 0
AE_READY: AGENT_EVENT = 1
AE_BUSY_ACD: AGENT_EVENT = 2
AE_BUSY_INCOMING: AGENT_EVENT = 3
AE_BUSY_OUTGOING: AGENT_EVENT = 4
AE_UNKNOWN: AGENT_EVENT = 5
AGENT_SESSION_EVENT = Int32
ASE_NEW_SESSION: AGENT_SESSION_EVENT = 0
ASE_NOT_READY: AGENT_SESSION_EVENT = 1
ASE_READY: AGENT_SESSION_EVENT = 2
ASE_BUSY: AGENT_SESSION_EVENT = 3
ASE_WRAPUP: AGENT_SESSION_EVENT = 4
ASE_END: AGENT_SESSION_EVENT = 5
AGENT_SESSION_STATE = Int32
ASST_NOT_READY: AGENT_SESSION_STATE = 0
ASST_READY: AGENT_SESSION_STATE = 1
ASST_BUSY_ON_CALL: AGENT_SESSION_STATE = 2
ASST_BUSY_WRAPUP: AGENT_SESSION_STATE = 3
ASST_SESSION_ENDED: AGENT_SESSION_STATE = 4
AGENT_STATE = Int32
AS_NOT_READY: AGENT_STATE = 0
AS_READY: AGENT_STATE = 1
AS_BUSY_ACD: AGENT_STATE = 2
AS_BUSY_INCOMING: AGENT_STATE = 3
AS_BUSY_OUTGOING: AGENT_STATE = 4
AS_UNKNOWN: AGENT_STATE = 5
@winfunctype_pointer
def ASYNC_COMPLETION(dwRequestID: UInt32, lResult: Int32) -> Void: ...
TAPI_CURRENT_VERSION: UInt32 = 131074
LINE_ADDRESSSTATE: Int32 = 0
LINE_CALLINFO: Int32 = 1
LINE_CALLSTATE: Int32 = 2
LINE_CLOSE: Int32 = 3
LINE_DEVSPECIFIC: Int32 = 4
LINE_DEVSPECIFICFEATURE: Int32 = 5
LINE_GATHERDIGITS: Int32 = 6
LINE_GENERATE: Int32 = 7
LINE_LINEDEVSTATE: Int32 = 8
LINE_MONITORDIGITS: Int32 = 9
LINE_MONITORMEDIA: Int32 = 10
LINE_MONITORTONE: Int32 = 11
LINE_REPLY: Int32 = 12
LINE_REQUEST: Int32 = 13
PHONE_BUTTON: Int32 = 14
PHONE_CLOSE: Int32 = 15
PHONE_DEVSPECIFIC: Int32 = 16
PHONE_REPLY: Int32 = 17
PHONE_STATE: Int32 = 18
LINE_CREATE: Int32 = 19
PHONE_CREATE: Int32 = 20
LINE_AGENTSPECIFIC: Int32 = 21
LINE_AGENTSTATUS: Int32 = 22
LINE_APPNEWCALL: Int32 = 23
LINE_PROXYREQUEST: Int32 = 24
LINE_REMOVE: Int32 = 25
PHONE_REMOVE: Int32 = 26
LINE_AGENTSESSIONSTATUS: Int32 = 27
LINE_QUEUESTATUS: Int32 = 28
LINE_AGENTSTATUSEX: Int32 = 29
LINE_GROUPSTATUS: Int32 = 30
LINE_PROXYSTATUS: Int32 = 31
LINE_APPNEWCALLHUB: Int32 = 32
LINE_CALLHUBCLOSE: Int32 = 33
LINE_DEVSPECIFICEX: Int32 = 34
INITIALIZE_NEGOTIATION: UInt32 = 4294967295
LINEADDRCAPFLAGS_FWDNUMRINGS: UInt32 = 1
LINEADDRCAPFLAGS_PICKUPGROUPID: UInt32 = 2
LINEADDRCAPFLAGS_SECURE: UInt32 = 4
LINEADDRCAPFLAGS_BLOCKIDDEFAULT: UInt32 = 8
LINEADDRCAPFLAGS_BLOCKIDOVERRIDE: UInt32 = 16
LINEADDRCAPFLAGS_DIALED: UInt32 = 32
LINEADDRCAPFLAGS_ORIGOFFHOOK: UInt32 = 64
LINEADDRCAPFLAGS_DESTOFFHOOK: UInt32 = 128
LINEADDRCAPFLAGS_FWDCONSULT: UInt32 = 256
LINEADDRCAPFLAGS_SETUPCONFNULL: UInt32 = 512
LINEADDRCAPFLAGS_AUTORECONNECT: UInt32 = 1024
LINEADDRCAPFLAGS_COMPLETIONID: UInt32 = 2048
LINEADDRCAPFLAGS_TRANSFERHELD: UInt32 = 4096
LINEADDRCAPFLAGS_TRANSFERMAKE: UInt32 = 8192
LINEADDRCAPFLAGS_CONFERENCEHELD: UInt32 = 16384
LINEADDRCAPFLAGS_CONFERENCEMAKE: UInt32 = 32768
LINEADDRCAPFLAGS_PARTIALDIAL: UInt32 = 65536
LINEADDRCAPFLAGS_FWDSTATUSVALID: UInt32 = 131072
LINEADDRCAPFLAGS_FWDINTEXTADDR: UInt32 = 262144
LINEADDRCAPFLAGS_FWDBUSYNAADDR: UInt32 = 524288
LINEADDRCAPFLAGS_ACCEPTTOALERT: UInt32 = 1048576
LINEADDRCAPFLAGS_CONFDROP: UInt32 = 2097152
LINEADDRCAPFLAGS_PICKUPCALLWAIT: UInt32 = 4194304
LINEADDRCAPFLAGS_PREDICTIVEDIALER: UInt32 = 8388608
LINEADDRCAPFLAGS_QUEUE: UInt32 = 16777216
LINEADDRCAPFLAGS_ROUTEPOINT: UInt32 = 33554432
LINEADDRCAPFLAGS_HOLDMAKESNEW: UInt32 = 67108864
LINEADDRCAPFLAGS_NOINTERNALCALLS: UInt32 = 134217728
LINEADDRCAPFLAGS_NOEXTERNALCALLS: UInt32 = 268435456
LINEADDRCAPFLAGS_SETCALLINGID: UInt32 = 536870912
LINEADDRCAPFLAGS_ACDGROUP: UInt32 = 1073741824
LINEADDRCAPFLAGS_NOPSTNADDRESSTRANSLATION: UInt32 = 2147483648
LINEADDRESSMODE_ADDRESSID: UInt32 = 1
LINEADDRESSMODE_DIALABLEADDR: UInt32 = 2
LINEADDRESSSHARING_PRIVATE: UInt32 = 1
LINEADDRESSSHARING_BRIDGEDEXCL: UInt32 = 2
LINEADDRESSSHARING_BRIDGEDNEW: UInt32 = 4
LINEADDRESSSHARING_BRIDGEDSHARED: UInt32 = 8
LINEADDRESSSHARING_MONITORED: UInt32 = 16
LINEADDRESSSTATE_OTHER: UInt32 = 1
LINEADDRESSSTATE_DEVSPECIFIC: UInt32 = 2
LINEADDRESSSTATE_INUSEZERO: UInt32 = 4
LINEADDRESSSTATE_INUSEONE: UInt32 = 8
LINEADDRESSSTATE_INUSEMANY: UInt32 = 16
LINEADDRESSSTATE_NUMCALLS: UInt32 = 32
LINEADDRESSSTATE_FORWARD: UInt32 = 64
LINEADDRESSSTATE_TERMINALS: UInt32 = 128
LINEADDRESSSTATE_CAPSCHANGE: UInt32 = 256
LINEADDRESSTYPE_PHONENUMBER: UInt32 = 1
LINEADDRESSTYPE_SDP: UInt32 = 2
LINEADDRESSTYPE_EMAILNAME: UInt32 = 4
LINEADDRESSTYPE_DOMAINNAME: UInt32 = 8
LINEADDRESSTYPE_IPADDRESS: UInt32 = 16
LINEADDRFEATURE_FORWARD: UInt32 = 1
LINEADDRFEATURE_MAKECALL: UInt32 = 2
LINEADDRFEATURE_PICKUP: UInt32 = 4
LINEADDRFEATURE_SETMEDIACONTROL: UInt32 = 8
LINEADDRFEATURE_SETTERMINAL: UInt32 = 16
LINEADDRFEATURE_SETUPCONF: UInt32 = 32
LINEADDRFEATURE_UNCOMPLETECALL: UInt32 = 64
LINEADDRFEATURE_UNPARK: UInt32 = 128
LINEADDRFEATURE_PICKUPHELD: UInt32 = 256
LINEADDRFEATURE_PICKUPGROUP: UInt32 = 512
LINEADDRFEATURE_PICKUPDIRECT: UInt32 = 1024
LINEADDRFEATURE_PICKUPWAITING: UInt32 = 2048
LINEADDRFEATURE_FORWARDFWD: UInt32 = 4096
LINEADDRFEATURE_FORWARDDND: UInt32 = 8192
LINEAGENTFEATURE_SETAGENTGROUP: UInt32 = 1
LINEAGENTFEATURE_SETAGENTSTATE: UInt32 = 2
LINEAGENTFEATURE_SETAGENTACTIVITY: UInt32 = 4
LINEAGENTFEATURE_AGENTSPECIFIC: UInt32 = 8
LINEAGENTFEATURE_GETAGENTACTIVITYLIST: UInt32 = 16
LINEAGENTFEATURE_GETAGENTGROUP: UInt32 = 32
LINEAGENTSTATE_LOGGEDOFF: UInt32 = 1
LINEAGENTSTATE_NOTREADY: UInt32 = 2
LINEAGENTSTATE_READY: UInt32 = 4
LINEAGENTSTATE_BUSYACD: UInt32 = 8
LINEAGENTSTATE_BUSYINCOMING: UInt32 = 16
LINEAGENTSTATE_BUSYOUTBOUND: UInt32 = 32
LINEAGENTSTATE_BUSYOTHER: UInt32 = 64
LINEAGENTSTATE_WORKINGAFTERCALL: UInt32 = 128
LINEAGENTSTATE_UNKNOWN: UInt32 = 256
LINEAGENTSTATE_UNAVAIL: UInt32 = 512
LINEAGENTSTATUS_GROUP: UInt32 = 1
LINEAGENTSTATUS_STATE: UInt32 = 2
LINEAGENTSTATUS_NEXTSTATE: UInt32 = 4
LINEAGENTSTATUS_ACTIVITY: UInt32 = 8
LINEAGENTSTATUS_ACTIVITYLIST: UInt32 = 16
LINEAGENTSTATUS_GROUPLIST: UInt32 = 32
LINEAGENTSTATUS_CAPSCHANGE: UInt32 = 64
LINEAGENTSTATUS_VALIDSTATES: UInt32 = 128
LINEAGENTSTATUS_VALIDNEXTSTATES: UInt32 = 256
LINEAGENTSTATEEX_NOTREADY: UInt32 = 1
LINEAGENTSTATEEX_READY: UInt32 = 2
LINEAGENTSTATEEX_BUSYACD: UInt32 = 4
LINEAGENTSTATEEX_BUSYINCOMING: UInt32 = 8
LINEAGENTSTATEEX_BUSYOUTGOING: UInt32 = 16
LINEAGENTSTATEEX_UNKNOWN: UInt32 = 32
LINEAGENTSTATEEX_RELEASED: UInt32 = 64
LINEAGENTSTATUSEX_NEWAGENT: UInt32 = 1
LINEAGENTSTATUSEX_STATE: UInt32 = 2
LINEAGENTSTATUSEX_UPDATEINFO: UInt32 = 4
LINEAGENTSESSIONSTATE_NOTREADY: UInt32 = 1
LINEAGENTSESSIONSTATE_READY: UInt32 = 2
LINEAGENTSESSIONSTATE_BUSYONCALL: UInt32 = 4
LINEAGENTSESSIONSTATE_BUSYWRAPUP: UInt32 = 8
LINEAGENTSESSIONSTATE_ENDED: UInt32 = 16
LINEAGENTSESSIONSTATE_RELEASED: UInt32 = 32
LINEAGENTSESSIONSTATUS_NEWSESSION: UInt32 = 1
LINEAGENTSESSIONSTATUS_STATE: UInt32 = 2
LINEAGENTSESSIONSTATUS_UPDATEINFO: UInt32 = 4
LINEQUEUESTATUS_UPDATEINFO: UInt32 = 1
LINEQUEUESTATUS_NEWQUEUE: UInt32 = 2
LINEQUEUESTATUS_QUEUEREMOVED: UInt32 = 4
LINEGROUPSTATUS_NEWGROUP: UInt32 = 1
LINEGROUPSTATUS_GROUPREMOVED: UInt32 = 2
LINEPROXYSTATUS_OPEN: UInt32 = 1
LINEPROXYSTATUS_CLOSE: UInt32 = 2
LINEPROXYSTATUS_ALLOPENFORACD: UInt32 = 4
LINEANSWERMODE_NONE: UInt32 = 1
LINEANSWERMODE_DROP: UInt32 = 2
LINEANSWERMODE_HOLD: UInt32 = 4
LINEBEARERMODE_VOICE: UInt32 = 1
LINEBEARERMODE_SPEECH: UInt32 = 2
LINEBEARERMODE_MULTIUSE: UInt32 = 4
LINEBEARERMODE_DATA: UInt32 = 8
LINEBEARERMODE_ALTSPEECHDATA: UInt32 = 16
LINEBEARERMODE_NONCALLSIGNALING: UInt32 = 32
LINEBEARERMODE_PASSTHROUGH: UInt32 = 64
LINEBEARERMODE_RESTRICTEDDATA: UInt32 = 128
LINEBUSYMODE_STATION: UInt32 = 1
LINEBUSYMODE_TRUNK: UInt32 = 2
LINEBUSYMODE_UNKNOWN: UInt32 = 4
LINEBUSYMODE_UNAVAIL: UInt32 = 8
LINECALLCOMPLCOND_BUSY: UInt32 = 1
LINECALLCOMPLCOND_NOANSWER: UInt32 = 2
LINECALLCOMPLMODE_CAMPON: UInt32 = 1
LINECALLCOMPLMODE_CALLBACK: UInt32 = 2
LINECALLCOMPLMODE_INTRUDE: UInt32 = 4
LINECALLCOMPLMODE_MESSAGE: UInt32 = 8
LINECALLFEATURE_ACCEPT: UInt32 = 1
LINECALLFEATURE_ADDTOCONF: UInt32 = 2
LINECALLFEATURE_ANSWER: UInt32 = 4
LINECALLFEATURE_BLINDTRANSFER: UInt32 = 8
LINECALLFEATURE_COMPLETECALL: UInt32 = 16
LINECALLFEATURE_COMPLETETRANSF: UInt32 = 32
LINECALLFEATURE_DIAL: UInt32 = 64
LINECALLFEATURE_DROP: UInt32 = 128
LINECALLFEATURE_GATHERDIGITS: UInt32 = 256
LINECALLFEATURE_GENERATEDIGITS: UInt32 = 512
LINECALLFEATURE_GENERATETONE: UInt32 = 1024
LINECALLFEATURE_HOLD: UInt32 = 2048
LINECALLFEATURE_MONITORDIGITS: UInt32 = 4096
LINECALLFEATURE_MONITORMEDIA: UInt32 = 8192
LINECALLFEATURE_MONITORTONES: UInt32 = 16384
LINECALLFEATURE_PARK: UInt32 = 32768
LINECALLFEATURE_PREPAREADDCONF: UInt32 = 65536
LINECALLFEATURE_REDIRECT: UInt32 = 131072
LINECALLFEATURE_REMOVEFROMCONF: UInt32 = 262144
LINECALLFEATURE_SECURECALL: UInt32 = 524288
LINECALLFEATURE_SENDUSERUSER: UInt32 = 1048576
LINECALLFEATURE_SETCALLPARAMS: UInt32 = 2097152
LINECALLFEATURE_SETMEDIACONTROL: UInt32 = 4194304
LINECALLFEATURE_SETTERMINAL: UInt32 = 8388608
LINECALLFEATURE_SETUPCONF: UInt32 = 16777216
LINECALLFEATURE_SETUPTRANSFER: UInt32 = 33554432
LINECALLFEATURE_SWAPHOLD: UInt32 = 67108864
LINECALLFEATURE_UNHOLD: UInt32 = 134217728
LINECALLFEATURE_RELEASEUSERUSERINFO: UInt32 = 268435456
LINECALLFEATURE_SETTREATMENT: UInt32 = 536870912
LINECALLFEATURE_SETQOS: UInt32 = 1073741824
LINECALLFEATURE_SETCALLDATA: UInt32 = 2147483648
LINECALLFEATURE2_NOHOLDCONFERENCE: UInt32 = 1
LINECALLFEATURE2_ONESTEPTRANSFER: UInt32 = 2
LINECALLFEATURE2_COMPLCAMPON: UInt32 = 4
LINECALLFEATURE2_COMPLCALLBACK: UInt32 = 8
LINECALLFEATURE2_COMPLINTRUDE: UInt32 = 16
LINECALLFEATURE2_COMPLMESSAGE: UInt32 = 32
LINECALLFEATURE2_TRANSFERNORM: UInt32 = 64
LINECALLFEATURE2_TRANSFERCONF: UInt32 = 128
LINECALLFEATURE2_PARKDIRECT: UInt32 = 256
LINECALLFEATURE2_PARKNONDIRECT: UInt32 = 512
LINECALLHUBTRACKING_NONE: UInt32 = 0
LINECALLHUBTRACKING_PROVIDERLEVEL: UInt32 = 1
LINECALLHUBTRACKING_ALLCALLS: UInt32 = 2
LINECALLINFOSTATE_OTHER: UInt32 = 1
LINECALLINFOSTATE_DEVSPECIFIC: UInt32 = 2
LINECALLINFOSTATE_BEARERMODE: UInt32 = 4
LINECALLINFOSTATE_RATE: UInt32 = 8
LINECALLINFOSTATE_MEDIAMODE: UInt32 = 16
LINECALLINFOSTATE_APPSPECIFIC: UInt32 = 32
LINECALLINFOSTATE_CALLID: UInt32 = 64
LINECALLINFOSTATE_RELATEDCALLID: UInt32 = 128
LINECALLINFOSTATE_ORIGIN: UInt32 = 256
LINECALLINFOSTATE_REASON: UInt32 = 512
LINECALLINFOSTATE_COMPLETIONID: UInt32 = 1024
LINECALLINFOSTATE_NUMOWNERINCR: UInt32 = 2048
LINECALLINFOSTATE_NUMOWNERDECR: UInt32 = 4096
LINECALLINFOSTATE_NUMMONITORS: UInt32 = 8192
LINECALLINFOSTATE_TRUNK: UInt32 = 16384
LINECALLINFOSTATE_CALLERID: UInt32 = 32768
LINECALLINFOSTATE_CALLEDID: UInt32 = 65536
LINECALLINFOSTATE_CONNECTEDID: UInt32 = 131072
LINECALLINFOSTATE_REDIRECTIONID: UInt32 = 262144
LINECALLINFOSTATE_REDIRECTINGID: UInt32 = 524288
LINECALLINFOSTATE_DISPLAY: UInt32 = 1048576
LINECALLINFOSTATE_USERUSERINFO: UInt32 = 2097152
LINECALLINFOSTATE_HIGHLEVELCOMP: UInt32 = 4194304
LINECALLINFOSTATE_LOWLEVELCOMP: UInt32 = 8388608
LINECALLINFOSTATE_CHARGINGINFO: UInt32 = 16777216
LINECALLINFOSTATE_TERMINAL: UInt32 = 33554432
LINECALLINFOSTATE_DIALPARAMS: UInt32 = 67108864
LINECALLINFOSTATE_MONITORMODES: UInt32 = 134217728
LINECALLINFOSTATE_TREATMENT: UInt32 = 268435456
LINECALLINFOSTATE_QOS: UInt32 = 536870912
LINECALLINFOSTATE_CALLDATA: UInt32 = 1073741824
LINECALLORIGIN_OUTBOUND: UInt32 = 1
LINECALLORIGIN_INTERNAL: UInt32 = 2
LINECALLORIGIN_EXTERNAL: UInt32 = 4
LINECALLORIGIN_UNKNOWN: UInt32 = 16
LINECALLORIGIN_UNAVAIL: UInt32 = 32
LINECALLORIGIN_CONFERENCE: UInt32 = 64
LINECALLORIGIN_INBOUND: UInt32 = 128
LINECALLPARAMFLAGS_SECURE: UInt32 = 1
LINECALLPARAMFLAGS_IDLE: UInt32 = 2
LINECALLPARAMFLAGS_BLOCKID: UInt32 = 4
LINECALLPARAMFLAGS_ORIGOFFHOOK: UInt32 = 8
LINECALLPARAMFLAGS_DESTOFFHOOK: UInt32 = 16
LINECALLPARAMFLAGS_NOHOLDCONFERENCE: UInt32 = 32
LINECALLPARAMFLAGS_PREDICTIVEDIAL: UInt32 = 64
LINECALLPARAMFLAGS_ONESTEPTRANSFER: UInt32 = 128
LINECALLPARTYID_BLOCKED: UInt32 = 1
LINECALLPARTYID_OUTOFAREA: UInt32 = 2
LINECALLPARTYID_NAME: UInt32 = 4
LINECALLPARTYID_ADDRESS: UInt32 = 8
LINECALLPARTYID_PARTIAL: UInt32 = 16
LINECALLPARTYID_UNKNOWN: UInt32 = 32
LINECALLPARTYID_UNAVAIL: UInt32 = 64
LINECALLPRIVILEGE_NONE: UInt32 = 1
LINECALLPRIVILEGE_MONITOR: UInt32 = 2
LINECALLPRIVILEGE_OWNER: UInt32 = 4
LINECALLREASON_DIRECT: UInt32 = 1
LINECALLREASON_FWDBUSY: UInt32 = 2
LINECALLREASON_FWDNOANSWER: UInt32 = 4
LINECALLREASON_FWDUNCOND: UInt32 = 8
LINECALLREASON_PICKUP: UInt32 = 16
LINECALLREASON_UNPARK: UInt32 = 32
LINECALLREASON_REDIRECT: UInt32 = 64
LINECALLREASON_CALLCOMPLETION: UInt32 = 128
LINECALLREASON_TRANSFER: UInt32 = 256
LINECALLREASON_REMINDER: UInt32 = 512
LINECALLREASON_UNKNOWN: UInt32 = 1024
LINECALLREASON_UNAVAIL: UInt32 = 2048
LINECALLREASON_INTRUDE: UInt32 = 4096
LINECALLREASON_PARKED: UInt32 = 8192
LINECALLREASON_CAMPEDON: UInt32 = 16384
LINECALLREASON_ROUTEREQUEST: UInt32 = 32768
LINECALLSELECT_LINE: UInt32 = 1
LINECALLSELECT_ADDRESS: UInt32 = 2
LINECALLSELECT_CALL: UInt32 = 4
LINECALLSELECT_DEVICEID: UInt32 = 8
LINECALLSELECT_CALLID: UInt32 = 16
LINECALLSTATE_IDLE: UInt32 = 1
LINECALLSTATE_OFFERING: UInt32 = 2
LINECALLSTATE_ACCEPTED: UInt32 = 4
LINECALLSTATE_DIALTONE: UInt32 = 8
LINECALLSTATE_DIALING: UInt32 = 16
LINECALLSTATE_RINGBACK: UInt32 = 32
LINECALLSTATE_BUSY: UInt32 = 64
LINECALLSTATE_SPECIALINFO: UInt32 = 128
LINECALLSTATE_CONNECTED: UInt32 = 256
LINECALLSTATE_PROCEEDING: UInt32 = 512
LINECALLSTATE_ONHOLD: UInt32 = 1024
LINECALLSTATE_CONFERENCED: UInt32 = 2048
LINECALLSTATE_ONHOLDPENDCONF: UInt32 = 4096
LINECALLSTATE_ONHOLDPENDTRANSFER: UInt32 = 8192
LINECALLSTATE_DISCONNECTED: UInt32 = 16384
LINECALLSTATE_UNKNOWN: UInt32 = 32768
LINECALLTREATMENT_SILENCE: UInt32 = 1
LINECALLTREATMENT_RINGBACK: UInt32 = 2
LINECALLTREATMENT_BUSY: UInt32 = 3
LINECALLTREATMENT_MUSIC: UInt32 = 4
LINECARDOPTION_PREDEFINED: UInt32 = 1
LINECARDOPTION_HIDDEN: UInt32 = 2
LINECONNECTEDMODE_ACTIVE: UInt32 = 1
LINECONNECTEDMODE_INACTIVE: UInt32 = 2
LINECONNECTEDMODE_ACTIVEHELD: UInt32 = 4
LINECONNECTEDMODE_INACTIVEHELD: UInt32 = 8
LINECONNECTEDMODE_CONFIRMED: UInt32 = 16
LINEDEVCAPFLAGS_CROSSADDRCONF: UInt32 = 1
LINEDEVCAPFLAGS_HIGHLEVCOMP: UInt32 = 2
LINEDEVCAPFLAGS_LOWLEVCOMP: UInt32 = 4
LINEDEVCAPFLAGS_MEDIACONTROL: UInt32 = 8
LINEDEVCAPFLAGS_MULTIPLEADDR: UInt32 = 16
LINEDEVCAPFLAGS_CLOSEDROP: UInt32 = 32
LINEDEVCAPFLAGS_DIALBILLING: UInt32 = 64
LINEDEVCAPFLAGS_DIALQUIET: UInt32 = 128
LINEDEVCAPFLAGS_DIALDIALTONE: UInt32 = 256
LINEDEVCAPFLAGS_MSP: UInt32 = 512
LINEDEVCAPFLAGS_CALLHUB: UInt32 = 1024
LINEDEVCAPFLAGS_CALLHUBTRACKING: UInt32 = 2048
LINEDEVCAPFLAGS_PRIVATEOBJECTS: UInt32 = 4096
LINEDEVCAPFLAGS_LOCAL: UInt32 = 8192
LINEDEVSTATE_OTHER: UInt32 = 1
LINEDEVSTATE_RINGING: UInt32 = 2
LINEDEVSTATE_CONNECTED: UInt32 = 4
LINEDEVSTATE_DISCONNECTED: UInt32 = 8
LINEDEVSTATE_MSGWAITON: UInt32 = 16
LINEDEVSTATE_MSGWAITOFF: UInt32 = 32
LINEDEVSTATE_INSERVICE: UInt32 = 64
LINEDEVSTATE_OUTOFSERVICE: UInt32 = 128
LINEDEVSTATE_MAINTENANCE: UInt32 = 256
LINEDEVSTATE_OPEN: UInt32 = 512
LINEDEVSTATE_CLOSE: UInt32 = 1024
LINEDEVSTATE_NUMCALLS: UInt32 = 2048
LINEDEVSTATE_NUMCOMPLETIONS: UInt32 = 4096
LINEDEVSTATE_TERMINALS: UInt32 = 8192
LINEDEVSTATE_ROAMMODE: UInt32 = 16384
LINEDEVSTATE_BATTERY: UInt32 = 32768
LINEDEVSTATE_SIGNAL: UInt32 = 65536
LINEDEVSTATE_DEVSPECIFIC: UInt32 = 131072
LINEDEVSTATE_REINIT: UInt32 = 262144
LINEDEVSTATE_LOCK: UInt32 = 524288
LINEDEVSTATE_CAPSCHANGE: UInt32 = 1048576
LINEDEVSTATE_CONFIGCHANGE: UInt32 = 2097152
LINEDEVSTATE_TRANSLATECHANGE: UInt32 = 4194304
LINEDEVSTATE_COMPLCANCEL: UInt32 = 8388608
LINEDEVSTATE_REMOVED: UInt32 = 16777216
LINEDEVSTATUSFLAGS_CONNECTED: UInt32 = 1
LINEDEVSTATUSFLAGS_MSGWAIT: UInt32 = 2
LINEDEVSTATUSFLAGS_INSERVICE: UInt32 = 4
LINEDEVSTATUSFLAGS_LOCKED: UInt32 = 8
LINEDIALTONEMODE_NORMAL: UInt32 = 1
LINEDIALTONEMODE_SPECIAL: UInt32 = 2
LINEDIALTONEMODE_INTERNAL: UInt32 = 4
LINEDIALTONEMODE_EXTERNAL: UInt32 = 8
LINEDIALTONEMODE_UNKNOWN: UInt32 = 16
LINEDIALTONEMODE_UNAVAIL: UInt32 = 32
LINEDIGITMODE_PULSE: UInt32 = 1
LINEDIGITMODE_DTMF: UInt32 = 2
LINEDIGITMODE_DTMFEND: UInt32 = 4
LINEDISCONNECTMODE_NORMAL: UInt32 = 1
LINEDISCONNECTMODE_UNKNOWN: UInt32 = 2
LINEDISCONNECTMODE_REJECT: UInt32 = 4
LINEDISCONNECTMODE_PICKUP: UInt32 = 8
LINEDISCONNECTMODE_FORWARDED: UInt32 = 16
LINEDISCONNECTMODE_BUSY: UInt32 = 32
LINEDISCONNECTMODE_NOANSWER: UInt32 = 64
LINEDISCONNECTMODE_BADADDRESS: UInt32 = 128
LINEDISCONNECTMODE_UNREACHABLE: UInt32 = 256
LINEDISCONNECTMODE_CONGESTION: UInt32 = 512
LINEDISCONNECTMODE_INCOMPATIBLE: UInt32 = 1024
LINEDISCONNECTMODE_UNAVAIL: UInt32 = 2048
LINEDISCONNECTMODE_NODIALTONE: UInt32 = 4096
LINEDISCONNECTMODE_NUMBERCHANGED: UInt32 = 8192
LINEDISCONNECTMODE_OUTOFORDER: UInt32 = 16384
LINEDISCONNECTMODE_TEMPFAILURE: UInt32 = 32768
LINEDISCONNECTMODE_QOSUNAVAIL: UInt32 = 65536
LINEDISCONNECTMODE_BLOCKED: UInt32 = 131072
LINEDISCONNECTMODE_DONOTDISTURB: UInt32 = 262144
LINEDISCONNECTMODE_CANCELLED: UInt32 = 524288
LINEDISCONNECTMODE_DESTINATIONBARRED: UInt32 = 1048576
LINEDISCONNECTMODE_FDNRESTRICT: UInt32 = 2097152
LINEERR_ALLOCATED: UInt32 = 2147483649
LINEERR_BADDEVICEID: UInt32 = 2147483650
LINEERR_BEARERMODEUNAVAIL: UInt32 = 2147483651
LINEERR_CALLUNAVAIL: UInt32 = 2147483653
LINEERR_COMPLETIONOVERRUN: UInt32 = 2147483654
LINEERR_CONFERENCEFULL: UInt32 = 2147483655
LINEERR_DIALBILLING: UInt32 = 2147483656
LINEERR_DIALDIALTONE: UInt32 = 2147483657
LINEERR_DIALPROMPT: UInt32 = 2147483658
LINEERR_DIALQUIET: UInt32 = 2147483659
LINEERR_INCOMPATIBLEAPIVERSION: UInt32 = 2147483660
LINEERR_INCOMPATIBLEEXTVERSION: UInt32 = 2147483661
LINEERR_INIFILECORRUPT: UInt32 = 2147483662
LINEERR_INUSE: UInt32 = 2147483663
LINEERR_INVALADDRESS: UInt32 = 2147483664
LINEERR_INVALADDRESSID: UInt32 = 2147483665
LINEERR_INVALADDRESSMODE: UInt32 = 2147483666
LINEERR_INVALADDRESSSTATE: UInt32 = 2147483667
LINEERR_INVALAPPHANDLE: UInt32 = 2147483668
LINEERR_INVALAPPNAME: UInt32 = 2147483669
LINEERR_INVALBEARERMODE: UInt32 = 2147483670
LINEERR_INVALCALLCOMPLMODE: UInt32 = 2147483671
LINEERR_INVALCALLHANDLE: UInt32 = 2147483672
LINEERR_INVALCALLPARAMS: UInt32 = 2147483673
LINEERR_INVALCALLPRIVILEGE: UInt32 = 2147483674
LINEERR_INVALCALLSELECT: UInt32 = 2147483675
LINEERR_INVALCALLSTATE: UInt32 = 2147483676
LINEERR_INVALCALLSTATELIST: UInt32 = 2147483677
LINEERR_INVALCARD: UInt32 = 2147483678
LINEERR_INVALCOMPLETIONID: UInt32 = 2147483679
LINEERR_INVALCONFCALLHANDLE: UInt32 = 2147483680
LINEERR_INVALCONSULTCALLHANDLE: UInt32 = 2147483681
LINEERR_INVALCOUNTRYCODE: UInt32 = 2147483682
LINEERR_INVALDEVICECLASS: UInt32 = 2147483683
LINEERR_INVALDEVICEHANDLE: UInt32 = 2147483684
LINEERR_INVALDIALPARAMS: UInt32 = 2147483685
LINEERR_INVALDIGITLIST: UInt32 = 2147483686
LINEERR_INVALDIGITMODE: UInt32 = 2147483687
LINEERR_INVALDIGITS: UInt32 = 2147483688
LINEERR_INVALEXTVERSION: UInt32 = 2147483689
LINEERR_INVALGROUPID: UInt32 = 2147483690
LINEERR_INVALLINEHANDLE: UInt32 = 2147483691
LINEERR_INVALLINESTATE: UInt32 = 2147483692
LINEERR_INVALLOCATION: UInt32 = 2147483693
LINEERR_INVALMEDIALIST: UInt32 = 2147483694
LINEERR_INVALMEDIAMODE: UInt32 = 2147483695
LINEERR_INVALMESSAGEID: UInt32 = 2147483696
LINEERR_INVALPARAM: UInt32 = 2147483698
LINEERR_INVALPARKID: UInt32 = 2147483699
LINEERR_INVALPARKMODE: UInt32 = 2147483700
LINEERR_INVALPOINTER: UInt32 = 2147483701
LINEERR_INVALPRIVSELECT: UInt32 = 2147483702
LINEERR_INVALRATE: UInt32 = 2147483703
LINEERR_INVALREQUESTMODE: UInt32 = 2147483704
LINEERR_INVALTERMINALID: UInt32 = 2147483705
LINEERR_INVALTERMINALMODE: UInt32 = 2147483706
LINEERR_INVALTIMEOUT: UInt32 = 2147483707
LINEERR_INVALTONE: UInt32 = 2147483708
LINEERR_INVALTONELIST: UInt32 = 2147483709
LINEERR_INVALTONEMODE: UInt32 = 2147483710
LINEERR_INVALTRANSFERMODE: UInt32 = 2147483711
LINEERR_LINEMAPPERFAILED: UInt32 = 2147483712
LINEERR_NOCONFERENCE: UInt32 = 2147483713
LINEERR_NODEVICE: UInt32 = 2147483714
LINEERR_NODRIVER: UInt32 = 2147483715
LINEERR_NOMEM: UInt32 = 2147483716
LINEERR_NOREQUEST: UInt32 = 2147483717
LINEERR_NOTOWNER: UInt32 = 2147483718
LINEERR_NOTREGISTERED: UInt32 = 2147483719
LINEERR_OPERATIONFAILED: UInt32 = 2147483720
LINEERR_OPERATIONUNAVAIL: UInt32 = 2147483721
LINEERR_RATEUNAVAIL: UInt32 = 2147483722
LINEERR_RESOURCEUNAVAIL: UInt32 = 2147483723
LINEERR_REQUESTOVERRUN: UInt32 = 2147483724
LINEERR_STRUCTURETOOSMALL: UInt32 = 2147483725
LINEERR_TARGETNOTFOUND: UInt32 = 2147483726
LINEERR_TARGETSELF: UInt32 = 2147483727
LINEERR_UNINITIALIZED: UInt32 = 2147483728
LINEERR_USERUSERINFOTOOBIG: UInt32 = 2147483729
LINEERR_REINIT: UInt32 = 2147483730
LINEERR_ADDRESSBLOCKED: UInt32 = 2147483731
LINEERR_BILLINGREJECTED: UInt32 = 2147483732
LINEERR_INVALFEATURE: UInt32 = 2147483733
LINEERR_NOMULTIPLEINSTANCE: UInt32 = 2147483734
LINEERR_INVALAGENTID: UInt32 = 2147483735
LINEERR_INVALAGENTGROUP: UInt32 = 2147483736
LINEERR_INVALPASSWORD: UInt32 = 2147483737
LINEERR_INVALAGENTSTATE: UInt32 = 2147483738
LINEERR_INVALAGENTACTIVITY: UInt32 = 2147483739
LINEERR_DIALVOICEDETECT: UInt32 = 2147483740
LINEERR_USERCANCELLED: UInt32 = 2147483741
LINEERR_INVALADDRESSTYPE: UInt32 = 2147483742
LINEERR_INVALAGENTSESSIONSTATE: UInt32 = 2147483743
LINEERR_DISCONNECTED: UInt32 = 2147483744
LINEERR_SERVICE_NOT_RUNNING: UInt32 = 2147483745
LINEFEATURE_DEVSPECIFIC: UInt32 = 1
LINEFEATURE_DEVSPECIFICFEAT: UInt32 = 2
LINEFEATURE_FORWARD: UInt32 = 4
LINEFEATURE_MAKECALL: UInt32 = 8
LINEFEATURE_SETMEDIACONTROL: UInt32 = 16
LINEFEATURE_SETTERMINAL: UInt32 = 32
LINEFEATURE_SETDEVSTATUS: UInt32 = 64
LINEFEATURE_FORWARDFWD: UInt32 = 128
LINEFEATURE_FORWARDDND: UInt32 = 256
LINEFORWARDMODE_UNCOND: UInt32 = 1
LINEFORWARDMODE_UNCONDINTERNAL: UInt32 = 2
LINEFORWARDMODE_UNCONDEXTERNAL: UInt32 = 4
LINEFORWARDMODE_UNCONDSPECIFIC: UInt32 = 8
LINEFORWARDMODE_BUSY: UInt32 = 16
LINEFORWARDMODE_BUSYINTERNAL: UInt32 = 32
LINEFORWARDMODE_BUSYEXTERNAL: UInt32 = 64
LINEFORWARDMODE_BUSYSPECIFIC: UInt32 = 128
LINEFORWARDMODE_NOANSW: UInt32 = 256
LINEFORWARDMODE_NOANSWINTERNAL: UInt32 = 512
LINEFORWARDMODE_NOANSWEXTERNAL: UInt32 = 1024
LINEFORWARDMODE_NOANSWSPECIFIC: UInt32 = 2048
LINEFORWARDMODE_BUSYNA: UInt32 = 4096
LINEFORWARDMODE_BUSYNAINTERNAL: UInt32 = 8192
LINEFORWARDMODE_BUSYNAEXTERNAL: UInt32 = 16384
LINEFORWARDMODE_BUSYNASPECIFIC: UInt32 = 32768
LINEFORWARDMODE_UNKNOWN: UInt32 = 65536
LINEFORWARDMODE_UNAVAIL: UInt32 = 131072
LINEGATHERTERM_BUFFERFULL: UInt32 = 1
LINEGATHERTERM_TERMDIGIT: UInt32 = 2
LINEGATHERTERM_FIRSTTIMEOUT: UInt32 = 4
LINEGATHERTERM_INTERTIMEOUT: UInt32 = 8
LINEGATHERTERM_CANCEL: UInt32 = 16
LINEGENERATETERM_DONE: UInt32 = 1
LINEGENERATETERM_CANCEL: UInt32 = 2
LINEINITIALIZEEXOPTION_USEHIDDENWINDOW: UInt32 = 1
LINEINITIALIZEEXOPTION_USEEVENT: UInt32 = 2
LINEINITIALIZEEXOPTION_USECOMPLETIONPORT: UInt32 = 3
LINEINITIALIZEEXOPTION_CALLHUBTRACKING: UInt32 = 2147483648
LINELOCATIONOPTION_PULSEDIAL: UInt32 = 1
LINEMAPPER: UInt32 = 4294967295
LINEMEDIACONTROL_NONE: UInt32 = 1
LINEMEDIACONTROL_START: UInt32 = 2
LINEMEDIACONTROL_RESET: UInt32 = 4
LINEMEDIACONTROL_PAUSE: UInt32 = 8
LINEMEDIACONTROL_RESUME: UInt32 = 16
LINEMEDIACONTROL_RATEUP: UInt32 = 32
LINEMEDIACONTROL_RATEDOWN: UInt32 = 64
LINEMEDIACONTROL_RATENORMAL: UInt32 = 128
LINEMEDIACONTROL_VOLUMEUP: UInt32 = 256
LINEMEDIACONTROL_VOLUMEDOWN: UInt32 = 512
LINEMEDIACONTROL_VOLUMENORMAL: UInt32 = 1024
LINEMEDIAMODE_UNKNOWN: UInt32 = 2
LINEMEDIAMODE_INTERACTIVEVOICE: UInt32 = 4
LINEMEDIAMODE_AUTOMATEDVOICE: UInt32 = 8
LINEMEDIAMODE_DATAMODEM: UInt32 = 16
LINEMEDIAMODE_G3FAX: UInt32 = 32
LINEMEDIAMODE_TDD: UInt32 = 64
LINEMEDIAMODE_G4FAX: UInt32 = 128
LINEMEDIAMODE_DIGITALDATA: UInt32 = 256
LINEMEDIAMODE_TELETEX: UInt32 = 512
LINEMEDIAMODE_VIDEOTEX: UInt32 = 1024
LINEMEDIAMODE_TELEX: UInt32 = 2048
LINEMEDIAMODE_MIXED: UInt32 = 4096
LINEMEDIAMODE_ADSI: UInt32 = 8192
LINEMEDIAMODE_VOICEVIEW: UInt32 = 16384
LINEMEDIAMODE_VIDEO: UInt32 = 32768
LAST_LINEMEDIAMODE: UInt32 = 32768
LINEOFFERINGMODE_ACTIVE: UInt32 = 1
LINEOFFERINGMODE_INACTIVE: UInt32 = 2
LINEOPENOPTION_SINGLEADDRESS: UInt32 = 2147483648
LINEOPENOPTION_PROXY: UInt32 = 1073741824
LINEPARKMODE_DIRECTED: UInt32 = 1
LINEPARKMODE_NONDIRECTED: UInt32 = 2
LINEPROXYREQUEST_SETAGENTGROUP: UInt32 = 1
LINEPROXYREQUEST_SETAGENTSTATE: UInt32 = 2
LINEPROXYREQUEST_SETAGENTACTIVITY: UInt32 = 3
LINEPROXYREQUEST_GETAGENTCAPS: UInt32 = 4
LINEPROXYREQUEST_GETAGENTSTATUS: UInt32 = 5
LINEPROXYREQUEST_AGENTSPECIFIC: UInt32 = 6
LINEPROXYREQUEST_GETAGENTACTIVITYLIST: UInt32 = 7
LINEPROXYREQUEST_GETAGENTGROUPLIST: UInt32 = 8
LINEPROXYREQUEST_CREATEAGENT: UInt32 = 9
LINEPROXYREQUEST_SETAGENTMEASUREMENTPERIOD: UInt32 = 10
LINEPROXYREQUEST_GETAGENTINFO: UInt32 = 11
LINEPROXYREQUEST_CREATEAGENTSESSION: UInt32 = 12
LINEPROXYREQUEST_GETAGENTSESSIONLIST: UInt32 = 13
LINEPROXYREQUEST_SETAGENTSESSIONSTATE: UInt32 = 14
LINEPROXYREQUEST_GETAGENTSESSIONINFO: UInt32 = 15
LINEPROXYREQUEST_GETQUEUELIST: UInt32 = 16
LINEPROXYREQUEST_SETQUEUEMEASUREMENTPERIOD: UInt32 = 17
LINEPROXYREQUEST_GETQUEUEINFO: UInt32 = 18
LINEPROXYREQUEST_GETGROUPLIST: UInt32 = 19
LINEPROXYREQUEST_SETAGENTSTATEEX: UInt32 = 20
LINEREMOVEFROMCONF_NONE: UInt32 = 1
LINEREMOVEFROMCONF_LAST: UInt32 = 2
LINEREMOVEFROMCONF_ANY: UInt32 = 3
LINEREQUESTMODE_MAKECALL: UInt32 = 1
LINEREQUESTMODE_MEDIACALL: UInt32 = 2
LINEREQUESTMODE_DROP: UInt32 = 4
LAST_LINEREQUESTMODE: UInt32 = 2
LINEROAMMODE_UNKNOWN: UInt32 = 1
LINEROAMMODE_UNAVAIL: UInt32 = 2
LINEROAMMODE_HOME: UInt32 = 4
LINEROAMMODE_ROAMA: UInt32 = 8
LINEROAMMODE_ROAMB: UInt32 = 16
LINESPECIALINFO_NOCIRCUIT: UInt32 = 1
LINESPECIALINFO_CUSTIRREG: UInt32 = 2
LINESPECIALINFO_REORDER: UInt32 = 4
LINESPECIALINFO_UNKNOWN: UInt32 = 8
LINESPECIALINFO_UNAVAIL: UInt32 = 16
LINETERMDEV_PHONE: UInt32 = 1
LINETERMDEV_HEADSET: UInt32 = 2
LINETERMDEV_SPEAKER: UInt32 = 4
LINETERMMODE_BUTTONS: UInt32 = 1
LINETERMMODE_LAMPS: UInt32 = 2
LINETERMMODE_DISPLAY: UInt32 = 4
LINETERMMODE_RINGER: UInt32 = 8
LINETERMMODE_HOOKSWITCH: UInt32 = 16
LINETERMMODE_MEDIATOLINE: UInt32 = 32
LINETERMMODE_MEDIAFROMLINE: UInt32 = 64
LINETERMMODE_MEDIABIDIRECT: UInt32 = 128
LINETERMSHARING_PRIVATE: UInt32 = 1
LINETERMSHARING_SHAREDEXCL: UInt32 = 2
LINETERMSHARING_SHAREDCONF: UInt32 = 4
LINETOLLLISTOPTION_ADD: UInt32 = 1
LINETOLLLISTOPTION_REMOVE: UInt32 = 2
LINETONEMODE_CUSTOM: UInt32 = 1
LINETONEMODE_RINGBACK: UInt32 = 2
LINETONEMODE_BUSY: UInt32 = 4
LINETONEMODE_BEEP: UInt32 = 8
LINETONEMODE_BILLING: UInt32 = 16
LINETRANSFERMODE_TRANSFER: UInt32 = 1
LINETRANSFERMODE_CONFERENCE: UInt32 = 2
LINETRANSLATEOPTION_CARDOVERRIDE: UInt32 = 1
LINETRANSLATEOPTION_CANCELCALLWAITING: UInt32 = 2
LINETRANSLATEOPTION_FORCELOCAL: UInt32 = 4
LINETRANSLATEOPTION_FORCELD: UInt32 = 8
LINETRANSLATERESULT_CANONICAL: UInt32 = 1
LINETRANSLATERESULT_INTERNATIONAL: UInt32 = 2
LINETRANSLATERESULT_LONGDISTANCE: UInt32 = 4
LINETRANSLATERESULT_LOCAL: UInt32 = 8
LINETRANSLATERESULT_INTOLLLIST: UInt32 = 16
LINETRANSLATERESULT_NOTINTOLLLIST: UInt32 = 32
LINETRANSLATERESULT_DIALBILLING: UInt32 = 64
LINETRANSLATERESULT_DIALQUIET: UInt32 = 128
LINETRANSLATERESULT_DIALDIALTONE: UInt32 = 256
LINETRANSLATERESULT_DIALPROMPT: UInt32 = 512
LINETRANSLATERESULT_VOICEDETECT: UInt32 = 1024
LINETRANSLATERESULT_NOTRANSLATION: UInt32 = 2048
PHONEBUTTONFUNCTION_UNKNOWN: UInt32 = 0
PHONEBUTTONFUNCTION_CONFERENCE: UInt32 = 1
PHONEBUTTONFUNCTION_TRANSFER: UInt32 = 2
PHONEBUTTONFUNCTION_DROP: UInt32 = 3
PHONEBUTTONFUNCTION_HOLD: UInt32 = 4
PHONEBUTTONFUNCTION_RECALL: UInt32 = 5
PHONEBUTTONFUNCTION_DISCONNECT: UInt32 = 6
PHONEBUTTONFUNCTION_CONNECT: UInt32 = 7
PHONEBUTTONFUNCTION_MSGWAITON: UInt32 = 8
PHONEBUTTONFUNCTION_MSGWAITOFF: UInt32 = 9
PHONEBUTTONFUNCTION_SELECTRING: UInt32 = 10
PHONEBUTTONFUNCTION_ABBREVDIAL: UInt32 = 11
PHONEBUTTONFUNCTION_FORWARD: UInt32 = 12
PHONEBUTTONFUNCTION_PICKUP: UInt32 = 13
PHONEBUTTONFUNCTION_RINGAGAIN: UInt32 = 14
PHONEBUTTONFUNCTION_PARK: UInt32 = 15
PHONEBUTTONFUNCTION_REJECT: UInt32 = 16
PHONEBUTTONFUNCTION_REDIRECT: UInt32 = 17
PHONEBUTTONFUNCTION_MUTE: UInt32 = 18
PHONEBUTTONFUNCTION_VOLUMEUP: UInt32 = 19
PHONEBUTTONFUNCTION_VOLUMEDOWN: UInt32 = 20
PHONEBUTTONFUNCTION_SPEAKERON: UInt32 = 21
PHONEBUTTONFUNCTION_SPEAKEROFF: UInt32 = 22
PHONEBUTTONFUNCTION_FLASH: UInt32 = 23
PHONEBUTTONFUNCTION_DATAON: UInt32 = 24
PHONEBUTTONFUNCTION_DATAOFF: UInt32 = 25
PHONEBUTTONFUNCTION_DONOTDISTURB: UInt32 = 26
PHONEBUTTONFUNCTION_INTERCOM: UInt32 = 27
PHONEBUTTONFUNCTION_BRIDGEDAPP: UInt32 = 28
PHONEBUTTONFUNCTION_BUSY: UInt32 = 29
PHONEBUTTONFUNCTION_CALLAPP: UInt32 = 30
PHONEBUTTONFUNCTION_DATETIME: UInt32 = 31
PHONEBUTTONFUNCTION_DIRECTORY: UInt32 = 32
PHONEBUTTONFUNCTION_COVER: UInt32 = 33
PHONEBUTTONFUNCTION_CALLID: UInt32 = 34
PHONEBUTTONFUNCTION_LASTNUM: UInt32 = 35
PHONEBUTTONFUNCTION_NIGHTSRV: UInt32 = 36
PHONEBUTTONFUNCTION_SENDCALLS: UInt32 = 37
PHONEBUTTONFUNCTION_MSGINDICATOR: UInt32 = 38
PHONEBUTTONFUNCTION_REPDIAL: UInt32 = 39
PHONEBUTTONFUNCTION_SETREPDIAL: UInt32 = 40
PHONEBUTTONFUNCTION_SYSTEMSPEED: UInt32 = 41
PHONEBUTTONFUNCTION_STATIONSPEED: UInt32 = 42
PHONEBUTTONFUNCTION_CAMPON: UInt32 = 43
PHONEBUTTONFUNCTION_SAVEREPEAT: UInt32 = 44
PHONEBUTTONFUNCTION_QUEUECALL: UInt32 = 45
PHONEBUTTONFUNCTION_NONE: UInt32 = 46
PHONEBUTTONFUNCTION_SEND: UInt32 = 47
PHONEBUTTONMODE_DUMMY: UInt32 = 1
PHONEBUTTONMODE_CALL: UInt32 = 2
PHONEBUTTONMODE_FEATURE: UInt32 = 4
PHONEBUTTONMODE_KEYPAD: UInt32 = 8
PHONEBUTTONMODE_LOCAL: UInt32 = 16
PHONEBUTTONMODE_DISPLAY: UInt32 = 32
PHONEBUTTONSTATE_UP: UInt32 = 1
PHONEBUTTONSTATE_DOWN: UInt32 = 2
PHONEBUTTONSTATE_UNKNOWN: UInt32 = 4
PHONEBUTTONSTATE_UNAVAIL: UInt32 = 8
PHONEERR_ALLOCATED: UInt32 = 2415919105
PHONEERR_BADDEVICEID: UInt32 = 2415919106
PHONEERR_INCOMPATIBLEAPIVERSION: UInt32 = 2415919107
PHONEERR_INCOMPATIBLEEXTVERSION: UInt32 = 2415919108
PHONEERR_INIFILECORRUPT: UInt32 = 2415919109
PHONEERR_INUSE: UInt32 = 2415919110
PHONEERR_INVALAPPHANDLE: UInt32 = 2415919111
PHONEERR_INVALAPPNAME: UInt32 = 2415919112
PHONEERR_INVALBUTTONLAMPID: UInt32 = 2415919113
PHONEERR_INVALBUTTONMODE: UInt32 = 2415919114
PHONEERR_INVALBUTTONSTATE: UInt32 = 2415919115
PHONEERR_INVALDATAID: UInt32 = 2415919116
PHONEERR_INVALDEVICECLASS: UInt32 = 2415919117
PHONEERR_INVALEXTVERSION: UInt32 = 2415919118
PHONEERR_INVALHOOKSWITCHDEV: UInt32 = 2415919119
PHONEERR_INVALHOOKSWITCHMODE: UInt32 = 2415919120
PHONEERR_INVALLAMPMODE: UInt32 = 2415919121
PHONEERR_INVALPARAM: UInt32 = 2415919122
PHONEERR_INVALPHONEHANDLE: UInt32 = 2415919123
PHONEERR_INVALPHONESTATE: UInt32 = 2415919124
PHONEERR_INVALPOINTER: UInt32 = 2415919125
PHONEERR_INVALPRIVILEGE: UInt32 = 2415919126
PHONEERR_INVALRINGMODE: UInt32 = 2415919127
PHONEERR_NODEVICE: UInt32 = 2415919128
PHONEERR_NODRIVER: UInt32 = 2415919129
PHONEERR_NOMEM: UInt32 = 2415919130
PHONEERR_NOTOWNER: UInt32 = 2415919131
PHONEERR_OPERATIONFAILED: UInt32 = 2415919132
PHONEERR_OPERATIONUNAVAIL: UInt32 = 2415919133
PHONEERR_RESOURCEUNAVAIL: UInt32 = 2415919135
PHONEERR_REQUESTOVERRUN: UInt32 = 2415919136
PHONEERR_STRUCTURETOOSMALL: UInt32 = 2415919137
PHONEERR_UNINITIALIZED: UInt32 = 2415919138
PHONEERR_REINIT: UInt32 = 2415919139
PHONEERR_DISCONNECTED: UInt32 = 2415919140
PHONEERR_SERVICE_NOT_RUNNING: UInt32 = 2415919141
PHONEFEATURE_GETBUTTONINFO: UInt32 = 1
PHONEFEATURE_GETDATA: UInt32 = 2
PHONEFEATURE_GETDISPLAY: UInt32 = 4
PHONEFEATURE_GETGAINHANDSET: UInt32 = 8
PHONEFEATURE_GETGAINSPEAKER: UInt32 = 16
PHONEFEATURE_GETGAINHEADSET: UInt32 = 32
PHONEFEATURE_GETHOOKSWITCHHANDSET: UInt32 = 64
PHONEFEATURE_GETHOOKSWITCHSPEAKER: UInt32 = 128
PHONEFEATURE_GETHOOKSWITCHHEADSET: UInt32 = 256
PHONEFEATURE_GETLAMP: UInt32 = 512
PHONEFEATURE_GETRING: UInt32 = 1024
PHONEFEATURE_GETVOLUMEHANDSET: UInt32 = 2048
PHONEFEATURE_GETVOLUMESPEAKER: UInt32 = 4096
PHONEFEATURE_GETVOLUMEHEADSET: UInt32 = 8192
PHONEFEATURE_SETBUTTONINFO: UInt32 = 16384
PHONEFEATURE_SETDATA: UInt32 = 32768
PHONEFEATURE_SETDISPLAY: UInt32 = 65536
PHONEFEATURE_SETGAINHANDSET: UInt32 = 131072
PHONEFEATURE_SETGAINSPEAKER: UInt32 = 262144
PHONEFEATURE_SETGAINHEADSET: UInt32 = 524288
PHONEFEATURE_SETHOOKSWITCHHANDSET: UInt32 = 1048576
PHONEFEATURE_SETHOOKSWITCHSPEAKER: UInt32 = 2097152
PHONEFEATURE_SETHOOKSWITCHHEADSET: UInt32 = 4194304
PHONEFEATURE_SETLAMP: UInt32 = 8388608
PHONEFEATURE_SETRING: UInt32 = 16777216
PHONEFEATURE_SETVOLUMEHANDSET: UInt32 = 33554432
PHONEFEATURE_SETVOLUMESPEAKER: UInt32 = 67108864
PHONEFEATURE_SETVOLUMEHEADSET: UInt32 = 134217728
PHONEFEATURE_GENERICPHONE: UInt32 = 268435456
PHONEHOOKSWITCHDEV_HANDSET: UInt32 = 1
PHONEHOOKSWITCHDEV_SPEAKER: UInt32 = 2
PHONEHOOKSWITCHDEV_HEADSET: UInt32 = 4
PHONEHOOKSWITCHMODE_ONHOOK: UInt32 = 1
PHONEHOOKSWITCHMODE_MIC: UInt32 = 2
PHONEHOOKSWITCHMODE_SPEAKER: UInt32 = 4
PHONEHOOKSWITCHMODE_MICSPEAKER: UInt32 = 8
PHONEHOOKSWITCHMODE_UNKNOWN: UInt32 = 16
PHONEINITIALIZEEXOPTION_USEHIDDENWINDOW: UInt32 = 1
PHONEINITIALIZEEXOPTION_USEEVENT: UInt32 = 2
PHONEINITIALIZEEXOPTION_USECOMPLETIONPORT: UInt32 = 3
PHONELAMPMODE_DUMMY: UInt32 = 1
PHONELAMPMODE_OFF: UInt32 = 2
PHONELAMPMODE_STEADY: UInt32 = 4
PHONELAMPMODE_WINK: UInt32 = 8
PHONELAMPMODE_FLASH: UInt32 = 16
PHONELAMPMODE_FLUTTER: UInt32 = 32
PHONELAMPMODE_BROKENFLUTTER: UInt32 = 64
PHONELAMPMODE_UNKNOWN: UInt32 = 128
PHONEPRIVILEGE_MONITOR: UInt32 = 1
PHONEPRIVILEGE_OWNER: UInt32 = 2
PHONESTATE_OTHER: UInt32 = 1
PHONESTATE_CONNECTED: UInt32 = 2
PHONESTATE_DISCONNECTED: UInt32 = 4
PHONESTATE_OWNER: UInt32 = 8
PHONESTATE_MONITORS: UInt32 = 16
PHONESTATE_DISPLAY: UInt32 = 32
PHONESTATE_LAMP: UInt32 = 64
PHONESTATE_RINGMODE: UInt32 = 128
PHONESTATE_RINGVOLUME: UInt32 = 256
PHONESTATE_HANDSETHOOKSWITCH: UInt32 = 512
PHONESTATE_HANDSETVOLUME: UInt32 = 1024
PHONESTATE_HANDSETGAIN: UInt32 = 2048
PHONESTATE_SPEAKERHOOKSWITCH: UInt32 = 4096
PHONESTATE_SPEAKERVOLUME: UInt32 = 8192
PHONESTATE_SPEAKERGAIN: UInt32 = 16384
PHONESTATE_HEADSETHOOKSWITCH: UInt32 = 32768
PHONESTATE_HEADSETVOLUME: UInt32 = 65536
PHONESTATE_HEADSETGAIN: UInt32 = 131072
PHONESTATE_SUSPEND: UInt32 = 262144
PHONESTATE_RESUME: UInt32 = 524288
PHONESTATE_DEVSPECIFIC: UInt32 = 1048576
PHONESTATE_REINIT: UInt32 = 2097152
PHONESTATE_CAPSCHANGE: UInt32 = 4194304
PHONESTATE_REMOVED: UInt32 = 8388608
PHONESTATUSFLAGS_CONNECTED: UInt32 = 1
PHONESTATUSFLAGS_SUSPENDED: UInt32 = 2
STRINGFORMAT_ASCII: UInt32 = 1
STRINGFORMAT_DBCS: UInt32 = 2
STRINGFORMAT_UNICODE: UInt32 = 3
STRINGFORMAT_BINARY: UInt32 = 4
TAPI_REPLY: UInt32 = 1123
TAPIERR_CONNECTED: Int32 = 0
TAPIERR_DROPPED: Int32 = -1
TAPIERR_NOREQUESTRECIPIENT: Int32 = -2
TAPIERR_REQUESTQUEUEFULL: Int32 = -3
TAPIERR_INVALDESTADDRESS: Int32 = -4
TAPIERR_INVALWINDOWHANDLE: Int32 = -5
TAPIERR_INVALDEVICECLASS: Int32 = -6
TAPIERR_INVALDEVICEID: Int32 = -7
TAPIERR_DEVICECLASSUNAVAIL: Int32 = -8
TAPIERR_DEVICEIDUNAVAIL: Int32 = -9
TAPIERR_DEVICEINUSE: Int32 = -10
TAPIERR_DESTBUSY: Int32 = -11
TAPIERR_DESTNOANSWER: Int32 = -12
TAPIERR_DESTUNAVAIL: Int32 = -13
TAPIERR_UNKNOWNWINHANDLE: Int32 = -14
TAPIERR_UNKNOWNREQUESTID: Int32 = -15
TAPIERR_REQUESTFAILED: Int32 = -16
TAPIERR_REQUESTCANCELLED: Int32 = -17
TAPIERR_INVALPOINTER: Int32 = -18
TAPIERR_NOTADMIN: Int32 = -19
TAPIERR_MMCWRITELOCKED: Int32 = -20
TAPIERR_PROVIDERALREADYINSTALLED: Int32 = -21
TAPIERR_SCP_ALREADY_EXISTS: Int32 = -22
TAPIERR_SCP_DOES_NOT_EXIST: Int32 = -23
TAPIMAXDESTADDRESSSIZE: Int32 = 80
TAPIMAXAPPNAMESIZE: Int32 = 40
TAPIMAXCALLEDPARTYSIZE: Int32 = 40
TAPIMAXCOMMENTSIZE: Int32 = 80
TAPIMAXDEVICECLASSSIZE: Int32 = 40
TAPIMAXDEVICEIDSIZE: Int32 = 40
INTERFACEMASK: UInt32 = 16711680
DISPIDMASK: UInt32 = 65535
IDISPTAPI: UInt32 = 65536
IDISPTAPICALLCENTER: UInt32 = 131072
IDISPCALLINFO: UInt32 = 65536
IDISPBASICCALLCONTROL: UInt32 = 131072
IDISPLEGACYCALLMEDIACONTROL: UInt32 = 196608
IDISPAGGREGATEDMSPCALLOBJ: UInt32 = 262144
IDISPADDRESS: UInt32 = 65536
IDISPADDRESSCAPABILITIES: UInt32 = 131072
IDISPMEDIASUPPORT: UInt32 = 196608
IDISPADDRESSTRANSLATION: UInt32 = 262144
IDISPLEGACYADDRESSMEDIACONTROL: UInt32 = 327680
IDISPAGGREGATEDMSPADDRESSOBJ: UInt32 = 393216
IDISPPHONE: UInt32 = 65536
IDISPAPC: UInt32 = 131072
IDISPMULTITRACK: UInt32 = 65536
IDISPMEDIACONTROL: UInt32 = 131072
IDISPMEDIARECORD: UInt32 = 196608
IDISPMEDIAPLAYBACK: UInt32 = 262144
IDISPFILETRACK: UInt32 = 65536
TAPIMEDIATYPE_AUDIO: UInt32 = 8
TAPIMEDIATYPE_VIDEO: UInt32 = 32768
TAPIMEDIATYPE_DATAMODEM: UInt32 = 16
TAPIMEDIATYPE_G3FAX: UInt32 = 32
TAPIMEDIATYPE_MULTITRACK: UInt32 = 65536
TSPI_MESSAGE_BASE: UInt32 = 500
LINETSPIOPTION_NONREENTRANT: UInt32 = 1
TUISPIDLL_OBJECT_LINEID: Int32 = 1
TUISPIDLL_OBJECT_PHONEID: Int32 = 2
TUISPIDLL_OBJECT_PROVIDERID: Int32 = 3
TUISPIDLL_OBJECT_DIALOGINSTANCE: Int32 = 4
PRIVATEOBJECT_NONE: UInt32 = 1
PRIVATEOBJECT_CALLID: UInt32 = 2
PRIVATEOBJECT_LINE: UInt32 = 3
PRIVATEOBJECT_CALL: UInt32 = 4
PRIVATEOBJECT_PHONE: UInt32 = 5
PRIVATEOBJECT_ADDRESS: UInt32 = 6
LINEQOSREQUESTTYPE_SERVICELEVEL: UInt32 = 1
LINEQOSSERVICELEVEL_NEEDED: UInt32 = 1
LINEQOSSERVICELEVEL_IFAVAILABLE: UInt32 = 2
LINEQOSSERVICELEVEL_BESTEFFORT: UInt32 = 3
LINEEQOSINFO_NOQOS: UInt32 = 1
LINEEQOSINFO_ADMISSIONFAILURE: UInt32 = 2
LINEEQOSINFO_POLICYFAILURE: UInt32 = 3
LINEEQOSINFO_GENERICERROR: UInt32 = 4
TSPI_PROC_BASE: UInt32 = 500
TSPI_LINEACCEPT: UInt32 = 500
TSPI_LINEADDTOCONFERENCE: UInt32 = 501
TSPI_LINEANSWER: UInt32 = 502
TSPI_LINEBLINDTRANSFER: UInt32 = 503
TSPI_LINECLOSE: UInt32 = 504
TSPI_LINECLOSECALL: UInt32 = 505
TSPI_LINECOMPLETECALL: UInt32 = 506
TSPI_LINECOMPLETETRANSFER: UInt32 = 507
TSPI_LINECONDITIONALMEDIADETECTION: UInt32 = 508
TSPI_LINECONFIGDIALOG: UInt32 = 509
TSPI_LINEDEVSPECIFIC: UInt32 = 510
TSPI_LINEDEVSPECIFICFEATURE: UInt32 = 511
TSPI_LINEDIAL: UInt32 = 512
TSPI_LINEDROP: UInt32 = 513
TSPI_LINEFORWARD: UInt32 = 514
TSPI_LINEGATHERDIGITS: UInt32 = 515
TSPI_LINEGENERATEDIGITS: UInt32 = 516
TSPI_LINEGENERATETONE: UInt32 = 517
TSPI_LINEGETADDRESSCAPS: UInt32 = 518
TSPI_LINEGETADDRESSID: UInt32 = 519
TSPI_LINEGETADDRESSSTATUS: UInt32 = 520
TSPI_LINEGETCALLADDRESSID: UInt32 = 521
TSPI_LINEGETCALLINFO: UInt32 = 522
TSPI_LINEGETCALLSTATUS: UInt32 = 523
TSPI_LINEGETDEVCAPS: UInt32 = 524
TSPI_LINEGETDEVCONFIG: UInt32 = 525
TSPI_LINEGETEXTENSIONID: UInt32 = 526
TSPI_LINEGETICON: UInt32 = 527
TSPI_LINEGETID: UInt32 = 528
TSPI_LINEGETLINEDEVSTATUS: UInt32 = 529
TSPI_LINEGETNUMADDRESSIDS: UInt32 = 530
TSPI_LINEHOLD: UInt32 = 531
TSPI_LINEMAKECALL: UInt32 = 532
TSPI_LINEMONITORDIGITS: UInt32 = 533
TSPI_LINEMONITORMEDIA: UInt32 = 534
TSPI_LINEMONITORTONES: UInt32 = 535
TSPI_LINENEGOTIATEEXTVERSION: UInt32 = 536
TSPI_LINENEGOTIATETSPIVERSION: UInt32 = 537
TSPI_LINEOPEN: UInt32 = 538
TSPI_LINEPARK: UInt32 = 539
TSPI_LINEPICKUP: UInt32 = 540
TSPI_LINEPREPAREADDTOCONFERENCE: UInt32 = 541
TSPI_LINEREDIRECT: UInt32 = 542
TSPI_LINEREMOVEFROMCONFERENCE: UInt32 = 543
TSPI_LINESECURECALL: UInt32 = 544
TSPI_LINESELECTEXTVERSION: UInt32 = 545
TSPI_LINESENDUSERUSERINFO: UInt32 = 546
TSPI_LINESETAPPSPECIFIC: UInt32 = 547
TSPI_LINESETCALLPARAMS: UInt32 = 548
TSPI_LINESETDEFAULTMEDIADETECTION: UInt32 = 549
TSPI_LINESETDEVCONFIG: UInt32 = 550
TSPI_LINESETMEDIACONTROL: UInt32 = 551
TSPI_LINESETMEDIAMODE: UInt32 = 552
TSPI_LINESETSTATUSMESSAGES: UInt32 = 553
TSPI_LINESETTERMINAL: UInt32 = 554
TSPI_LINESETUPCONFERENCE: UInt32 = 555
TSPI_LINESETUPTRANSFER: UInt32 = 556
TSPI_LINESWAPHOLD: UInt32 = 557
TSPI_LINEUNCOMPLETECALL: UInt32 = 558
TSPI_LINEUNHOLD: UInt32 = 559
TSPI_LINEUNPARK: UInt32 = 560
TSPI_PHONECLOSE: UInt32 = 561
TSPI_PHONECONFIGDIALOG: UInt32 = 562
TSPI_PHONEDEVSPECIFIC: UInt32 = 563
TSPI_PHONEGETBUTTONINFO: UInt32 = 564
TSPI_PHONEGETDATA: UInt32 = 565
TSPI_PHONEGETDEVCAPS: UInt32 = 566
TSPI_PHONEGETDISPLAY: UInt32 = 567
TSPI_PHONEGETEXTENSIONID: UInt32 = 568
TSPI_PHONEGETGAIN: UInt32 = 569
TSPI_PHONEGETHOOKSWITCH: UInt32 = 570
TSPI_PHONEGETICON: UInt32 = 571
TSPI_PHONEGETID: UInt32 = 572
TSPI_PHONEGETLAMP: UInt32 = 573
TSPI_PHONEGETRING: UInt32 = 574
TSPI_PHONEGETSTATUS: UInt32 = 575
TSPI_PHONEGETVOLUME: UInt32 = 576
TSPI_PHONENEGOTIATEEXTVERSION: UInt32 = 577
TSPI_PHONENEGOTIATETSPIVERSION: UInt32 = 578
TSPI_PHONEOPEN: UInt32 = 579
TSPI_PHONESELECTEXTVERSION: UInt32 = 580
TSPI_PHONESETBUTTONINFO: UInt32 = 581
TSPI_PHONESETDATA: UInt32 = 582
TSPI_PHONESETDISPLAY: UInt32 = 583
TSPI_PHONESETGAIN: UInt32 = 584
TSPI_PHONESETHOOKSWITCH: UInt32 = 585
TSPI_PHONESETLAMP: UInt32 = 586
TSPI_PHONESETRING: UInt32 = 587
TSPI_PHONESETSTATUSMESSAGES: UInt32 = 588
TSPI_PHONESETVOLUME: UInt32 = 589
TSPI_PROVIDERCONFIG: UInt32 = 590
TSPI_PROVIDERINIT: UInt32 = 591
TSPI_PROVIDERINSTALL: UInt32 = 592
TSPI_PROVIDERREMOVE: UInt32 = 593
TSPI_PROVIDERSHUTDOWN: UInt32 = 594
TSPI_PROVIDERENUMDEVICES: UInt32 = 595
TSPI_LINEDROPONCLOSE: UInt32 = 596
TSPI_LINEDROPNOOWNER: UInt32 = 597
TSPI_PROVIDERCREATELINEDEVICE: UInt32 = 598
TSPI_PROVIDERCREATEPHONEDEVICE: UInt32 = 599
TSPI_LINESETCURRENTLOCATION: UInt32 = 600
TSPI_LINECONFIGDIALOGEDIT: UInt32 = 601
TSPI_LINERELEASEUSERUSERINFO: UInt32 = 602
TSPI_LINEGETCALLID: UInt32 = 603
TSPI_LINEGETCALLHUBTRACKING: UInt32 = 604
TSPI_LINESETCALLHUBTRACKING: UInt32 = 605
TSPI_LINERECEIVEMSPDATA: UInt32 = 606
TSPI_LINEMSPIDENTIFY: UInt32 = 607
TSPI_LINECREATEMSPINSTANCE: UInt32 = 608
TSPI_LINECLOSEMSPINSTANCE: UInt32 = 609
IDISPDIROBJECT: UInt32 = 65536
IDISPDIROBJCONFERENCE: UInt32 = 131072
IDISPDIROBJUSER: UInt32 = 196608
IDISPDIRECTORY: UInt32 = 65536
IDISPILSCONFIG: UInt32 = 131072
RENDBIND_AUTHENTICATE: UInt32 = 1
RENDBIND_DEFAULTDOMAINNAME: UInt32 = 2
RENDBIND_DEFAULTUSERNAME: UInt32 = 4
RENDBIND_DEFAULTPASSWORD: UInt32 = 8
RENDBIND_DEFAULTCREDENTIALS: UInt32 = 14
STRM_INITIAL: UInt32 = 0
STRM_TERMINALSELECTED: UInt32 = 1
STRM_CONFIGURED: UInt32 = 2
STRM_RUNNING: UInt32 = 4
STRM_PAUSED: UInt32 = 8
STRM_STOPPED: UInt32 = 16
TAPI_E_NOTENOUGHMEMORY: Windows.Win32.Foundation.HRESULT = -2147221503
TAPI_E_NOITEMS: Windows.Win32.Foundation.HRESULT = -2147221502
TAPI_E_NOTSUPPORTED: Windows.Win32.Foundation.HRESULT = -2147221501
TAPI_E_INVALIDMEDIATYPE: Windows.Win32.Foundation.HRESULT = -2147221500
TAPI_E_OPERATIONFAILED: Windows.Win32.Foundation.HRESULT = -2147221499
TAPI_E_ALLOCATED: Windows.Win32.Foundation.HRESULT = -2147221498
TAPI_E_CALLUNAVAIL: Windows.Win32.Foundation.HRESULT = -2147221497
TAPI_E_COMPLETIONOVERRUN: Windows.Win32.Foundation.HRESULT = -2147221496
TAPI_E_CONFERENCEFULL: Windows.Win32.Foundation.HRESULT = -2147221495
TAPI_E_DIALMODIFIERNOTSUPPORTED: Windows.Win32.Foundation.HRESULT = -2147221494
TAPI_E_INUSE: Windows.Win32.Foundation.HRESULT = -2147221493
TAPI_E_INVALADDRESS: Windows.Win32.Foundation.HRESULT = -2147221492
TAPI_E_INVALADDRESSSTATE: Windows.Win32.Foundation.HRESULT = -2147221491
TAPI_E_INVALCALLPARAMS: Windows.Win32.Foundation.HRESULT = -2147221490
TAPI_E_INVALCALLPRIVILEGE: Windows.Win32.Foundation.HRESULT = -2147221489
TAPI_E_INVALCALLSTATE: Windows.Win32.Foundation.HRESULT = -2147221488
TAPI_E_INVALCARD: Windows.Win32.Foundation.HRESULT = -2147221487
TAPI_E_INVALCOMPLETIONID: Windows.Win32.Foundation.HRESULT = -2147221486
TAPI_E_INVALCOUNTRYCODE: Windows.Win32.Foundation.HRESULT = -2147221485
TAPI_E_INVALDEVICECLASS: Windows.Win32.Foundation.HRESULT = -2147221484
TAPI_E_INVALDIALPARAMS: Windows.Win32.Foundation.HRESULT = -2147221483
TAPI_E_INVALDIGITS: Windows.Win32.Foundation.HRESULT = -2147221482
TAPI_E_INVALGROUPID: Windows.Win32.Foundation.HRESULT = -2147221481
TAPI_E_INVALLOCATION: Windows.Win32.Foundation.HRESULT = -2147221480
TAPI_E_INVALMESSAGEID: Windows.Win32.Foundation.HRESULT = -2147221479
TAPI_E_INVALPARKID: Windows.Win32.Foundation.HRESULT = -2147221478
TAPI_E_INVALRATE: Windows.Win32.Foundation.HRESULT = -2147221477
TAPI_E_INVALTIMEOUT: Windows.Win32.Foundation.HRESULT = -2147221476
TAPI_E_INVALTONE: Windows.Win32.Foundation.HRESULT = -2147221475
TAPI_E_INVALLIST: Windows.Win32.Foundation.HRESULT = -2147221474
TAPI_E_INVALMODE: Windows.Win32.Foundation.HRESULT = -2147221473
TAPI_E_NOCONFERENCE: Windows.Win32.Foundation.HRESULT = -2147221472
TAPI_E_NODEVICE: Windows.Win32.Foundation.HRESULT = -2147221471
TAPI_E_NOREQUEST: Windows.Win32.Foundation.HRESULT = -2147221470
TAPI_E_NOTOWNER: Windows.Win32.Foundation.HRESULT = -2147221469
TAPI_E_NOTREGISTERED: Windows.Win32.Foundation.HRESULT = -2147221468
TAPI_E_REQUESTOVERRUN: Windows.Win32.Foundation.HRESULT = -2147221467
TAPI_E_TARGETNOTFOUND: Windows.Win32.Foundation.HRESULT = -2147221466
TAPI_E_TARGETSELF: Windows.Win32.Foundation.HRESULT = -2147221465
TAPI_E_USERUSERINFOTOOBIG: Windows.Win32.Foundation.HRESULT = -2147221464
TAPI_E_REINIT: Windows.Win32.Foundation.HRESULT = -2147221463
TAPI_E_ADDRESSBLOCKED: Windows.Win32.Foundation.HRESULT = -2147221462
TAPI_E_BILLINGREJECTED: Windows.Win32.Foundation.HRESULT = -2147221461
TAPI_E_INVALFEATURE: Windows.Win32.Foundation.HRESULT = -2147221460
TAPI_E_INVALBUTTONLAMPID: Windows.Win32.Foundation.HRESULT = -2147221459
TAPI_E_INVALBUTTONSTATE: Windows.Win32.Foundation.HRESULT = -2147221458
TAPI_E_INVALDATAID: Windows.Win32.Foundation.HRESULT = -2147221457
TAPI_E_INVALHOOKSWITCHDEV: Windows.Win32.Foundation.HRESULT = -2147221456
TAPI_E_DROPPED: Windows.Win32.Foundation.HRESULT = -2147221455
TAPI_E_NOREQUESTRECIPIENT: Windows.Win32.Foundation.HRESULT = -2147221454
TAPI_E_REQUESTQUEUEFULL: Windows.Win32.Foundation.HRESULT = -2147221453
TAPI_E_DESTBUSY: Windows.Win32.Foundation.HRESULT = -2147221452
TAPI_E_DESTNOANSWER: Windows.Win32.Foundation.HRESULT = -2147221451
TAPI_E_DESTUNAVAIL: Windows.Win32.Foundation.HRESULT = -2147221450
TAPI_E_REQUESTFAILED: Windows.Win32.Foundation.HRESULT = -2147221449
TAPI_E_REQUESTCANCELLED: Windows.Win32.Foundation.HRESULT = -2147221448
TAPI_E_INVALPRIVILEGE: Windows.Win32.Foundation.HRESULT = -2147221447
TAPI_E_INVALIDDIRECTION: Windows.Win32.Foundation.HRESULT = -2147221446
TAPI_E_INVALIDTERMINAL: Windows.Win32.Foundation.HRESULT = -2147221445
TAPI_E_INVALIDTERMINALCLASS: Windows.Win32.Foundation.HRESULT = -2147221444
TAPI_E_NODRIVER: Windows.Win32.Foundation.HRESULT = -2147221443
TAPI_E_MAXSTREAMS: Windows.Win32.Foundation.HRESULT = -2147221442
TAPI_E_NOTERMINALSELECTED: Windows.Win32.Foundation.HRESULT = -2147221441
TAPI_E_TERMINALINUSE: Windows.Win32.Foundation.HRESULT = -2147221440
TAPI_E_NOTSTOPPED: Windows.Win32.Foundation.HRESULT = -2147221439
TAPI_E_MAXTERMINALS: Windows.Win32.Foundation.HRESULT = -2147221438
TAPI_E_INVALIDSTREAM: Windows.Win32.Foundation.HRESULT = -2147221437
TAPI_E_TIMEOUT: Windows.Win32.Foundation.HRESULT = -2147221436
TAPI_E_CALLCENTER_GROUP_REMOVED: Windows.Win32.Foundation.HRESULT = -2147221435
TAPI_E_CALLCENTER_QUEUE_REMOVED: Windows.Win32.Foundation.HRESULT = -2147221434
TAPI_E_CALLCENTER_NO_AGENT_ID: Windows.Win32.Foundation.HRESULT = -2147221433
TAPI_E_CALLCENTER_INVALAGENTID: Windows.Win32.Foundation.HRESULT = -2147221432
TAPI_E_CALLCENTER_INVALAGENTGROUP: Windows.Win32.Foundation.HRESULT = -2147221431
TAPI_E_CALLCENTER_INVALPASSWORD: Windows.Win32.Foundation.HRESULT = -2147221430
TAPI_E_CALLCENTER_INVALAGENTSTATE: Windows.Win32.Foundation.HRESULT = -2147221429
TAPI_E_CALLCENTER_INVALAGENTACTIVITY: Windows.Win32.Foundation.HRESULT = -2147221428
TAPI_E_REGISTRY_SETTING_CORRUPT: Windows.Win32.Foundation.HRESULT = -2147221427
TAPI_E_TERMINAL_PEER: Windows.Win32.Foundation.HRESULT = -2147221426
TAPI_E_PEER_NOT_SET: Windows.Win32.Foundation.HRESULT = -2147221425
TAPI_E_NOEVENT: Windows.Win32.Foundation.HRESULT = -2147221424
TAPI_E_INVALADDRESSTYPE: Windows.Win32.Foundation.HRESULT = -2147221423
TAPI_E_RESOURCEUNAVAIL: Windows.Win32.Foundation.HRESULT = -2147221422
TAPI_E_PHONENOTOPEN: Windows.Win32.Foundation.HRESULT = -2147221421
TAPI_E_CALLNOTSELECTED: Windows.Win32.Foundation.HRESULT = -2147221420
TAPI_E_WRONGEVENT: Windows.Win32.Foundation.HRESULT = -2147221419
TAPI_E_NOFORMAT: Windows.Win32.Foundation.HRESULT = -2147221418
TAPI_E_INVALIDSTREAMSTATE: Windows.Win32.Foundation.HRESULT = -2147221417
TAPI_E_WRONG_STATE: Windows.Win32.Foundation.HRESULT = -2147221416
TAPI_E_NOT_INITIALIZED: Windows.Win32.Foundation.HRESULT = -2147221415
TAPI_E_SERVICE_NOT_RUNNING: Windows.Win32.Foundation.HRESULT = -2147221414
OPENTNEFSTREAM: String = 'OpenTnefStream'
OPENTNEFSTREAMEX: String = 'OpenTnefStreamEx'
GETTNEFSTREAMCODEPAGE: String = 'GetTnefStreamCodePage'
cbDisplayName: UInt32 = 41
cbEmailName: UInt32 = 11
cbSeverName: UInt32 = 12
cbTYPE: UInt32 = 16
cbMaxIdData: UInt32 = 200
prioLow: UInt32 = 3
prioNorm: UInt32 = 2
prioHigh: UInt32 = 1
atypNull: Int32 = 0
atypFile: Int32 = 1
atypOle: Int32 = 2
atypPicture: Int32 = 3
atypMax: Int32 = 4
@winfunctype('TAPI32.dll')
def lineAccept(hCall: UInt32, lpsUserUserInfo: Windows.Win32.Foundation.PSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineAddProvider(lpszProviderFilename: Windows.Win32.Foundation.PSTR, hwndOwner: Windows.Win32.Foundation.HWND, lpdwPermanentProviderID: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineAddProviderA(lpszProviderFilename: Windows.Win32.Foundation.PSTR, hwndOwner: Windows.Win32.Foundation.HWND, lpdwPermanentProviderID: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineAddProviderW(lpszProviderFilename: Windows.Win32.Foundation.PWSTR, hwndOwner: Windows.Win32.Foundation.HWND, lpdwPermanentProviderID: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineAddToConference(hConfCall: UInt32, hConsultCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineAgentSpecific(hLine: UInt32, dwAddressID: UInt32, dwAgentExtensionIDIndex: UInt32, lpParams: c_void_p, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineAnswer(hCall: UInt32, lpsUserUserInfo: Windows.Win32.Foundation.PSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineBlindTransfer(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineBlindTransferA(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineBlindTransferW(hCall: UInt32, lpszDestAddressW: Windows.Win32.Foundation.PWSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineClose(hLine: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineCompleteCall(hCall: UInt32, lpdwCompletionID: POINTER(UInt32), dwCompletionMode: UInt32, dwMessageID: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineCompleteTransfer(hCall: UInt32, hConsultCall: UInt32, lphConfCall: POINTER(UInt32), dwTransferMode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineConfigDialog(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineConfigDialogA(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineConfigDialogW(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineConfigDialogEdit(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lpDeviceConfigIn: c_void_p, dwSize: UInt32, lpDeviceConfigOut: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineConfigDialogEditA(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lpDeviceConfigIn: c_void_p, dwSize: UInt32, lpDeviceConfigOut: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineConfigDialogEditW(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PWSTR, lpDeviceConfigIn: c_void_p, dwSize: UInt32, lpDeviceConfigOut: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineConfigProvider(hwndOwner: Windows.Win32.Foundation.HWND, dwPermanentProviderID: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineCreateAgentW(hLine: UInt32, lpszAgentID: Windows.Win32.Foundation.PWSTR, lpszAgentPIN: Windows.Win32.Foundation.PWSTR, lphAgent: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineCreateAgentA(hLine: UInt32, lpszAgentID: Windows.Win32.Foundation.PSTR, lpszAgentPIN: Windows.Win32.Foundation.PSTR, lphAgent: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineCreateAgentSessionW(hLine: UInt32, hAgent: UInt32, lpszAgentPIN: Windows.Win32.Foundation.PWSTR, dwWorkingAddressID: UInt32, lpGroupID: POINTER(Guid), lphAgentSession: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineCreateAgentSessionA(hLine: UInt32, hAgent: UInt32, lpszAgentPIN: Windows.Win32.Foundation.PSTR, dwWorkingAddressID: UInt32, lpGroupID: POINTER(Guid), lphAgentSession: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineDeallocateCall(hCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineDevSpecific(hLine: UInt32, dwAddressID: UInt32, hCall: UInt32, lpParams: c_void_p, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineDevSpecificFeature(hLine: UInt32, dwFeature: UInt32, lpParams: c_void_p, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineDial(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineDialA(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineDialW(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PWSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineDrop(hCall: UInt32, lpsUserUserInfo: Windows.Win32.Foundation.PSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineForward(hLine: UInt32, bAllAddresses: UInt32, dwAddressID: UInt32, lpForwardList: POINTER(Windows.Win32.Devices.Tapi.LINEFORWARDLIST_head), dwNumRingsNoAnswer: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineForwardA(hLine: UInt32, bAllAddresses: UInt32, dwAddressID: UInt32, lpForwardList: POINTER(Windows.Win32.Devices.Tapi.LINEFORWARDLIST_head), dwNumRingsNoAnswer: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineForwardW(hLine: UInt32, bAllAddresses: UInt32, dwAddressID: UInt32, lpForwardList: POINTER(Windows.Win32.Devices.Tapi.LINEFORWARDLIST_head), dwNumRingsNoAnswer: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGatherDigits(hCall: UInt32, dwDigitModes: UInt32, lpsDigits: Windows.Win32.Foundation.PSTR, dwNumDigits: UInt32, lpszTerminationDigits: Windows.Win32.Foundation.PSTR, dwFirstDigitTimeout: UInt32, dwInterDigitTimeout: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGatherDigitsA(hCall: UInt32, dwDigitModes: UInt32, lpsDigits: Windows.Win32.Foundation.PSTR, dwNumDigits: UInt32, lpszTerminationDigits: Windows.Win32.Foundation.PSTR, dwFirstDigitTimeout: UInt32, dwInterDigitTimeout: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGatherDigitsW(hCall: UInt32, dwDigitModes: UInt32, lpsDigits: Windows.Win32.Foundation.PWSTR, dwNumDigits: UInt32, lpszTerminationDigits: Windows.Win32.Foundation.PWSTR, dwFirstDigitTimeout: UInt32, dwInterDigitTimeout: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGenerateDigits(hCall: UInt32, dwDigitMode: UInt32, lpszDigits: Windows.Win32.Foundation.PSTR, dwDuration: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGenerateDigitsA(hCall: UInt32, dwDigitMode: UInt32, lpszDigits: Windows.Win32.Foundation.PSTR, dwDuration: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGenerateDigitsW(hCall: UInt32, dwDigitMode: UInt32, lpszDigits: Windows.Win32.Foundation.PWSTR, dwDuration: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGenerateTone(hCall: UInt32, dwToneMode: UInt32, dwDuration: UInt32, dwNumTones: UInt32, lpTones: POINTER(Windows.Win32.Devices.Tapi.LINEGENERATETONE_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressCaps(hLineApp: UInt32, dwDeviceID: UInt32, dwAddressID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpAddressCaps: POINTER(Windows.Win32.Devices.Tapi.LINEADDRESSCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressCapsA(hLineApp: UInt32, dwDeviceID: UInt32, dwAddressID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpAddressCaps: POINTER(Windows.Win32.Devices.Tapi.LINEADDRESSCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressCapsW(hLineApp: UInt32, dwDeviceID: UInt32, dwAddressID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpAddressCaps: POINTER(Windows.Win32.Devices.Tapi.LINEADDRESSCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressID(hLine: UInt32, lpdwAddressID: POINTER(UInt32), dwAddressMode: UInt32, lpsAddress: Windows.Win32.Foundation.PSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressIDA(hLine: UInt32, lpdwAddressID: POINTER(UInt32), dwAddressMode: UInt32, lpsAddress: Windows.Win32.Foundation.PSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressIDW(hLine: UInt32, lpdwAddressID: POINTER(UInt32), dwAddressMode: UInt32, lpsAddress: Windows.Win32.Foundation.PWSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressStatus(hLine: UInt32, dwAddressID: UInt32, lpAddressStatus: POINTER(Windows.Win32.Devices.Tapi.LINEADDRESSSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressStatusA(hLine: UInt32, dwAddressID: UInt32, lpAddressStatus: POINTER(Windows.Win32.Devices.Tapi.LINEADDRESSSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAddressStatusW(hLine: UInt32, dwAddressID: UInt32, lpAddressStatus: POINTER(Windows.Win32.Devices.Tapi.LINEADDRESSSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentActivityListA(hLine: UInt32, dwAddressID: UInt32, lpAgentActivityList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTACTIVITYLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentActivityListW(hLine: UInt32, dwAddressID: UInt32, lpAgentActivityList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTACTIVITYLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentCapsA(hLineApp: UInt32, dwDeviceID: UInt32, dwAddressID: UInt32, dwAppAPIVersion: UInt32, lpAgentCaps: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentCapsW(hLineApp: UInt32, dwDeviceID: UInt32, dwAddressID: UInt32, dwAppAPIVersion: UInt32, lpAgentCaps: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentGroupListA(hLine: UInt32, dwAddressID: UInt32, lpAgentGroupList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentGroupListW(hLine: UInt32, dwAddressID: UInt32, lpAgentGroupList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentInfo(hLine: UInt32, hAgent: UInt32, lpAgentInfo: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentSessionInfo(hLine: UInt32, hAgentSession: UInt32, lpAgentSessionInfo: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTSESSIONINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentSessionList(hLine: UInt32, hAgent: UInt32, lpAgentSessionList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTSESSIONLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentStatusA(hLine: UInt32, dwAddressID: UInt32, lpAgentStatus: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAgentStatusW(hLine: UInt32, dwAddressID: UInt32, lpAgentStatus: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAppPriority(lpszAppFilename: Windows.Win32.Foundation.PSTR, dwMediaMode: UInt32, lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.LINEEXTENSIONID_head), dwRequestMode: UInt32, lpExtensionName: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpdwPriority: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAppPriorityA(lpszAppFilename: Windows.Win32.Foundation.PSTR, dwMediaMode: UInt32, lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.LINEEXTENSIONID_head), dwRequestMode: UInt32, lpExtensionName: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpdwPriority: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetAppPriorityW(lpszAppFilename: Windows.Win32.Foundation.PWSTR, dwMediaMode: UInt32, lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.LINEEXTENSIONID_head), dwRequestMode: UInt32, lpExtensionName: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpdwPriority: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetCallInfo(hCall: UInt32, lpCallInfo: POINTER(Windows.Win32.Devices.Tapi.LINECALLINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetCallInfoA(hCall: UInt32, lpCallInfo: POINTER(Windows.Win32.Devices.Tapi.LINECALLINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetCallInfoW(hCall: UInt32, lpCallInfo: POINTER(Windows.Win32.Devices.Tapi.LINECALLINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetCallStatus(hCall: UInt32, lpCallStatus: POINTER(Windows.Win32.Devices.Tapi.LINECALLSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetConfRelatedCalls(hCall: UInt32, lpCallList: POINTER(Windows.Win32.Devices.Tapi.LINECALLLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetCountry(dwCountryID: UInt32, dwAPIVersion: UInt32, lpLineCountryList: POINTER(Windows.Win32.Devices.Tapi.LINECOUNTRYLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetCountryA(dwCountryID: UInt32, dwAPIVersion: UInt32, lpLineCountryList: POINTER(Windows.Win32.Devices.Tapi.LINECOUNTRYLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetCountryW(dwCountryID: UInt32, dwAPIVersion: UInt32, lpLineCountryList: POINTER(Windows.Win32.Devices.Tapi.LINECOUNTRYLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetDevCaps(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpLineDevCaps: POINTER(Windows.Win32.Devices.Tapi.LINEDEVCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetDevCapsA(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpLineDevCaps: POINTER(Windows.Win32.Devices.Tapi.LINEDEVCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetDevCapsW(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpLineDevCaps: POINTER(Windows.Win32.Devices.Tapi.LINEDEVCAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetDevConfig(dwDeviceID: UInt32, lpDeviceConfig: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetDevConfigA(dwDeviceID: UInt32, lpDeviceConfig: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetDevConfigW(dwDeviceID: UInt32, lpDeviceConfig: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetGroupListA(hLine: UInt32, lpGroupList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetGroupListW(hLine: UInt32, lpGroupList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetIcon(dwDeviceID: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lphIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetIconA(dwDeviceID: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lphIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetIconW(dwDeviceID: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PWSTR, lphIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetID(hLine: UInt32, dwAddressID: UInt32, hCall: UInt32, dwSelect: UInt32, lpDeviceID: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetIDA(hLine: UInt32, dwAddressID: UInt32, hCall: UInt32, dwSelect: UInt32, lpDeviceID: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetIDW(hLine: UInt32, dwAddressID: UInt32, hCall: UInt32, dwSelect: UInt32, lpDeviceID: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetLineDevStatus(hLine: UInt32, lpLineDevStatus: POINTER(Windows.Win32.Devices.Tapi.LINEDEVSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetLineDevStatusA(hLine: UInt32, lpLineDevStatus: POINTER(Windows.Win32.Devices.Tapi.LINEDEVSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetLineDevStatusW(hLine: UInt32, lpLineDevStatus: POINTER(Windows.Win32.Devices.Tapi.LINEDEVSTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetMessage(hLineApp: UInt32, lpMessage: POINTER(Windows.Win32.Devices.Tapi.LINEMESSAGE_head), dwTimeout: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetNewCalls(hLine: UInt32, dwAddressID: UInt32, dwSelect: UInt32, lpCallList: POINTER(Windows.Win32.Devices.Tapi.LINECALLLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetNumRings(hLine: UInt32, dwAddressID: UInt32, lpdwNumRings: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetProviderList(dwAPIVersion: UInt32, lpProviderList: POINTER(Windows.Win32.Devices.Tapi.LINEPROVIDERLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetProviderListA(dwAPIVersion: UInt32, lpProviderList: POINTER(Windows.Win32.Devices.Tapi.LINEPROVIDERLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetProviderListW(dwAPIVersion: UInt32, lpProviderList: POINTER(Windows.Win32.Devices.Tapi.LINEPROVIDERLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetProxyStatus(hLineApp: UInt32, dwDeviceID: UInt32, dwAppAPIVersion: UInt32, lpLineProxyReqestList: POINTER(Windows.Win32.Devices.Tapi.LINEPROXYREQUESTLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetQueueInfo(hLine: UInt32, dwQueueID: UInt32, lpLineQueueInfo: POINTER(Windows.Win32.Devices.Tapi.LINEQUEUEINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetQueueListA(hLine: UInt32, lpGroupID: POINTER(Guid), lpQueueList: POINTER(Windows.Win32.Devices.Tapi.LINEQUEUELIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetQueueListW(hLine: UInt32, lpGroupID: POINTER(Guid), lpQueueList: POINTER(Windows.Win32.Devices.Tapi.LINEQUEUELIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetRequest(hLineApp: UInt32, dwRequestMode: UInt32, lpRequestBuffer: c_void_p) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetRequestA(hLineApp: UInt32, dwRequestMode: UInt32, lpRequestBuffer: c_void_p) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetRequestW(hLineApp: UInt32, dwRequestMode: UInt32, lpRequestBuffer: c_void_p) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetStatusMessages(hLine: UInt32, lpdwLineStates: POINTER(UInt32), lpdwAddressStates: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetTranslateCaps(hLineApp: UInt32, dwAPIVersion: UInt32, lpTranslateCaps: POINTER(Windows.Win32.Devices.Tapi.LINETRANSLATECAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetTranslateCapsA(hLineApp: UInt32, dwAPIVersion: UInt32, lpTranslateCaps: POINTER(Windows.Win32.Devices.Tapi.LINETRANSLATECAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineGetTranslateCapsW(hLineApp: UInt32, dwAPIVersion: UInt32, lpTranslateCaps: POINTER(Windows.Win32.Devices.Tapi.LINETRANSLATECAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineHandoff(hCall: UInt32, lpszFileName: Windows.Win32.Foundation.PSTR, dwMediaMode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineHandoffA(hCall: UInt32, lpszFileName: Windows.Win32.Foundation.PSTR, dwMediaMode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineHandoffW(hCall: UInt32, lpszFileName: Windows.Win32.Foundation.PWSTR, dwMediaMode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineHold(hCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineInitialize(lphLineApp: POINTER(UInt32), hInstance: Windows.Win32.Foundation.HMODULE, lpfnCallback: Windows.Win32.Devices.Tapi.LINECALLBACK, lpszAppName: Windows.Win32.Foundation.PSTR, lpdwNumDevs: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineInitializeExA(lphLineApp: POINTER(UInt32), hInstance: Windows.Win32.Foundation.HMODULE, lpfnCallback: Windows.Win32.Devices.Tapi.LINECALLBACK, lpszFriendlyAppName: Windows.Win32.Foundation.PSTR, lpdwNumDevs: POINTER(UInt32), lpdwAPIVersion: POINTER(UInt32), lpLineInitializeExParams: POINTER(Windows.Win32.Devices.Tapi.LINEINITIALIZEEXPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineInitializeExW(lphLineApp: POINTER(UInt32), hInstance: Windows.Win32.Foundation.HMODULE, lpfnCallback: Windows.Win32.Devices.Tapi.LINECALLBACK, lpszFriendlyAppName: Windows.Win32.Foundation.PWSTR, lpdwNumDevs: POINTER(UInt32), lpdwAPIVersion: POINTER(UInt32), lpLineInitializeExParams: POINTER(Windows.Win32.Devices.Tapi.LINEINITIALIZEEXPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineMakeCall(hLine: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineMakeCallA(hLine: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineMakeCallW(hLine: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PWSTR, dwCountryCode: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineMonitorDigits(hCall: UInt32, dwDigitModes: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineMonitorMedia(hCall: UInt32, dwMediaModes: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineMonitorTones(hCall: UInt32, lpToneList: POINTER(Windows.Win32.Devices.Tapi.LINEMONITORTONE_head), dwNumEntries: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineNegotiateAPIVersion(hLineApp: UInt32, dwDeviceID: UInt32, dwAPILowVersion: UInt32, dwAPIHighVersion: UInt32, lpdwAPIVersion: POINTER(UInt32), lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.LINEEXTENSIONID_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineNegotiateExtVersion(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtLowVersion: UInt32, dwExtHighVersion: UInt32, lpdwExtVersion: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineOpen(hLineApp: UInt32, dwDeviceID: UInt32, lphLine: POINTER(UInt32), dwAPIVersion: UInt32, dwExtVersion: UInt32, dwCallbackInstance: UIntPtr, dwPrivileges: UInt32, dwMediaModes: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineOpenA(hLineApp: UInt32, dwDeviceID: UInt32, lphLine: POINTER(UInt32), dwAPIVersion: UInt32, dwExtVersion: UInt32, dwCallbackInstance: UIntPtr, dwPrivileges: UInt32, dwMediaModes: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineOpenW(hLineApp: UInt32, dwDeviceID: UInt32, lphLine: POINTER(UInt32), dwAPIVersion: UInt32, dwExtVersion: UInt32, dwCallbackInstance: UIntPtr, dwPrivileges: UInt32, dwMediaModes: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def linePark(hCall: UInt32, dwParkMode: UInt32, lpszDirAddress: Windows.Win32.Foundation.PSTR, lpNonDirAddress: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineParkA(hCall: UInt32, dwParkMode: UInt32, lpszDirAddress: Windows.Win32.Foundation.PSTR, lpNonDirAddress: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineParkW(hCall: UInt32, dwParkMode: UInt32, lpszDirAddress: Windows.Win32.Foundation.PWSTR, lpNonDirAddress: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def linePickup(hLine: UInt32, dwAddressID: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PSTR, lpszGroupID: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def linePickupA(hLine: UInt32, dwAddressID: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PSTR, lpszGroupID: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def linePickupW(hLine: UInt32, dwAddressID: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PWSTR, lpszGroupID: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def linePrepareAddToConference(hConfCall: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def linePrepareAddToConferenceA(hConfCall: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def linePrepareAddToConferenceW(hConfCall: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineProxyMessage(hLine: UInt32, hCall: UInt32, dwMsg: UInt32, dwParam1: UInt32, dwParam2: UInt32, dwParam3: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineProxyResponse(hLine: UInt32, lpProxyRequest: POINTER(Windows.Win32.Devices.Tapi.LINEPROXYREQUEST_head), dwResult: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineRedirect(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineRedirectA(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineRedirectW(hCall: UInt32, lpszDestAddress: Windows.Win32.Foundation.PWSTR, dwCountryCode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineRegisterRequestRecipient(hLineApp: UInt32, dwRegistrationInstance: UInt32, dwRequestMode: UInt32, bEnable: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineReleaseUserUserInfo(hCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineRemoveFromConference(hCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineRemoveProvider(dwPermanentProviderID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSecureCall(hCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSendUserUserInfo(hCall: UInt32, lpsUserUserInfo: Windows.Win32.Foundation.PSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAgentActivity(hLine: UInt32, dwAddressID: UInt32, dwActivityID: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAgentGroup(hLine: UInt32, dwAddressID: UInt32, lpAgentGroupList: POINTER(Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAgentMeasurementPeriod(hLine: UInt32, hAgent: UInt32, dwMeasurementPeriod: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAgentSessionState(hLine: UInt32, hAgentSession: UInt32, dwAgentSessionState: UInt32, dwNextAgentSessionState: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAgentStateEx(hLine: UInt32, hAgent: UInt32, dwAgentState: UInt32, dwNextAgentState: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAgentState(hLine: UInt32, dwAddressID: UInt32, dwAgentState: UInt32, dwNextAgentState: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAppPriority(lpszAppFilename: Windows.Win32.Foundation.PSTR, dwMediaMode: UInt32, lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.LINEEXTENSIONID_head), dwRequestMode: UInt32, lpszExtensionName: Windows.Win32.Foundation.PSTR, dwPriority: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAppPriorityA(lpszAppFilename: Windows.Win32.Foundation.PSTR, dwMediaMode: UInt32, lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.LINEEXTENSIONID_head), dwRequestMode: UInt32, lpszExtensionName: Windows.Win32.Foundation.PSTR, dwPriority: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAppPriorityW(lpszAppFilename: Windows.Win32.Foundation.PWSTR, dwMediaMode: UInt32, lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.LINEEXTENSIONID_head), dwRequestMode: UInt32, lpszExtensionName: Windows.Win32.Foundation.PWSTR, dwPriority: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetAppSpecific(hCall: UInt32, dwAppSpecific: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetCallData(hCall: UInt32, lpCallData: c_void_p, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetCallParams(hCall: UInt32, dwBearerMode: UInt32, dwMinRate: UInt32, dwMaxRate: UInt32, lpDialParams: POINTER(Windows.Win32.Devices.Tapi.LINEDIALPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetCallPrivilege(hCall: UInt32, dwCallPrivilege: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetCallQualityOfService(hCall: UInt32, lpSendingFlowspec: c_void_p, dwSendingFlowspecSize: UInt32, lpReceivingFlowspec: c_void_p, dwReceivingFlowspecSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetCallTreatment(hCall: UInt32, dwTreatment: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetCurrentLocation(hLineApp: UInt32, dwLocation: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetDevConfig(dwDeviceID: UInt32, lpDeviceConfig: c_void_p, dwSize: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetDevConfigA(dwDeviceID: UInt32, lpDeviceConfig: c_void_p, dwSize: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetDevConfigW(dwDeviceID: UInt32, lpDeviceConfig: c_void_p, dwSize: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetLineDevStatus(hLine: UInt32, dwStatusToChange: UInt32, fStatus: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetMediaControl(hLine: UInt32, dwAddressID: UInt32, hCall: UInt32, dwSelect: UInt32, lpDigitList: POINTER(Windows.Win32.Devices.Tapi.LINEMEDIACONTROLDIGIT_head), dwDigitNumEntries: UInt32, lpMediaList: POINTER(Windows.Win32.Devices.Tapi.LINEMEDIACONTROLMEDIA_head), dwMediaNumEntries: UInt32, lpToneList: POINTER(Windows.Win32.Devices.Tapi.LINEMEDIACONTROLTONE_head), dwToneNumEntries: UInt32, lpCallStateList: POINTER(Windows.Win32.Devices.Tapi.LINEMEDIACONTROLCALLSTATE_head), dwCallStateNumEntries: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetMediaMode(hCall: UInt32, dwMediaModes: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetQueueMeasurementPeriod(hLine: UInt32, dwQueueID: UInt32, dwMeasurementPeriod: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetNumRings(hLine: UInt32, dwAddressID: UInt32, dwNumRings: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetStatusMessages(hLine: UInt32, dwLineStates: UInt32, dwAddressStates: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetTerminal(hLine: UInt32, dwAddressID: UInt32, hCall: UInt32, dwSelect: UInt32, dwTerminalModes: UInt32, dwTerminalID: UInt32, bEnable: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetTollList(hLineApp: UInt32, dwDeviceID: UInt32, lpszAddressIn: Windows.Win32.Foundation.PSTR, dwTollListOption: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetTollListA(hLineApp: UInt32, dwDeviceID: UInt32, lpszAddressIn: Windows.Win32.Foundation.PSTR, dwTollListOption: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetTollListW(hLineApp: UInt32, dwDeviceID: UInt32, lpszAddressInW: Windows.Win32.Foundation.PWSTR, dwTollListOption: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetupConference(hCall: UInt32, hLine: UInt32, lphConfCall: POINTER(UInt32), lphConsultCall: POINTER(UInt32), dwNumParties: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetupConferenceA(hCall: UInt32, hLine: UInt32, lphConfCall: POINTER(UInt32), lphConsultCall: POINTER(UInt32), dwNumParties: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetupConferenceW(hCall: UInt32, hLine: UInt32, lphConfCall: POINTER(UInt32), lphConsultCall: POINTER(UInt32), dwNumParties: UInt32, lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetupTransfer(hCall: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetupTransferA(hCall: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSetupTransferW(hCall: UInt32, lphConsultCall: POINTER(UInt32), lpCallParams: POINTER(Windows.Win32.Devices.Tapi.LINECALLPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineShutdown(hLineApp: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineSwapHold(hActiveCall: UInt32, hHeldCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineTranslateAddress(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, lpszAddressIn: Windows.Win32.Foundation.PSTR, dwCard: UInt32, dwTranslateOptions: UInt32, lpTranslateOutput: POINTER(Windows.Win32.Devices.Tapi.LINETRANSLATEOUTPUT_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineTranslateAddressA(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, lpszAddressIn: Windows.Win32.Foundation.PSTR, dwCard: UInt32, dwTranslateOptions: UInt32, lpTranslateOutput: POINTER(Windows.Win32.Devices.Tapi.LINETRANSLATEOUTPUT_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineTranslateAddressW(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, lpszAddressIn: Windows.Win32.Foundation.PWSTR, dwCard: UInt32, dwTranslateOptions: UInt32, lpTranslateOutput: POINTER(Windows.Win32.Devices.Tapi.LINETRANSLATEOUTPUT_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineTranslateDialog(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszAddressIn: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineTranslateDialogA(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszAddressIn: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineTranslateDialogW(hLineApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszAddressIn: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineUncompleteCall(hLine: UInt32, dwCompletionID: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineUnhold(hCall: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineUnpark(hLine: UInt32, dwAddressID: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineUnparkA(hLine: UInt32, dwAddressID: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def lineUnparkW(hLine: UInt32, dwAddressID: UInt32, lphCall: POINTER(UInt32), lpszDestAddress: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneClose(hPhone: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneConfigDialog(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneConfigDialogA(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneConfigDialogW(dwDeviceID: UInt32, hwndOwner: Windows.Win32.Foundation.HWND, lpszDeviceClass: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneDevSpecific(hPhone: UInt32, lpParams: c_void_p, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetButtonInfo(hPhone: UInt32, dwButtonLampID: UInt32, lpButtonInfo: POINTER(Windows.Win32.Devices.Tapi.PHONEBUTTONINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetButtonInfoA(hPhone: UInt32, dwButtonLampID: UInt32, lpButtonInfo: POINTER(Windows.Win32.Devices.Tapi.PHONEBUTTONINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetButtonInfoW(hPhone: UInt32, dwButtonLampID: UInt32, lpButtonInfo: POINTER(Windows.Win32.Devices.Tapi.PHONEBUTTONINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetData(hPhone: UInt32, dwDataID: UInt32, lpData: c_void_p, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetDevCaps(hPhoneApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpPhoneCaps: POINTER(Windows.Win32.Devices.Tapi.PHONECAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetDevCapsA(hPhoneApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpPhoneCaps: POINTER(Windows.Win32.Devices.Tapi.PHONECAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetDevCapsW(hPhoneApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtVersion: UInt32, lpPhoneCaps: POINTER(Windows.Win32.Devices.Tapi.PHONECAPS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetDisplay(hPhone: UInt32, lpDisplay: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetGain(hPhone: UInt32, dwHookSwitchDev: UInt32, lpdwGain: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetHookSwitch(hPhone: UInt32, lpdwHookSwitchDevs: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetIcon(dwDeviceID: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lphIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetIconA(dwDeviceID: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lphIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetIconW(dwDeviceID: UInt32, lpszDeviceClass: Windows.Win32.Foundation.PWSTR, lphIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetID(hPhone: UInt32, lpDeviceID: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetIDA(hPhone: UInt32, lpDeviceID: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetIDW(hPhone: UInt32, lpDeviceID: POINTER(Windows.Win32.Devices.Tapi.VARSTRING_head), lpszDeviceClass: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetLamp(hPhone: UInt32, dwButtonLampID: UInt32, lpdwLampMode: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetMessage(hPhoneApp: UInt32, lpMessage: POINTER(Windows.Win32.Devices.Tapi.PHONEMESSAGE_head), dwTimeout: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetRing(hPhone: UInt32, lpdwRingMode: POINTER(UInt32), lpdwVolume: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetStatus(hPhone: UInt32, lpPhoneStatus: POINTER(Windows.Win32.Devices.Tapi.PHONESTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetStatusA(hPhone: UInt32, lpPhoneStatus: POINTER(Windows.Win32.Devices.Tapi.PHONESTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetStatusW(hPhone: UInt32, lpPhoneStatus: POINTER(Windows.Win32.Devices.Tapi.PHONESTATUS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetStatusMessages(hPhone: UInt32, lpdwPhoneStates: POINTER(UInt32), lpdwButtonModes: POINTER(UInt32), lpdwButtonStates: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneGetVolume(hPhone: UInt32, dwHookSwitchDev: UInt32, lpdwVolume: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneInitialize(lphPhoneApp: POINTER(UInt32), hInstance: Windows.Win32.Foundation.HMODULE, lpfnCallback: Windows.Win32.Devices.Tapi.PHONECALLBACK, lpszAppName: Windows.Win32.Foundation.PSTR, lpdwNumDevs: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneInitializeExA(lphPhoneApp: POINTER(UInt32), hInstance: Windows.Win32.Foundation.HMODULE, lpfnCallback: Windows.Win32.Devices.Tapi.PHONECALLBACK, lpszFriendlyAppName: Windows.Win32.Foundation.PSTR, lpdwNumDevs: POINTER(UInt32), lpdwAPIVersion: POINTER(UInt32), lpPhoneInitializeExParams: POINTER(Windows.Win32.Devices.Tapi.PHONEINITIALIZEEXPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneInitializeExW(lphPhoneApp: POINTER(UInt32), hInstance: Windows.Win32.Foundation.HMODULE, lpfnCallback: Windows.Win32.Devices.Tapi.PHONECALLBACK, lpszFriendlyAppName: Windows.Win32.Foundation.PWSTR, lpdwNumDevs: POINTER(UInt32), lpdwAPIVersion: POINTER(UInt32), lpPhoneInitializeExParams: POINTER(Windows.Win32.Devices.Tapi.PHONEINITIALIZEEXPARAMS_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneNegotiateAPIVersion(hPhoneApp: UInt32, dwDeviceID: UInt32, dwAPILowVersion: UInt32, dwAPIHighVersion: UInt32, lpdwAPIVersion: POINTER(UInt32), lpExtensionID: POINTER(Windows.Win32.Devices.Tapi.PHONEEXTENSIONID_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneNegotiateExtVersion(hPhoneApp: UInt32, dwDeviceID: UInt32, dwAPIVersion: UInt32, dwExtLowVersion: UInt32, dwExtHighVersion: UInt32, lpdwExtVersion: POINTER(UInt32)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneOpen(hPhoneApp: UInt32, dwDeviceID: UInt32, lphPhone: POINTER(UInt32), dwAPIVersion: UInt32, dwExtVersion: UInt32, dwCallbackInstance: UIntPtr, dwPrivilege: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetButtonInfo(hPhone: UInt32, dwButtonLampID: UInt32, lpButtonInfo: POINTER(Windows.Win32.Devices.Tapi.PHONEBUTTONINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetButtonInfoA(hPhone: UInt32, dwButtonLampID: UInt32, lpButtonInfo: POINTER(Windows.Win32.Devices.Tapi.PHONEBUTTONINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetButtonInfoW(hPhone: UInt32, dwButtonLampID: UInt32, lpButtonInfo: POINTER(Windows.Win32.Devices.Tapi.PHONEBUTTONINFO_head)) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetData(hPhone: UInt32, dwDataID: UInt32, lpData: c_void_p, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetDisplay(hPhone: UInt32, dwRow: UInt32, dwColumn: UInt32, lpsDisplay: Windows.Win32.Foundation.PSTR, dwSize: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetGain(hPhone: UInt32, dwHookSwitchDev: UInt32, dwGain: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetHookSwitch(hPhone: UInt32, dwHookSwitchDevs: UInt32, dwHookSwitchMode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetLamp(hPhone: UInt32, dwButtonLampID: UInt32, dwLampMode: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetRing(hPhone: UInt32, dwRingMode: UInt32, dwVolume: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetStatusMessages(hPhone: UInt32, dwPhoneStates: UInt32, dwButtonModes: UInt32, dwButtonStates: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneSetVolume(hPhone: UInt32, dwHookSwitchDev: UInt32, dwVolume: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def phoneShutdown(hPhoneApp: UInt32) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiGetLocationInfo(lpszCountryCode: Windows.Win32.Foundation.PSTR, lpszCityCode: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiGetLocationInfoA(lpszCountryCode: Windows.Win32.Foundation.PSTR, lpszCityCode: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiGetLocationInfoW(lpszCountryCodeW: Windows.Win32.Foundation.PWSTR, lpszCityCodeW: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiRequestDrop(hwnd: Windows.Win32.Foundation.HWND, wRequestID: Windows.Win32.Foundation.WPARAM) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiRequestMakeCall(lpszDestAddress: Windows.Win32.Foundation.PSTR, lpszAppName: Windows.Win32.Foundation.PSTR, lpszCalledParty: Windows.Win32.Foundation.PSTR, lpszComment: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiRequestMakeCallA(lpszDestAddress: Windows.Win32.Foundation.PSTR, lpszAppName: Windows.Win32.Foundation.PSTR, lpszCalledParty: Windows.Win32.Foundation.PSTR, lpszComment: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiRequestMakeCallW(lpszDestAddress: Windows.Win32.Foundation.PWSTR, lpszAppName: Windows.Win32.Foundation.PWSTR, lpszCalledParty: Windows.Win32.Foundation.PWSTR, lpszComment: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiRequestMediaCall(hwnd: Windows.Win32.Foundation.HWND, wRequestID: Windows.Win32.Foundation.WPARAM, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lpDeviceID: Windows.Win32.Foundation.PSTR, dwSize: UInt32, dwSecure: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, lpszAppName: Windows.Win32.Foundation.PSTR, lpszCalledParty: Windows.Win32.Foundation.PSTR, lpszComment: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiRequestMediaCallA(hwnd: Windows.Win32.Foundation.HWND, wRequestID: Windows.Win32.Foundation.WPARAM, lpszDeviceClass: Windows.Win32.Foundation.PSTR, lpDeviceID: Windows.Win32.Foundation.PSTR, dwSize: UInt32, dwSecure: UInt32, lpszDestAddress: Windows.Win32.Foundation.PSTR, lpszAppName: Windows.Win32.Foundation.PSTR, lpszCalledParty: Windows.Win32.Foundation.PSTR, lpszComment: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('TAPI32.dll')
def tapiRequestMediaCallW(hwnd: Windows.Win32.Foundation.HWND, wRequestID: Windows.Win32.Foundation.WPARAM, lpszDeviceClass: Windows.Win32.Foundation.PWSTR, lpDeviceID: Windows.Win32.Foundation.PWSTR, dwSize: UInt32, dwSecure: UInt32, lpszDestAddress: Windows.Win32.Foundation.PWSTR, lpszAppName: Windows.Win32.Foundation.PWSTR, lpszCalledParty: Windows.Win32.Foundation.PWSTR, lpszComment: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('MAPI32.dll')
def OpenTnefStream(lpvSupport: c_void_p, lpStream: Windows.Win32.System.Com.IStream_head, lpszStreamName: POINTER(SByte), ulFlags: UInt32, lpMessage: Windows.Win32.System.AddressBook.IMessage_head, wKeyVal: UInt16, lppTNEF: POINTER(Windows.Win32.Devices.Tapi.ITnef_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('MAPI32.dll')
def OpenTnefStreamEx(lpvSupport: c_void_p, lpStream: Windows.Win32.System.Com.IStream_head, lpszStreamName: POINTER(SByte), ulFlags: UInt32, lpMessage: Windows.Win32.System.AddressBook.IMessage_head, wKeyVal: UInt16, lpAdressBook: Windows.Win32.System.AddressBook.IAddrBook_head, lppTNEF: POINTER(Windows.Win32.Devices.Tapi.ITnef_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('MAPI32.dll')
def GetTnefStreamCodepage(lpStream: Windows.Win32.System.Com.IStream_head, lpulCodepage: POINTER(UInt32), lpulSubCodepage: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
CALLHUB_EVENT = Int32
CHE_CALLJOIN: CALLHUB_EVENT = 0
CHE_CALLLEAVE: CALLHUB_EVENT = 1
CHE_CALLHUBNEW: CALLHUB_EVENT = 2
CHE_CALLHUBIDLE: CALLHUB_EVENT = 3
CHE_LASTITEM: CALLHUB_EVENT = 3
CALLHUB_STATE = Int32
CHS_ACTIVE: CALLHUB_STATE = 0
CHS_IDLE: CALLHUB_STATE = 1
CALLINFOCHANGE_CAUSE = Int32
CIC_OTHER: CALLINFOCHANGE_CAUSE = 0
CIC_DEVSPECIFIC: CALLINFOCHANGE_CAUSE = 1
CIC_BEARERMODE: CALLINFOCHANGE_CAUSE = 2
CIC_RATE: CALLINFOCHANGE_CAUSE = 3
CIC_APPSPECIFIC: CALLINFOCHANGE_CAUSE = 4
CIC_CALLID: CALLINFOCHANGE_CAUSE = 5
CIC_RELATEDCALLID: CALLINFOCHANGE_CAUSE = 6
CIC_ORIGIN: CALLINFOCHANGE_CAUSE = 7
CIC_REASON: CALLINFOCHANGE_CAUSE = 8
CIC_COMPLETIONID: CALLINFOCHANGE_CAUSE = 9
CIC_NUMOWNERINCR: CALLINFOCHANGE_CAUSE = 10
CIC_NUMOWNERDECR: CALLINFOCHANGE_CAUSE = 11
CIC_NUMMONITORS: CALLINFOCHANGE_CAUSE = 12
CIC_TRUNK: CALLINFOCHANGE_CAUSE = 13
CIC_CALLERID: CALLINFOCHANGE_CAUSE = 14
CIC_CALLEDID: CALLINFOCHANGE_CAUSE = 15
CIC_CONNECTEDID: CALLINFOCHANGE_CAUSE = 16
CIC_REDIRECTIONID: CALLINFOCHANGE_CAUSE = 17
CIC_REDIRECTINGID: CALLINFOCHANGE_CAUSE = 18
CIC_USERUSERINFO: CALLINFOCHANGE_CAUSE = 19
CIC_HIGHLEVELCOMP: CALLINFOCHANGE_CAUSE = 20
CIC_LOWLEVELCOMP: CALLINFOCHANGE_CAUSE = 21
CIC_CHARGINGINFO: CALLINFOCHANGE_CAUSE = 22
CIC_TREATMENT: CALLINFOCHANGE_CAUSE = 23
CIC_CALLDATA: CALLINFOCHANGE_CAUSE = 24
CIC_PRIVILEGE: CALLINFOCHANGE_CAUSE = 25
CIC_MEDIATYPE: CALLINFOCHANGE_CAUSE = 26
CIC_LASTITEM: CALLINFOCHANGE_CAUSE = 26
CALLINFO_BUFFER = Int32
CIB_USERUSERINFO: CALLINFO_BUFFER = 0
CIB_DEVSPECIFICBUFFER: CALLINFO_BUFFER = 1
CIB_CALLDATABUFFER: CALLINFO_BUFFER = 2
CIB_CHARGINGINFOBUFFER: CALLINFO_BUFFER = 3
CIB_HIGHLEVELCOMPATIBILITYBUFFER: CALLINFO_BUFFER = 4
CIB_LOWLEVELCOMPATIBILITYBUFFER: CALLINFO_BUFFER = 5
CALLINFO_LONG = Int32
CIL_MEDIATYPESAVAILABLE: CALLINFO_LONG = 0
CIL_BEARERMODE: CALLINFO_LONG = 1
CIL_CALLERIDADDRESSTYPE: CALLINFO_LONG = 2
CIL_CALLEDIDADDRESSTYPE: CALLINFO_LONG = 3
CIL_CONNECTEDIDADDRESSTYPE: CALLINFO_LONG = 4
CIL_REDIRECTIONIDADDRESSTYPE: CALLINFO_LONG = 5
CIL_REDIRECTINGIDADDRESSTYPE: CALLINFO_LONG = 6
CIL_ORIGIN: CALLINFO_LONG = 7
CIL_REASON: CALLINFO_LONG = 8
CIL_APPSPECIFIC: CALLINFO_LONG = 9
CIL_CALLPARAMSFLAGS: CALLINFO_LONG = 10
CIL_CALLTREATMENT: CALLINFO_LONG = 11
CIL_MINRATE: CALLINFO_LONG = 12
CIL_MAXRATE: CALLINFO_LONG = 13
CIL_COUNTRYCODE: CALLINFO_LONG = 14
CIL_CALLID: CALLINFO_LONG = 15
CIL_RELATEDCALLID: CALLINFO_LONG = 16
CIL_COMPLETIONID: CALLINFO_LONG = 17
CIL_NUMBEROFOWNERS: CALLINFO_LONG = 18
CIL_NUMBEROFMONITORS: CALLINFO_LONG = 19
CIL_TRUNK: CALLINFO_LONG = 20
CIL_RATE: CALLINFO_LONG = 21
CIL_GENERATEDIGITDURATION: CALLINFO_LONG = 22
CIL_MONITORDIGITMODES: CALLINFO_LONG = 23
CIL_MONITORMEDIAMODES: CALLINFO_LONG = 24
CALLINFO_STRING = Int32
CIS_CALLERIDNAME: CALLINFO_STRING = 0
CIS_CALLERIDNUMBER: CALLINFO_STRING = 1
CIS_CALLEDIDNAME: CALLINFO_STRING = 2
CIS_CALLEDIDNUMBER: CALLINFO_STRING = 3
CIS_CONNECTEDIDNAME: CALLINFO_STRING = 4
CIS_CONNECTEDIDNUMBER: CALLINFO_STRING = 5
CIS_REDIRECTIONIDNAME: CALLINFO_STRING = 6
CIS_REDIRECTIONIDNUMBER: CALLINFO_STRING = 7
CIS_REDIRECTINGIDNAME: CALLINFO_STRING = 8
CIS_REDIRECTINGIDNUMBER: CALLINFO_STRING = 9
CIS_CALLEDPARTYFRIENDLYNAME: CALLINFO_STRING = 10
CIS_COMMENT: CALLINFO_STRING = 11
CIS_DISPLAYABLEADDRESS: CALLINFO_STRING = 12
CIS_CALLINGPARTYID: CALLINFO_STRING = 13
CALL_MEDIA_EVENT = Int32
CME_NEW_STREAM: CALL_MEDIA_EVENT = 0
CME_STREAM_FAIL: CALL_MEDIA_EVENT = 1
CME_TERMINAL_FAIL: CALL_MEDIA_EVENT = 2
CME_STREAM_NOT_USED: CALL_MEDIA_EVENT = 3
CME_STREAM_ACTIVE: CALL_MEDIA_EVENT = 4
CME_STREAM_INACTIVE: CALL_MEDIA_EVENT = 5
CME_LASTITEM: CALL_MEDIA_EVENT = 5
CALL_MEDIA_EVENT_CAUSE = Int32
CMC_UNKNOWN: CALL_MEDIA_EVENT_CAUSE = 0
CMC_BAD_DEVICE: CALL_MEDIA_EVENT_CAUSE = 1
CMC_CONNECT_FAIL: CALL_MEDIA_EVENT_CAUSE = 2
CMC_LOCAL_REQUEST: CALL_MEDIA_EVENT_CAUSE = 3
CMC_REMOTE_REQUEST: CALL_MEDIA_EVENT_CAUSE = 4
CMC_MEDIA_TIMEOUT: CALL_MEDIA_EVENT_CAUSE = 5
CMC_MEDIA_RECOVERED: CALL_MEDIA_EVENT_CAUSE = 6
CMC_QUALITY_OF_SERVICE: CALL_MEDIA_EVENT_CAUSE = 7
CALL_NOTIFICATION_EVENT = Int32
CNE_OWNER: CALL_NOTIFICATION_EVENT = 0
CNE_MONITOR: CALL_NOTIFICATION_EVENT = 1
CNE_LASTITEM: CALL_NOTIFICATION_EVENT = 1
CALL_PRIVILEGE = Int32
CP_OWNER: CALL_PRIVILEGE = 0
CP_MONITOR: CALL_PRIVILEGE = 1
CALL_STATE = Int32
CS_IDLE: CALL_STATE = 0
CS_INPROGRESS: CALL_STATE = 1
CS_CONNECTED: CALL_STATE = 2
CS_DISCONNECTED: CALL_STATE = 3
CS_OFFERING: CALL_STATE = 4
CS_HOLD: CALL_STATE = 5
CS_QUEUED: CALL_STATE = 6
CS_LASTITEM: CALL_STATE = 6
CALL_STATE_EVENT_CAUSE = Int32
CEC_NONE: CALL_STATE_EVENT_CAUSE = 0
CEC_DISCONNECT_NORMAL: CALL_STATE_EVENT_CAUSE = 1
CEC_DISCONNECT_BUSY: CALL_STATE_EVENT_CAUSE = 2
CEC_DISCONNECT_BADADDRESS: CALL_STATE_EVENT_CAUSE = 3
CEC_DISCONNECT_NOANSWER: CALL_STATE_EVENT_CAUSE = 4
CEC_DISCONNECT_CANCELLED: CALL_STATE_EVENT_CAUSE = 5
CEC_DISCONNECT_REJECTED: CALL_STATE_EVENT_CAUSE = 6
CEC_DISCONNECT_FAILED: CALL_STATE_EVENT_CAUSE = 7
CEC_DISCONNECT_BLOCKED: CALL_STATE_EVENT_CAUSE = 8
DIRECTORY_OBJECT_TYPE = Int32
OT_CONFERENCE: DIRECTORY_OBJECT_TYPE = 1
OT_USER: DIRECTORY_OBJECT_TYPE = 2
DIRECTORY_TYPE = Int32
DT_NTDS: DIRECTORY_TYPE = 1
DT_ILS: DIRECTORY_TYPE = 2
DISCONNECT_CODE = Int32
DC_NORMAL: DISCONNECT_CODE = 0
DC_NOANSWER: DISCONNECT_CODE = 1
DC_REJECTED: DISCONNECT_CODE = 2
class DTR(EasyCastStructure):
    wYear: UInt16
    wMonth: UInt16
    wDay: UInt16
    wHour: UInt16
    wMinute: UInt16
    wSecond: UInt16
    wDayOfWeek: UInt16
    _pack_ = 1
DispatchMapper = Guid('e9225296-c759-11d1-a0-2b-00-c0-4f-b6-80-9f')
FINISH_MODE = Int32
FM_ASTRANSFER: FINISH_MODE = 0
FM_ASCONFERENCE: FINISH_MODE = 1
FT_STATE_EVENT_CAUSE = Int32
FTEC_NORMAL: FT_STATE_EVENT_CAUSE = 0
FTEC_END_OF_FILE: FT_STATE_EVENT_CAUSE = 1
FTEC_READ_ERROR: FT_STATE_EVENT_CAUSE = 2
FTEC_WRITE_ERROR: FT_STATE_EVENT_CAUSE = 3
FULLDUPLEX_SUPPORT = Int32
FDS_SUPPORTED: FULLDUPLEX_SUPPORT = 0
FDS_NOTSUPPORTED: FULLDUPLEX_SUPPORT = 1
FDS_UNKNOWN: FULLDUPLEX_SUPPORT = 2
HDRVCALL = IntPtr
HDRVDIALOGINSTANCE = IntPtr
HDRVLINE = IntPtr
HDRVMSPLINE = IntPtr
HDRVPHONE = IntPtr
HPROVIDER = IntPtr
HTAPICALL = IntPtr
HTAPILINE = IntPtr
HTAPIPHONE = IntPtr
class IEnumACDGroup(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('5afc3157-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITACDGroup_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumACDGroup_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumAddress(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('1666fca1-9363-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITAddress_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumAgent(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('5afc314d-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITAgent_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumAgent_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumAgentHandler(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('587e8c28-9802-11d1-a0-a4-00-80-5f-c1-47-d3')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITAgentHandler_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumAgentHandler_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumAgentSession(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('5afc314e-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITAgentSession_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumAgentSession_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumBstr(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('35372049-0bc6-11d2-a0-33-00-c0-4f-b6-80-9f')
    @commethod(3)
    def Next(self, celt: UInt32, ppStrings: POINTER(Windows.Win32.Foundation.BSTR), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumBstr_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumCall(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('ae269cf6-935e-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumCall_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumCallHub(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('a3c15450-5b92-11d1-8f-4e-00-c0-4f-b6-80-9f')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITCallHub_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumCallHub_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumCallingCard(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('0c4d8f02-8ddb-11d1-a0-9e-00-80-5f-c1-47-d3')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITCallingCard_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumCallingCard_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumDialableAddrs(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('34621d70-6cff-11d1-af-f7-00-c0-4f-c3-1f-ee')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Foundation.BSTR), pcFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumDialableAddrs_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumDirectory(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('34621d6d-6cff-11d1-af-f7-00-c0-4f-c3-1f-ee')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITDirectory_head), pcFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumDirectory_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumDirectoryObject(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('06c9b64a-306d-11d1-97-74-00-c0-4f-d9-1a-c0')
    @commethod(3)
    def Next(self, celt: UInt32, pVal: POINTER(Windows.Win32.Devices.Tapi.ITDirectoryObject_head), pcFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumDirectoryObject_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumLocation(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('0c4d8f01-8ddb-11d1-a0-9e-00-80-5f-c1-47-d3')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITLocationInfo_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumLocation_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumMcastScope(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('df0daf09-a289-11d1-86-97-00-60-08-b0-e5-d2')
    @commethod(3)
    def Next(self, celt: UInt32, ppScopes: POINTER(Windows.Win32.Devices.Tapi.IMcastScope_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumMcastScope_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumPhone(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('f15b7669-4780-4595-8c-89-fb-36-9c-8c-f7-aa')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITPhone_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumPluggableSuperclassInfo(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('e9586a80-89e6-4cff-93-1d-47-8d-57-51-f4-c0')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITPluggableTerminalSuperclassInfo_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumPluggableSuperclassInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumPluggableTerminalClassInfo(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('4567450c-dbee-4e3f-aa-f5-37-bf-9e-bf-5e-29')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITPluggableTerminalClassInfo_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumPluggableTerminalClassInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumQueue(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('5afc3158-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITQueue_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumQueue_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumStream(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('ee3bd606-3868-11d2-a0-45-00-c0-4f-b6-80-9f')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITStream_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumSubStream(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('ee3bd609-3868-11d2-a0-45-00-c0-4f-b6-80-9f')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITSubStream_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumSubStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumTerminal(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('ae269cf4-935e-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(3)
    def Next(self, celt: UInt32, ppElements: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IEnumTerminalClass(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('ae269cf5-935e-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(3)
    def Next(self, celt: UInt32, pElements: POINTER(Guid), pceltFetched: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Reset(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Skip(self, celt: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Clone(self, ppEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminalClass_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IMcastAddressAllocation(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('df0daef1-a289-11d1-86-97-00-60-08-b0-e5-d2')
    @commethod(7)
    def get_Scopes(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def EnumerateScopes(self, ppEnumMcastScope: POINTER(Windows.Win32.Devices.Tapi.IEnumMcastScope_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def RequestAddress(self, pScope: Windows.Win32.Devices.Tapi.IMcastScope_head, LeaseStartTime: Double, LeaseStopTime: Double, NumAddresses: Int32, ppLeaseResponse: POINTER(Windows.Win32.Devices.Tapi.IMcastLeaseInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def RenewAddress(self, lReserved: Int32, pRenewRequest: Windows.Win32.Devices.Tapi.IMcastLeaseInfo_head, ppRenewResponse: POINTER(Windows.Win32.Devices.Tapi.IMcastLeaseInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def ReleaseAddress(self, pReleaseRequest: Windows.Win32.Devices.Tapi.IMcastLeaseInfo_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def CreateLeaseInfo(self, LeaseStartTime: Double, LeaseStopTime: Double, dwNumAddresses: UInt32, ppAddresses: POINTER(Windows.Win32.Foundation.PWSTR), pRequestID: Windows.Win32.Foundation.PWSTR, pServerAddress: Windows.Win32.Foundation.PWSTR, ppReleaseRequest: POINTER(Windows.Win32.Devices.Tapi.IMcastLeaseInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def CreateLeaseInfoFromVariant(self, LeaseStartTime: Double, LeaseStopTime: Double, vAddresses: Windows.Win32.System.Variant.VARIANT, pRequestID: Windows.Win32.Foundation.BSTR, pServerAddress: Windows.Win32.Foundation.BSTR, ppReleaseRequest: POINTER(Windows.Win32.Devices.Tapi.IMcastLeaseInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IMcastLeaseInfo(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('df0daefd-a289-11d1-86-97-00-60-08-b0-e5-d2')
    @commethod(7)
    def get_RequestID(self, ppRequestID: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_LeaseStartTime(self, pTime: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_LeaseStartTime(self, time: Double) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_LeaseStopTime(self, pTime: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def put_LeaseStopTime(self, time: Double) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_AddressCount(self, pCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_ServerAddress(self, ppAddress: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_TTL(self, pTTL: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_Addresses(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def EnumerateAddresses(self, ppEnumAddresses: POINTER(Windows.Win32.Devices.Tapi.IEnumBstr_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IMcastScope(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('df0daef4-a289-11d1-86-97-00-60-08-b0-e5-d2')
    @commethod(7)
    def get_ScopeID(self, pID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_ServerID(self, pID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_InterfaceID(self, pID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_ScopeDescription(self, ppDescription: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_TTL(self, pTTL: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITACDGroup(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5afc3148-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_Name(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def EnumerateQueues(self, ppEnumQueue: POINTER(Windows.Win32.Devices.Tapi.IEnumQueue_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Queues(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITACDGroupEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('297f3032-bd11-11d1-a0-a7-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_Group(self, ppGroup: POINTER(Windows.Win32.Devices.Tapi.ITACDGroup_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.ACDGROUP_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAMMediaFormat(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('0364eb00-4a77-11d1-a6-71-00-60-97-c9-a2-e8')
    @commethod(3)
    def get_MediaFormat(self, ppmt: POINTER(POINTER(Windows.Win32.Media.MediaFoundation.AM_MEDIA_TYPE_head))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def put_MediaFormat(self, pmt: POINTER(Windows.Win32.Media.MediaFoundation.AM_MEDIA_TYPE_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITASRTerminalEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ee016a02-4fa9-467c-93-3f-5a-15-b1-23-77-d7')
    @commethod(7)
    def get_Terminal(self, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Error(self, phrErrorCode: POINTER(Windows.Win32.Foundation.HRESULT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAddress(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b1efc386-9355-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(7)
    def get_State(self, pAddressState: POINTER(Windows.Win32.Devices.Tapi.ADDRESS_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_AddressName(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_ServiceProviderName(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_TAPIObject(self, ppTapiObject: POINTER(Windows.Win32.Devices.Tapi.ITTAPI_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def CreateCall(self, pDestAddress: Windows.Win32.Foundation.BSTR, lAddressType: Int32, lMediaTypes: Int32, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITBasicCallControl_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Calls(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def EnumerateCalls(self, ppCallEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumCall_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_DialableAddress(self, pDialableAddress: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def CreateForwardInfoObject(self, ppForwardInfo: POINTER(Windows.Win32.Devices.Tapi.ITForwardInformation_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def Forward(self, pForwardInfo: Windows.Win32.Devices.Tapi.ITForwardInformation_head, pCall: Windows.Win32.Devices.Tapi.ITBasicCallControl_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_CurrentForwardInfo(self, ppForwardInfo: POINTER(Windows.Win32.Devices.Tapi.ITForwardInformation_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def put_MessageWaiting(self, fMessageWaiting: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_MessageWaiting(self, pfMessageWaiting: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def put_DoNotDisturb(self, fDoNotDisturb: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_DoNotDisturb(self, pfDoNotDisturb: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAddress2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITAddress
    _iid_ = Guid('b0ae5d9b-be51-46c9-b0-f7-df-a8-a2-2a-8b-c4')
    @commethod(22)
    def get_Phones(self, pPhones: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def EnumeratePhones(self, ppEnumPhone: POINTER(Windows.Win32.Devices.Tapi.IEnumPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def GetPhoneFromTerminal(self, pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head, ppPhone: POINTER(Windows.Win32.Devices.Tapi.ITPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def get_PreferredPhones(self, pPhones: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def EnumeratePreferredPhones(self, ppEnumPhone: POINTER(Windows.Win32.Devices.Tapi.IEnumPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def get_EventFilter(self, TapiEvent: Windows.Win32.Devices.Tapi.TAPI_EVENT, lSubEvent: Int32, pEnable: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def put_EventFilter(self, TapiEvent: Windows.Win32.Devices.Tapi.TAPI_EVENT, lSubEvent: Int32, bEnable: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def DeviceSpecific(self, pCall: Windows.Win32.Devices.Tapi.ITCallInfo_head, pParams: POINTER(Byte), dwSize: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def DeviceSpecificVariant(self, pCall: Windows.Win32.Devices.Tapi.ITCallInfo_head, varDevSpecificByteArray: Windows.Win32.System.Variant.VARIANT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def NegotiateExtVersion(self, lLowVersion: Int32, lHighVersion: Int32, plExtVersion: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAddressCapabilities(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('8df232f5-821b-11d1-bb-5c-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_AddressCapability(self, AddressCap: Windows.Win32.Devices.Tapi.ADDRESS_CAPABILITY, plCapability: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_AddressCapabilityString(self, AddressCapString: Windows.Win32.Devices.Tapi.ADDRESS_CAPABILITY_STRING, ppCapabilityString: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CallTreatments(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def EnumerateCallTreatments(self, ppEnumCallTreatment: POINTER(Windows.Win32.Devices.Tapi.IEnumBstr_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_CompletionMessages(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def EnumerateCompletionMessages(self, ppEnumCompletionMessage: POINTER(Windows.Win32.Devices.Tapi.IEnumBstr_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_DeviceClasses(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def EnumerateDeviceClasses(self, ppEnumDeviceClass: POINTER(Windows.Win32.Devices.Tapi.IEnumBstr_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAddressDeviceSpecificEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('3acb216b-40bd-487a-86-72-5c-e7-7b-d7-e3-a3')
    @commethod(7)
    def get_Address(self, ppAddress: POINTER(Windows.Win32.Devices.Tapi.ITAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_lParam1(self, pParam1: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_lParam2(self, pParam2: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_lParam3(self, pParam3: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAddressEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('831ce2d1-83b5-11d1-bb-5c-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Address(self, ppAddress: POINTER(Windows.Win32.Devices.Tapi.ITAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.ADDRESS_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Terminal(self, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAddressTranslation(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('0c4d8f03-8ddb-11d1-a0-9e-00-80-5f-c1-47-d3')
    @commethod(7)
    def TranslateAddress(self, pAddressToTranslate: Windows.Win32.Foundation.BSTR, lCard: Int32, lTranslateOptions: Int32, ppTranslated: POINTER(Windows.Win32.Devices.Tapi.ITAddressTranslationInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def TranslateDialog(self, hwndOwner: IntPtr, pAddressIn: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def EnumerateLocations(self, ppEnumLocation: POINTER(Windows.Win32.Devices.Tapi.IEnumLocation_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Locations(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def EnumerateCallingCards(self, ppEnumCallingCard: POINTER(Windows.Win32.Devices.Tapi.IEnumCallingCard_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_CallingCards(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAddressTranslationInfo(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('afc15945-8d40-11d1-a0-9e-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_DialableString(self, ppDialableString: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_DisplayableString(self, ppDisplayableString: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CurrentCountryCode(self, CountryCode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_DestinationCountryCode(self, CountryCode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_TranslationResults(self, plResults: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAgent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5770ece5-4b27-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(7)
    def EnumerateAgentSessions(self, ppEnumAgentSession: POINTER(Windows.Win32.Devices.Tapi.IEnumAgentSession_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def CreateSession(self, pACDGroup: Windows.Win32.Devices.Tapi.ITACDGroup_head, pAddress: Windows.Win32.Devices.Tapi.ITAddress_head, ppAgentSession: POINTER(Windows.Win32.Devices.Tapi.ITAgentSession_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def CreateSessionWithPIN(self, pACDGroup: Windows.Win32.Devices.Tapi.ITACDGroup_head, pAddress: Windows.Win32.Devices.Tapi.ITAddress_head, pPIN: Windows.Win32.Foundation.BSTR, ppAgentSession: POINTER(Windows.Win32.Devices.Tapi.ITAgentSession_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_ID(self, ppID: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_User(self, ppUser: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_State(self, AgentState: Windows.Win32.Devices.Tapi.AGENT_STATE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_State(self, pAgentState: POINTER(Windows.Win32.Devices.Tapi.AGENT_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_MeasurementPeriod(self, lPeriod: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_MeasurementPeriod(self, plPeriod: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_OverallCallRate(self, pcyCallrate: POINTER(Windows.Win32.System.Com.CY_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_NumberOfACDCalls(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_NumberOfIncomingCalls(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_NumberOfOutgoingCalls(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_TotalACDTalkTime(self, plTalkTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_TotalACDCallTime(self, plCallTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_TotalWrapUpTime(self, plWrapUpTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def get_AgentSessions(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAgentEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5afc314a-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_Agent(self, ppAgent: POINTER(Windows.Win32.Devices.Tapi.ITAgent_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.AGENT_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAgentHandler(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('587e8c22-9802-11d1-a0-a4-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_Name(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def CreateAgent(self, ppAgent: POINTER(Windows.Win32.Devices.Tapi.ITAgent_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def CreateAgentWithID(self, pID: Windows.Win32.Foundation.BSTR, pPIN: Windows.Win32.Foundation.BSTR, ppAgent: POINTER(Windows.Win32.Devices.Tapi.ITAgent_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def EnumerateACDGroups(self, ppEnumACDGroup: POINTER(Windows.Win32.Devices.Tapi.IEnumACDGroup_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def EnumerateUsableAddresses(self, ppEnumAddress: POINTER(Windows.Win32.Devices.Tapi.IEnumAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_ACDGroups(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_UsableAddresses(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAgentHandlerEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('297f3034-bd11-11d1-a0-a7-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_AgentHandler(self, ppAgentHandler: POINTER(Windows.Win32.Devices.Tapi.ITAgentHandler_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.AGENTHANDLER_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAgentSession(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5afc3147-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_Agent(self, ppAgent: POINTER(Windows.Win32.Devices.Tapi.ITAgent_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Address(self, ppAddress: POINTER(Windows.Win32.Devices.Tapi.ITAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_ACDGroup(self, ppACDGroup: POINTER(Windows.Win32.Devices.Tapi.ITACDGroup_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_State(self, SessionState: Windows.Win32.Devices.Tapi.AGENT_SESSION_STATE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_State(self, pSessionState: POINTER(Windows.Win32.Devices.Tapi.AGENT_SESSION_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_SessionStartTime(self, pdateSessionStart: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_SessionDuration(self, plDuration: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_NumberOfCalls(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_TotalTalkTime(self, plTalkTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_AverageTalkTime(self, plTalkTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_TotalCallTime(self, plCallTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_AverageCallTime(self, plCallTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_TotalWrapUpTime(self, plWrapUpTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_AverageWrapUpTime(self, plWrapUpTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_ACDCallRate(self, pcyCallrate: POINTER(Windows.Win32.System.Com.CY_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_LongestTimeToAnswer(self, plAnswerTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def get_AverageTimeToAnswer(self, plAnswerTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAgentSessionEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5afc314b-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_Session(self, ppSession: POINTER(Windows.Win32.Devices.Tapi.ITAgentSession_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.AGENT_SESSION_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAllocatorProperties(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('c1bc3c90-bcfe-11d1-97-45-00-c0-4f-d9-1a-c0')
    @commethod(3)
    def SetAllocatorProperties(self, pAllocProperties: POINTER(Windows.Win32.Media.DirectShow.ALLOCATOR_PROPERTIES_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetAllocatorProperties(self, pAllocProperties: POINTER(Windows.Win32.Media.DirectShow.ALLOCATOR_PROPERTIES_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def SetAllocateBuffers(self, bAllocBuffers: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetAllocateBuffers(self, pbAllocBuffers: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def SetBufferSize(self, BufferSize: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def GetBufferSize(self, pBufferSize: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITAutomatedPhoneControl(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('1ee1af0e-6159-4a61-b7-9b-6a-4b-a3-fc-9d-fc')
    @commethod(7)
    def StartTone(self, Tone: Windows.Win32.Devices.Tapi.PHONE_TONE, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def StopTone(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Tone(self, pTone: POINTER(Windows.Win32.Devices.Tapi.PHONE_TONE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def StartRinger(self, lRingMode: Int32, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def StopRinger(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Ringer(self, pfRinging: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def put_PhoneHandlingEnabled(self, fEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_PhoneHandlingEnabled(self, pfEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def put_AutoEndOfNumberTimeout(self, lTimeout: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_AutoEndOfNumberTimeout(self, plTimeout: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def put_AutoDialtone(self, fEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_AutoDialtone(self, pfEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def put_AutoStopTonesOnOnHook(self, fEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_AutoStopTonesOnOnHook(self, pfEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def put_AutoStopRingOnOffHook(self, fEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_AutoStopRingOnOffHook(self, pfEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def put_AutoKeypadTones(self, fEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def get_AutoKeypadTones(self, pfEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def put_AutoKeypadTonesMinimumDuration(self, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def get_AutoKeypadTonesMinimumDuration(self, plDuration: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def put_AutoVolumeControl(self, fEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def get_AutoVolumeControl(self, fEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def put_AutoVolumeControlStep(self, lStepSize: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def get_AutoVolumeControlStep(self, plStepSize: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def put_AutoVolumeControlRepeatDelay(self, lDelay: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def get_AutoVolumeControlRepeatDelay(self, plDelay: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def put_AutoVolumeControlRepeatPeriod(self, lPeriod: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def get_AutoVolumeControlRepeatPeriod(self, plPeriod: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def SelectCall(self, pCall: Windows.Win32.Devices.Tapi.ITCallInfo_head, fSelectDefaultTerminals: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def UnselectCall(self, pCall: Windows.Win32.Devices.Tapi.ITCallInfo_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def EnumerateSelectedCalls(self, ppCallEnum: POINTER(Windows.Win32.Devices.Tapi.IEnumCall_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def get_SelectedCalls(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITBasicAudioTerminal(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b1efc38d-9355-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(7)
    def put_Volume(self, lVolume: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Volume(self, plVolume: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_Balance(self, lBalance: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Balance(self, plBalance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITBasicCallControl(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b1efc389-9355-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(7)
    def Connect(self, fSync: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def Answer(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def Disconnect(self, code: Windows.Win32.Devices.Tapi.DISCONNECT_CODE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def Hold(self, fHold: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def HandoffDirect(self, pApplicationName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def HandoffIndirect(self, lMediaType: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def Conference(self, pCall: Windows.Win32.Devices.Tapi.ITBasicCallControl_head, fSync: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def Transfer(self, pCall: Windows.Win32.Devices.Tapi.ITBasicCallControl_head, fSync: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def BlindTransfer(self, pDestAddress: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def SwapHold(self, pCall: Windows.Win32.Devices.Tapi.ITBasicCallControl_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def ParkDirect(self, pParkAddress: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def ParkIndirect(self, ppNonDirAddress: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def Unpark(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def SetQOS(self, lMediaType: Int32, ServiceLevel: Windows.Win32.Devices.Tapi.QOS_SERVICE_LEVEL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def Pickup(self, pGroupID: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def Dial(self, pDestAddress: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def Finish(self, finishMode: Windows.Win32.Devices.Tapi.FINISH_MODE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def RemoveFromConference(self) -> Windows.Win32.Foundation.HRESULT: ...
class ITBasicCallControl2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITBasicCallControl
    _iid_ = Guid('161a4a56-1e99-4b3f-a4-6a-16-8f-38-a5-ee-4c')
    @commethod(25)
    def RequestTerminal(self, bstrTerminalClassGUID: Windows.Win32.Foundation.BSTR, lMediaType: Int32, Direction: Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def SelectTerminalOnCall(self, pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def UnselectTerminalOnCall(self, pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallHub(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('a3c1544e-5b92-11d1-8f-4e-00-c0-4f-b6-80-9f')
    @commethod(7)
    def Clear(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def EnumerateCalls(self, ppEnumCall: POINTER(Windows.Win32.Devices.Tapi.IEnumCall_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Calls(self, pCalls: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_NumCalls(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_State(self, pState: POINTER(Windows.Win32.Devices.Tapi.CALLHUB_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallHubEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('a3c15451-5b92-11d1-8f-4e-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.CALLHUB_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_CallHub(self, ppCallHub: POINTER(Windows.Win32.Devices.Tapi.ITCallHub_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallInfo(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('350f85d1-1227-11d3-83-d4-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Address(self, ppAddress: POINTER(Windows.Win32.Devices.Tapi.ITAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_CallState(self, pCallState: POINTER(Windows.Win32.Devices.Tapi.CALL_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Privilege(self, pPrivilege: POINTER(Windows.Win32.Devices.Tapi.CALL_PRIVILEGE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_CallHub(self, ppCallHub: POINTER(Windows.Win32.Devices.Tapi.ITCallHub_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_CallInfoLong(self, CallInfoLong: Windows.Win32.Devices.Tapi.CALLINFO_LONG, plCallInfoLongVal: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_CallInfoLong(self, CallInfoLong: Windows.Win32.Devices.Tapi.CALLINFO_LONG, lCallInfoLongVal: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_CallInfoString(self, CallInfoString: Windows.Win32.Devices.Tapi.CALLINFO_STRING, ppCallInfoString: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_CallInfoString(self, CallInfoString: Windows.Win32.Devices.Tapi.CALLINFO_STRING, pCallInfoString: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_CallInfoBuffer(self, CallInfoBuffer: Windows.Win32.Devices.Tapi.CALLINFO_BUFFER, ppCallInfoBuffer: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def put_CallInfoBuffer(self, CallInfoBuffer: Windows.Win32.Devices.Tapi.CALLINFO_BUFFER, pCallInfoBuffer: Windows.Win32.System.Variant.VARIANT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def GetCallInfoBuffer(self, CallInfoBuffer: Windows.Win32.Devices.Tapi.CALLINFO_BUFFER, pdwSize: POINTER(UInt32), ppCallInfoBuffer: POINTER(POINTER(Byte))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def SetCallInfoBuffer(self, CallInfoBuffer: Windows.Win32.Devices.Tapi.CALLINFO_BUFFER, dwSize: UInt32, pCallInfoBuffer: POINTER(Byte)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def ReleaseUserUserInfo(self) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallInfo2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITCallInfo
    _iid_ = Guid('94d70ca6-7ab0-4daa-81-ca-b8-f8-64-3f-ae-c1')
    @commethod(20)
    def get_EventFilter(self, TapiEvent: Windows.Win32.Devices.Tapi.TAPI_EVENT, lSubEvent: Int32, pEnable: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def put_EventFilter(self, TapiEvent: Windows.Win32.Devices.Tapi.TAPI_EVENT, lSubEvent: Int32, bEnable: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallInfoChangeEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5d4b65f9-e51c-11d1-a0-2f-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Cause(self, pCIC: POINTER(Windows.Win32.Devices.Tapi.CALLINFOCHANGE_CAUSE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallMediaEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ff36b87f-ec3a-11d0-8e-e4-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pCallMediaEvent: POINTER(Windows.Win32.Devices.Tapi.CALL_MEDIA_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Error(self, phrError: POINTER(Windows.Win32.Foundation.HRESULT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Terminal(self, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_Stream(self, ppStream: POINTER(Windows.Win32.Devices.Tapi.ITStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Cause(self, pCause: POINTER(Windows.Win32.Devices.Tapi.CALL_MEDIA_EVENT_CAUSE)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallNotificationEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('895801df-3dd6-11d1-8f-30-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pCallNotificationEvent: POINTER(Windows.Win32.Devices.Tapi.CALL_NOTIFICATION_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallStateEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('62f47097-95c9-11d0-83-5d-00-aa-00-3c-ca-bd')
    @commethod(7)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_State(self, pCallState: POINTER(Windows.Win32.Devices.Tapi.CALL_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Cause(self, pCEC: POINTER(Windows.Win32.Devices.Tapi.CALL_STATE_EVENT_CAUSE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCallingCard(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('0c4d8f00-8ddb-11d1-a0-9e-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_PermanentCardID(self, plCardID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_NumberOfDigits(self, plDigits: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Options(self, plOptions: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_CardName(self, ppCardName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_SameAreaDialingRule(self, ppRule: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_LongDistanceDialingRule(self, ppRule: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_InternationalDialingRule(self, ppRule: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCollection(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5ec5acf2-9c02-11d0-83-62-00-aa-00-3c-ca-bd')
    @commethod(7)
    def get_Count(self, lCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Item(self, Index: Int32, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get__NewEnum(self, ppNewEnum: POINTER(Windows.Win32.System.Com.IUnknown_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITCollection2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITCollection
    _iid_ = Guid('e6dddda5-a6d3-48ff-87-37-d3-2f-c4-d9-54-77')
    @commethod(10)
    def Add(self, Index: Int32, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def Remove(self, Index: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class ITCustomTone(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('357ad764-b3c6-4b2a-8f-a5-07-22-82-7a-92-54')
    @commethod(7)
    def get_Frequency(self, plFrequency: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_Frequency(self, lFrequency: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CadenceOn(self, plCadenceOn: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_CadenceOn(self, CadenceOn: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_CadenceOff(self, plCadenceOff: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_CadenceOff(self, lCadenceOff: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_Volume(self, plVolume: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_Volume(self, lVolume: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class ITDetectTone(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('961f79bd-3097-49df-a1-d6-90-9b-77-e8-9c-a0')
    @commethod(7)
    def get_AppSpecific(self, plAppSpecific: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_AppSpecific(self, lAppSpecific: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Duration(self, plDuration: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_Duration(self, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_Frequency(self, Index: Int32, plFrequency: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_Frequency(self, Index: Int32, lFrequency: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class ITDigitDetectionEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('80d3bfac-57d9-11d2-a0-4a-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Digit(self, pucDigit: POINTER(Byte)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_DigitMode(self, pDigitMode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_TickCount(self, plTickCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITDigitGenerationEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('80d3bfad-57d9-11d2-a0-4a-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_GenerationTermination(self, plGenerationTermination: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_TickCount(self, plTickCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITDigitsGatheredEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('e52ec4c1-cba3-441a-9e-6a-93-cb-90-9e-97-24')
    @commethod(7)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Digits(self, ppDigits: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_GatherTermination(self, pGatherTermination: POINTER(Windows.Win32.Devices.Tapi.TAPI_GATHERTERM)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_TickCount(self, plTickCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITDirectory(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('34621d6c-6cff-11d1-af-f7-00-c0-4f-c3-1f-ee')
    @commethod(7)
    def get_DirectoryType(self, pDirectoryType: POINTER(Windows.Win32.Devices.Tapi.DIRECTORY_TYPE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_DisplayName(self, pName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_IsDynamic(self, pfDynamic: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_DefaultObjectTTL(self, pTTL: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def put_DefaultObjectTTL(self, TTL: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def EnableAutoRefresh(self, fEnable: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def Connect(self, fSecure: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def Bind(self, pDomainName: Windows.Win32.Foundation.BSTR, pUserName: Windows.Win32.Foundation.BSTR, pPassword: Windows.Win32.Foundation.BSTR, lFlags: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def AddDirectoryObject(self, pDirectoryObject: Windows.Win32.Devices.Tapi.ITDirectoryObject_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def ModifyDirectoryObject(self, pDirectoryObject: Windows.Win32.Devices.Tapi.ITDirectoryObject_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def RefreshDirectoryObject(self, pDirectoryObject: Windows.Win32.Devices.Tapi.ITDirectoryObject_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def DeleteDirectoryObject(self, pDirectoryObject: Windows.Win32.Devices.Tapi.ITDirectoryObject_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_DirectoryObjects(self, DirectoryObjectType: Windows.Win32.Devices.Tapi.DIRECTORY_OBJECT_TYPE, pName: Windows.Win32.Foundation.BSTR, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def EnumerateDirectoryObjects(self, DirectoryObjectType: Windows.Win32.Devices.Tapi.DIRECTORY_OBJECT_TYPE, pName: Windows.Win32.Foundation.BSTR, ppEnumObject: POINTER(Windows.Win32.Devices.Tapi.IEnumDirectoryObject_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITDirectoryObject(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('34621d6e-6cff-11d1-af-f7-00-c0-4f-c3-1f-ee')
    @commethod(7)
    def get_ObjectType(self, pObjectType: POINTER(Windows.Win32.Devices.Tapi.DIRECTORY_OBJECT_TYPE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Name(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_Name(self, pName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_DialableAddrs(self, dwAddressType: Int32, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def EnumerateDialableAddrs(self, dwAddressType: UInt32, ppEnumDialableAddrs: POINTER(Windows.Win32.Devices.Tapi.IEnumDialableAddrs_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_SecurityDescriptor(self, ppSecDes: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def put_SecurityDescriptor(self, pSecDes: Windows.Win32.System.Com.IDispatch_head) -> Windows.Win32.Foundation.HRESULT: ...
class ITDirectoryObjectConference(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('f1029e5d-cb5b-11d0-8d-59-00-c0-4f-d9-1a-c0')
    @commethod(7)
    def get_Protocol(self, ppProtocol: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Originator(self, ppOriginator: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_Originator(self, pOriginator: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_AdvertisingScope(self, pAdvertisingScope: POINTER(Windows.Win32.Devices.Tapi.RND_ADVERTISING_SCOPE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def put_AdvertisingScope(self, AdvertisingScope: Windows.Win32.Devices.Tapi.RND_ADVERTISING_SCOPE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Url(self, ppUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def put_Url(self, pUrl: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_Description(self, ppDescription: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def put_Description(self, pDescription: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_IsEncrypted(self, pfEncrypted: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def put_IsEncrypted(self, fEncrypted: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_StartTime(self, pDate: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def put_StartTime(self, Date: Double) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_StopTime(self, pDate: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def put_StopTime(self, Date: Double) -> Windows.Win32.Foundation.HRESULT: ...
class ITDirectoryObjectUser(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('34621d6f-6cff-11d1-af-f7-00-c0-4f-c3-1f-ee')
    @commethod(7)
    def get_IPPhonePrimary(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_IPPhonePrimary(self, pName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class ITDispatchMapper(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('e9225295-c759-11d1-a0-2b-00-c0-4f-b6-80-9f')
    @commethod(7)
    def QueryDispatchInterface(self, pIID: Windows.Win32.Foundation.BSTR, pInterfaceToMap: Windows.Win32.System.Com.IDispatch_head, ppReturnedInterface: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITFileTerminalEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('e4a7fbac-8c17-4427-9f-55-9f-58-9a-c8-af-00')
    @commethod(7)
    def get_Terminal(self, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Track(self, ppTrackTerminal: POINTER(Windows.Win32.Devices.Tapi.ITFileTrack_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_State(self, pState: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_MEDIA_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_Cause(self, pCause: POINTER(Windows.Win32.Devices.Tapi.FT_STATE_EVENT_CAUSE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Error(self, phrErrorCode: POINTER(Windows.Win32.Foundation.HRESULT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITFileTrack(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('31ca6ea9-c08a-4bea-88-11-8e-9c-1b-a3-ea-3a')
    @commethod(7)
    def get_Format(self, ppmt: POINTER(POINTER(Windows.Win32.Media.MediaFoundation.AM_MEDIA_TYPE_head))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_Format(self, pmt: POINTER(Windows.Win32.Media.MediaFoundation.AM_MEDIA_TYPE_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_ControllingTerminal(self, ppControllingTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_AudioFormatForScripting(self, ppAudioFormat: POINTER(Windows.Win32.Devices.Tapi.ITScriptableAudioFormat_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def put_AudioFormatForScripting(self, pAudioFormat: Windows.Win32.Devices.Tapi.ITScriptableAudioFormat_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_EmptyAudioFormatForScripting(self, ppAudioFormat: POINTER(Windows.Win32.Devices.Tapi.ITScriptableAudioFormat_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITForwardInformation(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('449f659e-88a3-11d1-bb-5d-00-c0-4f-b6-80-9f')
    @commethod(7)
    def put_NumRingsNoAnswer(self, lNumRings: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_NumRingsNoAnswer(self, plNumRings: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def SetForwardType(self, ForwardType: Int32, pDestAddress: Windows.Win32.Foundation.BSTR, pCallerAddress: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_ForwardTypeDestination(self, ForwardType: Int32, ppDestAddress: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_ForwardTypeCaller(self, Forwardtype: Int32, ppCallerAddress: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def GetForwardType(self, ForwardType: Int32, ppDestinationAddress: POINTER(Windows.Win32.Foundation.BSTR), ppCallerAddress: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def Clear(self) -> Windows.Win32.Foundation.HRESULT: ...
class ITForwardInformation2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITForwardInformation
    _iid_ = Guid('5229b4ed-b260-4382-8e-1a-5d-f3-a8-a4-cc-c0')
    @commethod(14)
    def SetForwardType2(self, ForwardType: Int32, pDestAddress: Windows.Win32.Foundation.BSTR, DestAddressType: Int32, pCallerAddress: Windows.Win32.Foundation.BSTR, CallerAddressType: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def GetForwardType2(self, ForwardType: Int32, ppDestinationAddress: POINTER(Windows.Win32.Foundation.BSTR), pDestAddressType: POINTER(Int32), ppCallerAddress: POINTER(Windows.Win32.Foundation.BSTR), pCallerAddressType: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_ForwardTypeDestinationAddressType(self, ForwardType: Int32, pDestAddressType: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_ForwardTypeCallerAddressType(self, Forwardtype: Int32, pCallerAddressType: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITILSConfig(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('34621d72-6cff-11d1-af-f7-00-c0-4f-c3-1f-ee')
    @commethod(7)
    def get_Port(self, pPort: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_Port(self, Port: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class ITLegacyAddressMediaControl(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('ab493640-4c0b-11d2-a0-46-00-c0-4f-b6-80-9f')
    @commethod(3)
    def GetID(self, pDeviceClass: Windows.Win32.Foundation.BSTR, pdwSize: POINTER(UInt32), ppDeviceID: POINTER(POINTER(Byte))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetDevConfig(self, pDeviceClass: Windows.Win32.Foundation.BSTR, pdwSize: POINTER(UInt32), ppDeviceConfig: POINTER(POINTER(Byte))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def SetDevConfig(self, pDeviceClass: Windows.Win32.Foundation.BSTR, dwSize: UInt32, pDeviceConfig: POINTER(Byte)) -> Windows.Win32.Foundation.HRESULT: ...
class ITLegacyAddressMediaControl2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITLegacyAddressMediaControl
    _iid_ = Guid('b0ee512b-a531-409e-9d-d9-40-99-fe-86-c7-38')
    @commethod(6)
    def ConfigDialog(self, hwndOwner: Windows.Win32.Foundation.HWND, pDeviceClass: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def ConfigDialogEdit(self, hwndOwner: Windows.Win32.Foundation.HWND, pDeviceClass: Windows.Win32.Foundation.BSTR, dwSizeIn: UInt32, pDeviceConfigIn: POINTER(Byte), pdwSizeOut: POINTER(UInt32), ppDeviceConfigOut: POINTER(POINTER(Byte))) -> Windows.Win32.Foundation.HRESULT: ...
class ITLegacyCallMediaControl(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('d624582f-cc23-4436-b8-a5-47-c6-25-c8-04-5d')
    @commethod(7)
    def DetectDigits(self, DigitMode: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def GenerateDigits(self, pDigits: Windows.Win32.Foundation.BSTR, DigitMode: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def GetID(self, pDeviceClass: Windows.Win32.Foundation.BSTR, pdwSize: POINTER(UInt32), ppDeviceID: POINTER(POINTER(Byte))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def SetMediaType(self, lMediaType: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def MonitorMedia(self, lMediaType: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class ITLegacyCallMediaControl2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITLegacyCallMediaControl
    _iid_ = Guid('57ca332d-7bc2-44f1-a6-0c-93-6f-e8-d7-ce-73')
    @commethod(12)
    def GenerateDigits2(self, pDigits: Windows.Win32.Foundation.BSTR, DigitMode: Int32, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def GatherDigits(self, DigitMode: Int32, lNumDigits: Int32, pTerminationDigits: Windows.Win32.Foundation.BSTR, lFirstDigitTimeout: Int32, lInterDigitTimeout: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def DetectTones(self, pToneList: POINTER(Windows.Win32.Devices.Tapi.TAPI_DETECTTONE_head), lNumTones: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def DetectTonesByCollection(self, pDetectToneCollection: Windows.Win32.Devices.Tapi.ITCollection2_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def GenerateTone(self, ToneMode: Windows.Win32.Devices.Tapi.TAPI_TONEMODE, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def GenerateCustomTones(self, pToneList: POINTER(Windows.Win32.Devices.Tapi.TAPI_CUSTOMTONE_head), lNumTones: Int32, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def GenerateCustomTonesByCollection(self, pCustomToneCollection: Windows.Win32.Devices.Tapi.ITCollection2_head, lDuration: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def CreateDetectToneObject(self, ppDetectTone: POINTER(Windows.Win32.Devices.Tapi.ITDetectTone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def CreateCustomToneObject(self, ppCustomTone: POINTER(Windows.Win32.Devices.Tapi.ITCustomTone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def GetIDAsVariant(self, bstrDeviceClass: Windows.Win32.Foundation.BSTR, pVarDeviceID: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITLegacyWaveSupport(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('207823ea-e252-11d2-b7-7e-00-80-c7-13-53-81')
    @commethod(7)
    def IsFullDuplex(self, pSupport: POINTER(Windows.Win32.Devices.Tapi.FULLDUPLEX_SUPPORT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITLocationInfo(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('0c4d8eff-8ddb-11d1-a0-9e-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_PermanentLocationID(self, plLocationID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_CountryCode(self, plCountryCode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CountryID(self, plCountryID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Options(self, plOptions: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_PreferredCardID(self, plCardID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_LocationName(self, ppLocationName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_CityCode(self, ppCode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_LocalAccessCode(self, ppCode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_LongDistanceAccessCode(self, ppCode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_TollPrefixList(self, ppTollList: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_CancelCallWaitingCode(self, ppCode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class ITMSPAddress(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('ee3bd600-3868-11d2-a0-45-00-c0-4f-b6-80-9f')
    @commethod(3)
    def Initialize(self, hEvent: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Shutdown(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def CreateMSPCall(self, hCall: POINTER(Int32), dwReserved: UInt32, dwMediaType: UInt32, pOuterUnknown: Windows.Win32.System.Com.IUnknown_head, ppStreamControl: POINTER(Windows.Win32.System.Com.IUnknown_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def ShutdownMSPCall(self, pStreamControl: Windows.Win32.System.Com.IUnknown_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def ReceiveTSPData(self, pMSPCall: Windows.Win32.System.Com.IUnknown_head, pBuffer: POINTER(Byte), dwSize: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def GetEvent(self, pdwSize: POINTER(UInt32), pEventBuffer: POINTER(Byte)) -> Windows.Win32.Foundation.HRESULT: ...
class ITMediaControl(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('c445dde8-5199-4bc7-98-07-5f-fb-92-e4-2e-09')
    @commethod(7)
    def Start(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def Stop(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def Pause(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_MediaState(self, pTerminalMediaState: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_MEDIA_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
class ITMediaPlayback(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('627e8ae6-ae4c-4a69-bb-63-2a-d6-25-40-4b-77')
    @commethod(7)
    def put_PlayList(self, PlayListVariant: Windows.Win32.System.Variant.VARIANT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_PlayList(self, pPlayListVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITMediaRecord(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('f5dd4592-5476-4cc1-9d-4d-fa-d3-ee-fe-7d-b2')
    @commethod(7)
    def put_FileName(self, bstrFileName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_FileName(self, pbstrFileName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class ITMediaSupport(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b1efc384-9355-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(7)
    def get_MediaTypes(self, plMediaTypes: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def QueryMediaType(self, lMediaType: Int32, pfSupport: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class ITMultiTrackTerminal(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('fe040091-ade8-4072-95-c9-bf-7d-e8-c5-4b-44')
    @commethod(7)
    def get_TrackTerminals(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def EnumerateTrackTerminals(self, ppEnumTerminal: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def CreateTrackTerminal(self, MediaType: Int32, TerminalDirection: Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_MediaTypesInUse(self, plMediaTypesInUse: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_DirectionsInUse(self, plDirectionsInUsed: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def RemoveTrackTerminal(self, pTrackTerminalToRemove: Windows.Win32.Devices.Tapi.ITTerminal_head) -> Windows.Win32.Foundation.HRESULT: ...
class ITPhone(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('09d48db4-10cc-4388-9d-e7-a8-46-56-18-97-5a')
    @commethod(7)
    def Open(self, Privilege: Windows.Win32.Devices.Tapi.PHONE_PRIVILEGE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def Close(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Addresses(self, pAddresses: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def EnumerateAddresses(self, ppEnumAddress: POINTER(Windows.Win32.Devices.Tapi.IEnumAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_PhoneCapsLong(self, pclCap: Windows.Win32.Devices.Tapi.PHONECAPS_LONG, plCapability: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_PhoneCapsString(self, pcsCap: Windows.Win32.Devices.Tapi.PHONECAPS_STRING, ppCapability: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_Terminals(self, pAddress: Windows.Win32.Devices.Tapi.ITAddress_head, pTerminals: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def EnumerateTerminals(self, pAddress: Windows.Win32.Devices.Tapi.ITAddress_head, ppEnumTerminal: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_ButtonMode(self, lButtonID: Int32, pButtonMode: POINTER(Windows.Win32.Devices.Tapi.PHONE_BUTTON_MODE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def put_ButtonMode(self, lButtonID: Int32, ButtonMode: Windows.Win32.Devices.Tapi.PHONE_BUTTON_MODE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_ButtonFunction(self, lButtonID: Int32, pButtonFunction: POINTER(Windows.Win32.Devices.Tapi.PHONE_BUTTON_FUNCTION)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def put_ButtonFunction(self, lButtonID: Int32, ButtonFunction: Windows.Win32.Devices.Tapi.PHONE_BUTTON_FUNCTION) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_ButtonText(self, lButtonID: Int32, ppButtonText: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def put_ButtonText(self, lButtonID: Int32, bstrButtonText: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_ButtonState(self, lButtonID: Int32, pButtonState: POINTER(Windows.Win32.Devices.Tapi.PHONE_BUTTON_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_HookSwitchState(self, HookSwitchDevice: Windows.Win32.Devices.Tapi.PHONE_HOOK_SWITCH_DEVICE, pHookSwitchState: POINTER(Windows.Win32.Devices.Tapi.PHONE_HOOK_SWITCH_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def put_HookSwitchState(self, HookSwitchDevice: Windows.Win32.Devices.Tapi.PHONE_HOOK_SWITCH_DEVICE, HookSwitchState: Windows.Win32.Devices.Tapi.PHONE_HOOK_SWITCH_STATE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def put_RingMode(self, lRingMode: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def get_RingMode(self, plRingMode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def put_RingVolume(self, lRingVolume: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def get_RingVolume(self, plRingVolume: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def get_Privilege(self, pPrivilege: POINTER(Windows.Win32.Devices.Tapi.PHONE_PRIVILEGE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def GetPhoneCapsBuffer(self, pcbCaps: Windows.Win32.Devices.Tapi.PHONECAPS_BUFFER, pdwSize: POINTER(UInt32), ppPhoneCapsBuffer: POINTER(POINTER(Byte))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def get_PhoneCapsBuffer(self, pcbCaps: Windows.Win32.Devices.Tapi.PHONECAPS_BUFFER, pVarBuffer: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def get_LampMode(self, lLampID: Int32, pLampMode: POINTER(Windows.Win32.Devices.Tapi.PHONE_LAMP_MODE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def put_LampMode(self, lLampID: Int32, LampMode: Windows.Win32.Devices.Tapi.PHONE_LAMP_MODE) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def get_Display(self, pbstrDisplay: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def SetDisplay(self, lRow: Int32, lColumn: Int32, bstrDisplay: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def get_PreferredAddresses(self, pAddresses: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def EnumeratePreferredAddresses(self, ppEnumAddress: POINTER(Windows.Win32.Devices.Tapi.IEnumAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def DeviceSpecific(self, pParams: POINTER(Byte), dwSize: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def DeviceSpecificVariant(self, varDevSpecificByteArray: Windows.Win32.System.Variant.VARIANT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(39)
    def NegotiateExtVersion(self, lLowVersion: Int32, lHighVersion: Int32, plExtVersion: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITPhoneDeviceSpecificEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('63ffb2a6-872b-4cd3-a5-01-32-6e-8f-b4-0a-f7')
    @commethod(7)
    def get_Phone(self, ppPhone: POINTER(Windows.Win32.Devices.Tapi.ITPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_lParam1(self, pParam1: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_lParam2(self, pParam2: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_lParam3(self, pParam3: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITPhoneEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('8f942dd8-64ed-4aaf-a7-7d-b2-3d-b0-83-7e-ad')
    @commethod(7)
    def get_Phone(self, ppPhone: POINTER(Windows.Win32.Devices.Tapi.ITPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.PHONE_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_ButtonState(self, pState: POINTER(Windows.Win32.Devices.Tapi.PHONE_BUTTON_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_HookSwitchState(self, pState: POINTER(Windows.Win32.Devices.Tapi.PHONE_HOOK_SWITCH_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_HookSwitchDevice(self, pDevice: POINTER(Windows.Win32.Devices.Tapi.PHONE_HOOK_SWITCH_DEVICE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_RingMode(self, plRingMode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_ButtonLampId(self, plButtonLampId: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_NumberGathered(self, ppNumber: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITPluggableTerminalClassInfo(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('41757f4a-cf09-4b34-bc-96-0a-79-d2-39-00-76')
    @commethod(7)
    def get_Name(self, pName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Company(self, pCompany: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Version(self, pVersion: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_TerminalClass(self, pTerminalClass: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_CLSID(self, pCLSID: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Direction(self, pDirection: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_MediaTypes(self, pMediaTypes: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITPluggableTerminalEventSink(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('6e0887be-ba1a-492e-bd-10-40-20-ec-5e-33-e0')
    @commethod(3)
    def FireEvent(self, pMspEventInfo: POINTER(Windows.Win32.Devices.Tapi.MSP_EVENT_INFO_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITPluggableTerminalEventSinkRegistration(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('f7115709-a216-4957-a7-59-06-0a-b3-2a-90-d1')
    @commethod(3)
    def RegisterSink(self, pEventSink: Windows.Win32.Devices.Tapi.ITPluggableTerminalEventSink_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def UnregisterSink(self) -> Windows.Win32.Foundation.HRESULT: ...
class ITPluggableTerminalSuperclassInfo(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('6d54e42c-4625-4359-a6-f7-63-19-99-10-7e-05')
    @commethod(7)
    def get_Name(self, pName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_CLSID(self, pCLSID: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class ITPrivateEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('0e269cd0-10d4-4121-9c-22-9c-85-d6-25-65-0d')
    @commethod(7)
    def get_Address(self, ppAddress: POINTER(Windows.Win32.Devices.Tapi.ITAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_CallHub(self, ppCallHub: POINTER(Windows.Win32.Devices.Tapi.ITCallHub_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_EventCode(self, plEventCode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_EventInterface(self, pEventInterface: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITQOSEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('cfa3357c-ad77-11d1-bb-68-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pQosEvent: POINTER(Windows.Win32.Devices.Tapi.QOS_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_MediaType(self, plMediaType: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITQueue(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5afc3149-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(7)
    def put_MeasurementPeriod(self, lPeriod: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_MeasurementPeriod(self, plPeriod: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_TotalCallsQueued(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_CurrentCallsQueued(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_TotalCallsAbandoned(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_TotalCallsFlowedIn(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_TotalCallsFlowedOut(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_LongestEverWaitTime(self, plWaitTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_CurrentLongestWaitTime(self, plWaitTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_AverageWaitTime(self, plWaitTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_FinalDisposition(self, plCalls: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_Name(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class ITQueueEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('297f3033-bd11-11d1-a0-a7-00-80-5f-c1-47-d3')
    @commethod(7)
    def get_Queue(self, ppQueue: POINTER(Windows.Win32.Devices.Tapi.ITQueue_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.ACDQUEUE_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITRendezvous(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('34621d6b-6cff-11d1-af-f7-00-c0-4f-c3-1f-ee')
    @commethod(7)
    def get_DefaultDirectories(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def EnumerateDefaultDirectories(self, ppEnumDirectory: POINTER(Windows.Win32.Devices.Tapi.IEnumDirectory_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def CreateDirectory(self, DirectoryType: Windows.Win32.Devices.Tapi.DIRECTORY_TYPE, pName: Windows.Win32.Foundation.BSTR, ppDir: POINTER(Windows.Win32.Devices.Tapi.ITDirectory_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def CreateDirectoryObject(self, DirectoryObjectType: Windows.Win32.Devices.Tapi.DIRECTORY_OBJECT_TYPE, pName: Windows.Win32.Foundation.BSTR, ppDirectoryObject: POINTER(Windows.Win32.Devices.Tapi.ITDirectoryObject_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITRequest(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ac48ffdf-f8c4-11d1-a0-30-00-c0-4f-b6-80-9f')
    @commethod(7)
    def MakeCall(self, pDestAddress: Windows.Win32.Foundation.BSTR, pAppName: Windows.Win32.Foundation.BSTR, pCalledParty: Windows.Win32.Foundation.BSTR, pComment: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class ITRequestEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ac48ffde-f8c4-11d1-a0-30-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_RegistrationInstance(self, plRegistrationInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_RequestMode(self, plRequestMode: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_DestAddress(self, ppDestAddress: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_AppName(self, ppAppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_CalledParty(self, ppCalledParty: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Comment(self, ppComment: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class ITScriptableAudioFormat(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b87658bd-3c59-4f64-be-74-ae-de-3e-86-a8-1e')
    @commethod(7)
    def get_Channels(self, pVal: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_Channels(self, nNewVal: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_SamplesPerSec(self, pVal: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_SamplesPerSec(self, nNewVal: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_AvgBytesPerSec(self, pVal: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_AvgBytesPerSec(self, nNewVal: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_BlockAlign(self, pVal: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_BlockAlign(self, nNewVal: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_BitsPerSample(self, pVal: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def put_BitsPerSample(self, nNewVal: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_FormatTag(self, pVal: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def put_FormatTag(self, nNewVal: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class ITStaticAudioTerminal(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('a86b7871-d14c-48e6-92-2e-a8-d1-5f-98-48-00')
    @commethod(7)
    def get_WaveId(self, plWaveId: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITStream(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ee3bd605-3868-11d2-a0-45-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_MediaType(self, plMediaType: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Direction(self, pTD: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Name(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def StartStream(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def PauseStream(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def StopStream(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def SelectTerminal(self, pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def UnselectTerminal(self, pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def EnumerateTerminals(self, ppEnumTerminal: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_Terminals(self, pTerminals: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITStreamControl(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ee3bd604-3868-11d2-a0-45-00-c0-4f-b6-80-9f')
    @commethod(7)
    def CreateStream(self, lMediaType: Int32, td: Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION, ppStream: POINTER(Windows.Win32.Devices.Tapi.ITStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def RemoveStream(self, pStream: Windows.Win32.Devices.Tapi.ITStream_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def EnumerateStreams(self, ppEnumStream: POINTER(Windows.Win32.Devices.Tapi.IEnumStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Streams(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITSubStream(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ee3bd608-3868-11d2-a0-45-00-c0-4f-b6-80-9f')
    @commethod(7)
    def StartSubStream(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def PauseSubStream(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def StopSubStream(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def SelectTerminal(self, pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def UnselectTerminal(self, pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def EnumerateTerminals(self, ppEnumTerminal: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_Terminals(self, pTerminals: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_Stream(self, ppITStream: POINTER(Windows.Win32.Devices.Tapi.ITStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITSubStreamControl(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('ee3bd607-3868-11d2-a0-45-00-c0-4f-b6-80-9f')
    @commethod(7)
    def CreateSubStream(self, ppSubStream: POINTER(Windows.Win32.Devices.Tapi.ITSubStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def RemoveSubStream(self, pSubStream: Windows.Win32.Devices.Tapi.ITSubStream_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def EnumerateSubStreams(self, ppEnumSubStream: POINTER(Windows.Win32.Devices.Tapi.IEnumSubStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_SubStreams(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTAPI(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b1efc382-9355-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(7)
    def Initialize(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def Shutdown(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Addresses(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def EnumerateAddresses(self, ppEnumAddress: POINTER(Windows.Win32.Devices.Tapi.IEnumAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def RegisterCallNotifications(self, pAddress: Windows.Win32.Devices.Tapi.ITAddress_head, fMonitor: Windows.Win32.Foundation.VARIANT_BOOL, fOwner: Windows.Win32.Foundation.VARIANT_BOOL, lMediaTypes: Int32, lCallbackInstance: Int32, plRegister: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def UnregisterNotifications(self, lRegister: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_CallHubs(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def EnumerateCallHubs(self, ppEnumCallHub: POINTER(Windows.Win32.Devices.Tapi.IEnumCallHub_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def SetCallHubTracking(self, pAddresses: Windows.Win32.System.Variant.VARIANT, bTracking: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def EnumeratePrivateTAPIObjects(self, ppEnumUnknown: POINTER(Windows.Win32.System.Com.IEnumUnknown_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_PrivateTAPIObjects(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def RegisterRequestRecipient(self, lRegistrationInstance: Int32, lRequestMode: Int32, fEnable: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def SetAssistedTelephonyPriority(self, pAppFilename: Windows.Win32.Foundation.BSTR, fPriority: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def SetApplicationPriority(self, pAppFilename: Windows.Win32.Foundation.BSTR, lMediaType: Int32, fPriority: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def put_EventFilter(self, lFilterMask: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_EventFilter(self, plFilterMask: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTAPI2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITTAPI
    _iid_ = Guid('54fbdc8c-d90f-4dad-96-95-b3-73-09-7f-09-4b')
    @commethod(23)
    def get_Phones(self, pPhones: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def EnumeratePhones(self, ppEnumPhone: POINTER(Windows.Win32.Devices.Tapi.IEnumPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def CreateEmptyCollectionObject(self, ppCollection: POINTER(Windows.Win32.Devices.Tapi.ITCollection2_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTAPICallCenter(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('5afc3154-4bcc-11d1-bf-80-00-80-5f-c1-47-d3')
    @commethod(7)
    def EnumerateAgentHandlers(self, ppEnumHandler: POINTER(Windows.Win32.Devices.Tapi.IEnumAgentHandler_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_AgentHandlers(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTAPIDispatchEventNotification(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('9f34325b-7e62-11d2-94-57-00-c0-4f-8e-c8-88')
class ITTAPIEventNotification(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('eddb9426-3b91-11d1-8f-30-00-c0-4f-b6-80-9f')
    @commethod(3)
    def Event(self, TapiEvent: Windows.Win32.Devices.Tapi.TAPI_EVENT, pEvent: Windows.Win32.System.Com.IDispatch_head) -> Windows.Win32.Foundation.HRESULT: ...
class ITTAPIObjectEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('f4854d48-937a-11d1-bb-58-00-c0-4f-b6-80-9f')
    @commethod(7)
    def get_TAPIObject(self, ppTAPIObject: POINTER(Windows.Win32.Devices.Tapi.ITTAPI_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Event(self, pEvent: POINTER(Windows.Win32.Devices.Tapi.TAPIOBJECT_EVENT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Address(self, ppAddress: POINTER(Windows.Win32.Devices.Tapi.ITAddress_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTAPIObjectEvent2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITTAPIObjectEvent
    _iid_ = Guid('359dda6e-68ce-4383-bf-0b-16-91-33-c4-1b-46')
    @commethod(11)
    def get_Phone(self, ppPhone: POINTER(Windows.Win32.Devices.Tapi.ITPhone_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTTSTerminalEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('d964788f-95a5-461d-ab-0c-b9-90-0a-6c-27-13')
    @commethod(7)
    def get_Terminal(self, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Error(self, phrErrorCode: POINTER(Windows.Win32.Foundation.HRESULT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTerminal(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b1efc38a-9355-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(7)
    def get_Name(self, ppName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_State(self, pTerminalState: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_STATE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_TerminalType(self, pType: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_TYPE)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_TerminalClass(self, ppTerminalClass: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_MediaType(self, plMediaType: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_Direction(self, pDirection: POINTER(Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTerminalSupport(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('b1efc385-9355-11d0-83-5c-00-aa-00-3c-ca-bd')
    @commethod(7)
    def get_StaticTerminals(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def EnumerateStaticTerminals(self, ppTerminalEnumerator: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_DynamicTerminalClasses(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def EnumerateDynamicTerminalClasses(self, ppTerminalClassEnumerator: POINTER(Windows.Win32.Devices.Tapi.IEnumTerminalClass_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def CreateTerminal(self, pTerminalClass: Windows.Win32.Foundation.BSTR, lMediaType: Int32, Direction: Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def GetDefaultStaticTerminal(self, lMediaType: Int32, Direction: Windows.Win32.Devices.Tapi.TERMINAL_DIRECTION, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITTerminalSupport2(ComPtr):
    extends: Windows.Win32.Devices.Tapi.ITTerminalSupport
    _iid_ = Guid('f3eb39bc-1b1f-4e99-a0-c0-56-30-5c-4d-d5-91')
    @commethod(13)
    def get_PluggableSuperclasses(self, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def EnumeratePluggableSuperclasses(self, ppSuperclassEnumerator: POINTER(Windows.Win32.Devices.Tapi.IEnumPluggableSuperclassInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_PluggableTerminalClasses(self, bstrTerminalSuperclass: Windows.Win32.Foundation.BSTR, lMediaType: Int32, pVariant: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def EnumeratePluggableTerminalClasses(self, iidTerminalSuperclass: Guid, lMediaType: Int32, ppClassEnumerator: POINTER(Windows.Win32.Devices.Tapi.IEnumPluggableTerminalClassInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ITToneDetectionEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('407e0faf-d047-4753-b0-c6-8e-06-03-73-fe-cd')
    @commethod(7)
    def get_Call(self, ppCallInfo: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_AppSpecific(self, plAppSpecific: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_TickCount(self, plTickCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_CallbackInstance(self, plCallbackInstance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class ITToneTerminalEvent(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('e6f56009-611f-4945-bb-d2-2d-0c-e5-61-20-56')
    @commethod(7)
    def get_Terminal(self, ppTerminal: POINTER(Windows.Win32.Devices.Tapi.ITTerminal_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Call(self, ppCall: POINTER(Windows.Win32.Devices.Tapi.ITCallInfo_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Error(self, phrErrorCode: POINTER(Windows.Win32.Foundation.HRESULT)) -> Windows.Win32.Foundation.HRESULT: ...
class ITnef(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    @commethod(3)
    def AddProps(self, ulFlags: UInt32, ulElemID: UInt32, lpvData: c_void_p, lpPropList: POINTER(Windows.Win32.System.AddressBook.SPropTagArray_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def ExtractProps(self, ulFlags: UInt32, lpPropList: POINTER(Windows.Win32.System.AddressBook.SPropTagArray_head), lpProblems: POINTER(POINTER(Windows.Win32.Devices.Tapi.STnefProblemArray_head))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Finish(self, ulFlags: UInt32, lpKey: POINTER(UInt16), lpProblems: POINTER(POINTER(Windows.Win32.Devices.Tapi.STnefProblemArray_head))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def OpenTaggedBody(self, lpMessage: Windows.Win32.System.AddressBook.IMessage_head, ulFlags: UInt32, lppStream: POINTER(Windows.Win32.System.Com.IStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def SetProps(self, ulFlags: UInt32, ulElemID: UInt32, cValues: UInt32, lpProps: POINTER(Windows.Win32.System.AddressBook.SPropValue_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def EncodeRecips(self, ulFlags: UInt32, lpRecipientTable: Windows.Win32.System.AddressBook.IMAPITable_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def FinishComponent(self, ulFlags: UInt32, ulComponentID: UInt32, lpCustomPropList: POINTER(Windows.Win32.System.AddressBook.SPropTagArray_head), lpCustomProps: POINTER(Windows.Win32.System.AddressBook.SPropValue_head), lpPropList: POINTER(Windows.Win32.System.AddressBook.SPropTagArray_head), lpProblems: POINTER(POINTER(Windows.Win32.Devices.Tapi.STnefProblemArray_head))) -> Windows.Win32.Foundation.HRESULT: ...
class LINEADDRESSCAPS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwLineDeviceID: UInt32
    dwAddressSize: UInt32
    dwAddressOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwAddressSharing: UInt32
    dwAddressStates: UInt32
    dwCallInfoStates: UInt32
    dwCallerIDFlags: UInt32
    dwCalledIDFlags: UInt32
    dwConnectedIDFlags: UInt32
    dwRedirectionIDFlags: UInt32
    dwRedirectingIDFlags: UInt32
    dwCallStates: UInt32
    dwDialToneModes: UInt32
    dwBusyModes: UInt32
    dwSpecialInfo: UInt32
    dwDisconnectModes: UInt32
    dwMaxNumActiveCalls: UInt32
    dwMaxNumOnHoldCalls: UInt32
    dwMaxNumOnHoldPendingCalls: UInt32
    dwMaxNumConference: UInt32
    dwMaxNumTransConf: UInt32
    dwAddrCapFlags: UInt32
    dwCallFeatures: UInt32
    dwRemoveFromConfCaps: UInt32
    dwRemoveFromConfState: UInt32
    dwTransferModes: UInt32
    dwParkModes: UInt32
    dwForwardModes: UInt32
    dwMaxForwardEntries: UInt32
    dwMaxSpecificEntries: UInt32
    dwMinFwdNumRings: UInt32
    dwMaxFwdNumRings: UInt32
    dwMaxCallCompletions: UInt32
    dwCallCompletionConds: UInt32
    dwCallCompletionModes: UInt32
    dwNumCompletionMessages: UInt32
    dwCompletionMsgTextEntrySize: UInt32
    dwCompletionMsgTextSize: UInt32
    dwCompletionMsgTextOffset: UInt32
    dwAddressFeatures: UInt32
    dwPredictiveAutoTransferStates: UInt32
    dwNumCallTreatments: UInt32
    dwCallTreatmentListSize: UInt32
    dwCallTreatmentListOffset: UInt32
    dwDeviceClassesSize: UInt32
    dwDeviceClassesOffset: UInt32
    dwMaxCallDataSize: UInt32
    dwCallFeatures2: UInt32
    dwMaxNoAnswerTimeout: UInt32
    dwConnectedModes: UInt32
    dwOfferingModes: UInt32
    dwAvailableMediaModes: UInt32
    _pack_ = 1
class LINEADDRESSSTATUS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumInUse: UInt32
    dwNumActiveCalls: UInt32
    dwNumOnHoldCalls: UInt32
    dwNumOnHoldPendCalls: UInt32
    dwAddressFeatures: UInt32
    dwNumRingsNoAnswer: UInt32
    dwForwardNumEntries: UInt32
    dwForwardSize: UInt32
    dwForwardOffset: UInt32
    dwTerminalModesSize: UInt32
    dwTerminalModesOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    _pack_ = 1
class LINEAGENTACTIVITYENTRY(EasyCastStructure):
    dwID: UInt32
    dwNameSize: UInt32
    dwNameOffset: UInt32
    _pack_ = 1
class LINEAGENTACTIVITYLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumEntries: UInt32
    dwListSize: UInt32
    dwListOffset: UInt32
    _pack_ = 1
class LINEAGENTCAPS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwAgentHandlerInfoSize: UInt32
    dwAgentHandlerInfoOffset: UInt32
    dwCapsVersion: UInt32
    dwFeatures: UInt32
    dwStates: UInt32
    dwNextStates: UInt32
    dwMaxNumGroupEntries: UInt32
    dwAgentStatusMessages: UInt32
    dwNumAgentExtensionIDs: UInt32
    dwAgentExtensionIDListSize: UInt32
    dwAgentExtensionIDListOffset: UInt32
    ProxyGUID: Guid
    _pack_ = 1
class LINEAGENTENTRY(EasyCastStructure):
    hAgent: UInt32
    dwNameSize: UInt32
    dwNameOffset: UInt32
    dwIDSize: UInt32
    dwIDOffset: UInt32
    dwPINSize: UInt32
    dwPINOffset: UInt32
    _pack_ = 1
class LINEAGENTGROUPENTRY(EasyCastStructure):
    GroupID: _GroupID_e__Struct
    dwNameSize: UInt32
    dwNameOffset: UInt32
    _pack_ = 1
    class _GroupID_e__Struct(EasyCastStructure):
        dwGroupID1: UInt32
        dwGroupID2: UInt32
        dwGroupID3: UInt32
        dwGroupID4: UInt32
        _pack_ = 1
class LINEAGENTGROUPLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumEntries: UInt32
    dwListSize: UInt32
    dwListOffset: UInt32
    _pack_ = 1
class LINEAGENTINFO(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwAgentState: UInt32
    dwNextAgentState: UInt32
    dwMeasurementPeriod: UInt32
    cyOverallCallRate: Windows.Win32.System.Com.CY
    dwNumberOfACDCalls: UInt32
    dwNumberOfIncomingCalls: UInt32
    dwNumberOfOutgoingCalls: UInt32
    dwTotalACDTalkTime: UInt32
    dwTotalACDCallTime: UInt32
    dwTotalACDWrapUpTime: UInt32
    _pack_ = 1
class LINEAGENTLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumEntries: UInt32
    dwListSize: UInt32
    dwListOffset: UInt32
    _pack_ = 1
class LINEAGENTSESSIONENTRY(EasyCastStructure):
    hAgentSession: UInt32
    hAgent: UInt32
    GroupID: Guid
    dwWorkingAddressID: UInt32
    _pack_ = 1
class LINEAGENTSESSIONINFO(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwAgentSessionState: UInt32
    dwNextAgentSessionState: UInt32
    dateSessionStartTime: Double
    dwSessionDuration: UInt32
    dwNumberOfCalls: UInt32
    dwTotalTalkTime: UInt32
    dwAverageTalkTime: UInt32
    dwTotalCallTime: UInt32
    dwAverageCallTime: UInt32
    dwTotalWrapUpTime: UInt32
    dwAverageWrapUpTime: UInt32
    cyACDCallRate: Windows.Win32.System.Com.CY
    dwLongestTimeToAnswer: UInt32
    dwAverageTimeToAnswer: UInt32
    _pack_ = 1
class LINEAGENTSESSIONLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumEntries: UInt32
    dwListSize: UInt32
    dwListOffset: UInt32
    _pack_ = 1
class LINEAGENTSTATUS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumEntries: UInt32
    dwGroupListSize: UInt32
    dwGroupListOffset: UInt32
    dwState: UInt32
    dwNextState: UInt32
    dwActivityID: UInt32
    dwActivitySize: UInt32
    dwActivityOffset: UInt32
    dwAgentFeatures: UInt32
    dwValidStates: UInt32
    dwValidNextStates: UInt32
    _pack_ = 1
class LINEAPPINFO(EasyCastStructure):
    dwMachineNameSize: UInt32
    dwMachineNameOffset: UInt32
    dwUserNameSize: UInt32
    dwUserNameOffset: UInt32
    dwModuleFilenameSize: UInt32
    dwModuleFilenameOffset: UInt32
    dwFriendlyNameSize: UInt32
    dwFriendlyNameOffset: UInt32
    dwMediaModes: UInt32
    dwAddressID: UInt32
    _pack_ = 1
@winfunctype_pointer
def LINECALLBACK(hDevice: UInt32, dwMessage: UInt32, dwInstance: UIntPtr, dwParam1: UIntPtr, dwParam2: UIntPtr, dwParam3: UIntPtr) -> Void: ...
class LINECALLINFO(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    hLine: UInt32
    dwLineDeviceID: UInt32
    dwAddressID: UInt32
    dwBearerMode: UInt32
    dwRate: UInt32
    dwMediaMode: UInt32
    dwAppSpecific: UInt32
    dwCallID: UInt32
    dwRelatedCallID: UInt32
    dwCallParamFlags: UInt32
    dwCallStates: UInt32
    dwMonitorDigitModes: UInt32
    dwMonitorMediaModes: UInt32
    DialParams: Windows.Win32.Devices.Tapi.LINEDIALPARAMS
    dwOrigin: UInt32
    dwReason: UInt32
    dwCompletionID: UInt32
    dwNumOwners: UInt32
    dwNumMonitors: UInt32
    dwCountryCode: UInt32
    dwTrunk: UInt32
    dwCallerIDFlags: UInt32
    dwCallerIDSize: UInt32
    dwCallerIDOffset: UInt32
    dwCallerIDNameSize: UInt32
    dwCallerIDNameOffset: UInt32
    dwCalledIDFlags: UInt32
    dwCalledIDSize: UInt32
    dwCalledIDOffset: UInt32
    dwCalledIDNameSize: UInt32
    dwCalledIDNameOffset: UInt32
    dwConnectedIDFlags: UInt32
    dwConnectedIDSize: UInt32
    dwConnectedIDOffset: UInt32
    dwConnectedIDNameSize: UInt32
    dwConnectedIDNameOffset: UInt32
    dwRedirectionIDFlags: UInt32
    dwRedirectionIDSize: UInt32
    dwRedirectionIDOffset: UInt32
    dwRedirectionIDNameSize: UInt32
    dwRedirectionIDNameOffset: UInt32
    dwRedirectingIDFlags: UInt32
    dwRedirectingIDSize: UInt32
    dwRedirectingIDOffset: UInt32
    dwRedirectingIDNameSize: UInt32
    dwRedirectingIDNameOffset: UInt32
    dwAppNameSize: UInt32
    dwAppNameOffset: UInt32
    dwDisplayableAddressSize: UInt32
    dwDisplayableAddressOffset: UInt32
    dwCalledPartySize: UInt32
    dwCalledPartyOffset: UInt32
    dwCommentSize: UInt32
    dwCommentOffset: UInt32
    dwDisplaySize: UInt32
    dwDisplayOffset: UInt32
    dwUserUserInfoSize: UInt32
    dwUserUserInfoOffset: UInt32
    dwHighLevelCompSize: UInt32
    dwHighLevelCompOffset: UInt32
    dwLowLevelCompSize: UInt32
    dwLowLevelCompOffset: UInt32
    dwChargingInfoSize: UInt32
    dwChargingInfoOffset: UInt32
    dwTerminalModesSize: UInt32
    dwTerminalModesOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwCallTreatment: UInt32
    dwCallDataSize: UInt32
    dwCallDataOffset: UInt32
    dwSendingFlowspecSize: UInt32
    dwSendingFlowspecOffset: UInt32
    dwReceivingFlowspecSize: UInt32
    dwReceivingFlowspecOffset: UInt32
    _pack_ = 1
class LINECALLLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwCallsNumEntries: UInt32
    dwCallsSize: UInt32
    dwCallsOffset: UInt32
    _pack_ = 1
class LINECALLPARAMS(EasyCastStructure):
    dwTotalSize: UInt32
    dwBearerMode: UInt32
    dwMinRate: UInt32
    dwMaxRate: UInt32
    dwMediaMode: UInt32
    dwCallParamFlags: UInt32
    dwAddressMode: UInt32
    dwAddressID: UInt32
    DialParams: Windows.Win32.Devices.Tapi.LINEDIALPARAMS
    dwOrigAddressSize: UInt32
    dwOrigAddressOffset: UInt32
    dwDisplayableAddressSize: UInt32
    dwDisplayableAddressOffset: UInt32
    dwCalledPartySize: UInt32
    dwCalledPartyOffset: UInt32
    dwCommentSize: UInt32
    dwCommentOffset: UInt32
    dwUserUserInfoSize: UInt32
    dwUserUserInfoOffset: UInt32
    dwHighLevelCompSize: UInt32
    dwHighLevelCompOffset: UInt32
    dwLowLevelCompSize: UInt32
    dwLowLevelCompOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwPredictiveAutoTransferStates: UInt32
    dwTargetAddressSize: UInt32
    dwTargetAddressOffset: UInt32
    dwSendingFlowspecSize: UInt32
    dwSendingFlowspecOffset: UInt32
    dwReceivingFlowspecSize: UInt32
    dwReceivingFlowspecOffset: UInt32
    dwDeviceClassSize: UInt32
    dwDeviceClassOffset: UInt32
    dwDeviceConfigSize: UInt32
    dwDeviceConfigOffset: UInt32
    dwCallDataSize: UInt32
    dwCallDataOffset: UInt32
    dwNoAnswerTimeout: UInt32
    dwCallingPartyIDSize: UInt32
    dwCallingPartyIDOffset: UInt32
    _pack_ = 1
class LINECALLSTATUS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwCallState: UInt32
    dwCallStateMode: UInt32
    dwCallPrivilege: UInt32
    dwCallFeatures: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwCallFeatures2: UInt32
    tStateEntryTime: Windows.Win32.Foundation.SYSTEMTIME
    _pack_ = 1
class LINECALLTREATMENTENTRY(EasyCastStructure):
    dwCallTreatmentID: UInt32
    dwCallTreatmentNameSize: UInt32
    dwCallTreatmentNameOffset: UInt32
    _pack_ = 1
class LINECARDENTRY(EasyCastStructure):
    dwPermanentCardID: UInt32
    dwCardNameSize: UInt32
    dwCardNameOffset: UInt32
    dwCardNumberDigits: UInt32
    dwSameAreaRuleSize: UInt32
    dwSameAreaRuleOffset: UInt32
    dwLongDistanceRuleSize: UInt32
    dwLongDistanceRuleOffset: UInt32
    dwInternationalRuleSize: UInt32
    dwInternationalRuleOffset: UInt32
    dwOptions: UInt32
    _pack_ = 1
class LINECOUNTRYENTRY(EasyCastStructure):
    dwCountryID: UInt32
    dwCountryCode: UInt32
    dwNextCountryID: UInt32
    dwCountryNameSize: UInt32
    dwCountryNameOffset: UInt32
    dwSameAreaRuleSize: UInt32
    dwSameAreaRuleOffset: UInt32
    dwLongDistanceRuleSize: UInt32
    dwLongDistanceRuleOffset: UInt32
    dwInternationalRuleSize: UInt32
    dwInternationalRuleOffset: UInt32
    _pack_ = 1
class LINECOUNTRYLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumCountries: UInt32
    dwCountryListSize: UInt32
    dwCountryListOffset: UInt32
    _pack_ = 1
class LINEDEVCAPS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwProviderInfoSize: UInt32
    dwProviderInfoOffset: UInt32
    dwSwitchInfoSize: UInt32
    dwSwitchInfoOffset: UInt32
    dwPermanentLineID: UInt32
    dwLineNameSize: UInt32
    dwLineNameOffset: UInt32
    dwStringFormat: UInt32
    dwAddressModes: UInt32
    dwNumAddresses: UInt32
    dwBearerModes: UInt32
    dwMaxRate: UInt32
    dwMediaModes: UInt32
    dwGenerateToneModes: UInt32
    dwGenerateToneMaxNumFreq: UInt32
    dwGenerateDigitModes: UInt32
    dwMonitorToneMaxNumFreq: UInt32
    dwMonitorToneMaxNumEntries: UInt32
    dwMonitorDigitModes: UInt32
    dwGatherDigitsMinTimeout: UInt32
    dwGatherDigitsMaxTimeout: UInt32
    dwMedCtlDigitMaxListSize: UInt32
    dwMedCtlMediaMaxListSize: UInt32
    dwMedCtlToneMaxListSize: UInt32
    dwMedCtlCallStateMaxListSize: UInt32
    dwDevCapFlags: UInt32
    dwMaxNumActiveCalls: UInt32
    dwAnswerMode: UInt32
    dwRingModes: UInt32
    dwLineStates: UInt32
    dwUUIAcceptSize: UInt32
    dwUUIAnswerSize: UInt32
    dwUUIMakeCallSize: UInt32
    dwUUIDropSize: UInt32
    dwUUISendUserUserInfoSize: UInt32
    dwUUICallInfoSize: UInt32
    MinDialParams: Windows.Win32.Devices.Tapi.LINEDIALPARAMS
    MaxDialParams: Windows.Win32.Devices.Tapi.LINEDIALPARAMS
    DefaultDialParams: Windows.Win32.Devices.Tapi.LINEDIALPARAMS
    dwNumTerminals: UInt32
    dwTerminalCapsSize: UInt32
    dwTerminalCapsOffset: UInt32
    dwTerminalTextEntrySize: UInt32
    dwTerminalTextSize: UInt32
    dwTerminalTextOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwLineFeatures: UInt32
    dwSettableDevStatus: UInt32
    dwDeviceClassesSize: UInt32
    dwDeviceClassesOffset: UInt32
    PermanentLineGuid: Guid
    _pack_ = 1
class LINEDEVSTATUS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumOpens: UInt32
    dwOpenMediaModes: UInt32
    dwNumActiveCalls: UInt32
    dwNumOnHoldCalls: UInt32
    dwNumOnHoldPendCalls: UInt32
    dwLineFeatures: UInt32
    dwNumCallCompletions: UInt32
    dwRingMode: UInt32
    dwSignalLevel: UInt32
    dwBatteryLevel: UInt32
    dwRoamMode: UInt32
    dwDevStatusFlags: UInt32
    dwTerminalModesSize: UInt32
    dwTerminalModesOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwAvailableMediaModes: UInt32
    dwAppInfoSize: UInt32
    dwAppInfoOffset: UInt32
    _pack_ = 1
class LINEDIALPARAMS(EasyCastStructure):
    dwDialPause: UInt32
    dwDialSpeed: UInt32
    dwDigitDuration: UInt32
    dwWaitForDialtone: UInt32
    _pack_ = 1
@winfunctype_pointer
def LINEEVENT(htLine: Windows.Win32.Devices.Tapi.HTAPILINE, htCall: Windows.Win32.Devices.Tapi.HTAPICALL, dwMsg: UInt32, dwParam1: UIntPtr, dwParam2: UIntPtr, dwParam3: UIntPtr) -> Void: ...
class LINEEXTENSIONID(EasyCastStructure):
    dwExtensionID0: UInt32
    dwExtensionID1: UInt32
    dwExtensionID2: UInt32
    dwExtensionID3: UInt32
    _pack_ = 1
class LINEFORWARD(EasyCastStructure):
    dwForwardMode: UInt32
    dwCallerAddressSize: UInt32
    dwCallerAddressOffset: UInt32
    dwDestCountryCode: UInt32
    dwDestAddressSize: UInt32
    dwDestAddressOffset: UInt32
    _pack_ = 1
class LINEFORWARDLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNumEntries: UInt32
    ForwardList: Windows.Win32.Devices.Tapi.LINEFORWARD * 1
    _pack_ = 1
class LINEGENERATETONE(EasyCastStructure):
    dwFrequency: UInt32
    dwCadenceOn: UInt32
    dwCadenceOff: UInt32
    dwVolume: UInt32
    _pack_ = 1
class LINEINITIALIZEEXPARAMS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwOptions: UInt32
    Handles: _Handles_e__Union
    dwCompletionKey: UInt32
    _pack_ = 1
    class _Handles_e__Union(EasyCastUnion):
        hEvent: Windows.Win32.Foundation.HANDLE
        hCompletionPort: Windows.Win32.Foundation.HANDLE
        _pack_ = 1
class LINELOCATIONENTRY(EasyCastStructure):
    dwPermanentLocationID: UInt32
    dwLocationNameSize: UInt32
    dwLocationNameOffset: UInt32
    dwCountryCode: UInt32
    dwCityCodeSize: UInt32
    dwCityCodeOffset: UInt32
    dwPreferredCardID: UInt32
    dwLocalAccessCodeSize: UInt32
    dwLocalAccessCodeOffset: UInt32
    dwLongDistanceAccessCodeSize: UInt32
    dwLongDistanceAccessCodeOffset: UInt32
    dwTollPrefixListSize: UInt32
    dwTollPrefixListOffset: UInt32
    dwCountryID: UInt32
    dwOptions: UInt32
    dwCancelCallWaitingSize: UInt32
    dwCancelCallWaitingOffset: UInt32
    _pack_ = 1
class LINEMEDIACONTROLCALLSTATE(EasyCastStructure):
    dwCallStates: UInt32
    dwMediaControl: UInt32
    _pack_ = 1
class LINEMEDIACONTROLDIGIT(EasyCastStructure):
    dwDigit: UInt32
    dwDigitModes: UInt32
    dwMediaControl: UInt32
    _pack_ = 1
class LINEMEDIACONTROLMEDIA(EasyCastStructure):
    dwMediaModes: UInt32
    dwDuration: UInt32
    dwMediaControl: UInt32
    _pack_ = 1
class LINEMEDIACONTROLTONE(EasyCastStructure):
    dwAppSpecific: UInt32
    dwDuration: UInt32
    dwFrequency1: UInt32
    dwFrequency2: UInt32
    dwFrequency3: UInt32
    dwMediaControl: UInt32
    _pack_ = 1
class LINEMESSAGE(EasyCastStructure):
    hDevice: UInt32
    dwMessageID: UInt32
    dwCallbackInstance: UIntPtr
    dwParam1: UIntPtr
    dwParam2: UIntPtr
    dwParam3: UIntPtr
    _pack_ = 1
class LINEMONITORTONE(EasyCastStructure):
    dwAppSpecific: UInt32
    dwDuration: UInt32
    dwFrequency1: UInt32
    dwFrequency2: UInt32
    dwFrequency3: UInt32
    _pack_ = 1
class LINEPROVIDERENTRY(EasyCastStructure):
    dwPermanentProviderID: UInt32
    dwProviderFilenameSize: UInt32
    dwProviderFilenameOffset: UInt32
    _pack_ = 1
class LINEPROVIDERLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumProviders: UInt32
    dwProviderListSize: UInt32
    dwProviderListOffset: UInt32
    _pack_ = 1
class LINEPROXYREQUEST(EasyCastStructure):
    dwSize: UInt32
    dwClientMachineNameSize: UInt32
    dwClientMachineNameOffset: UInt32
    dwClientUserNameSize: UInt32
    dwClientUserNameOffset: UInt32
    dwClientAppAPIVersion: UInt32
    dwRequestType: UInt32
    Anonymous: _Anonymous_e__Union
    _pack_ = 1
    class _Anonymous_e__Union(EasyCastUnion):
        SetAgentGroup: _SetAgentGroup_e__Struct
        SetAgentState: _SetAgentState_e__Struct
        SetAgentActivity: _SetAgentActivity_e__Struct
        GetAgentCaps: _GetAgentCaps_e__Struct
        GetAgentStatus: _GetAgentStatus_e__Struct
        AgentSpecific: _AgentSpecific_e__Struct
        GetAgentActivityList: _GetAgentActivityList_e__Struct
        GetAgentGroupList: _GetAgentGroupList_e__Struct
        CreateAgent: _CreateAgent_e__Struct
        SetAgentStateEx: _SetAgentStateEx_e__Struct
        SetAgentMeasurementPeriod: _SetAgentMeasurementPeriod_e__Struct
        GetAgentInfo: _GetAgentInfo_e__Struct
        CreateAgentSession: _CreateAgentSession_e__Struct
        GetAgentSessionList: _GetAgentSessionList_e__Struct
        GetAgentSessionInfo: _GetAgentSessionInfo_e__Struct
        SetAgentSessionState: _SetAgentSessionState_e__Struct
        GetQueueList: _GetQueueList_e__Struct
        SetQueueMeasurementPeriod: _SetQueueMeasurementPeriod_e__Struct
        GetQueueInfo: _GetQueueInfo_e__Struct
        GetGroupList: _GetGroupList_e__Struct
        class _SetAgentGroup_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            GroupList: Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST
            _pack_ = 1
        class _SetAgentState_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            dwAgentState: UInt32
            dwNextAgentState: UInt32
            _pack_ = 1
        class _SetAgentActivity_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            dwActivityID: UInt32
            _pack_ = 1
        class _GetAgentCaps_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            AgentCaps: Windows.Win32.Devices.Tapi.LINEAGENTCAPS
            _pack_ = 1
        class _GetAgentStatus_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            AgentStatus: Windows.Win32.Devices.Tapi.LINEAGENTSTATUS
            _pack_ = 1
        class _AgentSpecific_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            dwAgentExtensionIDIndex: UInt32
            dwSize: UInt32
            Params: Byte * 1
            _pack_ = 1
        class _GetAgentActivityList_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            ActivityList: Windows.Win32.Devices.Tapi.LINEAGENTACTIVITYLIST
            _pack_ = 1
        class _GetAgentGroupList_e__Struct(EasyCastStructure):
            dwAddressID: UInt32
            GroupList: Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST
            _pack_ = 1
        class _CreateAgent_e__Struct(EasyCastStructure):
            hAgent: UInt32
            dwAgentIDSize: UInt32
            dwAgentIDOffset: UInt32
            dwAgentPINSize: UInt32
            dwAgentPINOffset: UInt32
            _pack_ = 1
        class _SetAgentStateEx_e__Struct(EasyCastStructure):
            hAgent: UInt32
            dwAgentState: UInt32
            dwNextAgentState: UInt32
            _pack_ = 1
        class _SetAgentMeasurementPeriod_e__Struct(EasyCastStructure):
            hAgent: UInt32
            dwMeasurementPeriod: UInt32
            _pack_ = 1
        class _GetAgentInfo_e__Struct(EasyCastStructure):
            hAgent: UInt32
            AgentInfo: Windows.Win32.Devices.Tapi.LINEAGENTINFO
            _pack_ = 1
        class _CreateAgentSession_e__Struct(EasyCastStructure):
            hAgentSession: UInt32
            dwAgentPINSize: UInt32
            dwAgentPINOffset: UInt32
            hAgent: UInt32
            GroupID: Guid
            dwWorkingAddressID: UInt32
            _pack_ = 1
        class _GetAgentSessionList_e__Struct(EasyCastStructure):
            hAgent: UInt32
            SessionList: Windows.Win32.Devices.Tapi.LINEAGENTSESSIONLIST
            _pack_ = 1
        class _GetAgentSessionInfo_e__Struct(EasyCastStructure):
            hAgentSession: UInt32
            SessionInfo: Windows.Win32.Devices.Tapi.LINEAGENTSESSIONINFO
            _pack_ = 1
        class _SetAgentSessionState_e__Struct(EasyCastStructure):
            hAgentSession: UInt32
            dwAgentSessionState: UInt32
            dwNextAgentSessionState: UInt32
            _pack_ = 1
        class _GetQueueList_e__Struct(EasyCastStructure):
            GroupID: Guid
            QueueList: Windows.Win32.Devices.Tapi.LINEQUEUELIST
            _pack_ = 1
        class _SetQueueMeasurementPeriod_e__Struct(EasyCastStructure):
            dwQueueID: UInt32
            dwMeasurementPeriod: UInt32
            _pack_ = 1
        class _GetQueueInfo_e__Struct(EasyCastStructure):
            dwQueueID: UInt32
            QueueInfo: Windows.Win32.Devices.Tapi.LINEQUEUEINFO
            _pack_ = 1
        class _GetGroupList_e__Struct(EasyCastStructure):
            GroupList: Windows.Win32.Devices.Tapi.LINEAGENTGROUPLIST
class LINEPROXYREQUESTLIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumEntries: UInt32
    dwListSize: UInt32
    dwListOffset: UInt32
    _pack_ = 1
class LINEQUEUEENTRY(EasyCastStructure):
    dwQueueID: UInt32
    dwNameSize: UInt32
    dwNameOffset: UInt32
    _pack_ = 1
class LINEQUEUEINFO(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwMeasurementPeriod: UInt32
    dwTotalCallsQueued: UInt32
    dwCurrentCallsQueued: UInt32
    dwTotalCallsAbandoned: UInt32
    dwTotalCallsFlowedIn: UInt32
    dwTotalCallsFlowedOut: UInt32
    dwLongestEverWaitTime: UInt32
    dwCurrentLongestWaitTime: UInt32
    dwAverageWaitTime: UInt32
    dwFinalDisposition: UInt32
    _pack_ = 1
class LINEQUEUELIST(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumEntries: UInt32
    dwListSize: UInt32
    dwListOffset: UInt32
    _pack_ = 1
class LINEREQMAKECALL(EasyCastStructure):
    szDestAddress: Windows.Win32.Foundation.CHAR * 80
    szAppName: Windows.Win32.Foundation.CHAR * 40
    szCalledParty: Windows.Win32.Foundation.CHAR * 40
    szComment: Windows.Win32.Foundation.CHAR * 80
class LINEREQMAKECALLW(EasyCastStructure):
    szDestAddress: Char * 80
    szAppName: Char * 40
    szCalledParty: Char * 40
    szComment: Char * 80
    _pack_ = 1
class LINEREQMEDIACALL(EasyCastStructure):
    hWnd: Windows.Win32.Foundation.HWND
    wRequestID: Windows.Win32.Foundation.WPARAM
    szDeviceClass: Windows.Win32.Foundation.CHAR * 40
    ucDeviceID: Byte * 40
    dwSize: UInt32
    dwSecure: UInt32
    szDestAddress: Windows.Win32.Foundation.CHAR * 80
    szAppName: Windows.Win32.Foundation.CHAR * 40
    szCalledParty: Windows.Win32.Foundation.CHAR * 40
    szComment: Windows.Win32.Foundation.CHAR * 80
    _pack_ = 1
class LINEREQMEDIACALLW(EasyCastStructure):
    hWnd: Windows.Win32.Foundation.HWND
    wRequestID: Windows.Win32.Foundation.WPARAM
    szDeviceClass: Char * 40
    ucDeviceID: Byte * 40
    dwSize: UInt32
    dwSecure: UInt32
    szDestAddress: Char * 80
    szAppName: Char * 40
    szCalledParty: Char * 40
    szComment: Char * 80
    _pack_ = 1
class LINETERMCAPS(EasyCastStructure):
    dwTermDev: UInt32
    dwTermModes: UInt32
    dwTermSharing: UInt32
    _pack_ = 1
class LINETRANSLATECAPS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwNumLocations: UInt32
    dwLocationListSize: UInt32
    dwLocationListOffset: UInt32
    dwCurrentLocationID: UInt32
    dwNumCards: UInt32
    dwCardListSize: UInt32
    dwCardListOffset: UInt32
    dwCurrentPreferredCardID: UInt32
    _pack_ = 1
class LINETRANSLATEOUTPUT(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwDialableStringSize: UInt32
    dwDialableStringOffset: UInt32
    dwDisplayableStringSize: UInt32
    dwDisplayableStringOffset: UInt32
    dwCurrentCountry: UInt32
    dwDestCountry: UInt32
    dwTranslateResults: UInt32
    _pack_ = 1
@winfunctype_pointer
def LPGETTNEFSTREAMCODEPAGE(lpStream: Windows.Win32.System.Com.IStream_head, lpulCodepage: POINTER(UInt32), lpulSubCodepage: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def LPOPENTNEFSTREAM(lpvSupport: c_void_p, lpStream: Windows.Win32.System.Com.IStream_head, lpszStreamName: POINTER(SByte), ulFlags: UInt32, lpMessage: Windows.Win32.System.AddressBook.IMessage_head, wKeyVal: UInt16, lppTNEF: POINTER(Windows.Win32.Devices.Tapi.ITnef_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def LPOPENTNEFSTREAMEX(lpvSupport: c_void_p, lpStream: Windows.Win32.System.Com.IStream_head, lpszStreamName: POINTER(SByte), ulFlags: UInt32, lpMessage: Windows.Win32.System.AddressBook.IMessage_head, wKeyVal: UInt16, lpAdressBook: Windows.Win32.System.AddressBook.IAddrBook_head, lppTNEF: POINTER(Windows.Win32.Devices.Tapi.ITnef_head)) -> Windows.Win32.Foundation.HRESULT: ...
MSP_ADDRESS_EVENT = Int32
ADDRESS_TERMINAL_AVAILABLE: MSP_ADDRESS_EVENT = 0
ADDRESS_TERMINAL_UNAVAILABLE: MSP_ADDRESS_EVENT = 1
MSP_CALL_EVENT = Int32
CALL_NEW_STREAM: MSP_CALL_EVENT = 0
CALL_STREAM_FAIL: MSP_CALL_EVENT = 1
CALL_TERMINAL_FAIL: MSP_CALL_EVENT = 2
CALL_STREAM_NOT_USED: MSP_CALL_EVENT = 3
CALL_STREAM_ACTIVE: MSP_CALL_EVENT = 4
CALL_STREAM_INACTIVE: MSP_CALL_EVENT = 5
MSP_CALL_EVENT_CAUSE = Int32
CALL_CAUSE_UNKNOWN: MSP_CALL_EVENT_CAUSE = 0
CALL_CAUSE_BAD_DEVICE: MSP_CALL_EVENT_CAUSE = 1
CALL_CAUSE_CONNECT_FAIL: MSP_CALL_EVENT_CAUSE = 2
CALL_CAUSE_LOCAL_REQUEST: MSP_CALL_EVENT_CAUSE = 3
CALL_CAUSE_REMOTE_REQUEST: MSP_CALL_EVENT_CAUSE = 4
CALL_CAUSE_MEDIA_TIMEOUT: MSP_CALL_EVENT_CAUSE = 5
CALL_CAUSE_MEDIA_RECOVERED: MSP_CALL_EVENT_CAUSE = 6
CALL_CAUSE_QUALITY_OF_SERVICE: MSP_CALL_EVENT_CAUSE = 7
MSP_EVENT = Int32
ME_ADDRESS_EVENT: MSP_EVENT = 0
ME_CALL_EVENT: MSP_EVENT = 1
ME_TSP_DATA: MSP_EVENT = 2
ME_PRIVATE_EVENT: MSP_EVENT = 3
ME_ASR_TERMINAL_EVENT: MSP_EVENT = 4
ME_TTS_TERMINAL_EVENT: MSP_EVENT = 5
ME_FILE_TERMINAL_EVENT: MSP_EVENT = 6
ME_TONE_TERMINAL_EVENT: MSP_EVENT = 7
class MSP_EVENT_INFO(EasyCastStructure):
    dwSize: UInt32
    Event: Windows.Win32.Devices.Tapi.MSP_EVENT
    hCall: POINTER(Int32)
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(EasyCastUnion):
        MSP_ADDRESS_EVENT_INFO: _MSP_ADDRESS_EVENT_INFO_e__Struct
        MSP_CALL_EVENT_INFO: _MSP_CALL_EVENT_INFO_e__Struct
        MSP_TSP_DATA: _MSP_TSP_DATA_e__Struct
        MSP_PRIVATE_EVENT_INFO: _MSP_PRIVATE_EVENT_INFO_e__Struct
        MSP_FILE_TERMINAL_EVENT_INFO: _MSP_FILE_TERMINAL_EVENT_INFO_e__Struct
        MSP_ASR_TERMINAL_EVENT_INFO: _MSP_ASR_TERMINAL_EVENT_INFO_e__Struct
        MSP_TTS_TERMINAL_EVENT_INFO: _MSP_TTS_TERMINAL_EVENT_INFO_e__Struct
        MSP_TONE_TERMINAL_EVENT_INFO: _MSP_TONE_TERMINAL_EVENT_INFO_e__Struct
        class _MSP_ADDRESS_EVENT_INFO_e__Struct(EasyCastStructure):
            Type: Windows.Win32.Devices.Tapi.MSP_ADDRESS_EVENT
            pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head
        class _MSP_CALL_EVENT_INFO_e__Struct(EasyCastStructure):
            Type: Windows.Win32.Devices.Tapi.MSP_CALL_EVENT
            Cause: Windows.Win32.Devices.Tapi.MSP_CALL_EVENT_CAUSE
            pStream: Windows.Win32.Devices.Tapi.ITStream_head
            pTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head
            hrError: Windows.Win32.Foundation.HRESULT
        class _MSP_TSP_DATA_e__Struct(EasyCastStructure):
            dwBufferSize: UInt32
            pBuffer: Byte * 1
        class _MSP_PRIVATE_EVENT_INFO_e__Struct(EasyCastStructure):
            pEvent: Windows.Win32.System.Com.IDispatch_head
            lEventCode: Int32
        class _MSP_FILE_TERMINAL_EVENT_INFO_e__Struct(EasyCastStructure):
            pParentFileTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head
            pFileTrack: Windows.Win32.Devices.Tapi.ITFileTrack_head
            TerminalMediaState: Windows.Win32.Devices.Tapi.TERMINAL_MEDIA_STATE
            ftecEventCause: Windows.Win32.Devices.Tapi.FT_STATE_EVENT_CAUSE
            hrErrorCode: Windows.Win32.Foundation.HRESULT
        class _MSP_ASR_TERMINAL_EVENT_INFO_e__Struct(EasyCastStructure):
            pASRTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head
            hrErrorCode: Windows.Win32.Foundation.HRESULT
        class _MSP_TTS_TERMINAL_EVENT_INFO_e__Struct(EasyCastStructure):
            pTTSTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head
            hrErrorCode: Windows.Win32.Foundation.HRESULT
        class _MSP_TONE_TERMINAL_EVENT_INFO_e__Struct(EasyCastStructure):
            pToneTerminal: Windows.Win32.Devices.Tapi.ITTerminal_head
            hrErrorCode: Windows.Win32.Foundation.HRESULT
McastAddressAllocation = Guid('df0daef2-a289-11d1-86-97-00-60-08-b0-e5-d2')
class NSID(EasyCastStructure):
    dwSize: UInt32
    uchType: Byte * 16
    xtype: UInt32
    lTime: Int32
    address: _address_e__Union
    class _address_e__Union(EasyCastUnion):
        alias: Windows.Win32.Devices.Tapi.ADDRALIAS
        rgchInterNet: Windows.Win32.Foundation.CHAR * 1
class PHONEBUTTONINFO(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwButtonMode: UInt32
    dwButtonFunction: UInt32
    dwButtonTextSize: UInt32
    dwButtonTextOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwButtonState: UInt32
    _pack_ = 1
@winfunctype_pointer
def PHONECALLBACK(hDevice: UInt32, dwMessage: UInt32, dwInstance: UIntPtr, dwParam1: UIntPtr, dwParam2: UIntPtr, dwParam3: UIntPtr) -> Void: ...
class PHONECAPS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwProviderInfoSize: UInt32
    dwProviderInfoOffset: UInt32
    dwPhoneInfoSize: UInt32
    dwPhoneInfoOffset: UInt32
    dwPermanentPhoneID: UInt32
    dwPhoneNameSize: UInt32
    dwPhoneNameOffset: UInt32
    dwStringFormat: UInt32
    dwPhoneStates: UInt32
    dwHookSwitchDevs: UInt32
    dwHandsetHookSwitchModes: UInt32
    dwSpeakerHookSwitchModes: UInt32
    dwHeadsetHookSwitchModes: UInt32
    dwVolumeFlags: UInt32
    dwGainFlags: UInt32
    dwDisplayNumRows: UInt32
    dwDisplayNumColumns: UInt32
    dwNumRingModes: UInt32
    dwNumButtonLamps: UInt32
    dwButtonModesSize: UInt32
    dwButtonModesOffset: UInt32
    dwButtonFunctionsSize: UInt32
    dwButtonFunctionsOffset: UInt32
    dwLampModesSize: UInt32
    dwLampModesOffset: UInt32
    dwNumSetData: UInt32
    dwSetDataSize: UInt32
    dwSetDataOffset: UInt32
    dwNumGetData: UInt32
    dwGetDataSize: UInt32
    dwGetDataOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwDeviceClassesSize: UInt32
    dwDeviceClassesOffset: UInt32
    dwPhoneFeatures: UInt32
    dwSettableHandsetHookSwitchModes: UInt32
    dwSettableSpeakerHookSwitchModes: UInt32
    dwSettableHeadsetHookSwitchModes: UInt32
    dwMonitoredHandsetHookSwitchModes: UInt32
    dwMonitoredSpeakerHookSwitchModes: UInt32
    dwMonitoredHeadsetHookSwitchModes: UInt32
    PermanentPhoneGuid: Guid
    _pack_ = 1
PHONECAPS_BUFFER = Int32
PCB_DEVSPECIFICBUFFER: PHONECAPS_BUFFER = 0
PHONECAPS_LONG = Int32
PCL_HOOKSWITCHES: PHONECAPS_LONG = 0
PCL_HANDSETHOOKSWITCHMODES: PHONECAPS_LONG = 1
PCL_HEADSETHOOKSWITCHMODES: PHONECAPS_LONG = 2
PCL_SPEAKERPHONEHOOKSWITCHMODES: PHONECAPS_LONG = 3
PCL_DISPLAYNUMROWS: PHONECAPS_LONG = 4
PCL_DISPLAYNUMCOLUMNS: PHONECAPS_LONG = 5
PCL_NUMRINGMODES: PHONECAPS_LONG = 6
PCL_NUMBUTTONLAMPS: PHONECAPS_LONG = 7
PCL_GENERICPHONE: PHONECAPS_LONG = 8
PHONECAPS_STRING = Int32
PCS_PHONENAME: PHONECAPS_STRING = 0
PCS_PHONEINFO: PHONECAPS_STRING = 1
PCS_PROVIDERINFO: PHONECAPS_STRING = 2
@winfunctype_pointer
def PHONEEVENT(htPhone: Windows.Win32.Devices.Tapi.HTAPIPHONE, dwMsg: UInt32, dwParam1: UIntPtr, dwParam2: UIntPtr, dwParam3: UIntPtr) -> Void: ...
class PHONEEXTENSIONID(EasyCastStructure):
    dwExtensionID0: UInt32
    dwExtensionID1: UInt32
    dwExtensionID2: UInt32
    dwExtensionID3: UInt32
    _pack_ = 1
class PHONEINITIALIZEEXPARAMS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwOptions: UInt32
    Handles: _Handles_e__Union
    dwCompletionKey: UInt32
    _pack_ = 1
    class _Handles_e__Union(EasyCastUnion):
        hEvent: Windows.Win32.Foundation.HANDLE
        hCompletionPort: Windows.Win32.Foundation.HANDLE
        _pack_ = 1
class PHONEMESSAGE(EasyCastStructure):
    hDevice: UInt32
    dwMessageID: UInt32
    dwCallbackInstance: UIntPtr
    dwParam1: UIntPtr
    dwParam2: UIntPtr
    dwParam3: UIntPtr
    _pack_ = 1
class PHONESTATUS(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwStatusFlags: UInt32
    dwNumOwners: UInt32
    dwNumMonitors: UInt32
    dwRingMode: UInt32
    dwRingVolume: UInt32
    dwHandsetHookSwitchMode: UInt32
    dwHandsetVolume: UInt32
    dwHandsetGain: UInt32
    dwSpeakerHookSwitchMode: UInt32
    dwSpeakerVolume: UInt32
    dwSpeakerGain: UInt32
    dwHeadsetHookSwitchMode: UInt32
    dwHeadsetVolume: UInt32
    dwHeadsetGain: UInt32
    dwDisplaySize: UInt32
    dwDisplayOffset: UInt32
    dwLampModesSize: UInt32
    dwLampModesOffset: UInt32
    dwOwnerNameSize: UInt32
    dwOwnerNameOffset: UInt32
    dwDevSpecificSize: UInt32
    dwDevSpecificOffset: UInt32
    dwPhoneFeatures: UInt32
    _pack_ = 1
PHONE_BUTTON_FUNCTION = Int32
PBF_UNKNOWN: PHONE_BUTTON_FUNCTION = 0
PBF_CONFERENCE: PHONE_BUTTON_FUNCTION = 1
PBF_TRANSFER: PHONE_BUTTON_FUNCTION = 2
PBF_DROP: PHONE_BUTTON_FUNCTION = 3
PBF_HOLD: PHONE_BUTTON_FUNCTION = 4
PBF_RECALL: PHONE_BUTTON_FUNCTION = 5
PBF_DISCONNECT: PHONE_BUTTON_FUNCTION = 6
PBF_CONNECT: PHONE_BUTTON_FUNCTION = 7
PBF_MSGWAITON: PHONE_BUTTON_FUNCTION = 8
PBF_MSGWAITOFF: PHONE_BUTTON_FUNCTION = 9
PBF_SELECTRING: PHONE_BUTTON_FUNCTION = 10
PBF_ABBREVDIAL: PHONE_BUTTON_FUNCTION = 11
PBF_FORWARD: PHONE_BUTTON_FUNCTION = 12
PBF_PICKUP: PHONE_BUTTON_FUNCTION = 13
PBF_RINGAGAIN: PHONE_BUTTON_FUNCTION = 14
PBF_PARK: PHONE_BUTTON_FUNCTION = 15
PBF_REJECT: PHONE_BUTTON_FUNCTION = 16
PBF_REDIRECT: PHONE_BUTTON_FUNCTION = 17
PBF_MUTE: PHONE_BUTTON_FUNCTION = 18
PBF_VOLUMEUP: PHONE_BUTTON_FUNCTION = 19
PBF_VOLUMEDOWN: PHONE_BUTTON_FUNCTION = 20
PBF_SPEAKERON: PHONE_BUTTON_FUNCTION = 21
PBF_SPEAKEROFF: PHONE_BUTTON_FUNCTION = 22
PBF_FLASH: PHONE_BUTTON_FUNCTION = 23
PBF_DATAON: PHONE_BUTTON_FUNCTION = 24
PBF_DATAOFF: PHONE_BUTTON_FUNCTION = 25
PBF_DONOTDISTURB: PHONE_BUTTON_FUNCTION = 26
PBF_INTERCOM: PHONE_BUTTON_FUNCTION = 27
PBF_BRIDGEDAPP: PHONE_BUTTON_FUNCTION = 28
PBF_BUSY: PHONE_BUTTON_FUNCTION = 29
PBF_CALLAPP: PHONE_BUTTON_FUNCTION = 30
PBF_DATETIME: PHONE_BUTTON_FUNCTION = 31
PBF_DIRECTORY: PHONE_BUTTON_FUNCTION = 32
PBF_COVER: PHONE_BUTTON_FUNCTION = 33
PBF_CALLID: PHONE_BUTTON_FUNCTION = 34
PBF_LASTNUM: PHONE_BUTTON_FUNCTION = 35
PBF_NIGHTSRV: PHONE_BUTTON_FUNCTION = 36
PBF_SENDCALLS: PHONE_BUTTON_FUNCTION = 37
PBF_MSGINDICATOR: PHONE_BUTTON_FUNCTION = 38
PBF_REPDIAL: PHONE_BUTTON_FUNCTION = 39
PBF_SETREPDIAL: PHONE_BUTTON_FUNCTION = 40
PBF_SYSTEMSPEED: PHONE_BUTTON_FUNCTION = 41
PBF_STATIONSPEED: PHONE_BUTTON_FUNCTION = 42
PBF_CAMPON: PHONE_BUTTON_FUNCTION = 43
PBF_SAVEREPEAT: PHONE_BUTTON_FUNCTION = 44
PBF_QUEUECALL: PHONE_BUTTON_FUNCTION = 45
PBF_NONE: PHONE_BUTTON_FUNCTION = 46
PBF_SEND: PHONE_BUTTON_FUNCTION = 47
PHONE_BUTTON_MODE = Int32
PBM_DUMMY: PHONE_BUTTON_MODE = 0
PBM_CALL: PHONE_BUTTON_MODE = 1
PBM_FEATURE: PHONE_BUTTON_MODE = 2
PBM_KEYPAD: PHONE_BUTTON_MODE = 3
PBM_LOCAL: PHONE_BUTTON_MODE = 4
PBM_DISPLAY: PHONE_BUTTON_MODE = 5
PHONE_BUTTON_STATE = Int32
PBS_UP: PHONE_BUTTON_STATE = 1
PBS_DOWN: PHONE_BUTTON_STATE = 2
PBS_UNKNOWN: PHONE_BUTTON_STATE = 4
PBS_UNAVAIL: PHONE_BUTTON_STATE = 8
PHONE_EVENT = Int32
PE_DISPLAY: PHONE_EVENT = 0
PE_LAMPMODE: PHONE_EVENT = 1
PE_RINGMODE: PHONE_EVENT = 2
PE_RINGVOLUME: PHONE_EVENT = 3
PE_HOOKSWITCH: PHONE_EVENT = 4
PE_CAPSCHANGE: PHONE_EVENT = 5
PE_BUTTON: PHONE_EVENT = 6
PE_CLOSE: PHONE_EVENT = 7
PE_NUMBERGATHERED: PHONE_EVENT = 8
PE_DIALING: PHONE_EVENT = 9
PE_ANSWER: PHONE_EVENT = 10
PE_DISCONNECT: PHONE_EVENT = 11
PE_LASTITEM: PHONE_EVENT = 11
PHONE_HOOK_SWITCH_DEVICE = Int32
PHSD_HANDSET: PHONE_HOOK_SWITCH_DEVICE = 1
PHSD_SPEAKERPHONE: PHONE_HOOK_SWITCH_DEVICE = 2
PHSD_HEADSET: PHONE_HOOK_SWITCH_DEVICE = 4
PHONE_HOOK_SWITCH_STATE = Int32
PHSS_ONHOOK: PHONE_HOOK_SWITCH_STATE = 1
PHSS_OFFHOOK_MIC_ONLY: PHONE_HOOK_SWITCH_STATE = 2
PHSS_OFFHOOK_SPEAKER_ONLY: PHONE_HOOK_SWITCH_STATE = 4
PHSS_OFFHOOK: PHONE_HOOK_SWITCH_STATE = 8
PHONE_LAMP_MODE = Int32
LM_DUMMY: PHONE_LAMP_MODE = 1
LM_OFF: PHONE_LAMP_MODE = 2
LM_STEADY: PHONE_LAMP_MODE = 4
LM_WINK: PHONE_LAMP_MODE = 8
LM_FLASH: PHONE_LAMP_MODE = 16
LM_FLUTTER: PHONE_LAMP_MODE = 32
LM_BROKENFLUTTER: PHONE_LAMP_MODE = 64
LM_UNKNOWN: PHONE_LAMP_MODE = 128
PHONE_PRIVILEGE = Int32
PP_OWNER: PHONE_PRIVILEGE = 0
PP_MONITOR: PHONE_PRIVILEGE = 1
PHONE_TONE = Int32
PT_KEYPADZERO: PHONE_TONE = 0
PT_KEYPADONE: PHONE_TONE = 1
PT_KEYPADTWO: PHONE_TONE = 2
PT_KEYPADTHREE: PHONE_TONE = 3
PT_KEYPADFOUR: PHONE_TONE = 4
PT_KEYPADFIVE: PHONE_TONE = 5
PT_KEYPADSIX: PHONE_TONE = 6
PT_KEYPADSEVEN: PHONE_TONE = 7
PT_KEYPADEIGHT: PHONE_TONE = 8
PT_KEYPADNINE: PHONE_TONE = 9
PT_KEYPADSTAR: PHONE_TONE = 10
PT_KEYPADPOUND: PHONE_TONE = 11
PT_KEYPADA: PHONE_TONE = 12
PT_KEYPADB: PHONE_TONE = 13
PT_KEYPADC: PHONE_TONE = 14
PT_KEYPADD: PHONE_TONE = 15
PT_NORMALDIALTONE: PHONE_TONE = 16
PT_EXTERNALDIALTONE: PHONE_TONE = 17
PT_BUSY: PHONE_TONE = 18
PT_RINGBACK: PHONE_TONE = 19
PT_ERRORTONE: PHONE_TONE = 20
PT_SILENCE: PHONE_TONE = 21
QOS_EVENT = Int32
QE_NOQOS: QOS_EVENT = 1
QE_ADMISSIONFAILURE: QOS_EVENT = 2
QE_POLICYFAILURE: QOS_EVENT = 3
QE_GENERICERROR: QOS_EVENT = 4
QE_LASTITEM: QOS_EVENT = 4
QOS_SERVICE_LEVEL = Int32
QSL_NEEDED: QOS_SERVICE_LEVEL = 1
QSL_IF_AVAILABLE: QOS_SERVICE_LEVEL = 2
QSL_BEST_EFFORT: QOS_SERVICE_LEVEL = 3
class RENDDATA(EasyCastStructure):
    atyp: UInt16
    ulPosition: UInt32
    dxWidth: UInt16
    dyHeight: UInt16
    dwFlags: UInt32
    _pack_ = 1
RND_ADVERTISING_SCOPE = Int32
RAS_LOCAL: RND_ADVERTISING_SCOPE = 1
RAS_SITE: RND_ADVERTISING_SCOPE = 2
RAS_REGION: RND_ADVERTISING_SCOPE = 3
RAS_WORLD: RND_ADVERTISING_SCOPE = 4
Rendezvous = Guid('f1029e5b-cb5b-11d0-8d-59-00-c0-4f-d9-1a-c0')
RequestMakeCall = Guid('ac48ffe0-f8c4-11d1-a0-30-00-c0-4f-b6-80-9f')
class STnefProblem(EasyCastStructure):
    ulComponent: UInt32
    ulAttribute: UInt32
    ulPropTag: UInt32
    scode: Int32
class STnefProblemArray(EasyCastStructure):
    cProblem: UInt32
    aProblem: Windows.Win32.Devices.Tapi.STnefProblem * 1
TAPI = Guid('21d6d48e-a88b-11d0-83-dd-00-aa-00-3c-ca-bd')
TAPIOBJECT_EVENT = Int32
TE_ADDRESSCREATE: TAPIOBJECT_EVENT = 0
TE_ADDRESSREMOVE: TAPIOBJECT_EVENT = 1
TE_REINIT: TAPIOBJECT_EVENT = 2
TE_TRANSLATECHANGE: TAPIOBJECT_EVENT = 3
TE_ADDRESSCLOSE: TAPIOBJECT_EVENT = 4
TE_PHONECREATE: TAPIOBJECT_EVENT = 5
TE_PHONEREMOVE: TAPIOBJECT_EVENT = 6
class TAPI_CUSTOMTONE(EasyCastStructure):
    dwFrequency: UInt32
    dwCadenceOn: UInt32
    dwCadenceOff: UInt32
    dwVolume: UInt32
class TAPI_DETECTTONE(EasyCastStructure):
    dwAppSpecific: UInt32
    dwDuration: UInt32
    dwFrequency1: UInt32
    dwFrequency2: UInt32
    dwFrequency3: UInt32
TAPI_EVENT = Int32
TE_TAPIOBJECT: TAPI_EVENT = 1
TE_ADDRESS: TAPI_EVENT = 2
TE_CALLNOTIFICATION: TAPI_EVENT = 4
TE_CALLSTATE: TAPI_EVENT = 8
TE_CALLMEDIA: TAPI_EVENT = 16
TE_CALLHUB: TAPI_EVENT = 32
TE_CALLINFOCHANGE: TAPI_EVENT = 64
TE_PRIVATE: TAPI_EVENT = 128
TE_REQUEST: TAPI_EVENT = 256
TE_AGENT: TAPI_EVENT = 512
TE_AGENTSESSION: TAPI_EVENT = 1024
TE_QOSEVENT: TAPI_EVENT = 2048
TE_AGENTHANDLER: TAPI_EVENT = 4096
TE_ACDGROUP: TAPI_EVENT = 8192
TE_QUEUE: TAPI_EVENT = 16384
TE_DIGITEVENT: TAPI_EVENT = 32768
TE_GENERATEEVENT: TAPI_EVENT = 65536
TE_ASRTERMINAL: TAPI_EVENT = 131072
TE_TTSTERMINAL: TAPI_EVENT = 262144
TE_FILETERMINAL: TAPI_EVENT = 524288
TE_TONETERMINAL: TAPI_EVENT = 1048576
TE_PHONEEVENT: TAPI_EVENT = 2097152
TE_TONEEVENT: TAPI_EVENT = 4194304
TE_GATHERDIGITS: TAPI_EVENT = 8388608
TE_ADDRESSDEVSPECIFIC: TAPI_EVENT = 16777216
TE_PHONEDEVSPECIFIC: TAPI_EVENT = 33554432
TAPI_GATHERTERM = Int32
TGT_BUFFERFULL: TAPI_GATHERTERM = 1
TGT_TERMDIGIT: TAPI_GATHERTERM = 2
TGT_FIRSTTIMEOUT: TAPI_GATHERTERM = 4
TGT_INTERTIMEOUT: TAPI_GATHERTERM = 8
TGT_CANCEL: TAPI_GATHERTERM = 16
TAPI_OBJECT_TYPE = Int32
TOT_NONE: TAPI_OBJECT_TYPE = 0
TOT_TAPI: TAPI_OBJECT_TYPE = 1
TOT_ADDRESS: TAPI_OBJECT_TYPE = 2
TOT_TERMINAL: TAPI_OBJECT_TYPE = 3
TOT_CALL: TAPI_OBJECT_TYPE = 4
TOT_CALLHUB: TAPI_OBJECT_TYPE = 5
TOT_PHONE: TAPI_OBJECT_TYPE = 6
TAPI_TONEMODE = Int32
TTM_RINGBACK: TAPI_TONEMODE = 2
TTM_BUSY: TAPI_TONEMODE = 4
TTM_BEEP: TAPI_TONEMODE = 8
TTM_BILLING: TAPI_TONEMODE = 16
TERMINAL_DIRECTION = Int32
TD_CAPTURE: TERMINAL_DIRECTION = 0
TD_RENDER: TERMINAL_DIRECTION = 1
TD_BIDIRECTIONAL: TERMINAL_DIRECTION = 2
TD_MULTITRACK_MIXED: TERMINAL_DIRECTION = 3
TD_NONE: TERMINAL_DIRECTION = 4
TERMINAL_MEDIA_STATE = Int32
TMS_IDLE: TERMINAL_MEDIA_STATE = 0
TMS_ACTIVE: TERMINAL_MEDIA_STATE = 1
TMS_PAUSED: TERMINAL_MEDIA_STATE = 2
TMS_LASTITEM: TERMINAL_MEDIA_STATE = 2
TERMINAL_STATE = Int32
TS_INUSE: TERMINAL_STATE = 0
TS_NOTINUSE: TERMINAL_STATE = 1
TERMINAL_TYPE = Int32
TT_STATIC: TERMINAL_TYPE = 0
TT_DYNAMIC: TERMINAL_TYPE = 1
class TRP(EasyCastStructure):
    trpid: UInt16
    cbgrtrp: UInt16
    cch: UInt16
    cbRgb: UInt16
class TUISPICREATEDIALOGINSTANCEPARAMS(EasyCastStructure):
    dwRequestID: UInt32
    hdDlgInst: Windows.Win32.Devices.Tapi.HDRVDIALOGINSTANCE
    htDlgInst: UInt32
    lpszUIDLLName: Windows.Win32.Foundation.PWSTR
    lpParams: c_void_p
    dwSize: UInt32
@winfunctype_pointer
def TUISPIDLLCALLBACK(dwObjectID: UIntPtr, dwObjectType: UInt32, lpParams: c_void_p, dwSize: UInt32) -> Int32: ...
class VARSTRING(EasyCastStructure):
    dwTotalSize: UInt32
    dwNeededSize: UInt32
    dwUsedSize: UInt32
    dwStringFormat: UInt32
    dwStringSize: UInt32
    dwStringOffset: UInt32
    _pack_ = 1
make_head(_module, 'ADDRALIAS')
make_head(_module, 'ASYNC_COMPLETION')
make_head(_module, 'DTR')
make_head(_module, 'IEnumACDGroup')
make_head(_module, 'IEnumAddress')
make_head(_module, 'IEnumAgent')
make_head(_module, 'IEnumAgentHandler')
make_head(_module, 'IEnumAgentSession')
make_head(_module, 'IEnumBstr')
make_head(_module, 'IEnumCall')
make_head(_module, 'IEnumCallHub')
make_head(_module, 'IEnumCallingCard')
make_head(_module, 'IEnumDialableAddrs')
make_head(_module, 'IEnumDirectory')
make_head(_module, 'IEnumDirectoryObject')
make_head(_module, 'IEnumLocation')
make_head(_module, 'IEnumMcastScope')
make_head(_module, 'IEnumPhone')
make_head(_module, 'IEnumPluggableSuperclassInfo')
make_head(_module, 'IEnumPluggableTerminalClassInfo')
make_head(_module, 'IEnumQueue')
make_head(_module, 'IEnumStream')
make_head(_module, 'IEnumSubStream')
make_head(_module, 'IEnumTerminal')
make_head(_module, 'IEnumTerminalClass')
make_head(_module, 'IMcastAddressAllocation')
make_head(_module, 'IMcastLeaseInfo')
make_head(_module, 'IMcastScope')
make_head(_module, 'ITACDGroup')
make_head(_module, 'ITACDGroupEvent')
make_head(_module, 'ITAMMediaFormat')
make_head(_module, 'ITASRTerminalEvent')
make_head(_module, 'ITAddress')
make_head(_module, 'ITAddress2')
make_head(_module, 'ITAddressCapabilities')
make_head(_module, 'ITAddressDeviceSpecificEvent')
make_head(_module, 'ITAddressEvent')
make_head(_module, 'ITAddressTranslation')
make_head(_module, 'ITAddressTranslationInfo')
make_head(_module, 'ITAgent')
make_head(_module, 'ITAgentEvent')
make_head(_module, 'ITAgentHandler')
make_head(_module, 'ITAgentHandlerEvent')
make_head(_module, 'ITAgentSession')
make_head(_module, 'ITAgentSessionEvent')
make_head(_module, 'ITAllocatorProperties')
make_head(_module, 'ITAutomatedPhoneControl')
make_head(_module, 'ITBasicAudioTerminal')
make_head(_module, 'ITBasicCallControl')
make_head(_module, 'ITBasicCallControl2')
make_head(_module, 'ITCallHub')
make_head(_module, 'ITCallHubEvent')
make_head(_module, 'ITCallInfo')
make_head(_module, 'ITCallInfo2')
make_head(_module, 'ITCallInfoChangeEvent')
make_head(_module, 'ITCallMediaEvent')
make_head(_module, 'ITCallNotificationEvent')
make_head(_module, 'ITCallStateEvent')
make_head(_module, 'ITCallingCard')
make_head(_module, 'ITCollection')
make_head(_module, 'ITCollection2')
make_head(_module, 'ITCustomTone')
make_head(_module, 'ITDetectTone')
make_head(_module, 'ITDigitDetectionEvent')
make_head(_module, 'ITDigitGenerationEvent')
make_head(_module, 'ITDigitsGatheredEvent')
make_head(_module, 'ITDirectory')
make_head(_module, 'ITDirectoryObject')
make_head(_module, 'ITDirectoryObjectConference')
make_head(_module, 'ITDirectoryObjectUser')
make_head(_module, 'ITDispatchMapper')
make_head(_module, 'ITFileTerminalEvent')
make_head(_module, 'ITFileTrack')
make_head(_module, 'ITForwardInformation')
make_head(_module, 'ITForwardInformation2')
make_head(_module, 'ITILSConfig')
make_head(_module, 'ITLegacyAddressMediaControl')
make_head(_module, 'ITLegacyAddressMediaControl2')
make_head(_module, 'ITLegacyCallMediaControl')
make_head(_module, 'ITLegacyCallMediaControl2')
make_head(_module, 'ITLegacyWaveSupport')
make_head(_module, 'ITLocationInfo')
make_head(_module, 'ITMSPAddress')
make_head(_module, 'ITMediaControl')
make_head(_module, 'ITMediaPlayback')
make_head(_module, 'ITMediaRecord')
make_head(_module, 'ITMediaSupport')
make_head(_module, 'ITMultiTrackTerminal')
make_head(_module, 'ITPhone')
make_head(_module, 'ITPhoneDeviceSpecificEvent')
make_head(_module, 'ITPhoneEvent')
make_head(_module, 'ITPluggableTerminalClassInfo')
make_head(_module, 'ITPluggableTerminalEventSink')
make_head(_module, 'ITPluggableTerminalEventSinkRegistration')
make_head(_module, 'ITPluggableTerminalSuperclassInfo')
make_head(_module, 'ITPrivateEvent')
make_head(_module, 'ITQOSEvent')
make_head(_module, 'ITQueue')
make_head(_module, 'ITQueueEvent')
make_head(_module, 'ITRendezvous')
make_head(_module, 'ITRequest')
make_head(_module, 'ITRequestEvent')
make_head(_module, 'ITScriptableAudioFormat')
make_head(_module, 'ITStaticAudioTerminal')
make_head(_module, 'ITStream')
make_head(_module, 'ITStreamControl')
make_head(_module, 'ITSubStream')
make_head(_module, 'ITSubStreamControl')
make_head(_module, 'ITTAPI')
make_head(_module, 'ITTAPI2')
make_head(_module, 'ITTAPICallCenter')
make_head(_module, 'ITTAPIDispatchEventNotification')
make_head(_module, 'ITTAPIEventNotification')
make_head(_module, 'ITTAPIObjectEvent')
make_head(_module, 'ITTAPIObjectEvent2')
make_head(_module, 'ITTTSTerminalEvent')
make_head(_module, 'ITTerminal')
make_head(_module, 'ITTerminalSupport')
make_head(_module, 'ITTerminalSupport2')
make_head(_module, 'ITToneDetectionEvent')
make_head(_module, 'ITToneTerminalEvent')
make_head(_module, 'ITnef')
make_head(_module, 'LINEADDRESSCAPS')
make_head(_module, 'LINEADDRESSSTATUS')
make_head(_module, 'LINEAGENTACTIVITYENTRY')
make_head(_module, 'LINEAGENTACTIVITYLIST')
make_head(_module, 'LINEAGENTCAPS')
make_head(_module, 'LINEAGENTENTRY')
make_head(_module, 'LINEAGENTGROUPENTRY')
make_head(_module, 'LINEAGENTGROUPLIST')
make_head(_module, 'LINEAGENTINFO')
make_head(_module, 'LINEAGENTLIST')
make_head(_module, 'LINEAGENTSESSIONENTRY')
make_head(_module, 'LINEAGENTSESSIONINFO')
make_head(_module, 'LINEAGENTSESSIONLIST')
make_head(_module, 'LINEAGENTSTATUS')
make_head(_module, 'LINEAPPINFO')
make_head(_module, 'LINECALLBACK')
make_head(_module, 'LINECALLINFO')
make_head(_module, 'LINECALLLIST')
make_head(_module, 'LINECALLPARAMS')
make_head(_module, 'LINECALLSTATUS')
make_head(_module, 'LINECALLTREATMENTENTRY')
make_head(_module, 'LINECARDENTRY')
make_head(_module, 'LINECOUNTRYENTRY')
make_head(_module, 'LINECOUNTRYLIST')
make_head(_module, 'LINEDEVCAPS')
make_head(_module, 'LINEDEVSTATUS')
make_head(_module, 'LINEDIALPARAMS')
make_head(_module, 'LINEEVENT')
make_head(_module, 'LINEEXTENSIONID')
make_head(_module, 'LINEFORWARD')
make_head(_module, 'LINEFORWARDLIST')
make_head(_module, 'LINEGENERATETONE')
make_head(_module, 'LINEINITIALIZEEXPARAMS')
make_head(_module, 'LINELOCATIONENTRY')
make_head(_module, 'LINEMEDIACONTROLCALLSTATE')
make_head(_module, 'LINEMEDIACONTROLDIGIT')
make_head(_module, 'LINEMEDIACONTROLMEDIA')
make_head(_module, 'LINEMEDIACONTROLTONE')
make_head(_module, 'LINEMESSAGE')
make_head(_module, 'LINEMONITORTONE')
make_head(_module, 'LINEPROVIDERENTRY')
make_head(_module, 'LINEPROVIDERLIST')
make_head(_module, 'LINEPROXYREQUEST')
make_head(_module, 'LINEPROXYREQUESTLIST')
make_head(_module, 'LINEQUEUEENTRY')
make_head(_module, 'LINEQUEUEINFO')
make_head(_module, 'LINEQUEUELIST')
make_head(_module, 'LINEREQMAKECALL')
make_head(_module, 'LINEREQMAKECALLW')
make_head(_module, 'LINEREQMEDIACALL')
make_head(_module, 'LINEREQMEDIACALLW')
make_head(_module, 'LINETERMCAPS')
make_head(_module, 'LINETRANSLATECAPS')
make_head(_module, 'LINETRANSLATEOUTPUT')
make_head(_module, 'LPGETTNEFSTREAMCODEPAGE')
make_head(_module, 'LPOPENTNEFSTREAM')
make_head(_module, 'LPOPENTNEFSTREAMEX')
make_head(_module, 'MSP_EVENT_INFO')
make_head(_module, 'NSID')
make_head(_module, 'PHONEBUTTONINFO')
make_head(_module, 'PHONECALLBACK')
make_head(_module, 'PHONECAPS')
make_head(_module, 'PHONEEVENT')
make_head(_module, 'PHONEEXTENSIONID')
make_head(_module, 'PHONEINITIALIZEEXPARAMS')
make_head(_module, 'PHONEMESSAGE')
make_head(_module, 'PHONESTATUS')
make_head(_module, 'RENDDATA')
make_head(_module, 'STnefProblem')
make_head(_module, 'STnefProblemArray')
make_head(_module, 'TAPI_CUSTOMTONE')
make_head(_module, 'TAPI_DETECTTONE')
make_head(_module, 'TRP')
make_head(_module, 'TUISPICREATEDIALOGINSTANCEPARAMS')
make_head(_module, 'TUISPIDLLCALLBACK')
make_head(_module, 'VARSTRING')
