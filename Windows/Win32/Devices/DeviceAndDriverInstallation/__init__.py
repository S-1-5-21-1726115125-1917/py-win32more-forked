from __future__ import annotations
from ctypes import POINTER
from Windows import ARCH, Boolean, Byte, Bytes, Char, ComPtr, Double, EasyCastStructure, EasyCastUnion, FAILED, Guid, Int16, Int32, Int64, IntPtr, MissingType, SByte, SUCCEEDED, Single, String, String, UInt16, UInt32, UInt64, UIntPtr, Void, VoidPtr, cfunctype, cfunctype_pointer, commethod, make_head, press, winfunctype, winfunctype_pointer
import Windows.Win32.Data.HtmlHelp
import Windows.Win32.Devices.DeviceAndDriverInstallation
import Windows.Win32.Devices.Properties
import Windows.Win32.Foundation
import Windows.Win32.Graphics.Gdi
import Windows.Win32.System.Diagnostics.Debug
import Windows.Win32.System.Registry
import Windows.Win32.UI.Controls
import Windows.Win32.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
CM_PROB_NOT_CONFIGURED: UInt32 = 1
CM_PROB_DEVLOADER_FAILED: UInt32 = 2
CM_PROB_OUT_OF_MEMORY: UInt32 = 3
CM_PROB_ENTRY_IS_WRONG_TYPE: UInt32 = 4
CM_PROB_LACKED_ARBITRATOR: UInt32 = 5
CM_PROB_BOOT_CONFIG_CONFLICT: UInt32 = 6
CM_PROB_FAILED_FILTER: UInt32 = 7
CM_PROB_DEVLOADER_NOT_FOUND: UInt32 = 8
CM_PROB_INVALID_DATA: UInt32 = 9
CM_PROB_FAILED_START: UInt32 = 10
CM_PROB_LIAR: UInt32 = 11
CM_PROB_NORMAL_CONFLICT: UInt32 = 12
CM_PROB_NOT_VERIFIED: UInt32 = 13
CM_PROB_NEED_RESTART: UInt32 = 14
CM_PROB_REENUMERATION: UInt32 = 15
CM_PROB_PARTIAL_LOG_CONF: UInt32 = 16
CM_PROB_UNKNOWN_RESOURCE: UInt32 = 17
CM_PROB_REINSTALL: UInt32 = 18
CM_PROB_REGISTRY: UInt32 = 19
CM_PROB_VXDLDR: UInt32 = 20
CM_PROB_WILL_BE_REMOVED: UInt32 = 21
CM_PROB_DISABLED: UInt32 = 22
CM_PROB_DEVLOADER_NOT_READY: UInt32 = 23
CM_PROB_DEVICE_NOT_THERE: UInt32 = 24
CM_PROB_MOVED: UInt32 = 25
CM_PROB_TOO_EARLY: UInt32 = 26
CM_PROB_NO_VALID_LOG_CONF: UInt32 = 27
CM_PROB_FAILED_INSTALL: UInt32 = 28
CM_PROB_HARDWARE_DISABLED: UInt32 = 29
CM_PROB_CANT_SHARE_IRQ: UInt32 = 30
CM_PROB_FAILED_ADD: UInt32 = 31
CM_PROB_DISABLED_SERVICE: UInt32 = 32
CM_PROB_TRANSLATION_FAILED: UInt32 = 33
CM_PROB_NO_SOFTCONFIG: UInt32 = 34
CM_PROB_BIOS_TABLE: UInt32 = 35
CM_PROB_IRQ_TRANSLATION_FAILED: UInt32 = 36
CM_PROB_FAILED_DRIVER_ENTRY: UInt32 = 37
CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD: UInt32 = 38
CM_PROB_DRIVER_FAILED_LOAD: UInt32 = 39
CM_PROB_DRIVER_SERVICE_KEY_INVALID: UInt32 = 40
CM_PROB_LEGACY_SERVICE_NO_DEVICES: UInt32 = 41
CM_PROB_DUPLICATE_DEVICE: UInt32 = 42
CM_PROB_FAILED_POST_START: UInt32 = 43
CM_PROB_HALTED: UInt32 = 44
CM_PROB_PHANTOM: UInt32 = 45
CM_PROB_SYSTEM_SHUTDOWN: UInt32 = 46
CM_PROB_HELD_FOR_EJECT: UInt32 = 47
CM_PROB_DRIVER_BLOCKED: UInt32 = 48
CM_PROB_REGISTRY_TOO_LARGE: UInt32 = 49
CM_PROB_SETPROPERTIES_FAILED: UInt32 = 50
CM_PROB_WAITING_ON_DEPENDENCY: UInt32 = 51
CM_PROB_UNSIGNED_DRIVER: UInt32 = 52
CM_PROB_USED_BY_DEBUGGER: UInt32 = 53
CM_PROB_DEVICE_RESET: UInt32 = 54
CM_PROB_CONSOLE_LOCKED: UInt32 = 55
CM_PROB_NEED_CLASS_CONFIG: UInt32 = 56
CM_PROB_GUEST_ASSIGNMENT_FAILED: UInt32 = 57
NUM_CM_PROB_V1: UInt32 = 37
NUM_CM_PROB_V2: UInt32 = 50
NUM_CM_PROB_V3: UInt32 = 51
NUM_CM_PROB_V4: UInt32 = 52
NUM_CM_PROB_V5: UInt32 = 53
NUM_CM_PROB_V6: UInt32 = 54
NUM_CM_PROB_V7: UInt32 = 55
NUM_CM_PROB_V8: UInt32 = 57
NUM_CM_PROB_V9: UInt32 = 58
NUM_CM_PROB: UInt32 = 58
DN_ROOT_ENUMERATED: UInt32 = 1
DN_DRIVER_LOADED: UInt32 = 2
DN_ENUM_LOADED: UInt32 = 4
DN_STARTED: UInt32 = 8
DN_MANUAL: UInt32 = 16
DN_NEED_TO_ENUM: UInt32 = 32
DN_NOT_FIRST_TIME: UInt32 = 64
DN_HARDWARE_ENUM: UInt32 = 128
DN_LIAR: UInt32 = 256
DN_HAS_MARK: UInt32 = 512
DN_HAS_PROBLEM: UInt32 = 1024
DN_FILTERED: UInt32 = 2048
DN_MOVED: UInt32 = 4096
DN_DISABLEABLE: UInt32 = 8192
DN_REMOVABLE: UInt32 = 16384
DN_PRIVATE_PROBLEM: UInt32 = 32768
DN_MF_PARENT: UInt32 = 65536
DN_MF_CHILD: UInt32 = 131072
DN_WILL_BE_REMOVED: UInt32 = 262144
DN_NOT_FIRST_TIMEE: UInt32 = 524288
DN_STOP_FREE_RES: UInt32 = 1048576
DN_REBAL_CANDIDATE: UInt32 = 2097152
DN_BAD_PARTIAL: UInt32 = 4194304
DN_NT_ENUMERATOR: UInt32 = 8388608
DN_NT_DRIVER: UInt32 = 16777216
DN_NEEDS_LOCKING: UInt32 = 33554432
DN_ARM_WAKEUP: UInt32 = 67108864
DN_APM_ENUMERATOR: UInt32 = 134217728
DN_APM_DRIVER: UInt32 = 268435456
DN_SILENT_INSTALL: UInt32 = 536870912
DN_NO_SHOW_IN_DM: UInt32 = 1073741824
DN_BOOT_LOG_PROB: UInt32 = 2147483648
DN_NEED_RESTART: UInt32 = 256
DN_DRIVER_BLOCKED: UInt32 = 64
DN_LEGACY_DRIVER: UInt32 = 4096
DN_CHILD_WITH_INVALID_ID: UInt32 = 512
DN_DEVICE_DISCONNECTED: UInt32 = 33554432
DN_QUERY_REMOVE_PENDING: UInt32 = 65536
DN_QUERY_REMOVE_ACTIVE: UInt32 = 131072
LCPRI_FORCECONFIG: UInt32 = 0
LCPRI_BOOTCONFIG: UInt32 = 1
LCPRI_DESIRED: UInt32 = 8192
LCPRI_NORMAL: UInt32 = 12288
LCPRI_LASTBESTCONFIG: UInt32 = 16383
LCPRI_SUBOPTIMAL: UInt32 = 20480
LCPRI_LASTSOFTCONFIG: UInt32 = 32767
LCPRI_RESTART: UInt32 = 32768
LCPRI_REBOOT: UInt32 = 36864
LCPRI_POWEROFF: UInt32 = 40960
LCPRI_HARDRECONFIG: UInt32 = 49152
LCPRI_HARDWIRED: UInt32 = 57344
LCPRI_IMPOSSIBLE: UInt32 = 61440
LCPRI_DISABLED: UInt32 = 65535
MAX_LCPRI: UInt32 = 65535
CM_DEVICE_PANEL_SIDE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_SIDE_TOP: UInt32 = 1
CM_DEVICE_PANEL_SIDE_BOTTOM: UInt32 = 2
CM_DEVICE_PANEL_SIDE_LEFT: UInt32 = 3
CM_DEVICE_PANEL_SIDE_RIGHT: UInt32 = 4
CM_DEVICE_PANEL_SIDE_FRONT: UInt32 = 5
CM_DEVICE_PANEL_SIDE_BACK: UInt32 = 6
CM_DEVICE_PANEL_EDGE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_EDGE_TOP: UInt32 = 1
CM_DEVICE_PANEL_EDGE_BOTTOM: UInt32 = 2
CM_DEVICE_PANEL_EDGE_LEFT: UInt32 = 3
CM_DEVICE_PANEL_EDGE_RIGHT: UInt32 = 4
CM_DEVICE_PANEL_SHAPE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_SHAPE_RECTANGLE: UInt32 = 1
CM_DEVICE_PANEL_SHAPE_OVAL: UInt32 = 2
CM_DEVICE_PANEL_ORIENTATION_HORIZONTAL: UInt32 = 0
CM_DEVICE_PANEL_ORIENTATION_VERTICAL: UInt32 = 1
CM_DEVICE_PANEL_JOINT_TYPE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_JOINT_TYPE_PLANAR: UInt32 = 1
CM_DEVICE_PANEL_JOINT_TYPE_HINGE: UInt32 = 2
CM_DEVICE_PANEL_JOINT_TYPE_PIVOT: UInt32 = 3
CM_DEVICE_PANEL_JOINT_TYPE_SWIVEL: UInt32 = 4
GUID_DEVCLASS_1394: Guid = Guid('{6bdd1fc1-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_1394DEBUG: Guid = Guid('{66f250d6-7801-4a64-b139-eea80a450b24}')
GUID_DEVCLASS_61883: Guid = Guid('{7ebefbc0-3200-11d2-b4c2-00a0c9697d07}')
GUID_DEVCLASS_ADAPTER: Guid = Guid('{4d36e964-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_APMSUPPORT: Guid = Guid('{d45b1c18-c8fa-11d1-9f77-0000f805f530}')
GUID_DEVCLASS_AVC: Guid = Guid('{c06ff265-ae09-48f0-812c-16753d7cba83}')
GUID_DEVCLASS_BATTERY: Guid = Guid('{72631e54-78a4-11d0-bcf7-00aa00b7b32a}')
GUID_DEVCLASS_BIOMETRIC: Guid = Guid('{53d29ef7-377c-4d14-864b-eb3a85769359}')
GUID_DEVCLASS_BLUETOOTH: Guid = Guid('{e0cbf06c-cd8b-4647-bb8a-263b43f0f974}')
GUID_DEVCLASS_CAMERA: Guid = Guid('{ca3e7ab9-b4c3-4ae6-8251-579ef933890f}')
GUID_DEVCLASS_CDROM: Guid = Guid('{4d36e965-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_COMPUTEACCELERATOR: Guid = Guid('{f01a9d53-3ff6-48d2-9f97-c8a7004be10c}')
GUID_DEVCLASS_COMPUTER: Guid = Guid('{4d36e966-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_DECODER: Guid = Guid('{6bdd1fc2-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_DISKDRIVE: Guid = Guid('{4d36e967-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_DISPLAY: Guid = Guid('{4d36e968-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_DOT4: Guid = Guid('{48721b56-6795-11d2-b1a8-0080c72e74a2}')
GUID_DEVCLASS_DOT4PRINT: Guid = Guid('{49ce6ac8-6f86-11d2-b1e5-0080c72e74a2}')
GUID_DEVCLASS_EHSTORAGESILO: Guid = Guid('{9da2b80f-f89f-4a49-a5c2-511b085b9e8a}')
GUID_DEVCLASS_ENUM1394: Guid = Guid('{c459df55-db08-11d1-b009-00a0c9081ff6}')
GUID_DEVCLASS_EXTENSION: Guid = Guid('{e2f84ce7-8efa-411c-aa69-97454ca4cb57}')
GUID_DEVCLASS_FDC: Guid = Guid('{4d36e969-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_FIRMWARE: Guid = Guid('{f2e7dd72-6468-4e36-b6f1-6488f42c1b52}')
GUID_DEVCLASS_FLOPPYDISK: Guid = Guid('{4d36e980-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_GENERIC: Guid = Guid('{ff494df1-c4ed-4fac-9b3f-3786f6e91e7e}')
GUID_DEVCLASS_GPS: Guid = Guid('{6bdd1fc3-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_HDC: Guid = Guid('{4d36e96a-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_HIDCLASS: Guid = Guid('{745a17a0-74d3-11d0-b6fe-00a0c90f57da}')
GUID_DEVCLASS_HOLOGRAPHIC: Guid = Guid('{d612553d-06b1-49ca-8938-e39ef80eb16f}')
GUID_DEVCLASS_IMAGE: Guid = Guid('{6bdd1fc6-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_INFINIBAND: Guid = Guid('{30ef7132-d858-4a0c-ac24-b9028a5cca3f}')
GUID_DEVCLASS_INFRARED: Guid = Guid('{6bdd1fc5-810f-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_KEYBOARD: Guid = Guid('{4d36e96b-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_LEGACYDRIVER: Guid = Guid('{8ecc055d-047f-11d1-a537-0000f8753ed1}')
GUID_DEVCLASS_MEDIA: Guid = Guid('{4d36e96c-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MEDIUM_CHANGER: Guid = Guid('{ce5939ae-ebde-11d0-b181-0000f8753ec4}')
GUID_DEVCLASS_MEMORY: Guid = Guid('{5099944a-f6b9-4057-a056-8c550228544c}')
GUID_DEVCLASS_MODEM: Guid = Guid('{4d36e96d-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MONITOR: Guid = Guid('{4d36e96e-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MOUSE: Guid = Guid('{4d36e96f-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MTD: Guid = Guid('{4d36e970-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MULTIFUNCTION: Guid = Guid('{4d36e971-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_MULTIPORTSERIAL: Guid = Guid('{50906cb8-ba12-11d1-bf5d-0000f805f530}')
GUID_DEVCLASS_NET: Guid = Guid('{4d36e972-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETCLIENT: Guid = Guid('{4d36e973-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETDRIVER: Guid = Guid('{87ef9ad1-8f70-49ee-b215-ab1fcadcbe3c}')
GUID_DEVCLASS_NETSERVICE: Guid = Guid('{4d36e974-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETTRANS: Guid = Guid('{4d36e975-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_NETUIO: Guid = Guid('{78912bc1-cb8e-4b28-a329-f322ebadbe0f}')
GUID_DEVCLASS_NODRIVER: Guid = Guid('{4d36e976-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PCMCIA: Guid = Guid('{4d36e977-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PNPPRINTERS: Guid = Guid('{4658ee7e-f050-11d1-b6bd-00c04fa372a7}')
GUID_DEVCLASS_PORTS: Guid = Guid('{4d36e978-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PRIMITIVE: Guid = Guid('{242681d1-eed3-41d2-a1ef-1468fc843106}')
GUID_DEVCLASS_PRINTER: Guid = Guid('{4d36e979-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PRINTERUPGRADE: Guid = Guid('{4d36e97a-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_PRINTQUEUE: Guid = Guid('{1ed2bbf9-11f0-4084-b21f-ad83a8e6dcdc}')
GUID_DEVCLASS_PROCESSOR: Guid = Guid('{50127dc3-0f36-415e-a6cc-4cb3be910b65}')
GUID_DEVCLASS_SBP2: Guid = Guid('{d48179be-ec20-11d1-b6b8-00c04fa372a7}')
GUID_DEVCLASS_SCMDISK: Guid = Guid('{53966cb1-4d46-4166-bf23-c522403cd495}')
GUID_DEVCLASS_SCMVOLUME: Guid = Guid('{53ccb149-e543-4c84-b6e0-bce4f6b7e806}')
GUID_DEVCLASS_SCSIADAPTER: Guid = Guid('{4d36e97b-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_SECURITYACCELERATOR: Guid = Guid('{268c95a1-edfe-11d3-95c3-0010dc4050a5}')
GUID_DEVCLASS_SENSOR: Guid = Guid('{5175d334-c371-4806-b3ba-71fd53c9258d}')
GUID_DEVCLASS_SIDESHOW: Guid = Guid('{997b5d8d-c442-4f2e-baf3-9c8e671e9e21}')
GUID_DEVCLASS_SMARTCARDREADER: Guid = Guid('{50dd5230-ba8a-11d1-bf5d-0000f805f530}')
GUID_DEVCLASS_SMRDISK: Guid = Guid('{53487c23-680f-4585-acc3-1f10d6777e82}')
GUID_DEVCLASS_SMRVOLUME: Guid = Guid('{53b3cf03-8f5a-4788-91b6-d19ed9fcccbf}')
GUID_DEVCLASS_SOFTWARECOMPONENT: Guid = Guid('{5c4c3332-344d-483c-8739-259e934c9cc8}')
GUID_DEVCLASS_SOUND: Guid = Guid('{4d36e97c-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_SYSTEM: Guid = Guid('{4d36e97d-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_TAPEDRIVE: Guid = Guid('{6d807884-7d21-11cf-801c-08002be10318}')
GUID_DEVCLASS_UNKNOWN: Guid = Guid('{4d36e97e-e325-11ce-bfc1-08002be10318}')
GUID_DEVCLASS_UCM: Guid = Guid('{e6f1aa1c-7f3b-4473-b2e8-c97d8ac71d53}')
GUID_DEVCLASS_USB: Guid = Guid('{36fc9e60-c465-11cf-8056-444553540000}')
GUID_DEVCLASS_VOLUME: Guid = Guid('{71a27cdd-812a-11d0-bec7-08002be2092f}')
GUID_DEVCLASS_VOLUMESNAPSHOT: Guid = Guid('{533c5b84-ec70-11d2-9505-00c04f79deaf}')
GUID_DEVCLASS_WCEUSBS: Guid = Guid('{25dbce51-6c8f-4a72-8a6d-b54c2b4fc835}')
GUID_DEVCLASS_WPD: Guid = Guid('{eec5ad98-8080-425f-922a-dabf3de3f69a}')
GUID_DEVCLASS_FSFILTER_TOP: Guid = Guid('{b369baf4-5568-4e82-a87e-a93eb16bca87}')
GUID_DEVCLASS_FSFILTER_ACTIVITYMONITOR: Guid = Guid('{b86dff51-a31e-4bac-b3cf-e8cfe75c9fc2}')
GUID_DEVCLASS_FSFILTER_UNDELETE: Guid = Guid('{fe8f1572-c67a-48c0-bbac-0b5c6d66cafb}')
GUID_DEVCLASS_FSFILTER_ANTIVIRUS: Guid = Guid('{b1d1a169-c54f-4379-81db-bee7d88d7454}')
GUID_DEVCLASS_FSFILTER_REPLICATION: Guid = Guid('{48d3ebc4-4cf8-48ff-b869-9c68ad42eb9f}')
GUID_DEVCLASS_FSFILTER_CONTINUOUSBACKUP: Guid = Guid('{71aa14f8-6fad-4622-ad77-92bb9d7e6947}')
GUID_DEVCLASS_FSFILTER_CONTENTSCREENER: Guid = Guid('{3e3f0674-c83c-4558-bb26-9820e1eba5c5}')
GUID_DEVCLASS_FSFILTER_QUOTAMANAGEMENT: Guid = Guid('{8503c911-a6c7-4919-8f79-5028f5866b0c}')
GUID_DEVCLASS_FSFILTER_SYSTEMRECOVERY: Guid = Guid('{2db15374-706e-4131-a0c7-d7c78eb0289a}')
GUID_DEVCLASS_FSFILTER_CFSMETADATASERVER: Guid = Guid('{cdcf0939-b75b-4630-bf76-80f7ba655884}')
GUID_DEVCLASS_FSFILTER_HSM: Guid = Guid('{d546500a-2aeb-45f6-9482-f4b1799c3177}')
GUID_DEVCLASS_FSFILTER_COMPRESSION: Guid = Guid('{f3586baf-b5aa-49b5-8d6c-0569284c639f}')
GUID_DEVCLASS_FSFILTER_ENCRYPTION: Guid = Guid('{a0a701c0-a511-42ff-aa6c-06dc0395576f}')
GUID_DEVCLASS_FSFILTER_VIRTUALIZATION: Guid = Guid('{f75a86c0-10d8-4c3a-b233-ed60e4cdfaac}')
GUID_DEVCLASS_FSFILTER_PHYSICALQUOTAMANAGEMENT: Guid = Guid('{6a0a8e78-bba6-4fc4-a709-1e33cd09d67e}')
GUID_DEVCLASS_FSFILTER_OPENFILEBACKUP: Guid = Guid('{f8ecafa6-66d1-41a5-899b-66585d7216b7}')
GUID_DEVCLASS_FSFILTER_SECURITYENHANCER: Guid = Guid('{d02bc3da-0c8e-4945-9bd5-f1883c226c8c}')
GUID_DEVCLASS_FSFILTER_COPYPROTECTION: Guid = Guid('{89786ff1-9c12-402f-9c9e-17753c7f4375}')
GUID_DEVCLASS_FSFILTER_BOTTOM: Guid = Guid('{37765ea0-5958-4fc9-b04b-2fdfef97e59e}')
GUID_DEVCLASS_FSFILTER_SYSTEM: Guid = Guid('{5d1b9aaa-01e2-46af-849f-272b3f324c46}')
GUID_DEVCLASS_FSFILTER_INFRASTRUCTURE: Guid = Guid('{e55fa6f9-128c-4d04-abab-630c74b1453a}')
LINE_LEN: UInt32 = 256
MAX_INF_STRING_LENGTH: UInt32 = 4096
MAX_INF_SECTION_NAME_LENGTH: UInt32 = 255
MAX_TITLE_LEN: UInt32 = 60
MAX_INSTRUCTION_LEN: UInt32 = 256
MAX_LABEL_LEN: UInt32 = 30
MAX_SERVICE_NAME_LEN: UInt32 = 256
MAX_SUBTITLE_LEN: UInt32 = 256
SP_MAX_MACHINENAME_LENGTH: UInt32 = 263
SP_ALTPLATFORM_FLAGS_VERSION_RANGE: UInt32 = 1
SP_ALTPLATFORM_FLAGS_SUITE_MASK: UInt32 = 2
INF_STYLE_CACHE_ENABLE: UInt32 = 16
INF_STYLE_CACHE_DISABLE: UInt32 = 32
INF_STYLE_CACHE_IGNORE: UInt32 = 64
DIRID_ABSOLUTE: Int32 = -1
DIRID_ABSOLUTE_16BIT: UInt32 = 65535
DIRID_NULL: UInt32 = 0
DIRID_SRCPATH: UInt32 = 1
DIRID_WINDOWS: UInt32 = 10
DIRID_SYSTEM: UInt32 = 11
DIRID_DRIVERS: UInt32 = 12
DIRID_IOSUBSYS: UInt32 = 12
DIRID_DRIVER_STORE: UInt32 = 13
DIRID_INF: UInt32 = 17
DIRID_HELP: UInt32 = 18
DIRID_FONTS: UInt32 = 20
DIRID_VIEWERS: UInt32 = 21
DIRID_COLOR: UInt32 = 23
DIRID_APPS: UInt32 = 24
DIRID_SHARED: UInt32 = 25
DIRID_BOOT: UInt32 = 30
DIRID_SYSTEM16: UInt32 = 50
DIRID_SPOOL: UInt32 = 51
DIRID_SPOOLDRIVERS: UInt32 = 52
DIRID_USERPROFILE: UInt32 = 53
DIRID_LOADER: UInt32 = 54
DIRID_PRINTPROCESSOR: UInt32 = 55
DIRID_DEFAULT: UInt32 = 11
DIRID_COMMON_STARTMENU: UInt32 = 16406
DIRID_COMMON_PROGRAMS: UInt32 = 16407
DIRID_COMMON_STARTUP: UInt32 = 16408
DIRID_COMMON_DESKTOPDIRECTORY: UInt32 = 16409
DIRID_COMMON_FAVORITES: UInt32 = 16415
DIRID_COMMON_APPDATA: UInt32 = 16419
DIRID_PROGRAM_FILES: UInt32 = 16422
DIRID_SYSTEM_X86: UInt32 = 16425
DIRID_PROGRAM_FILES_X86: UInt32 = 16426
DIRID_PROGRAM_FILES_COMMON: UInt32 = 16427
DIRID_PROGRAM_FILES_COMMONX86: UInt32 = 16428
DIRID_COMMON_TEMPLATES: UInt32 = 16429
DIRID_COMMON_DOCUMENTS: UInt32 = 16430
DIRID_USER: UInt32 = 32768
SPFILENOTIFY_STARTQUEUE: UInt32 = 1
SPFILENOTIFY_ENDQUEUE: UInt32 = 2
SPFILENOTIFY_STARTSUBQUEUE: UInt32 = 3
SPFILENOTIFY_ENDSUBQUEUE: UInt32 = 4
SPFILENOTIFY_STARTDELETE: UInt32 = 5
SPFILENOTIFY_ENDDELETE: UInt32 = 6
SPFILENOTIFY_DELETEERROR: UInt32 = 7
SPFILENOTIFY_STARTRENAME: UInt32 = 8
SPFILENOTIFY_ENDRENAME: UInt32 = 9
SPFILENOTIFY_RENAMEERROR: UInt32 = 10
SPFILENOTIFY_STARTCOPY: UInt32 = 11
SPFILENOTIFY_ENDCOPY: UInt32 = 12
SPFILENOTIFY_COPYERROR: UInt32 = 13
SPFILENOTIFY_NEEDMEDIA: UInt32 = 14
SPFILENOTIFY_QUEUESCAN: UInt32 = 15
SPFILENOTIFY_CABINETINFO: UInt32 = 16
SPFILENOTIFY_FILEINCABINET: UInt32 = 17
SPFILENOTIFY_NEEDNEWCABINET: UInt32 = 18
SPFILENOTIFY_FILEEXTRACTED: UInt32 = 19
SPFILENOTIFY_FILEOPDELAYED: UInt32 = 20
SPFILENOTIFY_STARTBACKUP: UInt32 = 21
SPFILENOTIFY_BACKUPERROR: UInt32 = 22
SPFILENOTIFY_ENDBACKUP: UInt32 = 23
SPFILENOTIFY_QUEUESCAN_EX: UInt32 = 24
SPFILENOTIFY_STARTREGISTRATION: UInt32 = 25
SPFILENOTIFY_ENDREGISTRATION: UInt32 = 32
SPFILENOTIFY_QUEUESCAN_SIGNERINFO: UInt32 = 64
SPFILENOTIFY_LANGMISMATCH: UInt32 = 65536
SPFILENOTIFY_TARGETEXISTS: UInt32 = 131072
SPFILENOTIFY_TARGETNEWER: UInt32 = 262144
FILEOP_RENAME: UInt32 = 1
FILEOP_BACKUP: UInt32 = 3
FILEOP_ABORT: UInt32 = 0
FILEOP_DOIT: UInt32 = 1
FILEOP_SKIP: UInt32 = 2
FILEOP_RETRY: UInt32 = 1
FILEOP_NEWPATH: UInt32 = 4
COPYFLG_WARN_IF_SKIP: UInt32 = 1
COPYFLG_NOSKIP: UInt32 = 2
COPYFLG_NOVERSIONCHECK: UInt32 = 4
COPYFLG_FORCE_FILE_IN_USE: UInt32 = 8
COPYFLG_NO_OVERWRITE: UInt32 = 16
COPYFLG_NO_VERSION_DIALOG: UInt32 = 32
COPYFLG_OVERWRITE_OLDER_ONLY: UInt32 = 64
COPYFLG_PROTECTED_WINDOWS_DRIVER_FILE: UInt32 = 256
COPYFLG_REPLACEONLY: UInt32 = 1024
COPYFLG_NODECOMP: UInt32 = 2048
COPYFLG_REPLACE_BOOT_FILE: UInt32 = 4096
COPYFLG_NOPRUNE: UInt32 = 8192
COPYFLG_IN_USE_TRY_RENAME: UInt32 = 16384
DELFLG_IN_USE: UInt32 = 1
DELFLG_IN_USE1: UInt32 = 65536
SPREG_SUCCESS: UInt32 = 0
SPREG_LOADLIBRARY: UInt32 = 1
SPREG_GETPROCADDR: UInt32 = 2
SPREG_REGSVR: UInt32 = 3
SPREG_DLLINSTALL: UInt32 = 4
SPREG_TIMEOUT: UInt32 = 5
SPREG_UNKNOWN: UInt32 = 4294967295
SPINT_ACTIVE: UInt32 = 1
SPINT_DEFAULT: UInt32 = 2
SPINT_REMOVED: UInt32 = 4
SPID_ACTIVE: UInt32 = 1
SPID_DEFAULT: UInt32 = 2
SPID_REMOVED: UInt32 = 4
DIF_SELECTDEVICE: UInt32 = 1
DIF_INSTALLDEVICE: UInt32 = 2
DIF_ASSIGNRESOURCES: UInt32 = 3
DIF_PROPERTIES: UInt32 = 4
DIF_REMOVE: UInt32 = 5
DIF_FIRSTTIMESETUP: UInt32 = 6
DIF_FOUNDDEVICE: UInt32 = 7
DIF_SELECTCLASSDRIVERS: UInt32 = 8
DIF_VALIDATECLASSDRIVERS: UInt32 = 9
DIF_INSTALLCLASSDRIVERS: UInt32 = 10
DIF_CALCDISKSPACE: UInt32 = 11
DIF_DESTROYPRIVATEDATA: UInt32 = 12
DIF_VALIDATEDRIVER: UInt32 = 13
DIF_DETECT: UInt32 = 15
DIF_INSTALLWIZARD: UInt32 = 16
DIF_DESTROYWIZARDDATA: UInt32 = 17
DIF_PROPERTYCHANGE: UInt32 = 18
DIF_ENABLECLASS: UInt32 = 19
DIF_DETECTVERIFY: UInt32 = 20
DIF_INSTALLDEVICEFILES: UInt32 = 21
DIF_UNREMOVE: UInt32 = 22
DIF_SELECTBESTCOMPATDRV: UInt32 = 23
DIF_ALLOW_INSTALL: UInt32 = 24
DIF_REGISTERDEVICE: UInt32 = 25
DIF_NEWDEVICEWIZARD_PRESELECT: UInt32 = 26
DIF_NEWDEVICEWIZARD_SELECT: UInt32 = 27
DIF_NEWDEVICEWIZARD_PREANALYZE: UInt32 = 28
DIF_NEWDEVICEWIZARD_POSTANALYZE: UInt32 = 29
DIF_NEWDEVICEWIZARD_FINISHINSTALL: UInt32 = 30
DIF_UNUSED1: UInt32 = 31
DIF_INSTALLINTERFACES: UInt32 = 32
DIF_DETECTCANCEL: UInt32 = 33
DIF_REGISTER_COINSTALLERS: UInt32 = 34
DIF_ADDPROPERTYPAGE_ADVANCED: UInt32 = 35
DIF_ADDPROPERTYPAGE_BASIC: UInt32 = 36
DIF_RESERVED1: UInt32 = 37
DIF_TROUBLESHOOTER: UInt32 = 38
DIF_POWERMESSAGEWAKE: UInt32 = 39
DIF_ADDREMOTEPROPERTYPAGE_ADVANCED: UInt32 = 40
DIF_UPDATEDRIVER_UI: UInt32 = 41
DIF_FINISHINSTALL_ACTION: UInt32 = 42
DIF_RESERVED2: UInt32 = 48
DIF_MOVEDEVICE: UInt32 = 14
DI_SHOWOEM: Int32 = 1
DI_SHOWCOMPAT: Int32 = 2
DI_SHOWCLASS: Int32 = 4
DI_SHOWALL: Int32 = 7
DI_NOVCP: Int32 = 8
DI_DIDCOMPAT: Int32 = 16
DI_DIDCLASS: Int32 = 32
DI_AUTOASSIGNRES: Int32 = 64
DI_NEEDRESTART: Int32 = 128
DI_NEEDREBOOT: Int32 = 256
DI_NOBROWSE: Int32 = 512
DI_MULTMFGS: Int32 = 1024
DI_DISABLED: Int32 = 2048
DI_GENERALPAGE_ADDED: Int32 = 4096
DI_RESOURCEPAGE_ADDED: Int32 = 8192
DI_PROPERTIES_CHANGE: Int32 = 16384
DI_INF_IS_SORTED: Int32 = 32768
DI_ENUMSINGLEINF: Int32 = 65536
DI_DONOTCALLCONFIGMG: Int32 = 131072
DI_INSTALLDISABLED: Int32 = 262144
DI_COMPAT_FROM_CLASS: Int32 = 524288
DI_CLASSINSTALLPARAMS: Int32 = 1048576
DI_NODI_DEFAULTACTION: Int32 = 2097152
DI_QUIETINSTALL: Int32 = 8388608
DI_NOFILECOPY: Int32 = 16777216
DI_FORCECOPY: Int32 = 33554432
DI_DRIVERPAGE_ADDED: Int32 = 67108864
DI_USECI_SELECTSTRINGS: Int32 = 134217728
DI_OVERRIDE_INFFLAGS: Int32 = 268435456
DI_PROPS_NOCHANGEUSAGE: Int32 = 536870912
DI_NOSELECTICONS: Int32 = 1073741824
DI_NOWRITE_IDS: Int32 = -2147483648
DI_FLAGSEX_RESERVED2: Int32 = 1
DI_FLAGSEX_RESERVED3: Int32 = 2
DI_FLAGSEX_CI_FAILED: Int32 = 4
DI_FLAGSEX_FINISHINSTALL_ACTION: Int32 = 8
DI_FLAGSEX_DIDINFOLIST: Int32 = 16
DI_FLAGSEX_DIDCOMPATINFO: Int32 = 32
DI_FLAGSEX_FILTERCLASSES: Int32 = 64
DI_FLAGSEX_SETFAILEDINSTALL: Int32 = 128
DI_FLAGSEX_DEVICECHANGE: Int32 = 256
DI_FLAGSEX_ALWAYSWRITEIDS: Int32 = 512
DI_FLAGSEX_PROPCHANGE_PENDING: Int32 = 1024
DI_FLAGSEX_ALLOWEXCLUDEDDRVS: Int32 = 2048
DI_FLAGSEX_NOUIONQUERYREMOVE: Int32 = 4096
DI_FLAGSEX_USECLASSFORCOMPAT: Int32 = 8192
DI_FLAGSEX_RESERVED4: Int32 = 16384
DI_FLAGSEX_NO_DRVREG_MODIFY: Int32 = 32768
DI_FLAGSEX_IN_SYSTEM_SETUP: Int32 = 65536
DI_FLAGSEX_INET_DRIVER: Int32 = 131072
DI_FLAGSEX_APPENDDRIVERLIST: Int32 = 262144
DI_FLAGSEX_PREINSTALLBACKUP: Int32 = 524288
DI_FLAGSEX_BACKUPONREPLACE: Int32 = 1048576
DI_FLAGSEX_DRIVERLIST_FROM_URL: Int32 = 2097152
DI_FLAGSEX_RESERVED1: Int32 = 4194304
DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS: Int32 = 8388608
DI_FLAGSEX_POWERPAGE_ADDED: Int32 = 16777216
DI_FLAGSEX_FILTERSIMILARDRIVERS: Int32 = 33554432
DI_FLAGSEX_INSTALLEDDRIVER: Int32 = 67108864
DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE: Int32 = 134217728
DI_FLAGSEX_ALTPLATFORM_DRVSEARCH: Int32 = 268435456
DI_FLAGSEX_RESTART_DEVICE_ONLY: Int32 = 536870912
DI_FLAGSEX_RECURSIVESEARCH: Int32 = 1073741824
DI_FLAGSEX_SEARCH_PUBLISHED_INFS: Int32 = -2147483648
ENABLECLASS_QUERY: UInt32 = 0
ENABLECLASS_SUCCESS: UInt32 = 1
ENABLECLASS_FAILURE: UInt32 = 2
DICS_ENABLE: UInt32 = 1
DICS_DISABLE: UInt32 = 2
DICS_PROPCHANGE: UInt32 = 3
DICS_START: UInt32 = 4
DICS_STOP: UInt32 = 5
DICS_FLAG_GLOBAL: UInt32 = 1
DICS_FLAG_CONFIGSPECIFIC: UInt32 = 2
DICS_FLAG_CONFIGGENERAL: UInt32 = 4
DI_REMOVEDEVICE_GLOBAL: UInt32 = 1
DI_REMOVEDEVICE_CONFIGSPECIFIC: UInt32 = 2
DI_UNREMOVEDEVICE_CONFIGSPECIFIC: UInt32 = 2
MAX_INSTALLWIZARD_DYNAPAGES: UInt32 = 20
NDW_INSTALLFLAG_DIDFACTDEFS: UInt32 = 1
NDW_INSTALLFLAG_HARDWAREALLREADYIN: UInt32 = 2
NDW_INSTALLFLAG_NEEDRESTART: Int32 = 128
NDW_INSTALLFLAG_NEEDREBOOT: Int32 = 256
NDW_INSTALLFLAG_NEEDSHUTDOWN: UInt32 = 512
NDW_INSTALLFLAG_EXPRESSINTRO: UInt32 = 1024
NDW_INSTALLFLAG_SKIPISDEVINSTALLED: UInt32 = 2048
NDW_INSTALLFLAG_NODETECTEDDEVS: UInt32 = 4096
NDW_INSTALLFLAG_INSTALLSPECIFIC: UInt32 = 8192
NDW_INSTALLFLAG_SKIPCLASSLIST: UInt32 = 16384
NDW_INSTALLFLAG_CI_PICKED_OEM: UInt32 = 32768
NDW_INSTALLFLAG_PCMCIAMODE: UInt32 = 65536
NDW_INSTALLFLAG_PCMCIADEVICE: UInt32 = 131072
NDW_INSTALLFLAG_USERCANCEL: UInt32 = 262144
NDW_INSTALLFLAG_KNOWNCLASS: UInt32 = 524288
DYNAWIZ_FLAG_PAGESADDED: UInt32 = 1
DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT: UInt32 = 8
DYNAWIZ_FLAG_INSTALLDET_NEXT: UInt32 = 2
DYNAWIZ_FLAG_INSTALLDET_PREV: UInt32 = 4
MIN_IDD_DYNAWIZ_RESOURCE_ID: UInt32 = 10000
MAX_IDD_DYNAWIZ_RESOURCE_ID: UInt32 = 11000
IDD_DYNAWIZ_FIRSTPAGE: UInt32 = 10000
IDD_DYNAWIZ_SELECT_PREVPAGE: UInt32 = 10001
IDD_DYNAWIZ_SELECT_NEXTPAGE: UInt32 = 10002
IDD_DYNAWIZ_ANALYZE_PREVPAGE: UInt32 = 10003
IDD_DYNAWIZ_ANALYZE_NEXTPAGE: UInt32 = 10004
IDD_DYNAWIZ_SELECTDEV_PAGE: UInt32 = 10009
IDD_DYNAWIZ_ANALYZEDEV_PAGE: UInt32 = 10010
IDD_DYNAWIZ_INSTALLDETECTEDDEVS_PAGE: UInt32 = 10011
IDD_DYNAWIZ_SELECTCLASS_PAGE: UInt32 = 10012
IDD_DYNAWIZ_INSTALLDETECTED_PREVPAGE: UInt32 = 10006
IDD_DYNAWIZ_INSTALLDETECTED_NEXTPAGE: UInt32 = 10007
IDD_DYNAWIZ_INSTALLDETECTED_NODEVS: UInt32 = 10008
DNF_DUPDESC: UInt32 = 1
DNF_OLDDRIVER: UInt32 = 2
DNF_EXCLUDEFROMLIST: UInt32 = 4
DNF_NODRIVER: UInt32 = 8
DNF_LEGACYINF: UInt32 = 16
DNF_CLASS_DRIVER: UInt32 = 32
DNF_COMPATIBLE_DRIVER: UInt32 = 64
DNF_INET_DRIVER: UInt32 = 128
DNF_UNUSED1: UInt32 = 256
DNF_UNUSED2: UInt32 = 512
DNF_OLD_INET_DRIVER: UInt32 = 1024
DNF_BAD_DRIVER: UInt32 = 2048
DNF_DUPPROVIDER: UInt32 = 4096
DNF_INF_IS_SIGNED: UInt32 = 8192
DNF_OEM_F6_INF: UInt32 = 16384
DNF_DUPDRIVERVER: UInt32 = 32768
DNF_BASIC_DRIVER: UInt32 = 65536
DNF_AUTHENTICODE_SIGNED: UInt32 = 131072
DNF_INSTALLEDDRIVER: UInt32 = 262144
DNF_ALWAYSEXCLUDEFROMLIST: UInt32 = 524288
DNF_INBOX_DRIVER: UInt32 = 1048576
DNF_REQUESTADDITIONALSOFTWARE: UInt32 = 2097152
DNF_UNUSED_22: UInt32 = 4194304
DNF_UNUSED_23: UInt32 = 8388608
DNF_UNUSED_24: UInt32 = 16777216
DNF_UNUSED_25: UInt32 = 33554432
DNF_UNUSED_26: UInt32 = 67108864
DNF_UNUSED_27: UInt32 = 134217728
DNF_UNUSED_28: UInt32 = 268435456
DNF_UNUSED_29: UInt32 = 536870912
DNF_UNUSED_30: UInt32 = 1073741824
DNF_UNUSED_31: UInt32 = 2147483648
DRIVER_HARDWAREID_RANK: UInt32 = 4095
DRIVER_HARDWAREID_MASK: UInt32 = 2147487743
DRIVER_UNTRUSTED_RANK: UInt32 = 2147483648
DRIVER_W9X_SUSPECT_RANK: UInt32 = 3221225472
DRIVER_COMPATID_RANK: UInt32 = 16383
DRIVER_UNTRUSTED_HARDWAREID_RANK: UInt32 = 36863
DRIVER_UNTRUSTED_COMPATID_RANK: UInt32 = 49151
DRIVER_W9X_SUSPECT_HARDWAREID_RANK: UInt32 = 53247
DRIVER_W9X_SUSPECT_COMPATID_RANK: UInt32 = 65535
SPPSR_SELECT_DEVICE_RESOURCES: UInt32 = 1
SPPSR_ENUM_BASIC_DEVICE_PROPERTIES: UInt32 = 2
SPPSR_ENUM_ADV_DEVICE_PROPERTIES: UInt32 = 3
INFINFO_INF_SPEC_IS_HINF: UInt32 = 1
INFINFO_INF_NAME_IS_ABSOLUTE: UInt32 = 2
INFINFO_DEFAULT_SEARCH: UInt32 = 3
INFINFO_REVERSE_DEFAULT_SEARCH: UInt32 = 4
INFINFO_INF_PATH_LIST_SEARCH: UInt32 = 5
FILE_COMPRESSION_NONE: UInt32 = 0
FILE_COMPRESSION_WINLZA: UInt32 = 1
FILE_COMPRESSION_MSZIP: UInt32 = 2
FILE_COMPRESSION_NTCAB: UInt32 = 3
SRCLIST_TEMPORARY: UInt32 = 1
SRCLIST_NOBROWSE: UInt32 = 2
SRCLIST_SYSTEM: UInt32 = 16
SRCLIST_USER: UInt32 = 32
SRCLIST_SYSIFADMIN: UInt32 = 64
SRCLIST_SUBDIRS: UInt32 = 256
SRCLIST_APPEND: UInt32 = 512
SRCLIST_NOSTRIPPLATFORM: UInt32 = 1024
IDF_NOBROWSE: UInt32 = 1
IDF_NOSKIP: UInt32 = 2
IDF_NODETAILS: UInt32 = 4
IDF_NOCOMPRESSED: UInt32 = 8
IDF_CHECKFIRST: UInt32 = 256
IDF_NOBEEP: UInt32 = 512
IDF_NOFOREGROUND: UInt32 = 1024
IDF_WARNIFSKIP: UInt32 = 2048
IDF_NOREMOVABLEMEDIAPROMPT: UInt32 = 4096
IDF_USEDISKNAMEASPROMPT: UInt32 = 8192
IDF_OEMDISK: UInt32 = 2147483648
DPROMPT_SUCCESS: UInt32 = 0
DPROMPT_CANCEL: UInt32 = 1
DPROMPT_SKIPFILE: UInt32 = 2
DPROMPT_BUFFERTOOSMALL: UInt32 = 3
DPROMPT_OUTOFMEMORY: UInt32 = 4
SETDIRID_NOT_FULL_PATH: UInt32 = 1
SRCINFO_PATH: UInt32 = 1
SRCINFO_TAGFILE: UInt32 = 2
SRCINFO_DESCRIPTION: UInt32 = 3
SRCINFO_FLAGS: UInt32 = 4
SRCINFO_TAGFILE2: UInt32 = 5
SRC_FLAGS_CABFILE: UInt32 = 16
SP_FLAG_CABINETCONTINUATION: UInt32 = 2048
SP_BACKUP_BACKUPPASS: UInt32 = 1
SP_BACKUP_DEMANDPASS: UInt32 = 2
SP_BACKUP_SPECIAL: UInt32 = 4
SP_BACKUP_BOOTFILE: UInt32 = 8
SPQ_SCAN_FILE_PRESENCE: UInt32 = 1
SPQ_SCAN_FILE_VALIDITY: UInt32 = 2
SPQ_SCAN_USE_CALLBACK: UInt32 = 4
SPQ_SCAN_USE_CALLBACKEX: UInt32 = 8
SPQ_SCAN_INFORM_USER: UInt32 = 16
SPQ_SCAN_PRUNE_COPY_QUEUE: UInt32 = 32
SPQ_SCAN_USE_CALLBACK_SIGNERINFO: UInt32 = 64
SPQ_SCAN_PRUNE_DELREN: UInt32 = 128
SPQ_SCAN_FILE_PRESENCE_WITHOUT_SOURCE: UInt32 = 256
SPQ_SCAN_FILE_COMPARISON: UInt32 = 512
SPQ_SCAN_ACTIVATE_DRP: UInt32 = 1024
SPQ_DELAYED_COPY: UInt32 = 1
SPQ_FLAG_BACKUP_AWARE: UInt32 = 1
SPQ_FLAG_ABORT_IF_UNSIGNED: UInt32 = 2
SPQ_FLAG_FILES_MODIFIED: UInt32 = 4
SPQ_FLAG_DO_SHUFFLEMOVE: UInt32 = 8
SPQ_FLAG_VALID: UInt32 = 15
SPOST_MAX: UInt32 = 3
SUOI_FORCEDELETE: UInt32 = 1
SUOI_INTERNAL1: UInt32 = 2
SPDSL_IGNORE_DISK: UInt32 = 1
SPDSL_DISALLOW_NEGATIVE_ADJUST: UInt32 = 2
SPFILEQ_FILE_IN_USE: UInt32 = 1
SPFILEQ_REBOOT_RECOMMENDED: UInt32 = 2
SPFILEQ_REBOOT_IN_PROGRESS: UInt32 = 4
FLG_ADDREG_DELREG_BIT: UInt32 = 32768
FLG_ADDREG_BINVALUETYPE: UInt32 = 1
FLG_ADDREG_NOCLOBBER: UInt32 = 2
FLG_ADDREG_DELVAL: UInt32 = 4
FLG_ADDREG_APPEND: UInt32 = 8
FLG_ADDREG_KEYONLY: UInt32 = 16
FLG_ADDREG_OVERWRITEONLY: UInt32 = 32
FLG_ADDREG_64BITKEY: UInt32 = 4096
FLG_ADDREG_KEYONLY_COMMON: UInt32 = 8192
FLG_ADDREG_32BITKEY: UInt32 = 16384
FLG_ADDREG_TYPE_SZ: UInt32 = 0
FLG_ADDREG_TYPE_MULTI_SZ: UInt32 = 65536
FLG_ADDREG_TYPE_EXPAND_SZ: UInt32 = 131072
FLG_DELREG_VALUE: UInt32 = 0
FLG_DELREG_TYPE_SZ: UInt32 = 0
FLG_DELREG_TYPE_MULTI_SZ: UInt32 = 65536
FLG_DELREG_TYPE_EXPAND_SZ: UInt32 = 131072
FLG_DELREG_64BITKEY: UInt32 = 4096
FLG_DELREG_KEYONLY_COMMON: UInt32 = 8192
FLG_DELREG_32BITKEY: UInt32 = 16384
FLG_DELREG_OPERATION_MASK: UInt32 = 254
FLG_BITREG_CLEARBITS: UInt32 = 0
FLG_BITREG_SETBITS: UInt32 = 1
FLG_BITREG_64BITKEY: UInt32 = 4096
FLG_BITREG_32BITKEY: UInt32 = 16384
FLG_INI2REG_64BITKEY: UInt32 = 4096
FLG_INI2REG_32BITKEY: UInt32 = 16384
FLG_REGSVR_DLLREGISTER: UInt32 = 1
FLG_REGSVR_DLLINSTALL: UInt32 = 2
FLG_PROFITEM_CURRENTUSER: UInt32 = 1
FLG_PROFITEM_DELETE: UInt32 = 2
FLG_PROFITEM_GROUP: UInt32 = 4
FLG_PROFITEM_CSIDL: UInt32 = 8
FLG_ADDPROPERTY_NOCLOBBER: UInt32 = 1
FLG_ADDPROPERTY_OVERWRITEONLY: UInt32 = 2
FLG_ADDPROPERTY_APPEND: UInt32 = 4
FLG_ADDPROPERTY_OR: UInt32 = 8
FLG_ADDPROPERTY_AND: UInt32 = 16
FLG_DELPROPERTY_MULTI_SZ_DELSTRING: UInt32 = 1
SPINST_LOGCONFIG: UInt32 = 1
SPINST_INIFILES: UInt32 = 2
SPINST_REGISTRY: UInt32 = 4
SPINST_INI2REG: UInt32 = 8
SPINST_FILES: UInt32 = 16
SPINST_BITREG: UInt32 = 32
SPINST_REGSVR: UInt32 = 64
SPINST_UNREGSVR: UInt32 = 128
SPINST_PROFILEITEMS: UInt32 = 256
SPINST_COPYINF: UInt32 = 512
SPINST_PROPERTIES: UInt32 = 1024
SPINST_ALL: UInt32 = 2047
SPINST_SINGLESECTION: UInt32 = 65536
SPINST_LOGCONFIG_IS_FORCED: UInt32 = 131072
SPINST_LOGCONFIGS_ARE_OVERRIDES: UInt32 = 262144
SPINST_REGISTERCALLBACKAWARE: UInt32 = 524288
SPINST_DEVICEINSTALL: UInt32 = 1048576
SPSVCINST_TAGTOFRONT: UInt32 = 1
SPSVCINST_ASSOCSERVICE: UInt32 = 2
SPSVCINST_DELETEEVENTLOGENTRY: UInt32 = 4
SPSVCINST_NOCLOBBER_DISPLAYNAME: UInt32 = 8
SPSVCINST_NOCLOBBER_STARTTYPE: UInt32 = 16
SPSVCINST_NOCLOBBER_ERRORCONTROL: UInt32 = 32
SPSVCINST_NOCLOBBER_LOADORDERGROUP: UInt32 = 64
SPSVCINST_NOCLOBBER_DEPENDENCIES: UInt32 = 128
SPSVCINST_NOCLOBBER_DESCRIPTION: UInt32 = 256
SPSVCINST_STOPSERVICE: UInt32 = 512
SPSVCINST_CLOBBER_SECURITY: UInt32 = 1024
SPSVCINST_STARTSERVICE: UInt32 = 2048
SPSVCINST_NOCLOBBER_REQUIREDPRIVILEGES: UInt32 = 4096
SPSVCINST_NOCLOBBER_TRIGGERS: UInt32 = 8192
SPSVCINST_NOCLOBBER_SERVICESIDTYPE: UInt32 = 16384
SPSVCINST_NOCLOBBER_DELAYEDAUTOSTART: UInt32 = 32768
SPSVCINST_UNIQUE_NAME: UInt32 = 65536
SPSVCINST_NOCLOBBER_FAILUREACTIONS: UInt32 = 131072
SPFILELOG_SYSTEMLOG: UInt32 = 1
SPFILELOG_FORCENEW: UInt32 = 2
SPFILELOG_QUERYONLY: UInt32 = 4
SPFILELOG_OEMFILE: UInt32 = 1
LogSevInformation: UInt32 = 0
LogSevWarning: UInt32 = 1
LogSevError: UInt32 = 2
LogSevFatalError: UInt32 = 3
LogSevMaximum: UInt32 = 4
DICD_GENERATE_ID: UInt32 = 1
DICD_INHERIT_CLASSDRVS: UInt32 = 2
DIOD_INHERIT_CLASSDRVS: UInt32 = 2
DIOD_CANCEL_REMOVE: UInt32 = 4
DIODI_NO_ADD: UInt32 = 1
SPRDI_FIND_DUPS: UInt32 = 1
SPDIT_NODRIVER: UInt32 = 0
DIGCF_DEFAULT: UInt32 = 1
DIGCF_PRESENT: UInt32 = 2
DIGCF_ALLCLASSES: UInt32 = 4
DIGCF_PROFILE: UInt32 = 8
DIGCF_DEVICEINTERFACE: UInt32 = 16
DIGCF_INTERFACEDEVICE: UInt32 = 16
DIBCI_NOINSTALLCLASS: UInt32 = 1
DIBCI_NODISPLAYCLASS: UInt32 = 2
DIOCR_INSTALLER: UInt32 = 1
DIOCR_INTERFACE: UInt32 = 2
DIREG_DEV: UInt32 = 1
DIREG_DRV: UInt32 = 2
DIREG_BOTH: UInt32 = 4
DICLASSPROP_INSTALLER: UInt32 = 1
DICLASSPROP_INTERFACE: UInt32 = 2
SPDRP_DEVICEDESC: UInt32 = 0
SPDRP_HARDWAREID: UInt32 = 1
SPDRP_COMPATIBLEIDS: UInt32 = 2
SPDRP_UNUSED0: UInt32 = 3
SPDRP_SERVICE: UInt32 = 4
SPDRP_UNUSED1: UInt32 = 5
SPDRP_UNUSED2: UInt32 = 6
SPDRP_CLASS: UInt32 = 7
SPDRP_CLASSGUID: UInt32 = 8
SPDRP_DRIVER: UInt32 = 9
SPDRP_CONFIGFLAGS: UInt32 = 10
SPDRP_MFG: UInt32 = 11
SPDRP_FRIENDLYNAME: UInt32 = 12
SPDRP_LOCATION_INFORMATION: UInt32 = 13
SPDRP_PHYSICAL_DEVICE_OBJECT_NAME: UInt32 = 14
SPDRP_CAPABILITIES: UInt32 = 15
SPDRP_UI_NUMBER: UInt32 = 16
SPDRP_UPPERFILTERS: UInt32 = 17
SPDRP_LOWERFILTERS: UInt32 = 18
SPDRP_BUSTYPEGUID: UInt32 = 19
SPDRP_LEGACYBUSTYPE: UInt32 = 20
SPDRP_BUSNUMBER: UInt32 = 21
SPDRP_ENUMERATOR_NAME: UInt32 = 22
SPDRP_SECURITY: UInt32 = 23
SPDRP_SECURITY_SDS: UInt32 = 24
SPDRP_DEVTYPE: UInt32 = 25
SPDRP_EXCLUSIVE: UInt32 = 26
SPDRP_CHARACTERISTICS: UInt32 = 27
SPDRP_ADDRESS: UInt32 = 28
SPDRP_UI_NUMBER_DESC_FORMAT: UInt32 = 29
SPDRP_DEVICE_POWER_DATA: UInt32 = 30
SPDRP_REMOVAL_POLICY: UInt32 = 31
SPDRP_REMOVAL_POLICY_HW_DEFAULT: UInt32 = 32
SPDRP_REMOVAL_POLICY_OVERRIDE: UInt32 = 33
SPDRP_INSTALL_STATE: UInt32 = 34
SPDRP_LOCATION_PATHS: UInt32 = 35
SPDRP_BASE_CONTAINERID: UInt32 = 36
SPDRP_MAXIMUM_PROPERTY: UInt32 = 37
SPCRP_UPPERFILTERS: UInt32 = 17
SPCRP_LOWERFILTERS: UInt32 = 18
SPCRP_SECURITY: UInt32 = 23
SPCRP_SECURITY_SDS: UInt32 = 24
SPCRP_DEVTYPE: UInt32 = 25
SPCRP_EXCLUSIVE: UInt32 = 26
SPCRP_CHARACTERISTICS: UInt32 = 27
SPCRP_MAXIMUM_PROPERTY: UInt32 = 28
DMI_MASK: UInt32 = 1
DMI_BKCOLOR: UInt32 = 2
DMI_USERECT: UInt32 = 4
DIGCDP_FLAG_BASIC: UInt32 = 1
DIGCDP_FLAG_ADVANCED: UInt32 = 2
DIGCDP_FLAG_REMOTE_BASIC: UInt32 = 3
DIGCDP_FLAG_REMOTE_ADVANCED: UInt32 = 4
IDI_RESOURCEFIRST: UInt32 = 159
IDI_RESOURCE: UInt32 = 159
IDI_RESOURCELAST: UInt32 = 161
IDI_RESOURCEOVERLAYFIRST: UInt32 = 161
IDI_RESOURCEOVERLAYLAST: UInt32 = 161
IDI_CONFLICT: UInt32 = 161
IDI_CLASSICON_OVERLAYFIRST: UInt32 = 500
IDI_CLASSICON_OVERLAYLAST: UInt32 = 502
IDI_PROBLEM_OVL: UInt32 = 500
IDI_DISABLED_OVL: UInt32 = 501
IDI_FORCED_OVL: UInt32 = 502
SPWPT_SELECTDEVICE: UInt32 = 1
SPWP_USE_DEVINFO_DATA: UInt32 = 1
SIGNERSCORE_UNKNOWN: UInt32 = 4278190080
SIGNERSCORE_W9X_SUSPECT: UInt32 = 3221225472
SIGNERSCORE_UNSIGNED: UInt32 = 2147483648
SIGNERSCORE_AUTHENTICODE: UInt32 = 251658240
SIGNERSCORE_WHQL: UInt32 = 218103813
SIGNERSCORE_UNCLASSIFIED: UInt32 = 218103812
SIGNERSCORE_INBOX: UInt32 = 218103811
SIGNERSCORE_LOGO_STANDARD: UInt32 = 218103810
SIGNERSCORE_LOGO_PREMIUM: UInt32 = 218103809
SIGNERSCORE_MASK: UInt32 = 4278190080
SIGNERSCORE_SIGNED_MASK: UInt32 = 4026531840
DICUSTOMDEVPROP_MERGE_MULTISZ: UInt32 = 1
SCWMI_CLOBBER_SECURITY: UInt32 = 1
MAX_DEVICE_ID_LEN: UInt32 = 200
MAX_DEVNODE_ID_LEN: UInt32 = 200
MAX_GUID_STRING_LEN: UInt32 = 39
MAX_CLASS_NAME_LEN: UInt32 = 32
MAX_PROFILE_LEN: UInt32 = 80
MAX_CONFIG_VALUE: UInt32 = 9999
MAX_INSTANCE_VALUE: UInt32 = 9999
MAX_MEM_REGISTERS: UInt32 = 9
MAX_IO_PORTS: UInt32 = 20
MAX_IRQS: UInt32 = 7
MAX_DMA_CHANNELS: UInt32 = 7
DWORD_MAX: UInt32 = 4294967295
CONFIGMG_VERSION: UInt32 = 1024
CM_CDMASK_DEVINST: UInt32 = 1
CM_CDMASK_RESDES: UInt32 = 2
CM_CDMASK_FLAGS: UInt32 = 4
CM_CDMASK_DESCRIPTION: UInt32 = 8
CM_CDMASK_VALID: UInt32 = 15
CM_CDFLAGS_DRIVER: UInt32 = 1
CM_CDFLAGS_ROOT_OWNED: UInt32 = 2
CM_CDFLAGS_RESERVED: UInt32 = 4
mMD_MemoryType: UInt32 = 1
fMD_MemoryType: UInt32 = 1
fMD_ROM: UInt32 = 0
fMD_RAM: UInt32 = 1
mMD_32_24: UInt32 = 2
fMD_32_24: UInt32 = 2
fMD_24: UInt32 = 0
fMD_32: UInt32 = 2
mMD_Prefetchable: UInt32 = 4
fMD_Prefetchable: UInt32 = 4
fMD_Pref: UInt32 = 4
fMD_PrefetchDisallowed: UInt32 = 0
fMD_PrefetchAllowed: UInt32 = 4
mMD_Readable: UInt32 = 8
fMD_Readable: UInt32 = 8
fMD_ReadAllowed: UInt32 = 0
fMD_ReadDisallowed: UInt32 = 8
mMD_CombinedWrite: UInt32 = 16
fMD_CombinedWrite: UInt32 = 16
fMD_CombinedWriteDisallowed: UInt32 = 0
fMD_CombinedWriteAllowed: UInt32 = 16
mMD_Cacheable: UInt32 = 32
fMD_NonCacheable: UInt32 = 0
fMD_Cacheable: UInt32 = 32
fMD_WINDOW_DECODE: UInt32 = 64
fMD_MEMORY_BAR: UInt32 = 128
fIOD_PortType: UInt32 = 1
fIOD_Memory: UInt32 = 0
fIOD_IO: UInt32 = 1
fIOD_DECODE: UInt32 = 252
fIOD_10_BIT_DECODE: UInt32 = 4
fIOD_12_BIT_DECODE: UInt32 = 8
fIOD_16_BIT_DECODE: UInt32 = 16
fIOD_POSITIVE_DECODE: UInt32 = 32
fIOD_PASSIVE_DECODE: UInt32 = 64
fIOD_WINDOW_DECODE: UInt32 = 128
fIOD_PORT_BAR: UInt32 = 256
IO_ALIAS_10_BIT_DECODE: UInt32 = 4
IO_ALIAS_12_BIT_DECODE: UInt32 = 16
IO_ALIAS_16_BIT_DECODE: UInt32 = 0
IO_ALIAS_POSITIVE_DECODE: UInt32 = 255
IOA_Local: UInt32 = 255
mDD_Width: UInt32 = 3
fDD_BYTE: UInt32 = 0
fDD_WORD: UInt32 = 1
fDD_DWORD: UInt32 = 2
fDD_BYTE_AND_WORD: UInt32 = 3
mDD_BusMaster: UInt32 = 4
fDD_NoBusMaster: UInt32 = 0
fDD_BusMaster: UInt32 = 4
mDD_Type: UInt32 = 24
fDD_TypeStandard: UInt32 = 0
fDD_TypeA: UInt32 = 8
fDD_TypeB: UInt32 = 16
fDD_TypeF: UInt32 = 24
mIRQD_Share: UInt32 = 1
fIRQD_Exclusive: UInt32 = 0
fIRQD_Share: UInt32 = 1
fIRQD_Share_Bit: UInt32 = 0
fIRQD_Level_Bit: UInt32 = 1
mIRQD_Edge_Level: UInt32 = 2
fIRQD_Level: UInt32 = 0
fIRQD_Edge: UInt32 = 2
CM_RESDES_WIDTH_DEFAULT: UInt32 = 0
CM_RESDES_WIDTH_32: UInt32 = 1
CM_RESDES_WIDTH_64: UInt32 = 2
CM_RESDES_WIDTH_BITS: UInt32 = 3
mPCD_IO_8_16: UInt32 = 1
fPCD_IO_8: UInt32 = 0
fPCD_IO_16: UInt32 = 1
mPCD_MEM_8_16: UInt32 = 2
fPCD_MEM_8: UInt32 = 0
fPCD_MEM_16: UInt32 = 2
mPCD_MEM_A_C: UInt32 = 12
fPCD_MEM1_A: UInt32 = 4
fPCD_MEM2_A: UInt32 = 8
fPCD_IO_ZW_8: UInt32 = 16
fPCD_IO_SRC_16: UInt32 = 32
fPCD_IO_WS_16: UInt32 = 64
mPCD_MEM_WS: UInt32 = 768
fPCD_MEM_WS_ONE: UInt32 = 256
fPCD_MEM_WS_TWO: UInt32 = 512
fPCD_MEM_WS_THREE: UInt32 = 768
fPCD_MEM_A: UInt32 = 4
fPCD_ATTRIBUTES_PER_WINDOW: UInt32 = 32768
fPCD_IO1_16: UInt32 = 65536
fPCD_IO1_ZW_8: UInt32 = 131072
fPCD_IO1_SRC_16: UInt32 = 262144
fPCD_IO1_WS_16: UInt32 = 524288
fPCD_IO2_16: UInt32 = 1048576
fPCD_IO2_ZW_8: UInt32 = 2097152
fPCD_IO2_SRC_16: UInt32 = 4194304
fPCD_IO2_WS_16: UInt32 = 8388608
mPCD_MEM1_WS: UInt32 = 50331648
fPCD_MEM1_WS_ONE: UInt32 = 16777216
fPCD_MEM1_WS_TWO: UInt32 = 33554432
fPCD_MEM1_WS_THREE: UInt32 = 50331648
fPCD_MEM1_16: UInt32 = 67108864
mPCD_MEM2_WS: UInt32 = 805306368
fPCD_MEM2_WS_ONE: UInt32 = 268435456
fPCD_MEM2_WS_TWO: UInt32 = 536870912
fPCD_MEM2_WS_THREE: UInt32 = 805306368
fPCD_MEM2_16: UInt32 = 1073741824
PCD_MAX_MEMORY: UInt32 = 2
PCD_MAX_IO: UInt32 = 2
mPMF_AUDIO_ENABLE: UInt32 = 8
fPMF_AUDIO_ENABLE: UInt32 = 8
CM_HWPI_NOT_DOCKABLE: UInt32 = 0
CM_HWPI_UNDOCKED: UInt32 = 1
CM_HWPI_DOCKED: UInt32 = 2
ResType_All: UInt32 = 0
ResType_None: UInt32 = 0
ResType_Mem: UInt32 = 1
ResType_IO: UInt32 = 2
ResType_DMA: UInt32 = 3
ResType_IRQ: UInt32 = 4
ResType_DoNotUse: UInt32 = 5
ResType_BusNumber: UInt32 = 6
ResType_MemLarge: UInt32 = 7
ResType_MAX: UInt32 = 7
ResType_Ignored_Bit: UInt32 = 32768
ResType_ClassSpecific: UInt32 = 65535
ResType_Reserved: UInt32 = 32768
ResType_DevicePrivate: UInt32 = 32769
ResType_PcCardConfig: UInt32 = 32770
ResType_MfCardConfig: UInt32 = 32771
ResType_Connection: UInt32 = 32772
CM_ADD_RANGE_ADDIFCONFLICT: UInt32 = 0
CM_ADD_RANGE_DONOTADDIFCONFLICT: UInt32 = 1
CM_ADD_RANGE_BITS: UInt32 = 1
BASIC_LOG_CONF: UInt32 = 0
FILTERED_LOG_CONF: UInt32 = 1
ALLOC_LOG_CONF: UInt32 = 2
BOOT_LOG_CONF: UInt32 = 3
FORCED_LOG_CONF: UInt32 = 4
OVERRIDE_LOG_CONF: UInt32 = 5
NUM_LOG_CONF: UInt32 = 6
LOG_CONF_BITS: UInt32 = 7
PRIORITY_EQUAL_FIRST: UInt32 = 8
PRIORITY_EQUAL_LAST: UInt32 = 0
PRIORITY_BIT: UInt32 = 8
RegDisposition_OpenAlways: UInt32 = 0
RegDisposition_OpenExisting: UInt32 = 1
RegDisposition_Bits: UInt32 = 1
CM_ADD_ID_HARDWARE: UInt32 = 0
CM_ADD_ID_COMPATIBLE: UInt32 = 1
CM_ADD_ID_BITS: UInt32 = 1
CM_CREATE_DEVNODE_NORMAL: UInt32 = 0
CM_CREATE_DEVNODE_NO_WAIT_INSTALL: UInt32 = 1
CM_CREATE_DEVNODE_PHANTOM: UInt32 = 2
CM_CREATE_DEVNODE_GENERATE_ID: UInt32 = 4
CM_CREATE_DEVNODE_DO_NOT_INSTALL: UInt32 = 8
CM_CREATE_DEVNODE_BITS: UInt32 = 15
CM_CREATE_DEVINST_NORMAL: UInt32 = 0
CM_CREATE_DEVINST_NO_WAIT_INSTALL: UInt32 = 1
CM_CREATE_DEVINST_PHANTOM: UInt32 = 2
CM_CREATE_DEVINST_GENERATE_ID: UInt32 = 4
CM_CREATE_DEVINST_DO_NOT_INSTALL: UInt32 = 8
CM_CREATE_DEVINST_BITS: UInt32 = 15
CM_DELETE_CLASS_ONLY: UInt32 = 0
CM_DELETE_CLASS_SUBKEYS: UInt32 = 1
CM_DELETE_CLASS_INTERFACE: UInt32 = 2
CM_DELETE_CLASS_BITS: UInt32 = 3
CM_ENUMERATE_CLASSES_INSTALLER: UInt32 = 0
CM_ENUMERATE_CLASSES_INTERFACE: UInt32 = 1
CM_ENUMERATE_CLASSES_BITS: UInt32 = 1
CM_DETECT_NEW_PROFILE: UInt32 = 1
CM_DETECT_CRASHED: UInt32 = 2
CM_DETECT_HWPROF_FIRST_BOOT: UInt32 = 4
CM_DETECT_RUN: UInt32 = 2147483648
CM_DETECT_BITS: UInt32 = 2147483655
CM_DISABLE_POLITE: UInt32 = 0
CM_DISABLE_ABSOLUTE: UInt32 = 1
CM_DISABLE_HARDWARE: UInt32 = 2
CM_DISABLE_UI_NOT_OK: UInt32 = 4
CM_DISABLE_PERSIST: UInt32 = 8
CM_DISABLE_BITS: UInt32 = 15
CM_GETIDLIST_FILTER_NONE: UInt32 = 0
CM_GETIDLIST_FILTER_ENUMERATOR: UInt32 = 1
CM_GETIDLIST_FILTER_SERVICE: UInt32 = 2
CM_GETIDLIST_FILTER_EJECTRELATIONS: UInt32 = 4
CM_GETIDLIST_FILTER_REMOVALRELATIONS: UInt32 = 8
CM_GETIDLIST_FILTER_POWERRELATIONS: UInt32 = 16
CM_GETIDLIST_FILTER_BUSRELATIONS: UInt32 = 32
CM_GETIDLIST_DONOTGENERATE: UInt32 = 268435520
CM_GETIDLIST_FILTER_BITS: UInt32 = 268435583
CM_GETIDLIST_FILTER_TRANSPORTRELATIONS: UInt32 = 128
CM_GETIDLIST_FILTER_PRESENT: UInt32 = 256
CM_GETIDLIST_FILTER_CLASS: UInt32 = 512
CM_GET_DEVICE_INTERFACE_LIST_PRESENT: UInt32 = 0
CM_GET_DEVICE_INTERFACE_LIST_ALL_DEVICES: UInt32 = 1
CM_GET_DEVICE_INTERFACE_LIST_BITS: UInt32 = 1
CM_DRP_DEVICEDESC: UInt32 = 1
CM_DRP_HARDWAREID: UInt32 = 2
CM_DRP_COMPATIBLEIDS: UInt32 = 3
CM_DRP_UNUSED0: UInt32 = 4
CM_DRP_SERVICE: UInt32 = 5
CM_DRP_UNUSED1: UInt32 = 6
CM_DRP_UNUSED2: UInt32 = 7
CM_DRP_CLASS: UInt32 = 8
CM_DRP_CLASSGUID: UInt32 = 9
CM_DRP_DRIVER: UInt32 = 10
CM_DRP_CONFIGFLAGS: UInt32 = 11
CM_DRP_MFG: UInt32 = 12
CM_DRP_FRIENDLYNAME: UInt32 = 13
CM_DRP_LOCATION_INFORMATION: UInt32 = 14
CM_DRP_PHYSICAL_DEVICE_OBJECT_NAME: UInt32 = 15
CM_DRP_CAPABILITIES: UInt32 = 16
CM_DRP_UI_NUMBER: UInt32 = 17
CM_DRP_UPPERFILTERS: UInt32 = 18
CM_CRP_UPPERFILTERS: UInt32 = 18
CM_DRP_LOWERFILTERS: UInt32 = 19
CM_CRP_LOWERFILTERS: UInt32 = 19
CM_DRP_BUSTYPEGUID: UInt32 = 20
CM_DRP_LEGACYBUSTYPE: UInt32 = 21
CM_DRP_BUSNUMBER: UInt32 = 22
CM_DRP_ENUMERATOR_NAME: UInt32 = 23
CM_DRP_SECURITY: UInt32 = 24
CM_CRP_SECURITY: UInt32 = 24
CM_DRP_SECURITY_SDS: UInt32 = 25
CM_CRP_SECURITY_SDS: UInt32 = 25
CM_DRP_DEVTYPE: UInt32 = 26
CM_CRP_DEVTYPE: UInt32 = 26
CM_DRP_EXCLUSIVE: UInt32 = 27
CM_CRP_EXCLUSIVE: UInt32 = 27
CM_DRP_CHARACTERISTICS: UInt32 = 28
CM_CRP_CHARACTERISTICS: UInt32 = 28
CM_DRP_ADDRESS: UInt32 = 29
CM_DRP_UI_NUMBER_DESC_FORMAT: UInt32 = 30
CM_DRP_DEVICE_POWER_DATA: UInt32 = 31
CM_DRP_REMOVAL_POLICY: UInt32 = 32
CM_DRP_REMOVAL_POLICY_HW_DEFAULT: UInt32 = 33
CM_DRP_REMOVAL_POLICY_OVERRIDE: UInt32 = 34
CM_DRP_INSTALL_STATE: UInt32 = 35
CM_DRP_LOCATION_PATHS: UInt32 = 36
CM_DRP_BASE_CONTAINERID: UInt32 = 37
CM_DRP_MIN: UInt32 = 1
CM_CRP_MIN: UInt32 = 1
CM_DRP_MAX: UInt32 = 37
CM_CRP_MAX: UInt32 = 37
CM_DEVCAP_LOCKSUPPORTED: UInt32 = 1
CM_DEVCAP_EJECTSUPPORTED: UInt32 = 2
CM_DEVCAP_REMOVABLE: UInt32 = 4
CM_DEVCAP_DOCKDEVICE: UInt32 = 8
CM_DEVCAP_UNIQUEID: UInt32 = 16
CM_DEVCAP_SILENTINSTALL: UInt32 = 32
CM_DEVCAP_RAWDEVICEOK: UInt32 = 64
CM_DEVCAP_SURPRISEREMOVALOK: UInt32 = 128
CM_DEVCAP_HARDWAREDISABLED: UInt32 = 256
CM_DEVCAP_NONDYNAMIC: UInt32 = 512
CM_DEVCAP_SECUREDEVICE: UInt32 = 1024
CM_REMOVAL_POLICY_EXPECT_NO_REMOVAL: UInt32 = 1
CM_REMOVAL_POLICY_EXPECT_ORDERLY_REMOVAL: UInt32 = 2
CM_REMOVAL_POLICY_EXPECT_SURPRISE_REMOVAL: UInt32 = 3
CM_INSTALL_STATE_INSTALLED: UInt32 = 0
CM_INSTALL_STATE_NEEDS_REINSTALL: UInt32 = 1
CM_INSTALL_STATE_FAILED_INSTALL: UInt32 = 2
CM_INSTALL_STATE_FINISH_INSTALL: UInt32 = 3
CM_LOCATE_DEVNODE_NORMAL: UInt32 = 0
CM_LOCATE_DEVNODE_PHANTOM: UInt32 = 1
CM_LOCATE_DEVNODE_CANCELREMOVE: UInt32 = 2
CM_LOCATE_DEVNODE_NOVALIDATION: UInt32 = 4
CM_LOCATE_DEVNODE_BITS: UInt32 = 7
CM_LOCATE_DEVINST_NORMAL: UInt32 = 0
CM_LOCATE_DEVINST_PHANTOM: UInt32 = 1
CM_LOCATE_DEVINST_CANCELREMOVE: UInt32 = 2
CM_LOCATE_DEVINST_NOVALIDATION: UInt32 = 4
CM_LOCATE_DEVINST_BITS: UInt32 = 7
CM_OPEN_CLASS_KEY_INSTALLER: UInt32 = 0
CM_OPEN_CLASS_KEY_INTERFACE: UInt32 = 1
CM_OPEN_CLASS_KEY_BITS: UInt32 = 1
CM_REMOVE_UI_OK: UInt32 = 0
CM_REMOVE_UI_NOT_OK: UInt32 = 1
CM_REMOVE_NO_RESTART: UInt32 = 2
CM_REMOVE_DISABLE: UInt32 = 4
CM_REMOVE_BITS: UInt32 = 7
CM_QUERY_REMOVE_UI_OK: UInt32 = 0
CM_QUERY_REMOVE_UI_NOT_OK: UInt32 = 1
CM_REENUMERATE_NORMAL: UInt32 = 0
CM_REENUMERATE_SYNCHRONOUS: UInt32 = 1
CM_REENUMERATE_RETRY_INSTALLATION: UInt32 = 2
CM_REENUMERATE_ASYNCHRONOUS: UInt32 = 4
CM_REENUMERATE_BITS: UInt32 = 7
CM_REGISTER_DEVICE_DRIVER_STATIC: UInt32 = 0
CM_REGISTER_DEVICE_DRIVER_DISABLEABLE: UInt32 = 1
CM_REGISTER_DEVICE_DRIVER_REMOVABLE: UInt32 = 2
CM_REGISTER_DEVICE_DRIVER_BITS: UInt32 = 3
CM_REGISTRY_HARDWARE: UInt32 = 0
CM_REGISTRY_SOFTWARE: UInt32 = 1
CM_REGISTRY_USER: UInt32 = 256
CM_REGISTRY_CONFIG: UInt32 = 512
CM_REGISTRY_BITS: UInt32 = 769
CM_SET_DEVNODE_PROBLEM_NORMAL: UInt32 = 0
CM_SET_DEVNODE_PROBLEM_OVERRIDE: UInt32 = 1
CM_SET_DEVNODE_PROBLEM_BITS: UInt32 = 1
CM_SET_DEVINST_PROBLEM_NORMAL: UInt32 = 0
CM_SET_DEVINST_PROBLEM_OVERRIDE: UInt32 = 1
CM_SET_DEVINST_PROBLEM_BITS: UInt32 = 1
CM_SET_HW_PROF_FLAGS_UI_NOT_OK: UInt32 = 1
CM_SET_HW_PROF_FLAGS_BITS: UInt32 = 1
CM_SETUP_DEVNODE_READY: UInt32 = 0
CM_SETUP_DEVINST_READY: UInt32 = 0
CM_SETUP_DOWNLOAD: UInt32 = 1
CM_SETUP_WRITE_LOG_CONFS: UInt32 = 2
CM_SETUP_PROP_CHANGE: UInt32 = 3
CM_SETUP_DEVNODE_RESET: UInt32 = 4
CM_SETUP_DEVINST_RESET: UInt32 = 4
CM_SETUP_DEVNODE_CONFIG: UInt32 = 5
CM_SETUP_DEVINST_CONFIG: UInt32 = 5
CM_SETUP_DEVNODE_CONFIG_CLASS: UInt32 = 6
CM_SETUP_DEVINST_CONFIG_CLASS: UInt32 = 6
CM_SETUP_DEVNODE_CONFIG_EXTENSIONS: UInt32 = 7
CM_SETUP_DEVINST_CONFIG_EXTENSIONS: UInt32 = 7
CM_SETUP_DEVNODE_CONFIG_RESET: UInt32 = 8
CM_SETUP_DEVINST_CONFIG_RESET: UInt32 = 8
CM_SETUP_BITS: UInt32 = 15
CM_QUERY_ARBITRATOR_RAW: UInt32 = 0
CM_QUERY_ARBITRATOR_TRANSLATED: UInt32 = 1
CM_QUERY_ARBITRATOR_BITS: UInt32 = 1
CM_CUSTOMDEVPROP_MERGE_MULTISZ: UInt32 = 1
CM_CUSTOMDEVPROP_BITS: UInt32 = 1
CM_NAME_ATTRIBUTE_NAME_RETRIEVED_FROM_DEVICE: UInt32 = 1
CM_NAME_ATTRIBUTE_USER_ASSIGNED_NAME: UInt32 = 2
CM_CLASS_PROPERTY_INSTALLER: UInt32 = 0
CM_CLASS_PROPERTY_INTERFACE: UInt32 = 1
CM_CLASS_PROPERTY_BITS: UInt32 = 1
CM_NOTIFY_FILTER_FLAG_ALL_INTERFACE_CLASSES: UInt32 = 1
CM_NOTIFY_FILTER_FLAG_ALL_DEVICE_INSTANCES: UInt32 = 2
CM_GLOBAL_STATE_CAN_DO_UI: UInt32 = 1
CM_GLOBAL_STATE_ON_BIG_STACK: UInt32 = 2
CM_GLOBAL_STATE_SERVICES_AVAILABLE: UInt32 = 4
CM_GLOBAL_STATE_SHUTTING_DOWN: UInt32 = 8
CM_GLOBAL_STATE_DETECTION_PENDING: UInt32 = 16
CM_GLOBAL_STATE_REBOOT_REQUIRED: UInt32 = 32
INSTALLFLAG_FORCE: UInt32 = 1
INSTALLFLAG_READONLY: UInt32 = 2
INSTALLFLAG_NONINTERACTIVE: UInt32 = 4
INSTALLFLAG_BITS: UInt32 = 7
DIIDFLAG_SHOWSEARCHUI: UInt32 = 1
DIIDFLAG_NOFINISHINSTALLUI: UInt32 = 2
DIIDFLAG_INSTALLNULLDRIVER: UInt32 = 4
DIIDFLAG_INSTALLCOPYINFDRIVERS: UInt32 = 8
DIIDFLAG_BITS: UInt32 = 15
DIIRFLAG_INF_ALREADY_COPIED: UInt32 = 1
DIIRFLAG_FORCE_INF: UInt32 = 2
DIIRFLAG_HW_USING_THE_INF: UInt32 = 4
DIIRFLAG_HOTPATCH: UInt32 = 8
DIIRFLAG_NOBACKUP: UInt32 = 16
DIIRFLAG_PRE_CONFIGURE_INF: UInt32 = 32
DIIRFLAG_INSTALL_AS_SET: UInt32 = 64
DIURFLAG_NO_REMOVE_INF: UInt32 = 1
DIURFLAG_RESERVED: UInt32 = 2
ROLLBACK_FLAG_NO_UI: UInt32 = 1
ROLLBACK_BITS: UInt32 = 1
MAX_KEY_LEN: UInt32 = 100
SZ_KEY_OPTIONDESC: String = 'OptionDesc'
SZ_KEY_LDIDOEM: String = 'LdidOEM'
SZ_KEY_SRCDISKFILES: String = 'SourceDisksFiles'
SZ_KEY_SRCDISKNAMES: String = 'SourceDisksNames'
SZ_KEY_STRINGS: String = 'Strings'
SZ_KEY_DESTDIRS: String = 'DestinationDirs'
SZ_KEY_LAYOUT_FILE: String = 'LayoutFile'
SZ_KEY_DEFDESTDIR: String = 'DefaultDestDir'
SZ_KEY_LFN_SECTION: String = 'VarLDID.LFN'
SZ_KEY_SFN_SECTION: String = 'VarLDID.SFN'
SZ_KEY_UPDATEINIS: String = 'UpdateInis'
SZ_KEY_UPDATEINIFIELDS: String = 'UpdateIniFields'
SZ_KEY_INI2REG: String = 'Ini2Reg'
SZ_KEY_COPYFILES: String = 'CopyFiles'
SZ_KEY_RENFILES: String = 'RenFiles'
SZ_KEY_DELFILES: String = 'DelFiles'
SZ_KEY_ADDREG: String = 'AddReg'
SZ_KEY_ADDREGNOCLOBBER: String = 'AddRegNoClobber'
SZ_KEY_DELREG: String = 'DelReg'
SZ_KEY_BITREG: String = 'BitReg'
SZ_KEY_COPYINF: String = 'CopyINF'
SZ_KEY_LOGCONFIG: String = 'LogConfig'
SZ_KEY_ADDSERVICE: String = 'AddService'
SZ_KEY_DELSERVICE: String = 'DelService'
SZ_KEY_ADDTRIGGER: String = 'AddTrigger'
SZ_KEY_FAILUREACTIONS: String = 'FailureActions'
SZ_KEY_ADDINTERFACE: String = 'AddInterface'
SZ_KEY_ADDIME: String = 'AddIme'
SZ_KEY_DELIME: String = 'DelIme'
SZ_KEY_REGSVR: String = 'RegisterDlls'
SZ_KEY_UNREGSVR: String = 'UnregisterDlls'
SZ_KEY_PROFILEITEMS: String = 'ProfileItems'
SZ_KEY_MODULES: String = 'Modules'
SZ_KEY_DEFAULTOPTION: String = 'DefaultOption'
SZ_KEY_LISTOPTIONS: String = 'ListOptions'
SZ_KEY_CLEANONLY: String = 'CleanOnly'
SZ_KEY_UPGRADEONLY: String = 'UpgradeOnly'
SZ_KEY_EXCLUDEID: String = 'ExcludeId'
SZ_KEY_ADDPOWERSETTING: String = 'AddPowerSetting'
SZ_KEY_ADDPROP: String = 'AddProperty'
SZ_KEY_DELPROP: String = 'DelProperty'
SZ_KEY_FEATURESCORE: String = 'FeatureScore'
SZ_KEY_ADDEVENTPROVIDER: String = 'AddEventProvider'
SZ_KEY_ADDCHANNEL: String = 'AddChannel'
SZ_KEY_IMPORTCHANNEL: String = 'ImportChannel'
SZ_KEY_ADDAUTOLOGGER: String = 'AddAutoLogger'
SZ_KEY_UPDATEAUTOLOGGER: String = 'UpdateAutoLogger'
SZ_KEY_ADDAUTOLOGGERPROVIDER: String = 'AddAutoLoggerProvider'
SZ_KEY_ADDFILTER: String = 'AddFilter'
SZ_KEY_FILTERLEVEL: String = 'FilterLevel'
SZ_KEY_FILTERPOSITION: String = 'FilterPosition'
SZ_KEY_PHASE1: String = 'Phase1'
SZ_KEY_HARDWARE: String = 'Hardware'
INFSTR_KEY_CONFIGPRIORITY: String = 'ConfigPriority'
MAX_PRIORITYSTR_LEN: UInt32 = 16
INFSTR_CFGPRI_HARDWIRED: String = 'HARDWIRED'
INFSTR_CFGPRI_DESIRED: String = 'DESIRED'
INFSTR_CFGPRI_NORMAL: String = 'NORMAL'
INFSTR_CFGPRI_SUBOPTIMAL: String = 'SUBOPTIMAL'
INFSTR_CFGPRI_DISABLED: String = 'DISABLED'
INFSTR_CFGPRI_RESTART: String = 'RESTART'
INFSTR_CFGPRI_REBOOT: String = 'REBOOT'
INFSTR_CFGPRI_POWEROFF: String = 'POWEROFF'
INFSTR_CFGPRI_HARDRECONFIG: String = 'HARDRECONFIG'
INFSTR_CFGPRI_FORCECONFIG: String = 'FORCECONFIG'
INFSTR_CFGTYPE_BASIC: String = 'BASIC'
INFSTR_CFGTYPE_FORCED: String = 'FORCED'
INFSTR_CFGTYPE_OVERRIDE: String = 'OVERRIDE'
INFSTR_KEY_MEMCONFIG: String = 'MemConfig'
INFSTR_KEY_MEMLARGECONFIG: String = 'MemLargeConfig'
INFSTR_KEY_IOCONFIG: String = 'IOConfig'
INFSTR_KEY_IRQCONFIG: String = 'IRQConfig'
INFSTR_KEY_DMACONFIG: String = 'DMAConfig'
INFSTR_KEY_PCCARDCONFIG: String = 'PcCardConfig'
INFSTR_KEY_MFCARDCONFIG: String = 'MfCardConfig'
INFSTR_SECT_CLASS_INSTALL: String = 'ClassInstall'
INFSTR_SECT_CLASS_INSTALL_32: String = 'ClassInstall32'
INFSTR_SECT_DEFAULT_INSTALL: String = 'DefaultInstall'
INFSTR_SECT_DEFAULT_UNINSTALL: String = 'DefaultUninstall'
INFSTR_SECT_INTERFACE_INSTALL_32: String = 'InterfaceInstall32'
INFSTR_SECT_VERSION: String = 'Version'
INFSTR_KEY_PROVIDER: String = 'Provider'
INFSTR_KEY_SIGNATURE: String = 'Signature'
INFSTR_KEY_DRIVERSET: String = 'DriverSet'
MAX_INF_FLAG: UInt32 = 20
INFSTR_KEY_HARDWARE_CLASS: String = 'Class'
INFSTR_KEY_HARDWARE_CLASSGUID: String = 'ClassGUID'
INFSTR_KEY_NOSETUPINF: String = 'NoSetupInf'
INFSTR_KEY_FROMINET: String = 'FromINet'
INFSTR_KEY_CATALOGFILE: String = 'CatalogFile'
INFSTR_KEY_PNPLOCKDOWN: String = 'PnpLockDown'
INFSTR_KEY_EXTENSIONID: String = 'ExtensionId'
INFSTR_SECT_MFG: String = 'Manufacturer'
INFSTR_SECT_TARGETCOMPUTERS: String = 'TargetComputers'
INFSTR_SECT_EXTENSIONCONTRACTS: String = 'ExtensionContracts'
INFSTR_KEY_CLASS: String = 'Class'
INFSTR_KEY_CLASSGUID: String = 'ClassGUID'
INFSTR_RESTART: String = 'Restart'
INFSTR_REBOOT: String = 'Reboot'
INFSTR_KEY_DISPLAYNAME: String = 'DisplayName'
INFSTR_KEY_SERVICETYPE: String = 'ServiceType'
INFSTR_KEY_STARTTYPE: String = 'StartType'
INFSTR_KEY_ERRORCONTROL: String = 'ErrorControl'
INFSTR_KEY_SERVICEBINARY: String = 'ServiceBinary'
INFSTR_KEY_LOADORDERGROUP: String = 'LoadOrderGroup'
INFSTR_KEY_DEPENDENCIES: String = 'Dependencies'
INFSTR_KEY_REQUIREDPRIVILEGES: String = 'RequiredPrivileges'
INFSTR_KEY_STARTNAME: String = 'StartName'
INFSTR_KEY_SECURITY: String = 'Security'
INFSTR_KEY_DESCRIPTION: String = 'Description'
INFSTR_KEY_SERVICESIDTYPE: String = 'ServiceSidType'
INFSTR_KEY_DELAYEDAUTOSTART: String = 'DelayedAutoStart'
INFSTR_KEY_TRIGGER_TYPE: String = 'TriggerType'
INFSTR_KEY_ACTION: String = 'Action'
INFSTR_KEY_SUB_TYPE: String = 'SubType'
INFSTR_KEY_DATA_ITEM: String = 'DataItem'
INFSTR_KEY_RESET_PERIOD: String = 'ResetPeriod'
INFSTR_KEY_NON_CRASH_FAILURES: String = 'NonCrashFailures'
INFSTR_KEY_FAILURE_ACTION: String = 'Action'
INFSTR_KEY_PROVIDER_NAME: String = 'ProviderName'
INFSTR_KEY_RESOURCE_FILE: String = 'ResourceFile'
INFSTR_KEY_MESSAGE_FILE: String = 'MessageFile'
INFSTR_KEY_PARAMETER_FILE: String = 'ParameterFile'
INFSTR_KEY_CHANNEL_ACCESS: String = 'Access'
INFSTR_KEY_CHANNEL_ISOLATION: String = 'Isolation'
INFSTR_KEY_CHANNEL_ENABLED: String = 'Enabled'
INFSTR_KEY_CHANNEL_VALUE: String = 'Value'
INFSTR_KEY_LOGGING_MAXSIZE: String = 'LoggingMaxSize'
INFSTR_KEY_LOGGING_RETENTION: String = 'LoggingRetention'
INFSTR_KEY_LOGGING_AUTOBACKUP: String = 'LoggingAutoBackup'
INFSTR_KEY_START: String = 'Start'
INFSTR_KEY_BUFFER_SIZE: String = 'BufferSize'
INFSTR_KEY_CLOCK_TYPE: String = 'ClockType'
INFSTR_KEY_DISABLE_REALTIME_PERSISTENCE: String = 'DisableRealtimePersistence'
INFSTR_KEY_FILE_NAME: String = 'FileName'
INFSTR_KEY_FILE_MAX: String = 'FileMax'
INFSTR_KEY_FLUSH_TIMER: String = 'FlushTimer'
INFSTR_KEY_LOG_FILE_MODE: String = 'LogFileMode'
INFSTR_KEY_MAX_FILE_SIZE: String = 'MaxFileSize'
INFSTR_KEY_MAXIMUM_BUFFERS: String = 'MaximumBuffers'
INFSTR_KEY_MINIMUM_BUFFERS: String = 'MinimumBuffers'
INFSTR_KEY_ENABLED: String = 'Enabled'
INFSTR_KEY_ENABLE_FLAGS: String = 'EnableFlags'
INFSTR_KEY_ENABLE_LEVEL: String = 'EnableLevel'
INFSTR_KEY_ENABLE_PROPERTY: String = 'EnableProperty'
INFSTR_KEY_MATCH_ANY_KEYWORD: String = 'MatchAnyKeyword'
INFSTR_KEY_MATCH_ALL_KEYWORD: String = 'MatchAllKeyword'
INFSTR_SECT_DETMODULES: String = 'Det.Modules'
INFSTR_SECT_DETCLASSINFO: String = 'Det.ClassInfo'
INFSTR_SECT_MANUALDEV: String = 'Det.ManualDev'
INFSTR_SECT_AVOIDCFGSYSDEV: String = 'Det.AvoidCfgSysDev'
INFSTR_SECT_REGCFGSYSDEV: String = 'Det.RegCfgSysDev'
INFSTR_SECT_DEVINFS: String = 'Det.DevINFs'
INFSTR_SECT_AVOIDINIDEV: String = 'Det.AvoidIniDev'
INFSTR_SECT_AVOIDENVDEV: String = 'Det.AvoidEnvDev'
INFSTR_SECT_REGINIDEV: String = 'Det.RegIniDev'
INFSTR_SECT_REGENVDEV: String = 'Det.RegEnvDev'
INFSTR_SECT_HPOMNIBOOK: String = 'Det.HPOmnibook'
INFSTR_SECT_FORCEHWVERIFY: String = 'Det.ForceHWVerify'
INFSTR_SECT_DETOPTIONS: String = 'Det.Options'
INFSTR_SECT_BADPNPBIOS: String = 'BadPnpBios'
INFSTR_SECT_GOODACPIBIOS: String = 'GoodACPIBios'
INFSTR_SECT_BADACPIBIOS: String = 'BadACPIBios'
INFSTR_SECT_BADROUTINGTABLEBIOS: String = 'BadPCIIRQRoutingTableBios'
INFSTR_SECT_BADPMCALLBIOS: String = 'BadProtectedModeCallBios'
INFSTR_SECT_BADRMCALLBIOS: String = 'BadRealModeCallBios'
INFSTR_SECT_MACHINEIDBIOS: String = 'MachineIDBios'
INFSTR_SECT_BADDISKBIOS: String = 'BadDiskBios'
INFSTR_SECT_BADDSBIOS: String = 'BadDSBios'
INFSTR_KEY_DETPARAMS: String = 'Params'
INFSTR_KEY_SKIPLIST: String = 'SkipList'
INFSTR_KEY_DETECTLIST: String = 'DetectList'
INFSTR_KEY_EXCLUDERES: String = 'ExcludeRes'
INFSTR_SUBKEY_LOGCONFIG: String = 'LogConfig'
INFSTR_SUBKEY_DET: String = 'Det'
INFSTR_SUBKEY_FACTDEF: String = 'FactDef'
INFSTR_SUBKEY_POSSIBLEDUPS: String = 'PosDup'
INFSTR_SUBKEY_NORESOURCEDUPS: String = 'NoResDup'
INFSTR_SUBKEY_HW: String = 'Hw'
INFSTR_SUBKEY_CTL: String = 'CTL'
INFSTR_SUBKEY_SERVICES: String = 'Services'
INFSTR_SUBKEY_SOFTWARE: String = 'Software'
INFSTR_SUBKEY_INTERFACES: String = 'Interfaces'
INFSTR_SUBKEY_COINSTALLERS: String = 'CoInstallers'
INFSTR_SUBKEY_LOGCONFIGOVERRIDE: String = 'LogConfigOverride'
INFSTR_SUBKEY_WMI: String = 'WMI'
INFSTR_SUBKEY_EVENTS: String = 'Events'
INFSTR_SUBKEY_FILTERS: String = 'Filters'
INFSTR_CONTROLFLAGS_SECTION: String = 'ControlFlags'
INFSTR_KEY_COPYFILESONLY: String = 'CopyFilesOnly'
INFSTR_KEY_EXCLUDEFROMSELECT: String = 'ExcludeFromSelect'
INFSTR_KEY_ALWAYSEXCLUDEFROMSELECT: String = 'AlwaysExcludeFromSelect'
INFSTR_KEY_INTERACTIVEINSTALL: String = 'InteractiveInstall'
INFSTR_KEY_REQUESTADDITIONALSOFTWARE: String = 'RequestAdditionalSoftware'
INFSTR_PLATFORM_WIN: String = 'Win'
INFSTR_PLATFORM_NT: String = 'NT'
INFSTR_PLATFORM_NTX86: String = 'NTx86'
INFSTR_PLATFORM_NTMIPS: String = 'NTMIPS'
INFSTR_PLATFORM_NTALPHA: String = 'NTAlpha'
INFSTR_PLATFORM_NTPPC: String = 'NTPPC'
INFSTR_PLATFORM_NTIA64: String = 'NTIA64'
INFSTR_PLATFORM_NTAXP64: String = 'NTAXP64'
INFSTR_PLATFORM_NTAMD64: String = 'NTAMD64'
INFSTR_PLATFORM_NTARM: String = 'NTARM'
INFSTR_PLATFORM_NTARM64: String = 'NTARM64'
MAX_INFSTR_STRKEY_LEN: UInt32 = 32
INFSTR_STRKEY_DRVDESC: String = 'DriverDesc'
INFSTR_DRIVERSELECT_SECTION: String = 'DriverSelect'
INFSTR_DRIVERSELECT_FUNCTIONS: String = 'DriverSelectFunctions'
INFSTR_DRIVERVERSION_SECTION: String = 'DriverVer'
INFSTR_SOFTWAREVERSION_SECTION: String = 'SoftwareVersion'
INFSTR_SECT_CFGSYS: String = 'ConfigSysDrivers'
INFSTR_SECT_AUTOEXECBAT: String = 'AutoexecBatDrivers'
INFSTR_SECT_SYSINI: String = 'SystemIniDrivers'
INFSTR_SECT_SYSINIDRV: String = 'SystemIniDriversLine'
INFSTR_SECT_WININIRUN: String = 'WinIniRunLine'
INFSTR_KEY_PATH: String = 'Path'
INFSTR_KEY_NAME: String = 'Name'
INFSTR_KEY_IO: String = 'IO'
INFSTR_KEY_MEM: String = 'Mem'
INFSTR_KEY_IRQ: String = 'IRQ'
INFSTR_KEY_DMA: String = 'DMA'
INFSTR_BUS_ISA: String = 'BUS_ISA'
INFSTR_BUS_EISA: String = 'BUS_EISA'
INFSTR_BUS_MCA: String = 'BUS_MCA'
INFSTR_BUS_ALL: String = 'BUS_ALL'
INFSTR_RISK_NONE: String = 'RISK_NONE'
INFSTR_RISK_VERYLOW: String = 'RISK_VERYLOW'
INFSTR_RISK_BIOSROMRD: String = 'RISK_BIOSROMRD'
INFSTR_RISK_QUERYDRV: String = 'RISK_QUERYDRV'
INFSTR_RISK_SWINT: String = 'RISK_SWINT'
INFSTR_RISK_LOW: String = 'RISK_LOW'
INFSTR_RISK_DELICATE: String = 'RISK_DELICATE'
INFSTR_RISK_MEMRD: String = 'RISK_MEMRD'
INFSTR_RISK_IORD: String = 'RISK_IORD'
INFSTR_RISK_MEMWR: String = 'RISK_MEMWR'
INFSTR_RISK_IOWR: String = 'RISK_IOWR'
INFSTR_RISK_UNRELIABLE: String = 'RISK_UNRELIABLE'
INFSTR_RISK_VERYHIGH: String = 'RISK_VERYHIGH'
INFSTR_CLASS_SAFEEXCL: String = 'SAFE_EXCL'
INFSTR_SECT_DISPLAY_CLEANUP: String = 'DisplayCleanup'
GUID_HWPROFILE_QUERY_CHANGE: Guid = Guid('{cb3a4001-46f0-11d0-b08f-00609713053f}')
GUID_HWPROFILE_CHANGE_CANCELLED: Guid = Guid('{cb3a4002-46f0-11d0-b08f-00609713053f}')
GUID_HWPROFILE_CHANGE_COMPLETE: Guid = Guid('{cb3a4003-46f0-11d0-b08f-00609713053f}')
GUID_DEVICE_INTERFACE_ARRIVAL: Guid = Guid('{cb3a4004-46f0-11d0-b08f-00609713053f}')
GUID_DEVICE_INTERFACE_REMOVAL: Guid = Guid('{cb3a4005-46f0-11d0-b08f-00609713053f}')
GUID_TARGET_DEVICE_QUERY_REMOVE: Guid = Guid('{cb3a4006-46f0-11d0-b08f-00609713053f}')
GUID_TARGET_DEVICE_REMOVE_CANCELLED: Guid = Guid('{cb3a4007-46f0-11d0-b08f-00609713053f}')
GUID_TARGET_DEVICE_REMOVE_COMPLETE: Guid = Guid('{cb3a4008-46f0-11d0-b08f-00609713053f}')
GUID_PNP_CUSTOM_NOTIFICATION: Guid = Guid('{aca73f8e-8d23-11d1-ac7d-0000f87571d0}')
GUID_PNP_POWER_NOTIFICATION: Guid = Guid('{c2cf0660-eb7a-11d1-bd7f-0000f87571d0}')
GUID_PNP_POWER_SETTING_CHANGE: Guid = Guid('{29c69b3e-c79a-43bf-bbde-a932fa1bea7e}')
GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED: Guid = Guid('{fcf528f6-a82f-47b1-ad3a-8050594cad28}')
GUID_KERNEL_SOFT_RESTART_PREPARE: Guid = Guid('{de373def-a85c-4f76-8cbf-f96bea8bd10f}')
GUID_KERNEL_SOFT_RESTART_CANCEL: Guid = Guid('{31d737e7-8c0b-468a-956e-9f433ec358fb}')
GUID_RECOVERY_PCI_PREPARE_SHUTDOWN: Guid = Guid('{90d889de-8704-44cf-8115-ed8528d2b2da}')
GUID_RECOVERY_NVMED_PREPARE_SHUTDOWN: Guid = Guid('{4b9770ea-bde7-400b-a9b9-4f684f54cc2a}')
GUID_KERNEL_SOFT_RESTART_FINALIZE: Guid = Guid('{20e91abd-350a-4d4f-8577-99c81507473a}')
GUID_BUS_INTERFACE_STANDARD: Guid = Guid('{496b8280-6f25-11d0-beaf-08002be2092f}')
GUID_PCI_BUS_INTERFACE_STANDARD: Guid = Guid('{496b8281-6f25-11d0-beaf-08002be2092f}')
GUID_PCI_BUS_INTERFACE_STANDARD2: Guid = Guid('{de94e966-fdff-4c9c-9998-6747b150e74c}')
GUID_ARBITER_INTERFACE_STANDARD: Guid = Guid('{e644f185-8c0e-11d0-becf-08002be2092f}')
GUID_TRANSLATOR_INTERFACE_STANDARD: Guid = Guid('{6c154a92-aacf-11d0-8d2a-00a0c906b244}')
GUID_ACPI_INTERFACE_STANDARD: Guid = Guid('{b091a08a-ba97-11d0-bd14-00aa00b7b32a}')
GUID_INT_ROUTE_INTERFACE_STANDARD: Guid = Guid('{70941bf4-0073-11d1-a09e-00c04fc340b1}')
GUID_PCMCIA_BUS_INTERFACE_STANDARD: Guid = Guid('{76173af0-c504-11d1-947f-00c04fb960ee}')
GUID_ACPI_REGS_INTERFACE_STANDARD: Guid = Guid('{06141966-7245-6369-462e-4e656c736f6e}')
GUID_LEGACY_DEVICE_DETECTION_STANDARD: Guid = Guid('{50feb0de-596a-11d2-a5b8-0000f81a4619}')
GUID_PCI_DEVICE_PRESENT_INTERFACE: Guid = Guid('{d1b82c26-bf49-45ef-b216-71cbd7889b57}')
GUID_MF_ENUMERATION_INTERFACE: Guid = Guid('{aeb895f0-5586-11d1-8d84-00a0c906b244}')
GUID_REENUMERATE_SELF_INTERFACE_STANDARD: Guid = Guid('{2aeb0243-6a6e-486b-82fc-d815f6b97006}')
GUID_AGP_TARGET_BUS_INTERFACE_STANDARD: Guid = Guid('{b15cfce8-06d1-4d37-9d4c-bedde0c2a6ff}')
GUID_ACPI_CMOS_INTERFACE_STANDARD: Guid = Guid('{3a8d0384-6505-40ca-bc39-56c15f8c5fed}')
GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD: Guid = Guid('{f14f609b-cbbd-4957-a674-bc00213f1c97}')
GUID_ACPI_INTERFACE_STANDARD2: Guid = Guid('{e8695f63-1831-4870-a8cf-9c2f03f9dcb5}')
GUID_PNP_LOCATION_INTERFACE: Guid = Guid('{70211b0e-0afb-47db-afc1-410bf842497a}')
GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE: Guid = Guid('{146cd41c-dae3-4437-8aff-2af3f038099b}')
GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE: Guid = Guid('{83a7734a-84c7-4161-9a98-6000ed0c4a33}')
GUID_MSIX_TABLE_CONFIG_INTERFACE: Guid = Guid('{1a6a460b-194f-455d-b34b-b84c5b05712b}')
GUID_D3COLD_SUPPORT_INTERFACE: Guid = Guid('{b38290e5-3cd0-4f9d-9937-f5fe2b44d47a}')
GUID_PROCESSOR_PCC_INTERFACE_STANDARD: Guid = Guid('{37b17e9a-c21c-4296-972d-11c4b32b28f0}')
GUID_PCI_VIRTUALIZATION_INTERFACE: Guid = Guid('{64897b47-3a4a-4d75-bc74-89dd6c078293}')
GUID_PCC_INTERFACE_STANDARD: Guid = Guid('{3ee8ba63-0f59-4a24-8a45-35808bdd1249}')
GUID_PCC_INTERFACE_INTERNAL: Guid = Guid('{7cce62ce-c189-4814-a6a7-12112089e938}')
GUID_THERMAL_COOLING_INTERFACE: Guid = Guid('{ecbe47a8-c498-4bb9-bd70-e867e0940d22}')
GUID_DMA_CACHE_COHERENCY_INTERFACE: Guid = Guid('{b520f7fa-8a5a-4e40-a3f6-6be1e162d935}')
GUID_DEVICE_RESET_INTERFACE_STANDARD: Guid = Guid('{649fdf26-3bc0-4813-ad24-7e0c1eda3fa3}')
GUID_IOMMU_BUS_INTERFACE: Guid = Guid('{1efee0b2-d278-4ae4-bddc-1b34dd648043}')
GUID_PCI_SECURITY_INTERFACE: Guid = Guid('{6e7f1451-199e-4acc-ba2d-762b4edf4674}')
GUID_SCM_BUS_INTERFACE: Guid = Guid('{25944783-ce79-4232-815e-4a30014e8eb4}')
GUID_SECURE_DRIVER_INTERFACE: Guid = Guid('{370f67e1-4ff5-4a94-9a35-06c5d9cc30e2}')
GUID_SDEV_IDENTIFIER_INTERFACE: Guid = Guid('{49d67af8-916c-4ee8-9df1-889f17d21e91}')
GUID_SCM_BUS_NVD_INTERFACE: Guid = Guid('{8de064ff-b630-42e4-88ea-6f24c8641175}')
GUID_SCM_BUS_LD_INTERFACE: Guid = Guid('{9b89307d-d76b-4f48-b186-54041ae92e8d}')
GUID_SCM_PHYSICAL_NVDIMM_INTERFACE: Guid = Guid('{0079c21b-917e-405e-a9ce-0732b5bbcebd}')
GUID_PNP_EXTENDED_ADDRESS_INTERFACE: Guid = Guid('{b8e992ec-a797-4dc4-8846-84d041707446}')
GUID_D3COLD_AUX_POWER_AND_TIMING_INTERFACE: Guid = Guid('{0044d8aa-f664-4588-9ffc-2afeaf5950b9}')
GUID_PCI_FPGA_CONTROL_INTERFACE: Guid = Guid('{2df3f7a8-b9b3-4063-9215-b5d14a0b266e}')
GUID_PCI_PTM_CONTROL_INTERFACE: Guid = Guid('{348a5ebb-ba24-44b7-9916-285687735117}')
GUID_BUS_RESOURCE_UPDATE_INTERFACE: Guid = Guid('{27d0102d-bfb2-4164-81dd-dbb82f968b48}')
GUID_NPEM_CONTROL_INTERFACE: Guid = Guid('{4d95573d-b774-488a-b120-4f284a9eff51}')
GUID_PCI_ATS_INTERFACE: Guid = Guid('{010a7fe8-96f5-4943-bedf-95e651b93412}')
GUID_BUS_TYPE_INTERNAL: Guid = Guid('{1530ea73-086b-11d1-a09f-00c04fc340b1}')
GUID_BUS_TYPE_PCMCIA: Guid = Guid('{09343630-af9f-11d0-92e9-0000f81e1b30}')
GUID_BUS_TYPE_PCI: Guid = Guid('{c8ebdfb0-b510-11d0-80e5-00a0c92542e3}')
GUID_BUS_TYPE_ISAPNP: Guid = Guid('{e676f854-d87d-11d0-92b2-00a0c9055fc5}')
GUID_BUS_TYPE_EISA: Guid = Guid('{ddc35509-f3fc-11d0-a537-0000f8753ed1}')
GUID_BUS_TYPE_MCA: Guid = Guid('{1c75997a-dc33-11d0-92b2-00a0c9055fc5}')
GUID_BUS_TYPE_SERENUM: Guid = Guid('{77114a87-8944-11d1-bd90-00a0c906be2d}')
GUID_BUS_TYPE_USB: Guid = Guid('{9d7debbc-c85d-11d1-9eb4-006008c3a19a}')
GUID_BUS_TYPE_LPTENUM: Guid = Guid('{c4ca1000-2ddc-11d5-a17a-00c04f60524d}')
GUID_BUS_TYPE_USBPRINT: Guid = Guid('{441ee000-4342-11d5-a184-00c04f60524d}')
GUID_BUS_TYPE_DOT4PRT: Guid = Guid('{441ee001-4342-11d5-a184-00c04f60524d}')
GUID_BUS_TYPE_1394: Guid = Guid('{f74e73eb-9ac5-45eb-be4d-772cc71ddfb3}')
GUID_BUS_TYPE_HID: Guid = Guid('{eeaf37d0-1963-47c4-aa48-72476db7cf49}')
GUID_BUS_TYPE_AVC: Guid = Guid('{c06ff265-ae09-48f0-812c-16753d7cba83}')
GUID_BUS_TYPE_IRDA: Guid = Guid('{7ae17dc1-c944-44d6-881f-4c2e61053bc1}')
GUID_BUS_TYPE_SD: Guid = Guid('{e700cc04-4036-4e89-9579-89ebf45f00cd}')
GUID_BUS_TYPE_ACPI: Guid = Guid('{d7b46895-001a-4942-891f-a7d46610a843}')
GUID_BUS_TYPE_SW_DEVICE: Guid = Guid('{06d10322-7de0-4cef-8e25-197d0e7442e2}')
GUID_BUS_TYPE_SCM: Guid = Guid('{375a5912-804c-45aa-bdc2-fdd25a1d9512}')
GUID_POWER_DEVICE_ENABLE: Guid = Guid('{827c0a6f-feb0-11d0-bd26-00aa00b7b32a}')
GUID_POWER_DEVICE_TIMEOUTS: Guid = Guid('{a45da735-feb0-11d0-bd26-00aa00b7b32a}')
GUID_POWER_DEVICE_WAKE_ENABLE: Guid = Guid('{a9546a82-feb0-11d0-bd26-00aa00b7b32a}')
GUID_WUDF_DEVICE_HOST_PROBLEM: Guid = Guid('{c43d25bd-9346-40ee-a2d2-d70c15f8b75b}')
GUID_PARTITION_UNIT_INTERFACE_STANDARD: Guid = Guid('{52363f5b-d891-429b-8195-aec5fef6853c}')
GUID_QUERY_CRASHDUMP_FUNCTIONS: Guid = Guid('{9cc6b8ff-32e2-4834-b1de-b32ef8880a4b}')
@winfunctype('SETUPAPI.dll')
def SetupGetInfInformationA(InfSpec: VoidPtr, SearchControl: UInt32, ReturnBuffer: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfInformationW(InfSpec: VoidPtr, SearchControl: UInt32, ReturnBuffer: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfFileInformationA(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfFileInformationW(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfOriginalFileInformationA(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), OriginalFileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ORIGINAL_FILE_INFO_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfOriginalFileInformationW(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), OriginalFileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ORIGINAL_FILE_INFO_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfVersionInformationA(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, Key: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfVersionInformationW(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, Key: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfDriverStoreLocationA(FileName: Windows.Win32.Foundation.PSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), LocaleName: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfDriverStoreLocationW(FileName: Windows.Win32.Foundation.PWSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), LocaleName: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfPublishedNameA(DriverStoreLocation: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfPublishedNameW(DriverStoreLocation: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfFileListA(DirectoryPath: Windows.Win32.Foundation.PSTR, InfStyle: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfFileListW(DirectoryPath: Windows.Win32.Foundation.PWSTR, InfStyle: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenInfFileW(FileName: Windows.Win32.Foundation.PWSTR, InfClass: Windows.Win32.Foundation.PWSTR, InfStyle: UInt32, ErrorLine: POINTER(UInt32)) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenInfFileA(FileName: Windows.Win32.Foundation.PSTR, InfClass: Windows.Win32.Foundation.PSTR, InfStyle: UInt32, ErrorLine: POINTER(UInt32)) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenMasterInf() -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenAppendInfFileW(FileName: Windows.Win32.Foundation.PWSTR, InfHandle: VoidPtr, ErrorLine: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenAppendInfFileA(FileName: Windows.Win32.Foundation.PSTR, InfHandle: VoidPtr, ErrorLine: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseInfFile(InfHandle: VoidPtr) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupFindFirstLineA(InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PSTR, Key: Windows.Win32.Foundation.PSTR, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindFirstLineW(InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PWSTR, Key: Windows.Win32.Foundation.PWSTR, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextLine(ContextIn: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), ContextOut: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextMatchLineA(ContextIn: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Key: Windows.Win32.Foundation.PSTR, ContextOut: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextMatchLineW(ContextIn: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Key: Windows.Win32.Foundation.PWSTR, ContextOut: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineByIndexA(InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PSTR, Index: UInt32, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineByIndexW(InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PWSTR, Index: UInt32, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineCountA(InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineCountW(InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineTextA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PSTR, Key: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineTextW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), InfHandle: VoidPtr, Section: Windows.Win32.Foundation.PWSTR, Key: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFieldCount(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetStringFieldA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetStringFieldW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetIntField(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, IntegerValue: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetMultiSzFieldA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetMultiSzFieldW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBinaryField(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: POINTER(Byte), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoA(SourceFileName: Windows.Win32.Foundation.PSTR, ActualSourceFileName: POINTER(Windows.Win32.Foundation.PSTR), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoW(SourceFileName: Windows.Win32.Foundation.PWSTR, ActualSourceFileName: POINTER(Windows.Win32.Foundation.PWSTR), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoExA(SourceFileName: Windows.Win32.Foundation.PSTR, ActualSourceFileNameBuffer: Windows.Win32.Foundation.PSTR, ActualSourceFileNameBufferLen: UInt32, RequiredBufferLen: POINTER(UInt32), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoExW(SourceFileName: Windows.Win32.Foundation.PWSTR, ActualSourceFileNameBuffer: Windows.Win32.Foundation.PWSTR, ActualSourceFileNameBufferLen: UInt32, RequiredBufferLen: POINTER(UInt32), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDecompressOrCopyFileA(SourceFileName: Windows.Win32.Foundation.PSTR, TargetFileName: Windows.Win32.Foundation.PSTR, CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDecompressOrCopyFileW(SourceFileName: Windows.Win32.Foundation.PWSTR, TargetFileName: Windows.Win32.Foundation.PWSTR, CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileLocationA(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PSTR, SourceId: POINTER(UInt32), ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileLocationW(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PWSTR, SourceId: POINTER(UInt32), ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileSizeA(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PSTR, Section: Windows.Win32.Foundation.PSTR, FileSize: POINTER(UInt32), RoundingFactor: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileSizeW(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PWSTR, Section: Windows.Win32.Foundation.PWSTR, FileSize: POINTER(UInt32), RoundingFactor: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetTargetPathA(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Section: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetTargetPathW(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Section: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetSourceListA(Flags: UInt32, SourceList: POINTER(Windows.Win32.Foundation.PSTR), SourceCount: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetSourceListW(Flags: UInt32, SourceList: POINTER(Windows.Win32.Foundation.PWSTR), SourceCount: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCancelTemporarySourceList() -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToSourceListA(Flags: UInt32, Source: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToSourceListW(Flags: UInt32, Source: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromSourceListA(Flags: UInt32, Source: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromSourceListW(Flags: UInt32, Source: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySourceListA(Flags: UInt32, List: POINTER(POINTER(Windows.Win32.Foundation.PSTR)), Count: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySourceListW(Flags: UInt32, List: POINTER(POINTER(Windows.Win32.Foundation.PWSTR)), Count: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFreeSourceListA(List: POINTER(POINTER(Windows.Win32.Foundation.PSTR)), Count: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFreeSourceListW(List: POINTER(POINTER(Windows.Win32.Foundation.PWSTR)), Count: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPromptForDiskA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, DiskName: Windows.Win32.Foundation.PSTR, PathToSource: Windows.Win32.Foundation.PSTR, FileSought: Windows.Win32.Foundation.PSTR, TagFile: Windows.Win32.Foundation.PSTR, DiskPromptStyle: UInt32, PathBuffer: Windows.Win32.Foundation.PSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupPromptForDiskW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, DiskName: Windows.Win32.Foundation.PWSTR, PathToSource: Windows.Win32.Foundation.PWSTR, FileSought: Windows.Win32.Foundation.PWSTR, TagFile: Windows.Win32.Foundation.PWSTR, DiskPromptStyle: UInt32, PathBuffer: Windows.Win32.Foundation.PWSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, DiskName: Windows.Win32.Foundation.PSTR, PathToSource: Windows.Win32.Foundation.PSTR, SourceFile: Windows.Win32.Foundation.PSTR, TargetPathFile: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32, PathBuffer: Windows.Win32.Foundation.PSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, DiskName: Windows.Win32.Foundation.PWSTR, PathToSource: Windows.Win32.Foundation.PWSTR, SourceFile: Windows.Win32.Foundation.PWSTR, TargetPathFile: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32, PathBuffer: Windows.Win32.Foundation.PWSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupRenameErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, SourceFile: Windows.Win32.Foundation.PSTR, TargetFile: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupRenameErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, SourceFile: Windows.Win32.Foundation.PWSTR, TargetFile: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDeleteErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, File: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDeleteErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, File: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupBackupErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, SourceFile: Windows.Win32.Foundation.PSTR, TargetFile: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupBackupErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, SourceFile: Windows.Win32.Foundation.PWSTR, TargetFile: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdA(InfHandle: VoidPtr, Id: UInt32, Directory: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdW(InfHandle: VoidPtr, Id: UInt32, Directory: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdExA(InfHandle: VoidPtr, Id: UInt32, Directory: Windows.Win32.Foundation.PSTR, Flags: UInt32, Reserved1: UInt32, Reserved2: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdExW(InfHandle: VoidPtr, Id: UInt32, Directory: Windows.Win32.Foundation.PWSTR, Flags: UInt32, Reserved1: UInt32, Reserved2: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceInfoA(InfHandle: VoidPtr, SourceId: UInt32, InfoDesired: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceInfoW(InfHandle: VoidPtr, SourceId: UInt32, InfoDesired: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileA(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PSTR, SourcePathRoot: Windows.Win32.Foundation.PSTR, DestinationName: Windows.Win32.Foundation.PSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileW(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PWSTR, SourcePathRoot: Windows.Win32.Foundation.PWSTR, DestinationName: Windows.Win32.Foundation.PWSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileExA(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PSTR, SourcePathRoot: Windows.Win32.Foundation.PSTR, DestinationName: Windows.Win32.Foundation.PSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr, FileWasInUse: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileExW(InfHandle: VoidPtr, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PWSTR, SourcePathRoot: Windows.Win32.Foundation.PWSTR, DestinationName: Windows.Win32.Foundation.PWSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr, FileWasInUse: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenFileQueue() -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseFileQueue(QueueHandle: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueAlternatePlatformA(QueueHandle: VoidPtr, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), AlternateDefaultCatalogFile: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueAlternatePlatformW(QueueHandle: VoidPtr, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), AlternateDefaultCatalogFile: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetPlatformPathOverrideA(Override: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetPlatformPathOverrideW(Override: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyA(QueueHandle: VoidPtr, SourceRootPath: Windows.Win32.Foundation.PSTR, SourcePath: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, SourceDescription: Windows.Win32.Foundation.PSTR, SourceTagfile: Windows.Win32.Foundation.PSTR, TargetDirectory: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyW(QueueHandle: VoidPtr, SourceRootPath: Windows.Win32.Foundation.PWSTR, SourcePath: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, SourceDescription: Windows.Win32.Foundation.PWSTR, SourceTagfile: Windows.Win32.Foundation.PWSTR, TargetDirectory: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyIndirectA(CopyParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_FILE_COPY_PARAMS_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyIndirectW(CopyParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_FILE_COPY_PARAMS_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDefaultCopyA(QueueHandle: VoidPtr, InfHandle: VoidPtr, SourceRootPath: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDefaultCopyW(QueueHandle: VoidPtr, InfHandle: VoidPtr, SourceRootPath: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopySectionA(QueueHandle: VoidPtr, SourceRootPath: Windows.Win32.Foundation.PSTR, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopySectionW(QueueHandle: VoidPtr, SourceRootPath: Windows.Win32.Foundation.PWSTR, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteA(QueueHandle: VoidPtr, PathPart1: Windows.Win32.Foundation.PSTR, PathPart2: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteW(QueueHandle: VoidPtr, PathPart1: Windows.Win32.Foundation.PWSTR, PathPart2: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteSectionA(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteSectionW(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameA(QueueHandle: VoidPtr, SourcePath: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, TargetPath: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameW(QueueHandle: VoidPtr, SourcePath: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, TargetPath: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameSectionA(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameSectionW(QueueHandle: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, Section: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCommitFileQueueA(Owner: Windows.Win32.Foundation.HWND, QueueHandle: VoidPtr, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCommitFileQueueW(Owner: Windows.Win32.Foundation.HWND, QueueHandle: VoidPtr, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupScanFileQueueA(FileQueue: VoidPtr, Flags: UInt32, Window: Windows.Win32.Foundation.HWND, CallbackRoutine: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, CallbackContext: VoidPtr, Result: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupScanFileQueueW(FileQueue: VoidPtr, Flags: UInt32, Window: Windows.Win32.Foundation.HWND, CallbackRoutine: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, CallbackContext: VoidPtr, Result: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileQueueCount(FileQueue: VoidPtr, SubQueueFileOp: UInt32, NumOperations: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileQueueFlags(FileQueue: VoidPtr, Flags: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueFlags(FileQueue: VoidPtr, FlagMask: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyOEMInfA(SourceInfFileName: Windows.Win32.Foundation.PSTR, OEMSourceMediaLocation: Windows.Win32.Foundation.PSTR, OEMSourceMediaType: Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE, CopyStyle: UInt32, DestinationInfFileName: Windows.Win32.Foundation.PSTR, DestinationInfFileNameSize: UInt32, RequiredSize: POINTER(UInt32), DestinationInfFileNameComponent: POINTER(Windows.Win32.Foundation.PSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyOEMInfW(SourceInfFileName: Windows.Win32.Foundation.PWSTR, OEMSourceMediaLocation: Windows.Win32.Foundation.PWSTR, OEMSourceMediaType: Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE, CopyStyle: UInt32, DestinationInfFileName: Windows.Win32.Foundation.PWSTR, DestinationInfFileNameSize: UInt32, RequiredSize: POINTER(UInt32), DestinationInfFileNameComponent: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupUninstallOEMInfA(InfFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupUninstallOEMInfW(InfFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupUninstallNewlyCopiedInfs(FileQueue: VoidPtr, Flags: UInt32, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCreateDiskSpaceListA(Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupCreateDiskSpaceListW(Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupDuplicateDiskSpaceListA(DiskSpace: VoidPtr, Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupDuplicateDiskSpaceListW(DiskSpace: VoidPtr, Reserved1: VoidPtr, Reserved2: UInt32, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupDestroyDiskSpaceList(DiskSpace: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryDrivesInDiskSpaceListA(DiskSpace: VoidPtr, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryDrivesInDiskSpaceListW(DiskSpace: VoidPtr, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySpaceRequiredOnDriveA(DiskSpace: VoidPtr, DriveSpec: Windows.Win32.Foundation.PSTR, SpaceRequired: POINTER(Int64), Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySpaceRequiredOnDriveW(DiskSpace: VoidPtr, DriveSpec: Windows.Win32.Foundation.PWSTR, SpaceRequired: POINTER(Int64), Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAdjustDiskSpaceListA(DiskSpace: VoidPtr, DriveRoot: Windows.Win32.Foundation.PSTR, Amount: Int64, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAdjustDiskSpaceListW(DiskSpace: VoidPtr, DriveRoot: Windows.Win32.Foundation.PWSTR, Amount: Int64, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToDiskSpaceListA(DiskSpace: VoidPtr, TargetFilespec: Windows.Win32.Foundation.PSTR, FileSize: Int64, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToDiskSpaceListW(DiskSpace: VoidPtr, TargetFilespec: Windows.Win32.Foundation.PWSTR, FileSize: Int64, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddSectionToDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddSectionToDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddInstallSectionToDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddInstallSectionToDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromDiskSpaceListA(DiskSpace: VoidPtr, TargetFilespec: Windows.Win32.Foundation.PSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromDiskSpaceListW(DiskSpace: VoidPtr, TargetFilespec: Windows.Win32.Foundation.PWSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveSectionFromDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveSectionFromDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, ListInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveInstallSectionFromDiskSpaceListA(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveInstallSectionFromDiskSpaceListW(DiskSpace: VoidPtr, InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Reserved1: VoidPtr, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupIterateCabinetA(CabinetFile: Windows.Win32.Foundation.PSTR, Reserved: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupIterateCabinetW(CabinetFile: Windows.Win32.Foundation.PWSTR, Reserved: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPromptReboot(FileQueue: VoidPtr, Owner: Windows.Win32.Foundation.HWND, ScanOnly: Windows.Win32.Foundation.BOOL) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupInitDefaultQueueCallback(OwnerWindow: Windows.Win32.Foundation.HWND) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupInitDefaultQueueCallbackEx(OwnerWindow: Windows.Win32.Foundation.HWND, AlternateProgressWindow: Windows.Win32.Foundation.HWND, ProgressMessage: UInt32, Reserved1: UInt32, Reserved2: VoidPtr) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupTermDefaultQueueCallback(Context: VoidPtr) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupDefaultQueueCallbackA(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDefaultQueueCallbackW(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFromInfSectionA(Owner: Windows.Win32.Foundation.HWND, InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32, RelativeKeyRoot: Windows.Win32.System.Registry.HKEY, SourceRootPath: Windows.Win32.Foundation.PSTR, CopyFlags: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: VoidPtr, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFromInfSectionW(Owner: Windows.Win32.Foundation.HWND, InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, RelativeKeyRoot: Windows.Win32.System.Registry.HKEY, SourceRootPath: Windows.Win32.Foundation.PWSTR, CopyFlags: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: VoidPtr, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFilesFromInfSectionA(InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, FileQueue: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, SourceRootPath: Windows.Win32.Foundation.PSTR, CopyFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFilesFromInfSectionW(InfHandle: VoidPtr, LayoutInfHandle: VoidPtr, FileQueue: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, SourceRootPath: Windows.Win32.Foundation.PWSTR, CopyFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionA(InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionW(InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionExA(InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Reserved1: VoidPtr, Reserved2: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionExW(InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Reserved1: VoidPtr, Reserved2: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def InstallHinfSectionA(Window: Windows.Win32.Foundation.HWND, ModuleHandle: Windows.Win32.Foundation.HINSTANCE, CommandLine: Windows.Win32.Foundation.PSTR, ShowCommand: Int32) -> Void: ...
@winfunctype('SETUPAPI.dll')
def InstallHinfSectionW(Window: Windows.Win32.Foundation.HWND, ModuleHandle: Windows.Win32.Foundation.HINSTANCE, CommandLine: Windows.Win32.Foundation.PWSTR, ShowCommand: Int32) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupInitializeFileLogA(LogFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupInitializeFileLogW(LogFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> VoidPtr: ...
@winfunctype('SETUPAPI.dll')
def SetupTerminateFileLog(FileLogHandle: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogFileA(FileLogHandle: VoidPtr, LogSectionName: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, Checksum: UInt32, DiskTagfile: Windows.Win32.Foundation.PSTR, DiskDescription: Windows.Win32.Foundation.PSTR, OtherInfo: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogFileW(FileLogHandle: VoidPtr, LogSectionName: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, Checksum: UInt32, DiskTagfile: Windows.Win32.Foundation.PWSTR, DiskDescription: Windows.Win32.Foundation.PWSTR, OtherInfo: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFileLogEntryA(FileLogHandle: VoidPtr, LogSectionName: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFileLogEntryW(FileLogHandle: VoidPtr, LogSectionName: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryFileLogA(FileLogHandle: VoidPtr, LogSectionName: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, DesiredInfo: Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo, DataOut: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryFileLogW(FileLogHandle: VoidPtr, LogSectionName: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, DesiredInfo: Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo, DataOut: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenLog(Erase: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogErrorA(MessageString: Windows.Win32.Foundation.PSTR, Severity: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogErrorW(MessageString: Windows.Win32.Foundation.PWSTR, Severity: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseLog() -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupGetThreadLogToken() -> UInt64: ...
@winfunctype('SETUPAPI.dll')
def SetupSetThreadLogToken(LogToken: UInt64) -> Void: ...
@cfunctype('SETUPAPI.dll', variadic=True)
def SetupWriteTextLog(LogToken: UInt64, Category: UInt32, Flags: UInt32, MessageStr: Windows.Win32.Foundation.PSTR, *__arglist) -> Void: ...
@cfunctype('SETUPAPI.dll', variadic=True)
def SetupWriteTextLogError(LogToken: UInt64, Category: UInt32, LogFlags: UInt32, Error: UInt32, MessageStr: Windows.Win32.Foundation.PSTR, *__arglist) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupWriteTextLogInfLine(LogToken: UInt64, Flags: UInt32, InfHandle: VoidPtr, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBackupInformationA(QueueHandle: VoidPtr, BackupParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_BACKUP_QUEUE_PARAMS_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBackupInformationW(QueueHandle: VoidPtr, BackupParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_BACKUP_QUEUE_PARAMS_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPrepareQueueForRestoreA(QueueHandle: VoidPtr, BackupPath: Windows.Win32.Foundation.PSTR, RestoreFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPrepareQueueForRestoreW(QueueHandle: VoidPtr, BackupPath: Windows.Win32.Foundation.PWSTR, RestoreFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetNonInteractiveMode(NonInteractiveFlag: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetNonInteractiveMode() -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoList(ClassGuid: POINTER(Guid), hwndParent: Windows.Win32.Foundation.HWND) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoListExA(ClassGuid: POINTER(Guid), hwndParent: Windows.Win32.Foundation.HWND, MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoListExW(ClassGuid: POINTER(Guid), hwndParent: Windows.Win32.Foundation.HWND, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListClass(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, ClassGuid: POINTER(Guid)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListDetailA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoSetDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_LIST_DETAIL_DATA_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListDetailW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoSetDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_LIST_DETAIL_DATA_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceName: Windows.Win32.Foundation.PSTR, ClassGuid: POINTER(Guid), DeviceDescription: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, CreationFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceName: Windows.Win32.Foundation.PWSTR, ClassGuid: POINTER(Guid), DeviceDescription: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, CreationFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInfoA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInstanceId: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, OpenFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInfoW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInstanceId: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, OpenFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstanceIdA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstanceId: Windows.Win32.Foundation.PSTR, DeviceInstanceIdSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstanceIdW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstanceId: Windows.Win32.Foundation.PWSTR, DeviceInstanceIdSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInfo(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDeviceInfo(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MemberIndex: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyDeviceInfoList(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDeviceInterfaces(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InterfaceClassGuid: POINTER(Guid), MemberIndex: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InterfaceClassGuid: POINTER(Guid), ReferenceString: Windows.Win32.Foundation.PSTR, CreationFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InterfaceClassGuid: POINTER(Guid), ReferenceString: Windows.Win32.Foundation.PWSTR, CreationFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DevicePath: Windows.Win32.Foundation.PSTR, OpenFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DevicePath: Windows.Win32.Foundation.PWSTR, OpenFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceAlias(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), AliasInterfaceClassGuid: POINTER(Guid), AliasDeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInterfaceData(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRemoveDeviceInterface(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceDetailA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), DeviceInterfaceDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DETAIL_DATA_A_head), DeviceInterfaceDetailDataSize: UInt32, RequiredSize: POINTER(UInt32), DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceDetailW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), DeviceInterfaceDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DETAIL_DATA_W_head), DeviceInterfaceDetailDataSize: UInt32, RequiredSize: POINTER(UInt32), DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDeviceInterfaces(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInterfaceDefault(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Flags: UInt32, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRegisterDeviceInfo(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Flags: UInt32, CompareProc: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_DETSIG_CMPPROC, CompareContext: VoidPtr, DupDeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildDriverInfoList(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_BUILD_DRIVER_DRIVER_TYPE) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCancelDriverInfoSearch(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDriverInfoA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: UInt32, MemberIndex: UInt32, DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDriverInfoW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: UInt32, MemberIndex: UInt32, DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDriverA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDriverW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDriverA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDriverW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInfoDetailA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head), DriverInfoDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DETAIL_DATA_A_head), DriverInfoDetailDataSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInfoDetailW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head), DriverInfoDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DETAIL_DATA_W_head), DriverInfoDetailDataSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyDriverInfoList(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsA(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsW(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsExA(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsExW(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetINFClassA(InfName: Windows.Win32.Foundation.PSTR, ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetINFClassW(InfName: Windows.Win32.Foundation.PWSTR, ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoList(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoListExA(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoListExW(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionA(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionW(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PWSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionExA(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionExW(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PWSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCallClassInstaller(InstallFunction: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectBestCompatDrv(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDriverFiles(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRegisterCoDeviceInstallers(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRemoveDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiUnremoveDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRestartDevices(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiChangeState(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassA(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32, FileQueue: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassW(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, FileQueue: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassExA(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32, FileQueue: VoidPtr, InterfaceClassGuid: POINTER(Guid), Reserved1: VoidPtr, Reserved2: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassExW(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, FileQueue: VoidPtr, InterfaceClassGuid: POINTER(Guid), Reserved1: VoidPtr, Reserved2: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKey(ClassGuid: POINTER(Guid), samDesired: UInt32) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKeyExA(ClassGuid: POINTER(Guid), samDesired: UInt32, Flags: UInt32, MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKeyExW(ClassGuid: POINTER(Guid), samDesired: UInt32, Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceRegKeyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32, samDesired: UInt32, InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceRegKeyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32, samDesired: UInt32, InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32, samDesired: UInt32) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInterfaceRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDevRegKeyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDevRegKeyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDevRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, samDesired: UInt32) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDevRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileList(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileListExA(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileListExW(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDevicePropertyKeys(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDevicePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDevicePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfacePropertyKeys(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfacePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInterfacePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyKeys(ClassGuid: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyKeysExW(ClassGuid: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyExW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassPropertyW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassPropertyExW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceRegistryPropertyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceRegistryPropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassRegistryPropertyA(ClassGuid: POINTER(Guid), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassRegistryPropertyW(ClassGuid: POINTER(Guid), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceRegistryPropertyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceRegistryPropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassRegistryPropertyA(ClassGuid: POINTER(Guid), Property: UInt32, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassRegistryPropertyW(ClassGuid: POINTER(Guid), Property: UInt32, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDriverInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDriverInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiLoadClassIcon(ClassGuid: POINTER(Guid), LargeIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON), MiniIconIndex: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiLoadDeviceIcon(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), cxIcon: UInt32, cyIcon: UInt32, Flags: UInt32, hIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDrawMiniIcon(hdc: Windows.Win32.Graphics.Gdi.HDC, rc: Windows.Win32.Foundation.RECT, MiniIconIndex: Int32, Flags: UInt32) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassBitmapIndex(ClassGuid: POINTER(Guid), MiniIconIndex: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageList(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageListExA(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageListExW(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageIndex(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head), ClassGuid: POINTER(Guid), ImageIndex: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyClassImageList(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevPropertySheetsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertySheetHeader: POINTER(Windows.Win32.UI.Controls.PROPSHEETHEADERA_V2_head), PropertySheetHeaderPageListSize: UInt32, RequiredSize: POINTER(UInt32), PropertySheetType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevPropertySheetsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertySheetHeader: POINTER(Windows.Win32.UI.Controls.PROPSHEETHEADERW_V2_head), PropertySheetHeaderPageListSize: UInt32, RequiredSize: POINTER(UInt32), PropertySheetType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiAskForOEMDisk(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectOEMDrv(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidA(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidW(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidExA(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidExW(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameA(ClassName: Windows.Win32.Foundation.PSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameW(ClassName: Windows.Win32.Foundation.PWSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameExA(ClassName: Windows.Win32.Foundation.PSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameExW(ClassName: Windows.Win32.Foundation.PWSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameA(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameW(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PWSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameExA(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameExW(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PWSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetWizardPage(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InstallWizardData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INSTALLWIZARD_DATA_head), PageType: UInt32, Flags: UInt32) -> Windows.Win32.UI.Controls.HPROPSHEETPAGE: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualModelsSectionA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualModelsSectionW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallA(InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PSTR, InfSectionWithExt: Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallW(InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PWSTR, InfSectionWithExt: Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallExA(InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PSTR), Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallExW(InfHandle: VoidPtr, InfSectionName: Windows.Win32.Foundation.PWSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PWSTR), Reserved: VoidPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupEnumInfSectionsA(InfHandle: VoidPtr, Index: UInt32, Buffer: Windows.Win32.Foundation.PSTR, Size: UInt32, SizeNeeded: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupEnumInfSectionsW(InfHandle: VoidPtr, Index: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, Size: UInt32, SizeNeeded: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupVerifyInfFileA(InfName: Windows.Win32.Foundation.PSTR, AltPlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSignerInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_SIGNER_INFO_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupVerifyInfFileW(InfName: Windows.Win32.Foundation.PWSTR, AltPlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSignerInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_SIGNER_INFO_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetCustomDevicePropertyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), CustomPropertyName: Windows.Win32.Foundation.PSTR, Flags: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetCustomDevicePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), CustomPropertyName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupConfigureWmiFromInfSectionA(InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupConfigureWmiFromInfSectionW(InfHandle: VoidPtr, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Empty_Log_Conf(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, Priority: Windows.Win32.Data.HtmlHelp.PRIORITY, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Empty_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, Priority: Windows.Win32.Data.HtmlHelp.PRIORITY, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_IDA(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_IDW(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_ID_ExA(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_ID_ExW(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Range(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Res_Des(prdResDes: POINTER(UIntPtr), lcLogConf: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Res_Des_Ex(prdResDes: POINTER(UIntPtr), lcLogConf: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Connect_MachineA(UNCServerName: Windows.Win32.Foundation.PSTR, phMachine: POINTER(IntPtr)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Connect_MachineW(UNCServerName: Windows.Win32.Foundation.PWSTR, phMachine: POINTER(IntPtr)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNodeA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, dnParent: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNodeW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, dnParent: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNode_ExA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, dnParent: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNode_ExW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, dnParent: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_Range_List(prlh: POINTER(UIntPtr), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Class_Key(ClassGuid: POINTER(Guid), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Class_Key_Ex(ClassGuid: POINTER(Guid), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_DevNode_Key(dnDevNode: UInt32, ulHardwareProfile: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_DevNode_Key_Ex(dnDevNode: UInt32, ulHardwareProfile: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Range(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Detect_Resource_Conflict(dnDevInst: UInt32, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, pbConflictDetected: POINTER(Windows.Win32.Foundation.BOOL), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Detect_Resource_Conflict_Ex(dnDevInst: UInt32, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, pbConflictDetected: POINTER(Windows.Win32.Foundation.BOOL), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disable_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disable_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disconnect_Machine(hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Dup_Range_List(rlhOld: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enable_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enable_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Classes(ulClassIndex: UInt32, ClassGuid: POINTER(Guid), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Classes_Ex(ulClassIndex: UInt32, ClassGuid: POINTER(Guid), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_EnumeratorsA(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_EnumeratorsW(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Enumerators_ExA(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Enumerators_ExW(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Find_Range(pullStart: POINTER(UInt64), ullStart: UInt64, ulLength: UInt32, ullAlignment: UInt64, ullEnd: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_First_Range(rlh: UIntPtr, pullStart: POINTER(UInt64), pullEnd: POINTER(UInt64), preElement: POINTER(UIntPtr), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf(lcLogConfToBeFreed: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf_Ex(lcLogConfToBeFreed: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf_Handle(lcLogConf: UIntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Range_List(rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des_Handle(rdResDes: UIntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Child(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Child_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_NameA(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_NameW(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Name_ExA(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Name_ExW(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_NameA(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_NameW(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_Name_ExA(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_Name_ExW(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Depth(pulDepth: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Depth_Ex(pulDepth: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_IDA(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_IDW(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ExA(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ExW(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ListA(pszFilter: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ListW(pszFilter: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_ExA(pszFilter: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_ExW(pszFilter: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_SizeA(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_SizeW(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_Size_ExA(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_Size_ExW(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_Size(pulLen: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_Size_Ex(pulLen: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_PropertyW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_ExW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_Keys(dnDevInst: UInt32, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_Keys_Ex(dnDevInst: UInt32, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_PropertyA(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_PropertyW(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_Property_ExA(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_Property_ExW(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_PropertyA(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_PropertyW(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PWSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_Property_ExA(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_Property_ExW(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PWSTR, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Status(pulStatus: POINTER(UInt32), pulProblemNumber: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Status_Ex(pulStatus: POINTER(UInt32), pulProblemNumber: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_First_Log_Conf(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_First_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Global_State(pulState: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Global_State_Ex(pulState: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_InfoA(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_A_head), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_Info_ExA(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_A_head), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_InfoW(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_W_head), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_Info_ExW(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_W_head), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_FlagsA(pDeviceID: Windows.Win32.Foundation.PSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_FlagsW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_Flags_ExA(pDeviceID: Windows.Win32.Foundation.PSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_Flags_ExW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_AliasA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_AliasW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Alias_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Alias_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_ListA(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_ListW(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_ExA(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_ExW(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_SizeA(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_SizeW(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_Size_ExA(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_Size_ExW(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_PropertyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_KeysW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_Keys_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Log_Conf_Priority(lcLogConf: UIntPtr, pPriority: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Log_Conf_Priority_Ex(lcLogConf: UIntPtr, pPriority: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Log_Conf(plcLogConf: POINTER(UIntPtr), lcLogConf: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), lcLogConf: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Parent(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Parent_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data(rdResDes: UIntPtr, Buffer: VoidPtr, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Ex(rdResDes: UIntPtr, Buffer: VoidPtr, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Size(pulSize: POINTER(UInt32), rdResDes: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Size_Ex(pulSize: POINTER(UInt32), rdResDes: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Sibling(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Sibling_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Version() -> UInt16: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Version_Ex(hMachine: IntPtr) -> UInt16: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Version_Available(wVersion: UInt16) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Version_Available_Ex(wVersion: UInt16, hMachine: IntPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Intersect_Range_List(rlhOld1: UIntPtr, rlhOld2: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Invert_Range_List(rlhOld: UIntPtr, rlhNew: UIntPtr, ullMaxValue: UInt64, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNodeA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNodeW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNode_ExA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNode_ExW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Merge_Range_List(rlhOld1: UIntPtr, rlhOld2: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Modify_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Modify_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Move_DevNode(dnFromDevInst: UInt32, dnToDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Move_DevNode_Ex(dnFromDevInst: UInt32, dnToDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Next_Range(preElement: POINTER(UIntPtr), pullStart: POINTER(UInt64), pullEnd: POINTER(UInt64), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ForResource: UInt32, pResourceID: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ForResource: UInt32, pResourceID: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_KeyA(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_KeyW(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_Key_ExA(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_Key_ExW(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_DevNode_Key(dnDevNode: UInt32, samDesired: UInt32, ulHardwareProfile: UInt32, Disposition: UInt32, phkDevice: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_DevNode_Key_Ex(dnDevNode: UInt32, samDesired: UInt32, ulHardwareProfile: UInt32, Disposition: UInt32, phkDevice: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_KeyA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_KeyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_Key_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_Key_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_KeyA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_KeyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_Key_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_Key_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Data(pData: VoidPtr, DataLen: UInt32, dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Data_Ex(pData: VoidPtr, DataLen: UInt32, dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Size(pulSize: POINTER(UInt32), dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Size_Ex(pulSize: POINTER(UInt32), dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Remove_SubTree(dnAncestor: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Remove_SubTree_Ex(dnAncestor: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTreeA(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTreeW(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTree_ExA(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTree_ExW(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_EjectA(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_Eject_ExA(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_EjectW(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_Eject_ExW(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Reenumerate_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Reenumerate_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_InterfaceA(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PSTR, pszDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_InterfaceW(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PWSTR, pszDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Interface_ExA(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PSTR, pszDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Interface_ExW(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PWSTR, pszDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Problem_Ex(dnDevInst: UInt32, ulProblem: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Problem(dnDevInst: UInt32, ulProblem: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_InterfaceA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_InterfaceW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_Interface_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_Interface_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Driver(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Driver_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Remove_SubTree(dnAncestor: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Remove_SubTree_Ex(dnAncestor: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_PropertyW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Property_ExW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_PropertyA(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_PropertyW(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_Property_ExA(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_Property_ExW(dnDevInst: UInt32, ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Device_Interface_PropertyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Device_Interface_Property_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Dock_Station_Present(pbPresent: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Dock_Station_Present_Ex(pbPresent: POINTER(Windows.Win32.Foundation.BOOL), hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Eject_PC() -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Eject_PC_Ex(hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_FlagsA(pDeviceID: Windows.Win32.Foundation.PSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_FlagsW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Flags_ExA(pDeviceID: Windows.Win32.Foundation.PSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Flags_ExW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Setup_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Setup_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Test_Range_Available(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Uninstall_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Uninstall_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Run_Detection(ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Run_Detection_Ex(ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof(ulHardwareProfile: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Ex(ulHardwareProfile: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Resource_Conflict_List(pclConflictList: POINTER(UIntPtr), dnDevInst: UInt32, ResourceID: UInt32, ResourceData: VoidPtr, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Resource_Conflict_Handle(clConflictList: UIntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_Count(clConflictList: UIntPtr, pulCount: POINTER(UInt32)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_DetailsA(clConflictList: UIntPtr, ulIndex: UInt32, pConflictDetails: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CONFLICT_DETAILS_A_head)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_DetailsW(clConflictList: UIntPtr, ulIndex: UInt32, pConflictDetails: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CONFLICT_DETAILS_W_head)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_PropertyW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_ExW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: POINTER(Byte), PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_Keys(ClassGUID: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_Keys_Ex(ClassGUID: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_PropertyW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Property_ExW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: POINTER(Byte), PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Registry_PropertyA(ClassGuid: POINTER(Guid), ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Registry_PropertyW(ClassGuid: POINTER(Guid), ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: VoidPtr, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Registry_PropertyA(ClassGuid: POINTER(Guid), ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Registry_PropertyW(ClassGuid: POINTER(Guid), ulProperty: UInt32, Buffer: VoidPtr, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CMP_WaitNoPendingInstallEvents(dwTimeout: UInt32) -> UInt32: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Notification(pFilter: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_head), pContext: VoidPtr, pCallback: Windows.Win32.Devices.DeviceAndDriverInstallation.PCM_NOTIFY_CALLBACK, pNotifyContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Notification(NotifyContext: Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_MapCrToWin32Err(CmReturnCode: Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET, DefaultErr: UInt32) -> UInt32: ...
@winfunctype('newdev.dll')
def UpdateDriverForPlugAndPlayDevicesA(hwndParent: Windows.Win32.Foundation.HWND, HardwareId: Windows.Win32.Foundation.PSTR, FullInfPath: Windows.Win32.Foundation.PSTR, InstallFlags: UInt32, bRebootRequired: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def UpdateDriverForPlugAndPlayDevicesW(hwndParent: Windows.Win32.Foundation.HWND, HardwareId: Windows.Win32.Foundation.PWSTR, FullInfPath: Windows.Win32.Foundation.PWSTR, InstallFlags: UInt32, bRebootRequired: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiInstallDevice(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head), Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiInstallDriverW(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PWSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiInstallDriverA(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDevice(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDriverW(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PWSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDriverA(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiShowUpdateDevice(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiRollbackDriver(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiShowUpdateDriver(hwndParent: Windows.Win32.Foundation.HWND, FilePath: Windows.Win32.Foundation.PWSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
class BUSNUMBER_DES(EasyCastStructure):
    BUSD_Count: UInt32
    BUSD_Type: UInt32
    BUSD_Flags: UInt32
    BUSD_Alloc_Base: UInt32
    BUSD_Alloc_End: UInt32
    _pack_ = 1
class BUSNUMBER_RANGE(EasyCastStructure):
    BUSR_Min: UInt32
    BUSR_Max: UInt32
    BUSR_nBusNumbers: UInt32
    BUSR_Flags: UInt32
    _pack_ = 1
class BUSNUMBER_RESOURCE(EasyCastStructure):
    BusNumber_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.BUSNUMBER_DES
    BusNumber_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.BUSNUMBER_RANGE * 1
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class CABINET_INFO_A(EasyCastStructure):
        CabinetPath: Windows.Win32.Foundation.PSTR
        CabinetFile: Windows.Win32.Foundation.PSTR
        DiskName: Windows.Win32.Foundation.PSTR
        SetId: UInt16
        CabinetNumber: UInt16
if ARCH in 'X86':
    class CABINET_INFO_A(EasyCastStructure):
        CabinetPath: Windows.Win32.Foundation.PSTR
        CabinetFile: Windows.Win32.Foundation.PSTR
        DiskName: Windows.Win32.Foundation.PSTR
        SetId: UInt16
        CabinetNumber: UInt16
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class CABINET_INFO_W(EasyCastStructure):
        CabinetPath: Windows.Win32.Foundation.PWSTR
        CabinetFile: Windows.Win32.Foundation.PWSTR
        DiskName: Windows.Win32.Foundation.PWSTR
        SetId: UInt16
        CabinetNumber: UInt16
if ARCH in 'X86':
    class CABINET_INFO_W(EasyCastStructure):
        CabinetPath: Windows.Win32.Foundation.PWSTR
        CabinetFile: Windows.Win32.Foundation.PWSTR
        DiskName: Windows.Win32.Foundation.PWSTR
        SetId: UInt16
        CabinetNumber: UInt16
        _pack_ = 1
CM_NOTIFY_ACTION = Int32
CM_NOTIFY_ACTION_DEVICEINTERFACEARRIVAL: CM_NOTIFY_ACTION = 0
CM_NOTIFY_ACTION_DEVICEINTERFACEREMOVAL: CM_NOTIFY_ACTION = 1
CM_NOTIFY_ACTION_DEVICEQUERYREMOVE: CM_NOTIFY_ACTION = 2
CM_NOTIFY_ACTION_DEVICEQUERYREMOVEFAILED: CM_NOTIFY_ACTION = 3
CM_NOTIFY_ACTION_DEVICEREMOVEPENDING: CM_NOTIFY_ACTION = 4
CM_NOTIFY_ACTION_DEVICEREMOVECOMPLETE: CM_NOTIFY_ACTION = 5
CM_NOTIFY_ACTION_DEVICECUSTOMEVENT: CM_NOTIFY_ACTION = 6
CM_NOTIFY_ACTION_DEVICEINSTANCEENUMERATED: CM_NOTIFY_ACTION = 7
CM_NOTIFY_ACTION_DEVICEINSTANCESTARTED: CM_NOTIFY_ACTION = 8
CM_NOTIFY_ACTION_DEVICEINSTANCEREMOVED: CM_NOTIFY_ACTION = 9
CM_NOTIFY_ACTION_MAX: CM_NOTIFY_ACTION = 10
class CM_NOTIFY_EVENT_DATA(EasyCastStructure):
    FilterType: Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE
    Reserved: UInt32
    u: _u_e__Union
    class _u_e__Union(EasyCastUnion):
        DeviceInterface: _DeviceInterface_e__Struct
        DeviceHandle: _DeviceHandle_e__Struct
        DeviceInstance: _DeviceInstance_e__Struct
        class _DeviceInterface_e__Struct(EasyCastStructure):
            ClassGuid: Guid
            SymbolicLink: Char * 1
        class _DeviceHandle_e__Struct(EasyCastStructure):
            EventGuid: Guid
            NameOffset: Int32
            DataSize: UInt32
            Data: Byte * 1
        class _DeviceInstance_e__Struct(EasyCastStructure):
            InstanceId: Char * 1
class CM_NOTIFY_FILTER(EasyCastStructure):
    cbSize: UInt32
    Flags: UInt32
    FilterType: Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE
    Reserved: UInt32
    u: _u_e__Union
    class _u_e__Union(EasyCastUnion):
        DeviceInterface: _DeviceInterface_e__Struct
        DeviceHandle: _DeviceHandle_e__Struct
        DeviceInstance: _DeviceInstance_e__Struct
        class _DeviceInterface_e__Struct(EasyCastStructure):
            ClassGuid: Guid
        class _DeviceHandle_e__Struct(EasyCastStructure):
            hTarget: Windows.Win32.Foundation.HANDLE
        class _DeviceInstance_e__Struct(EasyCastStructure):
            InstanceId: Char * 200
CM_NOTIFY_FILTER_TYPE = Int32
CM_NOTIFY_FILTER_TYPE_DEVICEINTERFACE: CM_NOTIFY_FILTER_TYPE = 0
CM_NOTIFY_FILTER_TYPE_DEVICEHANDLE: CM_NOTIFY_FILTER_TYPE = 1
CM_NOTIFY_FILTER_TYPE_DEVICEINSTANCE: CM_NOTIFY_FILTER_TYPE = 2
CM_NOTIFY_FILTER_TYPE_MAX: CM_NOTIFY_FILTER_TYPE = 3
if ARCH in 'X64,ARM64':
    class COINSTALLER_CONTEXT_DATA(EasyCastStructure):
        PostProcessing: Windows.Win32.Foundation.BOOL
        InstallResult: UInt32
        PrivateData: VoidPtr
if ARCH in 'X86':
    class COINSTALLER_CONTEXT_DATA(EasyCastStructure):
        PostProcessing: Windows.Win32.Foundation.BOOL
        InstallResult: UInt32
        PrivateData: VoidPtr
        _pack_ = 1
CONFIGRET = UInt32
CR_SUCCESS: CONFIGRET = 0
CR_DEFAULT: CONFIGRET = 1
CR_OUT_OF_MEMORY: CONFIGRET = 2
CR_INVALID_POINTER: CONFIGRET = 3
CR_INVALID_FLAG: CONFIGRET = 4
CR_INVALID_DEVNODE: CONFIGRET = 5
CR_INVALID_DEVINST: CONFIGRET = 5
CR_INVALID_RES_DES: CONFIGRET = 6
CR_INVALID_LOG_CONF: CONFIGRET = 7
CR_INVALID_ARBITRATOR: CONFIGRET = 8
CR_INVALID_NODELIST: CONFIGRET = 9
CR_DEVNODE_HAS_REQS: CONFIGRET = 10
CR_DEVINST_HAS_REQS: CONFIGRET = 10
CR_INVALID_RESOURCEID: CONFIGRET = 11
CR_DLVXD_NOT_FOUND: CONFIGRET = 12
CR_NO_SUCH_DEVNODE: CONFIGRET = 13
CR_NO_SUCH_DEVINST: CONFIGRET = 13
CR_NO_MORE_LOG_CONF: CONFIGRET = 14
CR_NO_MORE_RES_DES: CONFIGRET = 15
CR_ALREADY_SUCH_DEVNODE: CONFIGRET = 16
CR_ALREADY_SUCH_DEVINST: CONFIGRET = 16
CR_INVALID_RANGE_LIST: CONFIGRET = 17
CR_INVALID_RANGE: CONFIGRET = 18
CR_FAILURE: CONFIGRET = 19
CR_NO_SUCH_LOGICAL_DEV: CONFIGRET = 20
CR_CREATE_BLOCKED: CONFIGRET = 21
CR_NOT_SYSTEM_VM: CONFIGRET = 22
CR_REMOVE_VETOED: CONFIGRET = 23
CR_APM_VETOED: CONFIGRET = 24
CR_INVALID_LOAD_TYPE: CONFIGRET = 25
CR_BUFFER_SMALL: CONFIGRET = 26
CR_NO_ARBITRATOR: CONFIGRET = 27
CR_NO_REGISTRY_HANDLE: CONFIGRET = 28
CR_REGISTRY_ERROR: CONFIGRET = 29
CR_INVALID_DEVICE_ID: CONFIGRET = 30
CR_INVALID_DATA: CONFIGRET = 31
CR_INVALID_API: CONFIGRET = 32
CR_DEVLOADER_NOT_READY: CONFIGRET = 33
CR_NEED_RESTART: CONFIGRET = 34
CR_NO_MORE_HW_PROFILES: CONFIGRET = 35
CR_DEVICE_NOT_THERE: CONFIGRET = 36
CR_NO_SUCH_VALUE: CONFIGRET = 37
CR_WRONG_TYPE: CONFIGRET = 38
CR_INVALID_PRIORITY: CONFIGRET = 39
CR_NOT_DISABLEABLE: CONFIGRET = 40
CR_FREE_RESOURCES: CONFIGRET = 41
CR_QUERY_VETOED: CONFIGRET = 42
CR_CANT_SHARE_IRQ: CONFIGRET = 43
CR_NO_DEPENDENT: CONFIGRET = 44
CR_SAME_RESOURCES: CONFIGRET = 45
CR_NO_SUCH_REGISTRY_KEY: CONFIGRET = 46
CR_INVALID_MACHINENAME: CONFIGRET = 47
CR_REMOTE_COMM_FAILURE: CONFIGRET = 48
CR_MACHINE_UNAVAILABLE: CONFIGRET = 49
CR_NO_CM_SERVICES: CONFIGRET = 50
CR_ACCESS_DENIED: CONFIGRET = 51
CR_CALL_NOT_IMPLEMENTED: CONFIGRET = 52
CR_INVALID_PROPERTY: CONFIGRET = 53
CR_DEVICE_INTERFACE_ACTIVE: CONFIGRET = 54
CR_NO_SUCH_DEVICE_INTERFACE: CONFIGRET = 55
CR_INVALID_REFERENCE_STRING: CONFIGRET = 56
CR_INVALID_CONFLICT_LIST: CONFIGRET = 57
CR_INVALID_INDEX: CONFIGRET = 58
CR_INVALID_STRUCTURE_SIZE: CONFIGRET = 59
NUM_CR_RESULTS: CONFIGRET = 60
class CONFLICT_DETAILS_A(EasyCastStructure):
    CD_ulSize: UInt32
    CD_ulMask: UInt32
    CD_dnDevInst: UInt32
    CD_rdResDes: UIntPtr
    CD_ulFlags: UInt32
    CD_szDescription: Windows.Win32.Foundation.CHAR * 260
class CONFLICT_DETAILS_W(EasyCastStructure):
    CD_ulSize: UInt32
    CD_ulMask: UInt32
    CD_dnDevInst: UInt32
    CD_rdResDes: UIntPtr
    CD_ulFlags: UInt32
    CD_szDescription: Char * 260
class CONNECTION_DES(EasyCastStructure):
    COND_Type: UInt32
    COND_Flags: UInt32
    COND_Class: Byte
    COND_ClassType: Byte
    COND_Reserved1: Byte
    COND_Reserved2: Byte
    COND_Id: Int64
    _pack_ = 1
class CONNECTION_RESOURCE(EasyCastStructure):
    Connection_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.CONNECTION_DES
    _pack_ = 1
class CS_DES(EasyCastStructure):
    CSD_SignatureLength: UInt32
    CSD_LegacyDataOffset: UInt32
    CSD_LegacyDataSize: UInt32
    CSD_Flags: UInt32
    CSD_ClassGuid: Guid
    CSD_Signature: Byte * 1
    _pack_ = 1
class CS_RESOURCE(EasyCastStructure):
    CS_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.CS_DES
    _pack_ = 1
class DEVPRIVATE_DES(EasyCastStructure):
    PD_Count: UInt32
    PD_Type: UInt32
    PD_Data1: UInt32
    PD_Data2: UInt32
    PD_Data3: UInt32
    PD_Flags: UInt32
    _pack_ = 1
class DEVPRIVATE_RANGE(EasyCastStructure):
    PR_Data1: UInt32
    PR_Data2: UInt32
    PR_Data3: UInt32
    _pack_ = 1
class DEVPRIVATE_RESOURCE(EasyCastStructure):
    PRV_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.DEVPRIVATE_DES
    PRV_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.DEVPRIVATE_RANGE * 1
    _pack_ = 1
class DMA_DES(EasyCastStructure):
    DD_Count: UInt32
    DD_Type: UInt32
    DD_Flags: UInt32
    DD_Alloc_Chan: UInt32
    _pack_ = 1
class DMA_RANGE(EasyCastStructure):
    DR_Min: UInt32
    DR_Max: UInt32
    DR_Flags: UInt32
    _pack_ = 1
class DMA_RESOURCE(EasyCastStructure):
    DMA_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.DMA_DES
    DMA_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.DMA_RANGE * 1
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_A(EasyCastStructure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
if ARCH in 'X86':
    class FILEPATHS_A(EasyCastStructure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_SIGNERINFO_A(EasyCastStructure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PSTR
        Version: Windows.Win32.Foundation.PSTR
        CatalogFile: Windows.Win32.Foundation.PSTR
if ARCH in 'X86':
    class FILEPATHS_SIGNERINFO_A(EasyCastStructure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PSTR
        Version: Windows.Win32.Foundation.PSTR
        CatalogFile: Windows.Win32.Foundation.PSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_SIGNERINFO_W(EasyCastStructure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PWSTR
        Version: Windows.Win32.Foundation.PWSTR
        CatalogFile: Windows.Win32.Foundation.PWSTR
if ARCH in 'X86':
    class FILEPATHS_SIGNERINFO_W(EasyCastStructure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PWSTR
        Version: Windows.Win32.Foundation.PWSTR
        CatalogFile: Windows.Win32.Foundation.PWSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_W(EasyCastStructure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
if ARCH in 'X86':
    class FILEPATHS_W(EasyCastStructure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILE_IN_CABINET_INFO_A(EasyCastStructure):
        NameInCabinet: Windows.Win32.Foundation.PSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class FILE_IN_CABINET_INFO_A(EasyCastStructure):
        NameInCabinet: Windows.Win32.Foundation.PSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILE_IN_CABINET_INFO_W(EasyCastStructure):
        NameInCabinet: Windows.Win32.Foundation.PWSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Char * 260
if ARCH in 'X86':
    class FILE_IN_CABINET_INFO_W(EasyCastStructure):
        NameInCabinet: Windows.Win32.Foundation.PWSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Char * 260
        _pack_ = 1
HCMNOTIFICATION = IntPtr
HDEVINFO = IntPtr
class HWPROFILEINFO_A(EasyCastStructure):
    HWPI_ulHWProfile: UInt32
    HWPI_szFriendlyName: Windows.Win32.Foundation.CHAR * 80
    HWPI_dwFlags: UInt32
    _pack_ = 1
class HWPROFILEINFO_W(EasyCastStructure):
    HWPI_ulHWProfile: UInt32
    HWPI_szFriendlyName: Char * 80
    HWPI_dwFlags: UInt32
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class INFCONTEXT(EasyCastStructure):
        Inf: VoidPtr
        CurrentInf: VoidPtr
        Section: UInt32
        Line: UInt32
if ARCH in 'X86':
    class INFCONTEXT(EasyCastStructure):
        Inf: VoidPtr
        CurrentInf: VoidPtr
        Section: UInt32
        Line: UInt32
        _pack_ = 1
class IO_DES(EasyCastStructure):
    IOD_Count: UInt32
    IOD_Type: UInt32
    IOD_Alloc_Base: UInt64
    IOD_Alloc_End: UInt64
    IOD_DesFlags: UInt32
    _pack_ = 1
class IO_RANGE(EasyCastStructure):
    IOR_Align: UInt64
    IOR_nPorts: UInt32
    IOR_Min: UInt64
    IOR_Max: UInt64
    IOR_RangeFlags: UInt32
    IOR_Alias: UInt64
    _pack_ = 1
class IO_RESOURCE(EasyCastStructure):
    IO_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.IO_DES
    IO_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.IO_RANGE * 1
class IRQ_DES_32(EasyCastStructure):
    IRQD_Count: UInt32
    IRQD_Type: UInt32
    IRQD_Flags: UInt32
    IRQD_Alloc_Num: UInt32
    IRQD_Affinity: UInt32
    _pack_ = 1
class IRQ_DES_64(EasyCastStructure):
    IRQD_Count: UInt32
    IRQD_Type: UInt32
    IRQD_Flags: UInt32
    IRQD_Alloc_Num: UInt32
    IRQD_Affinity: UInt64
    _pack_ = 1
class IRQ_RANGE(EasyCastStructure):
    IRQR_Min: UInt32
    IRQR_Max: UInt32
    IRQR_Flags: UInt32
    _pack_ = 1
class IRQ_RESOURCE_32(EasyCastStructure):
    IRQ_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_DES_32
    IRQ_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_RANGE * 1
    _pack_ = 1
class IRQ_RESOURCE_64(EasyCastStructure):
    IRQ_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_DES_64
    IRQ_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_RANGE * 1
    _pack_ = 1
class MEM_DES(EasyCastStructure):
    MD_Count: UInt32
    MD_Type: UInt32
    MD_Alloc_Base: UInt64
    MD_Alloc_End: UInt64
    MD_Flags: UInt32
    MD_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_DES(EasyCastStructure):
    MLD_Count: UInt32
    MLD_Type: UInt32
    MLD_Alloc_Base: UInt64
    MLD_Alloc_End: UInt64
    MLD_Flags: UInt32
    MLD_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_RANGE(EasyCastStructure):
    MLR_Align: UInt64
    MLR_nBytes: UInt64
    MLR_Min: UInt64
    MLR_Max: UInt64
    MLR_Flags: UInt32
    MLR_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_RESOURCE(EasyCastStructure):
    MEM_LARGE_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_LARGE_DES
    MEM_LARGE_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_LARGE_RANGE * 1
    _pack_ = 1
class MEM_RANGE(EasyCastStructure):
    MR_Align: UInt64
    MR_nBytes: UInt32
    MR_Min: UInt64
    MR_Max: UInt64
    MR_Flags: UInt32
    MR_Reserved: UInt32
    _pack_ = 1
class MEM_RESOURCE(EasyCastStructure):
    MEM_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_DES
    MEM_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_RANGE * 1
    _pack_ = 1
class MFCARD_DES(EasyCastStructure):
    PMF_Count: UInt32
    PMF_Type: UInt32
    PMF_Flags: UInt32
    PMF_ConfigOptions: Byte
    PMF_IoResourceIndex: Byte
    PMF_Reserved: Byte * 2
    PMF_ConfigRegisterBase: UInt32
    _pack_ = 1
class MFCARD_RESOURCE(EasyCastStructure):
    MfCard_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.MFCARD_DES
    _pack_ = 1
OEM_SOURCE_MEDIA_TYPE = UInt32
SPOST_NONE: OEM_SOURCE_MEDIA_TYPE = 0
SPOST_PATH: OEM_SOURCE_MEDIA_TYPE = 1
SPOST_URL: OEM_SOURCE_MEDIA_TYPE = 2
class PCCARD_DES(EasyCastStructure):
    PCD_Count: UInt32
    PCD_Type: UInt32
    PCD_Flags: UInt32
    PCD_ConfigIndex: Byte
    PCD_Reserved: Byte * 3
    PCD_MemoryCardBase1: UInt32
    PCD_MemoryCardBase2: UInt32
    PCD_MemoryCardBase: UInt32 * 2
    PCD_MemoryFlags: UInt16 * 2
    PCD_IoFlags: Byte * 2
    _pack_ = 1
class PCCARD_RESOURCE(EasyCastStructure):
    PcCard_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.PCCARD_DES
    _pack_ = 1
@winfunctype_pointer
def PCM_NOTIFY_CALLBACK(hNotify: Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION, Context: VoidPtr, Action: Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION, EventData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_EVENT_DATA_head), EventDataSize: UInt32) -> UInt32: ...
@winfunctype_pointer
def PDETECT_PROGRESS_NOTIFY(ProgressNotifyParam: VoidPtr, DetectComplete: UInt32) -> Windows.Win32.Foundation.BOOL: ...
PNP_VETO_TYPE = Int32
PNP_VetoTypeUnknown: PNP_VETO_TYPE = 0
PNP_VetoLegacyDevice: PNP_VETO_TYPE = 1
PNP_VetoPendingClose: PNP_VETO_TYPE = 2
PNP_VetoWindowsApp: PNP_VETO_TYPE = 3
PNP_VetoWindowsService: PNP_VETO_TYPE = 4
PNP_VetoOutstandingOpen: PNP_VETO_TYPE = 5
PNP_VetoDevice: PNP_VETO_TYPE = 6
PNP_VetoDriver: PNP_VETO_TYPE = 7
PNP_VetoIllegalDeviceRequest: PNP_VETO_TYPE = 8
PNP_VetoInsufficientPower: PNP_VETO_TYPE = 9
PNP_VetoNonDisableable: PNP_VETO_TYPE = 10
PNP_VetoLegacyDriver: PNP_VETO_TYPE = 11
PNP_VetoInsufficientRights: PNP_VETO_TYPE = 12
PNP_VetoAlreadyRemoved: PNP_VETO_TYPE = 13
@winfunctype_pointer
def PSP_DETSIG_CMPPROC(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, NewDeviceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ExistingDeviceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), CompareContext: VoidPtr) -> UInt32: ...
@winfunctype_pointer
def PSP_FILE_CALLBACK_A(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype_pointer
def PSP_FILE_CALLBACK_W(Context: VoidPtr, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
SETUP_DI_BUILD_DRIVER_DRIVER_TYPE = UInt32
SPDIT_CLASSDRIVER: SETUP_DI_BUILD_DRIVER_DRIVER_TYPE = 1
SPDIT_COMPATDRIVER: SETUP_DI_BUILD_DRIVER_DRIVER_TYPE = 2
SETUP_FILE_OPERATION = UInt32
FILEOP_DELETE: SETUP_FILE_OPERATION = 2
FILEOP_COPY: SETUP_FILE_OPERATION = 0
if ARCH in 'X64,ARM64':
    class SOURCE_MEDIA_A(EasyCastStructure):
        Reserved: Windows.Win32.Foundation.PSTR
        Tagfile: Windows.Win32.Foundation.PSTR
        Description: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFile: Windows.Win32.Foundation.PSTR
        Flags: UInt32
if ARCH in 'X86':
    class SOURCE_MEDIA_A(EasyCastStructure):
        Reserved: Windows.Win32.Foundation.PSTR
        Tagfile: Windows.Win32.Foundation.PSTR
        Description: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFile: Windows.Win32.Foundation.PSTR
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SOURCE_MEDIA_W(EasyCastStructure):
        Reserved: Windows.Win32.Foundation.PWSTR
        Tagfile: Windows.Win32.Foundation.PWSTR
        Description: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFile: Windows.Win32.Foundation.PWSTR
        Flags: UInt32
if ARCH in 'X86':
    class SOURCE_MEDIA_W(EasyCastStructure):
        Reserved: Windows.Win32.Foundation.PWSTR
        Tagfile: Windows.Win32.Foundation.PWSTR
        Description: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFile: Windows.Win32.Foundation.PWSTR
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V1(EasyCastStructure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Reserved: UInt16
if ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V1(EasyCastStructure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Reserved: UInt16
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V2(EasyCastStructure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        class _Anonymous_e__Union(EasyCastUnion):
            Reserved: UInt16
            Flags: UInt16
if ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V2(EasyCastStructure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        _pack_ = 1
        class _Anonymous_e__Union(EasyCastUnion):
            Reserved: UInt16
            Flags: UInt16
            _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V3(EasyCastStructure):
        cbSize: UInt32
        Platform: UInt32
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        ProductType: Byte
        SuiteMask: UInt16
        BuildNumber: UInt32
        class _Anonymous_e__Union(EasyCastUnion):
            Reserved: UInt16
            Flags: UInt16
if ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V3(EasyCastStructure):
        cbSize: UInt32
        Platform: UInt32
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        ProductType: Byte
        SuiteMask: UInt16
        BuildNumber: UInt32
        _pack_ = 1
        class _Anonymous_e__Union(EasyCastUnion):
            Reserved: UInt16
            Flags: UInt16
            _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V1_A(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V1_A(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V1_W(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V1_W(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V2_A(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        ReinstallInstance: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V2_A(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        ReinstallInstance: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V2_W(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        ReinstallInstance: Char * 260
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V2_W(EasyCastStructure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        ReinstallInstance: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_CLASSIMAGELIST_DATA(EasyCastStructure):
        cbSize: UInt32
        ImageList: Windows.Win32.UI.Controls.HIMAGELIST
        Reserved: UIntPtr
if ARCH in 'X86':
    class SP_CLASSIMAGELIST_DATA(EasyCastStructure):
        cbSize: UInt32
        ImageList: Windows.Win32.UI.Controls.HIMAGELIST
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_CLASSINSTALL_HEADER(EasyCastStructure):
        cbSize: UInt32
        InstallFunction: UInt32
if ARCH in 'X86':
    class SP_CLASSINSTALL_HEADER(EasyCastStructure):
        cbSize: UInt32
        InstallFunction: UInt32
        _pack_ = 1
SP_COPY_STYLE = UInt32
SP_COPY_DELETESOURCE: SP_COPY_STYLE = 1
SP_COPY_REPLACEONLY: SP_COPY_STYLE = 2
SP_COPY_NEWER_OR_SAME: SP_COPY_STYLE = 4
SP_COPY_NEWER_ONLY: SP_COPY_STYLE = 65536
SP_COPY_NOOVERWRITE: SP_COPY_STYLE = 8
SP_COPY_NODECOMP: SP_COPY_STYLE = 16
SP_COPY_LANGUAGEAWARE: SP_COPY_STYLE = 32
SP_COPY_SOURCE_ABSOLUTE: SP_COPY_STYLE = 64
SP_COPY_SOURCEPATH_ABSOLUTE: SP_COPY_STYLE = 128
SP_COPY_FORCE_IN_USE: SP_COPY_STYLE = 512
SP_COPY_IN_USE_NEEDS_REBOOT: SP_COPY_STYLE = 256
SP_COPY_NOSKIP: SP_COPY_STYLE = 1024
SP_COPY_FORCE_NOOVERWRITE: SP_COPY_STYLE = 4096
SP_COPY_FORCE_NEWER: SP_COPY_STYLE = 8192
SP_COPY_WARNIFSKIP: SP_COPY_STYLE = 16384
SP_COPY_NOBROWSE: SP_COPY_STYLE = 32768
SP_COPY_NEWER: SP_COPY_STYLE = 4
SP_COPY_RESERVED: SP_COPY_STYLE = 131072
SP_COPY_OEMINF_CATALOG_ONLY: SP_COPY_STYLE = 262144
SP_COPY_REPLACE_BOOT_FILE: SP_COPY_STYLE = 524288
SP_COPY_NOPRUNE: SP_COPY_STYLE = 1048576
SP_COPY_OEM_F6_INF: SP_COPY_STYLE = 2097152
SP_COPY_ALREADYDECOMP: SP_COPY_STYLE = 4194304
SP_COPY_WINDOWS_SIGNED: SP_COPY_STYLE = 16777216
SP_COPY_PNPLOCKED: SP_COPY_STYLE = 33554432
SP_COPY_IN_USE_TRY_RENAME: SP_COPY_STYLE = 67108864
SP_COPY_INBOX_INF: SP_COPY_STYLE = 134217728
SP_COPY_HARDLINK: SP_COPY_STYLE = 268435456
if ARCH in 'X64,ARM64':
    class SP_DETECTDEVICE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        DetectProgressNotify: Windows.Win32.Devices.DeviceAndDriverInstallation.PDETECT_PROGRESS_NOTIFY
        ProgressNotifyParam: VoidPtr
if ARCH in 'X86':
    class SP_DETECTDEVICE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        DetectProgressNotify: Windows.Win32.Devices.DeviceAndDriverInstallation.PDETECT_PROGRESS_NOTIFY
        ProgressNotifyParam: VoidPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DATA(EasyCastStructure):
        cbSize: UInt32
        InterfaceClassGuid: Guid
        Flags: UInt32
        Reserved: UIntPtr
if ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DATA(EasyCastStructure):
        cbSize: UInt32
        InterfaceClassGuid: Guid
        Flags: UInt32
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_A(EasyCastStructure):
        cbSize: UInt32
        DevicePath: Windows.Win32.Foundation.CHAR * 1
if ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_A(EasyCastStructure):
        cbSize: UInt32
        DevicePath: Windows.Win32.Foundation.CHAR * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_W(EasyCastStructure):
        cbSize: UInt32
        DevicePath: Char * 1
if ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_W(EasyCastStructure):
        cbSize: UInt32
        DevicePath: Char * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_DATA(EasyCastStructure):
        cbSize: UInt32
        ClassGuid: Guid
        DevInst: UInt32
        Reserved: UIntPtr
if ARCH in 'X86':
    class SP_DEVINFO_DATA(EasyCastStructure):
        cbSize: UInt32
        ClassGuid: Guid
        DevInst: UInt32
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_LIST_DETAIL_DATA_A(EasyCastStructure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Windows.Win32.Foundation.CHAR * 263
if ARCH in 'X86':
    class SP_DEVINFO_LIST_DETAIL_DATA_A(EasyCastStructure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Windows.Win32.Foundation.CHAR * 263
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_LIST_DETAIL_DATA_W(EasyCastStructure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Char * 263
if ARCH in 'X86':
    class SP_DEVINFO_LIST_DETAIL_DATA_W(EasyCastStructure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Char * 263
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINSTALL_PARAMS_A(EasyCastStructure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_DEVINSTALL_PARAMS_A(EasyCastStructure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINSTALL_PARAMS_W(EasyCastStructure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Char * 260
if ARCH in 'X86':
    class SP_DEVINSTALL_PARAMS_W(EasyCastStructure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W
        InstallMsgHandlerContext: VoidPtr
        FileQueue: VoidPtr
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V1_A(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V1_A(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V1_W(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V1_W(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V2_A(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V2_A(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V2_W(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V2_W(EasyCastStructure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DETAIL_DATA_A(EasyCastStructure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Windows.Win32.Foundation.CHAR * 256
        InfFileName: Windows.Win32.Foundation.CHAR * 260
        DrvDescription: Windows.Win32.Foundation.CHAR * 256
        HardwareID: Windows.Win32.Foundation.CHAR * 1
if ARCH in 'X86':
    class SP_DRVINFO_DETAIL_DATA_A(EasyCastStructure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Windows.Win32.Foundation.CHAR * 256
        InfFileName: Windows.Win32.Foundation.CHAR * 260
        DrvDescription: Windows.Win32.Foundation.CHAR * 256
        HardwareID: Windows.Win32.Foundation.CHAR * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DETAIL_DATA_W(EasyCastStructure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Char * 256
        InfFileName: Char * 260
        DrvDescription: Char * 256
        HardwareID: Char * 1
if ARCH in 'X86':
    class SP_DRVINFO_DETAIL_DATA_W(EasyCastStructure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Char * 256
        InfFileName: Char * 260
        DrvDescription: Char * 256
        HardwareID: Char * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINSTALL_PARAMS(EasyCastStructure):
        cbSize: UInt32
        Rank: UInt32
        Flags: UInt32
        PrivateData: UIntPtr
        Reserved: UInt32
if ARCH in 'X86':
    class SP_DRVINSTALL_PARAMS(EasyCastStructure):
        cbSize: UInt32
        Rank: UInt32
        Flags: UInt32
        PrivateData: UIntPtr
        Reserved: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ENABLECLASS_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ClassGuid: Guid
        EnableMessage: UInt32
if ARCH in 'X86':
    class SP_ENABLECLASS_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ClassGuid: Guid
        EnableMessage: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_FILE_COPY_PARAMS_A(EasyCastStructure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFilename: Windows.Win32.Foundation.PSTR
        SourceDescription: Windows.Win32.Foundation.PSTR
        SourceTagfile: Windows.Win32.Foundation.PSTR
        TargetDirectory: Windows.Win32.Foundation.PSTR
        TargetFilename: Windows.Win32.Foundation.PSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: Windows.Win32.Foundation.PSTR
if ARCH in 'X86':
    class SP_FILE_COPY_PARAMS_A(EasyCastStructure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFilename: Windows.Win32.Foundation.PSTR
        SourceDescription: Windows.Win32.Foundation.PSTR
        SourceTagfile: Windows.Win32.Foundation.PSTR
        TargetDirectory: Windows.Win32.Foundation.PSTR
        TargetFilename: Windows.Win32.Foundation.PSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: Windows.Win32.Foundation.PSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_FILE_COPY_PARAMS_W(EasyCastStructure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFilename: Windows.Win32.Foundation.PWSTR
        SourceDescription: Windows.Win32.Foundation.PWSTR
        SourceTagfile: Windows.Win32.Foundation.PWSTR
        TargetDirectory: Windows.Win32.Foundation.PWSTR
        TargetFilename: Windows.Win32.Foundation.PWSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: Windows.Win32.Foundation.PWSTR
if ARCH in 'X86':
    class SP_FILE_COPY_PARAMS_W(EasyCastStructure):
        cbSize: UInt32
        QueueHandle: VoidPtr
        SourceRootPath: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFilename: Windows.Win32.Foundation.PWSTR
        SourceDescription: Windows.Win32.Foundation.PWSTR
        SourceTagfile: Windows.Win32.Foundation.PWSTR
        TargetDirectory: Windows.Win32.Foundation.PWSTR
        TargetFilename: Windows.Win32.Foundation.PWSTR
        CopyStyle: UInt32
        LayoutInf: VoidPtr
        SecurityDescriptor: Windows.Win32.Foundation.PWSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_INFORMATION(EasyCastStructure):
        InfStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_STYLE
        InfCount: UInt32
        VersionData: Byte * 1
if ARCH in 'X86':
    class SP_INF_INFORMATION(EasyCastStructure):
        InfStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_STYLE
        InfCount: UInt32
        VersionData: Byte * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V1_A(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V1_A(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V1_W(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V1_W(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V2_A(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
        SignerScore: UInt32
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V2_A(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
        SignerScore: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V2_W(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        SignerScore: UInt32
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V2_W(EasyCastStructure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        SignerScore: UInt32
        _pack_ = 1
SP_INF_STYLE = UInt32
INF_STYLE_NONE: SP_INF_STYLE = 0
INF_STYLE_OLDNT: SP_INF_STYLE = 1
INF_STYLE_WIN4: SP_INF_STYLE = 2
if ARCH in 'X64,ARM64':
    class SP_INSTALLWIZARD_DATA(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        DynamicPageFlags: UInt32
        PrivateFlags: UInt32
        PrivateData: Windows.Win32.Foundation.LPARAM
        hwndWizardDlg: Windows.Win32.Foundation.HWND
if ARCH in 'X86':
    class SP_INSTALLWIZARD_DATA(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        DynamicPageFlags: UInt32
        PrivateFlags: UInt32
        PrivateData: Windows.Win32.Foundation.LPARAM
        hwndWizardDlg: Windows.Win32.Foundation.HWND
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_NEWDEVICEWIZARD_DATA(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        hwndWizardDlg: Windows.Win32.Foundation.HWND
if ARCH in 'X86':
    class SP_NEWDEVICEWIZARD_DATA(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        hwndWizardDlg: Windows.Win32.Foundation.HWND
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ORIGINAL_FILE_INFO_A(EasyCastStructure):
        cbSize: UInt32
        OriginalInfName: Windows.Win32.Foundation.CHAR * 260
        OriginalCatalogName: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_ORIGINAL_FILE_INFO_A(EasyCastStructure):
        cbSize: UInt32
        OriginalInfName: Windows.Win32.Foundation.CHAR * 260
        OriginalCatalogName: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ORIGINAL_FILE_INFO_W(EasyCastStructure):
        cbSize: UInt32
        OriginalInfName: Char * 260
        OriginalCatalogName: Char * 260
if ARCH in 'X86':
    class SP_ORIGINAL_FILE_INFO_W(EasyCastStructure):
        cbSize: UInt32
        OriginalInfName: Char * 260
        OriginalCatalogName: Char * 260
        _pack_ = 1
class SP_POWERMESSAGEWAKE_PARAMS_A(EasyCastStructure):
    ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    PowerMessageWake: Windows.Win32.Foundation.CHAR * 512
if ARCH in 'X64,ARM64':
    class SP_POWERMESSAGEWAKE_PARAMS_W(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        PowerMessageWake: Char * 512
if ARCH in 'X86':
    class SP_POWERMESSAGEWAKE_PARAMS_W(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        PowerMessageWake: Char * 512
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_PROPCHANGE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        StateChange: UInt32
        Scope: UInt32
        HwProfile: UInt32
if ARCH in 'X86':
    class SP_PROPCHANGE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        StateChange: UInt32
        Scope: UInt32
        HwProfile: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_PROPSHEETPAGE_REQUEST(EasyCastStructure):
        cbSize: UInt32
        PageRequested: UInt32
        DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO
        DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)
if ARCH in 'X86':
    class SP_PROPSHEETPAGE_REQUEST(EasyCastStructure):
        cbSize: UInt32
        PageRequested: UInt32
        DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO
        DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REGISTER_CONTROL_STATUSA(EasyCastStructure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        FailureCode: UInt32
if ARCH in 'X86':
    class SP_REGISTER_CONTROL_STATUSA(EasyCastStructure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        FailureCode: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REGISTER_CONTROL_STATUSW(EasyCastStructure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        FailureCode: UInt32
if ARCH in 'X86':
    class SP_REGISTER_CONTROL_STATUSW(EasyCastStructure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        FailureCode: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REMOVEDEVICE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
if ARCH in 'X86':
    class SP_REMOVEDEVICE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
        _pack_ = 1
class SP_SELECTDEVICE_PARAMS_A(EasyCastStructure):
    ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    Title: Windows.Win32.Foundation.CHAR * 60
    Instructions: Windows.Win32.Foundation.CHAR * 256
    ListLabel: Windows.Win32.Foundation.CHAR * 30
    SubTitle: Windows.Win32.Foundation.CHAR * 256
    Reserved: Byte * 2
if ARCH in 'X64,ARM64':
    class SP_SELECTDEVICE_PARAMS_W(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Title: Char * 60
        Instructions: Char * 256
        ListLabel: Char * 30
        SubTitle: Char * 256
if ARCH in 'X86':
    class SP_SELECTDEVICE_PARAMS_W(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Title: Char * 60
        Instructions: Char * 256
        ListLabel: Char * 30
        SubTitle: Char * 256
        _pack_ = 1
class SP_TROUBLESHOOTER_PARAMS_A(EasyCastStructure):
    ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    ChmFile: Windows.Win32.Foundation.CHAR * 260
    HtmlTroubleShooter: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X64,ARM64':
    class SP_TROUBLESHOOTER_PARAMS_W(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ChmFile: Char * 260
        HtmlTroubleShooter: Char * 260
if ARCH in 'X86':
    class SP_TROUBLESHOOTER_PARAMS_W(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ChmFile: Char * 260
        HtmlTroubleShooter: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_UNREMOVEDEVICE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
if ARCH in 'X86':
    class SP_UNREMOVEDEVICE_PARAMS(EasyCastStructure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
        _pack_ = 1
SetupFileLogInfo = Int32
SetupFileLogInfo_SetupFileLogSourceFilename: SetupFileLogInfo = 0
SetupFileLogInfo_SetupFileLogChecksum: SetupFileLogInfo = 1
SetupFileLogInfo_SetupFileLogDiskTagfile: SetupFileLogInfo = 2
SetupFileLogInfo_SetupFileLogDiskDescription: SetupFileLogInfo = 3
SetupFileLogInfo_SetupFileLogOtherInfo: SetupFileLogInfo = 4
SetupFileLogInfo_SetupFileLogMax: SetupFileLogInfo = 5
make_head(_module, 'BUSNUMBER_DES')
make_head(_module, 'BUSNUMBER_RANGE')
make_head(_module, 'BUSNUMBER_RESOURCE')
if ARCH in 'X64,ARM64':
    make_head(_module, 'CABINET_INFO_A')
if ARCH in 'X86':
    make_head(_module, 'CABINET_INFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'CABINET_INFO_W')
if ARCH in 'X86':
    make_head(_module, 'CABINET_INFO_W')
make_head(_module, 'CM_NOTIFY_EVENT_DATA')
make_head(_module, 'CM_NOTIFY_FILTER')
if ARCH in 'X64,ARM64':
    make_head(_module, 'COINSTALLER_CONTEXT_DATA')
if ARCH in 'X86':
    make_head(_module, 'COINSTALLER_CONTEXT_DATA')
make_head(_module, 'CONFLICT_DETAILS_A')
make_head(_module, 'CONFLICT_DETAILS_W')
make_head(_module, 'CONNECTION_DES')
make_head(_module, 'CONNECTION_RESOURCE')
make_head(_module, 'CS_DES')
make_head(_module, 'CS_RESOURCE')
make_head(_module, 'DEVPRIVATE_DES')
make_head(_module, 'DEVPRIVATE_RANGE')
make_head(_module, 'DEVPRIVATE_RESOURCE')
make_head(_module, 'DMA_DES')
make_head(_module, 'DMA_RANGE')
make_head(_module, 'DMA_RESOURCE')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_A')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_SIGNERINFO_A')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_SIGNERINFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_SIGNERINFO_W')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_SIGNERINFO_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_W')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILE_IN_CABINET_INFO_A')
if ARCH in 'X86':
    make_head(_module, 'FILE_IN_CABINET_INFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILE_IN_CABINET_INFO_W')
if ARCH in 'X86':
    make_head(_module, 'FILE_IN_CABINET_INFO_W')
make_head(_module, 'HWPROFILEINFO_A')
make_head(_module, 'HWPROFILEINFO_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'INFCONTEXT')
if ARCH in 'X86':
    make_head(_module, 'INFCONTEXT')
make_head(_module, 'IO_DES')
make_head(_module, 'IO_RANGE')
make_head(_module, 'IO_RESOURCE')
make_head(_module, 'IRQ_DES_32')
make_head(_module, 'IRQ_DES_64')
make_head(_module, 'IRQ_RANGE')
make_head(_module, 'IRQ_RESOURCE_32')
make_head(_module, 'IRQ_RESOURCE_64')
make_head(_module, 'MEM_DES')
make_head(_module, 'MEM_LARGE_DES')
make_head(_module, 'MEM_LARGE_RANGE')
make_head(_module, 'MEM_LARGE_RESOURCE')
make_head(_module, 'MEM_RANGE')
make_head(_module, 'MEM_RESOURCE')
make_head(_module, 'MFCARD_DES')
make_head(_module, 'MFCARD_RESOURCE')
make_head(_module, 'PCCARD_DES')
make_head(_module, 'PCCARD_RESOURCE')
make_head(_module, 'PCM_NOTIFY_CALLBACK')
make_head(_module, 'PDETECT_PROGRESS_NOTIFY')
make_head(_module, 'PSP_DETSIG_CMPPROC')
make_head(_module, 'PSP_FILE_CALLBACK_A')
make_head(_module, 'PSP_FILE_CALLBACK_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SOURCE_MEDIA_A')
if ARCH in 'X86':
    make_head(_module, 'SOURCE_MEDIA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SOURCE_MEDIA_W')
if ARCH in 'X86':
    make_head(_module, 'SOURCE_MEDIA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V1')
if ARCH in 'X86':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V1')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V2')
if ARCH in 'X86':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V2')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V3')
if ARCH in 'X86':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V3')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_A')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_W')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_A')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_W')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_CLASSIMAGELIST_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_CLASSIMAGELIST_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_CLASSINSTALL_HEADER')
if ARCH in 'X86':
    make_head(_module, 'SP_CLASSINSTALL_HEADER')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DETECTDEVICE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_DETECTDEVICE_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVICE_INTERFACE_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVICE_INTERFACE_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINFO_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINFO_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V1_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V1_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V1_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V1_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V2_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V2_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V2_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V2_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINSTALL_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINSTALL_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ENABLECLASS_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_ENABLECLASS_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_FILE_COPY_PARAMS_A')
if ARCH in 'X86':
    make_head(_module, 'SP_FILE_COPY_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_FILE_COPY_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_FILE_COPY_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_INFORMATION')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_INFORMATION')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_A')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_W')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_A')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_W')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INSTALLWIZARD_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_INSTALLWIZARD_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_NEWDEVICEWIZARD_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_NEWDEVICEWIZARD_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_A')
if ARCH in 'X86':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_W')
if ARCH in 'X86':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_W')
make_head(_module, 'SP_POWERMESSAGEWAKE_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_POWERMESSAGEWAKE_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_POWERMESSAGEWAKE_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_PROPCHANGE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_PROPCHANGE_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_PROPSHEETPAGE_REQUEST')
if ARCH in 'X86':
    make_head(_module, 'SP_PROPSHEETPAGE_REQUEST')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSA')
if ARCH in 'X86':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSW')
if ARCH in 'X86':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSW')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_REMOVEDEVICE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_REMOVEDEVICE_PARAMS')
make_head(_module, 'SP_SELECTDEVICE_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_SELECTDEVICE_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_SELECTDEVICE_PARAMS_W')
make_head(_module, 'SP_TROUBLESHOOTER_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_TROUBLESHOOTER_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_TROUBLESHOOTER_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_UNREMOVEDEVICE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_UNREMOVEDEVICE_PARAMS')
