from __future__ import annotations
from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from Windows.base import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head
import Windows.Win32.Data.HtmlHelp
import Windows.Win32.Devices.DeviceAndDriverInstallation
import Windows.Win32.Devices.Properties
import Windows.Win32.Foundation
import Windows.Win32.Graphics.Gdi
import Windows.Win32.System.Diagnostics.Debug
import Windows.Win32.System.Registry
import Windows.Win32.UI.Controls
import Windows.Win32.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        if name in _arch_optional:
            return None
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
def __dir__():
    return __all__
CM_PROB_NOT_CONFIGURED: UInt32 = 1
CM_PROB_DEVLOADER_FAILED: UInt32 = 2
CM_PROB_OUT_OF_MEMORY: UInt32 = 3
CM_PROB_ENTRY_IS_WRONG_TYPE: UInt32 = 4
CM_PROB_LACKED_ARBITRATOR: UInt32 = 5
CM_PROB_BOOT_CONFIG_CONFLICT: UInt32 = 6
CM_PROB_FAILED_FILTER: UInt32 = 7
CM_PROB_DEVLOADER_NOT_FOUND: UInt32 = 8
CM_PROB_INVALID_DATA: UInt32 = 9
CM_PROB_FAILED_START: UInt32 = 10
CM_PROB_LIAR: UInt32 = 11
CM_PROB_NORMAL_CONFLICT: UInt32 = 12
CM_PROB_NOT_VERIFIED: UInt32 = 13
CM_PROB_NEED_RESTART: UInt32 = 14
CM_PROB_REENUMERATION: UInt32 = 15
CM_PROB_PARTIAL_LOG_CONF: UInt32 = 16
CM_PROB_UNKNOWN_RESOURCE: UInt32 = 17
CM_PROB_REINSTALL: UInt32 = 18
CM_PROB_REGISTRY: UInt32 = 19
CM_PROB_VXDLDR: UInt32 = 20
CM_PROB_WILL_BE_REMOVED: UInt32 = 21
CM_PROB_DISABLED: UInt32 = 22
CM_PROB_DEVLOADER_NOT_READY: UInt32 = 23
CM_PROB_DEVICE_NOT_THERE: UInt32 = 24
CM_PROB_MOVED: UInt32 = 25
CM_PROB_TOO_EARLY: UInt32 = 26
CM_PROB_NO_VALID_LOG_CONF: UInt32 = 27
CM_PROB_FAILED_INSTALL: UInt32 = 28
CM_PROB_HARDWARE_DISABLED: UInt32 = 29
CM_PROB_CANT_SHARE_IRQ: UInt32 = 30
CM_PROB_FAILED_ADD: UInt32 = 31
CM_PROB_DISABLED_SERVICE: UInt32 = 32
CM_PROB_TRANSLATION_FAILED: UInt32 = 33
CM_PROB_NO_SOFTCONFIG: UInt32 = 34
CM_PROB_BIOS_TABLE: UInt32 = 35
CM_PROB_IRQ_TRANSLATION_FAILED: UInt32 = 36
CM_PROB_FAILED_DRIVER_ENTRY: UInt32 = 37
CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD: UInt32 = 38
CM_PROB_DRIVER_FAILED_LOAD: UInt32 = 39
CM_PROB_DRIVER_SERVICE_KEY_INVALID: UInt32 = 40
CM_PROB_LEGACY_SERVICE_NO_DEVICES: UInt32 = 41
CM_PROB_DUPLICATE_DEVICE: UInt32 = 42
CM_PROB_FAILED_POST_START: UInt32 = 43
CM_PROB_HALTED: UInt32 = 44
CM_PROB_PHANTOM: UInt32 = 45
CM_PROB_SYSTEM_SHUTDOWN: UInt32 = 46
CM_PROB_HELD_FOR_EJECT: UInt32 = 47
CM_PROB_DRIVER_BLOCKED: UInt32 = 48
CM_PROB_REGISTRY_TOO_LARGE: UInt32 = 49
CM_PROB_SETPROPERTIES_FAILED: UInt32 = 50
CM_PROB_WAITING_ON_DEPENDENCY: UInt32 = 51
CM_PROB_UNSIGNED_DRIVER: UInt32 = 52
CM_PROB_USED_BY_DEBUGGER: UInt32 = 53
CM_PROB_DEVICE_RESET: UInt32 = 54
CM_PROB_CONSOLE_LOCKED: UInt32 = 55
CM_PROB_NEED_CLASS_CONFIG: UInt32 = 56
CM_PROB_GUEST_ASSIGNMENT_FAILED: UInt32 = 57
NUM_CM_PROB_V1: UInt32 = 37
NUM_CM_PROB_V2: UInt32 = 50
NUM_CM_PROB_V3: UInt32 = 51
NUM_CM_PROB_V4: UInt32 = 52
NUM_CM_PROB_V5: UInt32 = 53
NUM_CM_PROB_V6: UInt32 = 54
NUM_CM_PROB_V7: UInt32 = 55
NUM_CM_PROB_V8: UInt32 = 57
NUM_CM_PROB_V9: UInt32 = 58
NUM_CM_PROB: UInt32 = 58
DN_ROOT_ENUMERATED: UInt32 = 1
DN_DRIVER_LOADED: UInt32 = 2
DN_ENUM_LOADED: UInt32 = 4
DN_STARTED: UInt32 = 8
DN_MANUAL: UInt32 = 16
DN_NEED_TO_ENUM: UInt32 = 32
DN_NOT_FIRST_TIME: UInt32 = 64
DN_HARDWARE_ENUM: UInt32 = 128
DN_LIAR: UInt32 = 256
DN_HAS_MARK: UInt32 = 512
DN_HAS_PROBLEM: UInt32 = 1024
DN_FILTERED: UInt32 = 2048
DN_MOVED: UInt32 = 4096
DN_DISABLEABLE: UInt32 = 8192
DN_REMOVABLE: UInt32 = 16384
DN_PRIVATE_PROBLEM: UInt32 = 32768
DN_MF_PARENT: UInt32 = 65536
DN_MF_CHILD: UInt32 = 131072
DN_WILL_BE_REMOVED: UInt32 = 262144
DN_NOT_FIRST_TIMEE: UInt32 = 524288
DN_STOP_FREE_RES: UInt32 = 1048576
DN_REBAL_CANDIDATE: UInt32 = 2097152
DN_BAD_PARTIAL: UInt32 = 4194304
DN_NT_ENUMERATOR: UInt32 = 8388608
DN_NT_DRIVER: UInt32 = 16777216
DN_NEEDS_LOCKING: UInt32 = 33554432
DN_ARM_WAKEUP: UInt32 = 67108864
DN_APM_ENUMERATOR: UInt32 = 134217728
DN_APM_DRIVER: UInt32 = 268435456
DN_SILENT_INSTALL: UInt32 = 536870912
DN_NO_SHOW_IN_DM: UInt32 = 1073741824
DN_BOOT_LOG_PROB: UInt32 = 2147483648
DN_NEED_RESTART: UInt32 = 256
DN_DRIVER_BLOCKED: UInt32 = 64
DN_LEGACY_DRIVER: UInt32 = 4096
DN_CHILD_WITH_INVALID_ID: UInt32 = 512
DN_DEVICE_DISCONNECTED: UInt32 = 33554432
DN_QUERY_REMOVE_PENDING: UInt32 = 65536
DN_QUERY_REMOVE_ACTIVE: UInt32 = 131072
LCPRI_FORCECONFIG: UInt32 = 0
LCPRI_BOOTCONFIG: UInt32 = 1
LCPRI_DESIRED: UInt32 = 8192
LCPRI_NORMAL: UInt32 = 12288
LCPRI_LASTBESTCONFIG: UInt32 = 16383
LCPRI_SUBOPTIMAL: UInt32 = 20480
LCPRI_LASTSOFTCONFIG: UInt32 = 32767
LCPRI_RESTART: UInt32 = 32768
LCPRI_REBOOT: UInt32 = 36864
LCPRI_POWEROFF: UInt32 = 40960
LCPRI_HARDRECONFIG: UInt32 = 49152
LCPRI_HARDWIRED: UInt32 = 57344
LCPRI_IMPOSSIBLE: UInt32 = 61440
LCPRI_DISABLED: UInt32 = 65535
MAX_LCPRI: UInt32 = 65535
CM_DEVICE_PANEL_SIDE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_SIDE_TOP: UInt32 = 1
CM_DEVICE_PANEL_SIDE_BOTTOM: UInt32 = 2
CM_DEVICE_PANEL_SIDE_LEFT: UInt32 = 3
CM_DEVICE_PANEL_SIDE_RIGHT: UInt32 = 4
CM_DEVICE_PANEL_SIDE_FRONT: UInt32 = 5
CM_DEVICE_PANEL_SIDE_BACK: UInt32 = 6
CM_DEVICE_PANEL_EDGE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_EDGE_TOP: UInt32 = 1
CM_DEVICE_PANEL_EDGE_BOTTOM: UInt32 = 2
CM_DEVICE_PANEL_EDGE_LEFT: UInt32 = 3
CM_DEVICE_PANEL_EDGE_RIGHT: UInt32 = 4
CM_DEVICE_PANEL_SHAPE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_SHAPE_RECTANGLE: UInt32 = 1
CM_DEVICE_PANEL_SHAPE_OVAL: UInt32 = 2
CM_DEVICE_PANEL_ORIENTATION_HORIZONTAL: UInt32 = 0
CM_DEVICE_PANEL_ORIENTATION_VERTICAL: UInt32 = 1
CM_DEVICE_PANEL_JOINT_TYPE_UNKNOWN: UInt32 = 0
CM_DEVICE_PANEL_JOINT_TYPE_PLANAR: UInt32 = 1
CM_DEVICE_PANEL_JOINT_TYPE_HINGE: UInt32 = 2
CM_DEVICE_PANEL_JOINT_TYPE_PIVOT: UInt32 = 3
CM_DEVICE_PANEL_JOINT_TYPE_SWIVEL: UInt32 = 4
GUID_DEVCLASS_1394: Guid = Guid('6bdd1fc1-810f-11d0-be-c7-08-00-2b-e2-09-2f')
GUID_DEVCLASS_1394DEBUG: Guid = Guid('66f250d6-7801-4a64-b1-39-ee-a8-0a-45-0b-24')
GUID_DEVCLASS_61883: Guid = Guid('7ebefbc0-3200-11d2-b4-c2-00-a0-c9-69-7d-07')
GUID_DEVCLASS_ADAPTER: Guid = Guid('4d36e964-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_APMSUPPORT: Guid = Guid('d45b1c18-c8fa-11d1-9f-77-00-00-f8-05-f5-30')
GUID_DEVCLASS_AVC: Guid = Guid('c06ff265-ae09-48f0-81-2c-16-75-3d-7c-ba-83')
GUID_DEVCLASS_BATTERY: Guid = Guid('72631e54-78a4-11d0-bc-f7-00-aa-00-b7-b3-2a')
GUID_DEVCLASS_BIOMETRIC: Guid = Guid('53d29ef7-377c-4d14-86-4b-eb-3a-85-76-93-59')
GUID_DEVCLASS_BLUETOOTH: Guid = Guid('e0cbf06c-cd8b-4647-bb-8a-26-3b-43-f0-f9-74')
GUID_DEVCLASS_CAMERA: Guid = Guid('ca3e7ab9-b4c3-4ae6-82-51-57-9e-f9-33-89-0f')
GUID_DEVCLASS_CDROM: Guid = Guid('4d36e965-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_COMPUTEACCELERATOR: Guid = Guid('f01a9d53-3ff6-48d2-9f-97-c8-a7-00-4b-e1-0c')
GUID_DEVCLASS_COMPUTER: Guid = Guid('4d36e966-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_DECODER: Guid = Guid('6bdd1fc2-810f-11d0-be-c7-08-00-2b-e2-09-2f')
GUID_DEVCLASS_DISKDRIVE: Guid = Guid('4d36e967-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_DISPLAY: Guid = Guid('4d36e968-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_DOT4: Guid = Guid('48721b56-6795-11d2-b1-a8-00-80-c7-2e-74-a2')
GUID_DEVCLASS_DOT4PRINT: Guid = Guid('49ce6ac8-6f86-11d2-b1-e5-00-80-c7-2e-74-a2')
GUID_DEVCLASS_EHSTORAGESILO: Guid = Guid('9da2b80f-f89f-4a49-a5-c2-51-1b-08-5b-9e-8a')
GUID_DEVCLASS_ENUM1394: Guid = Guid('c459df55-db08-11d1-b0-09-00-a0-c9-08-1f-f6')
GUID_DEVCLASS_EXTENSION: Guid = Guid('e2f84ce7-8efa-411c-aa-69-97-45-4c-a4-cb-57')
GUID_DEVCLASS_FDC: Guid = Guid('4d36e969-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_FIRMWARE: Guid = Guid('f2e7dd72-6468-4e36-b6-f1-64-88-f4-2c-1b-52')
GUID_DEVCLASS_FLOPPYDISK: Guid = Guid('4d36e980-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_GPS: Guid = Guid('6bdd1fc3-810f-11d0-be-c7-08-00-2b-e2-09-2f')
GUID_DEVCLASS_HDC: Guid = Guid('4d36e96a-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_HIDCLASS: Guid = Guid('745a17a0-74d3-11d0-b6-fe-00-a0-c9-0f-57-da')
GUID_DEVCLASS_HOLOGRAPHIC: Guid = Guid('d612553d-06b1-49ca-89-38-e3-9e-f8-0e-b1-6f')
GUID_DEVCLASS_IMAGE: Guid = Guid('6bdd1fc6-810f-11d0-be-c7-08-00-2b-e2-09-2f')
GUID_DEVCLASS_INFINIBAND: Guid = Guid('30ef7132-d858-4a0c-ac-24-b9-02-8a-5c-ca-3f')
GUID_DEVCLASS_INFRARED: Guid = Guid('6bdd1fc5-810f-11d0-be-c7-08-00-2b-e2-09-2f')
GUID_DEVCLASS_KEYBOARD: Guid = Guid('4d36e96b-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_LEGACYDRIVER: Guid = Guid('8ecc055d-047f-11d1-a5-37-00-00-f8-75-3e-d1')
GUID_DEVCLASS_MEDIA: Guid = Guid('4d36e96c-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_MEDIUM_CHANGER: Guid = Guid('ce5939ae-ebde-11d0-b1-81-00-00-f8-75-3e-c4')
GUID_DEVCLASS_MEMORY: Guid = Guid('5099944a-f6b9-4057-a0-56-8c-55-02-28-54-4c')
GUID_DEVCLASS_MODEM: Guid = Guid('4d36e96d-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_MONITOR: Guid = Guid('4d36e96e-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_MOUSE: Guid = Guid('4d36e96f-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_MTD: Guid = Guid('4d36e970-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_MULTIFUNCTION: Guid = Guid('4d36e971-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_MULTIPORTSERIAL: Guid = Guid('50906cb8-ba12-11d1-bf-5d-00-00-f8-05-f5-30')
GUID_DEVCLASS_NET: Guid = Guid('4d36e972-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_NETCLIENT: Guid = Guid('4d36e973-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_NETDRIVER: Guid = Guid('87ef9ad1-8f70-49ee-b2-15-ab-1f-ca-dc-be-3c')
GUID_DEVCLASS_NETSERVICE: Guid = Guid('4d36e974-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_NETTRANS: Guid = Guid('4d36e975-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_NETUIO: Guid = Guid('78912bc1-cb8e-4b28-a3-29-f3-22-eb-ad-be-0f')
GUID_DEVCLASS_NODRIVER: Guid = Guid('4d36e976-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_PCMCIA: Guid = Guid('4d36e977-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_PNPPRINTERS: Guid = Guid('4658ee7e-f050-11d1-b6-bd-00-c0-4f-a3-72-a7')
GUID_DEVCLASS_PORTS: Guid = Guid('4d36e978-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_PRINTER: Guid = Guid('4d36e979-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_PRINTERUPGRADE: Guid = Guid('4d36e97a-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_PRINTQUEUE: Guid = Guid('1ed2bbf9-11f0-4084-b2-1f-ad-83-a8-e6-dc-dc')
GUID_DEVCLASS_PROCESSOR: Guid = Guid('50127dc3-0f36-415e-a6-cc-4c-b3-be-91-0b-65')
GUID_DEVCLASS_SBP2: Guid = Guid('d48179be-ec20-11d1-b6-b8-00-c0-4f-a3-72-a7')
GUID_DEVCLASS_SCMDISK: Guid = Guid('53966cb1-4d46-4166-bf-23-c5-22-40-3c-d4-95')
GUID_DEVCLASS_SCMVOLUME: Guid = Guid('53ccb149-e543-4c84-b6-e0-bc-e4-f6-b7-e8-06')
GUID_DEVCLASS_SCSIADAPTER: Guid = Guid('4d36e97b-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_SECURITYACCELERATOR: Guid = Guid('268c95a1-edfe-11d3-95-c3-00-10-dc-40-50-a5')
GUID_DEVCLASS_SENSOR: Guid = Guid('5175d334-c371-4806-b3-ba-71-fd-53-c9-25-8d')
GUID_DEVCLASS_SIDESHOW: Guid = Guid('997b5d8d-c442-4f2e-ba-f3-9c-8e-67-1e-9e-21')
GUID_DEVCLASS_SMARTCARDREADER: Guid = Guid('50dd5230-ba8a-11d1-bf-5d-00-00-f8-05-f5-30')
GUID_DEVCLASS_SMRDISK: Guid = Guid('53487c23-680f-4585-ac-c3-1f-10-d6-77-7e-82')
GUID_DEVCLASS_SMRVOLUME: Guid = Guid('53b3cf03-8f5a-4788-91-b6-d1-9e-d9-fc-cc-bf')
GUID_DEVCLASS_SOFTWARECOMPONENT: Guid = Guid('5c4c3332-344d-483c-87-39-25-9e-93-4c-9c-c8')
GUID_DEVCLASS_SOUND: Guid = Guid('4d36e97c-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_SYSTEM: Guid = Guid('4d36e97d-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_TAPEDRIVE: Guid = Guid('6d807884-7d21-11cf-80-1c-08-00-2b-e1-03-18')
GUID_DEVCLASS_UNKNOWN: Guid = Guid('4d36e97e-e325-11ce-bf-c1-08-00-2b-e1-03-18')
GUID_DEVCLASS_UCM: Guid = Guid('e6f1aa1c-7f3b-4473-b2-e8-c9-7d-8a-c7-1d-53')
GUID_DEVCLASS_USB: Guid = Guid('36fc9e60-c465-11cf-80-56-44-45-53-54-00-00')
GUID_DEVCLASS_VOLUME: Guid = Guid('71a27cdd-812a-11d0-be-c7-08-00-2b-e2-09-2f')
GUID_DEVCLASS_VOLUMESNAPSHOT: Guid = Guid('533c5b84-ec70-11d2-95-05-00-c0-4f-79-de-af')
GUID_DEVCLASS_WCEUSBS: Guid = Guid('25dbce51-6c8f-4a72-8a-6d-b5-4c-2b-4f-c8-35')
GUID_DEVCLASS_WPD: Guid = Guid('eec5ad98-8080-425f-92-2a-da-bf-3d-e3-f6-9a')
GUID_DEVCLASS_FSFILTER_TOP: Guid = Guid('b369baf4-5568-4e82-a8-7e-a9-3e-b1-6b-ca-87')
GUID_DEVCLASS_FSFILTER_ACTIVITYMONITOR: Guid = Guid('b86dff51-a31e-4bac-b3-cf-e8-cf-e7-5c-9f-c2')
GUID_DEVCLASS_FSFILTER_UNDELETE: Guid = Guid('fe8f1572-c67a-48c0-bb-ac-0b-5c-6d-66-ca-fb')
GUID_DEVCLASS_FSFILTER_ANTIVIRUS: Guid = Guid('b1d1a169-c54f-4379-81-db-be-e7-d8-8d-74-54')
GUID_DEVCLASS_FSFILTER_REPLICATION: Guid = Guid('48d3ebc4-4cf8-48ff-b8-69-9c-68-ad-42-eb-9f')
GUID_DEVCLASS_FSFILTER_CONTINUOUSBACKUP: Guid = Guid('71aa14f8-6fad-4622-ad-77-92-bb-9d-7e-69-47')
GUID_DEVCLASS_FSFILTER_CONTENTSCREENER: Guid = Guid('3e3f0674-c83c-4558-bb-26-98-20-e1-eb-a5-c5')
GUID_DEVCLASS_FSFILTER_QUOTAMANAGEMENT: Guid = Guid('8503c911-a6c7-4919-8f-79-50-28-f5-86-6b-0c')
GUID_DEVCLASS_FSFILTER_SYSTEMRECOVERY: Guid = Guid('2db15374-706e-4131-a0-c7-d7-c7-8e-b0-28-9a')
GUID_DEVCLASS_FSFILTER_CFSMETADATASERVER: Guid = Guid('cdcf0939-b75b-4630-bf-76-80-f7-ba-65-58-84')
GUID_DEVCLASS_FSFILTER_HSM: Guid = Guid('d546500a-2aeb-45f6-94-82-f4-b1-79-9c-31-77')
GUID_DEVCLASS_FSFILTER_COMPRESSION: Guid = Guid('f3586baf-b5aa-49b5-8d-6c-05-69-28-4c-63-9f')
GUID_DEVCLASS_FSFILTER_ENCRYPTION: Guid = Guid('a0a701c0-a511-42ff-aa-6c-06-dc-03-95-57-6f')
GUID_DEVCLASS_FSFILTER_VIRTUALIZATION: Guid = Guid('f75a86c0-10d8-4c3a-b2-33-ed-60-e4-cd-fa-ac')
GUID_DEVCLASS_FSFILTER_PHYSICALQUOTAMANAGEMENT: Guid = Guid('6a0a8e78-bba6-4fc4-a7-09-1e-33-cd-09-d6-7e')
GUID_DEVCLASS_FSFILTER_OPENFILEBACKUP: Guid = Guid('f8ecafa6-66d1-41a5-89-9b-66-58-5d-72-16-b7')
GUID_DEVCLASS_FSFILTER_SECURITYENHANCER: Guid = Guid('d02bc3da-0c8e-4945-9b-d5-f1-88-3c-22-6c-8c')
GUID_DEVCLASS_FSFILTER_COPYPROTECTION: Guid = Guid('89786ff1-9c12-402f-9c-9e-17-75-3c-7f-43-75')
GUID_DEVCLASS_FSFILTER_BOTTOM: Guid = Guid('37765ea0-5958-4fc9-b0-4b-2f-df-ef-97-e5-9e')
GUID_DEVCLASS_FSFILTER_SYSTEM: Guid = Guid('5d1b9aaa-01e2-46af-84-9f-27-2b-3f-32-4c-46')
GUID_DEVCLASS_FSFILTER_INFRASTRUCTURE: Guid = Guid('e55fa6f9-128c-4d04-ab-ab-63-0c-74-b1-45-3a')
LINE_LEN: UInt32 = 256
MAX_INF_STRING_LENGTH: UInt32 = 4096
MAX_INF_SECTION_NAME_LENGTH: UInt32 = 255
MAX_TITLE_LEN: UInt32 = 60
MAX_INSTRUCTION_LEN: UInt32 = 256
MAX_LABEL_LEN: UInt32 = 30
MAX_SERVICE_NAME_LEN: UInt32 = 256
MAX_SUBTITLE_LEN: UInt32 = 256
SP_MAX_MACHINENAME_LENGTH: UInt32 = 263
SP_ALTPLATFORM_FLAGS_VERSION_RANGE: UInt32 = 1
SP_ALTPLATFORM_FLAGS_SUITE_MASK: UInt32 = 2
INF_STYLE_CACHE_ENABLE: UInt32 = 16
INF_STYLE_CACHE_DISABLE: UInt32 = 32
INF_STYLE_CACHE_IGNORE: UInt32 = 64
DIRID_ABSOLUTE: Int32 = -1
DIRID_ABSOLUTE_16BIT: UInt32 = 65535
DIRID_NULL: UInt32 = 0
DIRID_SRCPATH: UInt32 = 1
DIRID_WINDOWS: UInt32 = 10
DIRID_SYSTEM: UInt32 = 11
DIRID_DRIVERS: UInt32 = 12
DIRID_IOSUBSYS: UInt32 = 12
DIRID_DRIVER_STORE: UInt32 = 13
DIRID_INF: UInt32 = 17
DIRID_HELP: UInt32 = 18
DIRID_FONTS: UInt32 = 20
DIRID_VIEWERS: UInt32 = 21
DIRID_COLOR: UInt32 = 23
DIRID_APPS: UInt32 = 24
DIRID_SHARED: UInt32 = 25
DIRID_BOOT: UInt32 = 30
DIRID_SYSTEM16: UInt32 = 50
DIRID_SPOOL: UInt32 = 51
DIRID_SPOOLDRIVERS: UInt32 = 52
DIRID_USERPROFILE: UInt32 = 53
DIRID_LOADER: UInt32 = 54
DIRID_PRINTPROCESSOR: UInt32 = 55
DIRID_DEFAULT: UInt32 = 11
DIRID_COMMON_STARTMENU: UInt32 = 16406
DIRID_COMMON_PROGRAMS: UInt32 = 16407
DIRID_COMMON_STARTUP: UInt32 = 16408
DIRID_COMMON_DESKTOPDIRECTORY: UInt32 = 16409
DIRID_COMMON_FAVORITES: UInt32 = 16415
DIRID_COMMON_APPDATA: UInt32 = 16419
DIRID_PROGRAM_FILES: UInt32 = 16422
DIRID_SYSTEM_X86: UInt32 = 16425
DIRID_PROGRAM_FILES_X86: UInt32 = 16426
DIRID_PROGRAM_FILES_COMMON: UInt32 = 16427
DIRID_PROGRAM_FILES_COMMONX86: UInt32 = 16428
DIRID_COMMON_TEMPLATES: UInt32 = 16429
DIRID_COMMON_DOCUMENTS: UInt32 = 16430
DIRID_USER: UInt32 = 32768
SPFILENOTIFY_STARTQUEUE: UInt32 = 1
SPFILENOTIFY_ENDQUEUE: UInt32 = 2
SPFILENOTIFY_STARTSUBQUEUE: UInt32 = 3
SPFILENOTIFY_ENDSUBQUEUE: UInt32 = 4
SPFILENOTIFY_STARTDELETE: UInt32 = 5
SPFILENOTIFY_ENDDELETE: UInt32 = 6
SPFILENOTIFY_DELETEERROR: UInt32 = 7
SPFILENOTIFY_STARTRENAME: UInt32 = 8
SPFILENOTIFY_ENDRENAME: UInt32 = 9
SPFILENOTIFY_RENAMEERROR: UInt32 = 10
SPFILENOTIFY_STARTCOPY: UInt32 = 11
SPFILENOTIFY_ENDCOPY: UInt32 = 12
SPFILENOTIFY_COPYERROR: UInt32 = 13
SPFILENOTIFY_NEEDMEDIA: UInt32 = 14
SPFILENOTIFY_QUEUESCAN: UInt32 = 15
SPFILENOTIFY_CABINETINFO: UInt32 = 16
SPFILENOTIFY_FILEINCABINET: UInt32 = 17
SPFILENOTIFY_NEEDNEWCABINET: UInt32 = 18
SPFILENOTIFY_FILEEXTRACTED: UInt32 = 19
SPFILENOTIFY_FILEOPDELAYED: UInt32 = 20
SPFILENOTIFY_STARTBACKUP: UInt32 = 21
SPFILENOTIFY_BACKUPERROR: UInt32 = 22
SPFILENOTIFY_ENDBACKUP: UInt32 = 23
SPFILENOTIFY_QUEUESCAN_EX: UInt32 = 24
SPFILENOTIFY_STARTREGISTRATION: UInt32 = 25
SPFILENOTIFY_ENDREGISTRATION: UInt32 = 32
SPFILENOTIFY_QUEUESCAN_SIGNERINFO: UInt32 = 64
SPFILENOTIFY_LANGMISMATCH: UInt32 = 65536
SPFILENOTIFY_TARGETEXISTS: UInt32 = 131072
SPFILENOTIFY_TARGETNEWER: UInt32 = 262144
FILEOP_RENAME: UInt32 = 1
FILEOP_BACKUP: UInt32 = 3
FILEOP_ABORT: UInt32 = 0
FILEOP_DOIT: UInt32 = 1
FILEOP_SKIP: UInt32 = 2
FILEOP_RETRY: UInt32 = 1
FILEOP_NEWPATH: UInt32 = 4
COPYFLG_WARN_IF_SKIP: UInt32 = 1
COPYFLG_NOSKIP: UInt32 = 2
COPYFLG_NOVERSIONCHECK: UInt32 = 4
COPYFLG_FORCE_FILE_IN_USE: UInt32 = 8
COPYFLG_NO_OVERWRITE: UInt32 = 16
COPYFLG_NO_VERSION_DIALOG: UInt32 = 32
COPYFLG_OVERWRITE_OLDER_ONLY: UInt32 = 64
COPYFLG_PROTECTED_WINDOWS_DRIVER_FILE: UInt32 = 256
COPYFLG_REPLACEONLY: UInt32 = 1024
COPYFLG_NODECOMP: UInt32 = 2048
COPYFLG_REPLACE_BOOT_FILE: UInt32 = 4096
COPYFLG_NOPRUNE: UInt32 = 8192
COPYFLG_IN_USE_TRY_RENAME: UInt32 = 16384
DELFLG_IN_USE: UInt32 = 1
DELFLG_IN_USE1: UInt32 = 65536
SPREG_SUCCESS: UInt32 = 0
SPREG_LOADLIBRARY: UInt32 = 1
SPREG_GETPROCADDR: UInt32 = 2
SPREG_REGSVR: UInt32 = 3
SPREG_DLLINSTALL: UInt32 = 4
SPREG_TIMEOUT: UInt32 = 5
SPREG_UNKNOWN: UInt32 = 4294967295
SPINT_ACTIVE: UInt32 = 1
SPINT_DEFAULT: UInt32 = 2
SPINT_REMOVED: UInt32 = 4
SPID_ACTIVE: UInt32 = 1
SPID_DEFAULT: UInt32 = 2
SPID_REMOVED: UInt32 = 4
DIF_SELECTDEVICE: UInt32 = 1
DIF_INSTALLDEVICE: UInt32 = 2
DIF_ASSIGNRESOURCES: UInt32 = 3
DIF_PROPERTIES: UInt32 = 4
DIF_REMOVE: UInt32 = 5
DIF_FIRSTTIMESETUP: UInt32 = 6
DIF_FOUNDDEVICE: UInt32 = 7
DIF_SELECTCLASSDRIVERS: UInt32 = 8
DIF_VALIDATECLASSDRIVERS: UInt32 = 9
DIF_INSTALLCLASSDRIVERS: UInt32 = 10
DIF_CALCDISKSPACE: UInt32 = 11
DIF_DESTROYPRIVATEDATA: UInt32 = 12
DIF_VALIDATEDRIVER: UInt32 = 13
DIF_DETECT: UInt32 = 15
DIF_INSTALLWIZARD: UInt32 = 16
DIF_DESTROYWIZARDDATA: UInt32 = 17
DIF_PROPERTYCHANGE: UInt32 = 18
DIF_ENABLECLASS: UInt32 = 19
DIF_DETECTVERIFY: UInt32 = 20
DIF_INSTALLDEVICEFILES: UInt32 = 21
DIF_UNREMOVE: UInt32 = 22
DIF_SELECTBESTCOMPATDRV: UInt32 = 23
DIF_ALLOW_INSTALL: UInt32 = 24
DIF_REGISTERDEVICE: UInt32 = 25
DIF_NEWDEVICEWIZARD_PRESELECT: UInt32 = 26
DIF_NEWDEVICEWIZARD_SELECT: UInt32 = 27
DIF_NEWDEVICEWIZARD_PREANALYZE: UInt32 = 28
DIF_NEWDEVICEWIZARD_POSTANALYZE: UInt32 = 29
DIF_NEWDEVICEWIZARD_FINISHINSTALL: UInt32 = 30
DIF_UNUSED1: UInt32 = 31
DIF_INSTALLINTERFACES: UInt32 = 32
DIF_DETECTCANCEL: UInt32 = 33
DIF_REGISTER_COINSTALLERS: UInt32 = 34
DIF_ADDPROPERTYPAGE_ADVANCED: UInt32 = 35
DIF_ADDPROPERTYPAGE_BASIC: UInt32 = 36
DIF_RESERVED1: UInt32 = 37
DIF_TROUBLESHOOTER: UInt32 = 38
DIF_POWERMESSAGEWAKE: UInt32 = 39
DIF_ADDREMOTEPROPERTYPAGE_ADVANCED: UInt32 = 40
DIF_UPDATEDRIVER_UI: UInt32 = 41
DIF_FINISHINSTALL_ACTION: UInt32 = 42
DIF_RESERVED2: UInt32 = 48
DIF_MOVEDEVICE: UInt32 = 14
DI_SHOWOEM: Int32 = 1
DI_SHOWCOMPAT: Int32 = 2
DI_SHOWCLASS: Int32 = 4
DI_SHOWALL: Int32 = 7
DI_NOVCP: Int32 = 8
DI_DIDCOMPAT: Int32 = 16
DI_DIDCLASS: Int32 = 32
DI_AUTOASSIGNRES: Int32 = 64
DI_NEEDRESTART: Int32 = 128
DI_NEEDREBOOT: Int32 = 256
DI_NOBROWSE: Int32 = 512
DI_MULTMFGS: Int32 = 1024
DI_DISABLED: Int32 = 2048
DI_GENERALPAGE_ADDED: Int32 = 4096
DI_RESOURCEPAGE_ADDED: Int32 = 8192
DI_PROPERTIES_CHANGE: Int32 = 16384
DI_INF_IS_SORTED: Int32 = 32768
DI_ENUMSINGLEINF: Int32 = 65536
DI_DONOTCALLCONFIGMG: Int32 = 131072
DI_INSTALLDISABLED: Int32 = 262144
DI_COMPAT_FROM_CLASS: Int32 = 524288
DI_CLASSINSTALLPARAMS: Int32 = 1048576
DI_NODI_DEFAULTACTION: Int32 = 2097152
DI_QUIETINSTALL: Int32 = 8388608
DI_NOFILECOPY: Int32 = 16777216
DI_FORCECOPY: Int32 = 33554432
DI_DRIVERPAGE_ADDED: Int32 = 67108864
DI_USECI_SELECTSTRINGS: Int32 = 134217728
DI_OVERRIDE_INFFLAGS: Int32 = 268435456
DI_PROPS_NOCHANGEUSAGE: Int32 = 536870912
DI_NOSELECTICONS: Int32 = 1073741824
DI_NOWRITE_IDS: Int32 = -2147483648
DI_FLAGSEX_RESERVED2: Int32 = 1
DI_FLAGSEX_RESERVED3: Int32 = 2
DI_FLAGSEX_CI_FAILED: Int32 = 4
DI_FLAGSEX_FINISHINSTALL_ACTION: Int32 = 8
DI_FLAGSEX_DIDINFOLIST: Int32 = 16
DI_FLAGSEX_DIDCOMPATINFO: Int32 = 32
DI_FLAGSEX_FILTERCLASSES: Int32 = 64
DI_FLAGSEX_SETFAILEDINSTALL: Int32 = 128
DI_FLAGSEX_DEVICECHANGE: Int32 = 256
DI_FLAGSEX_ALWAYSWRITEIDS: Int32 = 512
DI_FLAGSEX_PROPCHANGE_PENDING: Int32 = 1024
DI_FLAGSEX_ALLOWEXCLUDEDDRVS: Int32 = 2048
DI_FLAGSEX_NOUIONQUERYREMOVE: Int32 = 4096
DI_FLAGSEX_USECLASSFORCOMPAT: Int32 = 8192
DI_FLAGSEX_RESERVED4: Int32 = 16384
DI_FLAGSEX_NO_DRVREG_MODIFY: Int32 = 32768
DI_FLAGSEX_IN_SYSTEM_SETUP: Int32 = 65536
DI_FLAGSEX_INET_DRIVER: Int32 = 131072
DI_FLAGSEX_APPENDDRIVERLIST: Int32 = 262144
DI_FLAGSEX_PREINSTALLBACKUP: Int32 = 524288
DI_FLAGSEX_BACKUPONREPLACE: Int32 = 1048576
DI_FLAGSEX_DRIVERLIST_FROM_URL: Int32 = 2097152
DI_FLAGSEX_RESERVED1: Int32 = 4194304
DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS: Int32 = 8388608
DI_FLAGSEX_POWERPAGE_ADDED: Int32 = 16777216
DI_FLAGSEX_FILTERSIMILARDRIVERS: Int32 = 33554432
DI_FLAGSEX_INSTALLEDDRIVER: Int32 = 67108864
DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE: Int32 = 134217728
DI_FLAGSEX_ALTPLATFORM_DRVSEARCH: Int32 = 268435456
DI_FLAGSEX_RESTART_DEVICE_ONLY: Int32 = 536870912
DI_FLAGSEX_RECURSIVESEARCH: Int32 = 1073741824
DI_FLAGSEX_SEARCH_PUBLISHED_INFS: Int32 = -2147483648
ENABLECLASS_QUERY: UInt32 = 0
ENABLECLASS_SUCCESS: UInt32 = 1
ENABLECLASS_FAILURE: UInt32 = 2
DICS_ENABLE: UInt32 = 1
DICS_DISABLE: UInt32 = 2
DICS_PROPCHANGE: UInt32 = 3
DICS_START: UInt32 = 4
DICS_STOP: UInt32 = 5
DICS_FLAG_GLOBAL: UInt32 = 1
DICS_FLAG_CONFIGSPECIFIC: UInt32 = 2
DICS_FLAG_CONFIGGENERAL: UInt32 = 4
DI_REMOVEDEVICE_GLOBAL: UInt32 = 1
DI_REMOVEDEVICE_CONFIGSPECIFIC: UInt32 = 2
DI_UNREMOVEDEVICE_CONFIGSPECIFIC: UInt32 = 2
MAX_INSTALLWIZARD_DYNAPAGES: UInt32 = 20
NDW_INSTALLFLAG_DIDFACTDEFS: UInt32 = 1
NDW_INSTALLFLAG_HARDWAREALLREADYIN: UInt32 = 2
NDW_INSTALLFLAG_NEEDRESTART: Int32 = 128
NDW_INSTALLFLAG_NEEDREBOOT: Int32 = 256
NDW_INSTALLFLAG_NEEDSHUTDOWN: UInt32 = 512
NDW_INSTALLFLAG_EXPRESSINTRO: UInt32 = 1024
NDW_INSTALLFLAG_SKIPISDEVINSTALLED: UInt32 = 2048
NDW_INSTALLFLAG_NODETECTEDDEVS: UInt32 = 4096
NDW_INSTALLFLAG_INSTALLSPECIFIC: UInt32 = 8192
NDW_INSTALLFLAG_SKIPCLASSLIST: UInt32 = 16384
NDW_INSTALLFLAG_CI_PICKED_OEM: UInt32 = 32768
NDW_INSTALLFLAG_PCMCIAMODE: UInt32 = 65536
NDW_INSTALLFLAG_PCMCIADEVICE: UInt32 = 131072
NDW_INSTALLFLAG_USERCANCEL: UInt32 = 262144
NDW_INSTALLFLAG_KNOWNCLASS: UInt32 = 524288
DYNAWIZ_FLAG_PAGESADDED: UInt32 = 1
DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT: UInt32 = 8
DYNAWIZ_FLAG_INSTALLDET_NEXT: UInt32 = 2
DYNAWIZ_FLAG_INSTALLDET_PREV: UInt32 = 4
MIN_IDD_DYNAWIZ_RESOURCE_ID: UInt32 = 10000
MAX_IDD_DYNAWIZ_RESOURCE_ID: UInt32 = 11000
IDD_DYNAWIZ_FIRSTPAGE: UInt32 = 10000
IDD_DYNAWIZ_SELECT_PREVPAGE: UInt32 = 10001
IDD_DYNAWIZ_SELECT_NEXTPAGE: UInt32 = 10002
IDD_DYNAWIZ_ANALYZE_PREVPAGE: UInt32 = 10003
IDD_DYNAWIZ_ANALYZE_NEXTPAGE: UInt32 = 10004
IDD_DYNAWIZ_SELECTDEV_PAGE: UInt32 = 10009
IDD_DYNAWIZ_ANALYZEDEV_PAGE: UInt32 = 10010
IDD_DYNAWIZ_INSTALLDETECTEDDEVS_PAGE: UInt32 = 10011
IDD_DYNAWIZ_SELECTCLASS_PAGE: UInt32 = 10012
IDD_DYNAWIZ_INSTALLDETECTED_PREVPAGE: UInt32 = 10006
IDD_DYNAWIZ_INSTALLDETECTED_NEXTPAGE: UInt32 = 10007
IDD_DYNAWIZ_INSTALLDETECTED_NODEVS: UInt32 = 10008
DNF_DUPDESC: UInt32 = 1
DNF_OLDDRIVER: UInt32 = 2
DNF_EXCLUDEFROMLIST: UInt32 = 4
DNF_NODRIVER: UInt32 = 8
DNF_LEGACYINF: UInt32 = 16
DNF_CLASS_DRIVER: UInt32 = 32
DNF_COMPATIBLE_DRIVER: UInt32 = 64
DNF_INET_DRIVER: UInt32 = 128
DNF_UNUSED1: UInt32 = 256
DNF_UNUSED2: UInt32 = 512
DNF_OLD_INET_DRIVER: UInt32 = 1024
DNF_BAD_DRIVER: UInt32 = 2048
DNF_DUPPROVIDER: UInt32 = 4096
DNF_INF_IS_SIGNED: UInt32 = 8192
DNF_OEM_F6_INF: UInt32 = 16384
DNF_DUPDRIVERVER: UInt32 = 32768
DNF_BASIC_DRIVER: UInt32 = 65536
DNF_AUTHENTICODE_SIGNED: UInt32 = 131072
DNF_INSTALLEDDRIVER: UInt32 = 262144
DNF_ALWAYSEXCLUDEFROMLIST: UInt32 = 524288
DNF_INBOX_DRIVER: UInt32 = 1048576
DNF_REQUESTADDITIONALSOFTWARE: UInt32 = 2097152
DNF_UNUSED_22: UInt32 = 4194304
DNF_UNUSED_23: UInt32 = 8388608
DNF_UNUSED_24: UInt32 = 16777216
DNF_UNUSED_25: UInt32 = 33554432
DNF_UNUSED_26: UInt32 = 67108864
DNF_UNUSED_27: UInt32 = 134217728
DNF_UNUSED_28: UInt32 = 268435456
DNF_UNUSED_29: UInt32 = 536870912
DNF_UNUSED_30: UInt32 = 1073741824
DNF_UNUSED_31: UInt32 = 2147483648
DRIVER_HARDWAREID_RANK: UInt32 = 4095
DRIVER_HARDWAREID_MASK: UInt32 = 2147487743
DRIVER_UNTRUSTED_RANK: UInt32 = 2147483648
DRIVER_W9X_SUSPECT_RANK: UInt32 = 3221225472
DRIVER_COMPATID_RANK: UInt32 = 16383
DRIVER_UNTRUSTED_HARDWAREID_RANK: UInt32 = 36863
DRIVER_UNTRUSTED_COMPATID_RANK: UInt32 = 49151
DRIVER_W9X_SUSPECT_HARDWAREID_RANK: UInt32 = 53247
DRIVER_W9X_SUSPECT_COMPATID_RANK: UInt32 = 65535
SPPSR_SELECT_DEVICE_RESOURCES: UInt32 = 1
SPPSR_ENUM_BASIC_DEVICE_PROPERTIES: UInt32 = 2
SPPSR_ENUM_ADV_DEVICE_PROPERTIES: UInt32 = 3
INFINFO_INF_SPEC_IS_HINF: UInt32 = 1
INFINFO_INF_NAME_IS_ABSOLUTE: UInt32 = 2
INFINFO_DEFAULT_SEARCH: UInt32 = 3
INFINFO_REVERSE_DEFAULT_SEARCH: UInt32 = 4
INFINFO_INF_PATH_LIST_SEARCH: UInt32 = 5
FILE_COMPRESSION_NONE: UInt32 = 0
FILE_COMPRESSION_WINLZA: UInt32 = 1
FILE_COMPRESSION_MSZIP: UInt32 = 2
FILE_COMPRESSION_NTCAB: UInt32 = 3
SRCLIST_TEMPORARY: UInt32 = 1
SRCLIST_NOBROWSE: UInt32 = 2
SRCLIST_SYSTEM: UInt32 = 16
SRCLIST_USER: UInt32 = 32
SRCLIST_SYSIFADMIN: UInt32 = 64
SRCLIST_SUBDIRS: UInt32 = 256
SRCLIST_APPEND: UInt32 = 512
SRCLIST_NOSTRIPPLATFORM: UInt32 = 1024
IDF_NOBROWSE: UInt32 = 1
IDF_NOSKIP: UInt32 = 2
IDF_NODETAILS: UInt32 = 4
IDF_NOCOMPRESSED: UInt32 = 8
IDF_CHECKFIRST: UInt32 = 256
IDF_NOBEEP: UInt32 = 512
IDF_NOFOREGROUND: UInt32 = 1024
IDF_WARNIFSKIP: UInt32 = 2048
IDF_NOREMOVABLEMEDIAPROMPT: UInt32 = 4096
IDF_USEDISKNAMEASPROMPT: UInt32 = 8192
IDF_OEMDISK: UInt32 = 2147483648
DPROMPT_SUCCESS: UInt32 = 0
DPROMPT_CANCEL: UInt32 = 1
DPROMPT_SKIPFILE: UInt32 = 2
DPROMPT_BUFFERTOOSMALL: UInt32 = 3
DPROMPT_OUTOFMEMORY: UInt32 = 4
SETDIRID_NOT_FULL_PATH: UInt32 = 1
SRCINFO_PATH: UInt32 = 1
SRCINFO_TAGFILE: UInt32 = 2
SRCINFO_DESCRIPTION: UInt32 = 3
SRCINFO_FLAGS: UInt32 = 4
SRCINFO_TAGFILE2: UInt32 = 5
SRC_FLAGS_CABFILE: UInt32 = 16
SP_FLAG_CABINETCONTINUATION: UInt32 = 2048
SP_BACKUP_BACKUPPASS: UInt32 = 1
SP_BACKUP_DEMANDPASS: UInt32 = 2
SP_BACKUP_SPECIAL: UInt32 = 4
SP_BACKUP_BOOTFILE: UInt32 = 8
SPQ_SCAN_FILE_PRESENCE: UInt32 = 1
SPQ_SCAN_FILE_VALIDITY: UInt32 = 2
SPQ_SCAN_USE_CALLBACK: UInt32 = 4
SPQ_SCAN_USE_CALLBACKEX: UInt32 = 8
SPQ_SCAN_INFORM_USER: UInt32 = 16
SPQ_SCAN_PRUNE_COPY_QUEUE: UInt32 = 32
SPQ_SCAN_USE_CALLBACK_SIGNERINFO: UInt32 = 64
SPQ_SCAN_PRUNE_DELREN: UInt32 = 128
SPQ_SCAN_FILE_PRESENCE_WITHOUT_SOURCE: UInt32 = 256
SPQ_SCAN_FILE_COMPARISON: UInt32 = 512
SPQ_SCAN_ACTIVATE_DRP: UInt32 = 1024
SPQ_DELAYED_COPY: UInt32 = 1
SPQ_FLAG_BACKUP_AWARE: UInt32 = 1
SPQ_FLAG_ABORT_IF_UNSIGNED: UInt32 = 2
SPQ_FLAG_FILES_MODIFIED: UInt32 = 4
SPQ_FLAG_DO_SHUFFLEMOVE: UInt32 = 8
SPQ_FLAG_VALID: UInt32 = 15
SPOST_MAX: UInt32 = 3
SUOI_FORCEDELETE: UInt32 = 1
SUOI_INTERNAL1: UInt32 = 2
SPDSL_IGNORE_DISK: UInt32 = 1
SPDSL_DISALLOW_NEGATIVE_ADJUST: UInt32 = 2
SPFILEQ_FILE_IN_USE: UInt32 = 1
SPFILEQ_REBOOT_RECOMMENDED: UInt32 = 2
SPFILEQ_REBOOT_IN_PROGRESS: UInt32 = 4
FLG_ADDREG_DELREG_BIT: UInt32 = 32768
FLG_ADDREG_BINVALUETYPE: UInt32 = 1
FLG_ADDREG_NOCLOBBER: UInt32 = 2
FLG_ADDREG_DELVAL: UInt32 = 4
FLG_ADDREG_APPEND: UInt32 = 8
FLG_ADDREG_KEYONLY: UInt32 = 16
FLG_ADDREG_OVERWRITEONLY: UInt32 = 32
FLG_ADDREG_64BITKEY: UInt32 = 4096
FLG_ADDREG_KEYONLY_COMMON: UInt32 = 8192
FLG_ADDREG_32BITKEY: UInt32 = 16384
FLG_ADDREG_TYPE_SZ: UInt32 = 0
FLG_ADDREG_TYPE_MULTI_SZ: UInt32 = 65536
FLG_ADDREG_TYPE_EXPAND_SZ: UInt32 = 131072
FLG_DELREG_VALUE: UInt32 = 0
FLG_DELREG_TYPE_SZ: UInt32 = 0
FLG_DELREG_TYPE_MULTI_SZ: UInt32 = 65536
FLG_DELREG_TYPE_EXPAND_SZ: UInt32 = 131072
FLG_DELREG_64BITKEY: UInt32 = 4096
FLG_DELREG_KEYONLY_COMMON: UInt32 = 8192
FLG_DELREG_32BITKEY: UInt32 = 16384
FLG_DELREG_OPERATION_MASK: UInt32 = 254
FLG_BITREG_CLEARBITS: UInt32 = 0
FLG_BITREG_SETBITS: UInt32 = 1
FLG_BITREG_64BITKEY: UInt32 = 4096
FLG_BITREG_32BITKEY: UInt32 = 16384
FLG_INI2REG_64BITKEY: UInt32 = 4096
FLG_INI2REG_32BITKEY: UInt32 = 16384
FLG_REGSVR_DLLREGISTER: UInt32 = 1
FLG_REGSVR_DLLINSTALL: UInt32 = 2
FLG_PROFITEM_CURRENTUSER: UInt32 = 1
FLG_PROFITEM_DELETE: UInt32 = 2
FLG_PROFITEM_GROUP: UInt32 = 4
FLG_PROFITEM_CSIDL: UInt32 = 8
FLG_ADDPROPERTY_NOCLOBBER: UInt32 = 1
FLG_ADDPROPERTY_OVERWRITEONLY: UInt32 = 2
FLG_ADDPROPERTY_APPEND: UInt32 = 4
FLG_ADDPROPERTY_OR: UInt32 = 8
FLG_ADDPROPERTY_AND: UInt32 = 16
FLG_DELPROPERTY_MULTI_SZ_DELSTRING: UInt32 = 1
SPINST_LOGCONFIG: UInt32 = 1
SPINST_INIFILES: UInt32 = 2
SPINST_REGISTRY: UInt32 = 4
SPINST_INI2REG: UInt32 = 8
SPINST_FILES: UInt32 = 16
SPINST_BITREG: UInt32 = 32
SPINST_REGSVR: UInt32 = 64
SPINST_UNREGSVR: UInt32 = 128
SPINST_PROFILEITEMS: UInt32 = 256
SPINST_COPYINF: UInt32 = 512
SPINST_PROPERTIES: UInt32 = 1024
SPINST_ALL: UInt32 = 2047
SPINST_SINGLESECTION: UInt32 = 65536
SPINST_LOGCONFIG_IS_FORCED: UInt32 = 131072
SPINST_LOGCONFIGS_ARE_OVERRIDES: UInt32 = 262144
SPINST_REGISTERCALLBACKAWARE: UInt32 = 524288
SPINST_DEVICEINSTALL: UInt32 = 1048576
SPSVCINST_TAGTOFRONT: UInt32 = 1
SPSVCINST_ASSOCSERVICE: UInt32 = 2
SPSVCINST_DELETEEVENTLOGENTRY: UInt32 = 4
SPSVCINST_NOCLOBBER_DISPLAYNAME: UInt32 = 8
SPSVCINST_NOCLOBBER_STARTTYPE: UInt32 = 16
SPSVCINST_NOCLOBBER_ERRORCONTROL: UInt32 = 32
SPSVCINST_NOCLOBBER_LOADORDERGROUP: UInt32 = 64
SPSVCINST_NOCLOBBER_DEPENDENCIES: UInt32 = 128
SPSVCINST_NOCLOBBER_DESCRIPTION: UInt32 = 256
SPSVCINST_STOPSERVICE: UInt32 = 512
SPSVCINST_CLOBBER_SECURITY: UInt32 = 1024
SPSVCINST_STARTSERVICE: UInt32 = 2048
SPSVCINST_NOCLOBBER_REQUIREDPRIVILEGES: UInt32 = 4096
SPSVCINST_NOCLOBBER_TRIGGERS: UInt32 = 8192
SPSVCINST_NOCLOBBER_SERVICESIDTYPE: UInt32 = 16384
SPSVCINST_NOCLOBBER_DELAYEDAUTOSTART: UInt32 = 32768
SPSVCINST_UNIQUE_NAME: UInt32 = 65536
SPFILELOG_SYSTEMLOG: UInt32 = 1
SPFILELOG_FORCENEW: UInt32 = 2
SPFILELOG_QUERYONLY: UInt32 = 4
SPFILELOG_OEMFILE: UInt32 = 1
LogSevInformation: UInt32 = 0
LogSevWarning: UInt32 = 1
LogSevError: UInt32 = 2
LogSevFatalError: UInt32 = 3
LogSevMaximum: UInt32 = 4
DICD_GENERATE_ID: UInt32 = 1
DICD_INHERIT_CLASSDRVS: UInt32 = 2
DIOD_INHERIT_CLASSDRVS: UInt32 = 2
DIOD_CANCEL_REMOVE: UInt32 = 4
DIODI_NO_ADD: UInt32 = 1
SPRDI_FIND_DUPS: UInt32 = 1
SPDIT_NODRIVER: UInt32 = 0
DIGCF_DEFAULT: UInt32 = 1
DIGCF_PRESENT: UInt32 = 2
DIGCF_ALLCLASSES: UInt32 = 4
DIGCF_PROFILE: UInt32 = 8
DIGCF_DEVICEINTERFACE: UInt32 = 16
DIGCF_INTERFACEDEVICE: UInt32 = 16
DIBCI_NOINSTALLCLASS: UInt32 = 1
DIBCI_NODISPLAYCLASS: UInt32 = 2
DIOCR_INSTALLER: UInt32 = 1
DIOCR_INTERFACE: UInt32 = 2
DIREG_DEV: UInt32 = 1
DIREG_DRV: UInt32 = 2
DIREG_BOTH: UInt32 = 4
DICLASSPROP_INSTALLER: UInt32 = 1
DICLASSPROP_INTERFACE: UInt32 = 2
SPDRP_DEVICEDESC: UInt32 = 0
SPDRP_HARDWAREID: UInt32 = 1
SPDRP_COMPATIBLEIDS: UInt32 = 2
SPDRP_UNUSED0: UInt32 = 3
SPDRP_SERVICE: UInt32 = 4
SPDRP_UNUSED1: UInt32 = 5
SPDRP_UNUSED2: UInt32 = 6
SPDRP_CLASS: UInt32 = 7
SPDRP_CLASSGUID: UInt32 = 8
SPDRP_DRIVER: UInt32 = 9
SPDRP_CONFIGFLAGS: UInt32 = 10
SPDRP_MFG: UInt32 = 11
SPDRP_FRIENDLYNAME: UInt32 = 12
SPDRP_LOCATION_INFORMATION: UInt32 = 13
SPDRP_PHYSICAL_DEVICE_OBJECT_NAME: UInt32 = 14
SPDRP_CAPABILITIES: UInt32 = 15
SPDRP_UI_NUMBER: UInt32 = 16
SPDRP_UPPERFILTERS: UInt32 = 17
SPDRP_LOWERFILTERS: UInt32 = 18
SPDRP_BUSTYPEGUID: UInt32 = 19
SPDRP_LEGACYBUSTYPE: UInt32 = 20
SPDRP_BUSNUMBER: UInt32 = 21
SPDRP_ENUMERATOR_NAME: UInt32 = 22
SPDRP_SECURITY: UInt32 = 23
SPDRP_SECURITY_SDS: UInt32 = 24
SPDRP_DEVTYPE: UInt32 = 25
SPDRP_EXCLUSIVE: UInt32 = 26
SPDRP_CHARACTERISTICS: UInt32 = 27
SPDRP_ADDRESS: UInt32 = 28
SPDRP_UI_NUMBER_DESC_FORMAT: UInt32 = 29
SPDRP_DEVICE_POWER_DATA: UInt32 = 30
SPDRP_REMOVAL_POLICY: UInt32 = 31
SPDRP_REMOVAL_POLICY_HW_DEFAULT: UInt32 = 32
SPDRP_REMOVAL_POLICY_OVERRIDE: UInt32 = 33
SPDRP_INSTALL_STATE: UInt32 = 34
SPDRP_LOCATION_PATHS: UInt32 = 35
SPDRP_BASE_CONTAINERID: UInt32 = 36
SPDRP_MAXIMUM_PROPERTY: UInt32 = 37
SPCRP_UPPERFILTERS: UInt32 = 17
SPCRP_LOWERFILTERS: UInt32 = 18
SPCRP_SECURITY: UInt32 = 23
SPCRP_SECURITY_SDS: UInt32 = 24
SPCRP_DEVTYPE: UInt32 = 25
SPCRP_EXCLUSIVE: UInt32 = 26
SPCRP_CHARACTERISTICS: UInt32 = 27
SPCRP_MAXIMUM_PROPERTY: UInt32 = 28
DMI_MASK: UInt32 = 1
DMI_BKCOLOR: UInt32 = 2
DMI_USERECT: UInt32 = 4
DIGCDP_FLAG_BASIC: UInt32 = 1
DIGCDP_FLAG_ADVANCED: UInt32 = 2
DIGCDP_FLAG_REMOTE_BASIC: UInt32 = 3
DIGCDP_FLAG_REMOTE_ADVANCED: UInt32 = 4
IDI_RESOURCEFIRST: UInt32 = 159
IDI_RESOURCE: UInt32 = 159
IDI_RESOURCELAST: UInt32 = 161
IDI_RESOURCEOVERLAYFIRST: UInt32 = 161
IDI_RESOURCEOVERLAYLAST: UInt32 = 161
IDI_CONFLICT: UInt32 = 161
IDI_CLASSICON_OVERLAYFIRST: UInt32 = 500
IDI_CLASSICON_OVERLAYLAST: UInt32 = 502
IDI_PROBLEM_OVL: UInt32 = 500
IDI_DISABLED_OVL: UInt32 = 501
IDI_FORCED_OVL: UInt32 = 502
SPWPT_SELECTDEVICE: UInt32 = 1
SPWP_USE_DEVINFO_DATA: UInt32 = 1
SIGNERSCORE_UNKNOWN: UInt32 = 4278190080
SIGNERSCORE_W9X_SUSPECT: UInt32 = 3221225472
SIGNERSCORE_UNSIGNED: UInt32 = 2147483648
SIGNERSCORE_AUTHENTICODE: UInt32 = 251658240
SIGNERSCORE_WHQL: UInt32 = 218103813
SIGNERSCORE_UNCLASSIFIED: UInt32 = 218103812
SIGNERSCORE_INBOX: UInt32 = 218103811
SIGNERSCORE_LOGO_STANDARD: UInt32 = 218103810
SIGNERSCORE_LOGO_PREMIUM: UInt32 = 218103809
SIGNERSCORE_MASK: UInt32 = 4278190080
SIGNERSCORE_SIGNED_MASK: UInt32 = 4026531840
DICUSTOMDEVPROP_MERGE_MULTISZ: UInt32 = 1
SCWMI_CLOBBER_SECURITY: UInt32 = 1
MAX_DEVICE_ID_LEN: UInt32 = 200
MAX_DEVNODE_ID_LEN: UInt32 = 200
MAX_GUID_STRING_LEN: UInt32 = 39
MAX_CLASS_NAME_LEN: UInt32 = 32
MAX_PROFILE_LEN: UInt32 = 80
MAX_CONFIG_VALUE: UInt32 = 9999
MAX_INSTANCE_VALUE: UInt32 = 9999
MAX_MEM_REGISTERS: UInt32 = 9
MAX_IO_PORTS: UInt32 = 20
MAX_IRQS: UInt32 = 7
MAX_DMA_CHANNELS: UInt32 = 7
DWORD_MAX: UInt32 = 4294967295
CONFIGMG_VERSION: UInt32 = 1024
CM_CDMASK_DEVINST: UInt32 = 1
CM_CDMASK_RESDES: UInt32 = 2
CM_CDMASK_FLAGS: UInt32 = 4
CM_CDMASK_DESCRIPTION: UInt32 = 8
CM_CDMASK_VALID: UInt32 = 15
CM_CDFLAGS_DRIVER: UInt32 = 1
CM_CDFLAGS_ROOT_OWNED: UInt32 = 2
CM_CDFLAGS_RESERVED: UInt32 = 4
mMD_MemoryType: UInt32 = 1
fMD_MemoryType: UInt32 = 1
fMD_ROM: UInt32 = 0
fMD_RAM: UInt32 = 1
mMD_32_24: UInt32 = 2
fMD_32_24: UInt32 = 2
fMD_24: UInt32 = 0
fMD_32: UInt32 = 2
mMD_Prefetchable: UInt32 = 4
fMD_Prefetchable: UInt32 = 4
fMD_Pref: UInt32 = 4
fMD_PrefetchDisallowed: UInt32 = 0
fMD_PrefetchAllowed: UInt32 = 4
mMD_Readable: UInt32 = 8
fMD_Readable: UInt32 = 8
fMD_ReadAllowed: UInt32 = 0
fMD_ReadDisallowed: UInt32 = 8
mMD_CombinedWrite: UInt32 = 16
fMD_CombinedWrite: UInt32 = 16
fMD_CombinedWriteDisallowed: UInt32 = 0
fMD_CombinedWriteAllowed: UInt32 = 16
mMD_Cacheable: UInt32 = 32
fMD_NonCacheable: UInt32 = 0
fMD_Cacheable: UInt32 = 32
fMD_WINDOW_DECODE: UInt32 = 64
fMD_MEMORY_BAR: UInt32 = 128
fIOD_PortType: UInt32 = 1
fIOD_Memory: UInt32 = 0
fIOD_IO: UInt32 = 1
fIOD_DECODE: UInt32 = 252
fIOD_10_BIT_DECODE: UInt32 = 4
fIOD_12_BIT_DECODE: UInt32 = 8
fIOD_16_BIT_DECODE: UInt32 = 16
fIOD_POSITIVE_DECODE: UInt32 = 32
fIOD_PASSIVE_DECODE: UInt32 = 64
fIOD_WINDOW_DECODE: UInt32 = 128
fIOD_PORT_BAR: UInt32 = 256
IO_ALIAS_10_BIT_DECODE: UInt32 = 4
IO_ALIAS_12_BIT_DECODE: UInt32 = 16
IO_ALIAS_16_BIT_DECODE: UInt32 = 0
IO_ALIAS_POSITIVE_DECODE: UInt32 = 255
IOA_Local: UInt32 = 255
mDD_Width: UInt32 = 3
fDD_BYTE: UInt32 = 0
fDD_WORD: UInt32 = 1
fDD_DWORD: UInt32 = 2
fDD_BYTE_AND_WORD: UInt32 = 3
mDD_BusMaster: UInt32 = 4
fDD_NoBusMaster: UInt32 = 0
fDD_BusMaster: UInt32 = 4
mDD_Type: UInt32 = 24
fDD_TypeStandard: UInt32 = 0
fDD_TypeA: UInt32 = 8
fDD_TypeB: UInt32 = 16
fDD_TypeF: UInt32 = 24
mIRQD_Share: UInt32 = 1
fIRQD_Exclusive: UInt32 = 0
fIRQD_Share: UInt32 = 1
fIRQD_Share_Bit: UInt32 = 0
fIRQD_Level_Bit: UInt32 = 1
mIRQD_Edge_Level: UInt32 = 2
fIRQD_Level: UInt32 = 0
fIRQD_Edge: UInt32 = 2
CM_RESDES_WIDTH_DEFAULT: UInt32 = 0
CM_RESDES_WIDTH_32: UInt32 = 1
CM_RESDES_WIDTH_64: UInt32 = 2
CM_RESDES_WIDTH_BITS: UInt32 = 3
mPCD_IO_8_16: UInt32 = 1
fPCD_IO_8: UInt32 = 0
fPCD_IO_16: UInt32 = 1
mPCD_MEM_8_16: UInt32 = 2
fPCD_MEM_8: UInt32 = 0
fPCD_MEM_16: UInt32 = 2
mPCD_MEM_A_C: UInt32 = 12
fPCD_MEM1_A: UInt32 = 4
fPCD_MEM2_A: UInt32 = 8
fPCD_IO_ZW_8: UInt32 = 16
fPCD_IO_SRC_16: UInt32 = 32
fPCD_IO_WS_16: UInt32 = 64
mPCD_MEM_WS: UInt32 = 768
fPCD_MEM_WS_ONE: UInt32 = 256
fPCD_MEM_WS_TWO: UInt32 = 512
fPCD_MEM_WS_THREE: UInt32 = 768
fPCD_MEM_A: UInt32 = 4
fPCD_ATTRIBUTES_PER_WINDOW: UInt32 = 32768
fPCD_IO1_16: UInt32 = 65536
fPCD_IO1_ZW_8: UInt32 = 131072
fPCD_IO1_SRC_16: UInt32 = 262144
fPCD_IO1_WS_16: UInt32 = 524288
fPCD_IO2_16: UInt32 = 1048576
fPCD_IO2_ZW_8: UInt32 = 2097152
fPCD_IO2_SRC_16: UInt32 = 4194304
fPCD_IO2_WS_16: UInt32 = 8388608
mPCD_MEM1_WS: UInt32 = 50331648
fPCD_MEM1_WS_ONE: UInt32 = 16777216
fPCD_MEM1_WS_TWO: UInt32 = 33554432
fPCD_MEM1_WS_THREE: UInt32 = 50331648
fPCD_MEM1_16: UInt32 = 67108864
mPCD_MEM2_WS: UInt32 = 805306368
fPCD_MEM2_WS_ONE: UInt32 = 268435456
fPCD_MEM2_WS_TWO: UInt32 = 536870912
fPCD_MEM2_WS_THREE: UInt32 = 805306368
fPCD_MEM2_16: UInt32 = 1073741824
PCD_MAX_MEMORY: UInt32 = 2
PCD_MAX_IO: UInt32 = 2
mPMF_AUDIO_ENABLE: UInt32 = 8
fPMF_AUDIO_ENABLE: UInt32 = 8
CM_HWPI_NOT_DOCKABLE: UInt32 = 0
CM_HWPI_UNDOCKED: UInt32 = 1
CM_HWPI_DOCKED: UInt32 = 2
ResType_All: UInt32 = 0
ResType_None: UInt32 = 0
ResType_Mem: UInt32 = 1
ResType_IO: UInt32 = 2
ResType_DMA: UInt32 = 3
ResType_IRQ: UInt32 = 4
ResType_DoNotUse: UInt32 = 5
ResType_BusNumber: UInt32 = 6
ResType_MemLarge: UInt32 = 7
ResType_MAX: UInt32 = 7
ResType_Ignored_Bit: UInt32 = 32768
ResType_ClassSpecific: UInt32 = 65535
ResType_Reserved: UInt32 = 32768
ResType_DevicePrivate: UInt32 = 32769
ResType_PcCardConfig: UInt32 = 32770
ResType_MfCardConfig: UInt32 = 32771
ResType_Connection: UInt32 = 32772
CM_ADD_RANGE_ADDIFCONFLICT: UInt32 = 0
CM_ADD_RANGE_DONOTADDIFCONFLICT: UInt32 = 1
CM_ADD_RANGE_BITS: UInt32 = 1
BASIC_LOG_CONF: UInt32 = 0
FILTERED_LOG_CONF: UInt32 = 1
ALLOC_LOG_CONF: UInt32 = 2
BOOT_LOG_CONF: UInt32 = 3
FORCED_LOG_CONF: UInt32 = 4
OVERRIDE_LOG_CONF: UInt32 = 5
NUM_LOG_CONF: UInt32 = 6
LOG_CONF_BITS: UInt32 = 7
PRIORITY_EQUAL_FIRST: UInt32 = 8
PRIORITY_EQUAL_LAST: UInt32 = 0
PRIORITY_BIT: UInt32 = 8
RegDisposition_OpenAlways: UInt32 = 0
RegDisposition_OpenExisting: UInt32 = 1
RegDisposition_Bits: UInt32 = 1
CM_ADD_ID_HARDWARE: UInt32 = 0
CM_ADD_ID_COMPATIBLE: UInt32 = 1
CM_ADD_ID_BITS: UInt32 = 1
CM_CREATE_DEVNODE_NORMAL: UInt32 = 0
CM_CREATE_DEVNODE_NO_WAIT_INSTALL: UInt32 = 1
CM_CREATE_DEVNODE_PHANTOM: UInt32 = 2
CM_CREATE_DEVNODE_GENERATE_ID: UInt32 = 4
CM_CREATE_DEVNODE_DO_NOT_INSTALL: UInt32 = 8
CM_CREATE_DEVNODE_BITS: UInt32 = 15
CM_CREATE_DEVINST_NORMAL: UInt32 = 0
CM_CREATE_DEVINST_NO_WAIT_INSTALL: UInt32 = 1
CM_CREATE_DEVINST_PHANTOM: UInt32 = 2
CM_CREATE_DEVINST_GENERATE_ID: UInt32 = 4
CM_CREATE_DEVINST_DO_NOT_INSTALL: UInt32 = 8
CM_CREATE_DEVINST_BITS: UInt32 = 15
CM_DELETE_CLASS_ONLY: UInt32 = 0
CM_DELETE_CLASS_SUBKEYS: UInt32 = 1
CM_DELETE_CLASS_INTERFACE: UInt32 = 2
CM_DELETE_CLASS_BITS: UInt32 = 3
CM_ENUMERATE_CLASSES_INSTALLER: UInt32 = 0
CM_ENUMERATE_CLASSES_INTERFACE: UInt32 = 1
CM_ENUMERATE_CLASSES_BITS: UInt32 = 1
CM_DETECT_NEW_PROFILE: UInt32 = 1
CM_DETECT_CRASHED: UInt32 = 2
CM_DETECT_HWPROF_FIRST_BOOT: UInt32 = 4
CM_DETECT_RUN: UInt32 = 2147483648
CM_DETECT_BITS: UInt32 = 2147483655
CM_DISABLE_POLITE: UInt32 = 0
CM_DISABLE_ABSOLUTE: UInt32 = 1
CM_DISABLE_HARDWARE: UInt32 = 2
CM_DISABLE_UI_NOT_OK: UInt32 = 4
CM_DISABLE_PERSIST: UInt32 = 8
CM_DISABLE_BITS: UInt32 = 15
CM_GETIDLIST_FILTER_NONE: UInt32 = 0
CM_GETIDLIST_FILTER_ENUMERATOR: UInt32 = 1
CM_GETIDLIST_FILTER_SERVICE: UInt32 = 2
CM_GETIDLIST_FILTER_EJECTRELATIONS: UInt32 = 4
CM_GETIDLIST_FILTER_REMOVALRELATIONS: UInt32 = 8
CM_GETIDLIST_FILTER_POWERRELATIONS: UInt32 = 16
CM_GETIDLIST_FILTER_BUSRELATIONS: UInt32 = 32
CM_GETIDLIST_DONOTGENERATE: UInt32 = 268435520
CM_GETIDLIST_FILTER_BITS: UInt32 = 268435583
CM_GETIDLIST_FILTER_TRANSPORTRELATIONS: UInt32 = 128
CM_GETIDLIST_FILTER_PRESENT: UInt32 = 256
CM_GETIDLIST_FILTER_CLASS: UInt32 = 512
CM_GET_DEVICE_INTERFACE_LIST_PRESENT: UInt32 = 0
CM_GET_DEVICE_INTERFACE_LIST_ALL_DEVICES: UInt32 = 1
CM_GET_DEVICE_INTERFACE_LIST_BITS: UInt32 = 1
CM_DRP_DEVICEDESC: UInt32 = 1
CM_DRP_HARDWAREID: UInt32 = 2
CM_DRP_COMPATIBLEIDS: UInt32 = 3
CM_DRP_UNUSED0: UInt32 = 4
CM_DRP_SERVICE: UInt32 = 5
CM_DRP_UNUSED1: UInt32 = 6
CM_DRP_UNUSED2: UInt32 = 7
CM_DRP_CLASS: UInt32 = 8
CM_DRP_CLASSGUID: UInt32 = 9
CM_DRP_DRIVER: UInt32 = 10
CM_DRP_CONFIGFLAGS: UInt32 = 11
CM_DRP_MFG: UInt32 = 12
CM_DRP_FRIENDLYNAME: UInt32 = 13
CM_DRP_LOCATION_INFORMATION: UInt32 = 14
CM_DRP_PHYSICAL_DEVICE_OBJECT_NAME: UInt32 = 15
CM_DRP_CAPABILITIES: UInt32 = 16
CM_DRP_UI_NUMBER: UInt32 = 17
CM_DRP_UPPERFILTERS: UInt32 = 18
CM_CRP_UPPERFILTERS: UInt32 = 18
CM_DRP_LOWERFILTERS: UInt32 = 19
CM_CRP_LOWERFILTERS: UInt32 = 19
CM_DRP_BUSTYPEGUID: UInt32 = 20
CM_DRP_LEGACYBUSTYPE: UInt32 = 21
CM_DRP_BUSNUMBER: UInt32 = 22
CM_DRP_ENUMERATOR_NAME: UInt32 = 23
CM_DRP_SECURITY: UInt32 = 24
CM_CRP_SECURITY: UInt32 = 24
CM_DRP_SECURITY_SDS: UInt32 = 25
CM_CRP_SECURITY_SDS: UInt32 = 25
CM_DRP_DEVTYPE: UInt32 = 26
CM_CRP_DEVTYPE: UInt32 = 26
CM_DRP_EXCLUSIVE: UInt32 = 27
CM_CRP_EXCLUSIVE: UInt32 = 27
CM_DRP_CHARACTERISTICS: UInt32 = 28
CM_CRP_CHARACTERISTICS: UInt32 = 28
CM_DRP_ADDRESS: UInt32 = 29
CM_DRP_UI_NUMBER_DESC_FORMAT: UInt32 = 30
CM_DRP_DEVICE_POWER_DATA: UInt32 = 31
CM_DRP_REMOVAL_POLICY: UInt32 = 32
CM_DRP_REMOVAL_POLICY_HW_DEFAULT: UInt32 = 33
CM_DRP_REMOVAL_POLICY_OVERRIDE: UInt32 = 34
CM_DRP_INSTALL_STATE: UInt32 = 35
CM_DRP_LOCATION_PATHS: UInt32 = 36
CM_DRP_BASE_CONTAINERID: UInt32 = 37
CM_DRP_MIN: UInt32 = 1
CM_CRP_MIN: UInt32 = 1
CM_DRP_MAX: UInt32 = 37
CM_CRP_MAX: UInt32 = 37
CM_DEVCAP_LOCKSUPPORTED: UInt32 = 1
CM_DEVCAP_EJECTSUPPORTED: UInt32 = 2
CM_DEVCAP_REMOVABLE: UInt32 = 4
CM_DEVCAP_DOCKDEVICE: UInt32 = 8
CM_DEVCAP_UNIQUEID: UInt32 = 16
CM_DEVCAP_SILENTINSTALL: UInt32 = 32
CM_DEVCAP_RAWDEVICEOK: UInt32 = 64
CM_DEVCAP_SURPRISEREMOVALOK: UInt32 = 128
CM_DEVCAP_HARDWAREDISABLED: UInt32 = 256
CM_DEVCAP_NONDYNAMIC: UInt32 = 512
CM_DEVCAP_SECUREDEVICE: UInt32 = 1024
CM_REMOVAL_POLICY_EXPECT_NO_REMOVAL: UInt32 = 1
CM_REMOVAL_POLICY_EXPECT_ORDERLY_REMOVAL: UInt32 = 2
CM_REMOVAL_POLICY_EXPECT_SURPRISE_REMOVAL: UInt32 = 3
CM_INSTALL_STATE_INSTALLED: UInt32 = 0
CM_INSTALL_STATE_NEEDS_REINSTALL: UInt32 = 1
CM_INSTALL_STATE_FAILED_INSTALL: UInt32 = 2
CM_INSTALL_STATE_FINISH_INSTALL: UInt32 = 3
CM_LOCATE_DEVNODE_NORMAL: UInt32 = 0
CM_LOCATE_DEVNODE_PHANTOM: UInt32 = 1
CM_LOCATE_DEVNODE_CANCELREMOVE: UInt32 = 2
CM_LOCATE_DEVNODE_NOVALIDATION: UInt32 = 4
CM_LOCATE_DEVNODE_BITS: UInt32 = 7
CM_LOCATE_DEVINST_NORMAL: UInt32 = 0
CM_LOCATE_DEVINST_PHANTOM: UInt32 = 1
CM_LOCATE_DEVINST_CANCELREMOVE: UInt32 = 2
CM_LOCATE_DEVINST_NOVALIDATION: UInt32 = 4
CM_LOCATE_DEVINST_BITS: UInt32 = 7
CM_OPEN_CLASS_KEY_INSTALLER: UInt32 = 0
CM_OPEN_CLASS_KEY_INTERFACE: UInt32 = 1
CM_OPEN_CLASS_KEY_BITS: UInt32 = 1
CM_REMOVE_UI_OK: UInt32 = 0
CM_REMOVE_UI_NOT_OK: UInt32 = 1
CM_REMOVE_NO_RESTART: UInt32 = 2
CM_REMOVE_DISABLE: UInt32 = 4
CM_REMOVE_BITS: UInt32 = 7
CM_QUERY_REMOVE_UI_OK: UInt32 = 0
CM_QUERY_REMOVE_UI_NOT_OK: UInt32 = 1
CM_REENUMERATE_NORMAL: UInt32 = 0
CM_REENUMERATE_SYNCHRONOUS: UInt32 = 1
CM_REENUMERATE_RETRY_INSTALLATION: UInt32 = 2
CM_REENUMERATE_ASYNCHRONOUS: UInt32 = 4
CM_REENUMERATE_BITS: UInt32 = 7
CM_REGISTER_DEVICE_DRIVER_STATIC: UInt32 = 0
CM_REGISTER_DEVICE_DRIVER_DISABLEABLE: UInt32 = 1
CM_REGISTER_DEVICE_DRIVER_REMOVABLE: UInt32 = 2
CM_REGISTER_DEVICE_DRIVER_BITS: UInt32 = 3
CM_REGISTRY_HARDWARE: UInt32 = 0
CM_REGISTRY_SOFTWARE: UInt32 = 1
CM_REGISTRY_USER: UInt32 = 256
CM_REGISTRY_CONFIG: UInt32 = 512
CM_REGISTRY_BITS: UInt32 = 769
CM_SET_DEVNODE_PROBLEM_NORMAL: UInt32 = 0
CM_SET_DEVNODE_PROBLEM_OVERRIDE: UInt32 = 1
CM_SET_DEVNODE_PROBLEM_BITS: UInt32 = 1
CM_SET_DEVINST_PROBLEM_NORMAL: UInt32 = 0
CM_SET_DEVINST_PROBLEM_OVERRIDE: UInt32 = 1
CM_SET_DEVINST_PROBLEM_BITS: UInt32 = 1
CM_SET_HW_PROF_FLAGS_UI_NOT_OK: UInt32 = 1
CM_SET_HW_PROF_FLAGS_BITS: UInt32 = 1
CM_SETUP_DEVNODE_READY: UInt32 = 0
CM_SETUP_DEVINST_READY: UInt32 = 0
CM_SETUP_DOWNLOAD: UInt32 = 1
CM_SETUP_WRITE_LOG_CONFS: UInt32 = 2
CM_SETUP_PROP_CHANGE: UInt32 = 3
CM_SETUP_DEVNODE_RESET: UInt32 = 4
CM_SETUP_DEVINST_RESET: UInt32 = 4
CM_SETUP_DEVNODE_CONFIG: UInt32 = 5
CM_SETUP_DEVINST_CONFIG: UInt32 = 5
CM_SETUP_DEVNODE_CONFIG_CLASS: UInt32 = 6
CM_SETUP_DEVINST_CONFIG_CLASS: UInt32 = 6
CM_SETUP_DEVNODE_CONFIG_EXTENSIONS: UInt32 = 7
CM_SETUP_DEVINST_CONFIG_EXTENSIONS: UInt32 = 7
CM_SETUP_DEVNODE_CONFIG_RESET: UInt32 = 8
CM_SETUP_DEVINST_CONFIG_RESET: UInt32 = 8
CM_SETUP_BITS: UInt32 = 15
CM_QUERY_ARBITRATOR_RAW: UInt32 = 0
CM_QUERY_ARBITRATOR_TRANSLATED: UInt32 = 1
CM_QUERY_ARBITRATOR_BITS: UInt32 = 1
CM_CUSTOMDEVPROP_MERGE_MULTISZ: UInt32 = 1
CM_CUSTOMDEVPROP_BITS: UInt32 = 1
CM_NAME_ATTRIBUTE_NAME_RETRIEVED_FROM_DEVICE: UInt32 = 1
CM_NAME_ATTRIBUTE_USER_ASSIGNED_NAME: UInt32 = 2
CM_CLASS_PROPERTY_INSTALLER: UInt32 = 0
CM_CLASS_PROPERTY_INTERFACE: UInt32 = 1
CM_CLASS_PROPERTY_BITS: UInt32 = 1
CM_NOTIFY_FILTER_FLAG_ALL_INTERFACE_CLASSES: UInt32 = 1
CM_NOTIFY_FILTER_FLAG_ALL_DEVICE_INSTANCES: UInt32 = 2
CM_GLOBAL_STATE_CAN_DO_UI: UInt32 = 1
CM_GLOBAL_STATE_ON_BIG_STACK: UInt32 = 2
CM_GLOBAL_STATE_SERVICES_AVAILABLE: UInt32 = 4
CM_GLOBAL_STATE_SHUTTING_DOWN: UInt32 = 8
CM_GLOBAL_STATE_DETECTION_PENDING: UInt32 = 16
CM_GLOBAL_STATE_REBOOT_REQUIRED: UInt32 = 32
INSTALLFLAG_FORCE: UInt32 = 1
INSTALLFLAG_READONLY: UInt32 = 2
INSTALLFLAG_NONINTERACTIVE: UInt32 = 4
INSTALLFLAG_BITS: UInt32 = 7
DIIDFLAG_SHOWSEARCHUI: UInt32 = 1
DIIDFLAG_NOFINISHINSTALLUI: UInt32 = 2
DIIDFLAG_INSTALLNULLDRIVER: UInt32 = 4
DIIDFLAG_INSTALLCOPYINFDRIVERS: UInt32 = 8
DIIDFLAG_BITS: UInt32 = 15
DIIRFLAG_INF_ALREADY_COPIED: UInt32 = 1
DIIRFLAG_FORCE_INF: UInt32 = 2
DIIRFLAG_HW_USING_THE_INF: UInt32 = 4
DIIRFLAG_HOTPATCH: UInt32 = 8
DIIRFLAG_NOBACKUP: UInt32 = 16
DIIRFLAG_PRE_CONFIGURE_INF: UInt32 = 32
DIIRFLAG_INSTALL_AS_SET: UInt32 = 64
DIURFLAG_NO_REMOVE_INF: UInt32 = 1
DIURFLAG_RESERVED: UInt32 = 2
ROLLBACK_FLAG_NO_UI: UInt32 = 1
ROLLBACK_BITS: UInt32 = 1
MAX_KEY_LEN: UInt32 = 100
SZ_KEY_OPTIONDESC: String = 'OptionDesc'
SZ_KEY_LDIDOEM: String = 'LdidOEM'
SZ_KEY_SRCDISKFILES: String = 'SourceDisksFiles'
SZ_KEY_SRCDISKNAMES: String = 'SourceDisksNames'
SZ_KEY_STRINGS: String = 'Strings'
SZ_KEY_DESTDIRS: String = 'DestinationDirs'
SZ_KEY_LAYOUT_FILE: String = 'LayoutFile'
SZ_KEY_DEFDESTDIR: String = 'DefaultDestDir'
SZ_KEY_LFN_SECTION: String = 'VarLDID.LFN'
SZ_KEY_SFN_SECTION: String = 'VarLDID.SFN'
SZ_KEY_UPDATEINIS: String = 'UpdateInis'
SZ_KEY_UPDATEINIFIELDS: String = 'UpdateIniFields'
SZ_KEY_INI2REG: String = 'Ini2Reg'
SZ_KEY_COPYFILES: String = 'CopyFiles'
SZ_KEY_RENFILES: String = 'RenFiles'
SZ_KEY_DELFILES: String = 'DelFiles'
SZ_KEY_ADDREG: String = 'AddReg'
SZ_KEY_ADDREGNOCLOBBER: String = 'AddRegNoClobber'
SZ_KEY_DELREG: String = 'DelReg'
SZ_KEY_BITREG: String = 'BitReg'
SZ_KEY_COPYINF: String = 'CopyINF'
SZ_KEY_LOGCONFIG: String = 'LogConfig'
SZ_KEY_ADDSERVICE: String = 'AddService'
SZ_KEY_DELSERVICE: String = 'DelService'
SZ_KEY_ADDTRIGGER: String = 'AddTrigger'
SZ_KEY_ADDINTERFACE: String = 'AddInterface'
SZ_KEY_ADDIME: String = 'AddIme'
SZ_KEY_DELIME: String = 'DelIme'
SZ_KEY_REGSVR: String = 'RegisterDlls'
SZ_KEY_UNREGSVR: String = 'UnregisterDlls'
SZ_KEY_PROFILEITEMS: String = 'ProfileItems'
SZ_KEY_MODULES: String = 'Modules'
SZ_KEY_DEFAULTOPTION: String = 'DefaultOption'
SZ_KEY_LISTOPTIONS: String = 'ListOptions'
SZ_KEY_CLEANONLY: String = 'CleanOnly'
SZ_KEY_UPGRADEONLY: String = 'UpgradeOnly'
SZ_KEY_EXCLUDEID: String = 'ExcludeId'
SZ_KEY_ADDPOWERSETTING: String = 'AddPowerSetting'
SZ_KEY_ADDPROP: String = 'AddProperty'
SZ_KEY_DELPROP: String = 'DelProperty'
SZ_KEY_FEATURESCORE: String = 'FeatureScore'
SZ_KEY_ADDEVENTPROVIDER: String = 'AddEventProvider'
SZ_KEY_ADDCHANNEL: String = 'AddChannel'
SZ_KEY_IMPORTCHANNEL: String = 'ImportChannel'
SZ_KEY_ADDAUTOLOGGER: String = 'AddAutoLogger'
SZ_KEY_UPDATEAUTOLOGGER: String = 'UpdateAutoLogger'
SZ_KEY_ADDAUTOLOGGERPROVIDER: String = 'AddAutoLoggerProvider'
SZ_KEY_ADDFILTER: String = 'AddFilter'
SZ_KEY_FILTERLEVEL: String = 'FilterLevel'
SZ_KEY_FILTERPOSITION: String = 'FilterPosition'
SZ_KEY_PHASE1: String = 'Phase1'
SZ_KEY_HARDWARE: String = 'Hardware'
INFSTR_KEY_CONFIGPRIORITY: String = 'ConfigPriority'
MAX_PRIORITYSTR_LEN: UInt32 = 16
INFSTR_CFGPRI_HARDWIRED: String = 'HARDWIRED'
INFSTR_CFGPRI_DESIRED: String = 'DESIRED'
INFSTR_CFGPRI_NORMAL: String = 'NORMAL'
INFSTR_CFGPRI_SUBOPTIMAL: String = 'SUBOPTIMAL'
INFSTR_CFGPRI_DISABLED: String = 'DISABLED'
INFSTR_CFGPRI_RESTART: String = 'RESTART'
INFSTR_CFGPRI_REBOOT: String = 'REBOOT'
INFSTR_CFGPRI_POWEROFF: String = 'POWEROFF'
INFSTR_CFGPRI_HARDRECONFIG: String = 'HARDRECONFIG'
INFSTR_CFGPRI_FORCECONFIG: String = 'FORCECONFIG'
INFSTR_CFGTYPE_BASIC: String = 'BASIC'
INFSTR_CFGTYPE_FORCED: String = 'FORCED'
INFSTR_CFGTYPE_OVERRIDE: String = 'OVERRIDE'
INFSTR_KEY_MEMCONFIG: String = 'MemConfig'
INFSTR_KEY_MEMLARGECONFIG: String = 'MemLargeConfig'
INFSTR_KEY_IOCONFIG: String = 'IOConfig'
INFSTR_KEY_IRQCONFIG: String = 'IRQConfig'
INFSTR_KEY_DMACONFIG: String = 'DMAConfig'
INFSTR_KEY_PCCARDCONFIG: String = 'PcCardConfig'
INFSTR_KEY_MFCARDCONFIG: String = 'MfCardConfig'
INFSTR_SECT_CLASS_INSTALL: String = 'ClassInstall'
INFSTR_SECT_CLASS_INSTALL_32: String = 'ClassInstall32'
INFSTR_SECT_DEFAULT_INSTALL: String = 'DefaultInstall'
INFSTR_SECT_DEFAULT_UNINSTALL: String = 'DefaultUninstall'
INFSTR_SECT_INTERFACE_INSTALL_32: String = 'InterfaceInstall32'
INFSTR_SECT_VERSION: String = 'Version'
INFSTR_KEY_PROVIDER: String = 'Provider'
INFSTR_KEY_SIGNATURE: String = 'Signature'
INFSTR_KEY_DRIVERSET: String = 'DriverSet'
MAX_INF_FLAG: UInt32 = 20
INFSTR_KEY_HARDWARE_CLASS: String = 'Class'
INFSTR_KEY_HARDWARE_CLASSGUID: String = 'ClassGUID'
INFSTR_KEY_NOSETUPINF: String = 'NoSetupInf'
INFSTR_KEY_FROMINET: String = 'FromINet'
INFSTR_KEY_CATALOGFILE: String = 'CatalogFile'
INFSTR_KEY_PNPLOCKDOWN: String = 'PnpLockDown'
INFSTR_KEY_EXTENSIONID: String = 'ExtensionId'
INFSTR_SECT_MFG: String = 'Manufacturer'
INFSTR_SECT_TARGETCOMPUTERS: String = 'TargetComputers'
INFSTR_SECT_EXTENSIONCONTRACTS: String = 'ExtensionContracts'
INFSTR_KEY_CLASS: String = 'Class'
INFSTR_KEY_CLASSGUID: String = 'ClassGUID'
INFSTR_RESTART: String = 'Restart'
INFSTR_REBOOT: String = 'Reboot'
INFSTR_KEY_DISPLAYNAME: String = 'DisplayName'
INFSTR_KEY_SERVICETYPE: String = 'ServiceType'
INFSTR_KEY_STARTTYPE: String = 'StartType'
INFSTR_KEY_ERRORCONTROL: String = 'ErrorControl'
INFSTR_KEY_SERVICEBINARY: String = 'ServiceBinary'
INFSTR_KEY_LOADORDERGROUP: String = 'LoadOrderGroup'
INFSTR_KEY_DEPENDENCIES: String = 'Dependencies'
INFSTR_KEY_REQUIREDPRIVILEGES: String = 'RequiredPrivileges'
INFSTR_KEY_STARTNAME: String = 'StartName'
INFSTR_KEY_SECURITY: String = 'Security'
INFSTR_KEY_DESCRIPTION: String = 'Description'
INFSTR_KEY_SERVICESIDTYPE: String = 'ServiceSidType'
INFSTR_KEY_DELAYEDAUTOSTART: String = 'DelayedAutoStart'
INFSTR_KEY_TRIGGER_TYPE: String = 'TriggerType'
INFSTR_KEY_ACTION: String = 'Action'
INFSTR_KEY_SUB_TYPE: String = 'SubType'
INFSTR_KEY_DATA_ITEM: String = 'DataItem'
INFSTR_KEY_PROVIDER_NAME: String = 'ProviderName'
INFSTR_KEY_RESOURCE_FILE: String = 'ResourceFile'
INFSTR_KEY_MESSAGE_FILE: String = 'MessageFile'
INFSTR_KEY_PARAMETER_FILE: String = 'ParameterFile'
INFSTR_KEY_CHANNEL_ACCESS: String = 'Access'
INFSTR_KEY_CHANNEL_ISOLATION: String = 'Isolation'
INFSTR_KEY_CHANNEL_ENABLED: String = 'Enabled'
INFSTR_KEY_CHANNEL_VALUE: String = 'Value'
INFSTR_KEY_LOGGING_MAXSIZE: String = 'LoggingMaxSize'
INFSTR_KEY_LOGGING_RETENTION: String = 'LoggingRetention'
INFSTR_KEY_LOGGING_AUTOBACKUP: String = 'LoggingAutoBackup'
INFSTR_KEY_START: String = 'Start'
INFSTR_KEY_BUFFER_SIZE: String = 'BufferSize'
INFSTR_KEY_CLOCK_TYPE: String = 'ClockType'
INFSTR_KEY_DISABLE_REALTIME_PERSISTENCE: String = 'DisableRealtimePersistence'
INFSTR_KEY_FILE_NAME: String = 'FileName'
INFSTR_KEY_FILE_MAX: String = 'FileMax'
INFSTR_KEY_FLUSH_TIMER: String = 'FlushTimer'
INFSTR_KEY_LOG_FILE_MODE: String = 'LogFileMode'
INFSTR_KEY_MAX_FILE_SIZE: String = 'MaxFileSize'
INFSTR_KEY_MAXIMUM_BUFFERS: String = 'MaximumBuffers'
INFSTR_KEY_MINIMUM_BUFFERS: String = 'MinimumBuffers'
INFSTR_KEY_ENABLED: String = 'Enabled'
INFSTR_KEY_ENABLE_FLAGS: String = 'EnableFlags'
INFSTR_KEY_ENABLE_LEVEL: String = 'EnableLevel'
INFSTR_KEY_ENABLE_PROPERTY: String = 'EnableProperty'
INFSTR_KEY_MATCH_ANY_KEYWORD: String = 'MatchAnyKeyword'
INFSTR_KEY_MATCH_ALL_KEYWORD: String = 'MatchAllKeyword'
INFSTR_SECT_DETMODULES: String = 'Det.Modules'
INFSTR_SECT_DETCLASSINFO: String = 'Det.ClassInfo'
INFSTR_SECT_MANUALDEV: String = 'Det.ManualDev'
INFSTR_SECT_AVOIDCFGSYSDEV: String = 'Det.AvoidCfgSysDev'
INFSTR_SECT_REGCFGSYSDEV: String = 'Det.RegCfgSysDev'
INFSTR_SECT_DEVINFS: String = 'Det.DevINFs'
INFSTR_SECT_AVOIDINIDEV: String = 'Det.AvoidIniDev'
INFSTR_SECT_AVOIDENVDEV: String = 'Det.AvoidEnvDev'
INFSTR_SECT_REGINIDEV: String = 'Det.RegIniDev'
INFSTR_SECT_REGENVDEV: String = 'Det.RegEnvDev'
INFSTR_SECT_HPOMNIBOOK: String = 'Det.HPOmnibook'
INFSTR_SECT_FORCEHWVERIFY: String = 'Det.ForceHWVerify'
INFSTR_SECT_DETOPTIONS: String = 'Det.Options'
INFSTR_SECT_BADPNPBIOS: String = 'BadPnpBios'
INFSTR_SECT_GOODACPIBIOS: String = 'GoodACPIBios'
INFSTR_SECT_BADACPIBIOS: String = 'BadACPIBios'
INFSTR_SECT_BADROUTINGTABLEBIOS: String = 'BadPCIIRQRoutingTableBios'
INFSTR_SECT_BADPMCALLBIOS: String = 'BadProtectedModeCallBios'
INFSTR_SECT_BADRMCALLBIOS: String = 'BadRealModeCallBios'
INFSTR_SECT_MACHINEIDBIOS: String = 'MachineIDBios'
INFSTR_SECT_BADDISKBIOS: String = 'BadDiskBios'
INFSTR_SECT_BADDSBIOS: String = 'BadDSBios'
INFSTR_KEY_DETPARAMS: String = 'Params'
INFSTR_KEY_SKIPLIST: String = 'SkipList'
INFSTR_KEY_DETECTLIST: String = 'DetectList'
INFSTR_KEY_EXCLUDERES: String = 'ExcludeRes'
INFSTR_SUBKEY_LOGCONFIG: String = 'LogConfig'
INFSTR_SUBKEY_DET: String = 'Det'
INFSTR_SUBKEY_FACTDEF: String = 'FactDef'
INFSTR_SUBKEY_POSSIBLEDUPS: String = 'PosDup'
INFSTR_SUBKEY_NORESOURCEDUPS: String = 'NoResDup'
INFSTR_SUBKEY_HW: String = 'Hw'
INFSTR_SUBKEY_CTL: String = 'CTL'
INFSTR_SUBKEY_SERVICES: String = 'Services'
INFSTR_SUBKEY_SOFTWARE: String = 'Software'
INFSTR_SUBKEY_INTERFACES: String = 'Interfaces'
INFSTR_SUBKEY_COINSTALLERS: String = 'CoInstallers'
INFSTR_SUBKEY_LOGCONFIGOVERRIDE: String = 'LogConfigOverride'
INFSTR_SUBKEY_WMI: String = 'WMI'
INFSTR_SUBKEY_EVENTS: String = 'Events'
INFSTR_SUBKEY_FILTERS: String = 'Filters'
INFSTR_CONTROLFLAGS_SECTION: String = 'ControlFlags'
INFSTR_KEY_COPYFILESONLY: String = 'CopyFilesOnly'
INFSTR_KEY_EXCLUDEFROMSELECT: String = 'ExcludeFromSelect'
INFSTR_KEY_ALWAYSEXCLUDEFROMSELECT: String = 'AlwaysExcludeFromSelect'
INFSTR_KEY_INTERACTIVEINSTALL: String = 'InteractiveInstall'
INFSTR_KEY_REQUESTADDITIONALSOFTWARE: String = 'RequestAdditionalSoftware'
INFSTR_PLATFORM_WIN: String = 'Win'
INFSTR_PLATFORM_NT: String = 'NT'
INFSTR_PLATFORM_NTX86: String = 'NTx86'
INFSTR_PLATFORM_NTMIPS: String = 'NTMIPS'
INFSTR_PLATFORM_NTALPHA: String = 'NTAlpha'
INFSTR_PLATFORM_NTPPC: String = 'NTPPC'
INFSTR_PLATFORM_NTIA64: String = 'NTIA64'
INFSTR_PLATFORM_NTAXP64: String = 'NTAXP64'
INFSTR_PLATFORM_NTAMD64: String = 'NTAMD64'
INFSTR_PLATFORM_NTARM: String = 'NTARM'
INFSTR_PLATFORM_NTARM64: String = 'NTARM64'
MAX_INFSTR_STRKEY_LEN: UInt32 = 32
INFSTR_STRKEY_DRVDESC: String = 'DriverDesc'
INFSTR_DRIVERSELECT_SECTION: String = 'DriverSelect'
INFSTR_DRIVERSELECT_FUNCTIONS: String = 'DriverSelectFunctions'
INFSTR_DRIVERVERSION_SECTION: String = 'DriverVer'
INFSTR_SOFTWAREVERSION_SECTION: String = 'SoftwareVersion'
INFSTR_SECT_CFGSYS: String = 'ConfigSysDrivers'
INFSTR_SECT_AUTOEXECBAT: String = 'AutoexecBatDrivers'
INFSTR_SECT_SYSINI: String = 'SystemIniDrivers'
INFSTR_SECT_SYSINIDRV: String = 'SystemIniDriversLine'
INFSTR_SECT_WININIRUN: String = 'WinIniRunLine'
INFSTR_KEY_PATH: String = 'Path'
INFSTR_KEY_NAME: String = 'Name'
INFSTR_KEY_IO: String = 'IO'
INFSTR_KEY_MEM: String = 'Mem'
INFSTR_KEY_IRQ: String = 'IRQ'
INFSTR_KEY_DMA: String = 'DMA'
INFSTR_BUS_ISA: String = 'BUS_ISA'
INFSTR_BUS_EISA: String = 'BUS_EISA'
INFSTR_BUS_MCA: String = 'BUS_MCA'
INFSTR_BUS_ALL: String = 'BUS_ALL'
INFSTR_RISK_NONE: String = 'RISK_NONE'
INFSTR_RISK_VERYLOW: String = 'RISK_VERYLOW'
INFSTR_RISK_BIOSROMRD: String = 'RISK_BIOSROMRD'
INFSTR_RISK_QUERYDRV: String = 'RISK_QUERYDRV'
INFSTR_RISK_SWINT: String = 'RISK_SWINT'
INFSTR_RISK_LOW: String = 'RISK_LOW'
INFSTR_RISK_DELICATE: String = 'RISK_DELICATE'
INFSTR_RISK_MEMRD: String = 'RISK_MEMRD'
INFSTR_RISK_IORD: String = 'RISK_IORD'
INFSTR_RISK_MEMWR: String = 'RISK_MEMWR'
INFSTR_RISK_IOWR: String = 'RISK_IOWR'
INFSTR_RISK_UNRELIABLE: String = 'RISK_UNRELIABLE'
INFSTR_RISK_VERYHIGH: String = 'RISK_VERYHIGH'
INFSTR_CLASS_SAFEEXCL: String = 'SAFE_EXCL'
INFSTR_SECT_DISPLAY_CLEANUP: String = 'DisplayCleanup'
GUID_HWPROFILE_QUERY_CHANGE: Guid = Guid('cb3a4001-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_HWPROFILE_CHANGE_CANCELLED: Guid = Guid('cb3a4002-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_HWPROFILE_CHANGE_COMPLETE: Guid = Guid('cb3a4003-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_DEVICE_INTERFACE_ARRIVAL: Guid = Guid('cb3a4004-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_DEVICE_INTERFACE_REMOVAL: Guid = Guid('cb3a4005-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_TARGET_DEVICE_QUERY_REMOVE: Guid = Guid('cb3a4006-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_TARGET_DEVICE_REMOVE_CANCELLED: Guid = Guid('cb3a4007-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_TARGET_DEVICE_REMOVE_COMPLETE: Guid = Guid('cb3a4008-46f0-11d0-b0-8f-00-60-97-13-05-3f')
GUID_PNP_CUSTOM_NOTIFICATION: Guid = Guid('aca73f8e-8d23-11d1-ac-7d-00-00-f8-75-71-d0')
GUID_PNP_POWER_NOTIFICATION: Guid = Guid('c2cf0660-eb7a-11d1-bd-7f-00-00-f8-75-71-d0')
GUID_PNP_POWER_SETTING_CHANGE: Guid = Guid('29c69b3e-c79a-43bf-bb-de-a9-32-fa-1b-ea-7e')
GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED: Guid = Guid('fcf528f6-a82f-47b1-ad-3a-80-50-59-4c-ad-28')
GUID_KERNEL_SOFT_RESTART_PREPARE: Guid = Guid('de373def-a85c-4f76-8c-bf-f9-6b-ea-8b-d1-0f')
GUID_KERNEL_SOFT_RESTART_CANCEL: Guid = Guid('31d737e7-8c0b-468a-95-6e-9f-43-3e-c3-58-fb')
GUID_RECOVERY_PCI_PREPARE_SHUTDOWN: Guid = Guid('90d889de-8704-44cf-81-15-ed-85-28-d2-b2-da')
GUID_RECOVERY_NVMED_PREPARE_SHUTDOWN: Guid = Guid('4b9770ea-bde7-400b-a9-b9-4f-68-4f-54-cc-2a')
GUID_KERNEL_SOFT_RESTART_FINALIZE: Guid = Guid('20e91abd-350a-4d4f-85-77-99-c8-15-07-47-3a')
GUID_BUS_INTERFACE_STANDARD: Guid = Guid('496b8280-6f25-11d0-be-af-08-00-2b-e2-09-2f')
GUID_PCI_BUS_INTERFACE_STANDARD: Guid = Guid('496b8281-6f25-11d0-be-af-08-00-2b-e2-09-2f')
GUID_PCI_BUS_INTERFACE_STANDARD2: Guid = Guid('de94e966-fdff-4c9c-99-98-67-47-b1-50-e7-4c')
GUID_ARBITER_INTERFACE_STANDARD: Guid = Guid('e644f185-8c0e-11d0-be-cf-08-00-2b-e2-09-2f')
GUID_TRANSLATOR_INTERFACE_STANDARD: Guid = Guid('6c154a92-aacf-11d0-8d-2a-00-a0-c9-06-b2-44')
GUID_ACPI_INTERFACE_STANDARD: Guid = Guid('b091a08a-ba97-11d0-bd-14-00-aa-00-b7-b3-2a')
GUID_INT_ROUTE_INTERFACE_STANDARD: Guid = Guid('70941bf4-0073-11d1-a0-9e-00-c0-4f-c3-40-b1')
GUID_PCMCIA_BUS_INTERFACE_STANDARD: Guid = Guid('76173af0-c504-11d1-94-7f-00-c0-4f-b9-60-ee')
GUID_ACPI_REGS_INTERFACE_STANDARD: Guid = Guid('06141966-7245-6369-46-2e-4e-65-6c-73-6f-6e')
GUID_LEGACY_DEVICE_DETECTION_STANDARD: Guid = Guid('50feb0de-596a-11d2-a5-b8-00-00-f8-1a-46-19')
GUID_PCI_DEVICE_PRESENT_INTERFACE: Guid = Guid('d1b82c26-bf49-45ef-b2-16-71-cb-d7-88-9b-57')
GUID_MF_ENUMERATION_INTERFACE: Guid = Guid('aeb895f0-5586-11d1-8d-84-00-a0-c9-06-b2-44')
GUID_REENUMERATE_SELF_INTERFACE_STANDARD: Guid = Guid('2aeb0243-6a6e-486b-82-fc-d8-15-f6-b9-70-06')
GUID_AGP_TARGET_BUS_INTERFACE_STANDARD: Guid = Guid('b15cfce8-06d1-4d37-9d-4c-be-dd-e0-c2-a6-ff')
GUID_ACPI_CMOS_INTERFACE_STANDARD: Guid = Guid('3a8d0384-6505-40ca-bc-39-56-c1-5f-8c-5f-ed')
GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD: Guid = Guid('f14f609b-cbbd-4957-a6-74-bc-00-21-3f-1c-97')
GUID_ACPI_INTERFACE_STANDARD2: Guid = Guid('e8695f63-1831-4870-a8-cf-9c-2f-03-f9-dc-b5')
GUID_PNP_LOCATION_INTERFACE: Guid = Guid('70211b0e-0afb-47db-af-c1-41-0b-f8-42-49-7a')
GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE: Guid = Guid('146cd41c-dae3-4437-8a-ff-2a-f3-f0-38-09-9b')
GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE: Guid = Guid('83a7734a-84c7-4161-9a-98-60-00-ed-0c-4a-33')
GUID_MSIX_TABLE_CONFIG_INTERFACE: Guid = Guid('1a6a460b-194f-455d-b3-4b-b8-4c-5b-05-71-2b')
GUID_D3COLD_SUPPORT_INTERFACE: Guid = Guid('b38290e5-3cd0-4f9d-99-37-f5-fe-2b-44-d4-7a')
GUID_PROCESSOR_PCC_INTERFACE_STANDARD: Guid = Guid('37b17e9a-c21c-4296-97-2d-11-c4-b3-2b-28-f0')
GUID_PCI_VIRTUALIZATION_INTERFACE: Guid = Guid('64897b47-3a4a-4d75-bc-74-89-dd-6c-07-82-93')
GUID_PCC_INTERFACE_STANDARD: Guid = Guid('3ee8ba63-0f59-4a24-8a-45-35-80-8b-dd-12-49')
GUID_PCC_INTERFACE_INTERNAL: Guid = Guid('7cce62ce-c189-4814-a6-a7-12-11-20-89-e9-38')
GUID_THERMAL_COOLING_INTERFACE: Guid = Guid('ecbe47a8-c498-4bb9-bd-70-e8-67-e0-94-0d-22')
GUID_DMA_CACHE_COHERENCY_INTERFACE: Guid = Guid('b520f7fa-8a5a-4e40-a3-f6-6b-e1-e1-62-d9-35')
GUID_DEVICE_RESET_INTERFACE_STANDARD: Guid = Guid('649fdf26-3bc0-4813-ad-24-7e-0c-1e-da-3f-a3')
GUID_IOMMU_BUS_INTERFACE: Guid = Guid('1efee0b2-d278-4ae4-bd-dc-1b-34-dd-64-80-43')
GUID_PCI_SECURITY_INTERFACE: Guid = Guid('6e7f1451-199e-4acc-ba-2d-76-2b-4e-df-46-74')
GUID_SCM_BUS_INTERFACE: Guid = Guid('25944783-ce79-4232-81-5e-4a-30-01-4e-8e-b4')
GUID_SECURE_DRIVER_INTERFACE: Guid = Guid('370f67e1-4ff5-4a94-9a-35-06-c5-d9-cc-30-e2')
GUID_SDEV_IDENTIFIER_INTERFACE: Guid = Guid('49d67af8-916c-4ee8-9d-f1-88-9f-17-d2-1e-91')
GUID_SCM_BUS_NVD_INTERFACE: Guid = Guid('8de064ff-b630-42e4-88-ea-6f-24-c8-64-11-75')
GUID_SCM_BUS_LD_INTERFACE: Guid = Guid('9b89307d-d76b-4f48-b1-86-54-04-1a-e9-2e-8d')
GUID_SCM_PHYSICAL_NVDIMM_INTERFACE: Guid = Guid('0079c21b-917e-405e-a9-ce-07-32-b5-bb-ce-bd')
GUID_PNP_EXTENDED_ADDRESS_INTERFACE: Guid = Guid('b8e992ec-a797-4dc4-88-46-84-d0-41-70-74-46')
GUID_D3COLD_AUX_POWER_AND_TIMING_INTERFACE: Guid = Guid('0044d8aa-f664-4588-9f-fc-2a-fe-af-59-50-b9')
GUID_PCI_FPGA_CONTROL_INTERFACE: Guid = Guid('2df3f7a8-b9b3-4063-92-15-b5-d1-4a-0b-26-6e')
GUID_PCI_PTM_CONTROL_INTERFACE: Guid = Guid('348a5ebb-ba24-44b7-99-16-28-56-87-73-51-17')
GUID_BUS_RESOURCE_UPDATE_INTERFACE: Guid = Guid('27d0102d-bfb2-4164-81-dd-db-b8-2f-96-8b-48')
GUID_NPEM_CONTROL_INTERFACE: Guid = Guid('4d95573d-b774-488a-b1-20-4f-28-4a-9e-ff-51')
GUID_PCI_ATS_INTERFACE: Guid = Guid('010a7fe8-96f5-4943-be-df-95-e6-51-b9-34-12')
GUID_BUS_TYPE_INTERNAL: Guid = Guid('1530ea73-086b-11d1-a0-9f-00-c0-4f-c3-40-b1')
GUID_BUS_TYPE_PCMCIA: Guid = Guid('09343630-af9f-11d0-92-e9-00-00-f8-1e-1b-30')
GUID_BUS_TYPE_PCI: Guid = Guid('c8ebdfb0-b510-11d0-80-e5-00-a0-c9-25-42-e3')
GUID_BUS_TYPE_ISAPNP: Guid = Guid('e676f854-d87d-11d0-92-b2-00-a0-c9-05-5f-c5')
GUID_BUS_TYPE_EISA: Guid = Guid('ddc35509-f3fc-11d0-a5-37-00-00-f8-75-3e-d1')
GUID_BUS_TYPE_MCA: Guid = Guid('1c75997a-dc33-11d0-92-b2-00-a0-c9-05-5f-c5')
GUID_BUS_TYPE_SERENUM: Guid = Guid('77114a87-8944-11d1-bd-90-00-a0-c9-06-be-2d')
GUID_BUS_TYPE_USB: Guid = Guid('9d7debbc-c85d-11d1-9e-b4-00-60-08-c3-a1-9a')
GUID_BUS_TYPE_LPTENUM: Guid = Guid('c4ca1000-2ddc-11d5-a1-7a-00-c0-4f-60-52-4d')
GUID_BUS_TYPE_USBPRINT: Guid = Guid('441ee000-4342-11d5-a1-84-00-c0-4f-60-52-4d')
GUID_BUS_TYPE_DOT4PRT: Guid = Guid('441ee001-4342-11d5-a1-84-00-c0-4f-60-52-4d')
GUID_BUS_TYPE_1394: Guid = Guid('f74e73eb-9ac5-45eb-be-4d-77-2c-c7-1d-df-b3')
GUID_BUS_TYPE_HID: Guid = Guid('eeaf37d0-1963-47c4-aa-48-72-47-6d-b7-cf-49')
GUID_BUS_TYPE_AVC: Guid = Guid('c06ff265-ae09-48f0-81-2c-16-75-3d-7c-ba-83')
GUID_BUS_TYPE_IRDA: Guid = Guid('7ae17dc1-c944-44d6-88-1f-4c-2e-61-05-3b-c1')
GUID_BUS_TYPE_SD: Guid = Guid('e700cc04-4036-4e89-95-79-89-eb-f4-5f-00-cd')
GUID_BUS_TYPE_ACPI: Guid = Guid('d7b46895-001a-4942-89-1f-a7-d4-66-10-a8-43')
GUID_BUS_TYPE_SW_DEVICE: Guid = Guid('06d10322-7de0-4cef-8e-25-19-7d-0e-74-42-e2')
GUID_BUS_TYPE_SCM: Guid = Guid('375a5912-804c-45aa-bd-c2-fd-d2-5a-1d-95-12')
GUID_POWER_DEVICE_ENABLE: Guid = Guid('827c0a6f-feb0-11d0-bd-26-00-aa-00-b7-b3-2a')
GUID_POWER_DEVICE_TIMEOUTS: Guid = Guid('a45da735-feb0-11d0-bd-26-00-aa-00-b7-b3-2a')
GUID_POWER_DEVICE_WAKE_ENABLE: Guid = Guid('a9546a82-feb0-11d0-bd-26-00-aa-00-b7-b3-2a')
GUID_WUDF_DEVICE_HOST_PROBLEM: Guid = Guid('c43d25bd-9346-40ee-a2-d2-d7-0c-15-f8-b7-5b')
GUID_PARTITION_UNIT_INTERFACE_STANDARD: Guid = Guid('52363f5b-d891-429b-81-95-ae-c5-fe-f6-85-3c')
GUID_QUERY_CRASHDUMP_FUNCTIONS: Guid = Guid('9cc6b8ff-32e2-4834-b1-de-b3-2e-f8-88-0a-4b')
@winfunctype('SETUPAPI.dll')
def SetupGetInfInformationA(InfSpec: c_void_p, SearchControl: UInt32, ReturnBuffer: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfInformationW(InfSpec: c_void_p, SearchControl: UInt32, ReturnBuffer: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfFileInformationA(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfFileInformationW(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfOriginalFileInformationA(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), OriginalFileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ORIGINAL_FILE_INFO_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfOriginalFileInformationW(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), OriginalFileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ORIGINAL_FILE_INFO_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfVersionInformationA(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, Key: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryInfVersionInformationW(InfInformation: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_INFORMATION_head), InfIndex: UInt32, Key: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfDriverStoreLocationA(FileName: Windows.Win32.Foundation.PSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), LocaleName: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfDriverStoreLocationW(FileName: Windows.Win32.Foundation.PWSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), LocaleName: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfPublishedNameA(DriverStoreLocation: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfPublishedNameW(DriverStoreLocation: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfFileListA(DirectoryPath: Windows.Win32.Foundation.PSTR, InfStyle: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetInfFileListW(DirectoryPath: Windows.Win32.Foundation.PWSTR, InfStyle: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenInfFileW(FileName: Windows.Win32.Foundation.PWSTR, InfClass: Windows.Win32.Foundation.PWSTR, InfStyle: UInt32, ErrorLine: POINTER(UInt32)) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenInfFileA(FileName: Windows.Win32.Foundation.PSTR, InfClass: Windows.Win32.Foundation.PSTR, InfStyle: UInt32, ErrorLine: POINTER(UInt32)) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenMasterInf() -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenAppendInfFileW(FileName: Windows.Win32.Foundation.PWSTR, InfHandle: c_void_p, ErrorLine: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenAppendInfFileA(FileName: Windows.Win32.Foundation.PSTR, InfHandle: c_void_p, ErrorLine: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseInfFile(InfHandle: c_void_p) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupFindFirstLineA(InfHandle: c_void_p, Section: Windows.Win32.Foundation.PSTR, Key: Windows.Win32.Foundation.PSTR, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindFirstLineW(InfHandle: c_void_p, Section: Windows.Win32.Foundation.PWSTR, Key: Windows.Win32.Foundation.PWSTR, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextLine(ContextIn: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), ContextOut: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextMatchLineA(ContextIn: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Key: Windows.Win32.Foundation.PSTR, ContextOut: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFindNextMatchLineW(ContextIn: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Key: Windows.Win32.Foundation.PWSTR, ContextOut: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineByIndexA(InfHandle: c_void_p, Section: Windows.Win32.Foundation.PSTR, Index: UInt32, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineByIndexW(InfHandle: c_void_p, Section: Windows.Win32.Foundation.PWSTR, Index: UInt32, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineCountA(InfHandle: c_void_p, Section: Windows.Win32.Foundation.PSTR) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineCountW(InfHandle: c_void_p, Section: Windows.Win32.Foundation.PWSTR) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineTextA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), InfHandle: c_void_p, Section: Windows.Win32.Foundation.PSTR, Key: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetLineTextW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), InfHandle: c_void_p, Section: Windows.Win32.Foundation.PWSTR, Key: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFieldCount(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetStringFieldA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetStringFieldW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetIntField(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, IntegerValue: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetMultiSzFieldA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetMultiSzFieldW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBinaryField(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FieldIndex: UInt32, ReturnBuffer: c_char_p_no, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoA(SourceFileName: Windows.Win32.Foundation.PSTR, ActualSourceFileName: POINTER(Windows.Win32.Foundation.PSTR), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoW(SourceFileName: Windows.Win32.Foundation.PWSTR, ActualSourceFileName: POINTER(Windows.Win32.Foundation.PWSTR), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoExA(SourceFileName: Windows.Win32.Foundation.PSTR, ActualSourceFileNameBuffer: Windows.Win32.Foundation.PSTR, ActualSourceFileNameBufferLen: UInt32, RequiredBufferLen: POINTER(UInt32), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileCompressionInfoExW(SourceFileName: Windows.Win32.Foundation.PWSTR, ActualSourceFileNameBuffer: Windows.Win32.Foundation.PWSTR, ActualSourceFileNameBufferLen: UInt32, RequiredBufferLen: POINTER(UInt32), SourceFileSize: POINTER(UInt32), TargetFileSize: POINTER(UInt32), CompressionType: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDecompressOrCopyFileA(SourceFileName: Windows.Win32.Foundation.PSTR, TargetFileName: Windows.Win32.Foundation.PSTR, CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDecompressOrCopyFileW(SourceFileName: Windows.Win32.Foundation.PWSTR, TargetFileName: Windows.Win32.Foundation.PWSTR, CompressionType: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileLocationA(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PSTR, SourceId: POINTER(UInt32), ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileLocationW(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PWSTR, SourceId: POINTER(UInt32), ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileSizeA(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PSTR, Section: Windows.Win32.Foundation.PSTR, FileSize: POINTER(UInt32), RoundingFactor: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceFileSizeW(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), FileName: Windows.Win32.Foundation.PWSTR, Section: Windows.Win32.Foundation.PWSTR, FileSize: POINTER(UInt32), RoundingFactor: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetTargetPathA(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Section: Windows.Win32.Foundation.PSTR, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetTargetPathW(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), Section: Windows.Win32.Foundation.PWSTR, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetSourceListA(Flags: UInt32, SourceList: POINTER(Windows.Win32.Foundation.PSTR), SourceCount: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetSourceListW(Flags: UInt32, SourceList: POINTER(Windows.Win32.Foundation.PWSTR), SourceCount: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCancelTemporarySourceList() -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToSourceListA(Flags: UInt32, Source: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToSourceListW(Flags: UInt32, Source: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromSourceListA(Flags: UInt32, Source: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromSourceListW(Flags: UInt32, Source: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySourceListA(Flags: UInt32, List: POINTER(POINTER(Windows.Win32.Foundation.PSTR)), Count: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySourceListW(Flags: UInt32, List: POINTER(POINTER(Windows.Win32.Foundation.PWSTR)), Count: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFreeSourceListA(List: POINTER(POINTER(Windows.Win32.Foundation.PSTR)), Count: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupFreeSourceListW(List: POINTER(POINTER(Windows.Win32.Foundation.PWSTR)), Count: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPromptForDiskA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, DiskName: Windows.Win32.Foundation.PSTR, PathToSource: Windows.Win32.Foundation.PSTR, FileSought: Windows.Win32.Foundation.PSTR, TagFile: Windows.Win32.Foundation.PSTR, DiskPromptStyle: UInt32, PathBuffer: Windows.Win32.Foundation.PSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupPromptForDiskW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, DiskName: Windows.Win32.Foundation.PWSTR, PathToSource: Windows.Win32.Foundation.PWSTR, FileSought: Windows.Win32.Foundation.PWSTR, TagFile: Windows.Win32.Foundation.PWSTR, DiskPromptStyle: UInt32, PathBuffer: Windows.Win32.Foundation.PWSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, DiskName: Windows.Win32.Foundation.PSTR, PathToSource: Windows.Win32.Foundation.PSTR, SourceFile: Windows.Win32.Foundation.PSTR, TargetPathFile: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32, PathBuffer: Windows.Win32.Foundation.PSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, DiskName: Windows.Win32.Foundation.PWSTR, PathToSource: Windows.Win32.Foundation.PWSTR, SourceFile: Windows.Win32.Foundation.PWSTR, TargetPathFile: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32, PathBuffer: Windows.Win32.Foundation.PWSTR, PathBufferSize: UInt32, PathRequiredSize: POINTER(UInt32)) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupRenameErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, SourceFile: Windows.Win32.Foundation.PSTR, TargetFile: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupRenameErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, SourceFile: Windows.Win32.Foundation.PWSTR, TargetFile: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDeleteErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, File: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDeleteErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, File: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupBackupErrorA(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PSTR, SourceFile: Windows.Win32.Foundation.PSTR, TargetFile: Windows.Win32.Foundation.PSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupBackupErrorW(hwndParent: Windows.Win32.Foundation.HWND, DialogTitle: Windows.Win32.Foundation.PWSTR, SourceFile: Windows.Win32.Foundation.PWSTR, TargetFile: Windows.Win32.Foundation.PWSTR, Win32ErrorCode: UInt32, Style: UInt32) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdA(InfHandle: c_void_p, Id: UInt32, Directory: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdW(InfHandle: c_void_p, Id: UInt32, Directory: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdExA(InfHandle: c_void_p, Id: UInt32, Directory: Windows.Win32.Foundation.PSTR, Flags: UInt32, Reserved1: UInt32, Reserved2: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetDirectoryIdExW(InfHandle: c_void_p, Id: UInt32, Directory: Windows.Win32.Foundation.PWSTR, Flags: UInt32, Reserved1: UInt32, Reserved2: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceInfoA(InfHandle: c_void_p, SourceId: UInt32, InfoDesired: UInt32, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetSourceInfoW(InfHandle: c_void_p, SourceId: UInt32, InfoDesired: UInt32, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileA(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PSTR, SourcePathRoot: Windows.Win32.Foundation.PSTR, DestinationName: Windows.Win32.Foundation.PSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileW(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PWSTR, SourcePathRoot: Windows.Win32.Foundation.PWSTR, DestinationName: Windows.Win32.Foundation.PWSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileExA(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PSTR, SourcePathRoot: Windows.Win32.Foundation.PSTR, DestinationName: Windows.Win32.Foundation.PSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: c_void_p, FileWasInUse: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFileExW(InfHandle: c_void_p, InfContext: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), SourceFile: Windows.Win32.Foundation.PWSTR, SourcePathRoot: Windows.Win32.Foundation.PWSTR, DestinationName: Windows.Win32.Foundation.PWSTR, CopyStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_COPY_STYLE, CopyMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: c_void_p, FileWasInUse: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenFileQueue() -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseFileQueue(QueueHandle: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueAlternatePlatformA(QueueHandle: c_void_p, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), AlternateDefaultCatalogFile: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueAlternatePlatformW(QueueHandle: c_void_p, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), AlternateDefaultCatalogFile: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetPlatformPathOverrideA(Override: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetPlatformPathOverrideW(Override: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyA(QueueHandle: c_void_p, SourceRootPath: Windows.Win32.Foundation.PSTR, SourcePath: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, SourceDescription: Windows.Win32.Foundation.PSTR, SourceTagfile: Windows.Win32.Foundation.PSTR, TargetDirectory: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyW(QueueHandle: c_void_p, SourceRootPath: Windows.Win32.Foundation.PWSTR, SourcePath: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, SourceDescription: Windows.Win32.Foundation.PWSTR, SourceTagfile: Windows.Win32.Foundation.PWSTR, TargetDirectory: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyIndirectA(CopyParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_FILE_COPY_PARAMS_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopyIndirectW(CopyParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_FILE_COPY_PARAMS_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDefaultCopyA(QueueHandle: c_void_p, InfHandle: c_void_p, SourceRootPath: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDefaultCopyW(QueueHandle: c_void_p, InfHandle: c_void_p, SourceRootPath: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopySectionA(QueueHandle: c_void_p, SourceRootPath: Windows.Win32.Foundation.PSTR, InfHandle: c_void_p, ListInfHandle: c_void_p, Section: Windows.Win32.Foundation.PSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueCopySectionW(QueueHandle: c_void_p, SourceRootPath: Windows.Win32.Foundation.PWSTR, InfHandle: c_void_p, ListInfHandle: c_void_p, Section: Windows.Win32.Foundation.PWSTR, CopyStyle: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteA(QueueHandle: c_void_p, PathPart1: Windows.Win32.Foundation.PSTR, PathPart2: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteW(QueueHandle: c_void_p, PathPart1: Windows.Win32.Foundation.PWSTR, PathPart2: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteSectionA(QueueHandle: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, Section: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueDeleteSectionW(QueueHandle: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, Section: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameA(QueueHandle: c_void_p, SourcePath: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, TargetPath: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameW(QueueHandle: c_void_p, SourcePath: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, TargetPath: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameSectionA(QueueHandle: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, Section: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueueRenameSectionW(QueueHandle: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, Section: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCommitFileQueueA(Owner: Windows.Win32.Foundation.HWND, QueueHandle: c_void_p, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCommitFileQueueW(Owner: Windows.Win32.Foundation.HWND, QueueHandle: c_void_p, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupScanFileQueueA(FileQueue: c_void_p, Flags: UInt32, Window: Windows.Win32.Foundation.HWND, CallbackRoutine: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, CallbackContext: c_void_p, Result: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupScanFileQueueW(FileQueue: c_void_p, Flags: UInt32, Window: Windows.Win32.Foundation.HWND, CallbackRoutine: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, CallbackContext: c_void_p, Result: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileQueueCount(FileQueue: c_void_p, SubQueueFileOp: UInt32, NumOperations: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetFileQueueFlags(FileQueue: c_void_p, Flags: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetFileQueueFlags(FileQueue: c_void_p, FlagMask: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyOEMInfA(SourceInfFileName: Windows.Win32.Foundation.PSTR, OEMSourceMediaLocation: Windows.Win32.Foundation.PSTR, OEMSourceMediaType: Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE, CopyStyle: UInt32, DestinationInfFileName: Windows.Win32.Foundation.PSTR, DestinationInfFileNameSize: UInt32, RequiredSize: POINTER(UInt32), DestinationInfFileNameComponent: POINTER(Windows.Win32.Foundation.PSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCopyOEMInfW(SourceInfFileName: Windows.Win32.Foundation.PWSTR, OEMSourceMediaLocation: Windows.Win32.Foundation.PWSTR, OEMSourceMediaType: Windows.Win32.Devices.DeviceAndDriverInstallation.OEM_SOURCE_MEDIA_TYPE, CopyStyle: UInt32, DestinationInfFileName: Windows.Win32.Foundation.PWSTR, DestinationInfFileNameSize: UInt32, RequiredSize: POINTER(UInt32), DestinationInfFileNameComponent: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupUninstallOEMInfA(InfFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupUninstallOEMInfW(InfFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupUninstallNewlyCopiedInfs(FileQueue: c_void_p, Flags: UInt32, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCreateDiskSpaceListA(Reserved1: c_void_p, Reserved2: UInt32, Flags: UInt32) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupCreateDiskSpaceListW(Reserved1: c_void_p, Reserved2: UInt32, Flags: UInt32) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupDuplicateDiskSpaceListA(DiskSpace: c_void_p, Reserved1: c_void_p, Reserved2: UInt32, Flags: UInt32) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupDuplicateDiskSpaceListW(DiskSpace: c_void_p, Reserved1: c_void_p, Reserved2: UInt32, Flags: UInt32) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupDestroyDiskSpaceList(DiskSpace: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryDrivesInDiskSpaceListA(DiskSpace: c_void_p, ReturnBuffer: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryDrivesInDiskSpaceListW(DiskSpace: c_void_p, ReturnBuffer: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySpaceRequiredOnDriveA(DiskSpace: c_void_p, DriveSpec: Windows.Win32.Foundation.PSTR, SpaceRequired: POINTER(Int64), Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQuerySpaceRequiredOnDriveW(DiskSpace: c_void_p, DriveSpec: Windows.Win32.Foundation.PWSTR, SpaceRequired: POINTER(Int64), Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAdjustDiskSpaceListA(DiskSpace: c_void_p, DriveRoot: Windows.Win32.Foundation.PSTR, Amount: Int64, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAdjustDiskSpaceListW(DiskSpace: c_void_p, DriveRoot: Windows.Win32.Foundation.PWSTR, Amount: Int64, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToDiskSpaceListA(DiskSpace: c_void_p, TargetFilespec: Windows.Win32.Foundation.PSTR, FileSize: Int64, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddToDiskSpaceListW(DiskSpace: c_void_p, TargetFilespec: Windows.Win32.Foundation.PWSTR, FileSize: Int64, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddSectionToDiskSpaceListA(DiskSpace: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddSectionToDiskSpaceListW(DiskSpace: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddInstallSectionToDiskSpaceListA(DiskSpace: c_void_p, InfHandle: c_void_p, LayoutInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupAddInstallSectionToDiskSpaceListW(DiskSpace: c_void_p, InfHandle: c_void_p, LayoutInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromDiskSpaceListA(DiskSpace: c_void_p, TargetFilespec: Windows.Win32.Foundation.PSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFromDiskSpaceListW(DiskSpace: c_void_p, TargetFilespec: Windows.Win32.Foundation.PWSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveSectionFromDiskSpaceListA(DiskSpace: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveSectionFromDiskSpaceListW(DiskSpace: c_void_p, InfHandle: c_void_p, ListInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Operation: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_FILE_OPERATION, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveInstallSectionFromDiskSpaceListA(DiskSpace: c_void_p, InfHandle: c_void_p, LayoutInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveInstallSectionFromDiskSpaceListW(DiskSpace: c_void_p, InfHandle: c_void_p, LayoutInfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Reserved1: c_void_p, Reserved2: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupIterateCabinetA(CabinetFile: Windows.Win32.Foundation.PSTR, Reserved: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupIterateCabinetW(CabinetFile: Windows.Win32.Foundation.PWSTR, Reserved: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPromptReboot(FileQueue: c_void_p, Owner: Windows.Win32.Foundation.HWND, ScanOnly: Windows.Win32.Foundation.BOOL) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupInitDefaultQueueCallback(OwnerWindow: Windows.Win32.Foundation.HWND) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupInitDefaultQueueCallbackEx(OwnerWindow: Windows.Win32.Foundation.HWND, AlternateProgressWindow: Windows.Win32.Foundation.HWND, ProgressMessage: UInt32, Reserved1: UInt32, Reserved2: c_void_p) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupTermDefaultQueueCallback(Context: c_void_p) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupDefaultQueueCallbackA(Context: c_void_p, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupDefaultQueueCallbackW(Context: c_void_p, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFromInfSectionA(Owner: Windows.Win32.Foundation.HWND, InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32, RelativeKeyRoot: Windows.Win32.System.Registry.HKEY, SourceRootPath: Windows.Win32.Foundation.PSTR, CopyFlags: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A, Context: c_void_p, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFromInfSectionW(Owner: Windows.Win32.Foundation.HWND, InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, RelativeKeyRoot: Windows.Win32.System.Registry.HKEY, SourceRootPath: Windows.Win32.Foundation.PWSTR, CopyFlags: UInt32, MsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_W, Context: c_void_p, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFilesFromInfSectionA(InfHandle: c_void_p, LayoutInfHandle: c_void_p, FileQueue: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, SourceRootPath: Windows.Win32.Foundation.PSTR, CopyFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallFilesFromInfSectionW(InfHandle: c_void_p, LayoutInfHandle: c_void_p, FileQueue: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, SourceRootPath: Windows.Win32.Foundation.PWSTR, CopyFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionA(InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionW(InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionExA(InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Reserved1: c_void_p, Reserved2: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupInstallServicesFromInfSectionExW(InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Reserved1: c_void_p, Reserved2: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def InstallHinfSectionA(Window: Windows.Win32.Foundation.HWND, ModuleHandle: Windows.Win32.Foundation.HINSTANCE, CommandLine: Windows.Win32.Foundation.PSTR, ShowCommand: Int32) -> Void: ...
@winfunctype('SETUPAPI.dll')
def InstallHinfSectionW(Window: Windows.Win32.Foundation.HWND, ModuleHandle: Windows.Win32.Foundation.HINSTANCE, CommandLine: Windows.Win32.Foundation.PWSTR, ShowCommand: Int32) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupInitializeFileLogA(LogFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupInitializeFileLogW(LogFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> c_void_p: ...
@winfunctype('SETUPAPI.dll')
def SetupTerminateFileLog(FileLogHandle: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogFileA(FileLogHandle: c_void_p, LogSectionName: Windows.Win32.Foundation.PSTR, SourceFilename: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, Checksum: UInt32, DiskTagfile: Windows.Win32.Foundation.PSTR, DiskDescription: Windows.Win32.Foundation.PSTR, OtherInfo: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogFileW(FileLogHandle: c_void_p, LogSectionName: Windows.Win32.Foundation.PWSTR, SourceFilename: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, Checksum: UInt32, DiskTagfile: Windows.Win32.Foundation.PWSTR, DiskDescription: Windows.Win32.Foundation.PWSTR, OtherInfo: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFileLogEntryA(FileLogHandle: c_void_p, LogSectionName: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupRemoveFileLogEntryW(FileLogHandle: c_void_p, LogSectionName: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryFileLogA(FileLogHandle: c_void_p, LogSectionName: Windows.Win32.Foundation.PSTR, TargetFilename: Windows.Win32.Foundation.PSTR, DesiredInfo: Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo, DataOut: Windows.Win32.Foundation.PSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupQueryFileLogW(FileLogHandle: c_void_p, LogSectionName: Windows.Win32.Foundation.PWSTR, TargetFilename: Windows.Win32.Foundation.PWSTR, DesiredInfo: Windows.Win32.Devices.DeviceAndDriverInstallation.SetupFileLogInfo, DataOut: Windows.Win32.Foundation.PWSTR, ReturnBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupOpenLog(Erase: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogErrorA(MessageString: Windows.Win32.Foundation.PSTR, Severity: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupLogErrorW(MessageString: Windows.Win32.Foundation.PWSTR, Severity: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupCloseLog() -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupGetThreadLogToken() -> UInt64: ...
@winfunctype('SETUPAPI.dll')
def SetupSetThreadLogToken(LogToken: UInt64) -> Void: ...
@cfunctype('SETUPAPI.dll')
def SetupWriteTextLog(LogToken: UInt64, Category: UInt32, Flags: UInt32, MessageStr: Windows.Win32.Foundation.PSTR) -> Void: ...
@cfunctype('SETUPAPI.dll')
def SetupWriteTextLogError(LogToken: UInt64, Category: UInt32, LogFlags: UInt32, Error: UInt32, MessageStr: Windows.Win32.Foundation.PSTR) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupWriteTextLogInfLine(LogToken: UInt64, Flags: UInt32, InfHandle: c_void_p, Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head)) -> Void: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBackupInformationA(QueueHandle: c_void_p, BackupParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_BACKUP_QUEUE_PARAMS_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetBackupInformationW(QueueHandle: c_void_p, BackupParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_BACKUP_QUEUE_PARAMS_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPrepareQueueForRestoreA(QueueHandle: c_void_p, BackupPath: Windows.Win32.Foundation.PSTR, RestoreFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupPrepareQueueForRestoreW(QueueHandle: c_void_p, BackupPath: Windows.Win32.Foundation.PWSTR, RestoreFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupSetNonInteractiveMode(NonInteractiveFlag: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupGetNonInteractiveMode() -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoList(ClassGuid: POINTER(Guid), hwndParent: Windows.Win32.Foundation.HWND) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoListExA(ClassGuid: POINTER(Guid), hwndParent: Windows.Win32.Foundation.HWND, MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoListExW(ClassGuid: POINTER(Guid), hwndParent: Windows.Win32.Foundation.HWND, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListClass(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, ClassGuid: POINTER(Guid)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListDetailA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoSetDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_LIST_DETAIL_DATA_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInfoListDetailW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoSetDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_LIST_DETAIL_DATA_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceName: Windows.Win32.Foundation.PSTR, ClassGuid: POINTER(Guid), DeviceDescription: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, CreationFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInfoW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceName: Windows.Win32.Foundation.PWSTR, ClassGuid: POINTER(Guid), DeviceDescription: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, CreationFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInfoA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInstanceId: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, OpenFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInfoW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInstanceId: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, OpenFlags: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstanceIdA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstanceId: Windows.Win32.Foundation.PSTR, DeviceInstanceIdSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstanceIdW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstanceId: Windows.Win32.Foundation.PWSTR, DeviceInstanceIdSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInfo(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDeviceInfo(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MemberIndex: UInt32, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyDeviceInfoList(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDeviceInterfaces(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InterfaceClassGuid: POINTER(Guid), MemberIndex: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InterfaceClassGuid: POINTER(Guid), ReferenceString: Windows.Win32.Foundation.PSTR, CreationFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InterfaceClassGuid: POINTER(Guid), ReferenceString: Windows.Win32.Foundation.PWSTR, CreationFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DevicePath: Windows.Win32.Foundation.PSTR, OpenFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DevicePath: Windows.Win32.Foundation.PWSTR, OpenFlags: UInt32, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceAlias(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), AliasInterfaceClassGuid: POINTER(Guid), AliasDeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInterfaceData(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRemoveDeviceInterface(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceDetailA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), DeviceInterfaceDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DETAIL_DATA_A_head), DeviceInterfaceDetailDataSize: UInt32, RequiredSize: POINTER(UInt32), DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfaceDetailW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), DeviceInterfaceDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DETAIL_DATA_W_head), DeviceInterfaceDetailDataSize: UInt32, RequiredSize: POINTER(UInt32), DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDeviceInterfaces(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInterfaceDefault(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Flags: UInt32, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRegisterDeviceInfo(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Flags: UInt32, CompareProc: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_DETSIG_CMPPROC, CompareContext: c_void_p, DupDeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildDriverInfoList(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: Windows.Win32.Devices.DeviceAndDriverInstallation.SETUP_DI_BUILD_DRIVER_DRIVER_TYPE) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCancelDriverInfoSearch(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDriverInfoA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: UInt32, MemberIndex: UInt32, DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiEnumDriverInfoW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: UInt32, MemberIndex: UInt32, DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDriverA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDriverW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDriverA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDriverW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInfoDetailA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head), DriverInfoDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DETAIL_DATA_A_head), DriverInfoDetailDataSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInfoDetailW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head), DriverInfoDetailData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DETAIL_DATA_W_head), DriverInfoDetailDataSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyDriverInfoList(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsA(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsW(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsExA(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevsExW(ClassGuid: POINTER(Guid), Enumerator: Windows.Win32.Foundation.PWSTR, hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetINFClassA(InfName: Windows.Win32.Foundation.PSTR, ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetINFClassW(InfName: Windows.Win32.Foundation.PWSTR, ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoList(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoListExA(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiBuildClassInfoListExW(Flags: UInt32, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionA(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionW(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PWSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionExA(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDescriptionExW(ClassGuid: POINTER(Guid), ClassDescription: Windows.Win32.Foundation.PWSTR, ClassDescriptionSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCallClassInstaller(InstallFunction: UInt32, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectBestCompatDrv(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallDriverFiles(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRegisterCoDeviceInstallers(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRemoveDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiUnremoveDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiRestartDevices(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiChangeState(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassA(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32, FileQueue: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassW(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, FileQueue: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassExA(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PSTR, Flags: UInt32, FileQueue: c_void_p, InterfaceClassGuid: POINTER(Guid), Reserved1: c_void_p, Reserved2: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiInstallClassExW(hwndParent: Windows.Win32.Foundation.HWND, InfFileName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, FileQueue: c_void_p, InterfaceClassGuid: POINTER(Guid), Reserved1: c_void_p, Reserved2: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKey(ClassGuid: POINTER(Guid), samDesired: UInt32) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKeyExA(ClassGuid: POINTER(Guid), samDesired: UInt32, Flags: UInt32, MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenClassRegKeyExW(ClassGuid: POINTER(Guid), samDesired: UInt32, Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceRegKeyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32, samDesired: UInt32, InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDeviceInterfaceRegKeyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32, samDesired: UInt32, InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDeviceInterfaceRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32, samDesired: UInt32) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDeviceInterfaceRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), Reserved: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDevRegKeyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiCreateDevRegKeyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiOpenDevRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32, samDesired: UInt32) -> Windows.Win32.System.Registry.HKEY: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDeleteDevRegKey(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Scope: UInt32, HwProfile: UInt32, KeyType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileList(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileListExA(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileListExW(HwProfileList: POINTER(UInt32), HwProfileListSize: UInt32, RequiredSize: POINTER(UInt32), CurrentlyActiveIndex: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDevicePropertyKeys(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDevicePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDevicePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfacePropertyKeys(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInterfacePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInterfacePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInterfaceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVICE_INTERFACE_DATA_head), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyKeys(ClassGuid: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyKeysExW(ClassGuid: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: UInt32, RequiredPropertyKeyCount: POINTER(UInt32), Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassPropertyExW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassPropertyW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassPropertyExW(ClassGuid: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, Flags: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceRegistryPropertyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceRegistryPropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassRegistryPropertyA(ClassGuid: POINTER(Guid), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassRegistryPropertyW(ClassGuid: POINTER(Guid), Property: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceRegistryPropertyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceRegistryPropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Property: UInt32, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassRegistryPropertyA(ClassGuid: POINTER(Guid), Property: UInt32, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassRegistryPropertyW(ClassGuid: POINTER(Guid), Property: UInt32, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDeviceInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDeviceInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DeviceInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINSTALL_PARAMS_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetClassInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ClassInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER_head), ClassInstallParamsSize: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetDriverInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDriverInstallParamsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetDriverInstallParamsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_W_head), DriverInstallParams: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINSTALL_PARAMS_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiLoadClassIcon(ClassGuid: POINTER(Guid), LargeIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON), MiniIconIndex: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiLoadDeviceIcon(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), cxIcon: UInt32, cyIcon: UInt32, Flags: UInt32, hIcon: POINTER(Windows.Win32.UI.WindowsAndMessaging.HICON)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDrawMiniIcon(hdc: Windows.Win32.Graphics.Gdi.HDC, rc: Windows.Win32.Foundation.RECT, MiniIconIndex: Int32, Flags: UInt32) -> Int32: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassBitmapIndex(ClassGuid: POINTER(Guid), MiniIconIndex: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageList(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageListExA(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageListExW(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassImageIndex(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head), ClassGuid: POINTER(Guid), ImageIndex: POINTER(Int32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiDestroyClassImageList(ClassImageListData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSIMAGELIST_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevPropertySheetsA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertySheetHeader: POINTER(Windows.Win32.UI.Controls.PROPSHEETHEADERA_V2_head), PropertySheetHeaderPageListSize: UInt32, RequiredSize: POINTER(UInt32), PropertySheetType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetClassDevPropertySheetsW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), PropertySheetHeader: POINTER(Windows.Win32.UI.Controls.PROPSHEETHEADERW_V2_head), PropertySheetHeaderPageListSize: UInt32, RequiredSize: POINTER(UInt32), PropertySheetType: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiAskForOEMDisk(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSelectOEMDrv(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidA(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidW(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidExA(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassNameFromGuidExW(ClassGuid: POINTER(Guid), ClassName: Windows.Win32.Foundation.PWSTR, ClassNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameA(ClassName: Windows.Win32.Foundation.PSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameW(ClassName: Windows.Win32.Foundation.PWSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameExA(ClassName: Windows.Win32.Foundation.PSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiClassGuidsFromNameExW(ClassName: Windows.Win32.Foundation.PWSTR, ClassGuidList: POINTER(Guid), ClassGuidListSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameA(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameW(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PWSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameExA(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetHwProfileFriendlyNameExW(HwProfile: UInt32, FriendlyName: Windows.Win32.Foundation.PWSTR, FriendlyNameSize: UInt32, RequiredSize: POINTER(UInt32), MachineName: Windows.Win32.Foundation.PWSTR, Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetWizardPage(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), InstallWizardData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INSTALLWIZARD_DATA_head), PageType: UInt32, Flags: UInt32) -> Windows.Win32.UI.Controls.HPROPSHEETPAGE: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetSelectedDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiSetSelectedDevice(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualModelsSectionA(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualModelsSectionW(Context: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.INFCONTEXT_head), AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallA(InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PSTR, InfSectionWithExt: Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallW(InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PWSTR, InfSectionWithExt: Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallExA(InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PSTR), Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetActualSectionToInstallExW(InfHandle: c_void_p, InfSectionName: Windows.Win32.Foundation.PWSTR, AlternatePlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSectionWithExt: Windows.Win32.Foundation.PWSTR, InfSectionWithExtSize: UInt32, RequiredSize: POINTER(UInt32), Extension: POINTER(Windows.Win32.Foundation.PWSTR), Reserved: c_void_p) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupEnumInfSectionsA(InfHandle: c_void_p, Index: UInt32, Buffer: Windows.Win32.Foundation.PSTR, Size: UInt32, SizeNeeded: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupEnumInfSectionsW(InfHandle: c_void_p, Index: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, Size: UInt32, SizeNeeded: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupVerifyInfFileA(InfName: Windows.Win32.Foundation.PSTR, AltPlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSignerInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_SIGNER_INFO_V2_A_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupVerifyInfFileW(InfName: Windows.Win32.Foundation.PWSTR, AltPlatformInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_ALTPLATFORM_INFO_V2_head), InfSignerInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_SIGNER_INFO_V2_W_head)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetCustomDevicePropertyA(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), CustomPropertyName: Windows.Win32.Foundation.PSTR, Flags: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupDiGetCustomDevicePropertyW(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), CustomPropertyName: Windows.Win32.Foundation.PWSTR, Flags: UInt32, PropertyRegDataType: POINTER(UInt32), PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, RequiredSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupConfigureWmiFromInfSectionA(InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SETUPAPI.dll')
def SetupConfigureWmiFromInfSectionW(InfHandle: c_void_p, SectionName: Windows.Win32.Foundation.PWSTR, Flags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Empty_Log_Conf(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, Priority: Windows.Win32.Data.HtmlHelp.PRIORITY, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Empty_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, Priority: Windows.Win32.Data.HtmlHelp.PRIORITY, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_IDA(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_IDW(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_ID_ExA(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_ID_ExW(dnDevInst: UInt32, pszID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Range(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Res_Des(prdResDes: POINTER(UIntPtr), lcLogConf: UIntPtr, ResourceID: UInt32, ResourceData: c_void_p, ResourceLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Add_Res_Des_Ex(prdResDes: POINTER(UIntPtr), lcLogConf: UIntPtr, ResourceID: UInt32, ResourceData: c_void_p, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Connect_MachineA(UNCServerName: Windows.Win32.Foundation.PSTR, phMachine: POINTER(IntPtr)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Connect_MachineW(UNCServerName: Windows.Win32.Foundation.PWSTR, phMachine: POINTER(IntPtr)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNodeA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, dnParent: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNodeW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, dnParent: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNode_ExA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, dnParent: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_DevNode_ExW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, dnParent: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Create_Range_List(prlh: POINTER(UIntPtr), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Class_Key(ClassGuid: POINTER(Guid), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Class_Key_Ex(ClassGuid: POINTER(Guid), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_DevNode_Key(dnDevNode: UInt32, ulHardwareProfile: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_DevNode_Key_Ex(dnDevNode: UInt32, ulHardwareProfile: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Range(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Detect_Resource_Conflict(dnDevInst: UInt32, ResourceID: UInt32, ResourceData: c_void_p, ResourceLen: UInt32, pbConflictDetected: POINTER(Windows.Win32.Foundation.BOOL), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Detect_Resource_Conflict_Ex(dnDevInst: UInt32, ResourceID: UInt32, ResourceData: c_void_p, ResourceLen: UInt32, pbConflictDetected: POINTER(Windows.Win32.Foundation.BOOL), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disable_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disable_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Disconnect_Machine(hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Dup_Range_List(rlhOld: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enable_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enable_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Classes(ulClassIndex: UInt32, ClassGuid: POINTER(Guid), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Classes_Ex(ulClassIndex: UInt32, ClassGuid: POINTER(Guid), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_EnumeratorsA(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_EnumeratorsW(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Enumerators_ExA(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Enumerate_Enumerators_ExW(ulEnumIndex: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Find_Range(pullStart: POINTER(UInt64), ullStart: UInt64, ulLength: UInt32, ullAlignment: UInt64, ullEnd: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_First_Range(rlh: UIntPtr, pullStart: POINTER(UInt64), pullEnd: POINTER(UInt64), preElement: POINTER(UIntPtr), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf(lcLogConfToBeFreed: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf_Ex(lcLogConfToBeFreed: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Log_Conf_Handle(lcLogConf: UIntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Range_List(rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Res_Des_Handle(rdResDes: UIntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Child(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Child_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_NameA(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_NameW(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Name_ExA(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Name_ExW(ClassGuid: POINTER(Guid), Buffer: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_NameA(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_NameW(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_Name_ExA(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Key_Name_ExW(ClassGuid: POINTER(Guid), pszKeyName: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Depth(pulDepth: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Depth_Ex(pulDepth: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_IDA(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_IDW(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ExA(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ExW(dnDevInst: UInt32, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ListA(pszFilter: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_ListW(pszFilter: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_ExA(pszFilter: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_ExW(pszFilter: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_SizeA(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_SizeW(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_Size_ExA(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_List_Size_ExW(pulLen: POINTER(UInt32), pszFilter: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_Size(pulLen: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_ID_Size_Ex(pulLen: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_PropertyW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_ExW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_Keys(dnDevInst: UInt32, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Property_Keys_Ex(dnDevInst: UInt32, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_PropertyA(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_PropertyW(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_Property_ExA(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Registry_Property_ExW(dnDevInst: UInt32, ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_PropertyA(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PSTR, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_PropertyW(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PWSTR, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_Property_ExA(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PSTR, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Custom_Property_ExW(dnDevInst: UInt32, pszCustomPropertyName: Windows.Win32.Foundation.PWSTR, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Status(pulStatus: POINTER(UInt32), pulProblemNumber: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_DevNode_Status_Ex(pulStatus: POINTER(UInt32), pulProblemNumber: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_First_Log_Conf(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_First_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Global_State(pulState: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Global_State_Ex(pulState: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_InfoA(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWProfileInfo_sA_head), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_Info_ExA(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWProfileInfo_sA_head), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_InfoW(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_W_head), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Hardware_Profile_Info_ExW(ulIndex: UInt32, pHWProfileInfo: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.HWPROFILEINFO_W_head), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_FlagsA(pDeviceID: Windows.Win32.Foundation.PSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_FlagsW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_Flags_ExA(pDeviceID: Windows.Win32.Foundation.PSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_HW_Prof_Flags_ExW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulHardwareProfile: UInt32, pulValue: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_AliasA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_AliasW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Alias_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Alias_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, AliasInterfaceGuid: POINTER(Guid), pszAliasDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_ListA(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_ListW(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_ExA(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, Buffer: Windows.Win32.Foundation.PSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_ExW(InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, Buffer: Windows.Win32.Foundation.PWSTR, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_SizeA(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_SizeW(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_Size_ExA(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_List_Size_ExW(pulLen: POINTER(UInt32), InterfaceClassGuid: POINTER(Guid), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_PropertyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_KeysW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Device_Interface_Property_Keys_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Log_Conf_Priority(lcLogConf: UIntPtr, pPriority: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Log_Conf_Priority_Ex(lcLogConf: UIntPtr, pPriority: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Log_Conf(plcLogConf: POINTER(UIntPtr), lcLogConf: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Log_Conf_Ex(plcLogConf: POINTER(UIntPtr), lcLogConf: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Parent(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Parent_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data(rdResDes: UIntPtr, Buffer: c_void_p, BufferLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Ex(rdResDes: UIntPtr, Buffer: c_void_p, BufferLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Size(pulSize: POINTER(UInt32), rdResDes: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Res_Des_Data_Size_Ex(pulSize: POINTER(UInt32), rdResDes: UIntPtr, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Sibling(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Sibling_Ex(pdnDevInst: POINTER(UInt32), dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Version() -> UInt16: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Version_Ex(hMachine: IntPtr) -> UInt16: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Version_Available(wVersion: UInt16) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Version_Available_Ex(wVersion: UInt16, hMachine: IntPtr) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('CFGMGR32.dll')
def CM_Intersect_Range_List(rlhOld1: UIntPtr, rlhOld2: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Invert_Range_List(rlhOld: UIntPtr, rlhNew: UIntPtr, ullMaxValue: UInt64, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNodeA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNodeW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNode_ExA(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Locate_DevNode_ExW(pdnDevInst: POINTER(UInt32), pDeviceID: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Merge_Range_List(rlhOld1: UIntPtr, rlhOld2: UIntPtr, rlhNew: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Modify_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ResourceID: UInt32, ResourceData: c_void_p, ResourceLen: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Modify_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ResourceID: UInt32, ResourceData: c_void_p, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Move_DevNode(dnFromDevInst: UInt32, dnToDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Move_DevNode_Ex(dnFromDevInst: UInt32, dnToDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Next_Range(preElement: POINTER(UIntPtr), pullStart: POINTER(UInt64), pullEnd: POINTER(UInt64), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Res_Des(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ForResource: UInt32, pResourceID: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Next_Res_Des_Ex(prdResDes: POINTER(UIntPtr), rdResDes: UIntPtr, ForResource: UInt32, pResourceID: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_KeyA(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_KeyW(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_Key_ExA(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Class_Key_ExW(ClassGuid: POINTER(Guid), pszClassName: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkClass: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_DevNode_Key(dnDevNode: UInt32, samDesired: UInt32, ulHardwareProfile: UInt32, Disposition: UInt32, phkDevice: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_DevNode_Key_Ex(dnDevNode: UInt32, samDesired: UInt32, ulHardwareProfile: UInt32, Disposition: UInt32, phkDevice: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_KeyA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_KeyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_Key_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Open_Device_Interface_Key_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, samDesired: UInt32, Disposition: UInt32, phkDeviceInterface: POINTER(Windows.Win32.System.Registry.HKEY), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_KeyA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_KeyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_Key_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Delete_Device_Interface_Key_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Data(pData: c_void_p, DataLen: UInt32, dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Data_Ex(pData: c_void_p, DataLen: UInt32, dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Size(pulSize: POINTER(UInt32), dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Arbitrator_Free_Size_Ex(pulSize: POINTER(UInt32), dnDevInst: UInt32, ResourceID: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Remove_SubTree(dnAncestor: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Remove_SubTree_Ex(dnAncestor: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTreeA(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTreeW(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTree_ExA(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_And_Remove_SubTree_ExW(dnAncestor: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_EjectA(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_Eject_ExA(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_EjectW(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Device_Eject_ExW(dnDevInst: UInt32, pVetoType: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.PNP_VETO_TYPE), pszVetoName: Windows.Win32.Foundation.PWSTR, ulNameLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Reenumerate_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Reenumerate_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_InterfaceA(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PSTR, pszDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_InterfaceW(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PWSTR, pszDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Interface_ExA(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PSTR, pszDeviceInterface: Windows.Win32.Foundation.PSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Interface_ExW(dnDevInst: UInt32, InterfaceClassGuid: POINTER(Guid), pszReference: Windows.Win32.Foundation.PWSTR, pszDeviceInterface: Windows.Win32.Foundation.PWSTR, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Problem_Ex(dnDevInst: UInt32, ulProblem: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Problem(dnDevInst: UInt32, ulProblem: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_InterfaceA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_InterfaceW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_Interface_ExA(pszDeviceInterface: Windows.Win32.Foundation.PSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Device_Interface_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Driver(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Device_Driver_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Remove_SubTree(dnAncestor: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Remove_SubTree_Ex(dnAncestor: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_PropertyW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Property_ExW(dnDevInst: UInt32, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_PropertyA(dnDevInst: UInt32, ulProperty: UInt32, Buffer: c_void_p, ulLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_PropertyW(dnDevInst: UInt32, ulProperty: UInt32, Buffer: c_void_p, ulLength: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_Property_ExA(dnDevInst: UInt32, ulProperty: UInt32, Buffer: c_void_p, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_DevNode_Registry_Property_ExW(dnDevInst: UInt32, ulProperty: UInt32, Buffer: c_void_p, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Device_Interface_PropertyW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Device_Interface_Property_ExW(pszDeviceInterface: Windows.Win32.Foundation.PWSTR, PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Dock_Station_Present(pbPresent: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Is_Dock_Station_Present_Ex(pbPresent: POINTER(Windows.Win32.Foundation.BOOL), hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Eject_PC() -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Request_Eject_PC_Ex(hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_FlagsA(pDeviceID: Windows.Win32.Foundation.PSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_FlagsW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Flags_ExA(pDeviceID: Windows.Win32.Foundation.PSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Flags_ExW(pDeviceID: Windows.Win32.Foundation.PWSTR, ulConfig: UInt32, ulValue: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Setup_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Setup_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Test_Range_Available(ullStartValue: UInt64, ullEndValue: UInt64, rlh: UIntPtr, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Uninstall_DevNode(dnDevInst: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Uninstall_DevNode_Ex(dnDevInst: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Run_Detection(ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Run_Detection_Ex(ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof(ulHardwareProfile: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_HW_Prof_Ex(ulHardwareProfile: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Query_Resource_Conflict_List(pclConflictList: POINTER(UIntPtr), dnDevInst: UInt32, ResourceID: UInt32, ResourceData: c_void_p, ResourceLen: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Free_Resource_Conflict_Handle(clConflictList: UIntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_Count(clConflictList: UIntPtr, pulCount: POINTER(UInt32)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_DetailsA(clConflictList: UIntPtr, ulIndex: UInt32, pConflictDetails: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CONFLICT_DETAILS_A_head)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Resource_Conflict_DetailsW(clConflictList: UIntPtr, ulIndex: UInt32, pConflictDetails: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CONFLICT_DETAILS_W_head)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_PropertyW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_ExW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: POINTER(Windows.Win32.Devices.Properties.DEVPROPTYPE), PropertyBuffer: c_char_p_no, PropertyBufferSize: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_Keys(ClassGUID: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Property_Keys_Ex(ClassGUID: POINTER(Guid), PropertyKeyArray: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyKeyCount: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_PropertyW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, ulFlags: UInt32) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Property_ExW(ClassGUID: POINTER(Guid), PropertyKey: POINTER(Windows.Win32.Devices.Properties.DEVPROPKEY_head), PropertyType: Windows.Win32.Devices.Properties.DEVPROPTYPE, PropertyBuffer: c_char_p_no, PropertyBufferSize: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Registry_PropertyA(ClassGuid: POINTER(Guid), ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Get_Class_Registry_PropertyW(ClassGuid: POINTER(Guid), ulProperty: UInt32, pulRegDataType: POINTER(UInt32), Buffer: c_void_p, pulLength: POINTER(UInt32), ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Registry_PropertyA(ClassGuid: POINTER(Guid), ulProperty: UInt32, Buffer: c_void_p, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Set_Class_Registry_PropertyW(ClassGuid: POINTER(Guid), ulProperty: UInt32, Buffer: c_void_p, ulLength: UInt32, ulFlags: UInt32, hMachine: IntPtr) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CMP_WaitNoPendingInstallEvents(dwTimeout: UInt32) -> UInt32: ...
@winfunctype('CFGMGR32.dll')
def CM_Register_Notification(pFilter: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_head), pContext: c_void_p, pCallback: Windows.Win32.Devices.DeviceAndDriverInstallation.PCM_NOTIFY_CALLBACK, pNotifyContext: POINTER(IntPtr)) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_Unregister_Notification(NotifyContext: Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION) -> Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET: ...
@winfunctype('CFGMGR32.dll')
def CM_MapCrToWin32Err(CmReturnCode: Windows.Win32.Devices.DeviceAndDriverInstallation.CONFIGRET, DefaultErr: UInt32) -> UInt32: ...
@winfunctype('newdev.dll')
def UpdateDriverForPlugAndPlayDevicesA(hwndParent: Windows.Win32.Foundation.HWND, HardwareId: Windows.Win32.Foundation.PSTR, FullInfPath: Windows.Win32.Foundation.PSTR, InstallFlags: UInt32, bRebootRequired: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def UpdateDriverForPlugAndPlayDevicesW(hwndParent: Windows.Win32.Foundation.HWND, HardwareId: Windows.Win32.Foundation.PWSTR, FullInfPath: Windows.Win32.Foundation.PWSTR, InstallFlags: UInt32, bRebootRequired: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiInstallDevice(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), DriverInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DRVINFO_DATA_V2_A_head), Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiInstallDriverW(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PWSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiInstallDriverA(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDevice(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDriverW(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PWSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiUninstallDriverA(hwndParent: Windows.Win32.Foundation.HWND, InfPath: Windows.Win32.Foundation.PSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiShowUpdateDevice(hwndParent: Windows.Win32.Foundation.HWND, DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiRollbackDriver(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), hwndParent: Windows.Win32.Foundation.HWND, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('newdev.dll')
def DiShowUpdateDriver(hwndParent: Windows.Win32.Foundation.HWND, FilePath: Windows.Win32.Foundation.PWSTR, Flags: UInt32, NeedReboot: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.BOOL: ...
class BUSNUMBER_DES(Structure):
    BUSD_Count: UInt32
    BUSD_Type: UInt32
    BUSD_Flags: UInt32
    BUSD_Alloc_Base: UInt32
    BUSD_Alloc_End: UInt32
    _pack_ = 1
class BUSNUMBER_RANGE(Structure):
    BUSR_Min: UInt32
    BUSR_Max: UInt32
    BUSR_nBusNumbers: UInt32
    BUSR_Flags: UInt32
    _pack_ = 1
class BUSNUMBER_RESOURCE(Structure):
    BusNumber_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.BUSNUMBER_DES
    BusNumber_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.BUSNUMBER_RANGE * 1
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class CABINET_INFO_A(Structure):
        CabinetPath: Windows.Win32.Foundation.PSTR
        CabinetFile: Windows.Win32.Foundation.PSTR
        DiskName: Windows.Win32.Foundation.PSTR
        SetId: UInt16
        CabinetNumber: UInt16
if ARCH in 'X86':
    class CABINET_INFO_A(Structure):
        CabinetPath: Windows.Win32.Foundation.PSTR
        CabinetFile: Windows.Win32.Foundation.PSTR
        DiskName: Windows.Win32.Foundation.PSTR
        SetId: UInt16
        CabinetNumber: UInt16
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class CABINET_INFO_W(Structure):
        CabinetPath: Windows.Win32.Foundation.PWSTR
        CabinetFile: Windows.Win32.Foundation.PWSTR
        DiskName: Windows.Win32.Foundation.PWSTR
        SetId: UInt16
        CabinetNumber: UInt16
if ARCH in 'X86':
    class CABINET_INFO_W(Structure):
        CabinetPath: Windows.Win32.Foundation.PWSTR
        CabinetFile: Windows.Win32.Foundation.PWSTR
        DiskName: Windows.Win32.Foundation.PWSTR
        SetId: UInt16
        CabinetNumber: UInt16
        _pack_ = 1
CM_NOTIFY_ACTION = Int32
CM_NOTIFY_ACTION_DEVICEINTERFACEARRIVAL: CM_NOTIFY_ACTION = 0
CM_NOTIFY_ACTION_DEVICEINTERFACEREMOVAL: CM_NOTIFY_ACTION = 1
CM_NOTIFY_ACTION_DEVICEQUERYREMOVE: CM_NOTIFY_ACTION = 2
CM_NOTIFY_ACTION_DEVICEQUERYREMOVEFAILED: CM_NOTIFY_ACTION = 3
CM_NOTIFY_ACTION_DEVICEREMOVEPENDING: CM_NOTIFY_ACTION = 4
CM_NOTIFY_ACTION_DEVICEREMOVECOMPLETE: CM_NOTIFY_ACTION = 5
CM_NOTIFY_ACTION_DEVICECUSTOMEVENT: CM_NOTIFY_ACTION = 6
CM_NOTIFY_ACTION_DEVICEINSTANCEENUMERATED: CM_NOTIFY_ACTION = 7
CM_NOTIFY_ACTION_DEVICEINSTANCESTARTED: CM_NOTIFY_ACTION = 8
CM_NOTIFY_ACTION_DEVICEINSTANCEREMOVED: CM_NOTIFY_ACTION = 9
CM_NOTIFY_ACTION_MAX: CM_NOTIFY_ACTION = 10
class CM_NOTIFY_EVENT_DATA(Structure):
    FilterType: Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE
    Reserved: UInt32
    u: _u_e__Union
    class _u_e__Union(Union):
        DeviceInterface: _DeviceInterface_e__Struct
        DeviceHandle: _DeviceHandle_e__Struct
        DeviceInstance: _DeviceInstance_e__Struct
        class _DeviceInterface_e__Struct(Structure):
            ClassGuid: Guid
            SymbolicLink: Char * 1
        class _DeviceHandle_e__Struct(Structure):
            EventGuid: Guid
            NameOffset: Int32
            DataSize: UInt32
            Data: Byte * 1
        class _DeviceInstance_e__Struct(Structure):
            InstanceId: Char * 1
class CM_NOTIFY_FILTER(Structure):
    cbSize: UInt32
    Flags: UInt32
    FilterType: Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_FILTER_TYPE
    Reserved: UInt32
    u: _u_e__Union
    class _u_e__Union(Union):
        DeviceInterface: _DeviceInterface_e__Struct
        DeviceHandle: _DeviceHandle_e__Struct
        DeviceInstance: _DeviceInstance_e__Struct
        class _DeviceInterface_e__Struct(Structure):
            ClassGuid: Guid
        class _DeviceHandle_e__Struct(Structure):
            hTarget: Windows.Win32.Foundation.HANDLE
        class _DeviceInstance_e__Struct(Structure):
            InstanceId: Char * 200
CM_NOTIFY_FILTER_TYPE = Int32
CM_NOTIFY_FILTER_TYPE_DEVICEINTERFACE: CM_NOTIFY_FILTER_TYPE = 0
CM_NOTIFY_FILTER_TYPE_DEVICEHANDLE: CM_NOTIFY_FILTER_TYPE = 1
CM_NOTIFY_FILTER_TYPE_DEVICEINSTANCE: CM_NOTIFY_FILTER_TYPE = 2
CM_NOTIFY_FILTER_TYPE_MAX: CM_NOTIFY_FILTER_TYPE = 3
if ARCH in 'X64,ARM64':
    class COINSTALLER_CONTEXT_DATA(Structure):
        PostProcessing: Windows.Win32.Foundation.BOOL
        InstallResult: UInt32
        PrivateData: c_void_p
if ARCH in 'X86':
    class COINSTALLER_CONTEXT_DATA(Structure):
        PostProcessing: Windows.Win32.Foundation.BOOL
        InstallResult: UInt32
        PrivateData: c_void_p
        _pack_ = 1
CONFIGRET = UInt32
CR_SUCCESS: CONFIGRET = 0
CR_DEFAULT: CONFIGRET = 1
CR_OUT_OF_MEMORY: CONFIGRET = 2
CR_INVALID_POINTER: CONFIGRET = 3
CR_INVALID_FLAG: CONFIGRET = 4
CR_INVALID_DEVNODE: CONFIGRET = 5
CR_INVALID_DEVINST: CONFIGRET = 5
CR_INVALID_RES_DES: CONFIGRET = 6
CR_INVALID_LOG_CONF: CONFIGRET = 7
CR_INVALID_ARBITRATOR: CONFIGRET = 8
CR_INVALID_NODELIST: CONFIGRET = 9
CR_DEVNODE_HAS_REQS: CONFIGRET = 10
CR_DEVINST_HAS_REQS: CONFIGRET = 10
CR_INVALID_RESOURCEID: CONFIGRET = 11
CR_DLVXD_NOT_FOUND: CONFIGRET = 12
CR_NO_SUCH_DEVNODE: CONFIGRET = 13
CR_NO_SUCH_DEVINST: CONFIGRET = 13
CR_NO_MORE_LOG_CONF: CONFIGRET = 14
CR_NO_MORE_RES_DES: CONFIGRET = 15
CR_ALREADY_SUCH_DEVNODE: CONFIGRET = 16
CR_ALREADY_SUCH_DEVINST: CONFIGRET = 16
CR_INVALID_RANGE_LIST: CONFIGRET = 17
CR_INVALID_RANGE: CONFIGRET = 18
CR_FAILURE: CONFIGRET = 19
CR_NO_SUCH_LOGICAL_DEV: CONFIGRET = 20
CR_CREATE_BLOCKED: CONFIGRET = 21
CR_NOT_SYSTEM_VM: CONFIGRET = 22
CR_REMOVE_VETOED: CONFIGRET = 23
CR_APM_VETOED: CONFIGRET = 24
CR_INVALID_LOAD_TYPE: CONFIGRET = 25
CR_BUFFER_SMALL: CONFIGRET = 26
CR_NO_ARBITRATOR: CONFIGRET = 27
CR_NO_REGISTRY_HANDLE: CONFIGRET = 28
CR_REGISTRY_ERROR: CONFIGRET = 29
CR_INVALID_DEVICE_ID: CONFIGRET = 30
CR_INVALID_DATA: CONFIGRET = 31
CR_INVALID_API: CONFIGRET = 32
CR_DEVLOADER_NOT_READY: CONFIGRET = 33
CR_NEED_RESTART: CONFIGRET = 34
CR_NO_MORE_HW_PROFILES: CONFIGRET = 35
CR_DEVICE_NOT_THERE: CONFIGRET = 36
CR_NO_SUCH_VALUE: CONFIGRET = 37
CR_WRONG_TYPE: CONFIGRET = 38
CR_INVALID_PRIORITY: CONFIGRET = 39
CR_NOT_DISABLEABLE: CONFIGRET = 40
CR_FREE_RESOURCES: CONFIGRET = 41
CR_QUERY_VETOED: CONFIGRET = 42
CR_CANT_SHARE_IRQ: CONFIGRET = 43
CR_NO_DEPENDENT: CONFIGRET = 44
CR_SAME_RESOURCES: CONFIGRET = 45
CR_NO_SUCH_REGISTRY_KEY: CONFIGRET = 46
CR_INVALID_MACHINENAME: CONFIGRET = 47
CR_REMOTE_COMM_FAILURE: CONFIGRET = 48
CR_MACHINE_UNAVAILABLE: CONFIGRET = 49
CR_NO_CM_SERVICES: CONFIGRET = 50
CR_ACCESS_DENIED: CONFIGRET = 51
CR_CALL_NOT_IMPLEMENTED: CONFIGRET = 52
CR_INVALID_PROPERTY: CONFIGRET = 53
CR_DEVICE_INTERFACE_ACTIVE: CONFIGRET = 54
CR_NO_SUCH_DEVICE_INTERFACE: CONFIGRET = 55
CR_INVALID_REFERENCE_STRING: CONFIGRET = 56
CR_INVALID_CONFLICT_LIST: CONFIGRET = 57
CR_INVALID_INDEX: CONFIGRET = 58
CR_INVALID_STRUCTURE_SIZE: CONFIGRET = 59
NUM_CR_RESULTS: CONFIGRET = 60
class CONFLICT_DETAILS_A(Structure):
    CD_ulSize: UInt32
    CD_ulMask: UInt32
    CD_dnDevInst: UInt32
    CD_rdResDes: UIntPtr
    CD_ulFlags: UInt32
    CD_szDescription: Windows.Win32.Foundation.CHAR * 260
class CONFLICT_DETAILS_W(Structure):
    CD_ulSize: UInt32
    CD_ulMask: UInt32
    CD_dnDevInst: UInt32
    CD_rdResDes: UIntPtr
    CD_ulFlags: UInt32
    CD_szDescription: Char * 260
class CONNECTION_DES(Structure):
    COND_Type: UInt32
    COND_Flags: UInt32
    COND_Class: Byte
    COND_ClassType: Byte
    COND_Reserved1: Byte
    COND_Reserved2: Byte
    COND_Id: Windows.Win32.Foundation.LARGE_INTEGER
    _pack_ = 1
class CONNECTION_RESOURCE(Structure):
    Connection_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.CONNECTION_DES
    _pack_ = 1
class CS_DES(Structure):
    CSD_SignatureLength: UInt32
    CSD_LegacyDataOffset: UInt32
    CSD_LegacyDataSize: UInt32
    CSD_Flags: UInt32
    CSD_ClassGuid: Guid
    CSD_Signature: Byte * 1
    _pack_ = 1
class CS_RESOURCE(Structure):
    CS_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.CS_DES
    _pack_ = 1
class DEVPRIVATE_DES(Structure):
    PD_Count: UInt32
    PD_Type: UInt32
    PD_Data1: UInt32
    PD_Data2: UInt32
    PD_Data3: UInt32
    PD_Flags: UInt32
    _pack_ = 1
class DEVPRIVATE_RANGE(Structure):
    PR_Data1: UInt32
    PR_Data2: UInt32
    PR_Data3: UInt32
    _pack_ = 1
class DEVPRIVATE_RESOURCE(Structure):
    PRV_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.DEVPRIVATE_DES
    PRV_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.DEVPRIVATE_RANGE * 1
    _pack_ = 1
class DMA_DES(Structure):
    DD_Count: UInt32
    DD_Type: UInt32
    DD_Flags: UInt32
    DD_Alloc_Chan: UInt32
    _pack_ = 1
class DMA_RANGE(Structure):
    DR_Min: UInt32
    DR_Max: UInt32
    DR_Flags: UInt32
    _pack_ = 1
class DMA_RESOURCE(Structure):
    DMA_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.DMA_DES
    DMA_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.DMA_RANGE * 1
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_A(Structure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
if ARCH in 'X86':
    class FILEPATHS_A(Structure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_SIGNERINFO_A(Structure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PSTR
        Version: Windows.Win32.Foundation.PSTR
        CatalogFile: Windows.Win32.Foundation.PSTR
if ARCH in 'X86':
    class FILEPATHS_SIGNERINFO_A(Structure):
        Target: Windows.Win32.Foundation.PSTR
        Source: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PSTR
        Version: Windows.Win32.Foundation.PSTR
        CatalogFile: Windows.Win32.Foundation.PSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_SIGNERINFO_W(Structure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PWSTR
        Version: Windows.Win32.Foundation.PWSTR
        CatalogFile: Windows.Win32.Foundation.PWSTR
if ARCH in 'X86':
    class FILEPATHS_SIGNERINFO_W(Structure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        DigitalSigner: Windows.Win32.Foundation.PWSTR
        Version: Windows.Win32.Foundation.PWSTR
        CatalogFile: Windows.Win32.Foundation.PWSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILEPATHS_W(Structure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
if ARCH in 'X86':
    class FILEPATHS_W(Structure):
        Target: Windows.Win32.Foundation.PWSTR
        Source: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILE_IN_CABINET_INFO_A(Structure):
        NameInCabinet: Windows.Win32.Foundation.PSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class FILE_IN_CABINET_INFO_A(Structure):
        NameInCabinet: Windows.Win32.Foundation.PSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class FILE_IN_CABINET_INFO_W(Structure):
        NameInCabinet: Windows.Win32.Foundation.PWSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Char * 260
if ARCH in 'X86':
    class FILE_IN_CABINET_INFO_W(Structure):
        NameInCabinet: Windows.Win32.Foundation.PWSTR
        FileSize: UInt32
        Win32Error: UInt32
        DosDate: UInt16
        DosTime: UInt16
        DosAttribs: UInt16
        FullTargetName: Char * 260
        _pack_ = 1
HCMNOTIFICATION = IntPtr
HDEVINFO = IntPtr
class HWPROFILEINFO_W(Structure):
    HWPI_ulHWProfile: UInt32
    HWPI_szFriendlyName: Char * 80
    HWPI_dwFlags: UInt32
    _pack_ = 1
class HWProfileInfo_sA(Structure):
    HWPI_ulHWProfile: UInt32
    HWPI_szFriendlyName: Windows.Win32.Foundation.CHAR * 80
    HWPI_dwFlags: UInt32
    _pack_ = 1
if ARCH in 'X64,ARM64':
    class INFCONTEXT(Structure):
        Inf: c_void_p
        CurrentInf: c_void_p
        Section: UInt32
        Line: UInt32
if ARCH in 'X86':
    class INFCONTEXT(Structure):
        Inf: c_void_p
        CurrentInf: c_void_p
        Section: UInt32
        Line: UInt32
        _pack_ = 1
class IO_DES(Structure):
    IOD_Count: UInt32
    IOD_Type: UInt32
    IOD_Alloc_Base: UInt64
    IOD_Alloc_End: UInt64
    IOD_DesFlags: UInt32
    _pack_ = 1
class IO_RANGE(Structure):
    IOR_Align: UInt64
    IOR_nPorts: UInt32
    IOR_Min: UInt64
    IOR_Max: UInt64
    IOR_RangeFlags: UInt32
    IOR_Alias: UInt64
    _pack_ = 1
class IO_RESOURCE(Structure):
    IO_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.IO_DES
    IO_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.IO_RANGE * 1
class IRQ_DES_32(Structure):
    IRQD_Count: UInt32
    IRQD_Type: UInt32
    IRQD_Flags: UInt32
    IRQD_Alloc_Num: UInt32
    IRQD_Affinity: UInt32
    _pack_ = 1
class IRQ_DES_64(Structure):
    IRQD_Count: UInt32
    IRQD_Type: UInt32
    IRQD_Flags: UInt32
    IRQD_Alloc_Num: UInt32
    IRQD_Affinity: UInt64
    _pack_ = 1
class IRQ_RANGE(Structure):
    IRQR_Min: UInt32
    IRQR_Max: UInt32
    IRQR_Flags: UInt32
    _pack_ = 1
class IRQ_RESOURCE_32(Structure):
    IRQ_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_DES_32
    IRQ_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_RANGE * 1
    _pack_ = 1
class IRQ_RESOURCE_64(Structure):
    IRQ_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_DES_64
    IRQ_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.IRQ_RANGE * 1
    _pack_ = 1
class MEM_DES(Structure):
    MD_Count: UInt32
    MD_Type: UInt32
    MD_Alloc_Base: UInt64
    MD_Alloc_End: UInt64
    MD_Flags: UInt32
    MD_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_DES(Structure):
    MLD_Count: UInt32
    MLD_Type: UInt32
    MLD_Alloc_Base: UInt64
    MLD_Alloc_End: UInt64
    MLD_Flags: UInt32
    MLD_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_RANGE(Structure):
    MLR_Align: UInt64
    MLR_nBytes: UInt64
    MLR_Min: UInt64
    MLR_Max: UInt64
    MLR_Flags: UInt32
    MLR_Reserved: UInt32
    _pack_ = 1
class MEM_LARGE_RESOURCE(Structure):
    MEM_LARGE_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_LARGE_DES
    MEM_LARGE_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_LARGE_RANGE * 1
    _pack_ = 1
class MEM_RANGE(Structure):
    MR_Align: UInt64
    MR_nBytes: UInt32
    MR_Min: UInt64
    MR_Max: UInt64
    MR_Flags: UInt32
    MR_Reserved: UInt32
    _pack_ = 1
class MEM_RESOURCE(Structure):
    MEM_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_DES
    MEM_Data: Windows.Win32.Devices.DeviceAndDriverInstallation.MEM_RANGE * 1
    _pack_ = 1
class MFCARD_DES(Structure):
    PMF_Count: UInt32
    PMF_Type: UInt32
    PMF_Flags: UInt32
    PMF_ConfigOptions: Byte
    PMF_IoResourceIndex: Byte
    PMF_Reserved: Byte * 2
    PMF_ConfigRegisterBase: UInt32
    _pack_ = 1
class MFCARD_RESOURCE(Structure):
    MfCard_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.MFCARD_DES
    _pack_ = 1
OEM_SOURCE_MEDIA_TYPE = UInt32
SPOST_NONE: OEM_SOURCE_MEDIA_TYPE = 0
SPOST_PATH: OEM_SOURCE_MEDIA_TYPE = 1
SPOST_URL: OEM_SOURCE_MEDIA_TYPE = 2
class PCCARD_DES(Structure):
    PCD_Count: UInt32
    PCD_Type: UInt32
    PCD_Flags: UInt32
    PCD_ConfigIndex: Byte
    PCD_Reserved: Byte * 3
    PCD_MemoryCardBase1: UInt32
    PCD_MemoryCardBase2: UInt32
    PCD_MemoryCardBase: UInt32 * 2
    PCD_MemoryFlags: UInt16 * 2
    PCD_IoFlags: Byte * 2
    _pack_ = 1
class PCCARD_RESOURCE(Structure):
    PcCard_Header: Windows.Win32.Devices.DeviceAndDriverInstallation.PCCARD_DES
    _pack_ = 1
@winfunctype_pointer
def PCM_NOTIFY_CALLBACK(hNotify: Windows.Win32.Devices.DeviceAndDriverInstallation.HCMNOTIFICATION, Context: c_void_p, Action: Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_ACTION, EventData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.CM_NOTIFY_EVENT_DATA_head), EventDataSize: UInt32) -> UInt32: ...
@winfunctype_pointer
def PDETECT_PROGRESS_NOTIFY(ProgressNotifyParam: c_void_p, DetectComplete: UInt32) -> Windows.Win32.Foundation.BOOL: ...
PNP_VETO_TYPE = Int32
PNP_VetoTypeUnknown: PNP_VETO_TYPE = 0
PNP_VetoLegacyDevice: PNP_VETO_TYPE = 1
PNP_VetoPendingClose: PNP_VETO_TYPE = 2
PNP_VetoWindowsApp: PNP_VETO_TYPE = 3
PNP_VetoWindowsService: PNP_VETO_TYPE = 4
PNP_VetoOutstandingOpen: PNP_VETO_TYPE = 5
PNP_VetoDevice: PNP_VETO_TYPE = 6
PNP_VetoDriver: PNP_VETO_TYPE = 7
PNP_VetoIllegalDeviceRequest: PNP_VETO_TYPE = 8
PNP_VetoInsufficientPower: PNP_VETO_TYPE = 9
PNP_VetoNonDisableable: PNP_VETO_TYPE = 10
PNP_VetoLegacyDriver: PNP_VETO_TYPE = 11
PNP_VetoInsufficientRights: PNP_VETO_TYPE = 12
PNP_VetoAlreadyRemoved: PNP_VETO_TYPE = 13
@winfunctype_pointer
def PSP_DETSIG_CMPPROC(DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO, NewDeviceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), ExistingDeviceData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head), CompareContext: c_void_p) -> UInt32: ...
@winfunctype_pointer
def PSP_FILE_CALLBACK_A(Context: c_void_p, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
@winfunctype_pointer
def PSP_FILE_CALLBACK_W(Context: c_void_p, Notification: UInt32, Param1: UIntPtr, Param2: UIntPtr) -> UInt32: ...
SETUP_DI_BUILD_DRIVER_DRIVER_TYPE = UInt32
SPDIT_CLASSDRIVER: SETUP_DI_BUILD_DRIVER_DRIVER_TYPE = 1
SPDIT_COMPATDRIVER: SETUP_DI_BUILD_DRIVER_DRIVER_TYPE = 2
SETUP_FILE_OPERATION = UInt32
FILEOP_DELETE: SETUP_FILE_OPERATION = 2
FILEOP_COPY: SETUP_FILE_OPERATION = 0
if ARCH in 'X64,ARM64':
    class SOURCE_MEDIA_A(Structure):
        Reserved: Windows.Win32.Foundation.PSTR
        Tagfile: Windows.Win32.Foundation.PSTR
        Description: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFile: Windows.Win32.Foundation.PSTR
        Flags: UInt32
if ARCH in 'X86':
    class SOURCE_MEDIA_A(Structure):
        Reserved: Windows.Win32.Foundation.PSTR
        Tagfile: Windows.Win32.Foundation.PSTR
        Description: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFile: Windows.Win32.Foundation.PSTR
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SOURCE_MEDIA_W(Structure):
        Reserved: Windows.Win32.Foundation.PWSTR
        Tagfile: Windows.Win32.Foundation.PWSTR
        Description: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFile: Windows.Win32.Foundation.PWSTR
        Flags: UInt32
if ARCH in 'X86':
    class SOURCE_MEDIA_W(Structure):
        Reserved: Windows.Win32.Foundation.PWSTR
        Tagfile: Windows.Win32.Foundation.PWSTR
        Description: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFile: Windows.Win32.Foundation.PWSTR
        Flags: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V1(Structure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Reserved: UInt16
if ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V1(Structure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Reserved: UInt16
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V2(Structure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
if ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V2(Structure):
        cbSize: UInt32
        Platform: Windows.Win32.System.Diagnostics.Debug.VER_PLATFORM
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        _pack_ = 1
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
            _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ALTPLATFORM_INFO_V3(Structure):
        cbSize: UInt32
        Platform: UInt32
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        ProductType: Byte
        SuiteMask: UInt16
        BuildNumber: UInt32
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
if ARCH in 'X86':
    class SP_ALTPLATFORM_INFO_V3(Structure):
        cbSize: UInt32
        Platform: UInt32
        MajorVersion: UInt32
        MinorVersion: UInt32
        ProcessorArchitecture: UInt16
        Anonymous: _Anonymous_e__Union
        FirstValidatedMajorVersion: UInt32
        FirstValidatedMinorVersion: UInt32
        ProductType: Byte
        SuiteMask: UInt16
        BuildNumber: UInt32
        _pack_ = 1
        class _Anonymous_e__Union(Union):
            Reserved: UInt16
            Flags: UInt16
            _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V1_A(Structure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V1_A(Structure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V1_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V1_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V2_A(Structure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        ReinstallInstance: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V2_A(Structure):
        cbSize: UInt32
        FullInfPath: Windows.Win32.Foundation.CHAR * 260
        FilenameOffset: Int32
        ReinstallInstance: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_BACKUP_QUEUE_PARAMS_V2_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        ReinstallInstance: Char * 260
if ARCH in 'X86':
    class SP_BACKUP_QUEUE_PARAMS_V2_W(Structure):
        cbSize: UInt32
        FullInfPath: Char * 260
        FilenameOffset: Int32
        ReinstallInstance: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_CLASSIMAGELIST_DATA(Structure):
        cbSize: UInt32
        ImageList: Windows.Win32.UI.Controls.HIMAGELIST
        Reserved: UIntPtr
if ARCH in 'X86':
    class SP_CLASSIMAGELIST_DATA(Structure):
        cbSize: UInt32
        ImageList: Windows.Win32.UI.Controls.HIMAGELIST
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_CLASSINSTALL_HEADER(Structure):
        cbSize: UInt32
        InstallFunction: UInt32
if ARCH in 'X86':
    class SP_CLASSINSTALL_HEADER(Structure):
        cbSize: UInt32
        InstallFunction: UInt32
        _pack_ = 1
SP_COPY_STYLE = UInt32
SP_COPY_DELETESOURCE: SP_COPY_STYLE = 1
SP_COPY_REPLACEONLY: SP_COPY_STYLE = 2
SP_COPY_NEWER_OR_SAME: SP_COPY_STYLE = 4
SP_COPY_NEWER_ONLY: SP_COPY_STYLE = 65536
SP_COPY_NOOVERWRITE: SP_COPY_STYLE = 8
SP_COPY_NODECOMP: SP_COPY_STYLE = 16
SP_COPY_LANGUAGEAWARE: SP_COPY_STYLE = 32
SP_COPY_SOURCE_ABSOLUTE: SP_COPY_STYLE = 64
SP_COPY_SOURCEPATH_ABSOLUTE: SP_COPY_STYLE = 128
SP_COPY_FORCE_IN_USE: SP_COPY_STYLE = 512
SP_COPY_IN_USE_NEEDS_REBOOT: SP_COPY_STYLE = 256
SP_COPY_NOSKIP: SP_COPY_STYLE = 1024
SP_COPY_FORCE_NOOVERWRITE: SP_COPY_STYLE = 4096
SP_COPY_FORCE_NEWER: SP_COPY_STYLE = 8192
SP_COPY_WARNIFSKIP: SP_COPY_STYLE = 16384
SP_COPY_NOBROWSE: SP_COPY_STYLE = 32768
SP_COPY_NEWER: SP_COPY_STYLE = 4
SP_COPY_RESERVED: SP_COPY_STYLE = 131072
SP_COPY_OEMINF_CATALOG_ONLY: SP_COPY_STYLE = 262144
SP_COPY_REPLACE_BOOT_FILE: SP_COPY_STYLE = 524288
SP_COPY_NOPRUNE: SP_COPY_STYLE = 1048576
SP_COPY_OEM_F6_INF: SP_COPY_STYLE = 2097152
SP_COPY_ALREADYDECOMP: SP_COPY_STYLE = 4194304
SP_COPY_WINDOWS_SIGNED: SP_COPY_STYLE = 16777216
SP_COPY_PNPLOCKED: SP_COPY_STYLE = 33554432
SP_COPY_IN_USE_TRY_RENAME: SP_COPY_STYLE = 67108864
SP_COPY_INBOX_INF: SP_COPY_STYLE = 134217728
SP_COPY_HARDLINK: SP_COPY_STYLE = 268435456
if ARCH in 'X64,ARM64':
    class SP_DETECTDEVICE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        DetectProgressNotify: Windows.Win32.Devices.DeviceAndDriverInstallation.PDETECT_PROGRESS_NOTIFY
        ProgressNotifyParam: c_void_p
if ARCH in 'X86':
    class SP_DETECTDEVICE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        DetectProgressNotify: Windows.Win32.Devices.DeviceAndDriverInstallation.PDETECT_PROGRESS_NOTIFY
        ProgressNotifyParam: c_void_p
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DATA(Structure):
        cbSize: UInt32
        InterfaceClassGuid: Guid
        Flags: UInt32
        Reserved: UIntPtr
if ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DATA(Structure):
        cbSize: UInt32
        InterfaceClassGuid: Guid
        Flags: UInt32
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        DevicePath: Windows.Win32.Foundation.CHAR * 1
if ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        DevicePath: Windows.Win32.Foundation.CHAR * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        DevicePath: Char * 1
if ARCH in 'X86':
    class SP_DEVICE_INTERFACE_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        DevicePath: Char * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_DATA(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        DevInst: UInt32
        Reserved: UIntPtr
if ARCH in 'X86':
    class SP_DEVINFO_DATA(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        DevInst: UInt32
        Reserved: UIntPtr
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_LIST_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Windows.Win32.Foundation.CHAR * 263
if ARCH in 'X86':
    class SP_DEVINFO_LIST_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Windows.Win32.Foundation.CHAR * 263
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINFO_LIST_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Char * 263
if ARCH in 'X86':
    class SP_DEVINFO_LIST_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        ClassGuid: Guid
        RemoteMachineHandle: Windows.Win32.Foundation.HANDLE
        RemoteMachineName: Char * 263
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINSTALL_PARAMS_A(Structure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: c_void_p
        FileQueue: c_void_p
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_DEVINSTALL_PARAMS_A(Structure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: c_void_p
        FileQueue: c_void_p
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DEVINSTALL_PARAMS_W(Structure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: c_void_p
        FileQueue: c_void_p
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Char * 260
if ARCH in 'X86':
    class SP_DEVINSTALL_PARAMS_W(Structure):
        cbSize: UInt32
        Flags: UInt32
        FlagsEx: UInt32
        hwndParent: Windows.Win32.Foundation.HWND
        InstallMsgHandler: Windows.Win32.Devices.DeviceAndDriverInstallation.PSP_FILE_CALLBACK_A
        InstallMsgHandlerContext: c_void_p
        FileQueue: c_void_p
        ClassInstallReserved: UIntPtr
        Reserved: UInt32
        DriverPath: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V1_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V1_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V1_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V1_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V2_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V2_A(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Windows.Win32.Foundation.CHAR * 256
        MfgName: Windows.Win32.Foundation.CHAR * 256
        ProviderName: Windows.Win32.Foundation.CHAR * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DATA_V2_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
if ARCH in 'X86':
    class SP_DRVINFO_DATA_V2_W(Structure):
        cbSize: UInt32
        DriverType: UInt32
        Reserved: UIntPtr
        Description: Char * 256
        MfgName: Char * 256
        ProviderName: Char * 256
        DriverDate: Windows.Win32.Foundation.FILETIME
        DriverVersion: UInt64
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Windows.Win32.Foundation.CHAR * 256
        InfFileName: Windows.Win32.Foundation.CHAR * 260
        DrvDescription: Windows.Win32.Foundation.CHAR * 256
        HardwareID: Windows.Win32.Foundation.CHAR * 1
if ARCH in 'X86':
    class SP_DRVINFO_DETAIL_DATA_A(Structure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Windows.Win32.Foundation.CHAR * 256
        InfFileName: Windows.Win32.Foundation.CHAR * 260
        DrvDescription: Windows.Win32.Foundation.CHAR * 256
        HardwareID: Windows.Win32.Foundation.CHAR * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINFO_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Char * 256
        InfFileName: Char * 260
        DrvDescription: Char * 256
        HardwareID: Char * 1
if ARCH in 'X86':
    class SP_DRVINFO_DETAIL_DATA_W(Structure):
        cbSize: UInt32
        InfDate: Windows.Win32.Foundation.FILETIME
        CompatIDsOffset: UInt32
        CompatIDsLength: UInt32
        Reserved: UIntPtr
        SectionName: Char * 256
        InfFileName: Char * 260
        DrvDescription: Char * 256
        HardwareID: Char * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_DRVINSTALL_PARAMS(Structure):
        cbSize: UInt32
        Rank: UInt32
        Flags: UInt32
        PrivateData: UIntPtr
        Reserved: UInt32
if ARCH in 'X86':
    class SP_DRVINSTALL_PARAMS(Structure):
        cbSize: UInt32
        Rank: UInt32
        Flags: UInt32
        PrivateData: UIntPtr
        Reserved: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ENABLECLASS_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ClassGuid: Guid
        EnableMessage: UInt32
if ARCH in 'X86':
    class SP_ENABLECLASS_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ClassGuid: Guid
        EnableMessage: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_FILE_COPY_PARAMS_A(Structure):
        cbSize: UInt32
        QueueHandle: c_void_p
        SourceRootPath: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFilename: Windows.Win32.Foundation.PSTR
        SourceDescription: Windows.Win32.Foundation.PSTR
        SourceTagfile: Windows.Win32.Foundation.PSTR
        TargetDirectory: Windows.Win32.Foundation.PSTR
        TargetFilename: Windows.Win32.Foundation.PSTR
        CopyStyle: UInt32
        LayoutInf: c_void_p
        SecurityDescriptor: Windows.Win32.Foundation.PSTR
if ARCH in 'X86':
    class SP_FILE_COPY_PARAMS_A(Structure):
        cbSize: UInt32
        QueueHandle: c_void_p
        SourceRootPath: Windows.Win32.Foundation.PSTR
        SourcePath: Windows.Win32.Foundation.PSTR
        SourceFilename: Windows.Win32.Foundation.PSTR
        SourceDescription: Windows.Win32.Foundation.PSTR
        SourceTagfile: Windows.Win32.Foundation.PSTR
        TargetDirectory: Windows.Win32.Foundation.PSTR
        TargetFilename: Windows.Win32.Foundation.PSTR
        CopyStyle: UInt32
        LayoutInf: c_void_p
        SecurityDescriptor: Windows.Win32.Foundation.PSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_FILE_COPY_PARAMS_W(Structure):
        cbSize: UInt32
        QueueHandle: c_void_p
        SourceRootPath: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFilename: Windows.Win32.Foundation.PWSTR
        SourceDescription: Windows.Win32.Foundation.PWSTR
        SourceTagfile: Windows.Win32.Foundation.PWSTR
        TargetDirectory: Windows.Win32.Foundation.PWSTR
        TargetFilename: Windows.Win32.Foundation.PWSTR
        CopyStyle: UInt32
        LayoutInf: c_void_p
        SecurityDescriptor: Windows.Win32.Foundation.PWSTR
if ARCH in 'X86':
    class SP_FILE_COPY_PARAMS_W(Structure):
        cbSize: UInt32
        QueueHandle: c_void_p
        SourceRootPath: Windows.Win32.Foundation.PWSTR
        SourcePath: Windows.Win32.Foundation.PWSTR
        SourceFilename: Windows.Win32.Foundation.PWSTR
        SourceDescription: Windows.Win32.Foundation.PWSTR
        SourceTagfile: Windows.Win32.Foundation.PWSTR
        TargetDirectory: Windows.Win32.Foundation.PWSTR
        TargetFilename: Windows.Win32.Foundation.PWSTR
        CopyStyle: UInt32
        LayoutInf: c_void_p
        SecurityDescriptor: Windows.Win32.Foundation.PWSTR
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_INFORMATION(Structure):
        InfStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_STYLE
        InfCount: UInt32
        VersionData: Byte * 1
if ARCH in 'X86':
    class SP_INF_INFORMATION(Structure):
        InfStyle: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_INF_STYLE
        InfCount: UInt32
        VersionData: Byte * 1
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V1_A(Structure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V1_A(Structure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V1_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V1_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V2_A(Structure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
        SignerScore: UInt32
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V2_A(Structure):
        cbSize: UInt32
        CatalogFile: Windows.Win32.Foundation.CHAR * 260
        DigitalSigner: Windows.Win32.Foundation.CHAR * 260
        DigitalSignerVersion: Windows.Win32.Foundation.CHAR * 260
        SignerScore: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_INF_SIGNER_INFO_V2_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        SignerScore: UInt32
if ARCH in 'X86':
    class SP_INF_SIGNER_INFO_V2_W(Structure):
        cbSize: UInt32
        CatalogFile: Char * 260
        DigitalSigner: Char * 260
        DigitalSignerVersion: Char * 260
        SignerScore: UInt32
        _pack_ = 1
SP_INF_STYLE = UInt32
INF_STYLE_NONE: SP_INF_STYLE = 0
INF_STYLE_OLDNT: SP_INF_STYLE = 1
INF_STYLE_WIN4: SP_INF_STYLE = 2
if ARCH in 'X64,ARM64':
    class SP_INSTALLWIZARD_DATA(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        DynamicPageFlags: UInt32
        PrivateFlags: UInt32
        PrivateData: Windows.Win32.Foundation.LPARAM
        hwndWizardDlg: Windows.Win32.Foundation.HWND
if ARCH in 'X86':
    class SP_INSTALLWIZARD_DATA(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        DynamicPageFlags: UInt32
        PrivateFlags: UInt32
        PrivateData: Windows.Win32.Foundation.LPARAM
        hwndWizardDlg: Windows.Win32.Foundation.HWND
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_NEWDEVICEWIZARD_DATA(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        hwndWizardDlg: Windows.Win32.Foundation.HWND
if ARCH in 'X86':
    class SP_NEWDEVICEWIZARD_DATA(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Flags: UInt32
        DynamicPages: Windows.Win32.UI.Controls.HPROPSHEETPAGE * 20
        NumDynamicPages: UInt32
        hwndWizardDlg: Windows.Win32.Foundation.HWND
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ORIGINAL_FILE_INFO_A(Structure):
        cbSize: UInt32
        OriginalInfName: Windows.Win32.Foundation.CHAR * 260
        OriginalCatalogName: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X86':
    class SP_ORIGINAL_FILE_INFO_A(Structure):
        cbSize: UInt32
        OriginalInfName: Windows.Win32.Foundation.CHAR * 260
        OriginalCatalogName: Windows.Win32.Foundation.CHAR * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_ORIGINAL_FILE_INFO_W(Structure):
        cbSize: UInt32
        OriginalInfName: Char * 260
        OriginalCatalogName: Char * 260
if ARCH in 'X86':
    class SP_ORIGINAL_FILE_INFO_W(Structure):
        cbSize: UInt32
        OriginalInfName: Char * 260
        OriginalCatalogName: Char * 260
        _pack_ = 1
class SP_POWERMESSAGEWAKE_PARAMS_A(Structure):
    ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    PowerMessageWake: Windows.Win32.Foundation.CHAR * 512
if ARCH in 'X64,ARM64':
    class SP_POWERMESSAGEWAKE_PARAMS_W(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        PowerMessageWake: Char * 512
if ARCH in 'X86':
    class SP_POWERMESSAGEWAKE_PARAMS_W(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        PowerMessageWake: Char * 512
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_PROPCHANGE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        StateChange: UInt32
        Scope: UInt32
        HwProfile: UInt32
if ARCH in 'X86':
    class SP_PROPCHANGE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        StateChange: UInt32
        Scope: UInt32
        HwProfile: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_PROPSHEETPAGE_REQUEST(Structure):
        cbSize: UInt32
        PageRequested: UInt32
        DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO
        DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)
if ARCH in 'X86':
    class SP_PROPSHEETPAGE_REQUEST(Structure):
        cbSize: UInt32
        PageRequested: UInt32
        DeviceInfoSet: Windows.Win32.Devices.DeviceAndDriverInstallation.HDEVINFO
        DeviceInfoData: POINTER(Windows.Win32.Devices.DeviceAndDriverInstallation.SP_DEVINFO_DATA_head)
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REGISTER_CONTROL_STATUSA(Structure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        FailureCode: UInt32
if ARCH in 'X86':
    class SP_REGISTER_CONTROL_STATUSA(Structure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PSTR
        Win32Error: UInt32
        FailureCode: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REGISTER_CONTROL_STATUSW(Structure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        FailureCode: UInt32
if ARCH in 'X86':
    class SP_REGISTER_CONTROL_STATUSW(Structure):
        cbSize: UInt32
        FileName: Windows.Win32.Foundation.PWSTR
        Win32Error: UInt32
        FailureCode: UInt32
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_REMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
if ARCH in 'X86':
    class SP_REMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
        _pack_ = 1
class SP_SELECTDEVICE_PARAMS_A(Structure):
    ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    Title: Windows.Win32.Foundation.CHAR * 60
    Instructions: Windows.Win32.Foundation.CHAR * 256
    ListLabel: Windows.Win32.Foundation.CHAR * 30
    SubTitle: Windows.Win32.Foundation.CHAR * 256
    Reserved: Byte * 2
if ARCH in 'X64,ARM64':
    class SP_SELECTDEVICE_PARAMS_W(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Title: Char * 60
        Instructions: Char * 256
        ListLabel: Char * 30
        SubTitle: Char * 256
if ARCH in 'X86':
    class SP_SELECTDEVICE_PARAMS_W(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Title: Char * 60
        Instructions: Char * 256
        ListLabel: Char * 30
        SubTitle: Char * 256
        _pack_ = 1
class SP_TROUBLESHOOTER_PARAMS_A(Structure):
    ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
    ChmFile: Windows.Win32.Foundation.CHAR * 260
    HtmlTroubleShooter: Windows.Win32.Foundation.CHAR * 260
if ARCH in 'X64,ARM64':
    class SP_TROUBLESHOOTER_PARAMS_W(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ChmFile: Char * 260
        HtmlTroubleShooter: Char * 260
if ARCH in 'X86':
    class SP_TROUBLESHOOTER_PARAMS_W(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        ChmFile: Char * 260
        HtmlTroubleShooter: Char * 260
        _pack_ = 1
if ARCH in 'X64,ARM64':
    class SP_UNREMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
if ARCH in 'X86':
    class SP_UNREMOVEDEVICE_PARAMS(Structure):
        ClassInstallHeader: Windows.Win32.Devices.DeviceAndDriverInstallation.SP_CLASSINSTALL_HEADER
        Scope: UInt32
        HwProfile: UInt32
        _pack_ = 1
SetupFileLogInfo = Int32
SetupFileLogInfo_SetupFileLogSourceFilename: SetupFileLogInfo = 0
SetupFileLogInfo_SetupFileLogChecksum: SetupFileLogInfo = 1
SetupFileLogInfo_SetupFileLogDiskTagfile: SetupFileLogInfo = 2
SetupFileLogInfo_SetupFileLogDiskDescription: SetupFileLogInfo = 3
SetupFileLogInfo_SetupFileLogOtherInfo: SetupFileLogInfo = 4
SetupFileLogInfo_SetupFileLogMax: SetupFileLogInfo = 5
make_head(_module, 'BUSNUMBER_DES')
make_head(_module, 'BUSNUMBER_RANGE')
make_head(_module, 'BUSNUMBER_RESOURCE')
if ARCH in 'X64,ARM64':
    make_head(_module, 'CABINET_INFO_A')
if ARCH in 'X86':
    make_head(_module, 'CABINET_INFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'CABINET_INFO_W')
if ARCH in 'X86':
    make_head(_module, 'CABINET_INFO_W')
make_head(_module, 'CM_NOTIFY_EVENT_DATA')
make_head(_module, 'CM_NOTIFY_FILTER')
if ARCH in 'X64,ARM64':
    make_head(_module, 'COINSTALLER_CONTEXT_DATA')
if ARCH in 'X86':
    make_head(_module, 'COINSTALLER_CONTEXT_DATA')
make_head(_module, 'CONFLICT_DETAILS_A')
make_head(_module, 'CONFLICT_DETAILS_W')
make_head(_module, 'CONNECTION_DES')
make_head(_module, 'CONNECTION_RESOURCE')
make_head(_module, 'CS_DES')
make_head(_module, 'CS_RESOURCE')
make_head(_module, 'DEVPRIVATE_DES')
make_head(_module, 'DEVPRIVATE_RANGE')
make_head(_module, 'DEVPRIVATE_RESOURCE')
make_head(_module, 'DMA_DES')
make_head(_module, 'DMA_RANGE')
make_head(_module, 'DMA_RESOURCE')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_A')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_SIGNERINFO_A')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_SIGNERINFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_SIGNERINFO_W')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_SIGNERINFO_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILEPATHS_W')
if ARCH in 'X86':
    make_head(_module, 'FILEPATHS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILE_IN_CABINET_INFO_A')
if ARCH in 'X86':
    make_head(_module, 'FILE_IN_CABINET_INFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'FILE_IN_CABINET_INFO_W')
if ARCH in 'X86':
    make_head(_module, 'FILE_IN_CABINET_INFO_W')
make_head(_module, 'HWPROFILEINFO_W')
make_head(_module, 'HWProfileInfo_sA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'INFCONTEXT')
if ARCH in 'X86':
    make_head(_module, 'INFCONTEXT')
make_head(_module, 'IO_DES')
make_head(_module, 'IO_RANGE')
make_head(_module, 'IO_RESOURCE')
make_head(_module, 'IRQ_DES_32')
make_head(_module, 'IRQ_DES_64')
make_head(_module, 'IRQ_RANGE')
make_head(_module, 'IRQ_RESOURCE_32')
make_head(_module, 'IRQ_RESOURCE_64')
make_head(_module, 'MEM_DES')
make_head(_module, 'MEM_LARGE_DES')
make_head(_module, 'MEM_LARGE_RANGE')
make_head(_module, 'MEM_LARGE_RESOURCE')
make_head(_module, 'MEM_RANGE')
make_head(_module, 'MEM_RESOURCE')
make_head(_module, 'MFCARD_DES')
make_head(_module, 'MFCARD_RESOURCE')
make_head(_module, 'PCCARD_DES')
make_head(_module, 'PCCARD_RESOURCE')
make_head(_module, 'PCM_NOTIFY_CALLBACK')
make_head(_module, 'PDETECT_PROGRESS_NOTIFY')
make_head(_module, 'PSP_DETSIG_CMPPROC')
make_head(_module, 'PSP_FILE_CALLBACK_A')
make_head(_module, 'PSP_FILE_CALLBACK_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SOURCE_MEDIA_A')
if ARCH in 'X86':
    make_head(_module, 'SOURCE_MEDIA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SOURCE_MEDIA_W')
if ARCH in 'X86':
    make_head(_module, 'SOURCE_MEDIA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V1')
if ARCH in 'X86':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V1')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V2')
if ARCH in 'X86':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V2')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V3')
if ARCH in 'X86':
    make_head(_module, 'SP_ALTPLATFORM_INFO_V3')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_A')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_W')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V1_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_A')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_W')
if ARCH in 'X86':
    make_head(_module, 'SP_BACKUP_QUEUE_PARAMS_V2_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_CLASSIMAGELIST_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_CLASSIMAGELIST_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_CLASSINSTALL_HEADER')
if ARCH in 'X86':
    make_head(_module, 'SP_CLASSINSTALL_HEADER')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DETECTDEVICE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_DETECTDEVICE_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVICE_INTERFACE_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVICE_INTERFACE_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVICE_INTERFACE_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINFO_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINFO_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINFO_LIST_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DEVINSTALL_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V1_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V1_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V1_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V1_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V2_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V2_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DATA_V2_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DATA_V2_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_A')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_W')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINFO_DETAIL_DATA_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_DRVINSTALL_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_DRVINSTALL_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ENABLECLASS_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_ENABLECLASS_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_FILE_COPY_PARAMS_A')
if ARCH in 'X86':
    make_head(_module, 'SP_FILE_COPY_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_FILE_COPY_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_FILE_COPY_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_INFORMATION')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_INFORMATION')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_A')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_W')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V1_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_A')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_W')
if ARCH in 'X86':
    make_head(_module, 'SP_INF_SIGNER_INFO_V2_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_INSTALLWIZARD_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_INSTALLWIZARD_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_NEWDEVICEWIZARD_DATA')
if ARCH in 'X86':
    make_head(_module, 'SP_NEWDEVICEWIZARD_DATA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_A')
if ARCH in 'X86':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_W')
if ARCH in 'X86':
    make_head(_module, 'SP_ORIGINAL_FILE_INFO_W')
make_head(_module, 'SP_POWERMESSAGEWAKE_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_POWERMESSAGEWAKE_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_POWERMESSAGEWAKE_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_PROPCHANGE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_PROPCHANGE_PARAMS')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_PROPSHEETPAGE_REQUEST')
if ARCH in 'X86':
    make_head(_module, 'SP_PROPSHEETPAGE_REQUEST')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSA')
if ARCH in 'X86':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSA')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSW')
if ARCH in 'X86':
    make_head(_module, 'SP_REGISTER_CONTROL_STATUSW')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_REMOVEDEVICE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_REMOVEDEVICE_PARAMS')
make_head(_module, 'SP_SELECTDEVICE_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_SELECTDEVICE_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_SELECTDEVICE_PARAMS_W')
make_head(_module, 'SP_TROUBLESHOOTER_PARAMS_A')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_TROUBLESHOOTER_PARAMS_W')
if ARCH in 'X86':
    make_head(_module, 'SP_TROUBLESHOOTER_PARAMS_W')
if ARCH in 'X64,ARM64':
    make_head(_module, 'SP_UNREMOVEDEVICE_PARAMS')
if ARCH in 'X86':
    make_head(_module, 'SP_UNREMOVEDEVICE_PARAMS')
__all__ = [
    "ALLOC_LOG_CONF",
    "BASIC_LOG_CONF",
    "BOOT_LOG_CONF",
    "BUSNUMBER_DES",
    "BUSNUMBER_RANGE",
    "BUSNUMBER_RESOURCE",
    "CABINET_INFO_A",
    "CABINET_INFO_W",
    "CMP_WaitNoPendingInstallEvents",
    "CM_ADD_ID_BITS",
    "CM_ADD_ID_COMPATIBLE",
    "CM_ADD_ID_HARDWARE",
    "CM_ADD_RANGE_ADDIFCONFLICT",
    "CM_ADD_RANGE_BITS",
    "CM_ADD_RANGE_DONOTADDIFCONFLICT",
    "CM_Add_Empty_Log_Conf",
    "CM_Add_Empty_Log_Conf_Ex",
    "CM_Add_IDA",
    "CM_Add_IDW",
    "CM_Add_ID_ExA",
    "CM_Add_ID_ExW",
    "CM_Add_Range",
    "CM_Add_Res_Des",
    "CM_Add_Res_Des_Ex",
    "CM_CDFLAGS_DRIVER",
    "CM_CDFLAGS_RESERVED",
    "CM_CDFLAGS_ROOT_OWNED",
    "CM_CDMASK_DESCRIPTION",
    "CM_CDMASK_DEVINST",
    "CM_CDMASK_FLAGS",
    "CM_CDMASK_RESDES",
    "CM_CDMASK_VALID",
    "CM_CLASS_PROPERTY_BITS",
    "CM_CLASS_PROPERTY_INSTALLER",
    "CM_CLASS_PROPERTY_INTERFACE",
    "CM_CREATE_DEVINST_BITS",
    "CM_CREATE_DEVINST_DO_NOT_INSTALL",
    "CM_CREATE_DEVINST_GENERATE_ID",
    "CM_CREATE_DEVINST_NORMAL",
    "CM_CREATE_DEVINST_NO_WAIT_INSTALL",
    "CM_CREATE_DEVINST_PHANTOM",
    "CM_CREATE_DEVNODE_BITS",
    "CM_CREATE_DEVNODE_DO_NOT_INSTALL",
    "CM_CREATE_DEVNODE_GENERATE_ID",
    "CM_CREATE_DEVNODE_NORMAL",
    "CM_CREATE_DEVNODE_NO_WAIT_INSTALL",
    "CM_CREATE_DEVNODE_PHANTOM",
    "CM_CRP_CHARACTERISTICS",
    "CM_CRP_DEVTYPE",
    "CM_CRP_EXCLUSIVE",
    "CM_CRP_LOWERFILTERS",
    "CM_CRP_MAX",
    "CM_CRP_MIN",
    "CM_CRP_SECURITY",
    "CM_CRP_SECURITY_SDS",
    "CM_CRP_UPPERFILTERS",
    "CM_CUSTOMDEVPROP_BITS",
    "CM_CUSTOMDEVPROP_MERGE_MULTISZ",
    "CM_Connect_MachineA",
    "CM_Connect_MachineW",
    "CM_Create_DevNodeA",
    "CM_Create_DevNodeW",
    "CM_Create_DevNode_ExA",
    "CM_Create_DevNode_ExW",
    "CM_Create_Range_List",
    "CM_DELETE_CLASS_BITS",
    "CM_DELETE_CLASS_INTERFACE",
    "CM_DELETE_CLASS_ONLY",
    "CM_DELETE_CLASS_SUBKEYS",
    "CM_DETECT_BITS",
    "CM_DETECT_CRASHED",
    "CM_DETECT_HWPROF_FIRST_BOOT",
    "CM_DETECT_NEW_PROFILE",
    "CM_DETECT_RUN",
    "CM_DEVCAP_DOCKDEVICE",
    "CM_DEVCAP_EJECTSUPPORTED",
    "CM_DEVCAP_HARDWAREDISABLED",
    "CM_DEVCAP_LOCKSUPPORTED",
    "CM_DEVCAP_NONDYNAMIC",
    "CM_DEVCAP_RAWDEVICEOK",
    "CM_DEVCAP_REMOVABLE",
    "CM_DEVCAP_SECUREDEVICE",
    "CM_DEVCAP_SILENTINSTALL",
    "CM_DEVCAP_SURPRISEREMOVALOK",
    "CM_DEVCAP_UNIQUEID",
    "CM_DEVICE_PANEL_EDGE_BOTTOM",
    "CM_DEVICE_PANEL_EDGE_LEFT",
    "CM_DEVICE_PANEL_EDGE_RIGHT",
    "CM_DEVICE_PANEL_EDGE_TOP",
    "CM_DEVICE_PANEL_EDGE_UNKNOWN",
    "CM_DEVICE_PANEL_JOINT_TYPE_HINGE",
    "CM_DEVICE_PANEL_JOINT_TYPE_PIVOT",
    "CM_DEVICE_PANEL_JOINT_TYPE_PLANAR",
    "CM_DEVICE_PANEL_JOINT_TYPE_SWIVEL",
    "CM_DEVICE_PANEL_JOINT_TYPE_UNKNOWN",
    "CM_DEVICE_PANEL_ORIENTATION_HORIZONTAL",
    "CM_DEVICE_PANEL_ORIENTATION_VERTICAL",
    "CM_DEVICE_PANEL_SHAPE_OVAL",
    "CM_DEVICE_PANEL_SHAPE_RECTANGLE",
    "CM_DEVICE_PANEL_SHAPE_UNKNOWN",
    "CM_DEVICE_PANEL_SIDE_BACK",
    "CM_DEVICE_PANEL_SIDE_BOTTOM",
    "CM_DEVICE_PANEL_SIDE_FRONT",
    "CM_DEVICE_PANEL_SIDE_LEFT",
    "CM_DEVICE_PANEL_SIDE_RIGHT",
    "CM_DEVICE_PANEL_SIDE_TOP",
    "CM_DEVICE_PANEL_SIDE_UNKNOWN",
    "CM_DISABLE_ABSOLUTE",
    "CM_DISABLE_BITS",
    "CM_DISABLE_HARDWARE",
    "CM_DISABLE_PERSIST",
    "CM_DISABLE_POLITE",
    "CM_DISABLE_UI_NOT_OK",
    "CM_DRP_ADDRESS",
    "CM_DRP_BASE_CONTAINERID",
    "CM_DRP_BUSNUMBER",
    "CM_DRP_BUSTYPEGUID",
    "CM_DRP_CAPABILITIES",
    "CM_DRP_CHARACTERISTICS",
    "CM_DRP_CLASS",
    "CM_DRP_CLASSGUID",
    "CM_DRP_COMPATIBLEIDS",
    "CM_DRP_CONFIGFLAGS",
    "CM_DRP_DEVICEDESC",
    "CM_DRP_DEVICE_POWER_DATA",
    "CM_DRP_DEVTYPE",
    "CM_DRP_DRIVER",
    "CM_DRP_ENUMERATOR_NAME",
    "CM_DRP_EXCLUSIVE",
    "CM_DRP_FRIENDLYNAME",
    "CM_DRP_HARDWAREID",
    "CM_DRP_INSTALL_STATE",
    "CM_DRP_LEGACYBUSTYPE",
    "CM_DRP_LOCATION_INFORMATION",
    "CM_DRP_LOCATION_PATHS",
    "CM_DRP_LOWERFILTERS",
    "CM_DRP_MAX",
    "CM_DRP_MFG",
    "CM_DRP_MIN",
    "CM_DRP_PHYSICAL_DEVICE_OBJECT_NAME",
    "CM_DRP_REMOVAL_POLICY",
    "CM_DRP_REMOVAL_POLICY_HW_DEFAULT",
    "CM_DRP_REMOVAL_POLICY_OVERRIDE",
    "CM_DRP_SECURITY",
    "CM_DRP_SECURITY_SDS",
    "CM_DRP_SERVICE",
    "CM_DRP_UI_NUMBER",
    "CM_DRP_UI_NUMBER_DESC_FORMAT",
    "CM_DRP_UNUSED0",
    "CM_DRP_UNUSED1",
    "CM_DRP_UNUSED2",
    "CM_DRP_UPPERFILTERS",
    "CM_Delete_Class_Key",
    "CM_Delete_Class_Key_Ex",
    "CM_Delete_DevNode_Key",
    "CM_Delete_DevNode_Key_Ex",
    "CM_Delete_Device_Interface_KeyA",
    "CM_Delete_Device_Interface_KeyW",
    "CM_Delete_Device_Interface_Key_ExA",
    "CM_Delete_Device_Interface_Key_ExW",
    "CM_Delete_Range",
    "CM_Detect_Resource_Conflict",
    "CM_Detect_Resource_Conflict_Ex",
    "CM_Disable_DevNode",
    "CM_Disable_DevNode_Ex",
    "CM_Disconnect_Machine",
    "CM_Dup_Range_List",
    "CM_ENUMERATE_CLASSES_BITS",
    "CM_ENUMERATE_CLASSES_INSTALLER",
    "CM_ENUMERATE_CLASSES_INTERFACE",
    "CM_Enable_DevNode",
    "CM_Enable_DevNode_Ex",
    "CM_Enumerate_Classes",
    "CM_Enumerate_Classes_Ex",
    "CM_Enumerate_EnumeratorsA",
    "CM_Enumerate_EnumeratorsW",
    "CM_Enumerate_Enumerators_ExA",
    "CM_Enumerate_Enumerators_ExW",
    "CM_Find_Range",
    "CM_First_Range",
    "CM_Free_Log_Conf",
    "CM_Free_Log_Conf_Ex",
    "CM_Free_Log_Conf_Handle",
    "CM_Free_Range_List",
    "CM_Free_Res_Des",
    "CM_Free_Res_Des_Ex",
    "CM_Free_Res_Des_Handle",
    "CM_Free_Resource_Conflict_Handle",
    "CM_GETIDLIST_DONOTGENERATE",
    "CM_GETIDLIST_FILTER_BITS",
    "CM_GETIDLIST_FILTER_BUSRELATIONS",
    "CM_GETIDLIST_FILTER_CLASS",
    "CM_GETIDLIST_FILTER_EJECTRELATIONS",
    "CM_GETIDLIST_FILTER_ENUMERATOR",
    "CM_GETIDLIST_FILTER_NONE",
    "CM_GETIDLIST_FILTER_POWERRELATIONS",
    "CM_GETIDLIST_FILTER_PRESENT",
    "CM_GETIDLIST_FILTER_REMOVALRELATIONS",
    "CM_GETIDLIST_FILTER_SERVICE",
    "CM_GETIDLIST_FILTER_TRANSPORTRELATIONS",
    "CM_GET_DEVICE_INTERFACE_LIST_ALL_DEVICES",
    "CM_GET_DEVICE_INTERFACE_LIST_BITS",
    "CM_GET_DEVICE_INTERFACE_LIST_PRESENT",
    "CM_GLOBAL_STATE_CAN_DO_UI",
    "CM_GLOBAL_STATE_DETECTION_PENDING",
    "CM_GLOBAL_STATE_ON_BIG_STACK",
    "CM_GLOBAL_STATE_REBOOT_REQUIRED",
    "CM_GLOBAL_STATE_SERVICES_AVAILABLE",
    "CM_GLOBAL_STATE_SHUTTING_DOWN",
    "CM_Get_Child",
    "CM_Get_Child_Ex",
    "CM_Get_Class_Key_NameA",
    "CM_Get_Class_Key_NameW",
    "CM_Get_Class_Key_Name_ExA",
    "CM_Get_Class_Key_Name_ExW",
    "CM_Get_Class_NameA",
    "CM_Get_Class_NameW",
    "CM_Get_Class_Name_ExA",
    "CM_Get_Class_Name_ExW",
    "CM_Get_Class_PropertyW",
    "CM_Get_Class_Property_ExW",
    "CM_Get_Class_Property_Keys",
    "CM_Get_Class_Property_Keys_Ex",
    "CM_Get_Class_Registry_PropertyA",
    "CM_Get_Class_Registry_PropertyW",
    "CM_Get_Depth",
    "CM_Get_Depth_Ex",
    "CM_Get_DevNode_Custom_PropertyA",
    "CM_Get_DevNode_Custom_PropertyW",
    "CM_Get_DevNode_Custom_Property_ExA",
    "CM_Get_DevNode_Custom_Property_ExW",
    "CM_Get_DevNode_PropertyW",
    "CM_Get_DevNode_Property_ExW",
    "CM_Get_DevNode_Property_Keys",
    "CM_Get_DevNode_Property_Keys_Ex",
    "CM_Get_DevNode_Registry_PropertyA",
    "CM_Get_DevNode_Registry_PropertyW",
    "CM_Get_DevNode_Registry_Property_ExA",
    "CM_Get_DevNode_Registry_Property_ExW",
    "CM_Get_DevNode_Status",
    "CM_Get_DevNode_Status_Ex",
    "CM_Get_Device_IDA",
    "CM_Get_Device_IDW",
    "CM_Get_Device_ID_ExA",
    "CM_Get_Device_ID_ExW",
    "CM_Get_Device_ID_ListA",
    "CM_Get_Device_ID_ListW",
    "CM_Get_Device_ID_List_ExA",
    "CM_Get_Device_ID_List_ExW",
    "CM_Get_Device_ID_List_SizeA",
    "CM_Get_Device_ID_List_SizeW",
    "CM_Get_Device_ID_List_Size_ExA",
    "CM_Get_Device_ID_List_Size_ExW",
    "CM_Get_Device_ID_Size",
    "CM_Get_Device_ID_Size_Ex",
    "CM_Get_Device_Interface_AliasA",
    "CM_Get_Device_Interface_AliasW",
    "CM_Get_Device_Interface_Alias_ExA",
    "CM_Get_Device_Interface_Alias_ExW",
    "CM_Get_Device_Interface_ListA",
    "CM_Get_Device_Interface_ListW",
    "CM_Get_Device_Interface_List_ExA",
    "CM_Get_Device_Interface_List_ExW",
    "CM_Get_Device_Interface_List_SizeA",
    "CM_Get_Device_Interface_List_SizeW",
    "CM_Get_Device_Interface_List_Size_ExA",
    "CM_Get_Device_Interface_List_Size_ExW",
    "CM_Get_Device_Interface_PropertyW",
    "CM_Get_Device_Interface_Property_ExW",
    "CM_Get_Device_Interface_Property_KeysW",
    "CM_Get_Device_Interface_Property_Keys_ExW",
    "CM_Get_First_Log_Conf",
    "CM_Get_First_Log_Conf_Ex",
    "CM_Get_Global_State",
    "CM_Get_Global_State_Ex",
    "CM_Get_HW_Prof_FlagsA",
    "CM_Get_HW_Prof_FlagsW",
    "CM_Get_HW_Prof_Flags_ExA",
    "CM_Get_HW_Prof_Flags_ExW",
    "CM_Get_Hardware_Profile_InfoA",
    "CM_Get_Hardware_Profile_InfoW",
    "CM_Get_Hardware_Profile_Info_ExA",
    "CM_Get_Hardware_Profile_Info_ExW",
    "CM_Get_Log_Conf_Priority",
    "CM_Get_Log_Conf_Priority_Ex",
    "CM_Get_Next_Log_Conf",
    "CM_Get_Next_Log_Conf_Ex",
    "CM_Get_Next_Res_Des",
    "CM_Get_Next_Res_Des_Ex",
    "CM_Get_Parent",
    "CM_Get_Parent_Ex",
    "CM_Get_Res_Des_Data",
    "CM_Get_Res_Des_Data_Ex",
    "CM_Get_Res_Des_Data_Size",
    "CM_Get_Res_Des_Data_Size_Ex",
    "CM_Get_Resource_Conflict_Count",
    "CM_Get_Resource_Conflict_DetailsA",
    "CM_Get_Resource_Conflict_DetailsW",
    "CM_Get_Sibling",
    "CM_Get_Sibling_Ex",
    "CM_Get_Version",
    "CM_Get_Version_Ex",
    "CM_HWPI_DOCKED",
    "CM_HWPI_NOT_DOCKABLE",
    "CM_HWPI_UNDOCKED",
    "CM_INSTALL_STATE_FAILED_INSTALL",
    "CM_INSTALL_STATE_FINISH_INSTALL",
    "CM_INSTALL_STATE_INSTALLED",
    "CM_INSTALL_STATE_NEEDS_REINSTALL",
    "CM_Intersect_Range_List",
    "CM_Invert_Range_List",
    "CM_Is_Dock_Station_Present",
    "CM_Is_Dock_Station_Present_Ex",
    "CM_Is_Version_Available",
    "CM_Is_Version_Available_Ex",
    "CM_LOCATE_DEVINST_BITS",
    "CM_LOCATE_DEVINST_CANCELREMOVE",
    "CM_LOCATE_DEVINST_NORMAL",
    "CM_LOCATE_DEVINST_NOVALIDATION",
    "CM_LOCATE_DEVINST_PHANTOM",
    "CM_LOCATE_DEVNODE_BITS",
    "CM_LOCATE_DEVNODE_CANCELREMOVE",
    "CM_LOCATE_DEVNODE_NORMAL",
    "CM_LOCATE_DEVNODE_NOVALIDATION",
    "CM_LOCATE_DEVNODE_PHANTOM",
    "CM_Locate_DevNodeA",
    "CM_Locate_DevNodeW",
    "CM_Locate_DevNode_ExA",
    "CM_Locate_DevNode_ExW",
    "CM_MapCrToWin32Err",
    "CM_Merge_Range_List",
    "CM_Modify_Res_Des",
    "CM_Modify_Res_Des_Ex",
    "CM_Move_DevNode",
    "CM_Move_DevNode_Ex",
    "CM_NAME_ATTRIBUTE_NAME_RETRIEVED_FROM_DEVICE",
    "CM_NAME_ATTRIBUTE_USER_ASSIGNED_NAME",
    "CM_NOTIFY_ACTION",
    "CM_NOTIFY_ACTION_DEVICECUSTOMEVENT",
    "CM_NOTIFY_ACTION_DEVICEINSTANCEENUMERATED",
    "CM_NOTIFY_ACTION_DEVICEINSTANCEREMOVED",
    "CM_NOTIFY_ACTION_DEVICEINSTANCESTARTED",
    "CM_NOTIFY_ACTION_DEVICEINTERFACEARRIVAL",
    "CM_NOTIFY_ACTION_DEVICEINTERFACEREMOVAL",
    "CM_NOTIFY_ACTION_DEVICEQUERYREMOVE",
    "CM_NOTIFY_ACTION_DEVICEQUERYREMOVEFAILED",
    "CM_NOTIFY_ACTION_DEVICEREMOVECOMPLETE",
    "CM_NOTIFY_ACTION_DEVICEREMOVEPENDING",
    "CM_NOTIFY_ACTION_MAX",
    "CM_NOTIFY_EVENT_DATA",
    "CM_NOTIFY_FILTER",
    "CM_NOTIFY_FILTER_FLAG_ALL_DEVICE_INSTANCES",
    "CM_NOTIFY_FILTER_FLAG_ALL_INTERFACE_CLASSES",
    "CM_NOTIFY_FILTER_TYPE",
    "CM_NOTIFY_FILTER_TYPE_DEVICEHANDLE",
    "CM_NOTIFY_FILTER_TYPE_DEVICEINSTANCE",
    "CM_NOTIFY_FILTER_TYPE_DEVICEINTERFACE",
    "CM_NOTIFY_FILTER_TYPE_MAX",
    "CM_Next_Range",
    "CM_OPEN_CLASS_KEY_BITS",
    "CM_OPEN_CLASS_KEY_INSTALLER",
    "CM_OPEN_CLASS_KEY_INTERFACE",
    "CM_Open_Class_KeyA",
    "CM_Open_Class_KeyW",
    "CM_Open_Class_Key_ExA",
    "CM_Open_Class_Key_ExW",
    "CM_Open_DevNode_Key",
    "CM_Open_DevNode_Key_Ex",
    "CM_Open_Device_Interface_KeyA",
    "CM_Open_Device_Interface_KeyW",
    "CM_Open_Device_Interface_Key_ExA",
    "CM_Open_Device_Interface_Key_ExW",
    "CM_PROB_BIOS_TABLE",
    "CM_PROB_BOOT_CONFIG_CONFLICT",
    "CM_PROB_CANT_SHARE_IRQ",
    "CM_PROB_CONSOLE_LOCKED",
    "CM_PROB_DEVICE_NOT_THERE",
    "CM_PROB_DEVICE_RESET",
    "CM_PROB_DEVLOADER_FAILED",
    "CM_PROB_DEVLOADER_NOT_FOUND",
    "CM_PROB_DEVLOADER_NOT_READY",
    "CM_PROB_DISABLED",
    "CM_PROB_DISABLED_SERVICE",
    "CM_PROB_DRIVER_BLOCKED",
    "CM_PROB_DRIVER_FAILED_LOAD",
    "CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD",
    "CM_PROB_DRIVER_SERVICE_KEY_INVALID",
    "CM_PROB_DUPLICATE_DEVICE",
    "CM_PROB_ENTRY_IS_WRONG_TYPE",
    "CM_PROB_FAILED_ADD",
    "CM_PROB_FAILED_DRIVER_ENTRY",
    "CM_PROB_FAILED_FILTER",
    "CM_PROB_FAILED_INSTALL",
    "CM_PROB_FAILED_POST_START",
    "CM_PROB_FAILED_START",
    "CM_PROB_GUEST_ASSIGNMENT_FAILED",
    "CM_PROB_HALTED",
    "CM_PROB_HARDWARE_DISABLED",
    "CM_PROB_HELD_FOR_EJECT",
    "CM_PROB_INVALID_DATA",
    "CM_PROB_IRQ_TRANSLATION_FAILED",
    "CM_PROB_LACKED_ARBITRATOR",
    "CM_PROB_LEGACY_SERVICE_NO_DEVICES",
    "CM_PROB_LIAR",
    "CM_PROB_MOVED",
    "CM_PROB_NEED_CLASS_CONFIG",
    "CM_PROB_NEED_RESTART",
    "CM_PROB_NORMAL_CONFLICT",
    "CM_PROB_NOT_CONFIGURED",
    "CM_PROB_NOT_VERIFIED",
    "CM_PROB_NO_SOFTCONFIG",
    "CM_PROB_NO_VALID_LOG_CONF",
    "CM_PROB_OUT_OF_MEMORY",
    "CM_PROB_PARTIAL_LOG_CONF",
    "CM_PROB_PHANTOM",
    "CM_PROB_REENUMERATION",
    "CM_PROB_REGISTRY",
    "CM_PROB_REGISTRY_TOO_LARGE",
    "CM_PROB_REINSTALL",
    "CM_PROB_SETPROPERTIES_FAILED",
    "CM_PROB_SYSTEM_SHUTDOWN",
    "CM_PROB_TOO_EARLY",
    "CM_PROB_TRANSLATION_FAILED",
    "CM_PROB_UNKNOWN_RESOURCE",
    "CM_PROB_UNSIGNED_DRIVER",
    "CM_PROB_USED_BY_DEBUGGER",
    "CM_PROB_VXDLDR",
    "CM_PROB_WAITING_ON_DEPENDENCY",
    "CM_PROB_WILL_BE_REMOVED",
    "CM_QUERY_ARBITRATOR_BITS",
    "CM_QUERY_ARBITRATOR_RAW",
    "CM_QUERY_ARBITRATOR_TRANSLATED",
    "CM_QUERY_REMOVE_UI_NOT_OK",
    "CM_QUERY_REMOVE_UI_OK",
    "CM_Query_And_Remove_SubTreeA",
    "CM_Query_And_Remove_SubTreeW",
    "CM_Query_And_Remove_SubTree_ExA",
    "CM_Query_And_Remove_SubTree_ExW",
    "CM_Query_Arbitrator_Free_Data",
    "CM_Query_Arbitrator_Free_Data_Ex",
    "CM_Query_Arbitrator_Free_Size",
    "CM_Query_Arbitrator_Free_Size_Ex",
    "CM_Query_Remove_SubTree",
    "CM_Query_Remove_SubTree_Ex",
    "CM_Query_Resource_Conflict_List",
    "CM_REENUMERATE_ASYNCHRONOUS",
    "CM_REENUMERATE_BITS",
    "CM_REENUMERATE_NORMAL",
    "CM_REENUMERATE_RETRY_INSTALLATION",
    "CM_REENUMERATE_SYNCHRONOUS",
    "CM_REGISTER_DEVICE_DRIVER_BITS",
    "CM_REGISTER_DEVICE_DRIVER_DISABLEABLE",
    "CM_REGISTER_DEVICE_DRIVER_REMOVABLE",
    "CM_REGISTER_DEVICE_DRIVER_STATIC",
    "CM_REGISTRY_BITS",
    "CM_REGISTRY_CONFIG",
    "CM_REGISTRY_HARDWARE",
    "CM_REGISTRY_SOFTWARE",
    "CM_REGISTRY_USER",
    "CM_REMOVAL_POLICY_EXPECT_NO_REMOVAL",
    "CM_REMOVAL_POLICY_EXPECT_ORDERLY_REMOVAL",
    "CM_REMOVAL_POLICY_EXPECT_SURPRISE_REMOVAL",
    "CM_REMOVE_BITS",
    "CM_REMOVE_DISABLE",
    "CM_REMOVE_NO_RESTART",
    "CM_REMOVE_UI_NOT_OK",
    "CM_REMOVE_UI_OK",
    "CM_RESDES_WIDTH_32",
    "CM_RESDES_WIDTH_64",
    "CM_RESDES_WIDTH_BITS",
    "CM_RESDES_WIDTH_DEFAULT",
    "CM_Reenumerate_DevNode",
    "CM_Reenumerate_DevNode_Ex",
    "CM_Register_Device_Driver",
    "CM_Register_Device_Driver_Ex",
    "CM_Register_Device_InterfaceA",
    "CM_Register_Device_InterfaceW",
    "CM_Register_Device_Interface_ExA",
    "CM_Register_Device_Interface_ExW",
    "CM_Register_Notification",
    "CM_Remove_SubTree",
    "CM_Remove_SubTree_Ex",
    "CM_Request_Device_EjectA",
    "CM_Request_Device_EjectW",
    "CM_Request_Device_Eject_ExA",
    "CM_Request_Device_Eject_ExW",
    "CM_Request_Eject_PC",
    "CM_Request_Eject_PC_Ex",
    "CM_Run_Detection",
    "CM_Run_Detection_Ex",
    "CM_SETUP_BITS",
    "CM_SETUP_DEVINST_CONFIG",
    "CM_SETUP_DEVINST_CONFIG_CLASS",
    "CM_SETUP_DEVINST_CONFIG_EXTENSIONS",
    "CM_SETUP_DEVINST_CONFIG_RESET",
    "CM_SETUP_DEVINST_READY",
    "CM_SETUP_DEVINST_RESET",
    "CM_SETUP_DEVNODE_CONFIG",
    "CM_SETUP_DEVNODE_CONFIG_CLASS",
    "CM_SETUP_DEVNODE_CONFIG_EXTENSIONS",
    "CM_SETUP_DEVNODE_CONFIG_RESET",
    "CM_SETUP_DEVNODE_READY",
    "CM_SETUP_DEVNODE_RESET",
    "CM_SETUP_DOWNLOAD",
    "CM_SETUP_PROP_CHANGE",
    "CM_SETUP_WRITE_LOG_CONFS",
    "CM_SET_DEVINST_PROBLEM_BITS",
    "CM_SET_DEVINST_PROBLEM_NORMAL",
    "CM_SET_DEVINST_PROBLEM_OVERRIDE",
    "CM_SET_DEVNODE_PROBLEM_BITS",
    "CM_SET_DEVNODE_PROBLEM_NORMAL",
    "CM_SET_DEVNODE_PROBLEM_OVERRIDE",
    "CM_SET_HW_PROF_FLAGS_BITS",
    "CM_SET_HW_PROF_FLAGS_UI_NOT_OK",
    "CM_Set_Class_PropertyW",
    "CM_Set_Class_Property_ExW",
    "CM_Set_Class_Registry_PropertyA",
    "CM_Set_Class_Registry_PropertyW",
    "CM_Set_DevNode_Problem",
    "CM_Set_DevNode_Problem_Ex",
    "CM_Set_DevNode_PropertyW",
    "CM_Set_DevNode_Property_ExW",
    "CM_Set_DevNode_Registry_PropertyA",
    "CM_Set_DevNode_Registry_PropertyW",
    "CM_Set_DevNode_Registry_Property_ExA",
    "CM_Set_DevNode_Registry_Property_ExW",
    "CM_Set_Device_Interface_PropertyW",
    "CM_Set_Device_Interface_Property_ExW",
    "CM_Set_HW_Prof",
    "CM_Set_HW_Prof_Ex",
    "CM_Set_HW_Prof_FlagsA",
    "CM_Set_HW_Prof_FlagsW",
    "CM_Set_HW_Prof_Flags_ExA",
    "CM_Set_HW_Prof_Flags_ExW",
    "CM_Setup_DevNode",
    "CM_Setup_DevNode_Ex",
    "CM_Test_Range_Available",
    "CM_Uninstall_DevNode",
    "CM_Uninstall_DevNode_Ex",
    "CM_Unregister_Device_InterfaceA",
    "CM_Unregister_Device_InterfaceW",
    "CM_Unregister_Device_Interface_ExA",
    "CM_Unregister_Device_Interface_ExW",
    "CM_Unregister_Notification",
    "COINSTALLER_CONTEXT_DATA",
    "CONFIGMG_VERSION",
    "CONFIGRET",
    "CONFLICT_DETAILS_A",
    "CONFLICT_DETAILS_W",
    "CONNECTION_DES",
    "CONNECTION_RESOURCE",
    "COPYFLG_FORCE_FILE_IN_USE",
    "COPYFLG_IN_USE_TRY_RENAME",
    "COPYFLG_NODECOMP",
    "COPYFLG_NOPRUNE",
    "COPYFLG_NOSKIP",
    "COPYFLG_NOVERSIONCHECK",
    "COPYFLG_NO_OVERWRITE",
    "COPYFLG_NO_VERSION_DIALOG",
    "COPYFLG_OVERWRITE_OLDER_ONLY",
    "COPYFLG_PROTECTED_WINDOWS_DRIVER_FILE",
    "COPYFLG_REPLACEONLY",
    "COPYFLG_REPLACE_BOOT_FILE",
    "COPYFLG_WARN_IF_SKIP",
    "CR_ACCESS_DENIED",
    "CR_ALREADY_SUCH_DEVINST",
    "CR_ALREADY_SUCH_DEVNODE",
    "CR_APM_VETOED",
    "CR_BUFFER_SMALL",
    "CR_CALL_NOT_IMPLEMENTED",
    "CR_CANT_SHARE_IRQ",
    "CR_CREATE_BLOCKED",
    "CR_DEFAULT",
    "CR_DEVICE_INTERFACE_ACTIVE",
    "CR_DEVICE_NOT_THERE",
    "CR_DEVINST_HAS_REQS",
    "CR_DEVLOADER_NOT_READY",
    "CR_DEVNODE_HAS_REQS",
    "CR_DLVXD_NOT_FOUND",
    "CR_FAILURE",
    "CR_FREE_RESOURCES",
    "CR_INVALID_API",
    "CR_INVALID_ARBITRATOR",
    "CR_INVALID_CONFLICT_LIST",
    "CR_INVALID_DATA",
    "CR_INVALID_DEVICE_ID",
    "CR_INVALID_DEVINST",
    "CR_INVALID_DEVNODE",
    "CR_INVALID_FLAG",
    "CR_INVALID_INDEX",
    "CR_INVALID_LOAD_TYPE",
    "CR_INVALID_LOG_CONF",
    "CR_INVALID_MACHINENAME",
    "CR_INVALID_NODELIST",
    "CR_INVALID_POINTER",
    "CR_INVALID_PRIORITY",
    "CR_INVALID_PROPERTY",
    "CR_INVALID_RANGE",
    "CR_INVALID_RANGE_LIST",
    "CR_INVALID_REFERENCE_STRING",
    "CR_INVALID_RESOURCEID",
    "CR_INVALID_RES_DES",
    "CR_INVALID_STRUCTURE_SIZE",
    "CR_MACHINE_UNAVAILABLE",
    "CR_NEED_RESTART",
    "CR_NOT_DISABLEABLE",
    "CR_NOT_SYSTEM_VM",
    "CR_NO_ARBITRATOR",
    "CR_NO_CM_SERVICES",
    "CR_NO_DEPENDENT",
    "CR_NO_MORE_HW_PROFILES",
    "CR_NO_MORE_LOG_CONF",
    "CR_NO_MORE_RES_DES",
    "CR_NO_REGISTRY_HANDLE",
    "CR_NO_SUCH_DEVICE_INTERFACE",
    "CR_NO_SUCH_DEVINST",
    "CR_NO_SUCH_DEVNODE",
    "CR_NO_SUCH_LOGICAL_DEV",
    "CR_NO_SUCH_REGISTRY_KEY",
    "CR_NO_SUCH_VALUE",
    "CR_OUT_OF_MEMORY",
    "CR_QUERY_VETOED",
    "CR_REGISTRY_ERROR",
    "CR_REMOTE_COMM_FAILURE",
    "CR_REMOVE_VETOED",
    "CR_SAME_RESOURCES",
    "CR_SUCCESS",
    "CR_WRONG_TYPE",
    "CS_DES",
    "CS_RESOURCE",
    "DELFLG_IN_USE",
    "DELFLG_IN_USE1",
    "DEVPRIVATE_DES",
    "DEVPRIVATE_RANGE",
    "DEVPRIVATE_RESOURCE",
    "DIBCI_NODISPLAYCLASS",
    "DIBCI_NOINSTALLCLASS",
    "DICD_GENERATE_ID",
    "DICD_INHERIT_CLASSDRVS",
    "DICLASSPROP_INSTALLER",
    "DICLASSPROP_INTERFACE",
    "DICS_DISABLE",
    "DICS_ENABLE",
    "DICS_FLAG_CONFIGGENERAL",
    "DICS_FLAG_CONFIGSPECIFIC",
    "DICS_FLAG_GLOBAL",
    "DICS_PROPCHANGE",
    "DICS_START",
    "DICS_STOP",
    "DICUSTOMDEVPROP_MERGE_MULTISZ",
    "DIF_ADDPROPERTYPAGE_ADVANCED",
    "DIF_ADDPROPERTYPAGE_BASIC",
    "DIF_ADDREMOTEPROPERTYPAGE_ADVANCED",
    "DIF_ALLOW_INSTALL",
    "DIF_ASSIGNRESOURCES",
    "DIF_CALCDISKSPACE",
    "DIF_DESTROYPRIVATEDATA",
    "DIF_DESTROYWIZARDDATA",
    "DIF_DETECT",
    "DIF_DETECTCANCEL",
    "DIF_DETECTVERIFY",
    "DIF_ENABLECLASS",
    "DIF_FINISHINSTALL_ACTION",
    "DIF_FIRSTTIMESETUP",
    "DIF_FOUNDDEVICE",
    "DIF_INSTALLCLASSDRIVERS",
    "DIF_INSTALLDEVICE",
    "DIF_INSTALLDEVICEFILES",
    "DIF_INSTALLINTERFACES",
    "DIF_INSTALLWIZARD",
    "DIF_MOVEDEVICE",
    "DIF_NEWDEVICEWIZARD_FINISHINSTALL",
    "DIF_NEWDEVICEWIZARD_POSTANALYZE",
    "DIF_NEWDEVICEWIZARD_PREANALYZE",
    "DIF_NEWDEVICEWIZARD_PRESELECT",
    "DIF_NEWDEVICEWIZARD_SELECT",
    "DIF_POWERMESSAGEWAKE",
    "DIF_PROPERTIES",
    "DIF_PROPERTYCHANGE",
    "DIF_REGISTERDEVICE",
    "DIF_REGISTER_COINSTALLERS",
    "DIF_REMOVE",
    "DIF_RESERVED1",
    "DIF_RESERVED2",
    "DIF_SELECTBESTCOMPATDRV",
    "DIF_SELECTCLASSDRIVERS",
    "DIF_SELECTDEVICE",
    "DIF_TROUBLESHOOTER",
    "DIF_UNREMOVE",
    "DIF_UNUSED1",
    "DIF_UPDATEDRIVER_UI",
    "DIF_VALIDATECLASSDRIVERS",
    "DIF_VALIDATEDRIVER",
    "DIGCDP_FLAG_ADVANCED",
    "DIGCDP_FLAG_BASIC",
    "DIGCDP_FLAG_REMOTE_ADVANCED",
    "DIGCDP_FLAG_REMOTE_BASIC",
    "DIGCF_ALLCLASSES",
    "DIGCF_DEFAULT",
    "DIGCF_DEVICEINTERFACE",
    "DIGCF_INTERFACEDEVICE",
    "DIGCF_PRESENT",
    "DIGCF_PROFILE",
    "DIIDFLAG_BITS",
    "DIIDFLAG_INSTALLCOPYINFDRIVERS",
    "DIIDFLAG_INSTALLNULLDRIVER",
    "DIIDFLAG_NOFINISHINSTALLUI",
    "DIIDFLAG_SHOWSEARCHUI",
    "DIIRFLAG_FORCE_INF",
    "DIIRFLAG_HOTPATCH",
    "DIIRFLAG_HW_USING_THE_INF",
    "DIIRFLAG_INF_ALREADY_COPIED",
    "DIIRFLAG_INSTALL_AS_SET",
    "DIIRFLAG_NOBACKUP",
    "DIIRFLAG_PRE_CONFIGURE_INF",
    "DIOCR_INSTALLER",
    "DIOCR_INTERFACE",
    "DIODI_NO_ADD",
    "DIOD_CANCEL_REMOVE",
    "DIOD_INHERIT_CLASSDRVS",
    "DIREG_BOTH",
    "DIREG_DEV",
    "DIREG_DRV",
    "DIRID_ABSOLUTE",
    "DIRID_ABSOLUTE_16BIT",
    "DIRID_APPS",
    "DIRID_BOOT",
    "DIRID_COLOR",
    "DIRID_COMMON_APPDATA",
    "DIRID_COMMON_DESKTOPDIRECTORY",
    "DIRID_COMMON_DOCUMENTS",
    "DIRID_COMMON_FAVORITES",
    "DIRID_COMMON_PROGRAMS",
    "DIRID_COMMON_STARTMENU",
    "DIRID_COMMON_STARTUP",
    "DIRID_COMMON_TEMPLATES",
    "DIRID_DEFAULT",
    "DIRID_DRIVERS",
    "DIRID_DRIVER_STORE",
    "DIRID_FONTS",
    "DIRID_HELP",
    "DIRID_INF",
    "DIRID_IOSUBSYS",
    "DIRID_LOADER",
    "DIRID_NULL",
    "DIRID_PRINTPROCESSOR",
    "DIRID_PROGRAM_FILES",
    "DIRID_PROGRAM_FILES_COMMON",
    "DIRID_PROGRAM_FILES_COMMONX86",
    "DIRID_PROGRAM_FILES_X86",
    "DIRID_SHARED",
    "DIRID_SPOOL",
    "DIRID_SPOOLDRIVERS",
    "DIRID_SRCPATH",
    "DIRID_SYSTEM",
    "DIRID_SYSTEM16",
    "DIRID_SYSTEM_X86",
    "DIRID_USER",
    "DIRID_USERPROFILE",
    "DIRID_VIEWERS",
    "DIRID_WINDOWS",
    "DIURFLAG_NO_REMOVE_INF",
    "DIURFLAG_RESERVED",
    "DI_AUTOASSIGNRES",
    "DI_CLASSINSTALLPARAMS",
    "DI_COMPAT_FROM_CLASS",
    "DI_DIDCLASS",
    "DI_DIDCOMPAT",
    "DI_DISABLED",
    "DI_DONOTCALLCONFIGMG",
    "DI_DRIVERPAGE_ADDED",
    "DI_ENUMSINGLEINF",
    "DI_FLAGSEX_ALLOWEXCLUDEDDRVS",
    "DI_FLAGSEX_ALTPLATFORM_DRVSEARCH",
    "DI_FLAGSEX_ALWAYSWRITEIDS",
    "DI_FLAGSEX_APPENDDRIVERLIST",
    "DI_FLAGSEX_BACKUPONREPLACE",
    "DI_FLAGSEX_CI_FAILED",
    "DI_FLAGSEX_DEVICECHANGE",
    "DI_FLAGSEX_DIDCOMPATINFO",
    "DI_FLAGSEX_DIDINFOLIST",
    "DI_FLAGSEX_DRIVERLIST_FROM_URL",
    "DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS",
    "DI_FLAGSEX_FILTERCLASSES",
    "DI_FLAGSEX_FILTERSIMILARDRIVERS",
    "DI_FLAGSEX_FINISHINSTALL_ACTION",
    "DI_FLAGSEX_INET_DRIVER",
    "DI_FLAGSEX_INSTALLEDDRIVER",
    "DI_FLAGSEX_IN_SYSTEM_SETUP",
    "DI_FLAGSEX_NOUIONQUERYREMOVE",
    "DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE",
    "DI_FLAGSEX_NO_DRVREG_MODIFY",
    "DI_FLAGSEX_POWERPAGE_ADDED",
    "DI_FLAGSEX_PREINSTALLBACKUP",
    "DI_FLAGSEX_PROPCHANGE_PENDING",
    "DI_FLAGSEX_RECURSIVESEARCH",
    "DI_FLAGSEX_RESERVED1",
    "DI_FLAGSEX_RESERVED2",
    "DI_FLAGSEX_RESERVED3",
    "DI_FLAGSEX_RESERVED4",
    "DI_FLAGSEX_RESTART_DEVICE_ONLY",
    "DI_FLAGSEX_SEARCH_PUBLISHED_INFS",
    "DI_FLAGSEX_SETFAILEDINSTALL",
    "DI_FLAGSEX_USECLASSFORCOMPAT",
    "DI_FORCECOPY",
    "DI_GENERALPAGE_ADDED",
    "DI_INF_IS_SORTED",
    "DI_INSTALLDISABLED",
    "DI_MULTMFGS",
    "DI_NEEDREBOOT",
    "DI_NEEDRESTART",
    "DI_NOBROWSE",
    "DI_NODI_DEFAULTACTION",
    "DI_NOFILECOPY",
    "DI_NOSELECTICONS",
    "DI_NOVCP",
    "DI_NOWRITE_IDS",
    "DI_OVERRIDE_INFFLAGS",
    "DI_PROPERTIES_CHANGE",
    "DI_PROPS_NOCHANGEUSAGE",
    "DI_QUIETINSTALL",
    "DI_REMOVEDEVICE_CONFIGSPECIFIC",
    "DI_REMOVEDEVICE_GLOBAL",
    "DI_RESOURCEPAGE_ADDED",
    "DI_SHOWALL",
    "DI_SHOWCLASS",
    "DI_SHOWCOMPAT",
    "DI_SHOWOEM",
    "DI_UNREMOVEDEVICE_CONFIGSPECIFIC",
    "DI_USECI_SELECTSTRINGS",
    "DMA_DES",
    "DMA_RANGE",
    "DMA_RESOURCE",
    "DMI_BKCOLOR",
    "DMI_MASK",
    "DMI_USERECT",
    "DNF_ALWAYSEXCLUDEFROMLIST",
    "DNF_AUTHENTICODE_SIGNED",
    "DNF_BAD_DRIVER",
    "DNF_BASIC_DRIVER",
    "DNF_CLASS_DRIVER",
    "DNF_COMPATIBLE_DRIVER",
    "DNF_DUPDESC",
    "DNF_DUPDRIVERVER",
    "DNF_DUPPROVIDER",
    "DNF_EXCLUDEFROMLIST",
    "DNF_INBOX_DRIVER",
    "DNF_INET_DRIVER",
    "DNF_INF_IS_SIGNED",
    "DNF_INSTALLEDDRIVER",
    "DNF_LEGACYINF",
    "DNF_NODRIVER",
    "DNF_OEM_F6_INF",
    "DNF_OLDDRIVER",
    "DNF_OLD_INET_DRIVER",
    "DNF_REQUESTADDITIONALSOFTWARE",
    "DNF_UNUSED1",
    "DNF_UNUSED2",
    "DNF_UNUSED_22",
    "DNF_UNUSED_23",
    "DNF_UNUSED_24",
    "DNF_UNUSED_25",
    "DNF_UNUSED_26",
    "DNF_UNUSED_27",
    "DNF_UNUSED_28",
    "DNF_UNUSED_29",
    "DNF_UNUSED_30",
    "DNF_UNUSED_31",
    "DN_APM_DRIVER",
    "DN_APM_ENUMERATOR",
    "DN_ARM_WAKEUP",
    "DN_BAD_PARTIAL",
    "DN_BOOT_LOG_PROB",
    "DN_CHILD_WITH_INVALID_ID",
    "DN_DEVICE_DISCONNECTED",
    "DN_DISABLEABLE",
    "DN_DRIVER_BLOCKED",
    "DN_DRIVER_LOADED",
    "DN_ENUM_LOADED",
    "DN_FILTERED",
    "DN_HARDWARE_ENUM",
    "DN_HAS_MARK",
    "DN_HAS_PROBLEM",
    "DN_LEGACY_DRIVER",
    "DN_LIAR",
    "DN_MANUAL",
    "DN_MF_CHILD",
    "DN_MF_PARENT",
    "DN_MOVED",
    "DN_NEEDS_LOCKING",
    "DN_NEED_RESTART",
    "DN_NEED_TO_ENUM",
    "DN_NOT_FIRST_TIME",
    "DN_NOT_FIRST_TIMEE",
    "DN_NO_SHOW_IN_DM",
    "DN_NT_DRIVER",
    "DN_NT_ENUMERATOR",
    "DN_PRIVATE_PROBLEM",
    "DN_QUERY_REMOVE_ACTIVE",
    "DN_QUERY_REMOVE_PENDING",
    "DN_REBAL_CANDIDATE",
    "DN_REMOVABLE",
    "DN_ROOT_ENUMERATED",
    "DN_SILENT_INSTALL",
    "DN_STARTED",
    "DN_STOP_FREE_RES",
    "DN_WILL_BE_REMOVED",
    "DPROMPT_BUFFERTOOSMALL",
    "DPROMPT_CANCEL",
    "DPROMPT_OUTOFMEMORY",
    "DPROMPT_SKIPFILE",
    "DPROMPT_SUCCESS",
    "DRIVER_COMPATID_RANK",
    "DRIVER_HARDWAREID_MASK",
    "DRIVER_HARDWAREID_RANK",
    "DRIVER_UNTRUSTED_COMPATID_RANK",
    "DRIVER_UNTRUSTED_HARDWAREID_RANK",
    "DRIVER_UNTRUSTED_RANK",
    "DRIVER_W9X_SUSPECT_COMPATID_RANK",
    "DRIVER_W9X_SUSPECT_HARDWAREID_RANK",
    "DRIVER_W9X_SUSPECT_RANK",
    "DWORD_MAX",
    "DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT",
    "DYNAWIZ_FLAG_INSTALLDET_NEXT",
    "DYNAWIZ_FLAG_INSTALLDET_PREV",
    "DYNAWIZ_FLAG_PAGESADDED",
    "DiInstallDevice",
    "DiInstallDriverA",
    "DiInstallDriverW",
    "DiRollbackDriver",
    "DiShowUpdateDevice",
    "DiShowUpdateDriver",
    "DiUninstallDevice",
    "DiUninstallDriverA",
    "DiUninstallDriverW",
    "ENABLECLASS_FAILURE",
    "ENABLECLASS_QUERY",
    "ENABLECLASS_SUCCESS",
    "FILEOP_ABORT",
    "FILEOP_BACKUP",
    "FILEOP_COPY",
    "FILEOP_DELETE",
    "FILEOP_DOIT",
    "FILEOP_NEWPATH",
    "FILEOP_RENAME",
    "FILEOP_RETRY",
    "FILEOP_SKIP",
    "FILEPATHS_A",
    "FILEPATHS_SIGNERINFO_A",
    "FILEPATHS_SIGNERINFO_W",
    "FILEPATHS_W",
    "FILE_COMPRESSION_MSZIP",
    "FILE_COMPRESSION_NONE",
    "FILE_COMPRESSION_NTCAB",
    "FILE_COMPRESSION_WINLZA",
    "FILE_IN_CABINET_INFO_A",
    "FILE_IN_CABINET_INFO_W",
    "FILTERED_LOG_CONF",
    "FLG_ADDPROPERTY_AND",
    "FLG_ADDPROPERTY_APPEND",
    "FLG_ADDPROPERTY_NOCLOBBER",
    "FLG_ADDPROPERTY_OR",
    "FLG_ADDPROPERTY_OVERWRITEONLY",
    "FLG_ADDREG_32BITKEY",
    "FLG_ADDREG_64BITKEY",
    "FLG_ADDREG_APPEND",
    "FLG_ADDREG_BINVALUETYPE",
    "FLG_ADDREG_DELREG_BIT",
    "FLG_ADDREG_DELVAL",
    "FLG_ADDREG_KEYONLY",
    "FLG_ADDREG_KEYONLY_COMMON",
    "FLG_ADDREG_NOCLOBBER",
    "FLG_ADDREG_OVERWRITEONLY",
    "FLG_ADDREG_TYPE_EXPAND_SZ",
    "FLG_ADDREG_TYPE_MULTI_SZ",
    "FLG_ADDREG_TYPE_SZ",
    "FLG_BITREG_32BITKEY",
    "FLG_BITREG_64BITKEY",
    "FLG_BITREG_CLEARBITS",
    "FLG_BITREG_SETBITS",
    "FLG_DELPROPERTY_MULTI_SZ_DELSTRING",
    "FLG_DELREG_32BITKEY",
    "FLG_DELREG_64BITKEY",
    "FLG_DELREG_KEYONLY_COMMON",
    "FLG_DELREG_OPERATION_MASK",
    "FLG_DELREG_TYPE_EXPAND_SZ",
    "FLG_DELREG_TYPE_MULTI_SZ",
    "FLG_DELREG_TYPE_SZ",
    "FLG_DELREG_VALUE",
    "FLG_INI2REG_32BITKEY",
    "FLG_INI2REG_64BITKEY",
    "FLG_PROFITEM_CSIDL",
    "FLG_PROFITEM_CURRENTUSER",
    "FLG_PROFITEM_DELETE",
    "FLG_PROFITEM_GROUP",
    "FLG_REGSVR_DLLINSTALL",
    "FLG_REGSVR_DLLREGISTER",
    "FORCED_LOG_CONF",
    "GUID_ACPI_CMOS_INTERFACE_STANDARD",
    "GUID_ACPI_INTERFACE_STANDARD",
    "GUID_ACPI_INTERFACE_STANDARD2",
    "GUID_ACPI_PORT_RANGES_INTERFACE_STANDARD",
    "GUID_ACPI_REGS_INTERFACE_STANDARD",
    "GUID_AGP_TARGET_BUS_INTERFACE_STANDARD",
    "GUID_ARBITER_INTERFACE_STANDARD",
    "GUID_BUS_INTERFACE_STANDARD",
    "GUID_BUS_RESOURCE_UPDATE_INTERFACE",
    "GUID_BUS_TYPE_1394",
    "GUID_BUS_TYPE_ACPI",
    "GUID_BUS_TYPE_AVC",
    "GUID_BUS_TYPE_DOT4PRT",
    "GUID_BUS_TYPE_EISA",
    "GUID_BUS_TYPE_HID",
    "GUID_BUS_TYPE_INTERNAL",
    "GUID_BUS_TYPE_IRDA",
    "GUID_BUS_TYPE_ISAPNP",
    "GUID_BUS_TYPE_LPTENUM",
    "GUID_BUS_TYPE_MCA",
    "GUID_BUS_TYPE_PCI",
    "GUID_BUS_TYPE_PCMCIA",
    "GUID_BUS_TYPE_SCM",
    "GUID_BUS_TYPE_SD",
    "GUID_BUS_TYPE_SERENUM",
    "GUID_BUS_TYPE_SW_DEVICE",
    "GUID_BUS_TYPE_USB",
    "GUID_BUS_TYPE_USBPRINT",
    "GUID_D3COLD_AUX_POWER_AND_TIMING_INTERFACE",
    "GUID_D3COLD_SUPPORT_INTERFACE",
    "GUID_DEVCLASS_1394",
    "GUID_DEVCLASS_1394DEBUG",
    "GUID_DEVCLASS_61883",
    "GUID_DEVCLASS_ADAPTER",
    "GUID_DEVCLASS_APMSUPPORT",
    "GUID_DEVCLASS_AVC",
    "GUID_DEVCLASS_BATTERY",
    "GUID_DEVCLASS_BIOMETRIC",
    "GUID_DEVCLASS_BLUETOOTH",
    "GUID_DEVCLASS_CAMERA",
    "GUID_DEVCLASS_CDROM",
    "GUID_DEVCLASS_COMPUTEACCELERATOR",
    "GUID_DEVCLASS_COMPUTER",
    "GUID_DEVCLASS_DECODER",
    "GUID_DEVCLASS_DISKDRIVE",
    "GUID_DEVCLASS_DISPLAY",
    "GUID_DEVCLASS_DOT4",
    "GUID_DEVCLASS_DOT4PRINT",
    "GUID_DEVCLASS_EHSTORAGESILO",
    "GUID_DEVCLASS_ENUM1394",
    "GUID_DEVCLASS_EXTENSION",
    "GUID_DEVCLASS_FDC",
    "GUID_DEVCLASS_FIRMWARE",
    "GUID_DEVCLASS_FLOPPYDISK",
    "GUID_DEVCLASS_FSFILTER_ACTIVITYMONITOR",
    "GUID_DEVCLASS_FSFILTER_ANTIVIRUS",
    "GUID_DEVCLASS_FSFILTER_BOTTOM",
    "GUID_DEVCLASS_FSFILTER_CFSMETADATASERVER",
    "GUID_DEVCLASS_FSFILTER_COMPRESSION",
    "GUID_DEVCLASS_FSFILTER_CONTENTSCREENER",
    "GUID_DEVCLASS_FSFILTER_CONTINUOUSBACKUP",
    "GUID_DEVCLASS_FSFILTER_COPYPROTECTION",
    "GUID_DEVCLASS_FSFILTER_ENCRYPTION",
    "GUID_DEVCLASS_FSFILTER_HSM",
    "GUID_DEVCLASS_FSFILTER_INFRASTRUCTURE",
    "GUID_DEVCLASS_FSFILTER_OPENFILEBACKUP",
    "GUID_DEVCLASS_FSFILTER_PHYSICALQUOTAMANAGEMENT",
    "GUID_DEVCLASS_FSFILTER_QUOTAMANAGEMENT",
    "GUID_DEVCLASS_FSFILTER_REPLICATION",
    "GUID_DEVCLASS_FSFILTER_SECURITYENHANCER",
    "GUID_DEVCLASS_FSFILTER_SYSTEM",
    "GUID_DEVCLASS_FSFILTER_SYSTEMRECOVERY",
    "GUID_DEVCLASS_FSFILTER_TOP",
    "GUID_DEVCLASS_FSFILTER_UNDELETE",
    "GUID_DEVCLASS_FSFILTER_VIRTUALIZATION",
    "GUID_DEVCLASS_GPS",
    "GUID_DEVCLASS_HDC",
    "GUID_DEVCLASS_HIDCLASS",
    "GUID_DEVCLASS_HOLOGRAPHIC",
    "GUID_DEVCLASS_IMAGE",
    "GUID_DEVCLASS_INFINIBAND",
    "GUID_DEVCLASS_INFRARED",
    "GUID_DEVCLASS_KEYBOARD",
    "GUID_DEVCLASS_LEGACYDRIVER",
    "GUID_DEVCLASS_MEDIA",
    "GUID_DEVCLASS_MEDIUM_CHANGER",
    "GUID_DEVCLASS_MEMORY",
    "GUID_DEVCLASS_MODEM",
    "GUID_DEVCLASS_MONITOR",
    "GUID_DEVCLASS_MOUSE",
    "GUID_DEVCLASS_MTD",
    "GUID_DEVCLASS_MULTIFUNCTION",
    "GUID_DEVCLASS_MULTIPORTSERIAL",
    "GUID_DEVCLASS_NET",
    "GUID_DEVCLASS_NETCLIENT",
    "GUID_DEVCLASS_NETDRIVER",
    "GUID_DEVCLASS_NETSERVICE",
    "GUID_DEVCLASS_NETTRANS",
    "GUID_DEVCLASS_NETUIO",
    "GUID_DEVCLASS_NODRIVER",
    "GUID_DEVCLASS_PCMCIA",
    "GUID_DEVCLASS_PNPPRINTERS",
    "GUID_DEVCLASS_PORTS",
    "GUID_DEVCLASS_PRINTER",
    "GUID_DEVCLASS_PRINTERUPGRADE",
    "GUID_DEVCLASS_PRINTQUEUE",
    "GUID_DEVCLASS_PROCESSOR",
    "GUID_DEVCLASS_SBP2",
    "GUID_DEVCLASS_SCMDISK",
    "GUID_DEVCLASS_SCMVOLUME",
    "GUID_DEVCLASS_SCSIADAPTER",
    "GUID_DEVCLASS_SECURITYACCELERATOR",
    "GUID_DEVCLASS_SENSOR",
    "GUID_DEVCLASS_SIDESHOW",
    "GUID_DEVCLASS_SMARTCARDREADER",
    "GUID_DEVCLASS_SMRDISK",
    "GUID_DEVCLASS_SMRVOLUME",
    "GUID_DEVCLASS_SOFTWARECOMPONENT",
    "GUID_DEVCLASS_SOUND",
    "GUID_DEVCLASS_SYSTEM",
    "GUID_DEVCLASS_TAPEDRIVE",
    "GUID_DEVCLASS_UCM",
    "GUID_DEVCLASS_UNKNOWN",
    "GUID_DEVCLASS_USB",
    "GUID_DEVCLASS_VOLUME",
    "GUID_DEVCLASS_VOLUMESNAPSHOT",
    "GUID_DEVCLASS_WCEUSBS",
    "GUID_DEVCLASS_WPD",
    "GUID_DEVICE_INTERFACE_ARRIVAL",
    "GUID_DEVICE_INTERFACE_REMOVAL",
    "GUID_DEVICE_RESET_INTERFACE_STANDARD",
    "GUID_DMA_CACHE_COHERENCY_INTERFACE",
    "GUID_HWPROFILE_CHANGE_CANCELLED",
    "GUID_HWPROFILE_CHANGE_COMPLETE",
    "GUID_HWPROFILE_QUERY_CHANGE",
    "GUID_INT_ROUTE_INTERFACE_STANDARD",
    "GUID_IOMMU_BUS_INTERFACE",
    "GUID_KERNEL_SOFT_RESTART_CANCEL",
    "GUID_KERNEL_SOFT_RESTART_FINALIZE",
    "GUID_KERNEL_SOFT_RESTART_PREPARE",
    "GUID_LEGACY_DEVICE_DETECTION_STANDARD",
    "GUID_MF_ENUMERATION_INTERFACE",
    "GUID_MSIX_TABLE_CONFIG_INTERFACE",
    "GUID_NPEM_CONTROL_INTERFACE",
    "GUID_PARTITION_UNIT_INTERFACE_STANDARD",
    "GUID_PCC_INTERFACE_INTERNAL",
    "GUID_PCC_INTERFACE_STANDARD",
    "GUID_PCI_ATS_INTERFACE",
    "GUID_PCI_BUS_INTERFACE_STANDARD",
    "GUID_PCI_BUS_INTERFACE_STANDARD2",
    "GUID_PCI_DEVICE_PRESENT_INTERFACE",
    "GUID_PCI_EXPRESS_LINK_QUIESCENT_INTERFACE",
    "GUID_PCI_EXPRESS_ROOT_PORT_INTERFACE",
    "GUID_PCI_FPGA_CONTROL_INTERFACE",
    "GUID_PCI_PTM_CONTROL_INTERFACE",
    "GUID_PCI_SECURITY_INTERFACE",
    "GUID_PCI_VIRTUALIZATION_INTERFACE",
    "GUID_PCMCIA_BUS_INTERFACE_STANDARD",
    "GUID_PNP_CUSTOM_NOTIFICATION",
    "GUID_PNP_EXTENDED_ADDRESS_INTERFACE",
    "GUID_PNP_LOCATION_INTERFACE",
    "GUID_PNP_POWER_NOTIFICATION",
    "GUID_PNP_POWER_SETTING_CHANGE",
    "GUID_POWER_DEVICE_ENABLE",
    "GUID_POWER_DEVICE_TIMEOUTS",
    "GUID_POWER_DEVICE_WAKE_ENABLE",
    "GUID_PROCESSOR_PCC_INTERFACE_STANDARD",
    "GUID_QUERY_CRASHDUMP_FUNCTIONS",
    "GUID_RECOVERY_NVMED_PREPARE_SHUTDOWN",
    "GUID_RECOVERY_PCI_PREPARE_SHUTDOWN",
    "GUID_REENUMERATE_SELF_INTERFACE_STANDARD",
    "GUID_SCM_BUS_INTERFACE",
    "GUID_SCM_BUS_LD_INTERFACE",
    "GUID_SCM_BUS_NVD_INTERFACE",
    "GUID_SCM_PHYSICAL_NVDIMM_INTERFACE",
    "GUID_SDEV_IDENTIFIER_INTERFACE",
    "GUID_SECURE_DRIVER_INTERFACE",
    "GUID_TARGET_DEVICE_QUERY_REMOVE",
    "GUID_TARGET_DEVICE_REMOVE_CANCELLED",
    "GUID_TARGET_DEVICE_REMOVE_COMPLETE",
    "GUID_TARGET_DEVICE_TRANSPORT_RELATIONS_CHANGED",
    "GUID_THERMAL_COOLING_INTERFACE",
    "GUID_TRANSLATOR_INTERFACE_STANDARD",
    "GUID_WUDF_DEVICE_HOST_PROBLEM",
    "HCMNOTIFICATION",
    "HDEVINFO",
    "HWPROFILEINFO_W",
    "HWProfileInfo_sA",
    "IDD_DYNAWIZ_ANALYZEDEV_PAGE",
    "IDD_DYNAWIZ_ANALYZE_NEXTPAGE",
    "IDD_DYNAWIZ_ANALYZE_PREVPAGE",
    "IDD_DYNAWIZ_FIRSTPAGE",
    "IDD_DYNAWIZ_INSTALLDETECTEDDEVS_PAGE",
    "IDD_DYNAWIZ_INSTALLDETECTED_NEXTPAGE",
    "IDD_DYNAWIZ_INSTALLDETECTED_NODEVS",
    "IDD_DYNAWIZ_INSTALLDETECTED_PREVPAGE",
    "IDD_DYNAWIZ_SELECTCLASS_PAGE",
    "IDD_DYNAWIZ_SELECTDEV_PAGE",
    "IDD_DYNAWIZ_SELECT_NEXTPAGE",
    "IDD_DYNAWIZ_SELECT_PREVPAGE",
    "IDF_CHECKFIRST",
    "IDF_NOBEEP",
    "IDF_NOBROWSE",
    "IDF_NOCOMPRESSED",
    "IDF_NODETAILS",
    "IDF_NOFOREGROUND",
    "IDF_NOREMOVABLEMEDIAPROMPT",
    "IDF_NOSKIP",
    "IDF_OEMDISK",
    "IDF_USEDISKNAMEASPROMPT",
    "IDF_WARNIFSKIP",
    "IDI_CLASSICON_OVERLAYFIRST",
    "IDI_CLASSICON_OVERLAYLAST",
    "IDI_CONFLICT",
    "IDI_DISABLED_OVL",
    "IDI_FORCED_OVL",
    "IDI_PROBLEM_OVL",
    "IDI_RESOURCE",
    "IDI_RESOURCEFIRST",
    "IDI_RESOURCELAST",
    "IDI_RESOURCEOVERLAYFIRST",
    "IDI_RESOURCEOVERLAYLAST",
    "INFCONTEXT",
    "INFINFO_DEFAULT_SEARCH",
    "INFINFO_INF_NAME_IS_ABSOLUTE",
    "INFINFO_INF_PATH_LIST_SEARCH",
    "INFINFO_INF_SPEC_IS_HINF",
    "INFINFO_REVERSE_DEFAULT_SEARCH",
    "INFSTR_BUS_ALL",
    "INFSTR_BUS_EISA",
    "INFSTR_BUS_ISA",
    "INFSTR_BUS_MCA",
    "INFSTR_CFGPRI_DESIRED",
    "INFSTR_CFGPRI_DISABLED",
    "INFSTR_CFGPRI_FORCECONFIG",
    "INFSTR_CFGPRI_HARDRECONFIG",
    "INFSTR_CFGPRI_HARDWIRED",
    "INFSTR_CFGPRI_NORMAL",
    "INFSTR_CFGPRI_POWEROFF",
    "INFSTR_CFGPRI_REBOOT",
    "INFSTR_CFGPRI_RESTART",
    "INFSTR_CFGPRI_SUBOPTIMAL",
    "INFSTR_CFGTYPE_BASIC",
    "INFSTR_CFGTYPE_FORCED",
    "INFSTR_CFGTYPE_OVERRIDE",
    "INFSTR_CLASS_SAFEEXCL",
    "INFSTR_CONTROLFLAGS_SECTION",
    "INFSTR_DRIVERSELECT_FUNCTIONS",
    "INFSTR_DRIVERSELECT_SECTION",
    "INFSTR_DRIVERVERSION_SECTION",
    "INFSTR_KEY_ACTION",
    "INFSTR_KEY_ALWAYSEXCLUDEFROMSELECT",
    "INFSTR_KEY_BUFFER_SIZE",
    "INFSTR_KEY_CATALOGFILE",
    "INFSTR_KEY_CHANNEL_ACCESS",
    "INFSTR_KEY_CHANNEL_ENABLED",
    "INFSTR_KEY_CHANNEL_ISOLATION",
    "INFSTR_KEY_CHANNEL_VALUE",
    "INFSTR_KEY_CLASS",
    "INFSTR_KEY_CLASSGUID",
    "INFSTR_KEY_CLOCK_TYPE",
    "INFSTR_KEY_CONFIGPRIORITY",
    "INFSTR_KEY_COPYFILESONLY",
    "INFSTR_KEY_DATA_ITEM",
    "INFSTR_KEY_DELAYEDAUTOSTART",
    "INFSTR_KEY_DEPENDENCIES",
    "INFSTR_KEY_DESCRIPTION",
    "INFSTR_KEY_DETECTLIST",
    "INFSTR_KEY_DETPARAMS",
    "INFSTR_KEY_DISABLE_REALTIME_PERSISTENCE",
    "INFSTR_KEY_DISPLAYNAME",
    "INFSTR_KEY_DMA",
    "INFSTR_KEY_DMACONFIG",
    "INFSTR_KEY_DRIVERSET",
    "INFSTR_KEY_ENABLED",
    "INFSTR_KEY_ENABLE_FLAGS",
    "INFSTR_KEY_ENABLE_LEVEL",
    "INFSTR_KEY_ENABLE_PROPERTY",
    "INFSTR_KEY_ERRORCONTROL",
    "INFSTR_KEY_EXCLUDEFROMSELECT",
    "INFSTR_KEY_EXCLUDERES",
    "INFSTR_KEY_EXTENSIONID",
    "INFSTR_KEY_FILE_MAX",
    "INFSTR_KEY_FILE_NAME",
    "INFSTR_KEY_FLUSH_TIMER",
    "INFSTR_KEY_FROMINET",
    "INFSTR_KEY_HARDWARE_CLASS",
    "INFSTR_KEY_HARDWARE_CLASSGUID",
    "INFSTR_KEY_INTERACTIVEINSTALL",
    "INFSTR_KEY_IO",
    "INFSTR_KEY_IOCONFIG",
    "INFSTR_KEY_IRQ",
    "INFSTR_KEY_IRQCONFIG",
    "INFSTR_KEY_LOADORDERGROUP",
    "INFSTR_KEY_LOGGING_AUTOBACKUP",
    "INFSTR_KEY_LOGGING_MAXSIZE",
    "INFSTR_KEY_LOGGING_RETENTION",
    "INFSTR_KEY_LOG_FILE_MODE",
    "INFSTR_KEY_MATCH_ALL_KEYWORD",
    "INFSTR_KEY_MATCH_ANY_KEYWORD",
    "INFSTR_KEY_MAXIMUM_BUFFERS",
    "INFSTR_KEY_MAX_FILE_SIZE",
    "INFSTR_KEY_MEM",
    "INFSTR_KEY_MEMCONFIG",
    "INFSTR_KEY_MEMLARGECONFIG",
    "INFSTR_KEY_MESSAGE_FILE",
    "INFSTR_KEY_MFCARDCONFIG",
    "INFSTR_KEY_MINIMUM_BUFFERS",
    "INFSTR_KEY_NAME",
    "INFSTR_KEY_NOSETUPINF",
    "INFSTR_KEY_PARAMETER_FILE",
    "INFSTR_KEY_PATH",
    "INFSTR_KEY_PCCARDCONFIG",
    "INFSTR_KEY_PNPLOCKDOWN",
    "INFSTR_KEY_PROVIDER",
    "INFSTR_KEY_PROVIDER_NAME",
    "INFSTR_KEY_REQUESTADDITIONALSOFTWARE",
    "INFSTR_KEY_REQUIREDPRIVILEGES",
    "INFSTR_KEY_RESOURCE_FILE",
    "INFSTR_KEY_SECURITY",
    "INFSTR_KEY_SERVICEBINARY",
    "INFSTR_KEY_SERVICESIDTYPE",
    "INFSTR_KEY_SERVICETYPE",
    "INFSTR_KEY_SIGNATURE",
    "INFSTR_KEY_SKIPLIST",
    "INFSTR_KEY_START",
    "INFSTR_KEY_STARTNAME",
    "INFSTR_KEY_STARTTYPE",
    "INFSTR_KEY_SUB_TYPE",
    "INFSTR_KEY_TRIGGER_TYPE",
    "INFSTR_PLATFORM_NT",
    "INFSTR_PLATFORM_NTALPHA",
    "INFSTR_PLATFORM_NTAMD64",
    "INFSTR_PLATFORM_NTARM",
    "INFSTR_PLATFORM_NTARM64",
    "INFSTR_PLATFORM_NTAXP64",
    "INFSTR_PLATFORM_NTIA64",
    "INFSTR_PLATFORM_NTMIPS",
    "INFSTR_PLATFORM_NTPPC",
    "INFSTR_PLATFORM_NTX86",
    "INFSTR_PLATFORM_WIN",
    "INFSTR_REBOOT",
    "INFSTR_RESTART",
    "INFSTR_RISK_BIOSROMRD",
    "INFSTR_RISK_DELICATE",
    "INFSTR_RISK_IORD",
    "INFSTR_RISK_IOWR",
    "INFSTR_RISK_LOW",
    "INFSTR_RISK_MEMRD",
    "INFSTR_RISK_MEMWR",
    "INFSTR_RISK_NONE",
    "INFSTR_RISK_QUERYDRV",
    "INFSTR_RISK_SWINT",
    "INFSTR_RISK_UNRELIABLE",
    "INFSTR_RISK_VERYHIGH",
    "INFSTR_RISK_VERYLOW",
    "INFSTR_SECT_AUTOEXECBAT",
    "INFSTR_SECT_AVOIDCFGSYSDEV",
    "INFSTR_SECT_AVOIDENVDEV",
    "INFSTR_SECT_AVOIDINIDEV",
    "INFSTR_SECT_BADACPIBIOS",
    "INFSTR_SECT_BADDISKBIOS",
    "INFSTR_SECT_BADDSBIOS",
    "INFSTR_SECT_BADPMCALLBIOS",
    "INFSTR_SECT_BADPNPBIOS",
    "INFSTR_SECT_BADRMCALLBIOS",
    "INFSTR_SECT_BADROUTINGTABLEBIOS",
    "INFSTR_SECT_CFGSYS",
    "INFSTR_SECT_CLASS_INSTALL",
    "INFSTR_SECT_CLASS_INSTALL_32",
    "INFSTR_SECT_DEFAULT_INSTALL",
    "INFSTR_SECT_DEFAULT_UNINSTALL",
    "INFSTR_SECT_DETCLASSINFO",
    "INFSTR_SECT_DETMODULES",
    "INFSTR_SECT_DETOPTIONS",
    "INFSTR_SECT_DEVINFS",
    "INFSTR_SECT_DISPLAY_CLEANUP",
    "INFSTR_SECT_EXTENSIONCONTRACTS",
    "INFSTR_SECT_FORCEHWVERIFY",
    "INFSTR_SECT_GOODACPIBIOS",
    "INFSTR_SECT_HPOMNIBOOK",
    "INFSTR_SECT_INTERFACE_INSTALL_32",
    "INFSTR_SECT_MACHINEIDBIOS",
    "INFSTR_SECT_MANUALDEV",
    "INFSTR_SECT_MFG",
    "INFSTR_SECT_REGCFGSYSDEV",
    "INFSTR_SECT_REGENVDEV",
    "INFSTR_SECT_REGINIDEV",
    "INFSTR_SECT_SYSINI",
    "INFSTR_SECT_SYSINIDRV",
    "INFSTR_SECT_TARGETCOMPUTERS",
    "INFSTR_SECT_VERSION",
    "INFSTR_SECT_WININIRUN",
    "INFSTR_SOFTWAREVERSION_SECTION",
    "INFSTR_STRKEY_DRVDESC",
    "INFSTR_SUBKEY_COINSTALLERS",
    "INFSTR_SUBKEY_CTL",
    "INFSTR_SUBKEY_DET",
    "INFSTR_SUBKEY_EVENTS",
    "INFSTR_SUBKEY_FACTDEF",
    "INFSTR_SUBKEY_FILTERS",
    "INFSTR_SUBKEY_HW",
    "INFSTR_SUBKEY_INTERFACES",
    "INFSTR_SUBKEY_LOGCONFIG",
    "INFSTR_SUBKEY_LOGCONFIGOVERRIDE",
    "INFSTR_SUBKEY_NORESOURCEDUPS",
    "INFSTR_SUBKEY_POSSIBLEDUPS",
    "INFSTR_SUBKEY_SERVICES",
    "INFSTR_SUBKEY_SOFTWARE",
    "INFSTR_SUBKEY_WMI",
    "INF_STYLE_CACHE_DISABLE",
    "INF_STYLE_CACHE_ENABLE",
    "INF_STYLE_CACHE_IGNORE",
    "INF_STYLE_NONE",
    "INF_STYLE_OLDNT",
    "INF_STYLE_WIN4",
    "INSTALLFLAG_BITS",
    "INSTALLFLAG_FORCE",
    "INSTALLFLAG_NONINTERACTIVE",
    "INSTALLFLAG_READONLY",
    "IOA_Local",
    "IO_ALIAS_10_BIT_DECODE",
    "IO_ALIAS_12_BIT_DECODE",
    "IO_ALIAS_16_BIT_DECODE",
    "IO_ALIAS_POSITIVE_DECODE",
    "IO_DES",
    "IO_RANGE",
    "IO_RESOURCE",
    "IRQ_DES_32",
    "IRQ_DES_64",
    "IRQ_RANGE",
    "IRQ_RESOURCE_32",
    "IRQ_RESOURCE_64",
    "InstallHinfSectionA",
    "InstallHinfSectionW",
    "LCPRI_BOOTCONFIG",
    "LCPRI_DESIRED",
    "LCPRI_DISABLED",
    "LCPRI_FORCECONFIG",
    "LCPRI_HARDRECONFIG",
    "LCPRI_HARDWIRED",
    "LCPRI_IMPOSSIBLE",
    "LCPRI_LASTBESTCONFIG",
    "LCPRI_LASTSOFTCONFIG",
    "LCPRI_NORMAL",
    "LCPRI_POWEROFF",
    "LCPRI_REBOOT",
    "LCPRI_RESTART",
    "LCPRI_SUBOPTIMAL",
    "LINE_LEN",
    "LOG_CONF_BITS",
    "LogSevError",
    "LogSevFatalError",
    "LogSevInformation",
    "LogSevMaximum",
    "LogSevWarning",
    "MAX_CLASS_NAME_LEN",
    "MAX_CONFIG_VALUE",
    "MAX_DEVICE_ID_LEN",
    "MAX_DEVNODE_ID_LEN",
    "MAX_DMA_CHANNELS",
    "MAX_GUID_STRING_LEN",
    "MAX_IDD_DYNAWIZ_RESOURCE_ID",
    "MAX_INFSTR_STRKEY_LEN",
    "MAX_INF_FLAG",
    "MAX_INF_SECTION_NAME_LENGTH",
    "MAX_INF_STRING_LENGTH",
    "MAX_INSTALLWIZARD_DYNAPAGES",
    "MAX_INSTANCE_VALUE",
    "MAX_INSTRUCTION_LEN",
    "MAX_IO_PORTS",
    "MAX_IRQS",
    "MAX_KEY_LEN",
    "MAX_LABEL_LEN",
    "MAX_LCPRI",
    "MAX_MEM_REGISTERS",
    "MAX_PRIORITYSTR_LEN",
    "MAX_PROFILE_LEN",
    "MAX_SERVICE_NAME_LEN",
    "MAX_SUBTITLE_LEN",
    "MAX_TITLE_LEN",
    "MEM_DES",
    "MEM_LARGE_DES",
    "MEM_LARGE_RANGE",
    "MEM_LARGE_RESOURCE",
    "MEM_RANGE",
    "MEM_RESOURCE",
    "MFCARD_DES",
    "MFCARD_RESOURCE",
    "MIN_IDD_DYNAWIZ_RESOURCE_ID",
    "NDW_INSTALLFLAG_CI_PICKED_OEM",
    "NDW_INSTALLFLAG_DIDFACTDEFS",
    "NDW_INSTALLFLAG_EXPRESSINTRO",
    "NDW_INSTALLFLAG_HARDWAREALLREADYIN",
    "NDW_INSTALLFLAG_INSTALLSPECIFIC",
    "NDW_INSTALLFLAG_KNOWNCLASS",
    "NDW_INSTALLFLAG_NEEDREBOOT",
    "NDW_INSTALLFLAG_NEEDRESTART",
    "NDW_INSTALLFLAG_NEEDSHUTDOWN",
    "NDW_INSTALLFLAG_NODETECTEDDEVS",
    "NDW_INSTALLFLAG_PCMCIADEVICE",
    "NDW_INSTALLFLAG_PCMCIAMODE",
    "NDW_INSTALLFLAG_SKIPCLASSLIST",
    "NDW_INSTALLFLAG_SKIPISDEVINSTALLED",
    "NDW_INSTALLFLAG_USERCANCEL",
    "NUM_CM_PROB",
    "NUM_CM_PROB_V1",
    "NUM_CM_PROB_V2",
    "NUM_CM_PROB_V3",
    "NUM_CM_PROB_V4",
    "NUM_CM_PROB_V5",
    "NUM_CM_PROB_V6",
    "NUM_CM_PROB_V7",
    "NUM_CM_PROB_V8",
    "NUM_CM_PROB_V9",
    "NUM_CR_RESULTS",
    "NUM_LOG_CONF",
    "OEM_SOURCE_MEDIA_TYPE",
    "OVERRIDE_LOG_CONF",
    "PCCARD_DES",
    "PCCARD_RESOURCE",
    "PCD_MAX_IO",
    "PCD_MAX_MEMORY",
    "PCM_NOTIFY_CALLBACK",
    "PDETECT_PROGRESS_NOTIFY",
    "PNP_VETO_TYPE",
    "PNP_VetoAlreadyRemoved",
    "PNP_VetoDevice",
    "PNP_VetoDriver",
    "PNP_VetoIllegalDeviceRequest",
    "PNP_VetoInsufficientPower",
    "PNP_VetoInsufficientRights",
    "PNP_VetoLegacyDevice",
    "PNP_VetoLegacyDriver",
    "PNP_VetoNonDisableable",
    "PNP_VetoOutstandingOpen",
    "PNP_VetoPendingClose",
    "PNP_VetoTypeUnknown",
    "PNP_VetoWindowsApp",
    "PNP_VetoWindowsService",
    "PRIORITY_BIT",
    "PRIORITY_EQUAL_FIRST",
    "PRIORITY_EQUAL_LAST",
    "PSP_DETSIG_CMPPROC",
    "PSP_FILE_CALLBACK_A",
    "PSP_FILE_CALLBACK_W",
    "ROLLBACK_BITS",
    "ROLLBACK_FLAG_NO_UI",
    "RegDisposition_Bits",
    "RegDisposition_OpenAlways",
    "RegDisposition_OpenExisting",
    "ResType_All",
    "ResType_BusNumber",
    "ResType_ClassSpecific",
    "ResType_Connection",
    "ResType_DMA",
    "ResType_DevicePrivate",
    "ResType_DoNotUse",
    "ResType_IO",
    "ResType_IRQ",
    "ResType_Ignored_Bit",
    "ResType_MAX",
    "ResType_Mem",
    "ResType_MemLarge",
    "ResType_MfCardConfig",
    "ResType_None",
    "ResType_PcCardConfig",
    "ResType_Reserved",
    "SCWMI_CLOBBER_SECURITY",
    "SETDIRID_NOT_FULL_PATH",
    "SETUP_DI_BUILD_DRIVER_DRIVER_TYPE",
    "SETUP_FILE_OPERATION",
    "SIGNERSCORE_AUTHENTICODE",
    "SIGNERSCORE_INBOX",
    "SIGNERSCORE_LOGO_PREMIUM",
    "SIGNERSCORE_LOGO_STANDARD",
    "SIGNERSCORE_MASK",
    "SIGNERSCORE_SIGNED_MASK",
    "SIGNERSCORE_UNCLASSIFIED",
    "SIGNERSCORE_UNKNOWN",
    "SIGNERSCORE_UNSIGNED",
    "SIGNERSCORE_W9X_SUSPECT",
    "SIGNERSCORE_WHQL",
    "SOURCE_MEDIA_A",
    "SOURCE_MEDIA_W",
    "SPCRP_CHARACTERISTICS",
    "SPCRP_DEVTYPE",
    "SPCRP_EXCLUSIVE",
    "SPCRP_LOWERFILTERS",
    "SPCRP_MAXIMUM_PROPERTY",
    "SPCRP_SECURITY",
    "SPCRP_SECURITY_SDS",
    "SPCRP_UPPERFILTERS",
    "SPDIT_CLASSDRIVER",
    "SPDIT_COMPATDRIVER",
    "SPDIT_NODRIVER",
    "SPDRP_ADDRESS",
    "SPDRP_BASE_CONTAINERID",
    "SPDRP_BUSNUMBER",
    "SPDRP_BUSTYPEGUID",
    "SPDRP_CAPABILITIES",
    "SPDRP_CHARACTERISTICS",
    "SPDRP_CLASS",
    "SPDRP_CLASSGUID",
    "SPDRP_COMPATIBLEIDS",
    "SPDRP_CONFIGFLAGS",
    "SPDRP_DEVICEDESC",
    "SPDRP_DEVICE_POWER_DATA",
    "SPDRP_DEVTYPE",
    "SPDRP_DRIVER",
    "SPDRP_ENUMERATOR_NAME",
    "SPDRP_EXCLUSIVE",
    "SPDRP_FRIENDLYNAME",
    "SPDRP_HARDWAREID",
    "SPDRP_INSTALL_STATE",
    "SPDRP_LEGACYBUSTYPE",
    "SPDRP_LOCATION_INFORMATION",
    "SPDRP_LOCATION_PATHS",
    "SPDRP_LOWERFILTERS",
    "SPDRP_MAXIMUM_PROPERTY",
    "SPDRP_MFG",
    "SPDRP_PHYSICAL_DEVICE_OBJECT_NAME",
    "SPDRP_REMOVAL_POLICY",
    "SPDRP_REMOVAL_POLICY_HW_DEFAULT",
    "SPDRP_REMOVAL_POLICY_OVERRIDE",
    "SPDRP_SECURITY",
    "SPDRP_SECURITY_SDS",
    "SPDRP_SERVICE",
    "SPDRP_UI_NUMBER",
    "SPDRP_UI_NUMBER_DESC_FORMAT",
    "SPDRP_UNUSED0",
    "SPDRP_UNUSED1",
    "SPDRP_UNUSED2",
    "SPDRP_UPPERFILTERS",
    "SPDSL_DISALLOW_NEGATIVE_ADJUST",
    "SPDSL_IGNORE_DISK",
    "SPFILELOG_FORCENEW",
    "SPFILELOG_OEMFILE",
    "SPFILELOG_QUERYONLY",
    "SPFILELOG_SYSTEMLOG",
    "SPFILENOTIFY_BACKUPERROR",
    "SPFILENOTIFY_CABINETINFO",
    "SPFILENOTIFY_COPYERROR",
    "SPFILENOTIFY_DELETEERROR",
    "SPFILENOTIFY_ENDBACKUP",
    "SPFILENOTIFY_ENDCOPY",
    "SPFILENOTIFY_ENDDELETE",
    "SPFILENOTIFY_ENDQUEUE",
    "SPFILENOTIFY_ENDREGISTRATION",
    "SPFILENOTIFY_ENDRENAME",
    "SPFILENOTIFY_ENDSUBQUEUE",
    "SPFILENOTIFY_FILEEXTRACTED",
    "SPFILENOTIFY_FILEINCABINET",
    "SPFILENOTIFY_FILEOPDELAYED",
    "SPFILENOTIFY_LANGMISMATCH",
    "SPFILENOTIFY_NEEDMEDIA",
    "SPFILENOTIFY_NEEDNEWCABINET",
    "SPFILENOTIFY_QUEUESCAN",
    "SPFILENOTIFY_QUEUESCAN_EX",
    "SPFILENOTIFY_QUEUESCAN_SIGNERINFO",
    "SPFILENOTIFY_RENAMEERROR",
    "SPFILENOTIFY_STARTBACKUP",
    "SPFILENOTIFY_STARTCOPY",
    "SPFILENOTIFY_STARTDELETE",
    "SPFILENOTIFY_STARTQUEUE",
    "SPFILENOTIFY_STARTREGISTRATION",
    "SPFILENOTIFY_STARTRENAME",
    "SPFILENOTIFY_STARTSUBQUEUE",
    "SPFILENOTIFY_TARGETEXISTS",
    "SPFILENOTIFY_TARGETNEWER",
    "SPFILEQ_FILE_IN_USE",
    "SPFILEQ_REBOOT_IN_PROGRESS",
    "SPFILEQ_REBOOT_RECOMMENDED",
    "SPID_ACTIVE",
    "SPID_DEFAULT",
    "SPID_REMOVED",
    "SPINST_ALL",
    "SPINST_BITREG",
    "SPINST_COPYINF",
    "SPINST_DEVICEINSTALL",
    "SPINST_FILES",
    "SPINST_INI2REG",
    "SPINST_INIFILES",
    "SPINST_LOGCONFIG",
    "SPINST_LOGCONFIGS_ARE_OVERRIDES",
    "SPINST_LOGCONFIG_IS_FORCED",
    "SPINST_PROFILEITEMS",
    "SPINST_PROPERTIES",
    "SPINST_REGISTERCALLBACKAWARE",
    "SPINST_REGISTRY",
    "SPINST_REGSVR",
    "SPINST_SINGLESECTION",
    "SPINST_UNREGSVR",
    "SPINT_ACTIVE",
    "SPINT_DEFAULT",
    "SPINT_REMOVED",
    "SPOST_MAX",
    "SPOST_NONE",
    "SPOST_PATH",
    "SPOST_URL",
    "SPPSR_ENUM_ADV_DEVICE_PROPERTIES",
    "SPPSR_ENUM_BASIC_DEVICE_PROPERTIES",
    "SPPSR_SELECT_DEVICE_RESOURCES",
    "SPQ_DELAYED_COPY",
    "SPQ_FLAG_ABORT_IF_UNSIGNED",
    "SPQ_FLAG_BACKUP_AWARE",
    "SPQ_FLAG_DO_SHUFFLEMOVE",
    "SPQ_FLAG_FILES_MODIFIED",
    "SPQ_FLAG_VALID",
    "SPQ_SCAN_ACTIVATE_DRP",
    "SPQ_SCAN_FILE_COMPARISON",
    "SPQ_SCAN_FILE_PRESENCE",
    "SPQ_SCAN_FILE_PRESENCE_WITHOUT_SOURCE",
    "SPQ_SCAN_FILE_VALIDITY",
    "SPQ_SCAN_INFORM_USER",
    "SPQ_SCAN_PRUNE_COPY_QUEUE",
    "SPQ_SCAN_PRUNE_DELREN",
    "SPQ_SCAN_USE_CALLBACK",
    "SPQ_SCAN_USE_CALLBACKEX",
    "SPQ_SCAN_USE_CALLBACK_SIGNERINFO",
    "SPRDI_FIND_DUPS",
    "SPREG_DLLINSTALL",
    "SPREG_GETPROCADDR",
    "SPREG_LOADLIBRARY",
    "SPREG_REGSVR",
    "SPREG_SUCCESS",
    "SPREG_TIMEOUT",
    "SPREG_UNKNOWN",
    "SPSVCINST_ASSOCSERVICE",
    "SPSVCINST_CLOBBER_SECURITY",
    "SPSVCINST_DELETEEVENTLOGENTRY",
    "SPSVCINST_NOCLOBBER_DELAYEDAUTOSTART",
    "SPSVCINST_NOCLOBBER_DEPENDENCIES",
    "SPSVCINST_NOCLOBBER_DESCRIPTION",
    "SPSVCINST_NOCLOBBER_DISPLAYNAME",
    "SPSVCINST_NOCLOBBER_ERRORCONTROL",
    "SPSVCINST_NOCLOBBER_LOADORDERGROUP",
    "SPSVCINST_NOCLOBBER_REQUIREDPRIVILEGES",
    "SPSVCINST_NOCLOBBER_SERVICESIDTYPE",
    "SPSVCINST_NOCLOBBER_STARTTYPE",
    "SPSVCINST_NOCLOBBER_TRIGGERS",
    "SPSVCINST_STARTSERVICE",
    "SPSVCINST_STOPSERVICE",
    "SPSVCINST_TAGTOFRONT",
    "SPSVCINST_UNIQUE_NAME",
    "SPWPT_SELECTDEVICE",
    "SPWP_USE_DEVINFO_DATA",
    "SP_ALTPLATFORM_FLAGS_SUITE_MASK",
    "SP_ALTPLATFORM_FLAGS_VERSION_RANGE",
    "SP_ALTPLATFORM_INFO_V1",
    "SP_ALTPLATFORM_INFO_V2",
    "SP_ALTPLATFORM_INFO_V3",
    "SP_BACKUP_BACKUPPASS",
    "SP_BACKUP_BOOTFILE",
    "SP_BACKUP_DEMANDPASS",
    "SP_BACKUP_QUEUE_PARAMS_V1_A",
    "SP_BACKUP_QUEUE_PARAMS_V1_W",
    "SP_BACKUP_QUEUE_PARAMS_V2_A",
    "SP_BACKUP_QUEUE_PARAMS_V2_W",
    "SP_BACKUP_SPECIAL",
    "SP_CLASSIMAGELIST_DATA",
    "SP_CLASSINSTALL_HEADER",
    "SP_COPY_ALREADYDECOMP",
    "SP_COPY_DELETESOURCE",
    "SP_COPY_FORCE_IN_USE",
    "SP_COPY_FORCE_NEWER",
    "SP_COPY_FORCE_NOOVERWRITE",
    "SP_COPY_HARDLINK",
    "SP_COPY_INBOX_INF",
    "SP_COPY_IN_USE_NEEDS_REBOOT",
    "SP_COPY_IN_USE_TRY_RENAME",
    "SP_COPY_LANGUAGEAWARE",
    "SP_COPY_NEWER",
    "SP_COPY_NEWER_ONLY",
    "SP_COPY_NEWER_OR_SAME",
    "SP_COPY_NOBROWSE",
    "SP_COPY_NODECOMP",
    "SP_COPY_NOOVERWRITE",
    "SP_COPY_NOPRUNE",
    "SP_COPY_NOSKIP",
    "SP_COPY_OEMINF_CATALOG_ONLY",
    "SP_COPY_OEM_F6_INF",
    "SP_COPY_PNPLOCKED",
    "SP_COPY_REPLACEONLY",
    "SP_COPY_REPLACE_BOOT_FILE",
    "SP_COPY_RESERVED",
    "SP_COPY_SOURCEPATH_ABSOLUTE",
    "SP_COPY_SOURCE_ABSOLUTE",
    "SP_COPY_STYLE",
    "SP_COPY_WARNIFSKIP",
    "SP_COPY_WINDOWS_SIGNED",
    "SP_DETECTDEVICE_PARAMS",
    "SP_DEVICE_INTERFACE_DATA",
    "SP_DEVICE_INTERFACE_DETAIL_DATA_A",
    "SP_DEVICE_INTERFACE_DETAIL_DATA_W",
    "SP_DEVINFO_DATA",
    "SP_DEVINFO_LIST_DETAIL_DATA_A",
    "SP_DEVINFO_LIST_DETAIL_DATA_W",
    "SP_DEVINSTALL_PARAMS_A",
    "SP_DEVINSTALL_PARAMS_W",
    "SP_DRVINFO_DATA_V1_A",
    "SP_DRVINFO_DATA_V1_W",
    "SP_DRVINFO_DATA_V2_A",
    "SP_DRVINFO_DATA_V2_W",
    "SP_DRVINFO_DETAIL_DATA_A",
    "SP_DRVINFO_DETAIL_DATA_W",
    "SP_DRVINSTALL_PARAMS",
    "SP_ENABLECLASS_PARAMS",
    "SP_FILE_COPY_PARAMS_A",
    "SP_FILE_COPY_PARAMS_W",
    "SP_FLAG_CABINETCONTINUATION",
    "SP_INF_INFORMATION",
    "SP_INF_SIGNER_INFO_V1_A",
    "SP_INF_SIGNER_INFO_V1_W",
    "SP_INF_SIGNER_INFO_V2_A",
    "SP_INF_SIGNER_INFO_V2_W",
    "SP_INF_STYLE",
    "SP_INSTALLWIZARD_DATA",
    "SP_MAX_MACHINENAME_LENGTH",
    "SP_NEWDEVICEWIZARD_DATA",
    "SP_ORIGINAL_FILE_INFO_A",
    "SP_ORIGINAL_FILE_INFO_W",
    "SP_POWERMESSAGEWAKE_PARAMS_A",
    "SP_POWERMESSAGEWAKE_PARAMS_W",
    "SP_PROPCHANGE_PARAMS",
    "SP_PROPSHEETPAGE_REQUEST",
    "SP_REGISTER_CONTROL_STATUSA",
    "SP_REGISTER_CONTROL_STATUSW",
    "SP_REMOVEDEVICE_PARAMS",
    "SP_SELECTDEVICE_PARAMS_A",
    "SP_SELECTDEVICE_PARAMS_W",
    "SP_TROUBLESHOOTER_PARAMS_A",
    "SP_TROUBLESHOOTER_PARAMS_W",
    "SP_UNREMOVEDEVICE_PARAMS",
    "SRCINFO_DESCRIPTION",
    "SRCINFO_FLAGS",
    "SRCINFO_PATH",
    "SRCINFO_TAGFILE",
    "SRCINFO_TAGFILE2",
    "SRCLIST_APPEND",
    "SRCLIST_NOBROWSE",
    "SRCLIST_NOSTRIPPLATFORM",
    "SRCLIST_SUBDIRS",
    "SRCLIST_SYSIFADMIN",
    "SRCLIST_SYSTEM",
    "SRCLIST_TEMPORARY",
    "SRCLIST_USER",
    "SRC_FLAGS_CABFILE",
    "SUOI_FORCEDELETE",
    "SUOI_INTERNAL1",
    "SZ_KEY_ADDAUTOLOGGER",
    "SZ_KEY_ADDAUTOLOGGERPROVIDER",
    "SZ_KEY_ADDCHANNEL",
    "SZ_KEY_ADDEVENTPROVIDER",
    "SZ_KEY_ADDFILTER",
    "SZ_KEY_ADDIME",
    "SZ_KEY_ADDINTERFACE",
    "SZ_KEY_ADDPOWERSETTING",
    "SZ_KEY_ADDPROP",
    "SZ_KEY_ADDREG",
    "SZ_KEY_ADDREGNOCLOBBER",
    "SZ_KEY_ADDSERVICE",
    "SZ_KEY_ADDTRIGGER",
    "SZ_KEY_BITREG",
    "SZ_KEY_CLEANONLY",
    "SZ_KEY_COPYFILES",
    "SZ_KEY_COPYINF",
    "SZ_KEY_DEFAULTOPTION",
    "SZ_KEY_DEFDESTDIR",
    "SZ_KEY_DELFILES",
    "SZ_KEY_DELIME",
    "SZ_KEY_DELPROP",
    "SZ_KEY_DELREG",
    "SZ_KEY_DELSERVICE",
    "SZ_KEY_DESTDIRS",
    "SZ_KEY_EXCLUDEID",
    "SZ_KEY_FEATURESCORE",
    "SZ_KEY_FILTERLEVEL",
    "SZ_KEY_FILTERPOSITION",
    "SZ_KEY_HARDWARE",
    "SZ_KEY_IMPORTCHANNEL",
    "SZ_KEY_INI2REG",
    "SZ_KEY_LAYOUT_FILE",
    "SZ_KEY_LDIDOEM",
    "SZ_KEY_LFN_SECTION",
    "SZ_KEY_LISTOPTIONS",
    "SZ_KEY_LOGCONFIG",
    "SZ_KEY_MODULES",
    "SZ_KEY_OPTIONDESC",
    "SZ_KEY_PHASE1",
    "SZ_KEY_PROFILEITEMS",
    "SZ_KEY_REGSVR",
    "SZ_KEY_RENFILES",
    "SZ_KEY_SFN_SECTION",
    "SZ_KEY_SRCDISKFILES",
    "SZ_KEY_SRCDISKNAMES",
    "SZ_KEY_STRINGS",
    "SZ_KEY_UNREGSVR",
    "SZ_KEY_UPDATEAUTOLOGGER",
    "SZ_KEY_UPDATEINIFIELDS",
    "SZ_KEY_UPDATEINIS",
    "SZ_KEY_UPGRADEONLY",
    "SetupAddInstallSectionToDiskSpaceListA",
    "SetupAddInstallSectionToDiskSpaceListW",
    "SetupAddSectionToDiskSpaceListA",
    "SetupAddSectionToDiskSpaceListW",
    "SetupAddToDiskSpaceListA",
    "SetupAddToDiskSpaceListW",
    "SetupAddToSourceListA",
    "SetupAddToSourceListW",
    "SetupAdjustDiskSpaceListA",
    "SetupAdjustDiskSpaceListW",
    "SetupBackupErrorA",
    "SetupBackupErrorW",
    "SetupCancelTemporarySourceList",
    "SetupCloseFileQueue",
    "SetupCloseInfFile",
    "SetupCloseLog",
    "SetupCommitFileQueueA",
    "SetupCommitFileQueueW",
    "SetupConfigureWmiFromInfSectionA",
    "SetupConfigureWmiFromInfSectionW",
    "SetupCopyErrorA",
    "SetupCopyErrorW",
    "SetupCopyOEMInfA",
    "SetupCopyOEMInfW",
    "SetupCreateDiskSpaceListA",
    "SetupCreateDiskSpaceListW",
    "SetupDecompressOrCopyFileA",
    "SetupDecompressOrCopyFileW",
    "SetupDefaultQueueCallbackA",
    "SetupDefaultQueueCallbackW",
    "SetupDeleteErrorA",
    "SetupDeleteErrorW",
    "SetupDestroyDiskSpaceList",
    "SetupDiAskForOEMDisk",
    "SetupDiBuildClassInfoList",
    "SetupDiBuildClassInfoListExA",
    "SetupDiBuildClassInfoListExW",
    "SetupDiBuildDriverInfoList",
    "SetupDiCallClassInstaller",
    "SetupDiCancelDriverInfoSearch",
    "SetupDiChangeState",
    "SetupDiClassGuidsFromNameA",
    "SetupDiClassGuidsFromNameExA",
    "SetupDiClassGuidsFromNameExW",
    "SetupDiClassGuidsFromNameW",
    "SetupDiClassNameFromGuidA",
    "SetupDiClassNameFromGuidExA",
    "SetupDiClassNameFromGuidExW",
    "SetupDiClassNameFromGuidW",
    "SetupDiCreateDevRegKeyA",
    "SetupDiCreateDevRegKeyW",
    "SetupDiCreateDeviceInfoA",
    "SetupDiCreateDeviceInfoList",
    "SetupDiCreateDeviceInfoListExA",
    "SetupDiCreateDeviceInfoListExW",
    "SetupDiCreateDeviceInfoW",
    "SetupDiCreateDeviceInterfaceA",
    "SetupDiCreateDeviceInterfaceRegKeyA",
    "SetupDiCreateDeviceInterfaceRegKeyW",
    "SetupDiCreateDeviceInterfaceW",
    "SetupDiDeleteDevRegKey",
    "SetupDiDeleteDeviceInfo",
    "SetupDiDeleteDeviceInterfaceData",
    "SetupDiDeleteDeviceInterfaceRegKey",
    "SetupDiDestroyClassImageList",
    "SetupDiDestroyDeviceInfoList",
    "SetupDiDestroyDriverInfoList",
    "SetupDiDrawMiniIcon",
    "SetupDiEnumDeviceInfo",
    "SetupDiEnumDeviceInterfaces",
    "SetupDiEnumDriverInfoA",
    "SetupDiEnumDriverInfoW",
    "SetupDiGetActualModelsSectionA",
    "SetupDiGetActualModelsSectionW",
    "SetupDiGetActualSectionToInstallA",
    "SetupDiGetActualSectionToInstallExA",
    "SetupDiGetActualSectionToInstallExW",
    "SetupDiGetActualSectionToInstallW",
    "SetupDiGetClassBitmapIndex",
    "SetupDiGetClassDescriptionA",
    "SetupDiGetClassDescriptionExA",
    "SetupDiGetClassDescriptionExW",
    "SetupDiGetClassDescriptionW",
    "SetupDiGetClassDevPropertySheetsA",
    "SetupDiGetClassDevPropertySheetsW",
    "SetupDiGetClassDevsA",
    "SetupDiGetClassDevsExA",
    "SetupDiGetClassDevsExW",
    "SetupDiGetClassDevsW",
    "SetupDiGetClassImageIndex",
    "SetupDiGetClassImageList",
    "SetupDiGetClassImageListExA",
    "SetupDiGetClassImageListExW",
    "SetupDiGetClassInstallParamsA",
    "SetupDiGetClassInstallParamsW",
    "SetupDiGetClassPropertyExW",
    "SetupDiGetClassPropertyKeys",
    "SetupDiGetClassPropertyKeysExW",
    "SetupDiGetClassPropertyW",
    "SetupDiGetClassRegistryPropertyA",
    "SetupDiGetClassRegistryPropertyW",
    "SetupDiGetCustomDevicePropertyA",
    "SetupDiGetCustomDevicePropertyW",
    "SetupDiGetDeviceInfoListClass",
    "SetupDiGetDeviceInfoListDetailA",
    "SetupDiGetDeviceInfoListDetailW",
    "SetupDiGetDeviceInstallParamsA",
    "SetupDiGetDeviceInstallParamsW",
    "SetupDiGetDeviceInstanceIdA",
    "SetupDiGetDeviceInstanceIdW",
    "SetupDiGetDeviceInterfaceAlias",
    "SetupDiGetDeviceInterfaceDetailA",
    "SetupDiGetDeviceInterfaceDetailW",
    "SetupDiGetDeviceInterfacePropertyKeys",
    "SetupDiGetDeviceInterfacePropertyW",
    "SetupDiGetDevicePropertyKeys",
    "SetupDiGetDevicePropertyW",
    "SetupDiGetDeviceRegistryPropertyA",
    "SetupDiGetDeviceRegistryPropertyW",
    "SetupDiGetDriverInfoDetailA",
    "SetupDiGetDriverInfoDetailW",
    "SetupDiGetDriverInstallParamsA",
    "SetupDiGetDriverInstallParamsW",
    "SetupDiGetHwProfileFriendlyNameA",
    "SetupDiGetHwProfileFriendlyNameExA",
    "SetupDiGetHwProfileFriendlyNameExW",
    "SetupDiGetHwProfileFriendlyNameW",
    "SetupDiGetHwProfileList",
    "SetupDiGetHwProfileListExA",
    "SetupDiGetHwProfileListExW",
    "SetupDiGetINFClassA",
    "SetupDiGetINFClassW",
    "SetupDiGetSelectedDevice",
    "SetupDiGetSelectedDriverA",
    "SetupDiGetSelectedDriverW",
    "SetupDiGetWizardPage",
    "SetupDiInstallClassA",
    "SetupDiInstallClassExA",
    "SetupDiInstallClassExW",
    "SetupDiInstallClassW",
    "SetupDiInstallDevice",
    "SetupDiInstallDeviceInterfaces",
    "SetupDiInstallDriverFiles",
    "SetupDiLoadClassIcon",
    "SetupDiLoadDeviceIcon",
    "SetupDiOpenClassRegKey",
    "SetupDiOpenClassRegKeyExA",
    "SetupDiOpenClassRegKeyExW",
    "SetupDiOpenDevRegKey",
    "SetupDiOpenDeviceInfoA",
    "SetupDiOpenDeviceInfoW",
    "SetupDiOpenDeviceInterfaceA",
    "SetupDiOpenDeviceInterfaceRegKey",
    "SetupDiOpenDeviceInterfaceW",
    "SetupDiRegisterCoDeviceInstallers",
    "SetupDiRegisterDeviceInfo",
    "SetupDiRemoveDevice",
    "SetupDiRemoveDeviceInterface",
    "SetupDiRestartDevices",
    "SetupDiSelectBestCompatDrv",
    "SetupDiSelectDevice",
    "SetupDiSelectOEMDrv",
    "SetupDiSetClassInstallParamsA",
    "SetupDiSetClassInstallParamsW",
    "SetupDiSetClassPropertyExW",
    "SetupDiSetClassPropertyW",
    "SetupDiSetClassRegistryPropertyA",
    "SetupDiSetClassRegistryPropertyW",
    "SetupDiSetDeviceInstallParamsA",
    "SetupDiSetDeviceInstallParamsW",
    "SetupDiSetDeviceInterfaceDefault",
    "SetupDiSetDeviceInterfacePropertyW",
    "SetupDiSetDevicePropertyW",
    "SetupDiSetDeviceRegistryPropertyA",
    "SetupDiSetDeviceRegistryPropertyW",
    "SetupDiSetDriverInstallParamsA",
    "SetupDiSetDriverInstallParamsW",
    "SetupDiSetSelectedDevice",
    "SetupDiSetSelectedDriverA",
    "SetupDiSetSelectedDriverW",
    "SetupDiUnremoveDevice",
    "SetupDuplicateDiskSpaceListA",
    "SetupDuplicateDiskSpaceListW",
    "SetupEnumInfSectionsA",
    "SetupEnumInfSectionsW",
    "SetupFileLogInfo",
    "SetupFileLogInfo_SetupFileLogChecksum",
    "SetupFileLogInfo_SetupFileLogDiskDescription",
    "SetupFileLogInfo_SetupFileLogDiskTagfile",
    "SetupFileLogInfo_SetupFileLogMax",
    "SetupFileLogInfo_SetupFileLogOtherInfo",
    "SetupFileLogInfo_SetupFileLogSourceFilename",
    "SetupFindFirstLineA",
    "SetupFindFirstLineW",
    "SetupFindNextLine",
    "SetupFindNextMatchLineA",
    "SetupFindNextMatchLineW",
    "SetupFreeSourceListA",
    "SetupFreeSourceListW",
    "SetupGetBackupInformationA",
    "SetupGetBackupInformationW",
    "SetupGetBinaryField",
    "SetupGetFieldCount",
    "SetupGetFileCompressionInfoA",
    "SetupGetFileCompressionInfoExA",
    "SetupGetFileCompressionInfoExW",
    "SetupGetFileCompressionInfoW",
    "SetupGetFileQueueCount",
    "SetupGetFileQueueFlags",
    "SetupGetInfDriverStoreLocationA",
    "SetupGetInfDriverStoreLocationW",
    "SetupGetInfFileListA",
    "SetupGetInfFileListW",
    "SetupGetInfInformationA",
    "SetupGetInfInformationW",
    "SetupGetInfPublishedNameA",
    "SetupGetInfPublishedNameW",
    "SetupGetIntField",
    "SetupGetLineByIndexA",
    "SetupGetLineByIndexW",
    "SetupGetLineCountA",
    "SetupGetLineCountW",
    "SetupGetLineTextA",
    "SetupGetLineTextW",
    "SetupGetMultiSzFieldA",
    "SetupGetMultiSzFieldW",
    "SetupGetNonInteractiveMode",
    "SetupGetSourceFileLocationA",
    "SetupGetSourceFileLocationW",
    "SetupGetSourceFileSizeA",
    "SetupGetSourceFileSizeW",
    "SetupGetSourceInfoA",
    "SetupGetSourceInfoW",
    "SetupGetStringFieldA",
    "SetupGetStringFieldW",
    "SetupGetTargetPathA",
    "SetupGetTargetPathW",
    "SetupGetThreadLogToken",
    "SetupInitDefaultQueueCallback",
    "SetupInitDefaultQueueCallbackEx",
    "SetupInitializeFileLogA",
    "SetupInitializeFileLogW",
    "SetupInstallFileA",
    "SetupInstallFileExA",
    "SetupInstallFileExW",
    "SetupInstallFileW",
    "SetupInstallFilesFromInfSectionA",
    "SetupInstallFilesFromInfSectionW",
    "SetupInstallFromInfSectionA",
    "SetupInstallFromInfSectionW",
    "SetupInstallServicesFromInfSectionA",
    "SetupInstallServicesFromInfSectionExA",
    "SetupInstallServicesFromInfSectionExW",
    "SetupInstallServicesFromInfSectionW",
    "SetupIterateCabinetA",
    "SetupIterateCabinetW",
    "SetupLogErrorA",
    "SetupLogErrorW",
    "SetupLogFileA",
    "SetupLogFileW",
    "SetupOpenAppendInfFileA",
    "SetupOpenAppendInfFileW",
    "SetupOpenFileQueue",
    "SetupOpenInfFileA",
    "SetupOpenInfFileW",
    "SetupOpenLog",
    "SetupOpenMasterInf",
    "SetupPrepareQueueForRestoreA",
    "SetupPrepareQueueForRestoreW",
    "SetupPromptForDiskA",
    "SetupPromptForDiskW",
    "SetupPromptReboot",
    "SetupQueryDrivesInDiskSpaceListA",
    "SetupQueryDrivesInDiskSpaceListW",
    "SetupQueryFileLogA",
    "SetupQueryFileLogW",
    "SetupQueryInfFileInformationA",
    "SetupQueryInfFileInformationW",
    "SetupQueryInfOriginalFileInformationA",
    "SetupQueryInfOriginalFileInformationW",
    "SetupQueryInfVersionInformationA",
    "SetupQueryInfVersionInformationW",
    "SetupQuerySourceListA",
    "SetupQuerySourceListW",
    "SetupQuerySpaceRequiredOnDriveA",
    "SetupQuerySpaceRequiredOnDriveW",
    "SetupQueueCopyA",
    "SetupQueueCopyIndirectA",
    "SetupQueueCopyIndirectW",
    "SetupQueueCopySectionA",
    "SetupQueueCopySectionW",
    "SetupQueueCopyW",
    "SetupQueueDefaultCopyA",
    "SetupQueueDefaultCopyW",
    "SetupQueueDeleteA",
    "SetupQueueDeleteSectionA",
    "SetupQueueDeleteSectionW",
    "SetupQueueDeleteW",
    "SetupQueueRenameA",
    "SetupQueueRenameSectionA",
    "SetupQueueRenameSectionW",
    "SetupQueueRenameW",
    "SetupRemoveFileLogEntryA",
    "SetupRemoveFileLogEntryW",
    "SetupRemoveFromDiskSpaceListA",
    "SetupRemoveFromDiskSpaceListW",
    "SetupRemoveFromSourceListA",
    "SetupRemoveFromSourceListW",
    "SetupRemoveInstallSectionFromDiskSpaceListA",
    "SetupRemoveInstallSectionFromDiskSpaceListW",
    "SetupRemoveSectionFromDiskSpaceListA",
    "SetupRemoveSectionFromDiskSpaceListW",
    "SetupRenameErrorA",
    "SetupRenameErrorW",
    "SetupScanFileQueueA",
    "SetupScanFileQueueW",
    "SetupSetDirectoryIdA",
    "SetupSetDirectoryIdExA",
    "SetupSetDirectoryIdExW",
    "SetupSetDirectoryIdW",
    "SetupSetFileQueueAlternatePlatformA",
    "SetupSetFileQueueAlternatePlatformW",
    "SetupSetFileQueueFlags",
    "SetupSetNonInteractiveMode",
    "SetupSetPlatformPathOverrideA",
    "SetupSetPlatformPathOverrideW",
    "SetupSetSourceListA",
    "SetupSetSourceListW",
    "SetupSetThreadLogToken",
    "SetupTermDefaultQueueCallback",
    "SetupTerminateFileLog",
    "SetupUninstallNewlyCopiedInfs",
    "SetupUninstallOEMInfA",
    "SetupUninstallOEMInfW",
    "SetupVerifyInfFileA",
    "SetupVerifyInfFileW",
    "SetupWriteTextLog",
    "SetupWriteTextLogError",
    "SetupWriteTextLogInfLine",
    "UpdateDriverForPlugAndPlayDevicesA",
    "UpdateDriverForPlugAndPlayDevicesW",
    "fDD_BYTE",
    "fDD_BYTE_AND_WORD",
    "fDD_BusMaster",
    "fDD_DWORD",
    "fDD_NoBusMaster",
    "fDD_TypeA",
    "fDD_TypeB",
    "fDD_TypeF",
    "fDD_TypeStandard",
    "fDD_WORD",
    "fIOD_10_BIT_DECODE",
    "fIOD_12_BIT_DECODE",
    "fIOD_16_BIT_DECODE",
    "fIOD_DECODE",
    "fIOD_IO",
    "fIOD_Memory",
    "fIOD_PASSIVE_DECODE",
    "fIOD_PORT_BAR",
    "fIOD_POSITIVE_DECODE",
    "fIOD_PortType",
    "fIOD_WINDOW_DECODE",
    "fIRQD_Edge",
    "fIRQD_Exclusive",
    "fIRQD_Level",
    "fIRQD_Level_Bit",
    "fIRQD_Share",
    "fIRQD_Share_Bit",
    "fMD_24",
    "fMD_32",
    "fMD_32_24",
    "fMD_Cacheable",
    "fMD_CombinedWrite",
    "fMD_CombinedWriteAllowed",
    "fMD_CombinedWriteDisallowed",
    "fMD_MEMORY_BAR",
    "fMD_MemoryType",
    "fMD_NonCacheable",
    "fMD_Pref",
    "fMD_PrefetchAllowed",
    "fMD_PrefetchDisallowed",
    "fMD_Prefetchable",
    "fMD_RAM",
    "fMD_ROM",
    "fMD_ReadAllowed",
    "fMD_ReadDisallowed",
    "fMD_Readable",
    "fMD_WINDOW_DECODE",
    "fPCD_ATTRIBUTES_PER_WINDOW",
    "fPCD_IO1_16",
    "fPCD_IO1_SRC_16",
    "fPCD_IO1_WS_16",
    "fPCD_IO1_ZW_8",
    "fPCD_IO2_16",
    "fPCD_IO2_SRC_16",
    "fPCD_IO2_WS_16",
    "fPCD_IO2_ZW_8",
    "fPCD_IO_16",
    "fPCD_IO_8",
    "fPCD_IO_SRC_16",
    "fPCD_IO_WS_16",
    "fPCD_IO_ZW_8",
    "fPCD_MEM1_16",
    "fPCD_MEM1_A",
    "fPCD_MEM1_WS_ONE",
    "fPCD_MEM1_WS_THREE",
    "fPCD_MEM1_WS_TWO",
    "fPCD_MEM2_16",
    "fPCD_MEM2_A",
    "fPCD_MEM2_WS_ONE",
    "fPCD_MEM2_WS_THREE",
    "fPCD_MEM2_WS_TWO",
    "fPCD_MEM_16",
    "fPCD_MEM_8",
    "fPCD_MEM_A",
    "fPCD_MEM_WS_ONE",
    "fPCD_MEM_WS_THREE",
    "fPCD_MEM_WS_TWO",
    "fPMF_AUDIO_ENABLE",
    "mDD_BusMaster",
    "mDD_Type",
    "mDD_Width",
    "mIRQD_Edge_Level",
    "mIRQD_Share",
    "mMD_32_24",
    "mMD_Cacheable",
    "mMD_CombinedWrite",
    "mMD_MemoryType",
    "mMD_Prefetchable",
    "mMD_Readable",
    "mPCD_IO_8_16",
    "mPCD_MEM1_WS",
    "mPCD_MEM2_WS",
    "mPCD_MEM_8_16",
    "mPCD_MEM_A_C",
    "mPCD_MEM_WS",
    "mPMF_AUDIO_ENABLE",
]
_arch_optional = [
]
