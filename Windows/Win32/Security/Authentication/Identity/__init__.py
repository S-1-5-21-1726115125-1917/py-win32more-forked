from __future__ import annotations
from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from Windows.base import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head
import Windows.Win32.Foundation
import Windows.Win32.Security
import Windows.Win32.Security.Authentication.Identity
import Windows.Win32.Security.Credentials
import Windows.Win32.Security.Cryptography
import Windows.Win32.System.Com
import Windows.Win32.System.Kernel
import Windows.Win32.System.PasswordManagement
import Windows.Win32.System.Rpc
import Windows.Win32.System.Threading
import Windows.Win32.System.WindowsProgramming
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        if name in _arch_optional:
            return None
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
def __dir__():
    return __all__
@winfunctype_pointer
def ACCEPT_SECURITY_CONTEXT_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param2: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param3: UInt32, param4: UInt32, param5: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param6: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param7: POINTER(UInt32), param8: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def ACQUIRE_CREDENTIALS_HANDLE_FN_A(param0: POINTER(SByte), param1: POINTER(SByte), param2: UInt32, param3: c_void_p, param4: c_void_p, param5: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, param6: c_void_p, param7: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param8: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def ACQUIRE_CREDENTIALS_HANDLE_FN_W(param0: POINTER(UInt16), param1: POINTER(UInt16), param2: UInt32, param3: c_void_p, param4: c_void_p, param5: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, param6: c_void_p, param7: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param8: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def ADD_CREDENTIALS_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(SByte), param2: POINTER(SByte), param3: UInt32, param4: c_void_p, param5: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, param6: c_void_p, param7: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def ADD_CREDENTIALS_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(UInt16), param2: POINTER(UInt16), param3: UInt32, param4: c_void_p, param5: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, param6: c_void_p, param7: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def APPLY_CONTROL_TOKEN_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
ASC_REQ_FLAGS = UInt32
ASC_REQ_DELEGATE: ASC_REQ_FLAGS = 1
ASC_REQ_MUTUAL_AUTH: ASC_REQ_FLAGS = 2
ASC_REQ_REPLAY_DETECT: ASC_REQ_FLAGS = 4
ASC_REQ_SEQUENCE_DETECT: ASC_REQ_FLAGS = 8
ASC_REQ_CONFIDENTIALITY: ASC_REQ_FLAGS = 16
ASC_REQ_USE_SESSION_KEY: ASC_REQ_FLAGS = 32
ASC_REQ_SESSION_TICKET: ASC_REQ_FLAGS = 64
ASC_REQ_ALLOCATE_MEMORY: ASC_REQ_FLAGS = 256
ASC_REQ_USE_DCE_STYLE: ASC_REQ_FLAGS = 512
ASC_REQ_DATAGRAM: ASC_REQ_FLAGS = 1024
ASC_REQ_CONNECTION: ASC_REQ_FLAGS = 2048
ASC_REQ_CALL_LEVEL: ASC_REQ_FLAGS = 4096
ASC_REQ_FRAGMENT_SUPPLIED: ASC_REQ_FLAGS = 8192
ASC_REQ_EXTENDED_ERROR: ASC_REQ_FLAGS = 32768
ASC_REQ_STREAM: ASC_REQ_FLAGS = 65536
ASC_REQ_INTEGRITY: ASC_REQ_FLAGS = 131072
ASC_REQ_LICENSING: ASC_REQ_FLAGS = 262144
ASC_REQ_IDENTIFY: ASC_REQ_FLAGS = 524288
ASC_REQ_ALLOW_NULL_SESSION: ASC_REQ_FLAGS = 1048576
ASC_REQ_ALLOW_NON_USER_LOGONS: ASC_REQ_FLAGS = 2097152
ASC_REQ_ALLOW_CONTEXT_REPLAY: ASC_REQ_FLAGS = 4194304
ASC_REQ_FRAGMENT_TO_FIT: ASC_REQ_FLAGS = 8388608
ASC_REQ_NO_TOKEN: ASC_REQ_FLAGS = 16777216
ASC_REQ_PROXY_BINDINGS: ASC_REQ_FLAGS = 67108864
ASC_REQ_ALLOW_MISSING_BINDINGS: ASC_REQ_FLAGS = 268435456
ASC_REQ_HIGH_FLAGS = UInt64
ASC_REQ_MESSAGES: ASC_REQ_HIGH_FLAGS = 4294967296
class AUDIT_POLICY_INFORMATION(Structure):
    AuditSubCategoryGuid: Guid
    AuditingInformation: UInt32
    AuditCategoryGuid: Guid
NTLMSP_NAME_A: String = 'NTLM'
NTLMSP_NAME: String = 'NTLM'
MICROSOFT_KERBEROS_NAME_A: String = 'Kerberos'
MICROSOFT_KERBEROS_NAME_W: String = 'Kerberos'
MICROSOFT_KERBEROS_NAME: String = 'Kerberos'
NEGOSSP_NAME_W: String = 'Negotiate'
NEGOSSP_NAME_A: String = 'Negotiate'
NEGOSSP_NAME: String = 'Negotiate'
CLOUDAP_NAME_W: String = 'CloudAP'
ClOUDAP_NAME_A: String = 'CloudAP'
CLOUDAP_NAME: String = 'CloudAP'
ISSP_LEVEL: UInt32 = 32
ISSP_MODE: UInt32 = 1
SECPKG_FLAG_INTEGRITY: UInt32 = 1
SECPKG_FLAG_PRIVACY: UInt32 = 2
SECPKG_FLAG_TOKEN_ONLY: UInt32 = 4
SECPKG_FLAG_DATAGRAM: UInt32 = 8
SECPKG_FLAG_CONNECTION: UInt32 = 16
SECPKG_FLAG_MULTI_REQUIRED: UInt32 = 32
SECPKG_FLAG_CLIENT_ONLY: UInt32 = 64
SECPKG_FLAG_EXTENDED_ERROR: UInt32 = 128
SECPKG_FLAG_IMPERSONATION: UInt32 = 256
SECPKG_FLAG_ACCEPT_WIN32_NAME: UInt32 = 512
SECPKG_FLAG_STREAM: UInt32 = 1024
SECPKG_FLAG_NEGOTIABLE: UInt32 = 2048
SECPKG_FLAG_GSS_COMPATIBLE: UInt32 = 4096
SECPKG_FLAG_LOGON: UInt32 = 8192
SECPKG_FLAG_ASCII_BUFFERS: UInt32 = 16384
SECPKG_FLAG_FRAGMENT: UInt32 = 32768
SECPKG_FLAG_MUTUAL_AUTH: UInt32 = 65536
SECPKG_FLAG_DELEGATION: UInt32 = 131072
SECPKG_FLAG_READONLY_WITH_CHECKSUM: UInt32 = 262144
SECPKG_FLAG_RESTRICTED_TOKENS: UInt32 = 524288
SECPKG_FLAG_NEGO_EXTENDER: UInt32 = 1048576
SECPKG_FLAG_NEGOTIABLE2: UInt32 = 2097152
SECPKG_FLAG_APPCONTAINER_PASSTHROUGH: UInt32 = 4194304
SECPKG_FLAG_APPCONTAINER_CHECKS: UInt32 = 8388608
SECPKG_FLAG_CREDENTIAL_ISOLATION_ENABLED: UInt32 = 16777216
SECPKG_FLAG_APPLY_LOOPBACK: UInt32 = 33554432
SECPKG_ID_NONE: UInt32 = 65535
SECPKG_CALLFLAGS_APPCONTAINER: UInt32 = 1
SECPKG_CALLFLAGS_APPCONTAINER_AUTHCAPABLE: UInt32 = 2
SECPKG_CALLFLAGS_FORCE_SUPPLIED: UInt32 = 4
SECPKG_CALLFLAGS_APPCONTAINER_UPNCAPABLE: UInt32 = 8
SECBUFFER_VERSION: UInt32 = 0
SECBUFFER_EMPTY: UInt32 = 0
SECBUFFER_DATA: UInt32 = 1
SECBUFFER_TOKEN: UInt32 = 2
SECBUFFER_PKG_PARAMS: UInt32 = 3
SECBUFFER_MISSING: UInt32 = 4
SECBUFFER_EXTRA: UInt32 = 5
SECBUFFER_STREAM_TRAILER: UInt32 = 6
SECBUFFER_STREAM_HEADER: UInt32 = 7
SECBUFFER_NEGOTIATION_INFO: UInt32 = 8
SECBUFFER_PADDING: UInt32 = 9
SECBUFFER_STREAM: UInt32 = 10
SECBUFFER_MECHLIST: UInt32 = 11
SECBUFFER_MECHLIST_SIGNATURE: UInt32 = 12
SECBUFFER_TARGET: UInt32 = 13
SECBUFFER_CHANNEL_BINDINGS: UInt32 = 14
SECBUFFER_CHANGE_PASS_RESPONSE: UInt32 = 15
SECBUFFER_TARGET_HOST: UInt32 = 16
SECBUFFER_ALERT: UInt32 = 17
SECBUFFER_APPLICATION_PROTOCOLS: UInt32 = 18
SECBUFFER_SRTP_PROTECTION_PROFILES: UInt32 = 19
SECBUFFER_SRTP_MASTER_KEY_IDENTIFIER: UInt32 = 20
SECBUFFER_TOKEN_BINDING: UInt32 = 21
SECBUFFER_PRESHARED_KEY: UInt32 = 22
SECBUFFER_PRESHARED_KEY_IDENTITY: UInt32 = 23
SECBUFFER_DTLS_MTU: UInt32 = 24
SECBUFFER_SEND_GENERIC_TLS_EXTENSION: UInt32 = 25
SECBUFFER_SUBSCRIBE_GENERIC_TLS_EXTENSION: UInt32 = 26
SECBUFFER_FLAGS: UInt32 = 27
SECBUFFER_TRAFFIC_SECRETS: UInt32 = 28
SECBUFFER_ATTRMASK: UInt32 = 4026531840
SECBUFFER_READONLY: UInt32 = 2147483648
SECBUFFER_READONLY_WITH_CHECKSUM: UInt32 = 268435456
SECBUFFER_RESERVED: UInt32 = 1610612736
SZ_ALG_MAX_SIZE: UInt32 = 64
SECURITY_NATIVE_DREP: UInt32 = 16
SECURITY_NETWORK_DREP: UInt32 = 0
SECPKG_CRED_BOTH: UInt32 = 3
SECPKG_CRED_DEFAULT: UInt32 = 4
SECPKG_CRED_RESERVED: UInt32 = 4026531840
SECPKG_CRED_AUTOLOGON_RESTRICTED: UInt32 = 16
SECPKG_CRED_PROCESS_POLICY_ONLY: UInt32 = 32
ISC_RET_DELEGATE: UInt32 = 1
ISC_RET_MUTUAL_AUTH: UInt32 = 2
ISC_RET_REPLAY_DETECT: UInt32 = 4
ISC_RET_SEQUENCE_DETECT: UInt32 = 8
ISC_RET_CONFIDENTIALITY: UInt32 = 16
ISC_RET_USE_SESSION_KEY: UInt32 = 32
ISC_RET_USED_COLLECTED_CREDS: UInt32 = 64
ISC_RET_USED_SUPPLIED_CREDS: UInt32 = 128
ISC_RET_ALLOCATED_MEMORY: UInt32 = 256
ISC_RET_USED_DCE_STYLE: UInt32 = 512
ISC_RET_DATAGRAM: UInt32 = 1024
ISC_RET_CONNECTION: UInt32 = 2048
ISC_RET_INTERMEDIATE_RETURN: UInt32 = 4096
ISC_RET_CALL_LEVEL: UInt32 = 8192
ISC_RET_EXTENDED_ERROR: UInt32 = 16384
ISC_RET_STREAM: UInt32 = 32768
ISC_RET_INTEGRITY: UInt32 = 65536
ISC_RET_IDENTIFY: UInt32 = 131072
ISC_RET_NULL_SESSION: UInt32 = 262144
ISC_RET_MANUAL_CRED_VALIDATION: UInt32 = 524288
ISC_RET_RESERVED1: UInt32 = 1048576
ISC_RET_FRAGMENT_ONLY: UInt32 = 2097152
ISC_RET_FORWARD_CREDENTIALS: UInt32 = 4194304
ISC_RET_USED_HTTP_STYLE: UInt32 = 16777216
ISC_RET_NO_ADDITIONAL_TOKEN: UInt32 = 33554432
ISC_RET_REAUTHENTICATION: UInt32 = 134217728
ISC_RET_CONFIDENTIALITY_ONLY: UInt32 = 1073741824
ISC_RET_MESSAGES: UInt64 = 4294967296
ISC_RET_DEFERRED_CRED_VALIDATION: UInt64 = 8589934592
ASC_RET_DELEGATE: UInt32 = 1
ASC_RET_MUTUAL_AUTH: UInt32 = 2
ASC_RET_REPLAY_DETECT: UInt32 = 4
ASC_RET_SEQUENCE_DETECT: UInt32 = 8
ASC_RET_CONFIDENTIALITY: UInt32 = 16
ASC_RET_USE_SESSION_KEY: UInt32 = 32
ASC_RET_SESSION_TICKET: UInt32 = 64
ASC_RET_ALLOCATED_MEMORY: UInt32 = 256
ASC_RET_USED_DCE_STYLE: UInt32 = 512
ASC_RET_DATAGRAM: UInt32 = 1024
ASC_RET_CONNECTION: UInt32 = 2048
ASC_RET_CALL_LEVEL: UInt32 = 8192
ASC_RET_THIRD_LEG_FAILED: UInt32 = 16384
ASC_RET_EXTENDED_ERROR: UInt32 = 32768
ASC_RET_STREAM: UInt32 = 65536
ASC_RET_INTEGRITY: UInt32 = 131072
ASC_RET_LICENSING: UInt32 = 262144
ASC_RET_IDENTIFY: UInt32 = 524288
ASC_RET_NULL_SESSION: UInt32 = 1048576
ASC_RET_ALLOW_NON_USER_LOGONS: UInt32 = 2097152
ASC_RET_ALLOW_CONTEXT_REPLAY: UInt32 = 4194304
ASC_RET_FRAGMENT_ONLY: UInt32 = 8388608
ASC_RET_NO_TOKEN: UInt32 = 16777216
ASC_RET_NO_ADDITIONAL_TOKEN: UInt32 = 33554432
ASC_RET_MESSAGES: UInt64 = 4294967296
SECPKG_CRED_ATTR_NAMES: UInt32 = 1
SECPKG_CRED_ATTR_SSI_PROVIDER: UInt32 = 2
SECPKG_CRED_ATTR_KDC_PROXY_SETTINGS: UInt32 = 3
SECPKG_CRED_ATTR_CERT: UInt32 = 4
SECPKG_CRED_ATTR_PAC_BYPASS: UInt32 = 5
KDC_PROXY_SETTINGS_V1: UInt32 = 1
KDC_PROXY_SETTINGS_FLAGS_FORCEPROXY: UInt32 = 1
SECPKG_ATTR_PROTO_INFO: UInt32 = 7
SECPKG_ATTR_USER_FLAGS: UInt32 = 11
SECPKG_ATTR_USE_VALIDATED: UInt32 = 15
SECPKG_ATTR_CREDENTIAL_NAME: UInt32 = 16
SECPKG_ATTR_TARGET: UInt32 = 19
SECPKG_ATTR_AUTHENTICATION_ID: UInt32 = 20
SECPKG_ATTR_LOGOFF_TIME: UInt32 = 21
SECPKG_ATTR_NEGO_KEYS: UInt32 = 22
SECPKG_ATTR_PROMPTING_NEEDED: UInt32 = 24
SECPKG_ATTR_NEGO_PKG_INFO: UInt32 = 31
SECPKG_ATTR_NEGO_STATUS: UInt32 = 32
SECPKG_ATTR_CONTEXT_DELETED: UInt32 = 33
SECPKG_ATTR_APPLICATION_PROTOCOL: UInt32 = 35
SECPKG_ATTR_NEGOTIATED_TLS_EXTENSIONS: UInt32 = 36
SECPKG_ATTR_IS_LOOPBACK: UInt32 = 37
SECPKG_ATTR_NEGO_INFO_FLAG_NO_KERBEROS: UInt32 = 1
SECPKG_ATTR_NEGO_INFO_FLAG_NO_NTLM: UInt32 = 2
SECPKG_NEGOTIATION_COMPLETE: UInt32 = 0
SECPKG_NEGOTIATION_OPTIMISTIC: UInt32 = 1
SECPKG_NEGOTIATION_IN_PROGRESS: UInt32 = 2
SECPKG_NEGOTIATION_DIRECT: UInt32 = 3
SECPKG_NEGOTIATION_TRY_MULTICRED: UInt32 = 4
MAX_PROTOCOL_ID_SIZE: UInt32 = 255
SECQOP_WRAP_NO_ENCRYPT: UInt32 = 2147483649
SECQOP_WRAP_OOB_DATA: UInt32 = 1073741824
SECURITY_ENTRYPOINT_ANSIW: String = 'InitSecurityInterfaceW'
SECURITY_ENTRYPOINT_ANSIA: String = 'InitSecurityInterfaceA'
SECURITY_ENTRYPOINT16: String = 'INITSECURITYINTERFACEA'
SECURITY_ENTRYPOINT_ANSI: String = 'InitSecurityInterfaceW'
SECURITY_ENTRYPOINT: String = 'INITSECURITYINTERFACEA'
SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION: UInt32 = 1
SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_2: UInt32 = 2
SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_3: UInt32 = 3
SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_4: UInt32 = 4
SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_5: UInt32 = 5
SASL_OPTION_SEND_SIZE: UInt32 = 1
SASL_OPTION_RECV_SIZE: UInt32 = 2
SASL_OPTION_AUTHZ_STRING: UInt32 = 3
SASL_OPTION_AUTHZ_PROCESSING: UInt32 = 4
SEC_WINNT_AUTH_IDENTITY_VERSION_2: UInt32 = 513
SEC_WINNT_AUTH_IDENTITY_VERSION: UInt32 = 512
SEC_WINNT_AUTH_IDENTITY_FLAGS_PROCESS_ENCRYPTED: UInt32 = 16
SEC_WINNT_AUTH_IDENTITY_FLAGS_SYSTEM_PROTECTED: UInt32 = 32
SEC_WINNT_AUTH_IDENTITY_FLAGS_USER_PROTECTED: UInt32 = 64
SEC_WINNT_AUTH_IDENTITY_FLAGS_SYSTEM_ENCRYPTED: UInt32 = 128
SEC_WINNT_AUTH_IDENTITY_FLAGS_RESERVED: UInt32 = 65536
SEC_WINNT_AUTH_IDENTITY_FLAGS_NULL_USER: UInt32 = 131072
SEC_WINNT_AUTH_IDENTITY_FLAGS_NULL_DOMAIN: UInt32 = 262144
SEC_WINNT_AUTH_IDENTITY_FLAGS_ID_PROVIDER: UInt32 = 524288
SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_USE_MASK: UInt32 = 4278190080
SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_CREDPROV_DO_NOT_SAVE: UInt32 = 2147483648
SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_SAVE_CRED_BY_CALLER: UInt32 = 2147483648
SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_SAVE_CRED_CHECKED: UInt32 = 1073741824
SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_NO_CHECKBOX: UInt32 = 536870912
SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_CREDPROV_DO_NOT_LOAD: UInt32 = 268435456
SSPIPFC_CREDPROV_DO_NOT_SAVE: UInt32 = 1
SSPIPFC_SAVE_CRED_BY_CALLER: UInt32 = 1
SSPIPFC_NO_CHECKBOX: UInt32 = 2
SSPIPFC_CREDPROV_DO_NOT_LOAD: UInt32 = 4
SSPIPFC_USE_CREDUIBROKER: UInt32 = 8
NGC_DATA_FLAG_KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES: UInt32 = 1
NGC_DATA_FLAG_KERB_CERTIFICATE_LOGON_FLAG_USE_CERTIFICATE_INFO: UInt32 = 2
NGC_DATA_FLAG_IS_SMARTCARD_DATA: UInt32 = 4
NGC_DATA_FLAG_IS_CLOUD_TRUST_CRED: UInt32 = 8
SEC_WINNT_AUTH_IDENTITY_ENCRYPT_SAME_LOGON: UInt32 = 1
SEC_WINNT_AUTH_IDENTITY_ENCRYPT_SAME_PROCESS: UInt32 = 2
SEC_WINNT_AUTH_IDENTITY_ENCRYPT_FOR_SYSTEM: UInt32 = 4
SEC_WINNT_AUTH_IDENTITY_MARSHALLED: UInt32 = 4
SEC_WINNT_AUTH_IDENTITY_ONLY: UInt32 = 8
SECPKG_OPTIONS_PERMANENT: UInt32 = 1
LOOKUP_VIEW_LOCAL_INFORMATION: UInt32 = 1
LOOKUP_TRANSLATE_NAMES: UInt32 = 2048
SECPKG_ATTR_ISSUER_LIST: UInt32 = 80
SECPKG_ATTR_REMOTE_CRED: UInt32 = 81
SECPKG_ATTR_SUPPORTED_ALGS: UInt32 = 86
SECPKG_ATTR_CIPHER_STRENGTHS: UInt32 = 87
SECPKG_ATTR_SUPPORTED_PROTOCOLS: UInt32 = 88
SECPKG_ATTR_MAPPED_CRED_ATTR: UInt32 = 92
SECPKG_ATTR_REMOTE_CERTIFICATES: UInt32 = 95
SECPKG_ATTR_CLIENT_CERT_POLICY: UInt32 = 96
SECPKG_ATTR_CC_POLICY_RESULT: UInt32 = 97
SECPKG_ATTR_USE_NCRYPT: UInt32 = 98
SECPKG_ATTR_LOCAL_CERT_INFO: UInt32 = 99
SECPKG_ATTR_CIPHER_INFO: UInt32 = 100
SECPKG_ATTR_REMOTE_CERT_CHAIN: UInt32 = 103
SECPKG_ATTR_UI_INFO: UInt32 = 104
SECPKG_ATTR_KEYING_MATERIAL: UInt32 = 107
SECPKG_ATTR_SRTP_PARAMETERS: UInt32 = 108
SECPKG_ATTR_TOKEN_BINDING: UInt32 = 109
SECPKG_ATTR_CONNECTION_INFO_EX: UInt32 = 110
SECPKG_ATTR_KEYING_MATERIAL_TOKEN_BINDING: UInt32 = 111
SECPKG_ATTR_KEYING_MATERIAL_INPROC: UInt32 = 112
SECPKG_ATTR_CERT_CHECK_RESULT: UInt32 = 113
SECPKG_ATTR_CERT_CHECK_RESULT_INPROC: UInt32 = 114
SECPKG_ATTR_SESSION_TICKET_KEYS: UInt32 = 115
SESSION_TICKET_INFO_V0: UInt32 = 0
SESSION_TICKET_INFO_VERSION: UInt32 = 0
LSA_MODE_PASSWORD_PROTECTED: Int32 = 1
LSA_MODE_INDIVIDUAL_ACCOUNTS: Int32 = 2
LSA_MODE_MANDATORY_ACCESS: Int32 = 4
LSA_MODE_LOG_FULL: Int32 = 8
LSA_MAXIMUM_SID_COUNT: Int32 = 256
LSA_MAXIMUM_ENUMERATION_LENGTH: UInt32 = 32000
LSA_CALL_LICENSE_SERVER: UInt32 = 2147483648
SE_ADT_OBJECT_ONLY: UInt32 = 1
SE_MAX_AUDIT_PARAMETERS: UInt32 = 32
SE_MAX_GENERIC_AUDIT_PARAMETERS: UInt32 = 28
SE_ADT_PARAMETERS_SELF_RELATIVE: UInt32 = 1
SE_ADT_PARAMETERS_SEND_TO_LSA: UInt32 = 2
SE_ADT_PARAMETER_EXTENSIBLE_AUDIT: UInt32 = 4
SE_ADT_PARAMETER_GENERIC_AUDIT: UInt32 = 8
SE_ADT_PARAMETER_WRITE_SYNCHRONOUS: UInt32 = 16
LSA_ADT_SECURITY_SOURCE_NAME: String = 'Microsoft-Windows-Security-Auditing'
LSA_ADT_LEGACY_SECURITY_SOURCE_NAME: String = 'Security'
SE_ADT_POLICY_AUDIT_EVENT_TYPE_EX_BEGIN: UInt32 = 100
POLICY_AUDIT_EVENT_UNCHANGED: Int32 = 0
POLICY_AUDIT_EVENT_SUCCESS: Int32 = 1
POLICY_AUDIT_EVENT_FAILURE: Int32 = 2
POLICY_AUDIT_EVENT_NONE: Int32 = 4
LSA_AP_NAME_INITIALIZE_PACKAGE: String = 'LsaApInitializePackage\x00'
LSA_AP_NAME_LOGON_USER: String = 'LsaApLogonUser\x00'
LSA_AP_NAME_LOGON_USER_EX: String = 'LsaApLogonUserEx\x00'
LSA_AP_NAME_CALL_PACKAGE: String = 'LsaApCallPackage\x00'
LSA_AP_NAME_LOGON_TERMINATED: String = 'LsaApLogonTerminated\x00'
LSA_AP_NAME_CALL_PACKAGE_UNTRUSTED: String = 'LsaApCallPackageUntrusted\x00'
LSA_AP_NAME_CALL_PACKAGE_PASSTHROUGH: String = 'LsaApCallPackagePassthrough\x00'
POLICY_VIEW_LOCAL_INFORMATION: Int32 = 1
POLICY_VIEW_AUDIT_INFORMATION: Int32 = 2
POLICY_GET_PRIVATE_INFORMATION: Int32 = 4
POLICY_TRUST_ADMIN: Int32 = 8
POLICY_CREATE_ACCOUNT: Int32 = 16
POLICY_CREATE_SECRET: Int32 = 32
POLICY_CREATE_PRIVILEGE: Int32 = 64
POLICY_SET_DEFAULT_QUOTA_LIMITS: Int32 = 128
POLICY_SET_AUDIT_REQUIREMENTS: Int32 = 256
POLICY_AUDIT_LOG_ADMIN: Int32 = 512
POLICY_SERVER_ADMIN: Int32 = 1024
POLICY_LOOKUP_NAMES: Int32 = 2048
POLICY_NOTIFICATION: Int32 = 4096
LSA_LOOKUP_ISOLATED_AS_LOCAL: UInt32 = 2147483648
LSA_LOOKUP_DISALLOW_CONNECTED_ACCOUNT_INTERNET_SID: UInt32 = 2147483648
LSA_LOOKUP_PREFER_INTERNET_NAMES: UInt32 = 1073741824
PER_USER_POLICY_UNCHANGED: UInt32 = 0
PER_USER_AUDIT_SUCCESS_INCLUDE: UInt32 = 1
PER_USER_AUDIT_SUCCESS_EXCLUDE: UInt32 = 2
PER_USER_AUDIT_FAILURE_INCLUDE: UInt32 = 4
PER_USER_AUDIT_FAILURE_EXCLUDE: UInt32 = 8
PER_USER_AUDIT_NONE: UInt32 = 16
POLICY_QOS_SCHANNEL_REQUIRED: UInt32 = 1
POLICY_QOS_OUTBOUND_INTEGRITY: UInt32 = 2
POLICY_QOS_OUTBOUND_CONFIDENTIALITY: UInt32 = 4
POLICY_QOS_INBOUND_INTEGRITY: UInt32 = 8
POLICY_QOS_INBOUND_CONFIDENTIALITY: UInt32 = 16
POLICY_QOS_ALLOW_LOCAL_ROOT_CERT_STORE: UInt32 = 32
POLICY_QOS_RAS_SERVER_ALLOWED: UInt32 = 64
POLICY_QOS_DHCP_SERVER_ALLOWED: UInt32 = 128
POLICY_KERBEROS_VALIDATE_CLIENT: UInt32 = 128
ACCOUNT_VIEW: Int32 = 1
ACCOUNT_ADJUST_PRIVILEGES: Int32 = 2
ACCOUNT_ADJUST_QUOTAS: Int32 = 4
ACCOUNT_ADJUST_SYSTEM_ACCESS: Int32 = 8
TRUSTED_QUERY_DOMAIN_NAME: Int32 = 1
TRUSTED_QUERY_CONTROLLERS: Int32 = 2
TRUSTED_SET_CONTROLLERS: Int32 = 4
TRUSTED_QUERY_POSIX: Int32 = 8
TRUSTED_SET_POSIX: Int32 = 16
TRUSTED_SET_AUTH: Int32 = 32
TRUSTED_QUERY_AUTH: Int32 = 64
TRUST_ATTRIBUTE_TREE_PARENT: UInt32 = 4194304
TRUST_ATTRIBUTE_TREE_ROOT: UInt32 = 8388608
TRUST_ATTRIBUTES_VALID: UInt32 = 4278386687
TRUST_ATTRIBUTE_QUARANTINED_DOMAIN: UInt32 = 4
TRUST_ATTRIBUTE_TRUST_USES_RC4_ENCRYPTION: UInt32 = 128
TRUST_ATTRIBUTE_TRUST_USES_AES_KEYS: UInt32 = 256
TRUST_ATTRIBUTE_CROSS_ORGANIZATION_NO_TGT_DELEGATION: UInt32 = 512
TRUST_ATTRIBUTE_PIM_TRUST: UInt32 = 1024
TRUST_ATTRIBUTE_CROSS_ORGANIZATION_ENABLE_TGT_DELEGATION: UInt32 = 2048
TRUST_ATTRIBUTES_USER: UInt32 = 4278190080
LSA_FOREST_TRUST_RECORD_TYPE_UNRECOGNIZED: UInt32 = 2147483648
LSA_FTRECORD_DISABLED_REASONS: Int32 = 65535
LSA_TLN_DISABLED_NEW: Int32 = 1
LSA_TLN_DISABLED_ADMIN: Int32 = 2
LSA_TLN_DISABLED_CONFLICT: Int32 = 4
LSA_SID_DISABLED_ADMIN: Int32 = 1
LSA_SID_DISABLED_CONFLICT: Int32 = 2
LSA_NB_DISABLED_ADMIN: Int32 = 4
LSA_NB_DISABLED_CONFLICT: Int32 = 8
MAX_RECORDS_IN_FOREST_TRUST_INFO: UInt32 = 4000
SECRET_SET_VALUE: Int32 = 1
SECRET_QUERY_VALUE: Int32 = 2
LSA_GLOBAL_SECRET_PREFIX: String = 'G$'
LSA_GLOBAL_SECRET_PREFIX_LENGTH: UInt32 = 2
LSA_LOCAL_SECRET_PREFIX: String = 'L$'
LSA_LOCAL_SECRET_PREFIX_LENGTH: UInt32 = 2
LSA_MACHINE_SECRET_PREFIX: String = 'M$'
LSA_SECRET_MAXIMUM_COUNT: Int32 = 4096
LSA_SECRET_MAXIMUM_LENGTH: Int32 = 512
MAXIMUM_CAPES_PER_CAP: UInt32 = 127
CENTRAL_ACCESS_POLICY_OWNER_RIGHTS_PRESENT_FLAG: UInt32 = 1
CENTRAL_ACCESS_POLICY_STAGED_OWNER_RIGHTS_PRESENT_FLAG: UInt32 = 256
CENTRAL_ACCESS_POLICY_STAGED_FLAG: UInt32 = 65536
LSASETCAPS_RELOAD_FLAG: UInt32 = 1
LSASETCAPS_VALID_FLAG_MASK: UInt32 = 1
SE_INTERACTIVE_LOGON_NAME: String = 'SeInteractiveLogonRight'
SE_NETWORK_LOGON_NAME: String = 'SeNetworkLogonRight'
SE_BATCH_LOGON_NAME: String = 'SeBatchLogonRight'
SE_SERVICE_LOGON_NAME: String = 'SeServiceLogonRight'
SE_DENY_INTERACTIVE_LOGON_NAME: String = 'SeDenyInteractiveLogonRight'
SE_DENY_NETWORK_LOGON_NAME: String = 'SeDenyNetworkLogonRight'
SE_DENY_BATCH_LOGON_NAME: String = 'SeDenyBatchLogonRight'
SE_DENY_SERVICE_LOGON_NAME: String = 'SeDenyServiceLogonRight'
SE_REMOTE_INTERACTIVE_LOGON_NAME: String = 'SeRemoteInteractiveLogonRight'
SE_DENY_REMOTE_INTERACTIVE_LOGON_NAME: String = 'SeDenyRemoteInteractiveLogonRight'
NEGOTIATE_MAX_PREFIX: UInt32 = 32
NEGOTIATE_ALLOW_NTLM: UInt32 = 268435456
NEGOTIATE_NEG_NTLM: UInt32 = 536870912
MAX_USER_RECORDS: UInt32 = 1000
Audit_System_SecurityStateChange: Guid = Guid('0cce9210-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_System_SecuritySubsystemExtension: Guid = Guid('0cce9211-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_System_Integrity: Guid = Guid('0cce9212-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_System_IPSecDriverEvents: Guid = Guid('0cce9213-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_System_Others: Guid = Guid('0cce9214-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_Logon: Guid = Guid('0cce9215-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_Logoff: Guid = Guid('0cce9216-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_AccountLockout: Guid = Guid('0cce9217-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_IPSecMainMode: Guid = Guid('0cce9218-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_IPSecQuickMode: Guid = Guid('0cce9219-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_IPSecUserMode: Guid = Guid('0cce921a-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_SpecialLogon: Guid = Guid('0cce921b-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_Others: Guid = Guid('0cce921c-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_FileSystem: Guid = Guid('0cce921d-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_Registry: Guid = Guid('0cce921e-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_Kernel: Guid = Guid('0cce921f-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_Sam: Guid = Guid('0cce9220-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_CertificationServices: Guid = Guid('0cce9221-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_ApplicationGenerated: Guid = Guid('0cce9222-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_Handle: Guid = Guid('0cce9223-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_Share: Guid = Guid('0cce9224-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_FirewallPacketDrops: Guid = Guid('0cce9225-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_FirewallConnection: Guid = Guid('0cce9226-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_Other: Guid = Guid('0cce9227-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PrivilegeUse_Sensitive: Guid = Guid('0cce9228-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PrivilegeUse_NonSensitive: Guid = Guid('0cce9229-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PrivilegeUse_Others: Guid = Guid('0cce922a-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DetailedTracking_ProcessCreation: Guid = Guid('0cce922b-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DetailedTracking_ProcessTermination: Guid = Guid('0cce922c-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DetailedTracking_DpapiActivity: Guid = Guid('0cce922d-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DetailedTracking_RpcCall: Guid = Guid('0cce922e-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PolicyChange_AuditPolicy: Guid = Guid('0cce922f-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PolicyChange_AuthenticationPolicy: Guid = Guid('0cce9230-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PolicyChange_AuthorizationPolicy: Guid = Guid('0cce9231-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PolicyChange_MpsscvRulePolicy: Guid = Guid('0cce9232-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PolicyChange_WfpIPSecPolicy: Guid = Guid('0cce9233-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_PolicyChange_Others: Guid = Guid('0cce9234-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountManagement_UserAccount: Guid = Guid('0cce9235-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountManagement_ComputerAccount: Guid = Guid('0cce9236-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountManagement_SecurityGroup: Guid = Guid('0cce9237-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountManagement_DistributionGroup: Guid = Guid('0cce9238-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountManagement_ApplicationGroup: Guid = Guid('0cce9239-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountManagement_Others: Guid = Guid('0cce923a-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DSAccess_DSAccess: Guid = Guid('0cce923b-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DsAccess_AdAuditChanges: Guid = Guid('0cce923c-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Ds_Replication: Guid = Guid('0cce923d-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Ds_DetailedReplication: Guid = Guid('0cce923e-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountLogon_CredentialValidation: Guid = Guid('0cce923f-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountLogon_Kerberos: Guid = Guid('0cce9240-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountLogon_Others: Guid = Guid('0cce9241-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountLogon_KerbCredentialValidation: Guid = Guid('0cce9242-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_NPS: Guid = Guid('0cce9243-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_DetailedFileShare: Guid = Guid('0cce9244-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_RemovableStorage: Guid = Guid('0cce9245-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess_CbacStaging: Guid = Guid('0cce9246-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_Claims: Guid = Guid('0cce9247-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DetailedTracking_PnpActivity: Guid = Guid('0cce9248-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon_Groups: Guid = Guid('0cce9249-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_DetailedTracking_TokenRightAdjusted: Guid = Guid('0cce924a-69ae-11d9-be-d3-50-50-54-50-30-30')
Audit_System: Guid = Guid('69979848-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_Logon: Guid = Guid('69979849-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_ObjectAccess: Guid = Guid('6997984a-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_PrivilegeUse: Guid = Guid('6997984b-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_DetailedTracking: Guid = Guid('6997984c-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_PolicyChange: Guid = Guid('6997984d-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountManagement: Guid = Guid('6997984e-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_DirectoryServiceAccess: Guid = Guid('6997984f-797a-11d9-be-d3-50-50-54-50-30-30')
Audit_AccountLogon: Guid = Guid('69979850-797a-11d9-be-d3-50-50-54-50-30-30')
DOMAIN_NO_LM_OWF_CHANGE: Int32 = 64
SAM_PASSWORD_CHANGE_NOTIFY_ROUTINE: String = 'PasswordChangeNotify'
SAM_INIT_NOTIFICATION_ROUTINE: String = 'InitializeChangeNotify'
SAM_PASSWORD_FILTER_ROUTINE: String = 'PasswordFilter'
MSV1_0_PACKAGE_NAME: String = 'MICROSOFT_AUTHENTICATION_PACKAGE_V1_0'
MSV1_0_PACKAGE_NAMEW: String = 'MICROSOFT_AUTHENTICATION_PACKAGE_V1_0'
MSV1_0_SUBAUTHENTICATION_KEY: String = 'SYSTEM\\CurrentControlSet\\Control\\Lsa\\MSV1_0'
MSV1_0_SUBAUTHENTICATION_VALUE: String = 'Auth'
MSV1_0_CHALLENGE_LENGTH: UInt32 = 8
MSV1_0_USER_SESSION_KEY_LENGTH: UInt32 = 16
MSV1_0_LANMAN_SESSION_KEY_LENGTH: UInt32 = 8
MSV1_0_USE_CLIENT_CHALLENGE: UInt32 = 128
MSV1_0_DISABLE_PERSONAL_FALLBACK: UInt32 = 4096
MSV1_0_ALLOW_FORCE_GUEST: UInt32 = 8192
MSV1_0_CLEARTEXT_PASSWORD_SUPPLIED: UInt32 = 16384
MSV1_0_USE_DOMAIN_FOR_ROUTING_ONLY: UInt32 = 32768
MSV1_0_SUBAUTHENTICATION_DLL_EX: UInt32 = 1048576
MSV1_0_ALLOW_MSVCHAPV2: UInt32 = 65536
MSV1_0_S4U2SELF: UInt32 = 131072
MSV1_0_CHECK_LOGONHOURS_FOR_S4U: UInt32 = 262144
MSV1_0_INTERNET_DOMAIN: UInt32 = 524288
MSV1_0_SUBAUTHENTICATION_DLL: UInt32 = 4278190080
MSV1_0_SUBAUTHENTICATION_DLL_SHIFT: UInt32 = 24
MSV1_0_MNS_LOGON: UInt32 = 16777216
MSV1_0_SUBAUTHENTICATION_DLL_RAS: UInt32 = 2
MSV1_0_SUBAUTHENTICATION_DLL_IIS: UInt32 = 132
MSV1_0_S4U_LOGON_FLAG_CHECK_LOGONHOURS: UInt32 = 2
LOGON_NTLMV2_ENABLED: UInt32 = 256
LOGON_NT_V2: UInt32 = 2048
LOGON_LM_V2: UInt32 = 4096
LOGON_NTLM_V2: UInt32 = 8192
LOGON_OPTIMIZED: UInt32 = 16384
LOGON_WINLOGON: UInt32 = 32768
LOGON_PKINIT: UInt32 = 65536
LOGON_NO_OPTIMIZED: UInt32 = 131072
LOGON_NO_ELEVATION: UInt32 = 262144
LOGON_MANAGED_SERVICE: UInt32 = 524288
MSV1_0_SUBAUTHENTICATION_FLAGS: UInt32 = 4278190080
LOGON_GRACE_LOGON: UInt32 = 16777216
MSV1_0_OWF_PASSWORD_LENGTH: UInt32 = 16
MSV1_0_SHA_PASSWORD_LENGTH: UInt32 = 20
MSV1_0_CREDENTIAL_KEY_LENGTH: UInt32 = 20
MSV1_0_CRED_REMOVED: UInt32 = 4
MSV1_0_CRED_CREDKEY_PRESENT: UInt32 = 8
MSV1_0_CRED_SHA_PRESENT: UInt32 = 16
MSV1_0_CRED_VERSION_V2: UInt32 = 2
MSV1_0_CRED_VERSION_V3: UInt32 = 4
MSV1_0_CRED_VERSION_IUM: UInt32 = 4294901761
MSV1_0_CRED_VERSION_REMOTE: UInt32 = 4294901762
MSV1_0_CRED_VERSION_ARSO: UInt32 = 4294901763
MSV1_0_CRED_VERSION_RESERVED_1: UInt32 = 4294967294
MSV1_0_CRED_VERSION_INVALID: UInt32 = 4294967295
MSV1_0_NTLM3_RESPONSE_LENGTH: UInt32 = 16
MSV1_0_NTLM3_OWF_LENGTH: UInt32 = 16
MSV1_0_MAX_NTLM3_LIFE: UInt32 = 1800
MSV1_0_MAX_AVL_SIZE: UInt32 = 64000
MSV1_0_AV_FLAG_FORCE_GUEST: UInt32 = 1
MSV1_0_AV_FLAG_MIC_HANDSHAKE_MESSAGES: UInt32 = 2
MSV1_0_AV_FLAG_UNVERIFIED_TARGET: UInt32 = 4
RTL_ENCRYPT_MEMORY_SIZE: UInt32 = 8
RTL_ENCRYPT_OPTION_CROSS_PROCESS: UInt32 = 1
RTL_ENCRYPT_OPTION_SAME_LOGON: UInt32 = 2
RTL_ENCRYPT_OPTION_FOR_SYSTEM: UInt32 = 4
KERBEROS_VERSION: UInt32 = 5
KERBEROS_REVISION: UInt32 = 6
KERB_ETYPE_AES128_CTS_HMAC_SHA1_96: UInt32 = 17
KERB_ETYPE_AES256_CTS_HMAC_SHA1_96: UInt32 = 18
KERB_ETYPE_RC4_PLAIN2: Int32 = -129
KERB_ETYPE_RC4_LM: Int32 = -130
KERB_ETYPE_RC4_SHA: Int32 = -131
KERB_ETYPE_DES_PLAIN: Int32 = -132
KERB_ETYPE_RC4_HMAC_OLD: Int32 = -133
KERB_ETYPE_RC4_PLAIN_OLD: Int32 = -134
KERB_ETYPE_RC4_HMAC_OLD_EXP: Int32 = -135
KERB_ETYPE_RC4_PLAIN_OLD_EXP: Int32 = -136
KERB_ETYPE_RC4_PLAIN: Int32 = -140
KERB_ETYPE_RC4_PLAIN_EXP: Int32 = -141
KERB_ETYPE_AES128_CTS_HMAC_SHA1_96_PLAIN: Int32 = -148
KERB_ETYPE_AES256_CTS_HMAC_SHA1_96_PLAIN: Int32 = -149
KERB_ETYPE_DSA_SHA1_CMS: UInt32 = 9
KERB_ETYPE_RSA_MD5_CMS: UInt32 = 10
KERB_ETYPE_RSA_SHA1_CMS: UInt32 = 11
KERB_ETYPE_RC2_CBC_ENV: UInt32 = 12
KERB_ETYPE_RSA_ENV: UInt32 = 13
KERB_ETYPE_RSA_ES_OEAP_ENV: UInt32 = 14
KERB_ETYPE_DES_EDE3_CBC_ENV: UInt32 = 15
KERB_ETYPE_DSA_SIGN: UInt32 = 8
KERB_ETYPE_RSA_PRIV: UInt32 = 9
KERB_ETYPE_RSA_PUB: UInt32 = 10
KERB_ETYPE_RSA_PUB_MD5: UInt32 = 11
KERB_ETYPE_RSA_PUB_SHA1: UInt32 = 12
KERB_ETYPE_PKCS7_PUB: UInt32 = 13
KERB_ETYPE_DES3_CBC_MD5: UInt32 = 5
KERB_ETYPE_DES3_CBC_SHA1: UInt32 = 7
KERB_ETYPE_DES3_CBC_SHA1_KD: UInt32 = 16
KERB_ETYPE_DES_CBC_MD5_NT: UInt32 = 20
KERB_ETYPE_RC4_HMAC_NT_EXP: UInt32 = 24
KERB_CHECKSUM_NONE: UInt32 = 0
KERB_CHECKSUM_CRC32: UInt32 = 1
KERB_CHECKSUM_MD4: UInt32 = 2
KERB_CHECKSUM_KRB_DES_MAC: UInt32 = 4
KERB_CHECKSUM_KRB_DES_MAC_K: UInt32 = 5
KERB_CHECKSUM_MD5: UInt32 = 7
KERB_CHECKSUM_MD5_DES: UInt32 = 8
KERB_CHECKSUM_SHA1_NEW: UInt32 = 14
KERB_CHECKSUM_HMAC_SHA1_96_AES128: UInt32 = 15
KERB_CHECKSUM_HMAC_SHA1_96_AES256: UInt32 = 16
KERB_CHECKSUM_LM: Int32 = -130
KERB_CHECKSUM_SHA1: Int32 = -131
KERB_CHECKSUM_REAL_CRC32: Int32 = -132
KERB_CHECKSUM_DES_MAC: Int32 = -133
KERB_CHECKSUM_DES_MAC_MD5: Int32 = -134
KERB_CHECKSUM_MD25: Int32 = -135
KERB_CHECKSUM_RC4_MD5: Int32 = -136
KERB_CHECKSUM_MD5_HMAC: Int32 = -137
KERB_CHECKSUM_HMAC_MD5: Int32 = -138
KERB_CHECKSUM_HMAC_SHA1_96_AES128_Ki: Int32 = -150
KERB_CHECKSUM_HMAC_SHA1_96_AES256_Ki: Int32 = -151
AUTH_REQ_ALLOW_FORWARDABLE: UInt32 = 1
AUTH_REQ_ALLOW_PROXIABLE: UInt32 = 2
AUTH_REQ_ALLOW_POSTDATE: UInt32 = 4
AUTH_REQ_ALLOW_RENEWABLE: UInt32 = 8
AUTH_REQ_ALLOW_NOADDRESS: UInt32 = 16
AUTH_REQ_ALLOW_ENC_TKT_IN_SKEY: UInt32 = 32
AUTH_REQ_ALLOW_VALIDATE: UInt32 = 64
AUTH_REQ_VALIDATE_CLIENT: UInt32 = 128
AUTH_REQ_OK_AS_DELEGATE: UInt32 = 256
AUTH_REQ_PREAUTH_REQUIRED: UInt32 = 512
AUTH_REQ_TRANSITIVE_TRUST: UInt32 = 1024
AUTH_REQ_ALLOW_S4U_DELEGATE: UInt32 = 2048
KERB_TICKET_FLAGS_name_canonicalize: UInt32 = 65536
KERB_TICKET_FLAGS_cname_in_pa_data: UInt32 = 262144
KERB_TICKET_FLAGS_enc_pa_rep: UInt32 = 65536
KRB_NT_UNKNOWN: UInt32 = 0
KRB_NT_PRINCIPAL: UInt32 = 1
KRB_NT_PRINCIPAL_AND_ID: Int32 = -131
KRB_NT_SRV_INST: UInt32 = 2
KRB_NT_SRV_INST_AND_ID: Int32 = -132
KRB_NT_SRV_HST: UInt32 = 3
KRB_NT_SRV_XHST: UInt32 = 4
KRB_NT_UID: UInt32 = 5
KRB_NT_ENTERPRISE_PRINCIPAL: UInt32 = 10
KRB_NT_WELLKNOWN: UInt32 = 11
KRB_NT_ENT_PRINCIPAL_AND_ID: Int32 = -130
KRB_NT_MS_PRINCIPAL: Int32 = -128
KRB_NT_MS_PRINCIPAL_AND_ID: Int32 = -129
KRB_NT_MS_BRANCH_ID: Int32 = -133
KRB_NT_X500_PRINCIPAL: UInt32 = 6
KRB_WELLKNOWN_STRING: String = 'WELLKNOWN'
KRB_ANONYMOUS_STRING: String = 'ANONYMOUS'
KERB_WRAP_NO_ENCRYPT: UInt32 = 2147483649
KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES: UInt32 = 1
KERB_CERTIFICATE_LOGON_FLAG_USE_CERTIFICATE_INFO: UInt32 = 2
KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_DUPLICATES: UInt32 = 1
KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_LOGONHOURS: UInt32 = 2
KERB_CERTIFICATE_S4U_LOGON_FLAG_FAIL_IF_NT_AUTH_POLICY_REQUIRED: UInt32 = 4
KERB_CERTIFICATE_S4U_LOGON_FLAG_IDENTIFY: UInt32 = 8
KERB_LOGON_FLAG_ALLOW_EXPIRED_TICKET: UInt32 = 1
KERB_LOGON_FLAG_REDIRECTED: UInt32 = 2
KERB_S4U_LOGON_FLAG_CHECK_LOGONHOURS: UInt32 = 2
KERB_S4U_LOGON_FLAG_IDENTIFY: UInt32 = 8
KERB_USE_DEFAULT_TICKET_FLAGS: UInt32 = 0
KERB_RETRIEVE_TICKET_DEFAULT: UInt32 = 0
KERB_RETRIEVE_TICKET_DONT_USE_CACHE: UInt32 = 1
KERB_RETRIEVE_TICKET_USE_CACHE_ONLY: UInt32 = 2
KERB_RETRIEVE_TICKET_USE_CREDHANDLE: UInt32 = 4
KERB_RETRIEVE_TICKET_AS_KERB_CRED: UInt32 = 8
KERB_RETRIEVE_TICKET_WITH_SEC_CRED: UInt32 = 16
KERB_RETRIEVE_TICKET_CACHE_TICKET: UInt32 = 32
KERB_RETRIEVE_TICKET_MAX_LIFETIME: UInt32 = 64
KERB_ETYPE_DEFAULT: UInt32 = 0
KERB_PURGE_ALL_TICKETS: UInt32 = 1
KERB_S4U2PROXY_CACHE_ENTRY_INFO_FLAG_NEGATIVE: UInt32 = 1
KERB_S4U2PROXY_CRED_FLAG_NEGATIVE: UInt32 = 1
KERB_REFRESH_POLICY_KERBEROS: UInt32 = 1
KERB_REFRESH_POLICY_KDC: UInt32 = 2
KERB_CLOUD_KERBEROS_DEBUG_DATA_VERSION: UInt32 = 0
DS_UNKNOWN_ADDRESS_TYPE: UInt32 = 0
KERB_SETPASS_USE_LOGONID: UInt32 = 1
KERB_SETPASS_USE_CREDHANDLE: UInt32 = 2
KERB_DECRYPT_FLAG_DEFAULT_KEY: UInt32 = 1
KERB_REFRESH_SCCRED_RELEASE: UInt32 = 0
KERB_REFRESH_SCCRED_GETTGT: UInt32 = 1
KERB_TRANSFER_CRED_WITH_TICKETS: UInt32 = 1
KERB_TRANSFER_CRED_CLEANUP_CREDENTIALS: UInt32 = 2
KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE_FLAG_DAC_DISABLED: UInt32 = 1
AUDIT_SET_SYSTEM_POLICY: UInt32 = 1
AUDIT_QUERY_SYSTEM_POLICY: UInt32 = 2
AUDIT_SET_USER_POLICY: UInt32 = 4
AUDIT_QUERY_USER_POLICY: UInt32 = 8
AUDIT_ENUMERATE_USERS: UInt32 = 16
AUDIT_SET_MISC_POLICY: UInt32 = 32
AUDIT_QUERY_MISC_POLICY: UInt32 = 64
PKU2U_PACKAGE_NAME_A: String = 'pku2u'
PKU2U_PACKAGE_NAME: String = 'pku2u'
PKU2U_PACKAGE_NAME_W: String = 'pku2u'
SAM_CREDENTIAL_UPDATE_NOTIFY_ROUTINE: String = 'CredentialUpdateNotify'
SAM_CREDENTIAL_UPDATE_REGISTER_ROUTINE: String = 'CredentialUpdateRegister'
SAM_CREDENTIAL_UPDATE_FREE_ROUTINE: String = 'CredentialUpdateFree'
SAM_CREDENTIAL_UPDATE_REGISTER_MAPPED_ENTRYPOINTS_ROUTINE: String = 'RegisterMappedEntrypoints'
SECPKG_CLIENT_PROCESS_TERMINATED: UInt32 = 1
SECPKG_CLIENT_THREAD_TERMINATED: UInt32 = 2
SECPKG_CALL_KERNEL_MODE: UInt32 = 1
SECPKG_CALL_ANSI: UInt32 = 2
SECPKG_CALL_URGENT: UInt32 = 4
SECPKG_CALL_RECURSIVE: UInt32 = 8
SECPKG_CALL_IN_PROC: UInt32 = 16
SECPKG_CALL_CLEANUP: UInt32 = 32
SECPKG_CALL_WOWCLIENT: UInt32 = 64
SECPKG_CALL_THREAD_TERM: UInt32 = 128
SECPKG_CALL_PROCESS_TERM: UInt32 = 256
SECPKG_CALL_IS_TCB: UInt32 = 512
SECPKG_CALL_NETWORK_ONLY: UInt32 = 1024
SECPKG_CALL_WINLOGON: UInt32 = 2048
SECPKG_CALL_ASYNC_UPDATE: UInt32 = 4096
SECPKG_CALL_SYSTEM_PROC: UInt32 = 8192
SECPKG_CALL_NEGO: UInt32 = 16384
SECPKG_CALL_NEGO_EXTENDER: UInt32 = 32768
SECPKG_CALL_BUFFER_MARSHAL: UInt32 = 65536
SECPKG_CALL_UNLOCK: UInt32 = 131072
SECPKG_CALL_CLOUDAP_CONNECT: UInt32 = 262144
SECPKG_CALL_WOWX86: UInt32 = 64
SECPKG_CALL_WOWA32: UInt32 = 262144
SECPKG_CREDENTIAL_VERSION: UInt32 = 201
SECPKG_CREDENTIAL_FLAGS_CALLER_HAS_TCB: UInt32 = 1
SECPKG_CREDENTIAL_FLAGS_CREDMAN_CRED: UInt32 = 2
SECPKG_SURROGATE_LOGON_VERSION_1: UInt32 = 1
SECBUFFER_UNMAPPED: UInt32 = 1073741824
SECBUFFER_KERNEL_MAP: UInt32 = 536870912
PRIMARY_CRED_CLEAR_PASSWORD: UInt32 = 1
PRIMARY_CRED_OWF_PASSWORD: UInt32 = 2
PRIMARY_CRED_UPDATE: UInt32 = 4
PRIMARY_CRED_CACHED_LOGON: UInt32 = 8
PRIMARY_CRED_LOGON_NO_TCB: UInt32 = 16
PRIMARY_CRED_LOGON_LUA: UInt32 = 32
PRIMARY_CRED_INTERACTIVE_SMARTCARD_LOGON: UInt32 = 64
PRIMARY_CRED_REFRESH_NEEDED: UInt32 = 128
PRIMARY_CRED_INTERNET_USER: UInt32 = 256
PRIMARY_CRED_AUTH_ID: UInt32 = 512
PRIMARY_CRED_DO_NOT_SPLIT: UInt32 = 1024
PRIMARY_CRED_PROTECTED_USER: UInt32 = 2048
PRIMARY_CRED_EX: UInt32 = 4096
PRIMARY_CRED_TRANSFER: UInt32 = 8192
PRIMARY_CRED_RESTRICTED_TS: UInt32 = 16384
PRIMARY_CRED_PACKED_CREDS: UInt32 = 32768
PRIMARY_CRED_ENTERPRISE_INTERNET_USER: UInt32 = 65536
PRIMARY_CRED_ENCRYPTED_CREDGUARD_PASSWORD: UInt32 = 131072
PRIMARY_CRED_CACHED_INTERACTIVE_LOGON: UInt32 = 262144
PRIMARY_CRED_INTERACTIVE_NGC_LOGON: UInt32 = 524288
PRIMARY_CRED_INTERACTIVE_FIDO_LOGON: UInt32 = 1048576
PRIMARY_CRED_ARSO_LOGON: UInt32 = 2097152
PRIMARY_CRED_SUPPLEMENTAL: UInt32 = 4194304
PRIMARY_CRED_LOGON_PACKAGE_SHIFT: UInt32 = 24
PRIMARY_CRED_PACKAGE_MASK: UInt32 = 4278190080
SECPKG_PRIMARY_CRED_EX_FLAGS_EX_DELEGATION_TOKEN: UInt32 = 1
MAX_CRED_SIZE: UInt32 = 1024
SECPKG_STATE_ENCRYPTION_PERMITTED: UInt32 = 1
SECPKG_STATE_STRONG_ENCRYPTION_PERMITTED: UInt32 = 2
SECPKG_STATE_DOMAIN_CONTROLLER: UInt32 = 4
SECPKG_STATE_WORKSTATION: UInt32 = 8
SECPKG_STATE_STANDALONE: UInt32 = 16
SECPKG_STATE_CRED_ISOLATION_ENABLED: UInt32 = 32
SECPKG_STATE_RESERVED_1: UInt32 = 2147483648
SECPKG_MAX_OID_LENGTH: UInt32 = 32
SECPKG_ATTR_SASL_CONTEXT: UInt32 = 65536
SECPKG_ATTR_THUNK_ALL: UInt32 = 65536
UNDERSTANDS_LONG_NAMES: UInt32 = 1
NO_LONG_NAMES: UInt32 = 2
SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_OPTIMISTIC_LOGON: UInt32 = 1
SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_CLEANUP_CREDENTIALS: UInt32 = 2
SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_TO_SSO_SESSION: UInt32 = 4
SECPKG_REDIRECTED_LOGON_GUID_INITIALIZER: Guid = Guid('c2be5457-82eb-483e-ae-4e-74-68-ef-14-d5-09')
NOTIFIER_FLAG_NEW_THREAD: UInt32 = 1
NOTIFIER_FLAG_ONE_SHOT: UInt32 = 2
NOTIFIER_FLAG_SECONDS: UInt32 = 2147483648
NOTIFIER_TYPE_INTERVAL: UInt32 = 1
NOTIFIER_TYPE_HANDLE_WAIT: UInt32 = 2
NOTIFIER_TYPE_STATE_CHANGE: UInt32 = 3
NOTIFIER_TYPE_NOTIFY_EVENT: UInt32 = 4
NOTIFIER_TYPE_IMMEDIATE: UInt32 = 16
NOTIFY_CLASS_PACKAGE_CHANGE: UInt32 = 1
NOTIFY_CLASS_ROLE_CHANGE: UInt32 = 2
NOTIFY_CLASS_DOMAIN_CHANGE: UInt32 = 3
NOTIFY_CLASS_REGISTRY_CHANGE: UInt32 = 4
LSA_QUERY_CLIENT_PRELOGON_SESSION_ID: UInt32 = 1
CREDP_FLAGS_IN_PROCESS: UInt32 = 1
CREDP_FLAGS_USE_MIDL_HEAP: UInt32 = 2
CREDP_FLAGS_DONT_CACHE_TI: UInt32 = 4
CREDP_FLAGS_CLEAR_PASSWORD: UInt32 = 8
CREDP_FLAGS_USER_ENCRYPTED_PASSWORD: UInt32 = 16
CREDP_FLAGS_TRUSTED_CALLER: UInt32 = 32
CREDP_FLAGS_VALIDATE_PROXY_TARGET: UInt32 = 64
CRED_MARSHALED_TI_SIZE_SIZE: UInt32 = 12
LSA_AP_NAME_LOGON_USER_EX2: String = 'LsaApLogonUserEx2\x00'
SP_ACCEPT_CREDENTIALS_NAME: String = 'SpAcceptCredentials\x00'
SECPKG_UNICODE_ATTRIBUTE: UInt32 = 2147483648
SECPKG_ANSI_ATTRIBUTE: UInt32 = 0
SECPKG_CREDENTIAL_ATTRIBUTE: UInt32 = 0
SECPKG_LSAMODEINIT_NAME: String = 'SpLsaModeInitialize'
SECPKG_USERMODEINIT_NAME: String = 'SpUserModeInitialize'
SECPKG_INTERFACE_VERSION: UInt32 = 65536
SECPKG_INTERFACE_VERSION_2: UInt32 = 131072
SECPKG_INTERFACE_VERSION_3: UInt32 = 262144
SECPKG_INTERFACE_VERSION_4: UInt32 = 524288
SECPKG_INTERFACE_VERSION_5: UInt32 = 1048576
SECPKG_INTERFACE_VERSION_6: UInt32 = 2097152
SECPKG_INTERFACE_VERSION_7: UInt32 = 4194304
SECPKG_INTERFACE_VERSION_8: UInt32 = 8388608
SECPKG_INTERFACE_VERSION_9: UInt32 = 16777216
SECPKG_INTERFACE_VERSION_10: UInt32 = 33554432
UNISP_NAME_A: String = 'Microsoft Unified Security Protocol Provider'
UNISP_NAME_W: String = 'Microsoft Unified Security Protocol Provider'
SSL2SP_NAME_A: String = 'Microsoft SSL 2.0'
SSL2SP_NAME_W: String = 'Microsoft SSL 2.0'
SSL3SP_NAME_A: String = 'Microsoft SSL 3.0'
SSL3SP_NAME_W: String = 'Microsoft SSL 3.0'
TLS1SP_NAME_A: String = 'Microsoft TLS 1.0'
TLS1SP_NAME_W: String = 'Microsoft TLS 1.0'
PCT1SP_NAME_A: String = 'Microsoft PCT 1.0'
PCT1SP_NAME_W: String = 'Microsoft PCT 1.0'
SCHANNEL_NAME_A: String = 'Schannel'
SCHANNEL_NAME_W: String = 'Schannel'
DEFAULT_TLS_SSP_NAME_A: String = 'Default TLS SSP'
DEFAULT_TLS_SSP_NAME_W: String = 'Default TLS SSP'
UNISP_NAME: String = 'Microsoft Unified Security Protocol Provider'
PCT1SP_NAME: String = 'Microsoft PCT 1.0'
SSL2SP_NAME: String = 'Microsoft SSL 2.0'
SSL3SP_NAME: String = 'Microsoft SSL 3.0'
TLS1SP_NAME: String = 'Microsoft TLS 1.0'
SCHANNEL_NAME: String = 'Schannel'
DEFAULT_TLS_SSP_NAME: String = 'Default TLS SSP'
UNISP_RPC_ID: UInt32 = 14
RCRED_STATUS_NOCRED: UInt32 = 0
RCRED_CRED_EXISTS: UInt32 = 1
RCRED_STATUS_UNKNOWN_ISSUER: UInt32 = 2
LCRED_STATUS_NOCRED: UInt32 = 0
LCRED_CRED_EXISTS: UInt32 = 1
LCRED_STATUS_UNKNOWN_ISSUER: UInt32 = 2
SECPKGCONTEXT_CONNECTION_INFO_EX_V1: UInt32 = 1
SECPKGCONTEXT_CIPHERINFO_V1: UInt32 = 1
SSL_SESSION_RECONNECT: UInt32 = 1
KERN_CONTEXT_CERT_INFO_V1: UInt32 = 0
ENABLE_TLS_CLIENT_EARLY_START: UInt32 = 1
SCH_CRED_V1: UInt32 = 1
SCH_CRED_V2: UInt32 = 2
SCH_CRED_VERSION: UInt32 = 2
SCH_CRED_V3: UInt32 = 3
SCHANNEL_CRED_VERSION: UInt32 = 4
SCH_CREDENTIALS_VERSION: UInt32 = 5
TLS_PARAMS_OPTIONAL: UInt32 = 1
SCH_CRED_MAX_SUPPORTED_PARAMETERS: UInt32 = 16
SCH_CRED_MAX_SUPPORTED_ALPN_IDS: UInt32 = 16
SCH_CRED_MAX_SUPPORTED_CRYPTO_SETTINGS: UInt32 = 16
SCH_CRED_MAX_SUPPORTED_CHAINING_MODES: UInt32 = 16
SCH_MAX_EXT_SUBSCRIPTIONS: UInt32 = 2
SCH_CRED_FORMAT_CERT_CONTEXT: UInt32 = 0
SCH_CRED_FORMAT_CERT_HASH: UInt32 = 1
SCH_CRED_FORMAT_CERT_HASH_STORE: UInt32 = 2
SCH_CRED_MAX_STORE_NAME_SIZE: UInt32 = 128
SCH_CRED_MAX_SUPPORTED_ALGS: UInt32 = 256
SCH_CRED_MAX_SUPPORTED_CERTS: UInt32 = 100
SCH_MACHINE_CERT_HASH: UInt32 = 1
SCH_CRED_DISABLE_RECONNECTS: UInt32 = 128
SCH_CRED_RESTRICTED_ROOTS: UInt32 = 8192
SCH_CRED_REVOCATION_CHECK_CACHE_ONLY: UInt32 = 16384
SCH_CRED_CACHE_ONLY_URL_RETRIEVAL: UInt32 = 32768
SCH_CRED_MEMORY_STORE_CERT: UInt32 = 65536
SCH_CRED_SNI_CREDENTIAL: UInt32 = 524288
SCH_CRED_SNI_ENABLE_OCSP: UInt32 = 1048576
SCH_USE_DTLS_ONLY: UInt32 = 16777216
SCH_ALLOW_NULL_ENCRYPTION: UInt32 = 33554432
SCH_CRED_DEFERRED_CRED_VALIDATION: UInt32 = 67108864
SCHANNEL_RENEGOTIATE: UInt32 = 0
SCHANNEL_SHUTDOWN: UInt32 = 1
SCHANNEL_ALERT: UInt32 = 2
SCHANNEL_SESSION: UInt32 = 3
TLS1_ALERT_CLOSE_NOTIFY: UInt32 = 0
TLS1_ALERT_UNEXPECTED_MESSAGE: UInt32 = 10
TLS1_ALERT_BAD_RECORD_MAC: UInt32 = 20
TLS1_ALERT_DECRYPTION_FAILED: UInt32 = 21
TLS1_ALERT_RECORD_OVERFLOW: UInt32 = 22
TLS1_ALERT_DECOMPRESSION_FAIL: UInt32 = 30
TLS1_ALERT_HANDSHAKE_FAILURE: UInt32 = 40
TLS1_ALERT_BAD_CERTIFICATE: UInt32 = 42
TLS1_ALERT_UNSUPPORTED_CERT: UInt32 = 43
TLS1_ALERT_CERTIFICATE_REVOKED: UInt32 = 44
TLS1_ALERT_CERTIFICATE_EXPIRED: UInt32 = 45
TLS1_ALERT_CERTIFICATE_UNKNOWN: UInt32 = 46
TLS1_ALERT_ILLEGAL_PARAMETER: UInt32 = 47
TLS1_ALERT_UNKNOWN_CA: UInt32 = 48
TLS1_ALERT_ACCESS_DENIED: UInt32 = 49
TLS1_ALERT_DECODE_ERROR: UInt32 = 50
TLS1_ALERT_DECRYPT_ERROR: UInt32 = 51
TLS1_ALERT_EXPORT_RESTRICTION: UInt32 = 60
TLS1_ALERT_PROTOCOL_VERSION: UInt32 = 70
TLS1_ALERT_INSUFFIENT_SECURITY: UInt32 = 71
TLS1_ALERT_INTERNAL_ERROR: UInt32 = 80
TLS1_ALERT_USER_CANCELED: UInt32 = 90
TLS1_ALERT_NO_RENEGOTIATION: UInt32 = 100
TLS1_ALERT_UNSUPPORTED_EXT: UInt32 = 110
TLS1_ALERT_UNKNOWN_PSK_IDENTITY: UInt32 = 115
TLS1_ALERT_NO_APP_PROTOCOL: UInt32 = 120
SP_PROT_PCT1_SERVER: UInt32 = 1
SP_PROT_PCT1_CLIENT: UInt32 = 2
SP_PROT_SSL2_SERVER: UInt32 = 4
SP_PROT_SSL2_CLIENT: UInt32 = 8
SP_PROT_SSL3_SERVER: UInt32 = 16
SP_PROT_SSL3_CLIENT: UInt32 = 32
SP_PROT_TLS1_SERVER: UInt32 = 64
SP_PROT_TLS1_CLIENT: UInt32 = 128
SP_PROT_UNI_SERVER: UInt32 = 1073741824
SP_PROT_UNI_CLIENT: UInt32 = 2147483648
SP_PROT_ALL: UInt32 = 4294967295
SP_PROT_NONE: UInt32 = 0
SP_PROT_TLS1_0_SERVER: UInt32 = 64
SP_PROT_TLS1_0_CLIENT: UInt32 = 128
SP_PROT_TLS1_1_SERVER: UInt32 = 256
SP_PROT_TLS1_1_CLIENT: UInt32 = 512
SP_PROT_TLS1_2_SERVER: UInt32 = 1024
SP_PROT_TLS1_2_CLIENT: UInt32 = 2048
SP_PROT_TLS1_3_SERVER: UInt32 = 4096
SP_PROT_TLS1_3_CLIENT: UInt32 = 8192
SP_PROT_DTLS_SERVER: UInt32 = 65536
SP_PROT_DTLS_CLIENT: UInt32 = 131072
SP_PROT_DTLS1_0_SERVER: UInt32 = 65536
SP_PROT_DTLS1_0_CLIENT: UInt32 = 131072
SP_PROT_DTLS1_2_SERVER: UInt32 = 262144
SP_PROT_DTLS1_2_CLIENT: UInt32 = 524288
SP_PROT_TLS1_3PLUS_SERVER: UInt32 = 4096
SP_PROT_TLS1_3PLUS_CLIENT: UInt32 = 8192
SCHANNEL_SECRET_TYPE_CAPI: UInt32 = 1
SCHANNEL_SECRET_PRIVKEY: UInt32 = 2
SCH_CRED_X509_CERTCHAIN: UInt32 = 1
SCH_CRED_X509_CAPI: UInt32 = 2
SCH_CRED_CERT_CONTEXT: UInt32 = 3
SSL_CRACK_CERTIFICATE_NAME: String = 'SslCrackCertificate'
SSL_FREE_CERTIFICATE_NAME: String = 'SslFreeCertificate'
SL_INFO_KEY_CHANNEL: String = 'Channel'
SL_INFO_KEY_NAME: String = 'Name'
SL_INFO_KEY_AUTHOR: String = 'Author'
SL_INFO_KEY_DESCRIPTION: String = 'Description'
SL_INFO_KEY_LICENSOR_URL: String = 'LicensorUrl'
SL_INFO_KEY_DIGITAL_PID: String = 'DigitalPID'
SL_INFO_KEY_DIGITAL_PID2: String = 'DigitalPID2'
SL_INFO_KEY_PARTIAL_PRODUCT_KEY: String = 'PartialProductKey'
SL_INFO_KEY_PRODUCT_SKU_ID: String = 'ProductSkuId'
SL_INFO_KEY_LICENSE_TYPE: String = 'LicenseType'
SL_INFO_KEY_VERSION: String = 'Version'
SL_INFO_KEY_SYSTEM_STATE: String = 'SystemState'
SL_INFO_KEY_ACTIVE_PLUGINS: String = 'ActivePlugins'
SL_INFO_KEY_SECURE_STORE_ID: String = 'SecureStoreId'
SL_INFO_KEY_BIOS_PKEY: String = 'BiosProductKey'
SL_INFO_KEY_BIOS_SLIC_STATE: String = 'BiosSlicState'
SL_INFO_KEY_BIOS_OA2_MINOR_VERSION: String = 'BiosOA2MinorVersion'
SL_INFO_KEY_BIOS_PKEY_DESCRIPTION: String = 'BiosProductKeyDescription'
SL_INFO_KEY_BIOS_PKEY_PKPN: String = 'BiosProductKeyPkPn'
SL_INFO_KEY_SECURE_PROCESSOR_ACTIVATION_URL: String = 'SPCURL'
SL_INFO_KEY_RIGHT_ACCOUNT_ACTIVATION_URL: String = 'RACURL'
SL_INFO_KEY_PRODUCT_KEY_ACTIVATION_URL: String = 'PKCURL'
SL_INFO_KEY_USE_LICENSE_ACTIVATION_URL: String = 'EULURL'
SL_INFO_KEY_IS_KMS: String = 'IsKeyManagementService'
SL_INFO_KEY_KMS_CURRENT_COUNT: String = 'KeyManagementServiceCurrentCount'
SL_INFO_KEY_KMS_REQUIRED_CLIENT_COUNT: String = 'KeyManagementServiceRequiredClientCount'
SL_INFO_KEY_KMS_UNLICENSED_REQUESTS: String = 'KeyManagementServiceUnlicensedRequests'
SL_INFO_KEY_KMS_LICENSED_REQUESTS: String = 'KeyManagementServiceLicensedRequests'
SL_INFO_KEY_KMS_OOB_GRACE_REQUESTS: String = 'KeyManagementServiceOOBGraceRequests'
SL_INFO_KEY_KMS_OOT_GRACE_REQUESTS: String = 'KeyManagementServiceOOTGraceRequests'
SL_INFO_KEY_KMS_NON_GENUINE_GRACE_REQUESTS: String = 'KeyManagementServiceNonGenuineGraceRequests'
SL_INFO_KEY_KMS_NOTIFICATION_REQUESTS: String = 'KeyManagementServiceNotificationRequests'
SL_INFO_KEY_KMS_TOTAL_REQUESTS: String = 'KeyManagementServiceTotalRequests'
SL_INFO_KEY_KMS_FAILED_REQUESTS: String = 'KeyManagementServiceFailedRequests'
SL_INFO_KEY_IS_PRS: String = 'IsPRS'
SL_PKEY_MS2005: String = 'msft:rm/algorithm/pkey/2005'
SL_PKEY_MS2009: String = 'msft:rm/algorithm/pkey/2009'
SL_PKEY_DETECT: String = 'msft:rm/algorithm/pkey/detect'
SL_EVENT_LICENSING_STATE_CHANGED: String = 'msft:rm/event/licensingstatechanged'
SL_EVENT_POLICY_CHANGED: String = 'msft:rm/event/policychanged'
SL_EVENT_USER_NOTIFICATION: String = 'msft:rm/event/usernotification'
SL_SYSTEM_STATE_REBOOT_POLICY_FOUND: UInt32 = 1
SL_SYSTEM_STATE_TAMPERED: UInt32 = 2
SL_REARM_REBOOT_REQUIRED: UInt32 = 1
SPP_MIGRATION_GATHER_MIGRATABLE_APPS: UInt32 = 1
SPP_MIGRATION_GATHER_ACTIVATED_WINDOWS_STATE: UInt32 = 2
SPP_MIGRATION_GATHER_ALL: UInt32 = 4294967295
SL_PROP_BRT_DATA: String = 'SL_BRT_DATA'
SL_PROP_BRT_COMMIT: String = 'SL_BRT_COMMIT'
SL_PROP_GENUINE_RESULT: String = 'SL_GENUINE_RESULT'
SL_PROP_NONGENUINE_GRACE_FLAG: String = 'SL_NONGENUINE_GRACE_FLAG'
SL_PROP_GET_GENUINE_AUTHZ: String = 'SL_GET_GENUINE_AUTHZ'
SL_PROP_GET_GENUINE_SERVER_AUTHZ: String = 'SL_GET_GENUINE_SERVER_AUTHZ'
SL_PROP_LAST_ACT_ATTEMPT_HRESULT: String = 'SL_LAST_ACT_ATTEMPT_HRESULT'
SL_PROP_LAST_ACT_ATTEMPT_TIME: String = 'SL_LAST_ACT_ATTEMPT_TIME'
SL_PROP_LAST_ACT_ATTEMPT_SERVER_FLAGS: String = 'SL_LAST_ACT_ATTEMPT_SERVER_FLAGS'
SL_PROP_ACTIVATION_VALIDATION_IN_PROGRESS: String = 'SL_ACTIVATION_VALIDATION_IN_PROGRESS'
SL_POLICY_EVALUATION_MODE_ENABLED: String = 'Security-SPP-EvaluationModeEnabled'
SL_DEFAULT_MIGRATION_ENCRYPTOR_URI: String = 'msft:spp/migrationencryptor/tokenact/1.0'
ID_CAP_SLAPI: String = 'slapiQueryLicenseValue'
USER_ACCOUNT_DISABLED: UInt32 = 1
USER_HOME_DIRECTORY_REQUIRED: UInt32 = 2
USER_PASSWORD_NOT_REQUIRED: UInt32 = 4
USER_TEMP_DUPLICATE_ACCOUNT: UInt32 = 8
USER_NORMAL_ACCOUNT: UInt32 = 16
USER_MNS_LOGON_ACCOUNT: UInt32 = 32
USER_INTERDOMAIN_TRUST_ACCOUNT: UInt32 = 64
USER_WORKSTATION_TRUST_ACCOUNT: UInt32 = 128
USER_SERVER_TRUST_ACCOUNT: UInt32 = 256
USER_DONT_EXPIRE_PASSWORD: UInt32 = 512
USER_ACCOUNT_AUTO_LOCKED: UInt32 = 1024
USER_ENCRYPTED_TEXT_PASSWORD_ALLOWED: UInt32 = 2048
USER_SMARTCARD_REQUIRED: UInt32 = 4096
USER_TRUSTED_FOR_DELEGATION: UInt32 = 8192
USER_NOT_DELEGATED: UInt32 = 16384
USER_USE_DES_KEY_ONLY: UInt32 = 32768
USER_DONT_REQUIRE_PREAUTH: UInt32 = 65536
USER_PASSWORD_EXPIRED: UInt32 = 131072
USER_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION: UInt32 = 262144
USER_NO_AUTH_DATA_REQUIRED: UInt32 = 524288
USER_PARTIAL_SECRETS_ACCOUNT: UInt32 = 1048576
USER_USE_AES_KEYS: UInt32 = 2097152
SAM_DAYS_PER_WEEK: UInt32 = 7
USER_ALL_PARAMETERS: UInt32 = 2097152
CLEAR_BLOCK_LENGTH: UInt32 = 8
CYPHER_BLOCK_LENGTH: UInt32 = 8
MSV1_0_VALIDATION_LOGOFF_TIME: UInt32 = 1
MSV1_0_VALIDATION_KICKOFF_TIME: UInt32 = 2
MSV1_0_VALIDATION_LOGON_SERVER: UInt32 = 4
MSV1_0_VALIDATION_LOGON_DOMAIN: UInt32 = 8
MSV1_0_VALIDATION_SESSION_KEY: UInt32 = 16
MSV1_0_VALIDATION_USER_FLAGS: UInt32 = 32
MSV1_0_VALIDATION_USER_ID: UInt32 = 64
MSV1_0_SUBAUTH_ACCOUNT_DISABLED: UInt32 = 1
MSV1_0_SUBAUTH_PASSWORD: UInt32 = 2
MSV1_0_SUBAUTH_WORKSTATIONS: UInt32 = 4
MSV1_0_SUBAUTH_LOGON_HOURS: UInt32 = 8
MSV1_0_SUBAUTH_ACCOUNT_EXPIRY: UInt32 = 16
MSV1_0_SUBAUTH_PASSWORD_EXPIRY: UInt32 = 32
MSV1_0_SUBAUTH_ACCOUNT_TYPE: UInt32 = 64
MSV1_0_SUBAUTH_LOCKOUT: UInt32 = 128
SL_MDOLLAR_ZONE: UInt32 = 40960
SL_SERVER_ZONE: UInt32 = 45056
SL_MSCH_ZONE: UInt32 = 49152
SL_INTERNAL_ZONE: UInt32 = 57344
SL_CLIENTAPI_ZONE: UInt32 = 61440
FACILITY_SL_ITF: UInt32 = 4
_FACILITY_WINDOWS_STORE: UInt32 = 63
SL_E_SRV_INVALID_PUBLISH_LICENSE: Windows.Win32.Foundation.HRESULT = -1073434623
SL_E_SRV_INVALID_PRODUCT_KEY_LICENSE: Windows.Win32.Foundation.HRESULT = -1073434622
SL_E_SRV_INVALID_RIGHTS_ACCOUNT_LICENSE: Windows.Win32.Foundation.HRESULT = -1073434621
SL_E_SRV_INVALID_LICENSE_STRUCTURE: Windows.Win32.Foundation.HRESULT = -1073434620
SL_E_SRV_AUTHORIZATION_FAILED: Windows.Win32.Foundation.HRESULT = -1073434619
SL_E_SRV_INVALID_BINDING: Windows.Win32.Foundation.HRESULT = -1073434618
SL_E_SRV_SERVER_PONG: Windows.Win32.Foundation.HRESULT = -1073434617
SL_E_SRV_INVALID_PAYLOAD: Windows.Win32.Foundation.HRESULT = -1073434616
SL_E_SRV_INVALID_SECURITY_PROCESSOR_LICENSE: Windows.Win32.Foundation.HRESULT = -1073434615
SL_E_SRV_BUSINESS_TOKEN_ENTRY_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073434608
SL_E_SRV_CLIENT_CLOCK_OUT_OF_SYNC: Windows.Win32.Foundation.HRESULT = -1073434607
SL_E_SRV_GENERAL_ERROR: Windows.Win32.Foundation.HRESULT = -1073434368
SL_E_CHPA_PRODUCT_KEY_OUT_OF_RANGE: Windows.Win32.Foundation.HRESULT = -1073430527
SL_E_CHPA_INVALID_BINDING: Windows.Win32.Foundation.HRESULT = -1073430526
SL_E_CHPA_PRODUCT_KEY_BLOCKED: Windows.Win32.Foundation.HRESULT = -1073430525
SL_E_CHPA_INVALID_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073430524
SL_E_CHPA_BINDING_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073430523
SL_E_CHPA_BINDING_MAPPING_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073430522
SL_E_CHPA_UNSUPPORTED_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073430521
SL_E_CHPA_MAXIMUM_UNLOCK_EXCEEDED: Windows.Win32.Foundation.HRESULT = -1073430520
SL_E_CHPA_ACTCONFIG_ID_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073430519
SL_E_CHPA_INVALID_PRODUCT_DATA_ID: Windows.Win32.Foundation.HRESULT = -1073430518
SL_E_CHPA_INVALID_PRODUCT_DATA: Windows.Win32.Foundation.HRESULT = -1073430517
SL_E_CHPA_SYSTEM_ERROR: Windows.Win32.Foundation.HRESULT = -1073430516
SL_E_CHPA_INVALID_ACTCONFIG_ID: Windows.Win32.Foundation.HRESULT = -1073430515
SL_E_CHPA_INVALID_PRODUCT_KEY_LENGTH: Windows.Win32.Foundation.HRESULT = -1073430514
SL_E_CHPA_INVALID_PRODUCT_KEY_FORMAT: Windows.Win32.Foundation.HRESULT = -1073430513
SL_E_CHPA_INVALID_PRODUCT_KEY_CHAR: Windows.Win32.Foundation.HRESULT = -1073430512
SL_E_CHPA_INVALID_BINDING_URI: Windows.Win32.Foundation.HRESULT = -1073430511
SL_E_CHPA_NETWORK_ERROR: Windows.Win32.Foundation.HRESULT = -1073430510
SL_E_CHPA_DATABASE_ERROR: Windows.Win32.Foundation.HRESULT = -1073430509
SL_E_CHPA_INVALID_ARGUMENT: Windows.Win32.Foundation.HRESULT = -1073430508
SL_E_CHPA_DMAK_LIMIT_EXCEEDED: Windows.Win32.Foundation.HRESULT = -1073430496
SL_E_CHPA_DMAK_EXTENSION_LIMIT_EXCEEDED: Windows.Win32.Foundation.HRESULT = -1073430495
SL_E_CHPA_REISSUANCE_LIMIT_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073430494
SL_E_CHPA_OVERRIDE_REQUEST_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073430493
SL_E_CHPA_OEM_SLP_COA0: Windows.Win32.Foundation.HRESULT = -1073430506
SL_E_CHPA_PRODUCT_KEY_BLOCKED_IPLOCATION: Windows.Win32.Foundation.HRESULT = -1073430505
SL_E_CHPA_RESPONSE_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073430507
SL_E_CHPA_GENERAL_ERROR: Windows.Win32.Foundation.HRESULT = -1073430448
SL_E_CHPA_TIMEBASED_ACTIVATION_BEFORE_START_DATE: Windows.Win32.Foundation.HRESULT = -1073430480
SL_E_CHPA_TIMEBASED_ACTIVATION_AFTER_END_DATE: Windows.Win32.Foundation.HRESULT = -1073430479
SL_E_CHPA_TIMEBASED_ACTIVATION_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073430478
SL_E_CHPA_TIMEBASED_PRODUCT_KEY_NOT_CONFIGURED: Windows.Win32.Foundation.HRESULT = -1073430477
SL_E_CHPA_NO_RULES_TO_ACTIVATE: Windows.Win32.Foundation.HRESULT = -1073430449
SL_E_CHPA_DIGITALMARKER_INVALID_BINDING: Windows.Win32.Foundation.HRESULT = -1073430447
SL_E_CHPA_DIGITALMARKER_BINDING_NOT_CONFIGURED: Windows.Win32.Foundation.HRESULT = -1073430446
SL_E_CHPA_DYNAMICALLY_BLOCKED_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073430432
SL_E_CHPA_MSCH_RESPONSE_NOT_AVAILABLE_VGA: Windows.Win32.Foundation.HRESULT = -1073429505
SL_E_CHPA_BUSINESS_RULE_INPUT_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073428736
SL_E_CHPA_NULL_VALUE_FOR_PROPERTY_NAME_OR_ID: Windows.Win32.Foundation.HRESULT = -1073428656
SL_E_CHPA_UNKNOWN_PROPERTY_NAME: Windows.Win32.Foundation.HRESULT = -1073428655
SL_E_CHPA_UNKNOWN_PROPERTY_ID: Windows.Win32.Foundation.HRESULT = -1073428654
SL_E_CHPA_FAILED_TO_UPDATE_PRODUCTKEY_BINDING: Windows.Win32.Foundation.HRESULT = -1073428651
SL_E_CHPA_FAILED_TO_INSERT_PRODUCTKEY_BINDING: Windows.Win32.Foundation.HRESULT = -1073428650
SL_E_CHPA_FAILED_TO_DELETE_PRODUCTKEY_BINDING: Windows.Win32.Foundation.HRESULT = -1073428649
SL_E_CHPA_FAILED_TO_PROCESS_PRODUCT_KEY_BINDINGS_XML: Windows.Win32.Foundation.HRESULT = -1073428648
SL_E_CHPA_FAILED_TO_INSERT_PRODUCT_KEY_PROPERTY: Windows.Win32.Foundation.HRESULT = -1073428646
SL_E_CHPA_FAILED_TO_UPDATE_PRODUCT_KEY_PROPERTY: Windows.Win32.Foundation.HRESULT = -1073428645
SL_E_CHPA_FAILED_TO_DELETE_PRODUCT_KEY_PROPERTY: Windows.Win32.Foundation.HRESULT = -1073428644
SL_E_CHPA_UNKNOWN_PRODUCT_KEY_TYPE: Windows.Win32.Foundation.HRESULT = -1073428636
SL_E_CHPA_PRODUCT_KEY_BEING_USED: Windows.Win32.Foundation.HRESULT = -1073428624
SL_E_CHPA_FAILED_TO_INSERT_PRODUCT_KEY_RECORD: Windows.Win32.Foundation.HRESULT = -1073428608
SL_E_CHPA_FAILED_TO_UPDATE_PRODUCT_KEY_RECORD: Windows.Win32.Foundation.HRESULT = -1073428607
SL_E_INVALID_LICENSE_STATE_BREACH_GRACE: Windows.Win32.Foundation.HRESULT = -1073429871
SL_E_INVALID_LICENSE_STATE_BREACH_GRACE_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073429870
SL_E_INVALID_TEMPLATE_ID: Windows.Win32.Foundation.HRESULT = -1073429770
SL_E_INVALID_XML_BLOB: Windows.Win32.Foundation.HRESULT = -1073429766
SL_E_VALIDATION_BLOB_PARAM_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073429721
SL_E_INVALID_CLIENT_TOKEN: Windows.Win32.Foundation.HRESULT = -1073429720
SL_E_INVALID_OFFLINE_BLOB: Windows.Win32.Foundation.HRESULT = -1073429719
SL_E_OFFLINE_VALIDATION_BLOB_PARAM_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073429718
SL_E_INVALID_OSVERSION_TEMPLATEID: Windows.Win32.Foundation.HRESULT = -1073429717
SL_E_OFFLINE_GENUINE_BLOB_REVOKED: Windows.Win32.Foundation.HRESULT = -1073429716
SL_E_OFFLINE_GENUINE_BLOB_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073429715
SL_E_INVALID_OS_FOR_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073429503
SL_E_INVALID_FILE_HASH: Windows.Win32.Foundation.HRESULT = -1073429343
SL_E_VALIDATION_BLOCKED_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073429342
SL_E_MISMATCHED_KEY_TYPES: Windows.Win32.Foundation.HRESULT = -1073429340
SL_E_VALIDATION_INVALID_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073429339
SL_E_INVALID_OEM_OR_VOLUME_BINDING_DATA: Windows.Win32.Foundation.HRESULT = -1073429337
SL_E_INVALID_LICENSE_STATE: Windows.Win32.Foundation.HRESULT = -1073429336
SL_E_IP_LOCATION_FALIED: Windows.Win32.Foundation.HRESULT = -1073429335
SL_E_SOFTMOD_EXPLOIT_DETECTED: Windows.Win32.Foundation.HRESULT = -1073429333
SL_E_INVALID_TOKEN_DATA: Windows.Win32.Foundation.HRESULT = -1073429332
SL_E_HEALTH_CHECK_FAILED_NEUTRAL_FILES: Windows.Win32.Foundation.HRESULT = -1073429331
SL_E_HEALTH_CHECK_FAILED_MUI_FILES: Windows.Win32.Foundation.HRESULT = -1073429330
SL_E_INVALID_AD_DATA: Windows.Win32.Foundation.HRESULT = -1073429329
SL_E_INVALID_RSDP_COUNT: Windows.Win32.Foundation.HRESULT = -1073429328
SL_E_ENGINE_DETECTED_EXPLOIT: Windows.Win32.Foundation.HRESULT = -1073429327
SL_E_NON_GENUINE_STATUS_LAST: Windows.Win32.Foundation.HRESULT = -1073428992
SL_E_NOTIFICATION_BREACH_DETECTED: Windows.Win32.Foundation.HRESULT = -1073429199
SL_E_NOTIFICATION_GRACE_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073429198
SL_E_NOTIFICATION_OTHER_REASONS: Windows.Win32.Foundation.HRESULT = -1073429197
SL_E_INVALID_CONTEXT: Windows.Win32.Foundation.HRESULT = -1073422335
SL_E_TOKEN_STORE_INVALID_STATE: Windows.Win32.Foundation.HRESULT = -1073422334
SL_E_EVALUATION_FAILED: Windows.Win32.Foundation.HRESULT = -1073422333
SL_E_NOT_EVALUATED: Windows.Win32.Foundation.HRESULT = -1073422332
SL_E_NOT_ACTIVATED: Windows.Win32.Foundation.HRESULT = -1073422331
SL_E_INVALID_GUID: Windows.Win32.Foundation.HRESULT = -1073422330
SL_E_TOKSTO_TOKEN_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073422329
SL_E_TOKSTO_NO_PROPERTIES: Windows.Win32.Foundation.HRESULT = -1073422328
SL_E_TOKSTO_NOT_INITIALIZED: Windows.Win32.Foundation.HRESULT = -1073422327
SL_E_TOKSTO_ALREADY_INITIALIZED: Windows.Win32.Foundation.HRESULT = -1073422326
SL_E_TOKSTO_NO_ID_SET: Windows.Win32.Foundation.HRESULT = -1073422325
SL_E_TOKSTO_CANT_CREATE_FILE: Windows.Win32.Foundation.HRESULT = -1073422324
SL_E_TOKSTO_CANT_WRITE_TO_FILE: Windows.Win32.Foundation.HRESULT = -1073422323
SL_E_TOKSTO_CANT_READ_FILE: Windows.Win32.Foundation.HRESULT = -1073422322
SL_E_TOKSTO_CANT_PARSE_PROPERTIES: Windows.Win32.Foundation.HRESULT = -1073422321
SL_E_TOKSTO_PROPERTY_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073422320
SL_E_TOKSTO_INVALID_FILE: Windows.Win32.Foundation.HRESULT = -1073422319
SL_E_TOKSTO_CANT_CREATE_MUTEX: Windows.Win32.Foundation.HRESULT = -1073422318
SL_E_TOKSTO_CANT_ACQUIRE_MUTEX: Windows.Win32.Foundation.HRESULT = -1073422317
SL_E_TOKSTO_NO_TOKEN_DATA: Windows.Win32.Foundation.HRESULT = -1073422316
SL_E_EUL_CONSUMPTION_FAILED: Windows.Win32.Foundation.HRESULT = -1073422315
SL_E_PKEY_INVALID_CONFIG: Windows.Win32.Foundation.HRESULT = -1073422314
SL_E_PKEY_INVALID_UNIQUEID: Windows.Win32.Foundation.HRESULT = -1073422313
SL_E_PKEY_INVALID_ALGORITHM: Windows.Win32.Foundation.HRESULT = -1073422312
SL_E_PKEY_INTERNAL_ERROR: Windows.Win32.Foundation.HRESULT = -1073422311
SL_E_LICENSE_INVALID_ADDON_INFO: Windows.Win32.Foundation.HRESULT = -1073422310
SL_E_HWID_ERROR: Windows.Win32.Foundation.HRESULT = -1073422309
SL_E_PKEY_INVALID_KEYCHANGE1: Windows.Win32.Foundation.HRESULT = -1073422308
SL_E_PKEY_INVALID_KEYCHANGE2: Windows.Win32.Foundation.HRESULT = -1073422307
SL_E_PKEY_INVALID_KEYCHANGE3: Windows.Win32.Foundation.HRESULT = -1073422306
SL_E_POLICY_OTHERINFO_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073422304
SL_E_PRODUCT_UNIQUENESS_GROUP_ID_INVALID: Windows.Win32.Foundation.HRESULT = -1073422303
SL_E_SECURE_STORE_ID_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073422302
SL_E_INVALID_RULESET_RULE: Windows.Win32.Foundation.HRESULT = -1073422301
SL_E_INVALID_CONTEXT_DATA: Windows.Win32.Foundation.HRESULT = -1073422300
SL_E_INVALID_HASH: Windows.Win32.Foundation.HRESULT = -1073422299
SL_E_INVALID_USE_OF_ADD_ON_PKEY: Windows.Win32.Foundation.HRESULT = -2147164122
SL_E_WINDOWS_VERSION_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073422297
SL_E_ACTIVATION_IN_PROGRESS: Windows.Win32.Foundation.HRESULT = -1073422296
SL_E_STORE_UPGRADE_TOKEN_REQUIRED: Windows.Win32.Foundation.HRESULT = -1073422295
SL_E_STORE_UPGRADE_TOKEN_WRONG_EDITION: Windows.Win32.Foundation.HRESULT = -1073422294
SL_E_STORE_UPGRADE_TOKEN_WRONG_PID: Windows.Win32.Foundation.HRESULT = -1073422293
SL_E_STORE_UPGRADE_TOKEN_NOT_PRS_SIGNED: Windows.Win32.Foundation.HRESULT = -1073422292
SL_E_STORE_UPGRADE_TOKEN_WRONG_VERSION: Windows.Win32.Foundation.HRESULT = -1073422291
SL_E_STORE_UPGRADE_TOKEN_NOT_AUTHORIZED: Windows.Win32.Foundation.HRESULT = -1073422290
SL_E_SFS_INVALID_FS_VERSION: Windows.Win32.Foundation.HRESULT = -2147163903
SL_E_SFS_INVALID_FD_TABLE: Windows.Win32.Foundation.HRESULT = -2147163902
SL_E_SFS_INVALID_SYNC: Windows.Win32.Foundation.HRESULT = -2147163901
SL_E_SFS_BAD_TOKEN_NAME: Windows.Win32.Foundation.HRESULT = -2147163900
SL_E_SFS_BAD_TOKEN_EXT: Windows.Win32.Foundation.HRESULT = -2147163899
SL_E_SFS_DUPLICATE_TOKEN_NAME: Windows.Win32.Foundation.HRESULT = -2147163898
SL_E_SFS_TOKEN_SIZE_MISMATCH: Windows.Win32.Foundation.HRESULT = -2147163897
SL_E_SFS_INVALID_TOKEN_DATA_HASH: Windows.Win32.Foundation.HRESULT = -2147163896
SL_E_SFS_FILE_READ_ERROR: Windows.Win32.Foundation.HRESULT = -2147163895
SL_E_SFS_FILE_WRITE_ERROR: Windows.Win32.Foundation.HRESULT = -2147163894
SL_E_SFS_INVALID_FILE_POSITION: Windows.Win32.Foundation.HRESULT = -2147163893
SL_E_SFS_NO_ACTIVE_TRANSACTION: Windows.Win32.Foundation.HRESULT = -2147163892
SL_E_SFS_INVALID_FS_HEADER: Windows.Win32.Foundation.HRESULT = -2147163891
SL_E_SFS_INVALID_TOKEN_DESCRIPTOR: Windows.Win32.Foundation.HRESULT = -2147163890
SL_E_INTERNAL_ERROR: Windows.Win32.Foundation.HRESULT = -1073418239
SL_E_RIGHT_NOT_CONSUMED: Windows.Win32.Foundation.HRESULT = -1073418238
SL_E_USE_LICENSE_NOT_INSTALLED: Windows.Win32.Foundation.HRESULT = -1073418237
SL_E_MISMATCHED_PKEY_RANGE: Windows.Win32.Foundation.HRESULT = -1073418236
SL_E_MISMATCHED_PID: Windows.Win32.Foundation.HRESULT = -1073418235
SL_E_EXTERNAL_SIGNATURE_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073418234
SL_E_RAC_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073418233
SL_E_SPC_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073418232
SL_E_GRACE_TIME_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073418231
SL_E_MISMATCHED_APPID: Windows.Win32.Foundation.HRESULT = -1073418230
SL_E_NO_PID_CONFIG_DATA: Windows.Win32.Foundation.HRESULT = -1073418229
SL_I_OOB_GRACE_PERIOD: Windows.Win32.Foundation.HRESULT = 1074065420
SL_I_OOT_GRACE_PERIOD: Windows.Win32.Foundation.HRESULT = 1074065421
SL_E_MISMATCHED_SECURITY_PROCESSOR: Windows.Win32.Foundation.HRESULT = -1073418226
SL_E_OUT_OF_TOLERANCE: Windows.Win32.Foundation.HRESULT = -1073418225
SL_E_INVALID_PKEY: Windows.Win32.Foundation.HRESULT = -1073418224
SL_E_LICENSE_FILE_NOT_INSTALLED: Windows.Win32.Foundation.HRESULT = -1073418223
SL_E_VALUE_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073418222
SL_E_RIGHT_NOT_GRANTED: Windows.Win32.Foundation.HRESULT = -1073418221
SL_E_PKEY_NOT_INSTALLED: Windows.Win32.Foundation.HRESULT = -1073418220
SL_E_PRODUCT_SKU_NOT_INSTALLED: Windows.Win32.Foundation.HRESULT = -1073418219
SL_E_NOT_SUPPORTED: Windows.Win32.Foundation.HRESULT = -1073418218
SL_E_PUBLISHING_LICENSE_NOT_INSTALLED: Windows.Win32.Foundation.HRESULT = -1073418217
SL_E_LICENSE_SERVER_URL_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073418216
SL_E_INVALID_EVENT_ID: Windows.Win32.Foundation.HRESULT = -1073418215
SL_E_EVENT_NOT_REGISTERED: Windows.Win32.Foundation.HRESULT = -1073418214
SL_E_EVENT_ALREADY_REGISTERED: Windows.Win32.Foundation.HRESULT = -1073418213
SL_E_DECRYPTION_LICENSES_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073418212
SL_E_LICENSE_SIGNATURE_VERIFICATION_FAILED: Windows.Win32.Foundation.HRESULT = -1073418211
SL_E_DATATYPE_MISMATCHED: Windows.Win32.Foundation.HRESULT = -1073418210
SL_E_INVALID_LICENSE: Windows.Win32.Foundation.HRESULT = -1073418209
SL_E_INVALID_PACKAGE: Windows.Win32.Foundation.HRESULT = -1073418208
SL_E_VALIDITY_TIME_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073418207
SL_E_LICENSE_AUTHORIZATION_FAILED: Windows.Win32.Foundation.HRESULT = -1073418206
SL_E_LICENSE_DECRYPTION_FAILED: Windows.Win32.Foundation.HRESULT = -1073418205
SL_E_WINDOWS_INVALID_LICENSE_STATE: Windows.Win32.Foundation.HRESULT = -1073418204
SL_E_LUA_ACCESSDENIED: Windows.Win32.Foundation.HRESULT = -1073418203
SL_E_PROXY_KEY_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073418202
SL_E_TAMPER_DETECTED: Windows.Win32.Foundation.HRESULT = -1073418201
SL_E_POLICY_CACHE_INVALID: Windows.Win32.Foundation.HRESULT = -1073418200
SL_E_INVALID_RUNNING_MODE: Windows.Win32.Foundation.HRESULT = -1073418199
SL_E_SLP_NOT_SIGNED: Windows.Win32.Foundation.HRESULT = -1073418198
SL_E_CIDIID_INVALID_DATA: Windows.Win32.Foundation.HRESULT = -1073418196
SL_E_CIDIID_INVALID_VERSION: Windows.Win32.Foundation.HRESULT = -1073418195
SL_E_CIDIID_VERSION_NOT_SUPPORTED: Windows.Win32.Foundation.HRESULT = -1073418194
SL_E_CIDIID_INVALID_DATA_LENGTH: Windows.Win32.Foundation.HRESULT = -1073418193
SL_E_CIDIID_NOT_DEPOSITED: Windows.Win32.Foundation.HRESULT = -1073418192
SL_E_CIDIID_MISMATCHED: Windows.Win32.Foundation.HRESULT = -1073418191
SL_E_INVALID_BINDING_BLOB: Windows.Win32.Foundation.HRESULT = -1073418190
SL_E_PRODUCT_KEY_INSTALLATION_NOT_ALLOWED: Windows.Win32.Foundation.HRESULT = -1073418189
SL_E_EUL_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073418188
SL_E_VL_NOT_WINDOWS_SLP: Windows.Win32.Foundation.HRESULT = -1073418187
SL_E_VL_NOT_ENOUGH_COUNT: Windows.Win32.Foundation.HRESULT = -1073418184
SL_E_VL_BINDING_SERVICE_NOT_ENABLED: Windows.Win32.Foundation.HRESULT = -1073418183
SL_E_VL_INFO_PRODUCT_USER_RIGHT: Windows.Win32.Foundation.HRESULT = 1074065472
SL_E_VL_KEY_MANAGEMENT_SERVICE_NOT_ACTIVATED: Windows.Win32.Foundation.HRESULT = -1073418175
SL_E_VL_KEY_MANAGEMENT_SERVICE_ID_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073418174
SL_E_PROXY_POLICY_NOT_UPDATED: Windows.Win32.Foundation.HRESULT = -1073418169
SL_E_CIDIID_INVALID_CHECK_DIGITS: Windows.Win32.Foundation.HRESULT = -1073418163
SL_E_LICENSE_MANAGEMENT_DATA_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073418161
SL_E_INVALID_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073418160
SL_E_BLOCKED_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -1073418159
SL_E_DUPLICATE_POLICY: Windows.Win32.Foundation.HRESULT = -1073418158
SL_E_MISSING_OVERRIDE_ONLY_ATTRIBUTE: Windows.Win32.Foundation.HRESULT = -1073418157
SL_E_LICENSE_MANAGEMENT_DATA_DUPLICATED: Windows.Win32.Foundation.HRESULT = -1073418156
SL_E_BASE_SKU_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073418155
SL_E_VL_MACHINE_NOT_BOUND: Windows.Win32.Foundation.HRESULT = -1073418154
SL_E_SLP_MISSING_ACPI_SLIC: Windows.Win32.Foundation.HRESULT = -1073418153
SL_E_SLP_MISSING_SLP_MARKER: Windows.Win32.Foundation.HRESULT = -1073418152
SL_E_SLP_BAD_FORMAT: Windows.Win32.Foundation.HRESULT = -1073418151
SL_E_INVALID_PACKAGE_VERSION: Windows.Win32.Foundation.HRESULT = -1073418144
SL_E_PKEY_INVALID_UPGRADE: Windows.Win32.Foundation.HRESULT = -1073418143
SL_E_ISSUANCE_LICENSE_NOT_INSTALLED: Windows.Win32.Foundation.HRESULT = -1073418142
SL_E_SLP_OEM_CERT_MISSING: Windows.Win32.Foundation.HRESULT = -1073418141
SL_E_NONGENUINE_GRACE_TIME_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073418140
SL_I_NONGENUINE_GRACE_PERIOD: Windows.Win32.Foundation.HRESULT = 1074065509
SL_E_DEPENDENT_PROPERTY_NOT_SET: Windows.Win32.Foundation.HRESULT = -1073418138
SL_E_NONGENUINE_GRACE_TIME_EXPIRED_2: Windows.Win32.Foundation.HRESULT = -1073418137
SL_I_NONGENUINE_GRACE_PERIOD_2: Windows.Win32.Foundation.HRESULT = 1074065512
SL_E_MISMATCHED_PRODUCT_SKU: Windows.Win32.Foundation.HRESULT = -1073418135
SL_E_OPERATION_NOT_ALLOWED: Windows.Win32.Foundation.HRESULT = -1073418134
SL_E_VL_KEY_MANAGEMENT_SERVICE_VM_NOT_SUPPORTED: Windows.Win32.Foundation.HRESULT = -1073418133
SL_E_VL_INVALID_TIMESTAMP: Windows.Win32.Foundation.HRESULT = -1073418132
SL_E_PLUGIN_INVALID_MANIFEST: Windows.Win32.Foundation.HRESULT = -1073418127
SL_E_APPLICATION_POLICIES_MISSING: Windows.Win32.Foundation.HRESULT = -1073418126
SL_E_APPLICATION_POLICIES_NOT_LOADED: Windows.Win32.Foundation.HRESULT = -1073418125
SL_E_VL_BINDING_SERVICE_UNAVAILABLE: Windows.Win32.Foundation.HRESULT = -1073418124
SL_E_SERVICE_STOPPING: Windows.Win32.Foundation.HRESULT = -1073418123
SL_E_PLUGIN_NOT_REGISTERED: Windows.Win32.Foundation.HRESULT = -1073418122
SL_E_AUTHN_WRONG_VERSION: Windows.Win32.Foundation.HRESULT = -1073418121
SL_E_AUTHN_MISMATCHED_KEY: Windows.Win32.Foundation.HRESULT = -1073418120
SL_E_AUTHN_CHALLENGE_NOT_SET: Windows.Win32.Foundation.HRESULT = -1073418119
SL_E_AUTHN_CANT_VERIFY: Windows.Win32.Foundation.HRESULT = -1073418118
SL_E_SERVICE_RUNNING: Windows.Win32.Foundation.HRESULT = -1073418117
SL_E_SLP_INVALID_MARKER_VERSION: Windows.Win32.Foundation.HRESULT = -1073418116
SL_E_INVALID_PRODUCT_KEY_TYPE: Windows.Win32.Foundation.HRESULT = -1073418115
SL_E_CIDIID_MISMATCHED_PKEY: Windows.Win32.Foundation.HRESULT = -1073418114
SL_E_CIDIID_NOT_BOUND: Windows.Win32.Foundation.HRESULT = -1073418113
SL_E_LICENSE_NOT_BOUND: Windows.Win32.Foundation.HRESULT = -1073418112
SL_E_VL_AD_AO_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073418111
SL_E_VL_AD_AO_NAME_TOO_LONG: Windows.Win32.Foundation.HRESULT = -1073418110
SL_E_VL_AD_SCHEMA_VERSION_NOT_SUPPORTED: Windows.Win32.Foundation.HRESULT = -1073418109
SL_E_NOT_GENUINE: Windows.Win32.Foundation.HRESULT = -1073417728
SL_E_EDITION_MISMATCHED: Windows.Win32.Foundation.HRESULT = -1073417712
SL_E_HWID_CHANGED: Windows.Win32.Foundation.HRESULT = -1073417711
SL_E_OEM_KEY_EDITION_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073417710
SL_E_NO_PRODUCT_KEY_FOUND: Windows.Win32.Foundation.HRESULT = -1073417709
SL_E_DOWNLEVEL_SETUP_KEY: Windows.Win32.Foundation.HRESULT = -1073417708
SL_E_BIOS_KEY: Windows.Win32.Foundation.HRESULT = -1073417707
SL_E_TKA_CHALLENGE_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073417471
SL_E_TKA_SILENT_ACTIVATION_FAILURE: Windows.Win32.Foundation.HRESULT = -1073417470
SL_E_TKA_INVALID_CERT_CHAIN: Windows.Win32.Foundation.HRESULT = -1073417469
SL_E_TKA_GRANT_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073417468
SL_E_TKA_CERT_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073417467
SL_E_TKA_INVALID_SKU_ID: Windows.Win32.Foundation.HRESULT = -1073417466
SL_E_TKA_INVALID_BLOB: Windows.Win32.Foundation.HRESULT = -1073417465
SL_E_TKA_TAMPERED_CERT_CHAIN: Windows.Win32.Foundation.HRESULT = -1073417464
SL_E_TKA_CHALLENGE_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073417463
SL_E_TKA_INVALID_CERTIFICATE: Windows.Win32.Foundation.HRESULT = -1073417462
SL_E_TKA_INVALID_SMARTCARD: Windows.Win32.Foundation.HRESULT = -1073417461
SL_E_TKA_FAILED_GRANT_PARSING: Windows.Win32.Foundation.HRESULT = -1073417460
SL_E_TKA_INVALID_THUMBPRINT: Windows.Win32.Foundation.HRESULT = -1073417459
SL_E_TKA_THUMBPRINT_CERT_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073417458
SL_E_TKA_CRITERIA_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073417457
SL_E_TKA_TPID_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073417456
SL_E_TKA_SOFT_CERT_DISALLOWED: Windows.Win32.Foundation.HRESULT = -1073417455
SL_E_TKA_SOFT_CERT_INVALID: Windows.Win32.Foundation.HRESULT = -1073417454
SL_E_TKA_CERT_CNG_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073417453
SL_I_STORE_BASED_ACTIVATION: Windows.Win32.Foundation.HRESULT = 1074066433
E_RM_UNKNOWN_ERROR: Windows.Win32.Foundation.HRESULT = -1073415165
SL_I_TIMEBASED_VALIDITY_PERIOD: Windows.Win32.Foundation.HRESULT = 1074068484
SL_I_PERPETUAL_OOB_GRACE_PERIOD: Windows.Win32.Foundation.HRESULT = 1074068485
SL_I_TIMEBASED_EXTENDED_GRACE_PERIOD: Windows.Win32.Foundation.HRESULT = 1074068486
SL_E_VALIDITY_PERIOD_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073415161
SL_E_IA_THROTTLE_LIMIT_EXCEEDED: Windows.Win32.Foundation.HRESULT = -1073414912
SL_E_IA_INVALID_VIRTUALIZATION_PLATFORM: Windows.Win32.Foundation.HRESULT = -1073414911
SL_E_IA_PARENT_PARTITION_NOT_ACTIVATED: Windows.Win32.Foundation.HRESULT = -1073414910
SL_E_IA_ID_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073414909
SL_E_IA_MACHINE_NOT_BOUND: Windows.Win32.Foundation.HRESULT = -1073414908
SL_E_TAMPER_RECOVERY_REQUIRES_ACTIVATION: Windows.Win32.Foundation.HRESULT = -1073414656
SL_REMAPPING_SP_PUB_GENERAL_NOT_INITIALIZED: Windows.Win32.Foundation.HRESULT = -1073426175
SL_REMAPPING_SP_STATUS_SYSTEM_TIME_SKEWED: Windows.Win32.Foundation.HRESULT = -2147167998
SL_REMAPPING_SP_STATUS_GENERIC_FAILURE: Windows.Win32.Foundation.HRESULT = -1073426173
SL_REMAPPING_SP_STATUS_INVALIDARG: Windows.Win32.Foundation.HRESULT = -1073426172
SL_REMAPPING_SP_STATUS_ALREADY_EXISTS: Windows.Win32.Foundation.HRESULT = -1073426171
SL_REMAPPING_SP_STATUS_INSUFFICIENT_BUFFER: Windows.Win32.Foundation.HRESULT = -1073426169
SL_REMAPPING_SP_STATUS_INVALIDDATA: Windows.Win32.Foundation.HRESULT = -1073426168
SL_REMAPPING_SP_STATUS_INVALID_SPAPI_CALL: Windows.Win32.Foundation.HRESULT = -1073426167
SL_REMAPPING_SP_STATUS_INVALID_SPAPI_VERSION: Windows.Win32.Foundation.HRESULT = -1073426166
SL_REMAPPING_SP_STATUS_DEBUGGER_DETECTED: Windows.Win32.Foundation.HRESULT = -2147167989
SL_REMAPPING_SP_STATUS_NO_MORE_DATA: Windows.Win32.Foundation.HRESULT = -1073426164
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_KEYLENGTH: Windows.Win32.Foundation.HRESULT = -1073425919
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_BLOCKLENGTH: Windows.Win32.Foundation.HRESULT = -1073425918
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_CIPHER: Windows.Win32.Foundation.HRESULT = -1073425917
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_CIPHERMODE: Windows.Win32.Foundation.HRESULT = -1073425916
SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_PROVIDERID: Windows.Win32.Foundation.HRESULT = -1073425915
SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_KEYID: Windows.Win32.Foundation.HRESULT = -1073425914
SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_HASHID: Windows.Win32.Foundation.HRESULT = -1073425913
SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_ATTRIBUTEID: Windows.Win32.Foundation.HRESULT = -1073425912
SL_REMAPPING_SP_PUB_CRYPTO_HASH_FINALIZED: Windows.Win32.Foundation.HRESULT = -1073425911
SL_REMAPPING_SP_PUB_CRYPTO_KEY_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -1073425910
SL_REMAPPING_SP_PUB_CRYPTO_KEY_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073425909
SL_REMAPPING_SP_PUB_CRYPTO_NOT_BLOCK_ALIGNED: Windows.Win32.Foundation.HRESULT = -1073425908
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_SIGNATURELENGTH: Windows.Win32.Foundation.HRESULT = -1073425907
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_SIGNATURE: Windows.Win32.Foundation.HRESULT = -1073425906
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_BLOCK: Windows.Win32.Foundation.HRESULT = -1073425905
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_FORMAT: Windows.Win32.Foundation.HRESULT = -1073425904
SL_REMAPPING_SP_PUB_CRYPTO_INVALID_PADDING: Windows.Win32.Foundation.HRESULT = -1073425903
SL_REMAPPING_SP_PUB_TS_TAMPERED: Windows.Win32.Foundation.HRESULT = -1073425663
SL_REMAPPING_SP_PUB_TS_REARMED: Windows.Win32.Foundation.HRESULT = -1073425662
SL_REMAPPING_SP_PUB_TS_RECREATED: Windows.Win32.Foundation.HRESULT = -1073425661
SL_REMAPPING_SP_PUB_TS_ENTRY_KEY_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073425660
SL_REMAPPING_SP_PUB_TS_ENTRY_KEY_ALREADY_EXISTS: Windows.Win32.Foundation.HRESULT = -1073425659
SL_REMAPPING_SP_PUB_TS_ENTRY_KEY_SIZE_TOO_BIG: Windows.Win32.Foundation.HRESULT = -1073425658
SL_REMAPPING_SP_PUB_TS_MAX_REARM_REACHED: Windows.Win32.Foundation.HRESULT = -1073425657
SL_REMAPPING_SP_PUB_TS_DATA_SIZE_TOO_BIG: Windows.Win32.Foundation.HRESULT = -1073425656
SL_REMAPPING_SP_PUB_TS_INVALID_HW_BINDING: Windows.Win32.Foundation.HRESULT = -1073425655
SL_REMAPPING_SP_PUB_TIMER_ALREADY_EXISTS: Windows.Win32.Foundation.HRESULT = -1073425654
SL_REMAPPING_SP_PUB_TIMER_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073425653
SL_REMAPPING_SP_PUB_TIMER_EXPIRED: Windows.Win32.Foundation.HRESULT = -1073425652
SL_REMAPPING_SP_PUB_TIMER_NAME_SIZE_TOO_BIG: Windows.Win32.Foundation.HRESULT = -1073425651
SL_REMAPPING_SP_PUB_TS_FULL: Windows.Win32.Foundation.HRESULT = -1073425650
SL_REMAPPING_SP_PUB_TRUSTED_TIME_OK: Windows.Win32.Foundation.HRESULT = 1074057999
SL_REMAPPING_SP_PUB_TS_ENTRY_READ_ONLY: Windows.Win32.Foundation.HRESULT = -1073425648
SL_REMAPPING_SP_PUB_TIMER_READ_ONLY: Windows.Win32.Foundation.HRESULT = -1073425647
SL_REMAPPING_SP_PUB_TS_ATTRIBUTE_READ_ONLY: Windows.Win32.Foundation.HRESULT = -1073425646
SL_REMAPPING_SP_PUB_TS_ATTRIBUTE_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073425645
SL_REMAPPING_SP_PUB_TS_ACCESS_DENIED: Windows.Win32.Foundation.HRESULT = -1073425644
SL_REMAPPING_SP_PUB_TS_NAMESPACE_NOT_FOUND: Windows.Win32.Foundation.HRESULT = -1073425643
SL_REMAPPING_SP_PUB_TS_NAMESPACE_IN_USE: Windows.Win32.Foundation.HRESULT = -1073425642
SL_REMAPPING_SP_PUB_TS_TAMPERED_BREADCRUMB_LOAD_INVALID: Windows.Win32.Foundation.HRESULT = -1073425641
SL_REMAPPING_SP_PUB_TS_TAMPERED_BREADCRUMB_GENERATION: Windows.Win32.Foundation.HRESULT = -1073425640
SL_REMAPPING_SP_PUB_TS_TAMPERED_INVALID_DATA: Windows.Win32.Foundation.HRESULT = -1073425639
SL_REMAPPING_SP_PUB_TS_TAMPERED_NO_DATA: Windows.Win32.Foundation.HRESULT = -1073425638
SL_REMAPPING_SP_PUB_TS_TAMPERED_DATA_BREADCRUMB_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073425637
SL_REMAPPING_SP_PUB_TS_TAMPERED_DATA_VERSION_MISMATCH: Windows.Win32.Foundation.HRESULT = -1073425636
SL_REMAPPING_SP_PUB_TAMPER_MODULE_AUTHENTICATION: Windows.Win32.Foundation.HRESULT = -1073425407
SL_REMAPPING_SP_PUB_TAMPER_SECURITY_PROCESSOR_PATCHED: Windows.Win32.Foundation.HRESULT = -1073425406
SL_REMAPPING_SP_PUB_KM_CACHE_TAMPER: Windows.Win32.Foundation.HRESULT = -1073425151
SL_REMAPPING_SP_PUB_KM_CACHE_TAMPER_RESTORE_FAILED: Windows.Win32.Foundation.HRESULT = -1073425150
SL_REMAPPING_SP_PUB_KM_CACHE_IDENTICAL: Windows.Win32.Foundation.HRESULT = 1074058753
SL_REMAPPING_SP_PUB_KM_CACHE_POLICY_CHANGED: Windows.Win32.Foundation.HRESULT = 1074058754
SL_REMAPPING_SP_STATUS_PUSHKEY_CONFLICT: Windows.Win32.Foundation.HRESULT = -1073424639
SL_REMAPPING_SP_PUB_PROXY_SOFT_TAMPER: Windows.Win32.Foundation.HRESULT = -1073424638
SL_REMAPPING_SP_PUB_API_INVALID_LICENSE: Windows.Win32.Foundation.HRESULT = -1073426432
SL_REMAPPING_SP_PUB_API_INVALID_ALGORITHM_TYPE: Windows.Win32.Foundation.HRESULT = -1073426423
SL_REMAPPING_SP_PUB_API_TOO_MANY_LOADED_ENVIRONMENTS: Windows.Win32.Foundation.HRESULT = -1073426420
SL_REMAPPING_SP_PUB_API_BAD_GET_INFO_QUERY: Windows.Win32.Foundation.HRESULT = -1073426414
SL_REMAPPING_SP_PUB_API_INVALID_HANDLE: Windows.Win32.Foundation.HRESULT = -1073426388
SL_REMAPPING_SP_PUB_API_INVALID_KEY_LENGTH: Windows.Win32.Foundation.HRESULT = -1073426347
SL_REMAPPING_SP_PUB_API_NO_AES_PROVIDER: Windows.Win32.Foundation.HRESULT = -1073426317
SL_REMAPPING_SP_PUB_API_HANDLE_NOT_COMMITED: Windows.Win32.Foundation.HRESULT = -1073426303
SL_REMAPPING_MDOLLAR_PRODUCT_KEY_OUT_OF_RANGE: Windows.Win32.Foundation.HRESULT = -2143313819
SL_REMAPPING_MDOLLAR_INVALID_BINDING: Windows.Win32.Foundation.HRESULT = -2143313818
SL_REMAPPING_MDOLLAR_PRODUCT_KEY_BLOCKED: Windows.Win32.Foundation.HRESULT = -2143313817
SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -2143313816
SL_REMAPPING_MDOLLAR_UNSUPPORTED_PRODUCT_KEY: Windows.Win32.Foundation.HRESULT = -2143313812
SL_REMAPPING_MDOLLAR_MAXIMUM_UNLOCK_EXCEEDED: Windows.Win32.Foundation.HRESULT = -2143313807
SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_DATA_ID: Windows.Win32.Foundation.HRESULT = -2143313805
SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_DATA: Windows.Win32.Foundation.HRESULT = -2143313804
SL_REMAPPING_MDOLLAR_INVALID_ACTCONFIG_ID: Windows.Win32.Foundation.HRESULT = -2143313802
SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_KEY_LENGTH: Windows.Win32.Foundation.HRESULT = -2143313801
SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_KEY_FORMAT: Windows.Win32.Foundation.HRESULT = -2143313800
SL_REMAPPING_MDOLLAR_INVALID_BINDING_URI: Windows.Win32.Foundation.HRESULT = -2143313798
SL_REMAPPING_MDOLLAR_INVALID_ARGUMENT: Windows.Win32.Foundation.HRESULT = -2143313795
SL_REMAPPING_MDOLLAR_DMAK_LIMIT_EXCEEDED: Windows.Win32.Foundation.HRESULT = -2143313793
SL_REMAPPING_MDOLLAR_DMAK_EXTENSION_LIMIT_EXCEEDED: Windows.Win32.Foundation.HRESULT = -2143313792
SL_REMAPPING_MDOLLAR_OEM_SLP_COA0: Windows.Win32.Foundation.HRESULT = -2143313789
SL_REMAPPING_MDOLLAR_CIDIID_INVALID_VERSION: Windows.Win32.Foundation.HRESULT = -2143313779
SL_REMAPPING_MDOLLAR_CIDIID_INVALID_DATA: Windows.Win32.Foundation.HRESULT = -2143313778
SL_REMAPPING_MDOLLAR_CIDIID_INVALID_DATA_LENGTH: Windows.Win32.Foundation.HRESULT = -2143313777
SL_REMAPPING_MDOLLAR_CIDIID_INVALID_CHECK_DIGITS: Windows.Win32.Foundation.HRESULT = -2143313776
SL_REMAPPING_MDOLLAR_TIMEBASED_ACTIVATION_BEFORE_START_DATE: Windows.Win32.Foundation.HRESULT = -2143313769
SL_REMAPPING_MDOLLAR_TIMEBASED_ACTIVATION_AFTER_END_DATE: Windows.Win32.Foundation.HRESULT = -2143313768
SL_REMAPPING_MDOLLAR_TIMEBASED_ACTIVATION_NOT_AVAILABLE: Windows.Win32.Foundation.HRESULT = -2143313767
SL_REMAPPING_MDOLLAR_TIMEBASED_PRODUCT_KEY_NOT_CONFIGURED: Windows.Win32.Foundation.HRESULT = -2143313766
SL_REMAPPING_MDOLLAR_NO_RULES_TO_ACTIVATE: Windows.Win32.Foundation.HRESULT = -2143313720
SL_REMAPPING_MDOLLAR_PRODUCT_KEY_BLOCKED_IPLOCATION: Windows.Win32.Foundation.HRESULT = -2143313717
SL_REMAPPING_MDOLLAR_DIGITALMARKER_INVALID_BINDING: Windows.Win32.Foundation.HRESULT = -2143313709
SL_REMAPPING_MDOLLAR_DIGITALMARKER_BINDING_NOT_CONFIGURED: Windows.Win32.Foundation.HRESULT = -2143313708
SL_REMAPPING_MDOLLAR_ROT_OVERRIDE_LIMIT_REACHED: Windows.Win32.Foundation.HRESULT = -2143313707
SL_REMAPPING_MDOLLAR_DMAK_OVERRIDE_LIMIT_REACHED: Windows.Win32.Foundation.HRESULT = -2143313706
SL_REMAPPING_MDOLLAR_FREE_OFFER_EXPIRED: Windows.Win32.Foundation.HRESULT = -2143312896
SL_REMAPPING_MDOLLAR_OSR_DONOR_HWID_NO_ENTITLEMENT: Windows.Win32.Foundation.HRESULT = -2143310920
SL_REMAPPING_MDOLLAR_OSR_GENERIC_ERROR: Windows.Win32.Foundation.HRESULT = -2143310919
SL_REMAPPING_MDOLLAR_OSR_NO_ASSOCIATION: Windows.Win32.Foundation.HRESULT = -2143310918
SL_REMAPPING_MDOLLAR_OSR_NOT_ADMIN: Windows.Win32.Foundation.HRESULT = -2143310917
SL_REMAPPING_MDOLLAR_OSR_USER_THROTTLED: Windows.Win32.Foundation.HRESULT = -2143310916
SL_REMAPPING_MDOLLAR_OSR_LICENSE_THROTTLED: Windows.Win32.Foundation.HRESULT = -2143310915
SL_REMAPPING_MDOLLAR_OSR_DEVICE_THROTTLED: Windows.Win32.Foundation.HRESULT = -2143310914
SL_REMAPPING_MDOLLAR_OSR_GP_DISABLED: Windows.Win32.Foundation.HRESULT = -2143310913
SL_REMAPPING_MDOLLAR_OSR_HARDWARE_BLOCKED: Windows.Win32.Foundation.HRESULT = -2143310912
SL_REMAPPING_MDOLLAR_OSR_USER_BLOCKED: Windows.Win32.Foundation.HRESULT = -2143310911
SL_REMAPPING_MDOLLAR_OSR_LICENSE_BLOCKED: Windows.Win32.Foundation.HRESULT = -2143310910
SL_REMAPPING_MDOLLAR_OSR_DEVICE_BLOCKED: Windows.Win32.Foundation.HRESULT = -2143310909
WINDOWS_SLID: Guid = Guid('55c92734-d682-4d71-98-3e-d6-ec-3f-16-05-9f')
WDIGEST_SP_NAME_A: String = 'WDigest'
WDIGEST_SP_NAME_W: String = 'WDigest'
WDIGEST_SP_NAME: String = 'WDigest'
@winfunctype('SECUR32.dll')
def LsaRegisterLogonProcess(LogonProcessName: POINTER(Windows.Win32.System.Kernel.STRING_head), LsaHandle: POINTER(Windows.Win32.Foundation.HANDLE), SecurityMode: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaLogonUser(LsaHandle: Windows.Win32.Foundation.HANDLE, OriginName: POINTER(Windows.Win32.System.Kernel.STRING_head), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, AuthenticationPackage: UInt32, AuthenticationInformation: c_void_p, AuthenticationInformationLength: UInt32, LocalGroups: POINTER(Windows.Win32.Security.TOKEN_GROUPS_head), SourceContext: POINTER(Windows.Win32.Security.TOKEN_SOURCE_head), ProfileBuffer: POINTER(c_void_p), ProfileBufferLength: POINTER(UInt32), LogonId: POINTER(Windows.Win32.Foundation.LUID_head), Token: POINTER(Windows.Win32.Foundation.HANDLE), Quotas: POINTER(Windows.Win32.Security.QUOTA_LIMITS_head), SubStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaLookupAuthenticationPackage(LsaHandle: Windows.Win32.Foundation.HANDLE, PackageName: POINTER(Windows.Win32.System.Kernel.STRING_head), AuthenticationPackage: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaFreeReturnBuffer(Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaCallAuthenticationPackage(LsaHandle: Windows.Win32.Foundation.HANDLE, AuthenticationPackage: UInt32, ProtocolSubmitBuffer: c_void_p, SubmitBufferLength: UInt32, ProtocolReturnBuffer: POINTER(c_void_p), ReturnBufferLength: POINTER(UInt32), ProtocolStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaDeregisterLogonProcess(LsaHandle: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaConnectUntrusted(LsaHandle: POINTER(Windows.Win32.Foundation.HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaFreeMemory(Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaClose(ObjectHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaEnumerateLogonSessions(LogonSessionCount: POINTER(UInt32), LogonSessionList: POINTER(POINTER(Windows.Win32.Foundation.LUID_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaGetLogonSessionData(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), ppLogonSessionData: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_SESSION_DATA_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaOpenPolicy(SystemName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ObjectAttributes: POINTER(Windows.Win32.System.WindowsProgramming.OBJECT_ATTRIBUTES_head), DesiredAccess: UInt32, PolicyHandle: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaSetCAPs(CAPDNs: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), CAPDNCount: UInt32, Flags: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaGetAppliedCAPIDs(SystemName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), CAPIDs: POINTER(POINTER(Windows.Win32.Foundation.PSID)), CAPIDCount: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaQueryCAPs(CAPIDs: POINTER(Windows.Win32.Foundation.PSID), CAPIDCount: UInt32, CAPs: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.CENTRAL_ACCESS_POLICY_head)), CAPCount: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaQueryInformationPolicy(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, InformationClass: Windows.Win32.Security.Authentication.Identity.POLICY_INFORMATION_CLASS, Buffer: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaSetInformationPolicy(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, InformationClass: Windows.Win32.Security.Authentication.Identity.POLICY_INFORMATION_CLASS, Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaQueryDomainInformationPolicy(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, InformationClass: Windows.Win32.Security.Authentication.Identity.POLICY_DOMAIN_INFORMATION_CLASS, Buffer: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaSetDomainInformationPolicy(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, InformationClass: Windows.Win32.Security.Authentication.Identity.POLICY_DOMAIN_INFORMATION_CLASS, Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaRegisterPolicyChangeNotification(InformationClass: Windows.Win32.Security.Authentication.Identity.POLICY_NOTIFICATION_INFORMATION_CLASS, NotificationEventHandle: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def LsaUnregisterPolicyChangeNotification(InformationClass: Windows.Win32.Security.Authentication.Identity.POLICY_NOTIFICATION_INFORMATION_CLASS, NotificationEventHandle: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaEnumerateTrustedDomains(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, EnumerationContext: POINTER(UInt32), Buffer: POINTER(c_void_p), PreferedMaximumLength: UInt32, CountReturned: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaLookupNames(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, Count: UInt32, Names: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ReferencedDomains: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_REFERENCED_DOMAIN_LIST_head)), Sids: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TRANSLATED_SID_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaLookupNames2(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, Flags: UInt32, Count: UInt32, Names: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ReferencedDomains: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_REFERENCED_DOMAIN_LIST_head)), Sids: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TRANSLATED_SID2_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaLookupSids(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, Count: UInt32, Sids: POINTER(Windows.Win32.Foundation.PSID), ReferencedDomains: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_REFERENCED_DOMAIN_LIST_head)), Names: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TRANSLATED_NAME_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaLookupSids2(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, LookupOptions: UInt32, Count: UInt32, Sids: POINTER(Windows.Win32.Foundation.PSID), ReferencedDomains: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_REFERENCED_DOMAIN_LIST_head)), Names: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TRANSLATED_NAME_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaEnumerateAccountsWithUserRight(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, UserRight: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Buffer: POINTER(c_void_p), CountReturned: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaEnumerateAccountRights(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, AccountSid: Windows.Win32.Foundation.PSID, UserRights: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), CountOfRights: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaAddAccountRights(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, AccountSid: Windows.Win32.Foundation.PSID, UserRights: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), CountOfRights: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaRemoveAccountRights(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, AccountSid: Windows.Win32.Foundation.PSID, AllRights: Windows.Win32.Foundation.BOOLEAN, UserRights: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), CountOfRights: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaOpenTrustedDomainByName(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), DesiredAccess: UInt32, TrustedDomainHandle: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaQueryTrustedDomainInfo(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainSid: Windows.Win32.Foundation.PSID, InformationClass: Windows.Win32.Security.Authentication.Identity.TRUSTED_INFORMATION_CLASS, Buffer: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaSetTrustedDomainInformation(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainSid: Windows.Win32.Foundation.PSID, InformationClass: Windows.Win32.Security.Authentication.Identity.TRUSTED_INFORMATION_CLASS, Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaDeleteTrustedDomain(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainSid: Windows.Win32.Foundation.PSID) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaQueryTrustedDomainInfoByName(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), InformationClass: Windows.Win32.Security.Authentication.Identity.TRUSTED_INFORMATION_CLASS, Buffer: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaSetTrustedDomainInfoByName(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), InformationClass: Windows.Win32.Security.Authentication.Identity.TRUSTED_INFORMATION_CLASS, Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaEnumerateTrustedDomainsEx(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, EnumerationContext: POINTER(UInt32), Buffer: POINTER(c_void_p), PreferedMaximumLength: UInt32, CountReturned: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaCreateTrustedDomainEx(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainInformation: POINTER(Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_INFORMATION_EX_head), AuthenticationInformation: POINTER(Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_AUTH_INFORMATION_head), DesiredAccess: UInt32, TrustedDomainHandle: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaQueryForestTrustInformation(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ForestTrustInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_INFORMATION_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaSetForestTrustInformation(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, TrustedDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ForestTrustInfo: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_INFORMATION_head), CheckOnly: Windows.Win32.Foundation.BOOLEAN, CollisionInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_COLLISION_INFORMATION_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaStorePrivateData(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, KeyName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), PrivateData: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaRetrievePrivateData(PolicyHandle: Windows.Win32.Security.Authentication.Identity.LSA_HANDLE, KeyName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), PrivateData: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def LsaNtStatusToWinError(Status: Windows.Win32.Foundation.NTSTATUS) -> UInt32: ...
@winfunctype('ADVAPI32.dll')
def SystemFunction036(RandomBuffer: c_void_p, RandomBufferLength: UInt32) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def SystemFunction040(Memory: c_void_p, MemorySize: UInt32, OptionFlags: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def SystemFunction041(Memory: c_void_p, MemorySize: UInt32, OptionFlags: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('ADVAPI32.dll')
def AuditSetSystemPolicy(pAuditPolicy: POINTER(Windows.Win32.Security.Authentication.Identity.AUDIT_POLICY_INFORMATION_head), dwPolicyCount: UInt32) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditSetPerUserPolicy(pSid: Windows.Win32.Foundation.PSID, pAuditPolicy: POINTER(Windows.Win32.Security.Authentication.Identity.AUDIT_POLICY_INFORMATION_head), dwPolicyCount: UInt32) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditQuerySystemPolicy(pSubCategoryGuids: POINTER(Guid), dwPolicyCount: UInt32, ppAuditPolicy: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.AUDIT_POLICY_INFORMATION_head))) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditQueryPerUserPolicy(pSid: Windows.Win32.Foundation.PSID, pSubCategoryGuids: POINTER(Guid), dwPolicyCount: UInt32, ppAuditPolicy: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.AUDIT_POLICY_INFORMATION_head))) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditEnumeratePerUserPolicy(ppAuditSidArray: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.POLICY_AUDIT_SID_ARRAY_head))) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditComputeEffectivePolicyBySid(pSid: Windows.Win32.Foundation.PSID, pSubCategoryGuids: POINTER(Guid), dwPolicyCount: UInt32, ppAuditPolicy: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.AUDIT_POLICY_INFORMATION_head))) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditComputeEffectivePolicyByToken(hTokenHandle: Windows.Win32.Foundation.HANDLE, pSubCategoryGuids: POINTER(Guid), dwPolicyCount: UInt32, ppAuditPolicy: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.AUDIT_POLICY_INFORMATION_head))) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditEnumerateCategories(ppAuditCategoriesArray: POINTER(POINTER(Guid)), pdwCountReturned: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditEnumerateSubCategories(pAuditCategoryGuid: POINTER(Guid), bRetrieveAllSubCategories: Windows.Win32.Foundation.BOOLEAN, ppAuditSubCategoriesArray: POINTER(POINTER(Guid)), pdwCountReturned: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditLookupCategoryNameW(pAuditCategoryGuid: POINTER(Guid), ppszCategoryName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditLookupCategoryNameA(pAuditCategoryGuid: POINTER(Guid), ppszCategoryName: POINTER(Windows.Win32.Foundation.PSTR)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditLookupSubCategoryNameW(pAuditSubCategoryGuid: POINTER(Guid), ppszSubCategoryName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditLookupSubCategoryNameA(pAuditSubCategoryGuid: POINTER(Guid), ppszSubCategoryName: POINTER(Windows.Win32.Foundation.PSTR)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditLookupCategoryIdFromCategoryGuid(pAuditCategoryGuid: POINTER(Guid), pAuditCategoryId: POINTER(Windows.Win32.Security.Authentication.Identity.POLICY_AUDIT_EVENT_TYPE)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditLookupCategoryGuidFromCategoryId(AuditCategoryId: Windows.Win32.Security.Authentication.Identity.POLICY_AUDIT_EVENT_TYPE, pAuditCategoryGuid: POINTER(Guid)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditSetSecurity(SecurityInformation: UInt32, pSecurityDescriptor: Windows.Win32.Security.PSECURITY_DESCRIPTOR) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditQuerySecurity(SecurityInformation: UInt32, ppSecurityDescriptor: POINTER(Windows.Win32.Security.PSECURITY_DESCRIPTOR)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditSetGlobalSaclW(ObjectTypeName: Windows.Win32.Foundation.PWSTR, Acl: POINTER(Windows.Win32.Security.ACL_head)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditSetGlobalSaclA(ObjectTypeName: Windows.Win32.Foundation.PSTR, Acl: POINTER(Windows.Win32.Security.ACL_head)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditQueryGlobalSaclW(ObjectTypeName: Windows.Win32.Foundation.PWSTR, Acl: POINTER(POINTER(Windows.Win32.Security.ACL_head))) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditQueryGlobalSaclA(ObjectTypeName: Windows.Win32.Foundation.PSTR, Acl: POINTER(POINTER(Windows.Win32.Security.ACL_head))) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('ADVAPI32.dll')
def AuditFree(Buffer: c_void_p) -> Void: ...
@winfunctype('SECUR32.dll')
def AcquireCredentialsHandleW(pszPrincipal: Windows.Win32.Foundation.PWSTR, pszPackage: Windows.Win32.Foundation.PWSTR, fCredentialUse: Windows.Win32.Security.Authentication.Identity.SECPKG_CRED, pvLogonId: c_void_p, pAuthData: c_void_p, pGetKeyFn: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, pvGetKeyArgument: c_void_p, phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def AcquireCredentialsHandleA(pszPrincipal: Windows.Win32.Foundation.PSTR, pszPackage: Windows.Win32.Foundation.PSTR, fCredentialUse: Windows.Win32.Security.Authentication.Identity.SECPKG_CRED, pvLogonId: c_void_p, pAuthData: c_void_p, pGetKeyFn: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, pvGetKeyArgument: c_void_p, phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def FreeCredentialsHandle(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def AddCredentialsW(hCredentials: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pszPrincipal: Windows.Win32.Foundation.PWSTR, pszPackage: Windows.Win32.Foundation.PWSTR, fCredentialUse: UInt32, pAuthData: c_void_p, pGetKeyFn: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, pvGetKeyArgument: c_void_p, ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def AddCredentialsA(hCredentials: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pszPrincipal: Windows.Win32.Foundation.PSTR, pszPackage: Windows.Win32.Foundation.PSTR, fCredentialUse: UInt32, pAuthData: c_void_p, pGetKeyFn: Windows.Win32.Security.Authentication.Identity.SEC_GET_KEY_FN, pvGetKeyArgument: c_void_p, ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def ChangeAccountPasswordW(pszPackageName: POINTER(UInt16), pszDomainName: POINTER(UInt16), pszAccountName: POINTER(UInt16), pszOldPassword: POINTER(UInt16), pszNewPassword: POINTER(UInt16), bImpersonating: Windows.Win32.Foundation.BOOLEAN, dwReserved: UInt32, pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def ChangeAccountPasswordA(pszPackageName: POINTER(SByte), pszDomainName: POINTER(SByte), pszAccountName: POINTER(SByte), pszOldPassword: POINTER(SByte), pszNewPassword: POINTER(SByte), bImpersonating: Windows.Win32.Foundation.BOOLEAN, dwReserved: UInt32, pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def InitializeSecurityContextW(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pszTargetName: POINTER(UInt16), fContextReq: Windows.Win32.Security.Authentication.Identity.ISC_REQ_FLAGS, Reserved1: UInt32, TargetDataRep: UInt32, pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), Reserved2: UInt32, phNewContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), pfContextAttr: POINTER(UInt32), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def InitializeSecurityContextA(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pszTargetName: POINTER(SByte), fContextReq: Windows.Win32.Security.Authentication.Identity.ISC_REQ_FLAGS, Reserved1: UInt32, TargetDataRep: UInt32, pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), Reserved2: UInt32, phNewContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), pfContextAttr: POINTER(UInt32), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def AcceptSecurityContext(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), fContextReq: Windows.Win32.Security.Authentication.Identity.ASC_REQ_FLAGS, TargetDataRep: UInt32, phNewContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), pfContextAttr: POINTER(UInt32), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def CompleteAuthToken(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pToken: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def ImpersonateSecurityContext(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def RevertSecurityContext(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def QuerySecurityContextToken(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), Token: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def DeleteSecurityContext(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def ApplyControlToken(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def QueryContextAttributesW(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: Windows.Win32.Security.Authentication.Identity.SECPKG_ATTR, pBuffer: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SspiCli.dll')
def QueryContextAttributesExW(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: Windows.Win32.Security.Authentication.Identity.SECPKG_ATTR, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def QueryContextAttributesA(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: Windows.Win32.Security.Authentication.Identity.SECPKG_ATTR, pBuffer: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SspiCli.dll')
def QueryContextAttributesExA(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: Windows.Win32.Security.Authentication.Identity.SECPKG_ATTR, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SetContextAttributesW(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: Windows.Win32.Security.Authentication.Identity.SECPKG_ATTR, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SetContextAttributesA(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: Windows.Win32.Security.Authentication.Identity.SECPKG_ATTR, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def QueryCredentialsAttributesW(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: UInt32, pBuffer: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SspiCli.dll')
def QueryCredentialsAttributesExW(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: UInt32, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def QueryCredentialsAttributesA(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: UInt32, pBuffer: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SspiCli.dll')
def QueryCredentialsAttributesExA(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: UInt32, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SetCredentialsAttributesW(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: UInt32, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SetCredentialsAttributesA(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), ulAttribute: UInt32, pBuffer: c_void_p, cbBuffer: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def FreeContextBuffer(pvContextBuffer: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def MakeSignature(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), fQOP: UInt32, pMessage: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def VerifySignature(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pMessage: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32, pfQOP: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def EncryptMessage(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), fQOP: UInt32, pMessage: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def DecryptMessage(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pMessage: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32, pfQOP: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def EnumerateSecurityPackagesW(pcPackages: POINTER(UInt32), ppPackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def EnumerateSecurityPackagesA(pcPackages: POINTER(UInt32), ppPackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def QuerySecurityPackageInfoW(pszPackageName: Windows.Win32.Foundation.PWSTR, ppPackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def QuerySecurityPackageInfoA(pszPackageName: Windows.Win32.Foundation.PSTR, ppPackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def ExportSecurityContext(phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), fFlags: Windows.Win32.Security.Authentication.Identity.EXPORT_SECURITY_CONTEXT_FLAGS, pPackedContext: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), pToken: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def ImportSecurityContextW(pszPackage: Windows.Win32.Foundation.PWSTR, pPackedContext: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), Token: c_void_p, phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def ImportSecurityContextA(pszPackage: Windows.Win32.Foundation.PSTR, pPackedContext: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), Token: c_void_p, phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def InitSecurityInterfaceA() -> POINTER(Windows.Win32.Security.Authentication.Identity.SecurityFunctionTableA_head): ...
@winfunctype('SECUR32.dll')
def InitSecurityInterfaceW() -> POINTER(Windows.Win32.Security.Authentication.Identity.SecurityFunctionTableW_head): ...
@winfunctype('SECUR32.dll')
def SaslEnumerateProfilesA(ProfileList: POINTER(Windows.Win32.Foundation.PSTR), ProfileCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslEnumerateProfilesW(ProfileList: POINTER(Windows.Win32.Foundation.PWSTR), ProfileCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslGetProfilePackageA(ProfileName: Windows.Win32.Foundation.PSTR, PackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslGetProfilePackageW(ProfileName: Windows.Win32.Foundation.PWSTR, PackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslIdentifyPackageA(pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), PackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslIdentifyPackageW(pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), PackageInfo: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslInitializeSecurityContextW(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pszTargetName: Windows.Win32.Foundation.PWSTR, fContextReq: Windows.Win32.Security.Authentication.Identity.ISC_REQ_FLAGS, Reserved1: UInt32, TargetDataRep: UInt32, pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), Reserved2: UInt32, phNewContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), pfContextAttr: POINTER(UInt32), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslInitializeSecurityContextA(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pszTargetName: Windows.Win32.Foundation.PSTR, fContextReq: Windows.Win32.Security.Authentication.Identity.ISC_REQ_FLAGS, Reserved1: UInt32, TargetDataRep: UInt32, pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), Reserved2: UInt32, phNewContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), pfContextAttr: POINTER(UInt32), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslAcceptSecurityContext(phCredential: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), phContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pInput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), fContextReq: Windows.Win32.Security.Authentication.Identity.ASC_REQ_FLAGS, TargetDataRep: UInt32, phNewContext: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), pfContextAttr: POINTER(UInt32), ptsExpiry: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslSetContextOption(ContextHandle: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), Option: UInt32, Value: c_void_p, Size: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SaslGetContextOption(ContextHandle: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), Option: UInt32, Value: c_void_p, Size: UInt32, Needed: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('credui.dll')
def SspiPromptForCredentialsW(pszTargetName: Windows.Win32.Foundation.PWSTR, pUiInfo: c_void_p, dwAuthError: UInt32, pszPackage: Windows.Win32.Foundation.PWSTR, pInputAuthIdentity: c_void_p, ppAuthIdentity: POINTER(c_void_p), pfSave: POINTER(Int32), dwFlags: UInt32) -> UInt32: ...
@winfunctype('credui.dll')
def SspiPromptForCredentialsA(pszTargetName: Windows.Win32.Foundation.PSTR, pUiInfo: c_void_p, dwAuthError: UInt32, pszPackage: Windows.Win32.Foundation.PSTR, pInputAuthIdentity: c_void_p, ppAuthIdentity: POINTER(c_void_p), pfSave: POINTER(Int32), dwFlags: UInt32) -> UInt32: ...
@winfunctype('SECUR32.dll')
def SspiPrepareForCredRead(AuthIdentity: c_void_p, pszTargetName: Windows.Win32.Foundation.PWSTR, pCredmanCredentialType: POINTER(UInt32), ppszCredmanTargetName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiPrepareForCredWrite(AuthIdentity: c_void_p, pszTargetName: Windows.Win32.Foundation.PWSTR, pCredmanCredentialType: POINTER(UInt32), ppszCredmanTargetName: POINTER(Windows.Win32.Foundation.PWSTR), ppszCredmanUserName: POINTER(Windows.Win32.Foundation.PWSTR), ppCredentialBlob: POINTER(c_char_p_no), pCredentialBlobSize: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiEncryptAuthIdentity(AuthData: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SspiCli.dll')
def SspiEncryptAuthIdentityEx(Options: UInt32, AuthData: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiDecryptAuthIdentity(EncryptedAuthData: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SspiCli.dll')
def SspiDecryptAuthIdentityEx(Options: UInt32, EncryptedAuthData: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiIsAuthIdentityEncrypted(EncryptedAuthData: c_void_p) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SECUR32.dll')
def SspiEncodeAuthIdentityAsStrings(pAuthIdentity: c_void_p, ppszUserName: POINTER(Windows.Win32.Foundation.PWSTR), ppszDomainName: POINTER(Windows.Win32.Foundation.PWSTR), ppszPackedCredentialsString: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiValidateAuthIdentity(AuthData: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiCopyAuthIdentity(AuthData: c_void_p, AuthDataCopy: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiFreeAuthIdentity(AuthData: c_void_p) -> Void: ...
@winfunctype('SECUR32.dll')
def SspiZeroAuthIdentity(AuthData: c_void_p) -> Void: ...
@winfunctype('SECUR32.dll')
def SspiLocalFree(DataBuffer: c_void_p) -> Void: ...
@winfunctype('SECUR32.dll')
def SspiEncodeStringsAsAuthIdentity(pszUserName: Windows.Win32.Foundation.PWSTR, pszDomainName: Windows.Win32.Foundation.PWSTR, pszPackedCredentialsString: Windows.Win32.Foundation.PWSTR, ppAuthIdentity: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiCompareAuthIdentities(AuthIdentity1: c_void_p, AuthIdentity2: c_void_p, SameSuppliedUser: POINTER(Windows.Win32.Foundation.BOOLEAN), SameSuppliedIdentity: POINTER(Windows.Win32.Foundation.BOOLEAN)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiMarshalAuthIdentity(AuthIdentity: c_void_p, AuthIdentityLength: POINTER(UInt32), AuthIdentityByteArray: POINTER(POINTER(SByte))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiUnmarshalAuthIdentity(AuthIdentityLength: UInt32, AuthIdentityByteArray: Windows.Win32.Foundation.PSTR, ppAuthIdentity: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('credui.dll')
def SspiIsPromptingNeeded(ErrorOrNtStatus: UInt32) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SECUR32.dll')
def SspiGetTargetHostName(pszTargetName: Windows.Win32.Foundation.PWSTR, pszHostName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def SspiExcludePackage(AuthIdentity: c_void_p, pszPackageName: Windows.Win32.Foundation.PWSTR, ppNewAuthIdentity: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def AddSecurityPackageA(pszPackageName: Windows.Win32.Foundation.PSTR, pOptions: POINTER(Windows.Win32.Security.Authentication.Identity.SECURITY_PACKAGE_OPTIONS_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def AddSecurityPackageW(pszPackageName: Windows.Win32.Foundation.PWSTR, pOptions: POINTER(Windows.Win32.Security.Authentication.Identity.SECURITY_PACKAGE_OPTIONS_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def DeleteSecurityPackageA(pszPackageName: Windows.Win32.Foundation.PSTR) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def DeleteSecurityPackageW(pszPackageName: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def CredMarshalTargetInfo(InTargetInfo: POINTER(Windows.Win32.Security.Credentials.CREDENTIAL_TARGET_INFORMATIONW_head), Buffer: POINTER(POINTER(UInt16)), BufferSize: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SECUR32.dll')
def CredUnmarshalTargetInfo(Buffer: POINTER(UInt16), BufferSize: UInt32, RetTargetInfo: POINTER(POINTER(Windows.Win32.Security.Credentials.CREDENTIAL_TARGET_INFORMATIONW_head)), RetActualSize: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype('SCHANNEL.dll')
def SslEmptyCacheA(pszTargetName: Windows.Win32.Foundation.PSTR, dwFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SCHANNEL.dll')
def SslEmptyCacheW(pszTargetName: Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SCHANNEL.dll')
def SslGenerateRandomBits(pRandomData: c_char_p_no, cRandomData: Int32) -> Void: ...
@winfunctype('SCHANNEL.dll')
def SslCrackCertificate(pbCertificate: c_char_p_no, cbCertificate: UInt32, dwFlags: UInt32, ppCertificate: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.X509Certificate_head))) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype('SCHANNEL.dll')
def SslFreeCertificate(pCertificate: POINTER(Windows.Win32.Security.Authentication.Identity.X509Certificate_head)) -> Void: ...
@winfunctype('SCHANNEL.dll')
def SslGetMaximumKeySize(Reserved: UInt32) -> UInt32: ...
@winfunctype('SCHANNEL.dll')
def SslGetServerIdentity(ClientHello: c_char_p_no, ClientHelloSize: UInt32, ServerIdentity: POINTER(c_char_p_no), ServerIdentitySize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SCHANNEL.dll')
def SslGetExtensions(clientHello: c_char_p_no, clientHelloByteSize: UInt32, genericExtensions: POINTER(Windows.Win32.Security.Authentication.Identity.SCH_EXTENSION_DATA_head), genericExtensionsCount: Byte, bytesToRead: POINTER(UInt32), flags: Windows.Win32.Security.Authentication.Identity.SchGetExtensionsOptions) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingGenerateBinding(keyType: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_KEY_PARAMETERS_TYPE, targetURL: Windows.Win32.Foundation.PWSTR, bindingType: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_TYPE, tlsEKM: c_void_p, tlsEKMSize: UInt32, extensionFormat: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_EXTENSION_FORMAT, extensionData: c_void_p, tokenBinding: POINTER(c_void_p), tokenBindingSize: POINTER(UInt32), resultData: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_RESULT_DATA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingGenerateMessage(tokenBindings: POINTER(c_void_p), tokenBindingsSize: POINTER(UInt32), tokenBindingsCount: UInt32, tokenBindingMessage: POINTER(c_void_p), tokenBindingMessageSize: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingVerifyMessage(tokenBindingMessage: c_void_p, tokenBindingMessageSize: UInt32, keyType: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_KEY_PARAMETERS_TYPE, tlsEKM: c_void_p, tlsEKMSize: UInt32, resultList: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_RESULT_LIST_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingGetKeyTypesClient(keyTypes: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_KEY_TYPES_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingGetKeyTypesServer(keyTypes: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_KEY_TYPES_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingDeleteBinding(targetURL: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingDeleteAllBindings() -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingGenerateID(keyType: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_KEY_PARAMETERS_TYPE, publicKey: c_void_p, publicKeySize: UInt32, resultData: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_RESULT_DATA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingGenerateIDForUri(keyType: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_KEY_PARAMETERS_TYPE, targetUri: Windows.Win32.Foundation.PWSTR, resultData: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_RESULT_DATA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('TOKENBINDING.dll')
def TokenBindingGetHighestSupportedVersion(majorVersion: c_char_p_no, minorVersion: c_char_p_no) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SECUR32.dll')
def GetUserNameExA(NameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, lpNameBuffer: Windows.Win32.Foundation.PSTR, nSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SECUR32.dll')
def GetUserNameExW(NameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, lpNameBuffer: Windows.Win32.Foundation.PWSTR, nSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SECUR32.dll')
def GetComputerObjectNameA(NameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, lpNameBuffer: Windows.Win32.Foundation.PSTR, nSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SECUR32.dll')
def GetComputerObjectNameW(NameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, lpNameBuffer: Windows.Win32.Foundation.PWSTR, nSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SECUR32.dll')
def TranslateNameA(lpAccountName: Windows.Win32.Foundation.PSTR, AccountNameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, DesiredNameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, lpTranslatedName: Windows.Win32.Foundation.PSTR, nSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SECUR32.dll')
def TranslateNameW(lpAccountName: Windows.Win32.Foundation.PWSTR, AccountNameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, DesiredNameFormat: Windows.Win32.Security.Authentication.Identity.EXTENDED_NAME_FORMAT, lpTranslatedName: Windows.Win32.Foundation.PWSTR, nSize: POINTER(UInt32)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype('SLC.dll')
def SLOpen(phSLC: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLClose(hSLC: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLInstallProofOfPurchase(hSLC: c_void_p, pwszPKeyAlgorithm: Windows.Win32.Foundation.PWSTR, pwszPKeyString: Windows.Win32.Foundation.PWSTR, cbPKeySpecificData: UInt32, pbPKeySpecificData: c_char_p_no, pPkeyId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLUninstallProofOfPurchase(hSLC: c_void_p, pPKeyId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLInstallLicense(hSLC: c_void_p, cbLicenseBlob: UInt32, pbLicenseBlob: c_char_p_no, pLicenseFileId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLUninstallLicense(hSLC: c_void_p, pLicenseFileId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLConsumeRight(hSLC: c_void_p, pAppId: POINTER(Guid), pProductSkuId: POINTER(Guid), pwszRightName: Windows.Win32.Foundation.PWSTR, pvReserved: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetProductSkuInformation(hSLC: c_void_p, pProductSkuId: POINTER(Guid), pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetPKeyInformation(hSLC: c_void_p, pPKeyId: POINTER(Guid), pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetLicenseInformation(hSLC: c_void_p, pSLLicenseId: POINTER(Guid), pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetLicensingStatusInformation(hSLC: c_void_p, pAppID: POINTER(Guid), pProductSkuId: POINTER(Guid), pwszRightName: Windows.Win32.Foundation.PWSTR, pnStatusCount: POINTER(UInt32), ppLicensingStatus: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SL_LICENSING_STATUS_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetPolicyInformation(hSLC: c_void_p, pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetPolicyInformationDWORD(hSLC: c_void_p, pwszValueName: Windows.Win32.Foundation.PWSTR, pdwValue: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetServiceInformation(hSLC: c_void_p, pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetApplicationInformation(hSLC: c_void_p, pApplicationId: POINTER(Guid), pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('slcext.dll')
def SLActivateProduct(hSLC: c_void_p, pProductSkuId: POINTER(Guid), cbAppSpecificData: UInt32, pvAppSpecificData: c_void_p, pActivationInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SL_ACTIVATION_INFO_HEADER_head), pwszProxyServer: Windows.Win32.Foundation.PWSTR, wProxyPort: UInt16) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('slcext.dll')
def SLGetServerStatus(pwszServerURL: Windows.Win32.Foundation.PWSTR, pwszAcquisitionType: Windows.Win32.Foundation.PWSTR, pwszProxyServer: Windows.Win32.Foundation.PWSTR, wProxyPort: UInt16, phrStatus: POINTER(Windows.Win32.Foundation.HRESULT)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGenerateOfflineInstallationId(hSLC: c_void_p, pProductSkuId: POINTER(Guid), ppwszInstallationId: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGenerateOfflineInstallationIdEx(hSLC: c_void_p, pProductSkuId: POINTER(Guid), pActivationInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SL_ACTIVATION_INFO_HEADER_head), ppwszInstallationId: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLDepositOfflineConfirmationId(hSLC: c_void_p, pProductSkuId: POINTER(Guid), pwszInstallationId: Windows.Win32.Foundation.PWSTR, pwszConfirmationId: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLDepositOfflineConfirmationIdEx(hSLC: c_void_p, pProductSkuId: POINTER(Guid), pActivationInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SL_ACTIVATION_INFO_HEADER_head), pwszInstallationId: Windows.Win32.Foundation.PWSTR, pwszConfirmationId: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetPKeyId(hSLC: c_void_p, pwszPKeyAlgorithm: Windows.Win32.Foundation.PWSTR, pwszPKeyString: Windows.Win32.Foundation.PWSTR, cbPKeySpecificData: UInt32, pbPKeySpecificData: c_char_p_no, pPKeyId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetInstalledProductKeyIds(hSLC: c_void_p, pProductSkuId: POINTER(Guid), pnProductKeyIds: POINTER(UInt32), ppProductKeyIds: POINTER(POINTER(Guid))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLSetCurrentProductKey(hSLC: c_void_p, pProductSkuId: POINTER(Guid), pProductKeyId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetSLIDList(hSLC: c_void_p, eQueryIdType: Windows.Win32.Security.Authentication.Identity.SLIDTYPE, pQueryId: POINTER(Guid), eReturnIdType: Windows.Win32.Security.Authentication.Identity.SLIDTYPE, pnReturnIds: POINTER(UInt32), ppReturnIds: POINTER(POINTER(Guid))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetLicenseFileId(hSLC: c_void_p, cbLicenseBlob: UInt32, pbLicenseBlob: c_char_p_no, pLicenseFileId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetLicense(hSLC: c_void_p, pLicenseFileId: POINTER(Guid), pcbLicenseFile: POINTER(UInt32), ppbLicenseFile: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLFireEvent(hSLC: c_void_p, pwszEventId: Windows.Win32.Foundation.PWSTR, pApplicationId: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLRegisterEvent(hSLC: c_void_p, pwszEventId: Windows.Win32.Foundation.PWSTR, pApplicationId: POINTER(Guid), hEvent: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLUnregisterEvent(hSLC: c_void_p, pwszEventId: Windows.Win32.Foundation.PWSTR, pApplicationId: POINTER(Guid), hEvent: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetWindowsInformation(pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetWindowsInformationDWORD(pwszValueName: Windows.Win32.Foundation.PWSTR, pdwValue: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLWGA.dll')
def SLIsGenuineLocal(pAppId: POINTER(Guid), pGenuineState: POINTER(Windows.Win32.Security.Authentication.Identity.SL_GENUINE_STATE), pUIOptions: POINTER(Windows.Win32.Security.Authentication.Identity.SL_NONGENUINE_UI_OPTIONS_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('slcext.dll')
def SLAcquireGenuineTicket(ppTicketBlob: POINTER(c_void_p), pcbTicketBlob: POINTER(UInt32), pwszTemplateId: Windows.Win32.Foundation.PWSTR, pwszServerUrl: Windows.Win32.Foundation.PWSTR, pwszClientToken: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLSetGenuineInformation(pQueryId: POINTER(Guid), pwszValueName: Windows.Win32.Foundation.PWSTR, eDataType: Windows.Win32.Security.Authentication.Identity.SLDATATYPE, cbValue: UInt32, pbValue: c_char_p_no) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('slcext.dll')
def SLGetReferralInformation(hSLC: c_void_p, eReferralType: Windows.Win32.Security.Authentication.Identity.SLREFERRALTYPE, pSkuOrAppId: POINTER(Guid), pwszValueName: Windows.Win32.Foundation.PWSTR, ppwszValue: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SLC.dll')
def SLGetGenuineInformation(pQueryId: POINTER(Guid), pwszValueName: Windows.Win32.Foundation.PWSTR, peDataType: POINTER(Windows.Win32.Security.Authentication.Identity.SLDATATYPE), pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('api-ms-win-core-slapi-l1-1-0.dll')
def SLQueryLicenseValueFromApp(valueName: Windows.Win32.Foundation.PWSTR, valueType: POINTER(UInt32), dataBuffer: c_void_p, dataSize: UInt32, resultDataSize: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype('SAS.dll')
def SendSAS(AsUser: Windows.Win32.Foundation.BOOL) -> Void: ...
class CENTRAL_ACCESS_POLICY(Structure):
    CAPID: Windows.Win32.Foundation.PSID
    Name: Windows.Win32.Foundation.UNICODE_STRING
    Description: Windows.Win32.Foundation.UNICODE_STRING
    ChangeId: Windows.Win32.Foundation.UNICODE_STRING
    Flags: UInt32
    CAPECount: UInt32
    CAPEs: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.CENTRAL_ACCESS_POLICY_ENTRY_head))
class CENTRAL_ACCESS_POLICY_ENTRY(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
    Description: Windows.Win32.Foundation.UNICODE_STRING
    ChangeId: Windows.Win32.Foundation.UNICODE_STRING
    LengthAppliesTo: UInt32
    AppliesTo: c_char_p_no
    LengthSD: UInt32
    SD: Windows.Win32.Security.PSECURITY_DESCRIPTOR
    LengthStagedSD: UInt32
    StagedSD: Windows.Win32.Security.PSECURITY_DESCRIPTOR
    Flags: UInt32
@winfunctype_pointer
def CHANGE_PASSWORD_FN_A(param0: POINTER(SByte), param1: POINTER(SByte), param2: POINTER(SByte), param3: POINTER(SByte), param4: POINTER(SByte), param5: Windows.Win32.Foundation.BOOLEAN, param6: UInt32, param7: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def CHANGE_PASSWORD_FN_W(param0: POINTER(UInt16), param1: POINTER(UInt16), param2: POINTER(UInt16), param3: POINTER(UInt16), param4: POINTER(UInt16), param5: Windows.Win32.Foundation.BOOLEAN, param6: UInt32, param7: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
class CLEAR_BLOCK(Structure):
    data: Windows.Win32.Foundation.CHAR * 8
@winfunctype_pointer
def COMPLETE_AUTH_TOKEN_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.HRESULT: ...
CRED_FETCH = Int32
CRED_FETCH_CredFetchDefault: CRED_FETCH = 0
CRED_FETCH_CredFetchDPAPI: CRED_FETCH = 1
CRED_FETCH_CredFetchForced: CRED_FETCH = 2
@winfunctype_pointer
def CredFreeCredentialsFn(Count: UInt32, Credentials: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.ENCRYPTED_CREDENTIALW_head))) -> Void: ...
@winfunctype_pointer
def CredReadDomainCredentialsFn(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), CredFlags: UInt32, TargetInfo: POINTER(Windows.Win32.Security.Credentials.CREDENTIAL_TARGET_INFORMATIONW_head), Flags: UInt32, Count: POINTER(UInt32), Credential: POINTER(POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.ENCRYPTED_CREDENTIALW_head)))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def CredReadFn(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), CredFlags: UInt32, TargetName: Windows.Win32.Foundation.PWSTR, Type: UInt32, Flags: UInt32, Credential: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.ENCRYPTED_CREDENTIALW_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def CredWriteFn(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), CredFlags: UInt32, Credential: POINTER(Windows.Win32.Security.Authentication.Identity.ENCRYPTED_CREDENTIALW_head), Flags: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def CrediUnmarshalandDecodeStringFn(MarshaledString: Windows.Win32.Foundation.PWSTR, Blob: POINTER(c_char_p_no), BlobSize: POINTER(UInt32), IsFailureFatal: c_char_p_no) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def DECRYPT_MESSAGE_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param2: UInt32, param3: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def DELETE_SECURITY_CONTEXT_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
class DOMAIN_PASSWORD_INFORMATION(Structure):
    MinPasswordLength: UInt16
    PasswordHistoryLength: UInt16
    PasswordProperties: Windows.Win32.Security.Authentication.Identity.DOMAIN_PASSWORD_PROPERTIES
    MaxPasswordAge: Int64
    MinPasswordAge: Int64
DOMAIN_PASSWORD_PROPERTIES = UInt32
DOMAIN_PASSWORD_COMPLEX: DOMAIN_PASSWORD_PROPERTIES = 1
DOMAIN_PASSWORD_NO_ANON_CHANGE: DOMAIN_PASSWORD_PROPERTIES = 2
DOMAIN_PASSWORD_NO_CLEAR_CHANGE: DOMAIN_PASSWORD_PROPERTIES = 4
DOMAIN_LOCKOUT_ADMINS: DOMAIN_PASSWORD_PROPERTIES = 8
DOMAIN_PASSWORD_STORE_CLEARTEXT: DOMAIN_PASSWORD_PROPERTIES = 16
DOMAIN_REFUSE_PASSWORD_CHANGE: DOMAIN_PASSWORD_PROPERTIES = 32
class ENCRYPTED_CREDENTIALW(Structure):
    Cred: Windows.Win32.Security.Credentials.CREDENTIALW
    ClearCredentialBlobSize: UInt32
@winfunctype_pointer
def ENCRYPT_MESSAGE_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def ENUMERATE_SECURITY_PACKAGES_FN_A(param0: POINTER(UInt32), param1: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def ENUMERATE_SECURITY_PACKAGES_FN_W(param0: POINTER(UInt32), param1: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head))) -> Windows.Win32.Foundation.HRESULT: ...
EXPORT_SECURITY_CONTEXT_FLAGS = UInt32
SECPKG_CONTEXT_EXPORT_RESET_NEW: EXPORT_SECURITY_CONTEXT_FLAGS = 1
SECPKG_CONTEXT_EXPORT_DELETE_OLD: EXPORT_SECURITY_CONTEXT_FLAGS = 2
SECPKG_CONTEXT_EXPORT_TO_KERNEL: EXPORT_SECURITY_CONTEXT_FLAGS = 4
@winfunctype_pointer
def EXPORT_SECURITY_CONTEXT_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), param3: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
EXTENDED_NAME_FORMAT = Int32
EXTENDED_NAME_FORMAT_NameUnknown: EXTENDED_NAME_FORMAT = 0
EXTENDED_NAME_FORMAT_NameFullyQualifiedDN: EXTENDED_NAME_FORMAT = 1
EXTENDED_NAME_FORMAT_NameSamCompatible: EXTENDED_NAME_FORMAT = 2
EXTENDED_NAME_FORMAT_NameDisplay: EXTENDED_NAME_FORMAT = 3
EXTENDED_NAME_FORMAT_NameUniqueId: EXTENDED_NAME_FORMAT = 6
EXTENDED_NAME_FORMAT_NameCanonical: EXTENDED_NAME_FORMAT = 7
EXTENDED_NAME_FORMAT_NameUserPrincipal: EXTENDED_NAME_FORMAT = 8
EXTENDED_NAME_FORMAT_NameCanonicalEx: EXTENDED_NAME_FORMAT = 9
EXTENDED_NAME_FORMAT_NameServicePrincipal: EXTENDED_NAME_FORMAT = 10
EXTENDED_NAME_FORMAT_NameDnsDomain: EXTENDED_NAME_FORMAT = 12
EXTENDED_NAME_FORMAT_NameGivenName: EXTENDED_NAME_FORMAT = 13
EXTENDED_NAME_FORMAT_NameSurname: EXTENDED_NAME_FORMAT = 14
@winfunctype_pointer
def FREE_CONTEXT_BUFFER_FN(param0: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def FREE_CREDENTIALS_HANDLE_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
class ICcgDomainAuthCredentials(c_void_p):
    extends: Windows.Win32.System.Com.IUnknown
    Guid = Guid('6ecda518-2010-4437-8b-c3-46-e7-52-b7-b1-72')
    @commethod(3)
    def GetPasswordCredentials(pluginInput: Windows.Win32.Foundation.PWSTR, domainName: POINTER(Windows.Win32.Foundation.PWSTR), username: POINTER(Windows.Win32.Foundation.PWSTR), password: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def IMPERSONATE_SECURITY_CONTEXT_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def IMPORT_SECURITY_CONTEXT_FN_A(param0: POINTER(SByte), param1: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), param2: c_void_p, param3: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def IMPORT_SECURITY_CONTEXT_FN_W(param0: POINTER(UInt16), param1: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), param2: c_void_p, param3: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def INITIALIZE_SECURITY_CONTEXT_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param2: POINTER(SByte), param3: UInt32, param4: UInt32, param5: UInt32, param6: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param7: UInt32, param8: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param9: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param10: POINTER(UInt32), param11: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def INITIALIZE_SECURITY_CONTEXT_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param2: POINTER(UInt16), param3: UInt32, param4: UInt32, param5: UInt32, param6: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param7: UInt32, param8: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param9: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param10: POINTER(UInt32), param11: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def INIT_SECURITY_INTERFACE_A() -> POINTER(Windows.Win32.Security.Authentication.Identity.SecurityFunctionTableA_head): ...
@winfunctype_pointer
def INIT_SECURITY_INTERFACE_W() -> POINTER(Windows.Win32.Security.Authentication.Identity.SecurityFunctionTableW_head): ...
ISC_REQ_FLAGS = UInt32
ISC_REQ_DELEGATE: ISC_REQ_FLAGS = 1
ISC_REQ_MUTUAL_AUTH: ISC_REQ_FLAGS = 2
ISC_REQ_REPLAY_DETECT: ISC_REQ_FLAGS = 4
ISC_REQ_SEQUENCE_DETECT: ISC_REQ_FLAGS = 8
ISC_REQ_CONFIDENTIALITY: ISC_REQ_FLAGS = 16
ISC_REQ_USE_SESSION_KEY: ISC_REQ_FLAGS = 32
ISC_REQ_PROMPT_FOR_CREDS: ISC_REQ_FLAGS = 64
ISC_REQ_USE_SUPPLIED_CREDS: ISC_REQ_FLAGS = 128
ISC_REQ_ALLOCATE_MEMORY: ISC_REQ_FLAGS = 256
ISC_REQ_USE_DCE_STYLE: ISC_REQ_FLAGS = 512
ISC_REQ_DATAGRAM: ISC_REQ_FLAGS = 1024
ISC_REQ_CONNECTION: ISC_REQ_FLAGS = 2048
ISC_REQ_CALL_LEVEL: ISC_REQ_FLAGS = 4096
ISC_REQ_FRAGMENT_SUPPLIED: ISC_REQ_FLAGS = 8192
ISC_REQ_EXTENDED_ERROR: ISC_REQ_FLAGS = 16384
ISC_REQ_STREAM: ISC_REQ_FLAGS = 32768
ISC_REQ_INTEGRITY: ISC_REQ_FLAGS = 65536
ISC_REQ_IDENTIFY: ISC_REQ_FLAGS = 131072
ISC_REQ_NULL_SESSION: ISC_REQ_FLAGS = 262144
ISC_REQ_MANUAL_CRED_VALIDATION: ISC_REQ_FLAGS = 524288
ISC_REQ_RESERVED1: ISC_REQ_FLAGS = 1048576
ISC_REQ_FRAGMENT_TO_FIT: ISC_REQ_FLAGS = 2097152
ISC_REQ_FORWARD_CREDENTIALS: ISC_REQ_FLAGS = 4194304
ISC_REQ_NO_INTEGRITY: ISC_REQ_FLAGS = 8388608
ISC_REQ_USE_HTTP_STYLE: ISC_REQ_FLAGS = 16777216
ISC_REQ_UNVERIFIED_TARGET_NAME: ISC_REQ_FLAGS = 536870912
ISC_REQ_CONFIDENTIALITY_ONLY: ISC_REQ_FLAGS = 1073741824
ISC_REQ_HIGH_FLAGS = UInt64
ISC_REQ_MESSAGES: ISC_REQ_HIGH_FLAGS = 4294967296
ISC_REQ_DEFERRED_CRED_VALIDATION: ISC_REQ_HIGH_FLAGS = 8589934592
class KDC_PROXY_CACHE_ENTRY_DATA(Structure):
    SinceLastUsed: UInt64
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    ProxyServerName: Windows.Win32.Foundation.UNICODE_STRING
    ProxyServerVdir: Windows.Win32.Foundation.UNICODE_STRING
    ProxyServerPort: UInt16
    LogonId: Windows.Win32.Foundation.LUID
    CredUserName: Windows.Win32.Foundation.UNICODE_STRING
    CredDomainName: Windows.Win32.Foundation.UNICODE_STRING
    GlobalCache: Windows.Win32.Foundation.BOOLEAN
KERB_ADDRESS_TYPE = UInt32
DS_INET_ADDRESS: KERB_ADDRESS_TYPE = 1
DS_NETBIOS_ADDRESS: KERB_ADDRESS_TYPE = 2
class KERB_ADD_BINDING_CACHE_ENTRY_EX_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    RealmName: Windows.Win32.Foundation.UNICODE_STRING
    KdcAddress: Windows.Win32.Foundation.UNICODE_STRING
    AddressType: Windows.Win32.Security.Authentication.Identity.KERB_ADDRESS_TYPE
    DcFlags: UInt32
class KERB_ADD_BINDING_CACHE_ENTRY_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    RealmName: Windows.Win32.Foundation.UNICODE_STRING
    KdcAddress: Windows.Win32.Foundation.UNICODE_STRING
    AddressType: Windows.Win32.Security.Authentication.Identity.KERB_ADDRESS_TYPE
class KERB_ADD_CREDENTIALS_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
    LogonId: Windows.Win32.Foundation.LUID
    Flags: Windows.Win32.Security.Authentication.Identity.KERB_REQUEST_FLAGS
class KERB_ADD_CREDENTIALS_REQUEST_EX(Structure):
    Credentials: Windows.Win32.Security.Authentication.Identity.KERB_ADD_CREDENTIALS_REQUEST
    PrincipalNameCount: UInt32
    PrincipalNames: Windows.Win32.Foundation.UNICODE_STRING * 1
class KERB_AUTH_DATA(Structure):
    Type: UInt32
    Length: UInt32
    Data: c_char_p_no
class KERB_BINDING_CACHE_ENTRY_DATA(Structure):
    DiscoveryTime: UInt64
    RealmName: Windows.Win32.Foundation.UNICODE_STRING
    KdcAddress: Windows.Win32.Foundation.UNICODE_STRING
    AddressType: Windows.Win32.Security.Authentication.Identity.KERB_ADDRESS_TYPE
    Flags: UInt32
    DcFlags: UInt32
    CacheFlags: UInt32
    KdcName: Windows.Win32.Foundation.UNICODE_STRING
class KERB_CERTIFICATE_HASHINFO(Structure):
    StoreNameLength: UInt16
    HashLength: UInt16
class KERB_CERTIFICATE_INFO(Structure):
    CertInfoSize: UInt32
    InfoType: UInt32
KERB_CERTIFICATE_INFO_TYPE = Int32
KERB_CERTIFICATE_INFO_TYPE_CertHashInfo: KERB_CERTIFICATE_INFO_TYPE = 1
class KERB_CERTIFICATE_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_LOGON_SUBMIT_TYPE
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    Pin: Windows.Win32.Foundation.UNICODE_STRING
    Flags: UInt32
    CspDataLength: UInt32
    CspData: c_char_p_no
class KERB_CERTIFICATE_S4U_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_LOGON_SUBMIT_TYPE
    Flags: UInt32
    UserPrincipalName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    CertificateLength: UInt32
    Certificate: c_char_p_no
class KERB_CERTIFICATE_UNLOCK_LOGON(Structure):
    Logon: Windows.Win32.Security.Authentication.Identity.KERB_CERTIFICATE_LOGON
    LogonId: Windows.Win32.Foundation.LUID
class KERB_CHANGEPASSWORD_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    AccountName: Windows.Win32.Foundation.UNICODE_STRING
    OldPassword: Windows.Win32.Foundation.UNICODE_STRING
    NewPassword: Windows.Win32.Foundation.UNICODE_STRING
    Impersonating: Windows.Win32.Foundation.BOOLEAN
class KERB_CLEANUP_MACHINE_PKINIT_CREDS_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
class KERB_CLOUD_KERBEROS_DEBUG_DATA_V0(Structure):
    _bitfield: Int32
class KERB_CLOUD_KERBEROS_DEBUG_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
class KERB_CLOUD_KERBEROS_DEBUG_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Version: UInt32
    Length: UInt32
    Data: UInt32 * 1
class KERB_CRYPTO_KEY(Structure):
    KeyType: Windows.Win32.Security.Authentication.Identity.KERB_CRYPTO_KEY_TYPE
    Length: UInt32
    Value: c_char_p_no
class KERB_CRYPTO_KEY32(Structure):
    KeyType: Int32
    Length: UInt32
    Offset: UInt32
KERB_CRYPTO_KEY_TYPE = Int32
KERB_ETYPE_DES_CBC_CRC: KERB_CRYPTO_KEY_TYPE = 1
KERB_ETYPE_DES_CBC_MD4: KERB_CRYPTO_KEY_TYPE = 2
KERB_ETYPE_DES_CBC_MD5: KERB_CRYPTO_KEY_TYPE = 3
KERB_ETYPE_NULL: KERB_CRYPTO_KEY_TYPE = 0
KERB_ETYPE_RC4_HMAC_NT: KERB_CRYPTO_KEY_TYPE = 23
KERB_ETYPE_RC4_MD4: KERB_CRYPTO_KEY_TYPE = -128
class KERB_DECRYPT_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
    Flags: UInt32
    CryptoType: Int32
    KeyUsage: Int32
    Key: Windows.Win32.Security.Authentication.Identity.KERB_CRYPTO_KEY
    EncryptedDataSize: UInt32
    InitialVectorSize: UInt32
    InitialVector: c_char_p_no
    EncryptedData: c_char_p_no
class KERB_DECRYPT_RESPONSE(Structure):
    DecryptedData: Byte * 1
class KERB_EXTERNAL_NAME(Structure):
    NameType: Int16
    NameCount: UInt16
    Names: Windows.Win32.Foundation.UNICODE_STRING * 1
class KERB_EXTERNAL_TICKET(Structure):
    ServiceName: POINTER(Windows.Win32.Security.Authentication.Identity.KERB_EXTERNAL_NAME_head)
    TargetName: POINTER(Windows.Win32.Security.Authentication.Identity.KERB_EXTERNAL_NAME_head)
    ClientName: POINTER(Windows.Win32.Security.Authentication.Identity.KERB_EXTERNAL_NAME_head)
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    TargetDomainName: Windows.Win32.Foundation.UNICODE_STRING
    AltTargetDomainName: Windows.Win32.Foundation.UNICODE_STRING
    SessionKey: Windows.Win32.Security.Authentication.Identity.KERB_CRYPTO_KEY
    TicketFlags: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_FLAGS
    Flags: UInt32
    KeyExpirationTime: Int64
    StartTime: Int64
    EndTime: Int64
    RenewUntil: Int64
    TimeSkew: Int64
    EncodedTicketSize: UInt32
    EncodedTicket: c_char_p_no
class KERB_INTERACTIVE_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_LOGON_SUBMIT_TYPE
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
class KERB_INTERACTIVE_PROFILE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROFILE_BUFFER_TYPE
    LogonCount: UInt16
    BadPasswordCount: UInt16
    LogonTime: Int64
    LogoffTime: Int64
    KickOffTime: Int64
    PasswordLastSet: Int64
    PasswordCanChange: Int64
    PasswordMustChange: Int64
    LogonScript: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectory: Windows.Win32.Foundation.UNICODE_STRING
    FullName: Windows.Win32.Foundation.UNICODE_STRING
    ProfilePath: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectoryDrive: Windows.Win32.Foundation.UNICODE_STRING
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    UserFlags: UInt32
class KERB_INTERACTIVE_UNLOCK_LOGON(Structure):
    Logon: Windows.Win32.Security.Authentication.Identity.KERB_INTERACTIVE_LOGON
    LogonId: Windows.Win32.Foundation.LUID
KERB_LOGON_SUBMIT_TYPE = Int32
KERB_LOGON_SUBMIT_TYPE_KerbInteractiveLogon: KERB_LOGON_SUBMIT_TYPE = 2
KERB_LOGON_SUBMIT_TYPE_KerbSmartCardLogon: KERB_LOGON_SUBMIT_TYPE = 6
KERB_LOGON_SUBMIT_TYPE_KerbWorkstationUnlockLogon: KERB_LOGON_SUBMIT_TYPE = 7
KERB_LOGON_SUBMIT_TYPE_KerbSmartCardUnlockLogon: KERB_LOGON_SUBMIT_TYPE = 8
KERB_LOGON_SUBMIT_TYPE_KerbProxyLogon: KERB_LOGON_SUBMIT_TYPE = 9
KERB_LOGON_SUBMIT_TYPE_KerbTicketLogon: KERB_LOGON_SUBMIT_TYPE = 10
KERB_LOGON_SUBMIT_TYPE_KerbTicketUnlockLogon: KERB_LOGON_SUBMIT_TYPE = 11
KERB_LOGON_SUBMIT_TYPE_KerbS4ULogon: KERB_LOGON_SUBMIT_TYPE = 12
KERB_LOGON_SUBMIT_TYPE_KerbCertificateLogon: KERB_LOGON_SUBMIT_TYPE = 13
KERB_LOGON_SUBMIT_TYPE_KerbCertificateS4ULogon: KERB_LOGON_SUBMIT_TYPE = 14
KERB_LOGON_SUBMIT_TYPE_KerbCertificateUnlockLogon: KERB_LOGON_SUBMIT_TYPE = 15
KERB_LOGON_SUBMIT_TYPE_KerbNoElevationLogon: KERB_LOGON_SUBMIT_TYPE = 83
KERB_LOGON_SUBMIT_TYPE_KerbLuidLogon: KERB_LOGON_SUBMIT_TYPE = 84
class KERB_NET_ADDRESS(Structure):
    Family: UInt32
    Length: UInt32
    Address: Windows.Win32.Foundation.PSTR
class KERB_NET_ADDRESSES(Structure):
    Number: UInt32
    Addresses: Windows.Win32.Security.Authentication.Identity.KERB_NET_ADDRESS * 1
KERB_PROFILE_BUFFER_TYPE = Int32
KERB_PROFILE_BUFFER_TYPE_KerbInteractiveProfile: KERB_PROFILE_BUFFER_TYPE = 2
KERB_PROFILE_BUFFER_TYPE_KerbSmartCardProfile: KERB_PROFILE_BUFFER_TYPE = 4
KERB_PROFILE_BUFFER_TYPE_KerbTicketProfile: KERB_PROFILE_BUFFER_TYPE = 6
KERB_PROTOCOL_MESSAGE_TYPE = Int32
KERB_PROTOCOL_MESSAGE_TYPE_KerbDebugRequestMessage: KERB_PROTOCOL_MESSAGE_TYPE = 0
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheMessage: KERB_PROTOCOL_MESSAGE_TYPE = 1
KERB_PROTOCOL_MESSAGE_TYPE_KerbChangeMachinePasswordMessage: KERB_PROTOCOL_MESSAGE_TYPE = 2
KERB_PROTOCOL_MESSAGE_TYPE_KerbVerifyPacMessage: KERB_PROTOCOL_MESSAGE_TYPE = 3
KERB_PROTOCOL_MESSAGE_TYPE_KerbRetrieveTicketMessage: KERB_PROTOCOL_MESSAGE_TYPE = 4
KERB_PROTOCOL_MESSAGE_TYPE_KerbUpdateAddressesMessage: KERB_PROTOCOL_MESSAGE_TYPE = 5
KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeTicketCacheMessage: KERB_PROTOCOL_MESSAGE_TYPE = 6
KERB_PROTOCOL_MESSAGE_TYPE_KerbChangePasswordMessage: KERB_PROTOCOL_MESSAGE_TYPE = 7
KERB_PROTOCOL_MESSAGE_TYPE_KerbRetrieveEncodedTicketMessage: KERB_PROTOCOL_MESSAGE_TYPE = 8
KERB_PROTOCOL_MESSAGE_TYPE_KerbDecryptDataMessage: KERB_PROTOCOL_MESSAGE_TYPE = 9
KERB_PROTOCOL_MESSAGE_TYPE_KerbAddBindingCacheEntryMessage: KERB_PROTOCOL_MESSAGE_TYPE = 10
KERB_PROTOCOL_MESSAGE_TYPE_KerbSetPasswordMessage: KERB_PROTOCOL_MESSAGE_TYPE = 11
KERB_PROTOCOL_MESSAGE_TYPE_KerbSetPasswordExMessage: KERB_PROTOCOL_MESSAGE_TYPE = 12
KERB_PROTOCOL_MESSAGE_TYPE_KerbVerifyCredentialsMessage: KERB_PROTOCOL_MESSAGE_TYPE = 13
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheExMessage: KERB_PROTOCOL_MESSAGE_TYPE = 14
KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeTicketCacheExMessage: KERB_PROTOCOL_MESSAGE_TYPE = 15
KERB_PROTOCOL_MESSAGE_TYPE_KerbRefreshSmartcardCredentialsMessage: KERB_PROTOCOL_MESSAGE_TYPE = 16
KERB_PROTOCOL_MESSAGE_TYPE_KerbAddExtraCredentialsMessage: KERB_PROTOCOL_MESSAGE_TYPE = 17
KERB_PROTOCOL_MESSAGE_TYPE_KerbQuerySupplementalCredentialsMessage: KERB_PROTOCOL_MESSAGE_TYPE = 18
KERB_PROTOCOL_MESSAGE_TYPE_KerbTransferCredentialsMessage: KERB_PROTOCOL_MESSAGE_TYPE = 19
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheEx2Message: KERB_PROTOCOL_MESSAGE_TYPE = 20
KERB_PROTOCOL_MESSAGE_TYPE_KerbSubmitTicketMessage: KERB_PROTOCOL_MESSAGE_TYPE = 21
KERB_PROTOCOL_MESSAGE_TYPE_KerbAddExtraCredentialsExMessage: KERB_PROTOCOL_MESSAGE_TYPE = 22
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryKdcProxyCacheMessage: KERB_PROTOCOL_MESSAGE_TYPE = 23
KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeKdcProxyCacheMessage: KERB_PROTOCOL_MESSAGE_TYPE = 24
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheEx3Message: KERB_PROTOCOL_MESSAGE_TYPE = 25
KERB_PROTOCOL_MESSAGE_TYPE_KerbCleanupMachinePkinitCredsMessage: KERB_PROTOCOL_MESSAGE_TYPE = 26
KERB_PROTOCOL_MESSAGE_TYPE_KerbAddBindingCacheEntryExMessage: KERB_PROTOCOL_MESSAGE_TYPE = 27
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryBindingCacheMessage: KERB_PROTOCOL_MESSAGE_TYPE = 28
KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeBindingCacheMessage: KERB_PROTOCOL_MESSAGE_TYPE = 29
KERB_PROTOCOL_MESSAGE_TYPE_KerbPinKdcMessage: KERB_PROTOCOL_MESSAGE_TYPE = 30
KERB_PROTOCOL_MESSAGE_TYPE_KerbUnpinAllKdcsMessage: KERB_PROTOCOL_MESSAGE_TYPE = 31
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryDomainExtendedPoliciesMessage: KERB_PROTOCOL_MESSAGE_TYPE = 32
KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryS4U2ProxyCacheMessage: KERB_PROTOCOL_MESSAGE_TYPE = 33
KERB_PROTOCOL_MESSAGE_TYPE_KerbRetrieveKeyTabMessage: KERB_PROTOCOL_MESSAGE_TYPE = 34
KERB_PROTOCOL_MESSAGE_TYPE_KerbRefreshPolicyMessage: KERB_PROTOCOL_MESSAGE_TYPE = 35
KERB_PROTOCOL_MESSAGE_TYPE_KerbPrintCloudKerberosDebugMessage: KERB_PROTOCOL_MESSAGE_TYPE = 36
class KERB_PURGE_BINDING_CACHE_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
class KERB_PURGE_KDC_PROXY_CACHE_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
    LogonId: Windows.Win32.Foundation.LUID
class KERB_PURGE_KDC_PROXY_CACHE_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfPurged: UInt32
class KERB_PURGE_TKT_CACHE_EX_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
    Flags: UInt32
    TicketTemplate: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_CACHE_INFO_EX
class KERB_PURGE_TKT_CACHE_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
    ServerName: Windows.Win32.Foundation.UNICODE_STRING
    RealmName: Windows.Win32.Foundation.UNICODE_STRING
class KERB_QUERY_BINDING_CACHE_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
class KERB_QUERY_BINDING_CACHE_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfEntries: UInt32
    Entries: POINTER(Windows.Win32.Security.Authentication.Identity.KERB_BINDING_CACHE_ENTRY_DATA_head)
class KERB_QUERY_DOMAIN_EXTENDED_POLICIES_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
class KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
    ExtendedPolicies: UInt32
    DsFlags: UInt32
class KERB_QUERY_KDC_PROXY_CACHE_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
    LogonId: Windows.Win32.Foundation.LUID
class KERB_QUERY_KDC_PROXY_CACHE_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfEntries: UInt32
    Entries: POINTER(Windows.Win32.Security.Authentication.Identity.KDC_PROXY_CACHE_ENTRY_DATA_head)
class KERB_QUERY_S4U2PROXY_CACHE_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
    LogonId: Windows.Win32.Foundation.LUID
class KERB_QUERY_S4U2PROXY_CACHE_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfCreds: UInt32
    Creds: POINTER(Windows.Win32.Security.Authentication.Identity.KERB_S4U2PROXY_CRED_head)
class KERB_QUERY_TKT_CACHE_EX2_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfTickets: UInt32
    Tickets: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_CACHE_INFO_EX2 * 1
class KERB_QUERY_TKT_CACHE_EX3_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfTickets: UInt32
    Tickets: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_CACHE_INFO_EX3 * 1
class KERB_QUERY_TKT_CACHE_EX_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfTickets: UInt32
    Tickets: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_CACHE_INFO_EX * 1
class KERB_QUERY_TKT_CACHE_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
class KERB_QUERY_TKT_CACHE_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CountOfTickets: UInt32
    Tickets: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_CACHE_INFO * 1
class KERB_REFRESH_POLICY_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
class KERB_REFRESH_POLICY_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
class KERB_REFRESH_SCCRED_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    CredentialBlob: Windows.Win32.Foundation.UNICODE_STRING
    LogonId: Windows.Win32.Foundation.LUID
    Flags: UInt32
KERB_REQUEST_FLAGS = UInt32
KERB_REQUEST_ADD_CREDENTIAL: KERB_REQUEST_FLAGS = 1
KERB_REQUEST_REPLACE_CREDENTIAL: KERB_REQUEST_FLAGS = 2
KERB_REQUEST_REMOVE_CREDENTIAL: KERB_REQUEST_FLAGS = 4
class KERB_RETRIEVE_KEY_TAB_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    Flags: UInt32
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
class KERB_RETRIEVE_KEY_TAB_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    KeyTabLength: UInt32
    KeyTab: c_char_p_no
class KERB_RETRIEVE_TKT_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
    TargetName: Windows.Win32.Foundation.UNICODE_STRING
    TicketFlags: UInt32
    CacheOptions: UInt32
    EncryptionType: Windows.Win32.Security.Authentication.Identity.KERB_CRYPTO_KEY_TYPE
    CredentialsHandle: Windows.Win32.Security.Credentials.SecHandle
class KERB_RETRIEVE_TKT_RESPONSE(Structure):
    Ticket: Windows.Win32.Security.Authentication.Identity.KERB_EXTERNAL_TICKET
class KERB_S4U2PROXY_CACHE_ENTRY_INFO(Structure):
    ServerName: Windows.Win32.Foundation.UNICODE_STRING
    Flags: UInt32
    LastStatus: Windows.Win32.Foundation.NTSTATUS
    Expiry: Int64
class KERB_S4U2PROXY_CRED(Structure):
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    Flags: UInt32
    LastStatus: Windows.Win32.Foundation.NTSTATUS
    Expiry: Int64
    CountOfEntries: UInt32
    Entries: POINTER(Windows.Win32.Security.Authentication.Identity.KERB_S4U2PROXY_CACHE_ENTRY_INFO_head)
class KERB_S4U_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_LOGON_SUBMIT_TYPE
    Flags: UInt32
    ClientUpn: Windows.Win32.Foundation.UNICODE_STRING
    ClientRealm: Windows.Win32.Foundation.UNICODE_STRING
class KERB_SETPASSWORD_EX_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
    CredentialsHandle: Windows.Win32.Security.Credentials.SecHandle
    Flags: UInt32
    AccountRealm: Windows.Win32.Foundation.UNICODE_STRING
    AccountName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
    ClientRealm: Windows.Win32.Foundation.UNICODE_STRING
    ClientName: Windows.Win32.Foundation.UNICODE_STRING
    Impersonating: Windows.Win32.Foundation.BOOLEAN
    KdcAddress: Windows.Win32.Foundation.UNICODE_STRING
    KdcAddressType: UInt32
class KERB_SETPASSWORD_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
    CredentialsHandle: Windows.Win32.Security.Credentials.SecHandle
    Flags: UInt32
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    AccountName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
class KERB_SMART_CARD_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_LOGON_SUBMIT_TYPE
    Pin: Windows.Win32.Foundation.UNICODE_STRING
    CspDataLength: UInt32
    CspData: c_char_p_no
class KERB_SMART_CARD_PROFILE(Structure):
    Profile: Windows.Win32.Security.Authentication.Identity.KERB_INTERACTIVE_PROFILE
    CertificateSize: UInt32
    CertificateData: c_char_p_no
class KERB_SMART_CARD_UNLOCK_LOGON(Structure):
    Logon: Windows.Win32.Security.Authentication.Identity.KERB_SMART_CARD_LOGON
    LogonId: Windows.Win32.Foundation.LUID
class KERB_SUBMIT_TKT_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    LogonId: Windows.Win32.Foundation.LUID
    Flags: UInt32
    Key: Windows.Win32.Security.Authentication.Identity.KERB_CRYPTO_KEY32
    KerbCredSize: UInt32
    KerbCredOffset: UInt32
class KERB_TICKET_CACHE_INFO(Structure):
    ServerName: Windows.Win32.Foundation.UNICODE_STRING
    RealmName: Windows.Win32.Foundation.UNICODE_STRING
    StartTime: Int64
    EndTime: Int64
    RenewTime: Int64
    EncryptionType: Int32
    TicketFlags: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_FLAGS
class KERB_TICKET_CACHE_INFO_EX(Structure):
    ClientName: Windows.Win32.Foundation.UNICODE_STRING
    ClientRealm: Windows.Win32.Foundation.UNICODE_STRING
    ServerName: Windows.Win32.Foundation.UNICODE_STRING
    ServerRealm: Windows.Win32.Foundation.UNICODE_STRING
    StartTime: Int64
    EndTime: Int64
    RenewTime: Int64
    EncryptionType: Int32
    TicketFlags: UInt32
class KERB_TICKET_CACHE_INFO_EX2(Structure):
    ClientName: Windows.Win32.Foundation.UNICODE_STRING
    ClientRealm: Windows.Win32.Foundation.UNICODE_STRING
    ServerName: Windows.Win32.Foundation.UNICODE_STRING
    ServerRealm: Windows.Win32.Foundation.UNICODE_STRING
    StartTime: Int64
    EndTime: Int64
    RenewTime: Int64
    EncryptionType: Int32
    TicketFlags: UInt32
    SessionKeyType: UInt32
    BranchId: UInt32
class KERB_TICKET_CACHE_INFO_EX3(Structure):
    ClientName: Windows.Win32.Foundation.UNICODE_STRING
    ClientRealm: Windows.Win32.Foundation.UNICODE_STRING
    ServerName: Windows.Win32.Foundation.UNICODE_STRING
    ServerRealm: Windows.Win32.Foundation.UNICODE_STRING
    StartTime: Int64
    EndTime: Int64
    RenewTime: Int64
    EncryptionType: Int32
    TicketFlags: UInt32
    SessionKeyType: UInt32
    BranchId: UInt32
    CacheFlags: UInt32
    KdcCalled: Windows.Win32.Foundation.UNICODE_STRING
KERB_TICKET_FLAGS = UInt32
KERB_TICKET_FLAGS_forwardable: KERB_TICKET_FLAGS = 1073741824
KERB_TICKET_FLAGS_forwarded: KERB_TICKET_FLAGS = 536870912
KERB_TICKET_FLAGS_hw_authent: KERB_TICKET_FLAGS = 1048576
KERB_TICKET_FLAGS_initial: KERB_TICKET_FLAGS = 4194304
KERB_TICKET_FLAGS_invalid: KERB_TICKET_FLAGS = 16777216
KERB_TICKET_FLAGS_may_postdate: KERB_TICKET_FLAGS = 67108864
KERB_TICKET_FLAGS_ok_as_delegate: KERB_TICKET_FLAGS = 262144
KERB_TICKET_FLAGS_postdated: KERB_TICKET_FLAGS = 33554432
KERB_TICKET_FLAGS_pre_authent: KERB_TICKET_FLAGS = 2097152
KERB_TICKET_FLAGS_proxiable: KERB_TICKET_FLAGS = 268435456
KERB_TICKET_FLAGS_proxy: KERB_TICKET_FLAGS = 134217728
KERB_TICKET_FLAGS_renewable: KERB_TICKET_FLAGS = 8388608
KERB_TICKET_FLAGS_reserved: KERB_TICKET_FLAGS = 2147483648
KERB_TICKET_FLAGS_reserved1: KERB_TICKET_FLAGS = 1
class KERB_TICKET_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_LOGON_SUBMIT_TYPE
    Flags: UInt32
    ServiceTicketLength: UInt32
    TicketGrantingTicketLength: UInt32
    ServiceTicket: c_char_p_no
    TicketGrantingTicket: c_char_p_no
class KERB_TICKET_PROFILE(Structure):
    Profile: Windows.Win32.Security.Authentication.Identity.KERB_INTERACTIVE_PROFILE
    SessionKey: Windows.Win32.Security.Authentication.Identity.KERB_CRYPTO_KEY
class KERB_TICKET_UNLOCK_LOGON(Structure):
    Logon: Windows.Win32.Security.Authentication.Identity.KERB_TICKET_LOGON
    LogonId: Windows.Win32.Foundation.LUID
class KERB_TRANSFER_CRED_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.KERB_PROTOCOL_MESSAGE_TYPE
    OriginLogonId: Windows.Win32.Foundation.LUID
    DestinationLogonId: Windows.Win32.Foundation.LUID
    Flags: UInt32
KSEC_CONTEXT_TYPE = Int32
KSEC_CONTEXT_TYPE_KSecPaged: KSEC_CONTEXT_TYPE = 0
KSEC_CONTEXT_TYPE_KSecNonPaged: KSEC_CONTEXT_TYPE = 1
class KSEC_LIST_ENTRY(Structure):
    List: Windows.Win32.System.Kernel.LIST_ENTRY
    RefCount: Int32
    Signature: UInt32
    OwningList: c_void_p
    Reserved: c_void_p
@winfunctype_pointer
def KspCompleteTokenFn(ContextId: UIntPtr, Token: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspDeleteContextFn(ContextId: UIntPtr, LsaContextId: POINTER(UIntPtr)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspGetTokenFn(ContextId: UIntPtr, ImpersonationToken: POINTER(Windows.Win32.Foundation.HANDLE), RawToken: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspInitContextFn(ContextId: UIntPtr, ContextData: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), NewContextId: POINTER(UIntPtr)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspInitPackageFn(FunctionTable: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_KERNEL_FUNCTIONS_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspMakeSignatureFn(ContextId: UIntPtr, fQOP: UInt32, Message: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspMapHandleFn(ContextId: UIntPtr, LsaContextId: POINTER(UIntPtr)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspQueryAttributesFn(ContextId: UIntPtr, Attribute: UInt32, Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspSealMessageFn(ContextId: UIntPtr, fQOP: UInt32, Message: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspSerializeAuthDataFn(pvAuthData: c_void_p, Size: POINTER(UInt32), SerializedData: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspSetPagingModeFn(PagingMode: Windows.Win32.Foundation.BOOLEAN) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspUnsealMessageFn(ContextId: UIntPtr, Message: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32, pfQOP: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def KspVerifySignatureFn(ContextId: UIntPtr, Message: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSeqNo: UInt32, pfQOP: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
class LOGON_HOURS(Structure):
    UnitsPerWeek: UInt16
    LogonHours: c_char_p_no
@winfunctype_pointer
def LSA_AP_POST_LOGON_USER(PostLogonUserInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_POST_LOGON_USER_INFO_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
class LSA_AUTH_INFORMATION(Structure):
    LastUpdateTime: Int64
    AuthType: Windows.Win32.Security.Authentication.Identity.LSA_AUTH_INFORMATION_AUTH_TYPE
    AuthInfoLength: UInt32
    AuthInfo: c_char_p_no
LSA_AUTH_INFORMATION_AUTH_TYPE = UInt32
TRUST_AUTH_TYPE_NONE: LSA_AUTH_INFORMATION_AUTH_TYPE = 0
TRUST_AUTH_TYPE_NT4OWF: LSA_AUTH_INFORMATION_AUTH_TYPE = 1
TRUST_AUTH_TYPE_CLEAR: LSA_AUTH_INFORMATION_AUTH_TYPE = 2
TRUST_AUTH_TYPE_VERSION: LSA_AUTH_INFORMATION_AUTH_TYPE = 3
class LSA_DISPATCH_TABLE(Structure):
    CreateLogonSession: Windows.Win32.Security.Authentication.Identity.PLSA_CREATE_LOGON_SESSION
    DeleteLogonSession: Windows.Win32.Security.Authentication.Identity.PLSA_DELETE_LOGON_SESSION
    AddCredential: Windows.Win32.Security.Authentication.Identity.PLSA_ADD_CREDENTIAL
    GetCredentials: Windows.Win32.Security.Authentication.Identity.PLSA_GET_CREDENTIALS
    DeleteCredential: Windows.Win32.Security.Authentication.Identity.PLSA_DELETE_CREDENTIAL
    AllocateLsaHeap: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_LSA_HEAP
    FreeLsaHeap: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_LSA_HEAP
    AllocateClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_CLIENT_BUFFER
    FreeClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_CLIENT_BUFFER
    CopyToClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_COPY_TO_CLIENT_BUFFER
    CopyFromClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_COPY_FROM_CLIENT_BUFFER
class LSA_ENUMERATION_INFORMATION(Structure):
    Sid: Windows.Win32.Foundation.PSID
class LSA_FOREST_TRUST_BINARY_DATA(Structure):
    Length: UInt32
    Buffer: c_char_p_no
class LSA_FOREST_TRUST_COLLISION_INFORMATION(Structure):
    RecordCount: UInt32
    Entries: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_COLLISION_RECORD_head))
class LSA_FOREST_TRUST_COLLISION_RECORD(Structure):
    Index: UInt32
    Type: Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_COLLISION_RECORD_TYPE
    Flags: UInt32
    Name: Windows.Win32.Foundation.UNICODE_STRING
LSA_FOREST_TRUST_COLLISION_RECORD_TYPE = Int32
LSA_FOREST_TRUST_COLLISION_RECORD_TYPE_CollisionTdo: LSA_FOREST_TRUST_COLLISION_RECORD_TYPE = 0
LSA_FOREST_TRUST_COLLISION_RECORD_TYPE_CollisionXref: LSA_FOREST_TRUST_COLLISION_RECORD_TYPE = 1
LSA_FOREST_TRUST_COLLISION_RECORD_TYPE_CollisionOther: LSA_FOREST_TRUST_COLLISION_RECORD_TYPE = 2
class LSA_FOREST_TRUST_DOMAIN_INFO(Structure):
    Sid: Windows.Win32.Foundation.PSID
    DnsName: Windows.Win32.Foundation.UNICODE_STRING
    NetbiosName: Windows.Win32.Foundation.UNICODE_STRING
class LSA_FOREST_TRUST_INFORMATION(Structure):
    RecordCount: UInt32
    Entries: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_RECORD_head))
class LSA_FOREST_TRUST_RECORD(Structure):
    Flags: UInt32
    ForestTrustType: Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_RECORD_TYPE
    Time: Int64
    ForestTrustData: _ForestTrustData_e__Union
    class _ForestTrustData_e__Union(Union):
        TopLevelName: Windows.Win32.Foundation.UNICODE_STRING
        DomainInfo: Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_DOMAIN_INFO
        Data: Windows.Win32.Security.Authentication.Identity.LSA_FOREST_TRUST_BINARY_DATA
LSA_FOREST_TRUST_RECORD_TYPE = Int32
LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustTopLevelName: LSA_FOREST_TRUST_RECORD_TYPE = 0
LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustTopLevelNameEx: LSA_FOREST_TRUST_RECORD_TYPE = 1
LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustDomainInfo: LSA_FOREST_TRUST_RECORD_TYPE = 2
LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustRecordTypeLast: LSA_FOREST_TRUST_RECORD_TYPE = 2
LSA_HANDLE = IntPtr
class LSA_LAST_INTER_LOGON_INFO(Structure):
    LastSuccessfulLogon: Int64
    LastFailedLogon: Int64
    FailedAttemptCountSinceLastSuccessfulLogon: UInt32
LSA_LOOKUP_DOMAIN_INFO_CLASS = Int32
LSA_LOOKUP_DOMAIN_INFO_CLASS_AccountDomainInformation: LSA_LOOKUP_DOMAIN_INFO_CLASS = 5
LSA_LOOKUP_DOMAIN_INFO_CLASS_DnsDomainInformation: LSA_LOOKUP_DOMAIN_INFO_CLASS = 12
class LSA_REFERENCED_DOMAIN_LIST(Structure):
    Entries: UInt32
    Domains: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TRUST_INFORMATION_head)
class LSA_SECPKG_FUNCTION_TABLE(Structure):
    CreateLogonSession: Windows.Win32.Security.Authentication.Identity.PLSA_CREATE_LOGON_SESSION
    DeleteLogonSession: Windows.Win32.Security.Authentication.Identity.PLSA_DELETE_LOGON_SESSION
    AddCredential: Windows.Win32.Security.Authentication.Identity.PLSA_ADD_CREDENTIAL
    GetCredentials: Windows.Win32.Security.Authentication.Identity.PLSA_GET_CREDENTIALS
    DeleteCredential: Windows.Win32.Security.Authentication.Identity.PLSA_DELETE_CREDENTIAL
    AllocateLsaHeap: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_LSA_HEAP
    FreeLsaHeap: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_LSA_HEAP
    AllocateClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_CLIENT_BUFFER
    FreeClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_CLIENT_BUFFER
    CopyToClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_COPY_TO_CLIENT_BUFFER
    CopyFromClientBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_COPY_FROM_CLIENT_BUFFER
    ImpersonateClient: Windows.Win32.Security.Authentication.Identity.PLSA_IMPERSONATE_CLIENT
    UnloadPackage: Windows.Win32.Security.Authentication.Identity.PLSA_UNLOAD_PACKAGE
    DuplicateHandle: Windows.Win32.Security.Authentication.Identity.PLSA_DUPLICATE_HANDLE
    SaveSupplementalCredentials: Windows.Win32.Security.Authentication.Identity.PLSA_SAVE_SUPPLEMENTAL_CREDENTIALS
    CreateThread: Windows.Win32.Security.Authentication.Identity.PLSA_CREATE_THREAD
    GetClientInfo: Windows.Win32.Security.Authentication.Identity.PLSA_GET_CLIENT_INFO
    RegisterNotification: Windows.Win32.Security.Authentication.Identity.PLSA_REGISTER_NOTIFICATION
    CancelNotification: Windows.Win32.Security.Authentication.Identity.PLSA_CANCEL_NOTIFICATION
    MapBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_MAP_BUFFER
    CreateToken: Windows.Win32.Security.Authentication.Identity.PLSA_CREATE_TOKEN
    AuditLogon: Windows.Win32.Security.Authentication.Identity.PLSA_AUDIT_LOGON
    CallPackage: Windows.Win32.Security.Authentication.Identity.PLSA_CALL_PACKAGE
    FreeReturnBuffer: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_LSA_HEAP
    GetCallInfo: Windows.Win32.Security.Authentication.Identity.PLSA_GET_CALL_INFO
    CallPackageEx: Windows.Win32.Security.Authentication.Identity.PLSA_CALL_PACKAGEEX
    CreateSharedMemory: Windows.Win32.Security.Authentication.Identity.PLSA_CREATE_SHARED_MEMORY
    AllocateSharedMemory: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_SHARED_MEMORY
    FreeSharedMemory: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_SHARED_MEMORY
    DeleteSharedMemory: Windows.Win32.Security.Authentication.Identity.PLSA_DELETE_SHARED_MEMORY
    OpenSamUser: Windows.Win32.Security.Authentication.Identity.PLSA_OPEN_SAM_USER
    GetUserCredentials: Windows.Win32.Security.Authentication.Identity.PLSA_GET_USER_CREDENTIALS
    GetUserAuthData: Windows.Win32.Security.Authentication.Identity.PLSA_GET_USER_AUTH_DATA
    CloseSamUser: Windows.Win32.Security.Authentication.Identity.PLSA_CLOSE_SAM_USER
    ConvertAuthDataToToken: Windows.Win32.Security.Authentication.Identity.PLSA_CONVERT_AUTH_DATA_TO_TOKEN
    ClientCallback: Windows.Win32.Security.Authentication.Identity.PLSA_CLIENT_CALLBACK
    UpdateCredentials: Windows.Win32.Security.Authentication.Identity.PLSA_UPDATE_PRIMARY_CREDENTIALS
    GetAuthDataForUser: Windows.Win32.Security.Authentication.Identity.PLSA_GET_AUTH_DATA_FOR_USER
    CrackSingleName: Windows.Win32.Security.Authentication.Identity.PLSA_CRACK_SINGLE_NAME
    AuditAccountLogon: Windows.Win32.Security.Authentication.Identity.PLSA_AUDIT_ACCOUNT_LOGON
    CallPackagePassthrough: Windows.Win32.Security.Authentication.Identity.PLSA_CALL_PACKAGE_PASSTHROUGH
    CrediRead: Windows.Win32.Security.Authentication.Identity.CredReadFn
    CrediReadDomainCredentials: Windows.Win32.Security.Authentication.Identity.CredReadDomainCredentialsFn
    CrediFreeCredentials: Windows.Win32.Security.Authentication.Identity.CredFreeCredentialsFn
    LsaProtectMemory: Windows.Win32.Security.Authentication.Identity.PLSA_PROTECT_MEMORY
    LsaUnprotectMemory: Windows.Win32.Security.Authentication.Identity.PLSA_PROTECT_MEMORY
    OpenTokenByLogonId: Windows.Win32.Security.Authentication.Identity.PLSA_OPEN_TOKEN_BY_LOGON_ID
    ExpandAuthDataForDomain: Windows.Win32.Security.Authentication.Identity.PLSA_EXPAND_AUTH_DATA_FOR_DOMAIN
    AllocatePrivateHeap: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_PRIVATE_HEAP
    FreePrivateHeap: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_PRIVATE_HEAP
    CreateTokenEx: Windows.Win32.Security.Authentication.Identity.PLSA_CREATE_TOKEN_EX
    CrediWrite: Windows.Win32.Security.Authentication.Identity.CredWriteFn
    CrediUnmarshalandDecodeString: Windows.Win32.Security.Authentication.Identity.CrediUnmarshalandDecodeStringFn
    DummyFunction6: Windows.Win32.Security.Authentication.Identity.PLSA_PROTECT_MEMORY
    GetExtendedCallFlags: Windows.Win32.Security.Authentication.Identity.PLSA_GET_EXTENDED_CALL_FLAGS
    DuplicateTokenHandle: Windows.Win32.Security.Authentication.Identity.PLSA_DUPLICATE_HANDLE
    GetServiceAccountPassword: Windows.Win32.Security.Authentication.Identity.PLSA_GET_SERVICE_ACCOUNT_PASSWORD
    DummyFunction7: Windows.Win32.Security.Authentication.Identity.PLSA_PROTECT_MEMORY
    AuditLogonEx: Windows.Win32.Security.Authentication.Identity.PLSA_AUDIT_LOGON_EX
    CheckProtectedUserByToken: Windows.Win32.Security.Authentication.Identity.PLSA_CHECK_PROTECTED_USER_BY_TOKEN
    QueryClientRequest: Windows.Win32.Security.Authentication.Identity.PLSA_QUERY_CLIENT_REQUEST
    GetAppModeInfo: Windows.Win32.Security.Authentication.Identity.PLSA_GET_APP_MODE_INFO
    SetAppModeInfo: Windows.Win32.Security.Authentication.Identity.PLSA_SET_APP_MODE_INFO
class LSA_TOKEN_INFORMATION_NULL(Structure):
    ExpirationTime: Int64
    Groups: POINTER(Windows.Win32.Security.TOKEN_GROUPS_head)
LSA_TOKEN_INFORMATION_TYPE = Int32
LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationNull: LSA_TOKEN_INFORMATION_TYPE = 0
LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationV1: LSA_TOKEN_INFORMATION_TYPE = 1
LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationV2: LSA_TOKEN_INFORMATION_TYPE = 2
LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationV3: LSA_TOKEN_INFORMATION_TYPE = 3
class LSA_TOKEN_INFORMATION_V1(Structure):
    ExpirationTime: Int64
    User: Windows.Win32.Security.TOKEN_USER
    Groups: POINTER(Windows.Win32.Security.TOKEN_GROUPS_head)
    PrimaryGroup: Windows.Win32.Security.TOKEN_PRIMARY_GROUP
    Privileges: POINTER(Windows.Win32.Security.TOKEN_PRIVILEGES_head)
    Owner: Windows.Win32.Security.TOKEN_OWNER
    DefaultDacl: Windows.Win32.Security.TOKEN_DEFAULT_DACL
class LSA_TOKEN_INFORMATION_V3(Structure):
    ExpirationTime: Int64
    User: Windows.Win32.Security.TOKEN_USER
    Groups: POINTER(Windows.Win32.Security.TOKEN_GROUPS_head)
    PrimaryGroup: Windows.Win32.Security.TOKEN_PRIMARY_GROUP
    Privileges: POINTER(Windows.Win32.Security.TOKEN_PRIVILEGES_head)
    Owner: Windows.Win32.Security.TOKEN_OWNER
    DefaultDacl: Windows.Win32.Security.TOKEN_DEFAULT_DACL
    UserClaims: Windows.Win32.Security.TOKEN_USER_CLAIMS
    DeviceClaims: Windows.Win32.Security.TOKEN_DEVICE_CLAIMS
    DeviceGroups: POINTER(Windows.Win32.Security.TOKEN_GROUPS_head)
class LSA_TRANSLATED_NAME(Structure):
    Use: Windows.Win32.Security.SID_NAME_USE
    Name: Windows.Win32.Foundation.UNICODE_STRING
    DomainIndex: Int32
class LSA_TRANSLATED_SID(Structure):
    Use: Windows.Win32.Security.SID_NAME_USE
    RelativeId: UInt32
    DomainIndex: Int32
class LSA_TRANSLATED_SID2(Structure):
    Use: Windows.Win32.Security.SID_NAME_USE
    Sid: Windows.Win32.Foundation.PSID
    DomainIndex: Int32
    Flags: UInt32
class LSA_TRUST_INFORMATION(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
    Sid: Windows.Win32.Foundation.PSID
@winfunctype_pointer
def MAKE_SIGNATURE_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
MSV1_0 = UInt32
MSV1_0_PASSTHRU: MSV1_0 = 1
MSV1_0_GUEST_LOGON: MSV1_0 = 2
MSV1_0_AVID = Int32
MSV1_0_AVID_MsvAvEOL: MSV1_0_AVID = 0
MSV1_0_AVID_MsvAvNbComputerName: MSV1_0_AVID = 1
MSV1_0_AVID_MsvAvNbDomainName: MSV1_0_AVID = 2
MSV1_0_AVID_MsvAvDnsComputerName: MSV1_0_AVID = 3
MSV1_0_AVID_MsvAvDnsDomainName: MSV1_0_AVID = 4
MSV1_0_AVID_MsvAvDnsTreeName: MSV1_0_AVID = 5
MSV1_0_AVID_MsvAvFlags: MSV1_0_AVID = 6
MSV1_0_AVID_MsvAvTimestamp: MSV1_0_AVID = 7
MSV1_0_AVID_MsvAvRestrictions: MSV1_0_AVID = 8
MSV1_0_AVID_MsvAvTargetName: MSV1_0_AVID = 9
MSV1_0_AVID_MsvAvChannelBindings: MSV1_0_AVID = 10
class MSV1_0_AV_PAIR(Structure):
    AvId: UInt16
    AvLen: UInt16
class MSV1_0_CHANGEPASSWORD_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROTOCOL_MESSAGE_TYPE
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    AccountName: Windows.Win32.Foundation.UNICODE_STRING
    OldPassword: Windows.Win32.Foundation.UNICODE_STRING
    NewPassword: Windows.Win32.Foundation.UNICODE_STRING
    Impersonating: Windows.Win32.Foundation.BOOLEAN
class MSV1_0_CHANGEPASSWORD_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROTOCOL_MESSAGE_TYPE
    PasswordInfoValid: Windows.Win32.Foundation.BOOLEAN
    DomainPasswordInfo: Windows.Win32.Security.Authentication.Identity.DOMAIN_PASSWORD_INFORMATION
class MSV1_0_CREDENTIAL_KEY(Structure):
    Data: Byte * 20
MSV1_0_CREDENTIAL_KEY_TYPE = Int32
MSV1_0_CREDENTIAL_KEY_TYPE_InvalidCredKey: MSV1_0_CREDENTIAL_KEY_TYPE = 0
MSV1_0_CREDENTIAL_KEY_TYPE_DeprecatedIUMCredKey: MSV1_0_CREDENTIAL_KEY_TYPE = 1
MSV1_0_CREDENTIAL_KEY_TYPE_DomainUserCredKey: MSV1_0_CREDENTIAL_KEY_TYPE = 2
MSV1_0_CREDENTIAL_KEY_TYPE_LocalUserCredKey: MSV1_0_CREDENTIAL_KEY_TYPE = 3
MSV1_0_CREDENTIAL_KEY_TYPE_ExternallySuppliedCredKey: MSV1_0_CREDENTIAL_KEY_TYPE = 4
class MSV1_0_INTERACTIVE_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_LOGON_SUBMIT_TYPE
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
class MSV1_0_INTERACTIVE_PROFILE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROFILE_BUFFER_TYPE
    LogonCount: UInt16
    BadPasswordCount: UInt16
    LogonTime: Int64
    LogoffTime: Int64
    KickOffTime: Int64
    PasswordLastSet: Int64
    PasswordCanChange: Int64
    PasswordMustChange: Int64
    LogonScript: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectory: Windows.Win32.Foundation.UNICODE_STRING
    FullName: Windows.Win32.Foundation.UNICODE_STRING
    ProfilePath: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectoryDrive: Windows.Win32.Foundation.UNICODE_STRING
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    UserFlags: UInt32
class MSV1_0_IUM_SUPPLEMENTAL_CREDENTIAL(Structure):
    Version: UInt32
    EncryptedCredsSize: UInt32
    EncryptedCreds: Byte * 1
class MSV1_0_LM20_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_LOGON_SUBMIT_TYPE
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    Workstation: Windows.Win32.Foundation.UNICODE_STRING
    ChallengeToClient: Byte * 8
    CaseSensitiveChallengeResponse: Windows.Win32.System.Kernel.STRING
    CaseInsensitiveChallengeResponse: Windows.Win32.System.Kernel.STRING
    ParameterControl: UInt32
class MSV1_0_LM20_LOGON_PROFILE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROFILE_BUFFER_TYPE
    KickOffTime: Int64
    LogoffTime: Int64
    UserFlags: Windows.Win32.Security.Authentication.Identity.MSV_SUB_AUTHENTICATION_FILTER
    UserSessionKey: Byte * 16
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    LanmanSessionKey: Byte * 8
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    UserParameters: Windows.Win32.Foundation.UNICODE_STRING
MSV1_0_LOGON_SUBMIT_TYPE = Int32
MsV1_0InteractiveLogon: MSV1_0_LOGON_SUBMIT_TYPE = 2
MsV1_0Lm20Logon: MSV1_0_LOGON_SUBMIT_TYPE = 3
MsV1_0NetworkLogon: MSV1_0_LOGON_SUBMIT_TYPE = 4
MsV1_0SubAuthLogon: MSV1_0_LOGON_SUBMIT_TYPE = 5
MsV1_0WorkstationUnlockLogon: MSV1_0_LOGON_SUBMIT_TYPE = 7
MsV1_0S4ULogon: MSV1_0_LOGON_SUBMIT_TYPE = 12
MsV1_0VirtualLogon: MSV1_0_LOGON_SUBMIT_TYPE = 82
MsV1_0NoElevationLogon: MSV1_0_LOGON_SUBMIT_TYPE = 83
MsV1_0LuidLogon: MSV1_0_LOGON_SUBMIT_TYPE = 84
class MSV1_0_NTLM3_RESPONSE(Structure):
    Response: Byte * 16
    RespType: Byte
    HiRespType: Byte
    Flags: UInt16
    MsgWord: UInt32
    TimeStamp: UInt64
    ChallengeFromClient: Byte * 8
    AvPairsOff: UInt32
    Buffer: Byte * 1
class MSV1_0_PASSTHROUGH_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROTOCOL_MESSAGE_TYPE
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    PackageName: Windows.Win32.Foundation.UNICODE_STRING
    DataLength: UInt32
    LogonData: c_char_p_no
    Pad: UInt32
class MSV1_0_PASSTHROUGH_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROTOCOL_MESSAGE_TYPE
    Pad: UInt32
    DataLength: UInt32
    ValidationData: c_char_p_no
MSV1_0_PROFILE_BUFFER_TYPE = Int32
MsV1_0InteractiveProfile: MSV1_0_PROFILE_BUFFER_TYPE = 2
MsV1_0Lm20LogonProfile: MSV1_0_PROFILE_BUFFER_TYPE = 3
MsV1_0SmartCardProfile: MSV1_0_PROFILE_BUFFER_TYPE = 4
MSV1_0_PROTOCOL_MESSAGE_TYPE = Int32
MsV1_0Lm20ChallengeRequest: MSV1_0_PROTOCOL_MESSAGE_TYPE = 0
MsV1_0Lm20GetChallengeResponse: MSV1_0_PROTOCOL_MESSAGE_TYPE = 1
MsV1_0EnumerateUsers: MSV1_0_PROTOCOL_MESSAGE_TYPE = 2
MsV1_0GetUserInfo: MSV1_0_PROTOCOL_MESSAGE_TYPE = 3
MsV1_0ReLogonUsers: MSV1_0_PROTOCOL_MESSAGE_TYPE = 4
MsV1_0ChangePassword: MSV1_0_PROTOCOL_MESSAGE_TYPE = 5
MsV1_0ChangeCachedPassword: MSV1_0_PROTOCOL_MESSAGE_TYPE = 6
MsV1_0GenericPassthrough: MSV1_0_PROTOCOL_MESSAGE_TYPE = 7
MsV1_0CacheLogon: MSV1_0_PROTOCOL_MESSAGE_TYPE = 8
MsV1_0SubAuth: MSV1_0_PROTOCOL_MESSAGE_TYPE = 9
MsV1_0DeriveCredential: MSV1_0_PROTOCOL_MESSAGE_TYPE = 10
MsV1_0CacheLookup: MSV1_0_PROTOCOL_MESSAGE_TYPE = 11
MsV1_0SetProcessOption: MSV1_0_PROTOCOL_MESSAGE_TYPE = 12
MsV1_0ConfigLocalAliases: MSV1_0_PROTOCOL_MESSAGE_TYPE = 13
MsV1_0ClearCachedCredentials: MSV1_0_PROTOCOL_MESSAGE_TYPE = 14
MsV1_0LookupToken: MSV1_0_PROTOCOL_MESSAGE_TYPE = 15
MsV1_0ValidateAuth: MSV1_0_PROTOCOL_MESSAGE_TYPE = 16
MsV1_0CacheLookupEx: MSV1_0_PROTOCOL_MESSAGE_TYPE = 17
MsV1_0GetCredentialKey: MSV1_0_PROTOCOL_MESSAGE_TYPE = 18
MsV1_0SetThreadOption: MSV1_0_PROTOCOL_MESSAGE_TYPE = 19
MsV1_0DecryptDpapiMasterKey: MSV1_0_PROTOCOL_MESSAGE_TYPE = 20
MsV1_0GetStrongCredentialKey: MSV1_0_PROTOCOL_MESSAGE_TYPE = 21
MsV1_0TransferCred: MSV1_0_PROTOCOL_MESSAGE_TYPE = 22
MsV1_0ProvisionTbal: MSV1_0_PROTOCOL_MESSAGE_TYPE = 23
MsV1_0DeleteTbalSecrets: MSV1_0_PROTOCOL_MESSAGE_TYPE = 24
class MSV1_0_REMOTE_SUPPLEMENTAL_CREDENTIAL(Structure):
    Version: UInt32
    Flags: UInt32
    CredentialKey: Windows.Win32.Security.Authentication.Identity.MSV1_0_CREDENTIAL_KEY
    CredentialKeyType: Windows.Win32.Security.Authentication.Identity.MSV1_0_CREDENTIAL_KEY_TYPE
    EncryptedCredsSize: UInt32
    EncryptedCreds: Byte * 1
    _pack_ = 1
class MSV1_0_S4U_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_LOGON_SUBMIT_TYPE
    Flags: UInt32
    UserPrincipalName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
class MSV1_0_SUBAUTH_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_LOGON_SUBMIT_TYPE
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    Workstation: Windows.Win32.Foundation.UNICODE_STRING
    ChallengeToClient: Byte * 8
    AuthenticationInfo1: Windows.Win32.System.Kernel.STRING
    AuthenticationInfo2: Windows.Win32.System.Kernel.STRING
    ParameterControl: Windows.Win32.Security.Authentication.Identity.MSV_SUBAUTH_LOGON_PARAMETER_CONTROL
    SubAuthPackageId: UInt32
class MSV1_0_SUBAUTH_REQUEST(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROTOCOL_MESSAGE_TYPE
    SubAuthPackageId: UInt32
    SubAuthInfoLength: UInt32
    SubAuthSubmitBuffer: c_char_p_no
class MSV1_0_SUBAUTH_RESPONSE(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.MSV1_0_PROTOCOL_MESSAGE_TYPE
    SubAuthInfoLength: UInt32
    SubAuthReturnBuffer: c_char_p_no
class MSV1_0_SUPPLEMENTAL_CREDENTIAL(Structure):
    Version: UInt32
    Flags: Windows.Win32.Security.Authentication.Identity.MSV_SUPPLEMENTAL_CREDENTIAL_FLAGS
    LmPassword: Byte * 16
    NtPassword: Byte * 16
class MSV1_0_SUPPLEMENTAL_CREDENTIAL_V2(Structure):
    Version: UInt32
    Flags: UInt32
    NtPassword: Byte * 16
    CredentialKey: Windows.Win32.Security.Authentication.Identity.MSV1_0_CREDENTIAL_KEY
class MSV1_0_SUPPLEMENTAL_CREDENTIAL_V3(Structure):
    Version: UInt32
    Flags: UInt32
    CredentialKeyType: Windows.Win32.Security.Authentication.Identity.MSV1_0_CREDENTIAL_KEY_TYPE
    NtPassword: Byte * 16
    CredentialKey: Windows.Win32.Security.Authentication.Identity.MSV1_0_CREDENTIAL_KEY
    ShaPassword: Byte * 20
class MSV1_0_VALIDATION_INFO(Structure):
    LogoffTime: Int64
    KickoffTime: Int64
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    SessionKey: Windows.Win32.Security.Authentication.Identity.USER_SESSION_KEY
    Authoritative: Windows.Win32.Foundation.BOOLEAN
    UserFlags: UInt32
    WhichFields: UInt32
    UserId: UInt32
MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = UInt32
MSV1_0_CLEARTEXT_PASSWORD_ALLOWED: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 2
MSV1_0_UPDATE_LOGON_STATISTICS: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 4
MSV1_0_RETURN_USER_PARAMETERS: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 8
MSV1_0_DONT_TRY_GUEST_ACCOUNT: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 16
MSV1_0_ALLOW_SERVER_TRUST_ACCOUNT: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 32
MSV1_0_RETURN_PASSWORD_EXPIRY: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 64
MSV1_0_ALLOW_WORKSTATION_TRUST_ACCOUNT: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 2048
MSV1_0_TRY_GUEST_ACCOUNT_ONLY: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 256
MSV1_0_RETURN_PROFILE_PATH: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 512
MSV1_0_TRY_SPECIFIED_DOMAIN_ONLY: MSV_SUBAUTH_LOGON_PARAMETER_CONTROL = 1024
MSV_SUB_AUTHENTICATION_FILTER = UInt32
LOGON_GUEST: MSV_SUB_AUTHENTICATION_FILTER = 1
LOGON_NOENCRYPTION: MSV_SUB_AUTHENTICATION_FILTER = 2
LOGON_CACHED_ACCOUNT: MSV_SUB_AUTHENTICATION_FILTER = 4
LOGON_USED_LM_PASSWORD: MSV_SUB_AUTHENTICATION_FILTER = 8
LOGON_EXTRA_SIDS: MSV_SUB_AUTHENTICATION_FILTER = 32
LOGON_SUBAUTH_SESSION_KEY: MSV_SUB_AUTHENTICATION_FILTER = 64
LOGON_SERVER_TRUST_ACCOUNT: MSV_SUB_AUTHENTICATION_FILTER = 128
LOGON_PROFILE_PATH_RETURNED: MSV_SUB_AUTHENTICATION_FILTER = 1024
LOGON_RESOURCE_GROUPS: MSV_SUB_AUTHENTICATION_FILTER = 512
MSV_SUPPLEMENTAL_CREDENTIAL_FLAGS = UInt32
MSV1_0_CRED_LM_PRESENT: MSV_SUPPLEMENTAL_CREDENTIAL_FLAGS = 1
MSV1_0_CRED_NT_PRESENT: MSV_SUPPLEMENTAL_CREDENTIAL_FLAGS = 2
MSV1_0_CRED_VERSION: MSV_SUPPLEMENTAL_CREDENTIAL_FLAGS = 0
class NEGOTIATE_CALLER_NAME_REQUEST(Structure):
    MessageType: UInt32
    LogonId: Windows.Win32.Foundation.LUID
class NEGOTIATE_CALLER_NAME_RESPONSE(Structure):
    MessageType: UInt32
    CallerName: Windows.Win32.Foundation.PWSTR
NEGOTIATE_MESSAGES = Int32
NEGOTIATE_MESSAGES_NegEnumPackagePrefixes: NEGOTIATE_MESSAGES = 0
NEGOTIATE_MESSAGES_NegGetCallerName: NEGOTIATE_MESSAGES = 1
NEGOTIATE_MESSAGES_NegTransferCredentials: NEGOTIATE_MESSAGES = 2
NEGOTIATE_MESSAGES_NegMsgReserved1: NEGOTIATE_MESSAGES = 3
NEGOTIATE_MESSAGES_NegCallPackageMax: NEGOTIATE_MESSAGES = 4
class NEGOTIATE_PACKAGE_PREFIX(Structure):
    PackageId: UIntPtr
    PackageDataA: c_void_p
    PackageDataW: c_void_p
    PrefixLen: UIntPtr
    Prefix: Byte * 32
class NEGOTIATE_PACKAGE_PREFIXES(Structure):
    MessageType: UInt32
    PrefixCount: UInt32
    Offset: UInt32
    Pad: UInt32
class NETLOGON_GENERIC_INFO(Structure):
    Identity: Windows.Win32.Security.Authentication.Identity.NETLOGON_LOGON_IDENTITY_INFO
    PackageName: Windows.Win32.Foundation.UNICODE_STRING
    DataLength: UInt32
    LogonData: c_char_p_no
class NETLOGON_INTERACTIVE_INFO(Structure):
    Identity: Windows.Win32.Security.Authentication.Identity.NETLOGON_LOGON_IDENTITY_INFO
    LmOwfPassword: Windows.Win32.System.PasswordManagement.LM_OWF_PASSWORD
    NtOwfPassword: Windows.Win32.System.PasswordManagement.LM_OWF_PASSWORD
class NETLOGON_LOGON_IDENTITY_INFO(Structure):
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    ParameterControl: UInt32
    LogonId: Int64
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    Workstation: Windows.Win32.Foundation.UNICODE_STRING
NETLOGON_LOGON_INFO_CLASS = Int32
NETLOGON_LOGON_INFO_CLASS_NetlogonInteractiveInformation: NETLOGON_LOGON_INFO_CLASS = 1
NETLOGON_LOGON_INFO_CLASS_NetlogonNetworkInformation: NETLOGON_LOGON_INFO_CLASS = 2
NETLOGON_LOGON_INFO_CLASS_NetlogonServiceInformation: NETLOGON_LOGON_INFO_CLASS = 3
NETLOGON_LOGON_INFO_CLASS_NetlogonGenericInformation: NETLOGON_LOGON_INFO_CLASS = 4
NETLOGON_LOGON_INFO_CLASS_NetlogonInteractiveTransitiveInformation: NETLOGON_LOGON_INFO_CLASS = 5
NETLOGON_LOGON_INFO_CLASS_NetlogonNetworkTransitiveInformation: NETLOGON_LOGON_INFO_CLASS = 6
NETLOGON_LOGON_INFO_CLASS_NetlogonServiceTransitiveInformation: NETLOGON_LOGON_INFO_CLASS = 7
class NETLOGON_NETWORK_INFO(Structure):
    Identity: Windows.Win32.Security.Authentication.Identity.NETLOGON_LOGON_IDENTITY_INFO
    LmChallenge: Windows.Win32.Security.Authentication.Identity.CLEAR_BLOCK
    NtChallengeResponse: Windows.Win32.System.Kernel.STRING
    LmChallengeResponse: Windows.Win32.System.Kernel.STRING
class NETLOGON_SERVICE_INFO(Structure):
    Identity: Windows.Win32.Security.Authentication.Identity.NETLOGON_LOGON_IDENTITY_INFO
    LmOwfPassword: Windows.Win32.System.PasswordManagement.LM_OWF_PASSWORD
    NtOwfPassword: Windows.Win32.System.PasswordManagement.LM_OWF_PASSWORD
@winfunctype_pointer
def PKSEC_CREATE_CONTEXT_LIST(Type: Windows.Win32.Security.Authentication.Identity.KSEC_CONTEXT_TYPE) -> c_void_p: ...
@winfunctype_pointer
def PKSEC_DEREFERENCE_LIST_ENTRY(Entry: POINTER(Windows.Win32.Security.Authentication.Identity.KSEC_LIST_ENTRY_head), Delete: c_char_p_no) -> Void: ...
@winfunctype_pointer
def PKSEC_INSERT_LIST_ENTRY(List: c_void_p, Entry: POINTER(Windows.Win32.Security.Authentication.Identity.KSEC_LIST_ENTRY_head)) -> Void: ...
@winfunctype_pointer
def PKSEC_LOCATE_PKG_BY_ID(PackageId: UInt32) -> c_void_p: ...
@winfunctype_pointer
def PKSEC_REFERENCE_LIST_ENTRY(Entry: POINTER(Windows.Win32.Security.Authentication.Identity.KSEC_LIST_ENTRY_head), Signature: UInt32, RemoveNoRef: Windows.Win32.Foundation.BOOLEAN) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PKSEC_SERIALIZE_SCHANNEL_AUTH_DATA(pvAuthData: c_void_p, Size: POINTER(UInt32), SerializedData: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PKSEC_SERIALIZE_WINNT_AUTH_DATA(pvAuthData: c_void_p, Size: POINTER(UInt32), SerializedData: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
class PKU2U_CERTIFICATE_S4U_LOGON(Structure):
    MessageType: Windows.Win32.Security.Authentication.Identity.PKU2U_LOGON_SUBMIT_TYPE
    Flags: UInt32
    UserPrincipalName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    CertificateLength: UInt32
    Certificate: c_char_p_no
class PKU2U_CERT_BLOB(Structure):
    CertOffset: UInt32
    CertLength: UInt16
class PKU2U_CREDUI_CONTEXT(Structure):
    Version: UInt64
    cbHeaderLength: UInt16
    cbStructureLength: UInt32
    CertArrayCount: UInt16
    CertArrayOffset: UInt32
PKU2U_LOGON_SUBMIT_TYPE = Int32
PKU2U_LOGON_SUBMIT_TYPE_Pku2uCertificateS4ULogon: PKU2U_LOGON_SUBMIT_TYPE = 14
@winfunctype_pointer
def PLSA_ADD_CREDENTIAL(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), AuthenticationPackage: UInt32, PrimaryKeyValue: POINTER(Windows.Win32.System.Kernel.STRING_head), Credentials: POINTER(Windows.Win32.System.Kernel.STRING_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_ALLOCATE_CLIENT_BUFFER(ClientRequest: POINTER(c_void_p), LengthRequired: UInt32, ClientBaseAddress: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_ALLOCATE_LSA_HEAP(Length: UInt32) -> c_void_p: ...
@winfunctype_pointer
def PLSA_ALLOCATE_PRIVATE_HEAP(Length: UIntPtr) -> c_void_p: ...
@winfunctype_pointer
def PLSA_ALLOCATE_SHARED_MEMORY(SharedMem: c_void_p, Size: UInt32) -> c_void_p: ...
@winfunctype_pointer
def PLSA_AP_CALL_PACKAGE(ClientRequest: POINTER(c_void_p), ProtocolSubmitBuffer: c_void_p, ClientBufferBase: c_void_p, SubmitBufferLength: UInt32, ProtocolReturnBuffer: POINTER(c_void_p), ReturnBufferLength: POINTER(UInt32), ProtocolStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_CALL_PACKAGE_PASSTHROUGH(ClientRequest: POINTER(c_void_p), ProtocolSubmitBuffer: c_void_p, ClientBufferBase: c_void_p, SubmitBufferLength: UInt32, ProtocolReturnBuffer: POINTER(c_void_p), ReturnBufferLength: POINTER(UInt32), ProtocolStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_INITIALIZE_PACKAGE(AuthenticationPackageId: UInt32, LsaDispatchTable: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_DISPATCH_TABLE_head), Database: POINTER(Windows.Win32.System.Kernel.STRING_head), Confidentiality: POINTER(Windows.Win32.System.Kernel.STRING_head), AuthenticationPackageName: POINTER(POINTER(Windows.Win32.System.Kernel.STRING_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_LOGON_TERMINATED(LogonId: POINTER(Windows.Win32.Foundation.LUID_head)) -> Void: ...
@winfunctype_pointer
def PLSA_AP_LOGON_USER(ClientRequest: POINTER(c_void_p), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, AuthenticationInformation: c_void_p, ClientAuthenticationBase: c_void_p, AuthenticationInformationLength: UInt32, ProfileBuffer: POINTER(c_void_p), ProfileBufferLength: POINTER(UInt32), LogonId: POINTER(Windows.Win32.Foundation.LUID_head), SubStatus: POINTER(Int32), TokenInformationType: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TOKEN_INFORMATION_TYPE), TokenInformation: POINTER(c_void_p), AccountName: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), AuthenticatingAuthority: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_LOGON_USER_EX(ClientRequest: POINTER(c_void_p), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, AuthenticationInformation: c_void_p, ClientAuthenticationBase: c_void_p, AuthenticationInformationLength: UInt32, ProfileBuffer: POINTER(c_void_p), ProfileBufferLength: POINTER(UInt32), LogonId: POINTER(Windows.Win32.Foundation.LUID_head), SubStatus: POINTER(Int32), TokenInformationType: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TOKEN_INFORMATION_TYPE), TokenInformation: POINTER(c_void_p), AccountName: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), AuthenticatingAuthority: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), MachineName: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_LOGON_USER_EX2(ClientRequest: POINTER(c_void_p), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, ProtocolSubmitBuffer: c_void_p, ClientBufferBase: c_void_p, SubmitBufferSize: UInt32, ProfileBuffer: POINTER(c_void_p), ProfileBufferSize: POINTER(UInt32), LogonId: POINTER(Windows.Win32.Foundation.LUID_head), SubStatus: POINTER(Int32), TokenInformationType: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TOKEN_INFORMATION_TYPE), TokenInformation: POINTER(c_void_p), AccountName: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), AuthenticatingAuthority: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), MachineName: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), PrimaryCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_PRIMARY_CRED_head), SupplementalCredentials: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SUPPLEMENTAL_CRED_ARRAY_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_LOGON_USER_EX3(ClientRequest: POINTER(c_void_p), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, ProtocolSubmitBuffer: c_void_p, ClientBufferBase: c_void_p, SubmitBufferSize: UInt32, SurrogateLogon: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SURROGATE_LOGON_head), ProfileBuffer: POINTER(c_void_p), ProfileBufferSize: POINTER(UInt32), LogonId: POINTER(Windows.Win32.Foundation.LUID_head), SubStatus: POINTER(Int32), TokenInformationType: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_TOKEN_INFORMATION_TYPE), TokenInformation: POINTER(c_void_p), AccountName: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), AuthenticatingAuthority: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), MachineName: POINTER(POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)), PrimaryCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_PRIMARY_CRED_head), SupplementalCredentials: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SUPPLEMENTAL_CRED_ARRAY_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_POST_LOGON_USER_SURROGATE(ClientRequest: POINTER(c_void_p), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, ProtocolSubmitBuffer: c_void_p, ClientBufferBase: c_void_p, SubmitBufferSize: UInt32, SurrogateLogon: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SURROGATE_LOGON_head), ProfileBuffer: c_void_p, ProfileBufferSize: UInt32, LogonId: POINTER(Windows.Win32.Foundation.LUID_head), Status: Windows.Win32.Foundation.NTSTATUS, SubStatus: Windows.Win32.Foundation.NTSTATUS, TokenInformationType: Windows.Win32.Security.Authentication.Identity.LSA_TOKEN_INFORMATION_TYPE, TokenInformation: c_void_p, AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), AuthenticatingAuthority: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), MachineName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), PrimaryCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_PRIMARY_CRED_head), SupplementalCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SUPPLEMENTAL_CRED_ARRAY_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AP_PRE_LOGON_USER_SURROGATE(ClientRequest: POINTER(c_void_p), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, ProtocolSubmitBuffer: c_void_p, ClientBufferBase: c_void_p, SubmitBufferSize: UInt32, SurrogateLogon: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SURROGATE_LOGON_head), SubStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AUDIT_ACCOUNT_LOGON(AuditId: UInt32, Success: Windows.Win32.Foundation.BOOLEAN, Source: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ClientName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), MappedName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Status: Windows.Win32.Foundation.NTSTATUS) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_AUDIT_LOGON(Status: Windows.Win32.Foundation.NTSTATUS, SubStatus: Windows.Win32.Foundation.NTSTATUS, AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), AuthenticatingAuthority: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), WorkstationName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), UserSid: Windows.Win32.Foundation.PSID, LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, TokenSource: POINTER(Windows.Win32.Security.TOKEN_SOURCE_head), LogonId: POINTER(Windows.Win32.Foundation.LUID_head)) -> Void: ...
@winfunctype_pointer
def PLSA_AUDIT_LOGON_EX(Status: Windows.Win32.Foundation.NTSTATUS, SubStatus: Windows.Win32.Foundation.NTSTATUS, AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), AuthenticatingAuthority: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), WorkstationName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), UserSid: Windows.Win32.Foundation.PSID, LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, ImpersonationLevel: Windows.Win32.Security.SECURITY_IMPERSONATION_LEVEL, TokenSource: POINTER(Windows.Win32.Security.TOKEN_SOURCE_head), LogonId: POINTER(Windows.Win32.Foundation.LUID_head)) -> Void: ...
@winfunctype_pointer
def PLSA_CALLBACK_FUNCTION(Argument1: UIntPtr, Argument2: UIntPtr, InputBuffer: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), OutputBuffer: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CALL_PACKAGE(AuthenticationPackage: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ProtocolSubmitBuffer: c_void_p, SubmitBufferLength: UInt32, ProtocolReturnBuffer: POINTER(c_void_p), ReturnBufferLength: POINTER(UInt32), ProtocolStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CALL_PACKAGEEX(AuthenticationPackage: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ClientBufferBase: c_void_p, ProtocolSubmitBuffer: c_void_p, SubmitBufferLength: UInt32, ProtocolReturnBuffer: POINTER(c_void_p), ReturnBufferLength: POINTER(UInt32), ProtocolStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CALL_PACKAGE_PASSTHROUGH(AuthenticationPackage: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ClientBufferBase: c_void_p, ProtocolSubmitBuffer: c_void_p, SubmitBufferLength: UInt32, ProtocolReturnBuffer: POINTER(c_void_p), ReturnBufferLength: POINTER(UInt32), ProtocolStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CANCEL_NOTIFICATION(NotifyHandle: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CHECK_PROTECTED_USER_BY_TOKEN(UserToken: Windows.Win32.Foundation.HANDLE, ProtectedUser: POINTER(Windows.Win32.Foundation.BOOLEAN)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CLIENT_CALLBACK(Callback: Windows.Win32.Foundation.PSTR, Argument1: UIntPtr, Argument2: UIntPtr, Input: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), Output: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CLOSE_SAM_USER(UserHandle: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CONVERT_AUTH_DATA_TO_TOKEN(UserAuthData: c_void_p, UserAuthDataSize: UInt32, ImpersonationLevel: Windows.Win32.Security.SECURITY_IMPERSONATION_LEVEL, TokenSource: POINTER(Windows.Win32.Security.TOKEN_SOURCE_head), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, AuthorityName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Token: POINTER(Windows.Win32.Foundation.HANDLE), LogonId: POINTER(Windows.Win32.Foundation.LUID_head), AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), SubStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_COPY_FROM_CLIENT_BUFFER(ClientRequest: POINTER(c_void_p), Length: UInt32, BufferToCopy: c_void_p, ClientBaseAddress: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_COPY_TO_CLIENT_BUFFER(ClientRequest: POINTER(c_void_p), Length: UInt32, ClientBaseAddress: c_void_p, BufferToCopy: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CRACK_SINGLE_NAME(FormatOffered: UInt32, PerformAtGC: Windows.Win32.Foundation.BOOLEAN, NameInput: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Prefix: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), RequestedFormat: UInt32, CrackedName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), DnsDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), SubStatus: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CREATE_LOGON_SESSION(LogonId: POINTER(Windows.Win32.Foundation.LUID_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CREATE_SHARED_MEMORY(MaxSize: UInt32, InitialSize: UInt32) -> c_void_p: ...
@winfunctype_pointer
def PLSA_CREATE_THREAD(SecurityAttributes: POINTER(Windows.Win32.Security.SECURITY_ATTRIBUTES_head), StackSize: UInt32, StartFunction: Windows.Win32.System.Threading.LPTHREAD_START_ROUTINE, ThreadParameter: c_void_p, CreationFlags: UInt32, ThreadId: POINTER(UInt32)) -> Windows.Win32.Foundation.HANDLE: ...
@winfunctype_pointer
def PLSA_CREATE_TOKEN(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), TokenSource: POINTER(Windows.Win32.Security.TOKEN_SOURCE_head), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, ImpersonationLevel: Windows.Win32.Security.SECURITY_IMPERSONATION_LEVEL, TokenInformationType: Windows.Win32.Security.Authentication.Identity.LSA_TOKEN_INFORMATION_TYPE, TokenInformation: c_void_p, TokenGroups: POINTER(Windows.Win32.Security.TOKEN_GROUPS_head), AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), AuthorityName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Workstation: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ProfilePath: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Token: POINTER(Windows.Win32.Foundation.HANDLE), SubStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_CREATE_TOKEN_EX(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), TokenSource: POINTER(Windows.Win32.Security.TOKEN_SOURCE_head), LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, ImpersonationLevel: Windows.Win32.Security.SECURITY_IMPERSONATION_LEVEL, TokenInformationType: Windows.Win32.Security.Authentication.Identity.LSA_TOKEN_INFORMATION_TYPE, TokenInformation: c_void_p, TokenGroups: POINTER(Windows.Win32.Security.TOKEN_GROUPS_head), Workstation: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ProfilePath: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), SessionInformation: c_void_p, SessionInformationType: Windows.Win32.Security.Authentication.Identity.SECPKG_SESSIONINFO_TYPE, Token: POINTER(Windows.Win32.Foundation.HANDLE), SubStatus: POINTER(Int32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_DELETE_CREDENTIAL(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), AuthenticationPackage: UInt32, PrimaryKeyValue: POINTER(Windows.Win32.System.Kernel.STRING_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_DELETE_LOGON_SESSION(LogonId: POINTER(Windows.Win32.Foundation.LUID_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_DELETE_SHARED_MEMORY(SharedMem: c_void_p) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype_pointer
def PLSA_DUPLICATE_HANDLE(SourceHandle: Windows.Win32.Foundation.HANDLE, DestionationHandle: POINTER(Windows.Win32.Foundation.HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_EXPAND_AUTH_DATA_FOR_DOMAIN(UserAuthData: c_char_p_no, UserAuthDataSize: UInt32, Reserved: c_void_p, ExpandedAuthData: POINTER(c_char_p_no), ExpandedAuthDataSize: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_FREE_CLIENT_BUFFER(ClientRequest: POINTER(c_void_p), ClientBaseAddress: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_FREE_LSA_HEAP(Base: c_void_p) -> Void: ...
@winfunctype_pointer
def PLSA_FREE_PRIVATE_HEAP(Base: c_void_p) -> Void: ...
@winfunctype_pointer
def PLSA_FREE_SHARED_MEMORY(SharedMem: c_void_p, Memory: c_void_p) -> Void: ...
@winfunctype_pointer
def PLSA_GET_APP_MODE_INFO(UserFunction: POINTER(UInt32), Argument1: POINTER(UIntPtr), Argument2: POINTER(UIntPtr), UserData: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), ReturnToLsa: POINTER(Windows.Win32.Foundation.BOOLEAN)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_GET_AUTH_DATA_FOR_USER(Name: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), NameType: Windows.Win32.Security.Authentication.Identity.SECPKG_NAME_TYPE, Prefix: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), UserAuthData: POINTER(c_char_p_no), UserAuthDataSize: POINTER(UInt32), UserFlatName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_GET_CALL_INFO(Info: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_CALL_INFO_head)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype_pointer
def PLSA_GET_CLIENT_INFO(ClientInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_CLIENT_INFO_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_GET_CREDENTIALS(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), AuthenticationPackage: UInt32, QueryContext: POINTER(UInt32), RetrieveAllCredentials: Windows.Win32.Foundation.BOOLEAN, PrimaryKeyValue: POINTER(Windows.Win32.System.Kernel.STRING_head), PrimaryKeyLength: POINTER(UInt32), Credentials: POINTER(Windows.Win32.System.Kernel.STRING_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_GET_EXTENDED_CALL_FLAGS(Flags: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_GET_SERVICE_ACCOUNT_PASSWORD(AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), DomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), CredFetch: Windows.Win32.Security.Authentication.Identity.CRED_FETCH, FileTimeExpiry: POINTER(Windows.Win32.Foundation.FILETIME_head), CurrentPassword: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), PreviousPassword: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), FileTimeCurrPwdValidForOutbound: POINTER(Windows.Win32.Foundation.FILETIME_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_GET_USER_AUTH_DATA(UserHandle: c_void_p, UserAuthData: POINTER(c_char_p_no), UserAuthDataSize: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_GET_USER_CREDENTIALS(UserHandle: c_void_p, PrimaryCreds: POINTER(c_void_p), PrimaryCredsSize: POINTER(UInt32), SupplementalCreds: POINTER(c_void_p), SupplementalCredsSize: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_IMPERSONATE_CLIENT() -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_LOCATE_PKG_BY_ID(PackgeId: UInt32) -> c_void_p: ...
@winfunctype_pointer
def PLSA_MAP_BUFFER(InputBuffer: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), OutputBuffer: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_OPEN_SAM_USER(Name: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), NameType: Windows.Win32.Security.Authentication.Identity.SECPKG_NAME_TYPE, Prefix: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), AllowGuest: Windows.Win32.Foundation.BOOLEAN, Reserved: UInt32, UserHandle: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_OPEN_TOKEN_BY_LOGON_ID(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), RetTokenHandle: POINTER(Windows.Win32.Foundation.HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_PROTECT_MEMORY(Buffer: c_void_p, BufferSize: UInt32) -> Void: ...
@winfunctype_pointer
def PLSA_QUERY_CLIENT_REQUEST(ClientRequest: POINTER(c_void_p), QueryType: UInt32, ReplyBuffer: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_REDIRECTED_LOGON_CALLBACK(RedirectedLogonHandle: Windows.Win32.Foundation.HANDLE, Buffer: c_void_p, BufferLength: UInt32, ReturnBuffer: POINTER(c_void_p), ReturnBufferLength: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_REDIRECTED_LOGON_CLEANUP_CALLBACK(RedirectedLogonHandle: Windows.Win32.Foundation.HANDLE) -> Void: ...
@winfunctype_pointer
def PLSA_REDIRECTED_LOGON_GET_LOGON_CREDS(RedirectedLogonHandle: Windows.Win32.Foundation.HANDLE, LogonBuffer: POINTER(c_char_p_no), LogonBufferLength: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_REDIRECTED_LOGON_GET_SUPP_CREDS(RedirectedLogonHandle: Windows.Win32.Foundation.HANDLE, SupplementalCredentials: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SUPPLEMENTAL_CRED_ARRAY_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_REDIRECTED_LOGON_INIT(RedirectedLogonHandle: Windows.Win32.Foundation.HANDLE, PackageName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), SessionId: UInt32, LogonId: POINTER(Windows.Win32.Foundation.LUID_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_REGISTER_CALLBACK(CallbackId: UInt32, Callback: Windows.Win32.Security.Authentication.Identity.PLSA_CALLBACK_FUNCTION) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_REGISTER_NOTIFICATION(StartFunction: Windows.Win32.System.Threading.LPTHREAD_START_ROUTINE, Parameter: c_void_p, NotificationType: UInt32, NotificationClass: UInt32, NotificationFlags: UInt32, IntervalMinutes: UInt32, WaitEvent: Windows.Win32.Foundation.HANDLE) -> Windows.Win32.Foundation.HANDLE: ...
@winfunctype_pointer
def PLSA_SAVE_SUPPLEMENTAL_CREDENTIALS(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), SupplementalCredSize: UInt32, SupplementalCreds: c_void_p, Synchronous: Windows.Win32.Foundation.BOOLEAN) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_SET_APP_MODE_INFO(UserFunction: UInt32, Argument1: UIntPtr, Argument2: UIntPtr, UserData: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), ReturnToLsa: Windows.Win32.Foundation.BOOLEAN) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_UNLOAD_PACKAGE() -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PLSA_UPDATE_PRIMARY_CREDENTIALS(PrimaryCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_PRIMARY_CRED_head), Credentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SUPPLEMENTAL_CRED_ARRAY_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
class POLICY_ACCOUNT_DOMAIN_INFO(Structure):
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    DomainSid: Windows.Win32.Foundation.PSID
class POLICY_AUDIT_CATEGORIES_INFO(Structure):
    MaximumCategoryCount: UInt32
    SubCategoriesInfo: POINTER(Windows.Win32.Security.Authentication.Identity.POLICY_AUDIT_SUBCATEGORIES_INFO_head)
class POLICY_AUDIT_EVENTS_INFO(Structure):
    AuditingMode: Windows.Win32.Foundation.BOOLEAN
    EventAuditingOptions: POINTER(UInt32)
    MaximumAuditEventCount: UInt32
POLICY_AUDIT_EVENT_TYPE = Int32
POLICY_AUDIT_EVENT_TYPE_AuditCategorySystem: POLICY_AUDIT_EVENT_TYPE = 0
POLICY_AUDIT_EVENT_TYPE_AuditCategoryLogon: POLICY_AUDIT_EVENT_TYPE = 1
POLICY_AUDIT_EVENT_TYPE_AuditCategoryObjectAccess: POLICY_AUDIT_EVENT_TYPE = 2
POLICY_AUDIT_EVENT_TYPE_AuditCategoryPrivilegeUse: POLICY_AUDIT_EVENT_TYPE = 3
POLICY_AUDIT_EVENT_TYPE_AuditCategoryDetailedTracking: POLICY_AUDIT_EVENT_TYPE = 4
POLICY_AUDIT_EVENT_TYPE_AuditCategoryPolicyChange: POLICY_AUDIT_EVENT_TYPE = 5
POLICY_AUDIT_EVENT_TYPE_AuditCategoryAccountManagement: POLICY_AUDIT_EVENT_TYPE = 6
POLICY_AUDIT_EVENT_TYPE_AuditCategoryDirectoryServiceAccess: POLICY_AUDIT_EVENT_TYPE = 7
POLICY_AUDIT_EVENT_TYPE_AuditCategoryAccountLogon: POLICY_AUDIT_EVENT_TYPE = 8
class POLICY_AUDIT_FULL_QUERY_INFO(Structure):
    ShutDownOnFull: Windows.Win32.Foundation.BOOLEAN
    LogIsFull: Windows.Win32.Foundation.BOOLEAN
class POLICY_AUDIT_FULL_SET_INFO(Structure):
    ShutDownOnFull: Windows.Win32.Foundation.BOOLEAN
class POLICY_AUDIT_LOG_INFO(Structure):
    AuditLogPercentFull: UInt32
    MaximumLogSize: UInt32
    AuditRetentionPeriod: Int64
    AuditLogFullShutdownInProgress: Windows.Win32.Foundation.BOOLEAN
    TimeToShutdown: Int64
    NextAuditRecordId: UInt32
class POLICY_AUDIT_SID_ARRAY(Structure):
    UsersCount: UInt32
    UserSidArray: POINTER(Windows.Win32.Foundation.PSID)
class POLICY_AUDIT_SUBCATEGORIES_INFO(Structure):
    MaximumSubCategoryCount: UInt32
    EventAuditingOptions: POINTER(UInt32)
class POLICY_DEFAULT_QUOTA_INFO(Structure):
    QuotaLimits: Windows.Win32.Security.QUOTA_LIMITS
class POLICY_DNS_DOMAIN_INFO(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
    DnsDomainName: Windows.Win32.Foundation.UNICODE_STRING
    DnsForestName: Windows.Win32.Foundation.UNICODE_STRING
    DomainGuid: Guid
    Sid: Windows.Win32.Foundation.PSID
class POLICY_DOMAIN_EFS_INFO(Structure):
    InfoLength: UInt32
    EfsBlob: c_char_p_no
POLICY_DOMAIN_INFORMATION_CLASS = Int32
POLICY_DOMAIN_INFORMATION_CLASS_PolicyDomainEfsInformation: POLICY_DOMAIN_INFORMATION_CLASS = 2
POLICY_DOMAIN_INFORMATION_CLASS_PolicyDomainKerberosTicketInformation: POLICY_DOMAIN_INFORMATION_CLASS = 3
class POLICY_DOMAIN_KERBEROS_TICKET_INFO(Structure):
    AuthenticationOptions: UInt32
    MaxServiceTicketAge: Int64
    MaxTicketAge: Int64
    MaxRenewAge: Int64
    MaxClockSkew: Int64
    Reserved: Int64
POLICY_INFORMATION_CLASS = Int32
POLICY_INFORMATION_CLASS_PolicyAuditLogInformation: POLICY_INFORMATION_CLASS = 1
POLICY_INFORMATION_CLASS_PolicyAuditEventsInformation: POLICY_INFORMATION_CLASS = 2
POLICY_INFORMATION_CLASS_PolicyPrimaryDomainInformation: POLICY_INFORMATION_CLASS = 3
POLICY_INFORMATION_CLASS_PolicyPdAccountInformation: POLICY_INFORMATION_CLASS = 4
POLICY_INFORMATION_CLASS_PolicyAccountDomainInformation: POLICY_INFORMATION_CLASS = 5
POLICY_INFORMATION_CLASS_PolicyLsaServerRoleInformation: POLICY_INFORMATION_CLASS = 6
POLICY_INFORMATION_CLASS_PolicyReplicaSourceInformation: POLICY_INFORMATION_CLASS = 7
POLICY_INFORMATION_CLASS_PolicyDefaultQuotaInformation: POLICY_INFORMATION_CLASS = 8
POLICY_INFORMATION_CLASS_PolicyModificationInformation: POLICY_INFORMATION_CLASS = 9
POLICY_INFORMATION_CLASS_PolicyAuditFullSetInformation: POLICY_INFORMATION_CLASS = 10
POLICY_INFORMATION_CLASS_PolicyAuditFullQueryInformation: POLICY_INFORMATION_CLASS = 11
POLICY_INFORMATION_CLASS_PolicyDnsDomainInformation: POLICY_INFORMATION_CLASS = 12
POLICY_INFORMATION_CLASS_PolicyDnsDomainInformationInt: POLICY_INFORMATION_CLASS = 13
POLICY_INFORMATION_CLASS_PolicyLocalAccountDomainInformation: POLICY_INFORMATION_CLASS = 14
POLICY_INFORMATION_CLASS_PolicyMachineAccountInformation: POLICY_INFORMATION_CLASS = 15
POLICY_INFORMATION_CLASS_PolicyLastEntry: POLICY_INFORMATION_CLASS = 16
POLICY_LSA_SERVER_ROLE = Int32
POLICY_LSA_SERVER_ROLE_PolicyServerRoleBackup: POLICY_LSA_SERVER_ROLE = 2
POLICY_LSA_SERVER_ROLE_PolicyServerRolePrimary: POLICY_LSA_SERVER_ROLE = 3
class POLICY_LSA_SERVER_ROLE_INFO(Structure):
    LsaServerRole: Windows.Win32.Security.Authentication.Identity.POLICY_LSA_SERVER_ROLE
class POLICY_MACHINE_ACCT_INFO(Structure):
    Rid: UInt32
    Sid: Windows.Win32.Foundation.PSID
class POLICY_MODIFICATION_INFO(Structure):
    ModifiedId: Int64
    DatabaseCreationTime: Int64
POLICY_NOTIFICATION_INFORMATION_CLASS = Int32
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyAuditEventsInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 1
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyAccountDomainInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 2
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyServerRoleInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 3
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyDnsDomainInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 4
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyDomainEfsInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 5
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyDomainKerberosTicketInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 6
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyMachineAccountPasswordInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 7
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyGlobalSaclInformation: POLICY_NOTIFICATION_INFORMATION_CLASS = 8
POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyMax: POLICY_NOTIFICATION_INFORMATION_CLASS = 9
class POLICY_PD_ACCOUNT_INFO(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
class POLICY_PRIMARY_DOMAIN_INFO(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
    Sid: Windows.Win32.Foundation.PSID
class POLICY_REPLICA_SOURCE_INFO(Structure):
    ReplicaSource: Windows.Win32.Foundation.UNICODE_STRING
    ReplicaAccountName: Windows.Win32.Foundation.UNICODE_STRING
@winfunctype_pointer
def PSAM_CREDENTIAL_UPDATE_FREE_ROUTINE(p: c_void_p) -> Void: ...
@winfunctype_pointer
def PSAM_CREDENTIAL_UPDATE_NOTIFY_ROUTINE(ClearPassword: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), OldCredentials: c_void_p, OldCredentialSize: UInt32, UserAccountControl: UInt32, UPN: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), UserName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), NetbiosDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), DnsDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), NewCredentials: POINTER(c_void_p), NewCredentialSize: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PSAM_CREDENTIAL_UPDATE_REGISTER_MAPPED_ENTRYPOINTS_ROUTINE(Table: POINTER(Windows.Win32.Security.Authentication.Identity.SAM_REGISTER_MAPPING_TABLE_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def PSAM_CREDENTIAL_UPDATE_REGISTER_ROUTINE(CredentialName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype_pointer
def PSAM_INIT_NOTIFICATION_ROUTINE() -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype_pointer
def PSAM_PASSWORD_FILTER_ROUTINE(AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), FullName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Password: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), SetOperation: Windows.Win32.Foundation.BOOLEAN) -> Windows.Win32.Foundation.BOOLEAN: ...
@winfunctype_pointer
def PSAM_PASSWORD_NOTIFICATION_ROUTINE(UserName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), RelativeId: UInt32, NewPassword: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
class PctPublicKey(Structure):
    Type: UInt32
    cbKey: UInt32
    pKey: Byte * 1
@winfunctype_pointer
def QUERY_CONTEXT_ATTRIBUTES_EX_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_CONTEXT_ATTRIBUTES_EX_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_CONTEXT_ATTRIBUTES_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_CONTEXT_ATTRIBUTES_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_CREDENTIALS_ATTRIBUTES_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_CREDENTIALS_ATTRIBUTES_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_SECURITY_CONTEXT_TOKEN_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(c_void_p)) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_SECURITY_PACKAGE_INFO_FN_A(param0: POINTER(SByte), param1: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def QUERY_SECURITY_PACKAGE_INFO_FN_W(param0: POINTER(UInt16), param1: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head))) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def REVERT_SECURITY_CONTEXT_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head)) -> Windows.Win32.Foundation.HRESULT: ...
class SAM_REGISTER_MAPPING_ELEMENT(Structure):
    Original: Windows.Win32.Foundation.PSTR
    Mapped: Windows.Win32.Foundation.PSTR
    Continuable: Windows.Win32.Foundation.BOOLEAN
class SAM_REGISTER_MAPPING_LIST(Structure):
    Count: UInt32
    Elements: POINTER(Windows.Win32.Security.Authentication.Identity.SAM_REGISTER_MAPPING_ELEMENT_head)
class SAM_REGISTER_MAPPING_TABLE(Structure):
    Count: UInt32
    Lists: POINTER(Windows.Win32.Security.Authentication.Identity.SAM_REGISTER_MAPPING_LIST_head)
SASL_AUTHZID_STATE = Int32
Sasl_AuthZIDForbidden: SASL_AUTHZID_STATE = 0
Sasl_AuthZIDProcessed: SASL_AUTHZID_STATE = 1
class SCHANNEL_ALERT_TOKEN(Structure):
    dwTokenType: UInt32
    dwAlertType: Windows.Win32.Security.Authentication.Identity.SCHANNEL_ALERT_TOKEN_ALERT_TYPE
    dwAlertNumber: UInt32
SCHANNEL_ALERT_TOKEN_ALERT_TYPE = UInt32
TLS1_ALERT_WARNING: SCHANNEL_ALERT_TOKEN_ALERT_TYPE = 1
TLS1_ALERT_FATAL: SCHANNEL_ALERT_TOKEN_ALERT_TYPE = 2
class SCHANNEL_CERT_HASH(Structure):
    dwLength: UInt32
    dwFlags: UInt32
    hProv: UIntPtr
    ShaHash: Byte * 20
class SCHANNEL_CERT_HASH_STORE(Structure):
    dwLength: UInt32
    dwFlags: UInt32
    hProv: UIntPtr
    ShaHash: Byte * 20
    pwszStoreName: Char * 128
class SCHANNEL_CLIENT_SIGNATURE(Structure):
    cbLength: UInt32
    aiHash: UInt32
    cbHash: UInt32
    HashValue: Byte * 36
    CertThumbprint: Byte * 20
class SCHANNEL_CRED(Structure):
    dwVersion: UInt32
    cCreds: UInt32
    paCred: POINTER(POINTER(Windows.Win32.Security.Cryptography.CERT_CONTEXT_head))
    hRootStore: Windows.Win32.Security.Cryptography.HCERTSTORE
    cMappers: UInt32
    aphMappers: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity._HMAPPER_head))
    cSupportedAlgs: UInt32
    palgSupportedAlgs: POINTER(UInt32)
    grbitEnabledProtocols: UInt32
    dwMinimumCipherStrength: UInt32
    dwMaximumCipherStrength: UInt32
    dwSessionLifespan: UInt32
    dwFlags: Windows.Win32.Security.Authentication.Identity.SCHANNEL_CRED_FLAGS
    dwCredFormat: UInt32
SCHANNEL_CRED_FLAGS = UInt32
SCH_CRED_AUTO_CRED_VALIDATION: SCHANNEL_CRED_FLAGS = 32
SCH_CRED_CACHE_ONLY_URL_RETRIEVAL_ON_CREATE: SCHANNEL_CRED_FLAGS = 131072
SCH_DISABLE_RECONNECTS: SCHANNEL_CRED_FLAGS = 128
SCH_CRED_IGNORE_NO_REVOCATION_CHECK: SCHANNEL_CRED_FLAGS = 2048
SCH_CRED_IGNORE_REVOCATION_OFFLINE: SCHANNEL_CRED_FLAGS = 4096
SCH_CRED_MANUAL_CRED_VALIDATION: SCHANNEL_CRED_FLAGS = 8
SCH_CRED_NO_DEFAULT_CREDS: SCHANNEL_CRED_FLAGS = 16
SCH_CRED_NO_SERVERNAME_CHECK: SCHANNEL_CRED_FLAGS = 4
SCH_CRED_NO_SYSTEM_MAPPER: SCHANNEL_CRED_FLAGS = 2
SCH_CRED_REVOCATION_CHECK_CHAIN: SCHANNEL_CRED_FLAGS = 512
SCH_CRED_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT: SCHANNEL_CRED_FLAGS = 1024
SCH_CRED_REVOCATION_CHECK_END_CERT: SCHANNEL_CRED_FLAGS = 256
SCH_CRED_USE_DEFAULT_CREDS: SCHANNEL_CRED_FLAGS = 64
SCH_SEND_AUX_RECORD: SCHANNEL_CRED_FLAGS = 2097152
SCH_SEND_ROOT_CERT: SCHANNEL_CRED_FLAGS = 262144
SCH_USE_STRONG_CRYPTO: SCHANNEL_CRED_FLAGS = 4194304
SCH_USE_PRESHAREDKEY_ONLY: SCHANNEL_CRED_FLAGS = 8388608
class SCHANNEL_SESSION_TOKEN(Structure):
    dwTokenType: UInt32
    dwFlags: Windows.Win32.Security.Authentication.Identity.SCHANNEL_SESSION_TOKEN_FLAGS
SCHANNEL_SESSION_TOKEN_FLAGS = UInt32
SSL_SESSION_ENABLE_RECONNECTS: SCHANNEL_SESSION_TOKEN_FLAGS = 1
SSL_SESSION_DISABLE_RECONNECTS: SCHANNEL_SESSION_TOKEN_FLAGS = 2
class SCH_CRED(Structure):
    dwVersion: UInt32
    cCreds: UInt32
    paSecret: POINTER(c_void_p)
    paPublic: POINTER(c_void_p)
    cMappers: UInt32
    aphMappers: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity._HMAPPER_head))
class SCH_CRED_PUBLIC_CERTCHAIN(Structure):
    dwType: UInt32
    cbCertChain: UInt32
    pCertChain: c_char_p_no
class SCH_CRED_SECRET_CAPI(Structure):
    dwType: UInt32
    hProv: UIntPtr
class SCH_CRED_SECRET_PRIVKEY(Structure):
    dwType: UInt32
    pPrivateKey: c_char_p_no
    cbPrivateKey: UInt32
    pszPassword: Windows.Win32.Foundation.PSTR
class SCH_EXTENSION_DATA(Structure):
    ExtensionType: UInt16
    pExtData: c_char_p_no
    cbExtData: UInt32
class SECPKG_APP_MODE_INFO(Structure):
    UserFunction: UInt32
    Argument1: UIntPtr
    Argument2: UIntPtr
    UserData: Windows.Win32.Security.Authentication.Identity.SecBuffer
    ReturnToLsa: Windows.Win32.Foundation.BOOLEAN
SECPKG_ATTR = UInt32
SECPKG_ATTR_C_ACCESS_TOKEN: SECPKG_ATTR = 2147483666
SECPKG_ATTR_C_FULL_ACCESS_TOKEN: SECPKG_ATTR = 2147483778
SECPKG_ATTR_CERT_TRUST_STATUS: SECPKG_ATTR = 2147483780
SECPKG_ATTR_CREDS: SECPKG_ATTR = 2147483776
SECPKG_ATTR_CREDS_2: SECPKG_ATTR = 2147483782
SECPKG_ATTR_NEGOTIATION_PACKAGE: SECPKG_ATTR = 2147483777
SECPKG_ATTR_PACKAGE_INFO: SECPKG_ATTR = 10
SECPKG_ATTR_SERVER_AUTH_FLAGS: SECPKG_ATTR = 2147483779
SECPKG_ATTR_SIZES: SECPKG_ATTR = 0
SECPKG_ATTR_SUBJECT_SECURITY_ATTRIBUTES: SECPKG_ATTR = 124
SECPKG_ATTR_APP_DATA: SECPKG_ATTR = 94
SECPKG_ATTR_EAP_PRF_INFO: SECPKG_ATTR = 101
SECPKG_ATTR_EARLY_START: SECPKG_ATTR = 105
SECPKG_ATTR_DTLS_MTU: SECPKG_ATTR = 34
SECPKG_ATTR_KEYING_MATERIAL_INFO: SECPKG_ATTR = 106
SECPKG_ATTR_ACCESS_TOKEN: SECPKG_ATTR = 18
SECPKG_ATTR_AUTHORITY: SECPKG_ATTR = 6
SECPKG_ATTR_CLIENT_SPECIFIED_TARGET: SECPKG_ATTR = 27
SECPKG_ATTR_CONNECTION_INFO: SECPKG_ATTR = 90
SECPKG_ATTR_DCE_INFO: SECPKG_ATTR = 3
SECPKG_ATTR_ENDPOINT_BINDINGS: SECPKG_ATTR = 26
SECPKG_ATTR_EAP_KEY_BLOCK: SECPKG_ATTR = 91
SECPKG_ATTR_FLAGS: SECPKG_ATTR = 14
SECPKG_ATTR_ISSUER_LIST_EX: SECPKG_ATTR = 89
SECPKG_ATTR_KEY_INFO: SECPKG_ATTR = 5
SECPKG_ATTR_LAST_CLIENT_TOKEN_STATUS: SECPKG_ATTR = 30
SECPKG_ATTR_LIFESPAN: SECPKG_ATTR = 2
SECPKG_ATTR_LOCAL_CERT_CONTEXT: SECPKG_ATTR = 84
SECPKG_ATTR_LOCAL_CRED: SECPKG_ATTR = 82
SECPKG_ATTR_NAMES: SECPKG_ATTR = 1
SECPKG_ATTR_NATIVE_NAMES: SECPKG_ATTR = 13
SECPKG_ATTR_NEGOTIATION_INFO: SECPKG_ATTR = 12
SECPKG_ATTR_PASSWORD_EXPIRY: SECPKG_ATTR = 8
SECPKG_ATTR_REMOTE_CERT_CONTEXT: SECPKG_ATTR = 83
SECPKG_ATTR_ROOT_STORE: SECPKG_ATTR = 85
SECPKG_ATTR_SESSION_KEY: SECPKG_ATTR = 9
SECPKG_ATTR_SESSION_INFO: SECPKG_ATTR = 93
SECPKG_ATTR_STREAM_SIZES: SECPKG_ATTR = 4
SECPKG_ATTR_SUPPORTED_SIGNATURES: SECPKG_ATTR = 102
SECPKG_ATTR_TARGET_INFORMATION: SECPKG_ATTR = 17
SECPKG_ATTR_UNIQUE_BINDINGS: SECPKG_ATTR = 25
SECPKG_ATTR_LCT_STATUS = Int32
SECPKG_ATTR_LCT_STATUS_SecPkgAttrLastClientTokenYes: SECPKG_ATTR_LCT_STATUS = 0
SECPKG_ATTR_LCT_STATUS_SecPkgAttrLastClientTokenNo: SECPKG_ATTR_LCT_STATUS = 1
SECPKG_ATTR_LCT_STATUS_SecPkgAttrLastClientTokenMaybe: SECPKG_ATTR_LCT_STATUS = 2
class SECPKG_BYTE_VECTOR(Structure):
    ByteArrayOffset: UInt32
    ByteArrayLength: UInt16
class SECPKG_CALL_INFO(Structure):
    ProcessId: UInt32
    ThreadId: UInt32
    Attributes: UInt32
    CallCount: UInt32
    MechOid: c_void_p
SECPKG_CALL_PACKAGE_MESSAGE_TYPE = Int32
SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageMinMessage: SECPKG_CALL_PACKAGE_MESSAGE_TYPE = 1024
SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackagePinDcMessage: SECPKG_CALL_PACKAGE_MESSAGE_TYPE = 1024
SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageUnpinAllDcsMessage: SECPKG_CALL_PACKAGE_MESSAGE_TYPE = 1025
SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageTransferCredMessage: SECPKG_CALL_PACKAGE_MESSAGE_TYPE = 1026
SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageMaxMessage: SECPKG_CALL_PACKAGE_MESSAGE_TYPE = 1026
class SECPKG_CALL_PACKAGE_PIN_DC_REQUEST(Structure):
    MessageType: UInt32
    Flags: UInt32
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    DcName: Windows.Win32.Foundation.UNICODE_STRING
    DcFlags: UInt32
class SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST(Structure):
    MessageType: UInt32
    OriginLogonId: Windows.Win32.Foundation.LUID
    DestinationLogonId: Windows.Win32.Foundation.LUID
    Flags: UInt32
class SECPKG_CALL_PACKAGE_UNPIN_ALL_DCS_REQUEST(Structure):
    MessageType: UInt32
    Flags: UInt32
class SECPKG_CLIENT_INFO(Structure):
    LogonId: Windows.Win32.Foundation.LUID
    ProcessID: UInt32
    ThreadID: UInt32
    HasTcbPrivilege: Windows.Win32.Foundation.BOOLEAN
    Impersonating: Windows.Win32.Foundation.BOOLEAN
    Restricted: Windows.Win32.Foundation.BOOLEAN
    ClientFlags: Byte
    ImpersonationLevel: Windows.Win32.Security.SECURITY_IMPERSONATION_LEVEL
    ClientToken: Windows.Win32.Foundation.HANDLE
class SECPKG_CONTEXT_THUNKS(Structure):
    InfoLevelCount: UInt32
    Levels: UInt32 * 1
SECPKG_CRED = UInt32
SECPKG_CRED_INBOUND: SECPKG_CRED = 1
SECPKG_CRED_OUTBOUND: SECPKG_CRED = 2
class SECPKG_CREDENTIAL(Structure):
    Version: UInt64
    cbHeaderLength: UInt16
    cbStructureLength: UInt32
    ClientProcess: UInt32
    ClientThread: UInt32
    LogonId: Windows.Win32.Foundation.LUID
    ClientToken: Windows.Win32.Foundation.HANDLE
    SessionId: UInt32
    ModifiedId: Windows.Win32.Foundation.LUID
    fCredentials: UInt32
    Flags: UInt32
    PrincipalName: Windows.Win32.Security.Authentication.Identity.SECPKG_BYTE_VECTOR
    PackageList: Windows.Win32.Security.Authentication.Identity.SECPKG_BYTE_VECTOR
    MarshaledSuppliedCreds: Windows.Win32.Security.Authentication.Identity.SECPKG_BYTE_VECTOR
SECPKG_CRED_CLASS = Int32
SecPkgCredClass_None: SECPKG_CRED_CLASS = 0
SecPkgCredClass_Ephemeral: SECPKG_CRED_CLASS = 10
SecPkgCredClass_PersistedGeneric: SECPKG_CRED_CLASS = 20
SecPkgCredClass_PersistedSpecific: SECPKG_CRED_CLASS = 30
SecPkgCredClass_Explicit: SECPKG_CRED_CLASS = 40
class SECPKG_DLL_FUNCTIONS(Structure):
    AllocateHeap: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_LSA_HEAP
    FreeHeap: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_LSA_HEAP
    RegisterCallback: Windows.Win32.Security.Authentication.Identity.PLSA_REGISTER_CALLBACK
    LocatePackageById: Windows.Win32.Security.Authentication.Identity.PLSA_LOCATE_PKG_BY_ID
class SECPKG_EVENT_NOTIFY(Structure):
    EventClass: UInt32
    Reserved: UInt32
    EventDataSize: UInt32
    EventData: c_void_p
    PackageParameter: c_void_p
class SECPKG_EVENT_PACKAGE_CHANGE(Structure):
    ChangeType: Windows.Win32.Security.Authentication.Identity.SECPKG_PACKAGE_CHANGE_TYPE
    PackageId: UIntPtr
    PackageName: Windows.Win32.Foundation.UNICODE_STRING
class SECPKG_EVENT_ROLE_CHANGE(Structure):
    PreviousRole: UInt32
    NewRole: UInt32
class SECPKG_EXTENDED_INFORMATION(Structure):
    Class: Windows.Win32.Security.Authentication.Identity.SECPKG_EXTENDED_INFORMATION_CLASS
    Info: _Info_e__Union
    class _Info_e__Union(Union):
        GssInfo: Windows.Win32.Security.Authentication.Identity.SECPKG_GSS_INFO
        ContextThunks: Windows.Win32.Security.Authentication.Identity.SECPKG_CONTEXT_THUNKS
        MutualAuthLevel: Windows.Win32.Security.Authentication.Identity.SECPKG_MUTUAL_AUTH_LEVEL
        WowClientDll: Windows.Win32.Security.Authentication.Identity.SECPKG_WOW_CLIENT_DLL
        ExtraOids: Windows.Win32.Security.Authentication.Identity.SECPKG_EXTRA_OIDS
        Nego2Info: Windows.Win32.Security.Authentication.Identity.SECPKG_NEGO2_INFO
SECPKG_EXTENDED_INFORMATION_CLASS = Int32
SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgGssInfo: SECPKG_EXTENDED_INFORMATION_CLASS = 1
SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgContextThunks: SECPKG_EXTENDED_INFORMATION_CLASS = 2
SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgMutualAuthLevel: SECPKG_EXTENDED_INFORMATION_CLASS = 3
SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgWowClientDll: SECPKG_EXTENDED_INFORMATION_CLASS = 4
SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgExtraOids: SECPKG_EXTENDED_INFORMATION_CLASS = 5
SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgMaxInfo: SECPKG_EXTENDED_INFORMATION_CLASS = 6
SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgNego2Info: SECPKG_EXTENDED_INFORMATION_CLASS = 7
class SECPKG_EXTRA_OIDS(Structure):
    OidCount: UInt32
    Oids: Windows.Win32.Security.Authentication.Identity.SECPKG_SERIALIZED_OID * 1
class SECPKG_FUNCTION_TABLE(Structure):
    InitializePackage: Windows.Win32.Security.Authentication.Identity.PLSA_AP_INITIALIZE_PACKAGE
    LogonUserA: Windows.Win32.Security.Authentication.Identity.PLSA_AP_LOGON_USER
    CallPackage: Windows.Win32.Security.Authentication.Identity.PLSA_AP_CALL_PACKAGE
    LogonTerminated: Windows.Win32.Security.Authentication.Identity.PLSA_AP_LOGON_TERMINATED
    CallPackageUntrusted: Windows.Win32.Security.Authentication.Identity.PLSA_AP_CALL_PACKAGE
    CallPackagePassthrough: Windows.Win32.Security.Authentication.Identity.PLSA_AP_CALL_PACKAGE_PASSTHROUGH
    LogonUserExA: Windows.Win32.Security.Authentication.Identity.PLSA_AP_LOGON_USER_EX
    LogonUserEx2: Windows.Win32.Security.Authentication.Identity.PLSA_AP_LOGON_USER_EX2
    Initialize: Windows.Win32.Security.Authentication.Identity.SpInitializeFn
    Shutdown: Windows.Win32.Security.Authentication.Identity.SpShutdownFn
    GetInfo: Windows.Win32.Security.Authentication.Identity.SpGetInfoFn
    AcceptCredentials: Windows.Win32.Security.Authentication.Identity.SpAcceptCredentialsFn
    AcquireCredentialsHandleA: Windows.Win32.Security.Authentication.Identity.SpAcquireCredentialsHandleFn
    QueryCredentialsAttributesA: Windows.Win32.Security.Authentication.Identity.SpQueryCredentialsAttributesFn
    FreeCredentialsHandle: Windows.Win32.Security.Authentication.Identity.SpFreeCredentialsHandleFn
    SaveCredentials: Windows.Win32.Security.Authentication.Identity.SpSaveCredentialsFn
    GetCredentials: Windows.Win32.Security.Authentication.Identity.SpGetCredentialsFn
    DeleteCredentials: Windows.Win32.Security.Authentication.Identity.SpDeleteCredentialsFn
    InitLsaModeContext: Windows.Win32.Security.Authentication.Identity.SpInitLsaModeContextFn
    AcceptLsaModeContext: Windows.Win32.Security.Authentication.Identity.SpAcceptLsaModeContextFn
    DeleteContext: Windows.Win32.Security.Authentication.Identity.SpDeleteContextFn
    ApplyControlToken: Windows.Win32.Security.Authentication.Identity.SpApplyControlTokenFn
    GetUserInfo: Windows.Win32.Security.Authentication.Identity.SpGetUserInfoFn
    GetExtendedInformation: Windows.Win32.Security.Authentication.Identity.SpGetExtendedInformationFn
    QueryContextAttributesA: Windows.Win32.Security.Authentication.Identity.SpQueryContextAttributesFn
    AddCredentialsA: Windows.Win32.Security.Authentication.Identity.SpAddCredentialsFn
    SetExtendedInformation: Windows.Win32.Security.Authentication.Identity.SpSetExtendedInformationFn
    SetContextAttributesA: Windows.Win32.Security.Authentication.Identity.SpSetContextAttributesFn
    SetCredentialsAttributesA: Windows.Win32.Security.Authentication.Identity.SpSetCredentialsAttributesFn
    ChangeAccountPasswordA: Windows.Win32.Security.Authentication.Identity.SpChangeAccountPasswordFn
    QueryMetaData: Windows.Win32.Security.Authentication.Identity.SpQueryMetaDataFn
    ExchangeMetaData: Windows.Win32.Security.Authentication.Identity.SpExchangeMetaDataFn
    GetCredUIContext: Windows.Win32.Security.Authentication.Identity.SpGetCredUIContextFn
    UpdateCredentials: Windows.Win32.Security.Authentication.Identity.SpUpdateCredentialsFn
    ValidateTargetInfo: Windows.Win32.Security.Authentication.Identity.SpValidateTargetInfoFn
    PostLogonUser: Windows.Win32.Security.Authentication.Identity.LSA_AP_POST_LOGON_USER
    GetRemoteCredGuardLogonBuffer: Windows.Win32.Security.Authentication.Identity.SpGetRemoteCredGuardLogonBufferFn
    GetRemoteCredGuardSupplementalCreds: Windows.Win32.Security.Authentication.Identity.SpGetRemoteCredGuardSupplementalCredsFn
    GetTbalSupplementalCreds: Windows.Win32.Security.Authentication.Identity.SpGetTbalSupplementalCredsFn
    LogonUserEx3: Windows.Win32.Security.Authentication.Identity.PLSA_AP_LOGON_USER_EX3
    PreLogonUserSurrogate: Windows.Win32.Security.Authentication.Identity.PLSA_AP_PRE_LOGON_USER_SURROGATE
    PostLogonUserSurrogate: Windows.Win32.Security.Authentication.Identity.PLSA_AP_POST_LOGON_USER_SURROGATE
class SECPKG_GSS_INFO(Structure):
    EncodedIdLength: UInt32
    EncodedId: Byte * 4
class SECPKG_KERNEL_FUNCTIONS(Structure):
    AllocateHeap: Windows.Win32.Security.Authentication.Identity.PLSA_ALLOCATE_LSA_HEAP
    FreeHeap: Windows.Win32.Security.Authentication.Identity.PLSA_FREE_LSA_HEAP
    CreateContextList: Windows.Win32.Security.Authentication.Identity.PKSEC_CREATE_CONTEXT_LIST
    InsertListEntry: Windows.Win32.Security.Authentication.Identity.PKSEC_INSERT_LIST_ENTRY
    ReferenceListEntry: Windows.Win32.Security.Authentication.Identity.PKSEC_REFERENCE_LIST_ENTRY
    DereferenceListEntry: Windows.Win32.Security.Authentication.Identity.PKSEC_DEREFERENCE_LIST_ENTRY
    SerializeWinntAuthData: Windows.Win32.Security.Authentication.Identity.PKSEC_SERIALIZE_WINNT_AUTH_DATA
    SerializeSchannelAuthData: Windows.Win32.Security.Authentication.Identity.PKSEC_SERIALIZE_SCHANNEL_AUTH_DATA
    LocatePackageById: Windows.Win32.Security.Authentication.Identity.PKSEC_LOCATE_PKG_BY_ID
class SECPKG_KERNEL_FUNCTION_TABLE(Structure):
    Initialize: Windows.Win32.Security.Authentication.Identity.KspInitPackageFn
    DeleteContext: Windows.Win32.Security.Authentication.Identity.KspDeleteContextFn
    InitContext: Windows.Win32.Security.Authentication.Identity.KspInitContextFn
    MapHandle: Windows.Win32.Security.Authentication.Identity.KspMapHandleFn
    Sign: Windows.Win32.Security.Authentication.Identity.KspMakeSignatureFn
    Verify: Windows.Win32.Security.Authentication.Identity.KspVerifySignatureFn
    Seal: Windows.Win32.Security.Authentication.Identity.KspSealMessageFn
    Unseal: Windows.Win32.Security.Authentication.Identity.KspUnsealMessageFn
    GetToken: Windows.Win32.Security.Authentication.Identity.KspGetTokenFn
    QueryAttributes: Windows.Win32.Security.Authentication.Identity.KspQueryAttributesFn
    CompleteToken: Windows.Win32.Security.Authentication.Identity.KspCompleteTokenFn
    ExportContext: Windows.Win32.Security.Authentication.Identity.SpExportSecurityContextFn
    ImportContext: Windows.Win32.Security.Authentication.Identity.SpImportSecurityContextFn
    SetPackagePagingMode: Windows.Win32.Security.Authentication.Identity.KspSetPagingModeFn
    SerializeAuthData: Windows.Win32.Security.Authentication.Identity.KspSerializeAuthDataFn
class SECPKG_MUTUAL_AUTH_LEVEL(Structure):
    MutualAuthLevel: UInt32
SECPKG_NAME_TYPE = Int32
SECPKG_NAME_TYPE_SecNameSamCompatible: SECPKG_NAME_TYPE = 0
SECPKG_NAME_TYPE_SecNameAlternateId: SECPKG_NAME_TYPE = 1
SECPKG_NAME_TYPE_SecNameFlat: SECPKG_NAME_TYPE = 2
SECPKG_NAME_TYPE_SecNameDN: SECPKG_NAME_TYPE = 3
SECPKG_NAME_TYPE_SecNameSPN: SECPKG_NAME_TYPE = 4
class SECPKG_NEGO2_INFO(Structure):
    AuthScheme: Byte * 16
    PackageFlags: UInt32
SECPKG_PACKAGE_CHANGE_TYPE = UInt32
SECPKG_PACKAGE_CHANGE_LOAD: SECPKG_PACKAGE_CHANGE_TYPE = 0
SECPKG_PACKAGE_CHANGE_UNLOAD: SECPKG_PACKAGE_CHANGE_TYPE = 1
SECPKG_PACKAGE_CHANGE_SELECT: SECPKG_PACKAGE_CHANGE_TYPE = 2
class SECPKG_PARAMETERS(Structure):
    Version: UInt32
    MachineState: UInt32
    SetupMode: UInt32
    DomainSid: Windows.Win32.Foundation.PSID
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    DnsDomainName: Windows.Win32.Foundation.UNICODE_STRING
    DomainGuid: Guid
class SECPKG_POST_LOGON_USER_INFO(Structure):
    Flags: UInt32
    LogonId: Windows.Win32.Foundation.LUID
    LinkedLogonId: Windows.Win32.Foundation.LUID
class SECPKG_PRIMARY_CRED(Structure):
    LogonId: Windows.Win32.Foundation.LUID
    DownlevelName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
    OldPassword: Windows.Win32.Foundation.UNICODE_STRING
    UserSid: Windows.Win32.Foundation.PSID
    Flags: UInt32
    DnsDomainName: Windows.Win32.Foundation.UNICODE_STRING
    Upn: Windows.Win32.Foundation.UNICODE_STRING
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    Spare1: Windows.Win32.Foundation.UNICODE_STRING
    Spare2: Windows.Win32.Foundation.UNICODE_STRING
    Spare3: Windows.Win32.Foundation.UNICODE_STRING
    Spare4: Windows.Win32.Foundation.UNICODE_STRING
class SECPKG_PRIMARY_CRED_EX(Structure):
    LogonId: Windows.Win32.Foundation.LUID
    DownlevelName: Windows.Win32.Foundation.UNICODE_STRING
    DomainName: Windows.Win32.Foundation.UNICODE_STRING
    Password: Windows.Win32.Foundation.UNICODE_STRING
    OldPassword: Windows.Win32.Foundation.UNICODE_STRING
    UserSid: Windows.Win32.Foundation.PSID
    Flags: UInt32
    DnsDomainName: Windows.Win32.Foundation.UNICODE_STRING
    Upn: Windows.Win32.Foundation.UNICODE_STRING
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    Spare1: Windows.Win32.Foundation.UNICODE_STRING
    Spare2: Windows.Win32.Foundation.UNICODE_STRING
    Spare3: Windows.Win32.Foundation.UNICODE_STRING
    Spare4: Windows.Win32.Foundation.UNICODE_STRING
    PackageId: UIntPtr
    PrevLogonId: Windows.Win32.Foundation.LUID
    FlagsEx: UInt32
class SECPKG_REDIRECTED_LOGON_BUFFER(Structure):
    RedirectedLogonGuid: Guid
    RedirectedLogonHandle: Windows.Win32.Foundation.HANDLE
    Init: Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_INIT
    Callback: Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_CALLBACK
    CleanupCallback: Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_CLEANUP_CALLBACK
    GetLogonCreds: Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_GET_LOGON_CREDS
    GetSupplementalCreds: Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_GET_SUPP_CREDS
class SECPKG_SERIALIZED_OID(Structure):
    OidLength: UInt32
    OidAttributes: UInt32
    OidValue: Byte * 32
SECPKG_SESSIONINFO_TYPE = Int32
SECPKG_SESSIONINFO_TYPE_SecSessionPrimaryCred: SECPKG_SESSIONINFO_TYPE = 0
class SECPKG_SHORT_VECTOR(Structure):
    ShortArrayOffset: UInt32
    ShortArrayCount: UInt16
class SECPKG_SUPPLEMENTAL_CRED(Structure):
    PackageName: Windows.Win32.Foundation.UNICODE_STRING
    CredentialSize: UInt32
    Credentials: c_char_p_no
class SECPKG_SUPPLEMENTAL_CRED_ARRAY(Structure):
    CredentialCount: UInt32
    Credentials: Windows.Win32.Security.Authentication.Identity.SECPKG_SUPPLEMENTAL_CRED * 1
class SECPKG_SUPPLIED_CREDENTIAL(Structure):
    cbHeaderLength: UInt16
    cbStructureLength: UInt16
    UserName: Windows.Win32.Security.Authentication.Identity.SECPKG_SHORT_VECTOR
    DomainName: Windows.Win32.Security.Authentication.Identity.SECPKG_SHORT_VECTOR
    PackedCredentials: Windows.Win32.Security.Authentication.Identity.SECPKG_BYTE_VECTOR
    CredFlags: UInt32
class SECPKG_SURROGATE_LOGON(Structure):
    Version: UInt32
    SurrogateLogonID: Windows.Win32.Foundation.LUID
    EntryCount: UInt32
    Entries: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SURROGATE_LOGON_ENTRY_head)
class SECPKG_SURROGATE_LOGON_ENTRY(Structure):
    Type: Guid
    Data: c_void_p
class SECPKG_TARGETINFO(Structure):
    DomainSid: Windows.Win32.Foundation.PSID
    ComputerName: Windows.Win32.Foundation.PWSTR
class SECPKG_USER_FUNCTION_TABLE(Structure):
    InstanceInit: Windows.Win32.Security.Authentication.Identity.SpInstanceInitFn
    InitUserModeContext: Windows.Win32.Security.Authentication.Identity.SpInitUserModeContextFn
    MakeSignature: Windows.Win32.Security.Authentication.Identity.SpMakeSignatureFn
    VerifySignature: Windows.Win32.Security.Authentication.Identity.SpVerifySignatureFn
    SealMessage: Windows.Win32.Security.Authentication.Identity.SpSealMessageFn
    UnsealMessage: Windows.Win32.Security.Authentication.Identity.SpUnsealMessageFn
    GetContextToken: Windows.Win32.Security.Authentication.Identity.SpGetContextTokenFn
    QueryContextAttributesA: Windows.Win32.Security.Authentication.Identity.SpQueryContextAttributesFn
    CompleteAuthToken: Windows.Win32.Security.Authentication.Identity.SpCompleteAuthTokenFn
    DeleteUserModeContext: Windows.Win32.Security.Authentication.Identity.SpDeleteContextFn
    FormatCredentials: Windows.Win32.Security.Authentication.Identity.SpFormatCredentialsFn
    MarshallSupplementalCreds: Windows.Win32.Security.Authentication.Identity.SpMarshallSupplementalCredsFn
    ExportContext: Windows.Win32.Security.Authentication.Identity.SpExportSecurityContextFn
    ImportContext: Windows.Win32.Security.Authentication.Identity.SpImportSecurityContextFn
    MarshalAttributeData: Windows.Win32.Security.Authentication.Identity.SpMarshalAttributeDataFn
class SECPKG_WOW_CLIENT_DLL(Structure):
    WowClientDllPath: Windows.Win32.Foundation.UNICODE_STRING
class SECURITY_LOGON_SESSION_DATA(Structure):
    Size: UInt32
    LogonId: Windows.Win32.Foundation.LUID
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    LogonDomain: Windows.Win32.Foundation.UNICODE_STRING
    AuthenticationPackage: Windows.Win32.Foundation.UNICODE_STRING
    LogonType: UInt32
    Session: UInt32
    Sid: Windows.Win32.Foundation.PSID
    LogonTime: Int64
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    DnsDomainName: Windows.Win32.Foundation.UNICODE_STRING
    Upn: Windows.Win32.Foundation.UNICODE_STRING
    UserFlags: UInt32
    LastLogonInfo: Windows.Win32.Security.Authentication.Identity.LSA_LAST_INTER_LOGON_INFO
    LogonScript: Windows.Win32.Foundation.UNICODE_STRING
    ProfilePath: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectory: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectoryDrive: Windows.Win32.Foundation.UNICODE_STRING
    LogoffTime: Int64
    KickOffTime: Int64
    PasswordLastSet: Int64
    PasswordCanChange: Int64
    PasswordMustChange: Int64
SECURITY_LOGON_TYPE = Int32
SECURITY_LOGON_TYPE_UndefinedLogonType: SECURITY_LOGON_TYPE = 0
SECURITY_LOGON_TYPE_Interactive: SECURITY_LOGON_TYPE = 2
SECURITY_LOGON_TYPE_Network: SECURITY_LOGON_TYPE = 3
SECURITY_LOGON_TYPE_Batch: SECURITY_LOGON_TYPE = 4
SECURITY_LOGON_TYPE_Service: SECURITY_LOGON_TYPE = 5
SECURITY_LOGON_TYPE_Proxy: SECURITY_LOGON_TYPE = 6
SECURITY_LOGON_TYPE_Unlock: SECURITY_LOGON_TYPE = 7
SECURITY_LOGON_TYPE_NetworkCleartext: SECURITY_LOGON_TYPE = 8
SECURITY_LOGON_TYPE_NewCredentials: SECURITY_LOGON_TYPE = 9
SECURITY_LOGON_TYPE_RemoteInteractive: SECURITY_LOGON_TYPE = 10
SECURITY_LOGON_TYPE_CachedInteractive: SECURITY_LOGON_TYPE = 11
SECURITY_LOGON_TYPE_CachedRemoteInteractive: SECURITY_LOGON_TYPE = 12
SECURITY_LOGON_TYPE_CachedUnlock: SECURITY_LOGON_TYPE = 13
class SECURITY_PACKAGE_OPTIONS(Structure):
    Size: UInt32
    Type: Windows.Win32.Security.Authentication.Identity.SECURITY_PACKAGE_OPTIONS_TYPE
    Flags: UInt32
    SignatureSize: UInt32
    Signature: c_void_p
SECURITY_PACKAGE_OPTIONS_TYPE = UInt32
SECPKG_OPTIONS_TYPE_UNKNOWN: SECURITY_PACKAGE_OPTIONS_TYPE = 0
SECPKG_OPTIONS_TYPE_LSA: SECURITY_PACKAGE_OPTIONS_TYPE = 1
SECPKG_OPTIONS_TYPE_SSPI: SECURITY_PACKAGE_OPTIONS_TYPE = 2
class SECURITY_USER_DATA(Structure):
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    LogonDomainName: Windows.Win32.Foundation.UNICODE_STRING
    LogonServer: Windows.Win32.Foundation.UNICODE_STRING
    pSid: Windows.Win32.Foundation.PSID
class SEC_APPLICATION_PROTOCOLS(Structure):
    ProtocolListsSize: UInt32
    ProtocolLists: Windows.Win32.Security.Authentication.Identity.SEC_APPLICATION_PROTOCOL_LIST * 1
class SEC_APPLICATION_PROTOCOL_LIST(Structure):
    ProtoNegoExt: Windows.Win32.Security.Authentication.Identity.SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT
    ProtocolListSize: UInt16
    ProtocolList: Byte * 1
SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT = Int32
SecApplicationProtocolNegotiationExt_None: SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT = 0
SecApplicationProtocolNegotiationExt_NPN: SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT = 1
SecApplicationProtocolNegotiationExt_ALPN: SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT = 2
SEC_APPLICATION_PROTOCOL_NEGOTIATION_STATUS = Int32
SecApplicationProtocolNegotiationStatus_None: SEC_APPLICATION_PROTOCOL_NEGOTIATION_STATUS = 0
SecApplicationProtocolNegotiationStatus_Success: SEC_APPLICATION_PROTOCOL_NEGOTIATION_STATUS = 1
SecApplicationProtocolNegotiationStatus_SelectedClientOnly: SEC_APPLICATION_PROTOCOL_NEGOTIATION_STATUS = 2
class SEC_CHANNEL_BINDINGS(Structure):
    dwInitiatorAddrType: UInt32
    cbInitiatorLength: UInt32
    dwInitiatorOffset: UInt32
    dwAcceptorAddrType: UInt32
    cbAcceptorLength: UInt32
    dwAcceptorOffset: UInt32
    cbApplicationDataLength: UInt32
    dwApplicationDataOffset: UInt32
class SEC_DTLS_MTU(Structure):
    PathMTU: UInt16
class SEC_FLAGS(Structure):
    Flags: UInt64
@winfunctype_pointer
def SEC_GET_KEY_FN(Arg: c_void_p, Principal: c_void_p, KeyVer: UInt32, Key: POINTER(c_void_p), Status: POINTER(Windows.Win32.Foundation.HRESULT)) -> Void: ...
class SEC_NEGOTIATION_INFO(Structure):
    Size: UInt32
    NameLength: UInt32
    Name: POINTER(UInt16)
    Reserved: c_void_p
class SEC_PRESHAREDKEY(Structure):
    KeySize: UInt16
    Key: Byte * 1
class SEC_PRESHAREDKEY_IDENTITY(Structure):
    KeyIdentitySize: UInt16
    KeyIdentity: Byte * 1
class SEC_SRTP_MASTER_KEY_IDENTIFIER(Structure):
    MasterKeyIdentifierSize: Byte
    MasterKeyIdentifier: Byte * 1
class SEC_SRTP_PROTECTION_PROFILES(Structure):
    ProfilesSize: UInt16
    ProfilesList: UInt16 * 1
class SEC_TOKEN_BINDING(Structure):
    MajorVersion: Byte
    MinorVersion: Byte
    KeyParametersSize: UInt16
    KeyParameters: Byte * 1
class SEC_TRAFFIC_SECRETS(Structure):
    SymmetricAlgId: Char * 64
    ChainingMode: Char * 64
    HashAlgId: Char * 64
    KeySize: UInt16
    IvSize: UInt16
    MsgSequenceStart: UInt16
    MsgSequenceEnd: UInt16
    TrafficSecretType: Windows.Win32.Security.Authentication.Identity.SEC_TRAFFIC_SECRET_TYPE
    TrafficSecretSize: UInt16
    TrafficSecret: Byte * 1
SEC_TRAFFIC_SECRET_TYPE = Int32
SecTrafficSecret_None: SEC_TRAFFIC_SECRET_TYPE = 0
SecTrafficSecret_Client: SEC_TRAFFIC_SECRET_TYPE = 1
SecTrafficSecret_Server: SEC_TRAFFIC_SECRET_TYPE = 2
class SEC_WINNT_AUTH_IDENTITY32(Structure):
    User: UInt32
    UserLength: UInt32
    Domain: UInt32
    DomainLength: UInt32
    Password: UInt32
    PasswordLength: UInt32
    Flags: UInt32
class SEC_WINNT_AUTH_IDENTITY_EX2(Structure):
    Version: UInt32
    cbHeaderLength: UInt16
    cbStructureLength: UInt32
    UserOffset: UInt32
    UserLength: UInt16
    DomainOffset: UInt32
    DomainLength: UInt16
    PackedCredentialsOffset: UInt32
    PackedCredentialsLength: UInt16
    Flags: UInt32
    PackageListOffset: UInt32
    PackageListLength: UInt16
class SEC_WINNT_AUTH_IDENTITY_EX32(Structure):
    Version: UInt32
    Length: UInt32
    User: UInt32
    UserLength: UInt32
    Domain: UInt32
    DomainLength: UInt32
    Password: UInt32
    PasswordLength: UInt32
    Flags: UInt32
    PackageList: UInt32
    PackageListLength: UInt32
class SEC_WINNT_AUTH_IDENTITY_EXA(Structure):
    Version: UInt32
    Length: UInt32
    User: c_char_p_no
    UserLength: UInt32
    Domain: c_char_p_no
    DomainLength: UInt32
    Password: c_char_p_no
    PasswordLength: UInt32
    Flags: UInt32
    PackageList: c_char_p_no
    PackageListLength: UInt32
class SEC_WINNT_AUTH_IDENTITY_EXW(Structure):
    Version: UInt32
    Length: UInt32
    User: POINTER(UInt16)
    UserLength: UInt32
    Domain: POINTER(UInt16)
    DomainLength: UInt32
    Password: POINTER(UInt16)
    PasswordLength: UInt32
    Flags: UInt32
    PackageList: POINTER(UInt16)
    PackageListLength: UInt32
class SEC_WINNT_AUTH_IDENTITY_INFO(Union):
    AuthIdExw: Windows.Win32.Security.Authentication.Identity.SEC_WINNT_AUTH_IDENTITY_EXW
    AuthIdExa: Windows.Win32.Security.Authentication.Identity.SEC_WINNT_AUTH_IDENTITY_EXA
    AuthId_a: Windows.Win32.System.Rpc.SEC_WINNT_AUTH_IDENTITY_A
    AuthId_w: Windows.Win32.System.Rpc.SEC_WINNT_AUTH_IDENTITY_W
    AuthIdEx2: Windows.Win32.Security.Authentication.Identity.SEC_WINNT_AUTH_IDENTITY_EX2
class SEND_GENERIC_TLS_EXTENSION(Structure):
    ExtensionType: UInt16
    HandshakeType: UInt16
    Flags: UInt32
    BufferSize: UInt16
    Buffer: Byte * 1
@winfunctype_pointer
def SET_CONTEXT_ATTRIBUTES_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SET_CONTEXT_ATTRIBUTES_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SET_CREDENTIALS_ATTRIBUTES_FN_A(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SET_CREDENTIALS_ATTRIBUTES_FN_W(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: UInt32, param2: c_void_p, param3: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
class SE_ADT_ACCESS_REASON(Structure):
    AccessMask: UInt32
    AccessReasons: UInt32 * 32
    ObjectTypeIndex: UInt32
    AccessGranted: UInt32
    SecurityDescriptor: Windows.Win32.Security.PSECURITY_DESCRIPTOR
class SE_ADT_CLAIMS(Structure):
    Length: UInt32
    Claims: c_void_p
class SE_ADT_OBJECT_TYPE(Structure):
    ObjectType: Guid
    Flags: UInt16
    Level: UInt16
    AccessMask: UInt32
class SE_ADT_PARAMETER_ARRAY(Structure):
    CategoryId: UInt32
    AuditId: UInt32
    ParameterCount: UInt32
    Length: UInt32
    FlatSubCategoryId: UInt16
    Type: UInt16
    Flags: UInt32
    Parameters: Windows.Win32.Security.Authentication.Identity.SE_ADT_PARAMETER_ARRAY_ENTRY * 32
class SE_ADT_PARAMETER_ARRAY_ENTRY(Structure):
    Type: Windows.Win32.Security.Authentication.Identity.SE_ADT_PARAMETER_TYPE
    Length: UInt32
    Data: UIntPtr * 2
    Address: c_void_p
class SE_ADT_PARAMETER_ARRAY_EX(Structure):
    CategoryId: UInt32
    AuditId: UInt32
    Version: UInt32
    ParameterCount: UInt32
    Length: UInt32
    FlatSubCategoryId: UInt16
    Type: UInt16
    Flags: UInt32
    Parameters: Windows.Win32.Security.Authentication.Identity.SE_ADT_PARAMETER_ARRAY_ENTRY * 32
SE_ADT_PARAMETER_TYPE = Int32
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeNone: SE_ADT_PARAMETER_TYPE = 0
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeString: SE_ADT_PARAMETER_TYPE = 1
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeFileSpec: SE_ADT_PARAMETER_TYPE = 2
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeUlong: SE_ADT_PARAMETER_TYPE = 3
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSid: SE_ADT_PARAMETER_TYPE = 4
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonId: SE_ADT_PARAMETER_TYPE = 5
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeNoLogonId: SE_ADT_PARAMETER_TYPE = 6
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeAccessMask: SE_ADT_PARAMETER_TYPE = 7
SE_ADT_PARAMETER_TYPE_SeAdtParmTypePrivs: SE_ADT_PARAMETER_TYPE = 8
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeObjectTypes: SE_ADT_PARAMETER_TYPE = 9
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeHexUlong: SE_ADT_PARAMETER_TYPE = 10
SE_ADT_PARAMETER_TYPE_SeAdtParmTypePtr: SE_ADT_PARAMETER_TYPE = 11
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeTime: SE_ADT_PARAMETER_TYPE = 12
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeGuid: SE_ADT_PARAMETER_TYPE = 13
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLuid: SE_ADT_PARAMETER_TYPE = 14
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeHexInt64: SE_ADT_PARAMETER_TYPE = 15
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeStringList: SE_ADT_PARAMETER_TYPE = 16
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSidList: SE_ADT_PARAMETER_TYPE = 17
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeDuration: SE_ADT_PARAMETER_TYPE = 18
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeUserAccountControl: SE_ADT_PARAMETER_TYPE = 19
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeNoUac: SE_ADT_PARAMETER_TYPE = 20
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeMessage: SE_ADT_PARAMETER_TYPE = 21
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeDateTime: SE_ADT_PARAMETER_TYPE = 22
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSockAddr: SE_ADT_PARAMETER_TYPE = 23
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSD: SE_ADT_PARAMETER_TYPE = 24
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonHours: SE_ADT_PARAMETER_TYPE = 25
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonIdNoSid: SE_ADT_PARAMETER_TYPE = 26
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeUlongNoConv: SE_ADT_PARAMETER_TYPE = 27
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSockAddrNoPort: SE_ADT_PARAMETER_TYPE = 28
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeAccessReason: SE_ADT_PARAMETER_TYPE = 29
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeStagingReason: SE_ADT_PARAMETER_TYPE = 30
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeResourceAttribute: SE_ADT_PARAMETER_TYPE = 31
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeClaims: SE_ADT_PARAMETER_TYPE = 32
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonIdAsSid: SE_ADT_PARAMETER_TYPE = 33
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeMultiSzString: SE_ADT_PARAMETER_TYPE = 34
SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonIdEx: SE_ADT_PARAMETER_TYPE = 35
SLDATATYPE = UInt32
SL_DATA_NONE: SLDATATYPE = 0
SL_DATA_SZ: SLDATATYPE = 1
SL_DATA_DWORD: SLDATATYPE = 4
SL_DATA_BINARY: SLDATATYPE = 3
SL_DATA_MULTI_SZ: SLDATATYPE = 7
SL_DATA_SUM: SLDATATYPE = 100
SLIDTYPE = Int32
SL_ID_APPLICATION: SLIDTYPE = 0
SL_ID_PRODUCT_SKU: SLIDTYPE = 1
SL_ID_LICENSE_FILE: SLIDTYPE = 2
SL_ID_LICENSE: SLIDTYPE = 3
SL_ID_PKEY: SLIDTYPE = 4
SL_ID_ALL_LICENSES: SLIDTYPE = 5
SL_ID_ALL_LICENSE_FILES: SLIDTYPE = 6
SL_ID_STORE_TOKEN: SLIDTYPE = 7
SL_ID_LAST: SLIDTYPE = 8
SLLICENSINGSTATUS = Int32
SL_LICENSING_STATUS_UNLICENSED: SLLICENSINGSTATUS = 0
SL_LICENSING_STATUS_LICENSED: SLLICENSINGSTATUS = 1
SL_LICENSING_STATUS_IN_GRACE_PERIOD: SLLICENSINGSTATUS = 2
SL_LICENSING_STATUS_NOTIFICATION: SLLICENSINGSTATUS = 3
SL_LICENSING_STATUS_LAST: SLLICENSINGSTATUS = 4
SLREFERRALTYPE = Int32
SL_REFERRALTYPE_SKUID: SLREFERRALTYPE = 0
SL_REFERRALTYPE_APPID: SLREFERRALTYPE = 1
SL_REFERRALTYPE_OVERRIDE_SKUID: SLREFERRALTYPE = 2
SL_REFERRALTYPE_OVERRIDE_APPID: SLREFERRALTYPE = 3
SL_REFERRALTYPE_BEST_MATCH: SLREFERRALTYPE = 4
class SL_ACTIVATION_INFO_HEADER(Structure):
    cbSize: UInt32
    type: Windows.Win32.Security.Authentication.Identity.SL_ACTIVATION_TYPE
SL_ACTIVATION_TYPE = Int32
SL_ACTIVATION_TYPE_DEFAULT: SL_ACTIVATION_TYPE = 0
SL_ACTIVATION_TYPE_ACTIVE_DIRECTORY: SL_ACTIVATION_TYPE = 1
class SL_AD_ACTIVATION_INFO(Structure):
    header: Windows.Win32.Security.Authentication.Identity.SL_ACTIVATION_INFO_HEADER
    pwszProductKey: Windows.Win32.Foundation.PWSTR
    pwszActivationObjectName: Windows.Win32.Foundation.PWSTR
SL_GENUINE_STATE = Int32
SL_GEN_STATE_IS_GENUINE: SL_GENUINE_STATE = 0
SL_GEN_STATE_INVALID_LICENSE: SL_GENUINE_STATE = 1
SL_GEN_STATE_TAMPERED: SL_GENUINE_STATE = 2
SL_GEN_STATE_OFFLINE: SL_GENUINE_STATE = 3
SL_GEN_STATE_LAST: SL_GENUINE_STATE = 4
class SL_LICENSING_STATUS(Structure):
    SkuId: Guid
    eStatus: Windows.Win32.Security.Authentication.Identity.SLLICENSINGSTATUS
    dwGraceTime: UInt32
    dwTotalGraceDays: UInt32
    hrReason: Windows.Win32.Foundation.HRESULT
    qwValidityExpiration: UInt64
class SL_NONGENUINE_UI_OPTIONS(Structure):
    cbSize: UInt32
    pComponentId: POINTER(Guid)
    hResultUI: Windows.Win32.Foundation.HRESULT
class SL_SYSTEM_POLICY_INFORMATION(Structure):
    Reserved1: c_void_p * 2
    Reserved2: UInt32 * 3
class SR_SECURITY_DESCRIPTOR(Structure):
    Length: UInt32
    SecurityDescriptor: c_char_p_no
@winfunctype_pointer
def SSL_CRACK_CERTIFICATE_FN(pbCertificate: c_char_p_no, cbCertificate: UInt32, VerifySignature: Windows.Win32.Foundation.BOOL, ppCertificate: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.X509Certificate_head))) -> Windows.Win32.Foundation.BOOL: ...
class SSL_CREDENTIAL_CERTIFICATE(Structure):
    cbPrivateKey: UInt32
    pPrivateKey: c_char_p_no
    cbCertificate: UInt32
    pCertificate: c_char_p_no
    pszPassword: Windows.Win32.Foundation.PSTR
@winfunctype_pointer
def SSL_EMPTY_CACHE_FN_A(pszTargetName: Windows.Win32.Foundation.PSTR, dwFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def SSL_EMPTY_CACHE_FN_W(pszTargetName: Windows.Win32.Foundation.PWSTR, dwFlags: UInt32) -> Windows.Win32.Foundation.BOOL: ...
@winfunctype_pointer
def SSL_FREE_CERTIFICATE_FN(pCertificate: POINTER(Windows.Win32.Security.Authentication.Identity.X509Certificate_head)) -> Void: ...
class SUBSCRIBE_GENERIC_TLS_EXTENSION(Structure):
    Flags: UInt32
    SubscriptionsCount: UInt32
    Subscriptions: Windows.Win32.Security.Authentication.Identity.TLS_EXTENSION_SUBSCRIPTION * 1
SchGetExtensionsOptions = Int32
SCH_EXTENSIONS_OPTIONS_NONE: SchGetExtensionsOptions = 0
SCH_NO_RECORD_HEADER: SchGetExtensionsOptions = 1
class SecBuffer(Structure):
    cbBuffer: UInt32
    BufferType: UInt32
    pvBuffer: c_void_p
class SecBufferDesc(Structure):
    ulVersion: UInt32
    cBuffers: UInt32
    pBuffers: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)
SecDelegationType = Int32
SecDelegationType_SecFull: SecDelegationType = 0
SecDelegationType_SecService: SecDelegationType = 1
SecDelegationType_SecTree: SecDelegationType = 2
SecDelegationType_SecDirectory: SecDelegationType = 3
SecDelegationType_SecObject: SecDelegationType = 4
class SecPkgContext_AccessToken(Structure):
    AccessToken: c_void_p
class SecPkgContext_ApplicationProtocol(Structure):
    ProtoNegoStatus: Windows.Win32.Security.Authentication.Identity.SEC_APPLICATION_PROTOCOL_NEGOTIATION_STATUS
    ProtoNegoExt: Windows.Win32.Security.Authentication.Identity.SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT
    ProtocolIdSize: Byte
    ProtocolId: Byte * 255
class SecPkgContext_AuthorityA(Structure):
    sAuthorityName: POINTER(SByte)
class SecPkgContext_AuthorityW(Structure):
    sAuthorityName: POINTER(UInt16)
class SecPkgContext_AuthzID(Structure):
    AuthzIDLength: UInt32
    AuthzID: Windows.Win32.Foundation.PSTR
class SecPkgContext_Bindings(Structure):
    BindingsLength: UInt32
    Bindings: POINTER(Windows.Win32.Security.Authentication.Identity.SEC_CHANNEL_BINDINGS_head)
class SecPkgContext_CertInfo(Structure):
    dwVersion: UInt32
    cbSubjectName: UInt32
    pwszSubjectName: Windows.Win32.Foundation.PWSTR
    cbIssuerName: UInt32
    pwszIssuerName: Windows.Win32.Foundation.PWSTR
    dwKeySize: UInt32
class SecPkgContext_CertificateValidationResult(Structure):
    dwChainErrorStatus: UInt32
    hrVerifyChainStatus: Windows.Win32.Foundation.HRESULT
class SecPkgContext_Certificates(Structure):
    cCertificates: UInt32
    cbCertificateChain: UInt32
    pbCertificateChain: c_char_p_no
class SecPkgContext_CipherInfo(Structure):
    dwVersion: UInt32
    dwProtocol: UInt32
    dwCipherSuite: UInt32
    dwBaseCipherSuite: UInt32
    szCipherSuite: Char * 64
    szCipher: Char * 64
    dwCipherLen: UInt32
    dwCipherBlockLen: UInt32
    szHash: Char * 64
    dwHashLen: UInt32
    szExchange: Char * 64
    dwMinExchangeLen: UInt32
    dwMaxExchangeLen: UInt32
    szCertificate: Char * 64
    dwKeyType: UInt32
class SecPkgContext_ClientCertPolicyResult(Structure):
    dwPolicyResult: Windows.Win32.Foundation.HRESULT
    guidPolicyId: Guid
class SecPkgContext_ClientSpecifiedTarget(Structure):
    sTargetName: POINTER(UInt16)
class SecPkgContext_ConnectionInfo(Structure):
    dwProtocol: UInt32
    aiCipher: UInt32
    dwCipherStrength: UInt32
    aiHash: UInt32
    dwHashStrength: UInt32
    aiExch: UInt32
    dwExchStrength: UInt32
class SecPkgContext_ConnectionInfoEx(Structure):
    dwVersion: UInt32
    dwProtocol: UInt32
    szCipher: Char * 64
    dwCipherStrength: UInt32
    szHash: Char * 64
    dwHashStrength: UInt32
    szExchange: Char * 64
    dwExchStrength: UInt32
class SecPkgContext_CredInfo(Structure):
    CredClass: Windows.Win32.Security.Authentication.Identity.SECPKG_CRED_CLASS
    IsPromptingNeeded: UInt32
class SecPkgContext_CredentialNameA(Structure):
    CredentialType: UInt32
    sCredentialName: POINTER(SByte)
class SecPkgContext_CredentialNameW(Structure):
    CredentialType: UInt32
    sCredentialName: POINTER(UInt16)
class SecPkgContext_DceInfo(Structure):
    AuthzSvc: UInt32
    pPac: c_void_p
class SecPkgContext_EapKeyBlock(Structure):
    rgbKeys: Byte * 128
    rgbIVs: Byte * 64
class SecPkgContext_EapPrfInfo(Structure):
    dwVersion: UInt32
    cbPrfData: UInt32
    pbPrfData: c_char_p_no
class SecPkgContext_EarlyStart(Structure):
    dwEarlyStartFlags: UInt32
class SecPkgContext_Flags(Structure):
    Flags: UInt32
class SecPkgContext_IssuerListInfoEx(Structure):
    aIssuers: POINTER(Windows.Win32.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
    cIssuers: UInt32
class SecPkgContext_KeyInfoA(Structure):
    sSignatureAlgorithmName: POINTER(SByte)
    sEncryptAlgorithmName: POINTER(SByte)
    KeySize: UInt32
    SignatureAlgorithm: UInt32
    EncryptAlgorithm: UInt32
class SecPkgContext_KeyInfoW(Structure):
    sSignatureAlgorithmName: POINTER(UInt16)
    sEncryptAlgorithmName: POINTER(UInt16)
    KeySize: UInt32
    SignatureAlgorithm: UInt32
    EncryptAlgorithm: UInt32
class SecPkgContext_KeyingMaterial(Structure):
    cbKeyingMaterial: UInt32
    pbKeyingMaterial: c_char_p_no
class SecPkgContext_KeyingMaterialInfo(Structure):
    cbLabel: UInt16
    pszLabel: Windows.Win32.Foundation.PSTR
    cbContextValue: UInt16
    pbContextValue: c_char_p_no
    cbKeyingMaterial: UInt32
class SecPkgContext_KeyingMaterial_Inproc(Structure):
    cbLabel: UInt16
    pszLabel: Windows.Win32.Foundation.PSTR
    cbContextValue: UInt16
    pbContextValue: c_char_p_no
    cbKeyingMaterial: UInt32
    pbKeyingMaterial: c_char_p_no
class SecPkgContext_LastClientTokenStatus(Structure):
    LastClientTokenStatus: Windows.Win32.Security.Authentication.Identity.SECPKG_ATTR_LCT_STATUS
class SecPkgContext_Lifespan(Structure):
    tsStart: Int64
    tsExpiry: Int64
class SecPkgContext_LocalCredentialInfo(Structure):
    cbCertificateChain: UInt32
    pbCertificateChain: c_char_p_no
    cCertificates: UInt32
    fFlags: UInt32
    dwBits: UInt32
class SecPkgContext_LogoffTime(Structure):
    tsLogoffTime: Int64
class SecPkgContext_MappedCredAttr(Structure):
    dwAttribute: UInt32
    pvBuffer: c_void_p
class SecPkgContext_NamesA(Structure):
    sUserName: POINTER(SByte)
class SecPkgContext_NamesW(Structure):
    sUserName: POINTER(UInt16)
class SecPkgContext_NativeNamesA(Structure):
    sClientName: POINTER(SByte)
    sServerName: POINTER(SByte)
class SecPkgContext_NativeNamesW(Structure):
    sClientName: POINTER(UInt16)
    sServerName: POINTER(UInt16)
class SecPkgContext_NegoKeys(Structure):
    KeyType: UInt32
    KeyLength: UInt16
    KeyValue: c_char_p_no
    VerifyKeyType: UInt32
    VerifyKeyLength: UInt16
    VerifyKeyValue: c_char_p_no
class SecPkgContext_NegoPackageInfo(Structure):
    PackageMask: UInt32
class SecPkgContext_NegoStatus(Structure):
    LastStatus: UInt32
class SecPkgContext_NegotiatedTlsExtensions(Structure):
    ExtensionsCount: UInt32
    Extensions: POINTER(UInt16)
class SecPkgContext_NegotiationInfoA(Structure):
    PackageInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head)
    NegotiationState: UInt32
class SecPkgContext_NegotiationInfoW(Structure):
    PackageInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head)
    NegotiationState: UInt32
class SecPkgContext_PackageInfoA(Structure):
    PackageInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head)
class SecPkgContext_PackageInfoW(Structure):
    PackageInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoW_head)
class SecPkgContext_PasswordExpiry(Structure):
    tsPasswordExpires: Int64
class SecPkgContext_ProtoInfoA(Structure):
    sProtocolName: POINTER(SByte)
    majorVersion: UInt32
    minorVersion: UInt32
class SecPkgContext_ProtoInfoW(Structure):
    sProtocolName: POINTER(UInt16)
    majorVersion: UInt32
    minorVersion: UInt32
class SecPkgContext_RemoteCredentialInfo(Structure):
    cbCertificateChain: UInt32
    pbCertificateChain: c_char_p_no
    cCertificates: UInt32
    fFlags: UInt32
    dwBits: UInt32
class SecPkgContext_SaslContext(Structure):
    SaslContext: c_void_p
class SecPkgContext_SessionAppData(Structure):
    dwFlags: UInt32
    cbAppData: UInt32
    pbAppData: c_char_p_no
class SecPkgContext_SessionInfo(Structure):
    dwFlags: UInt32
    cbSessionId: UInt32
    rgbSessionId: Byte * 32
class SecPkgContext_SessionKey(Structure):
    SessionKeyLength: UInt32
    SessionKey: c_char_p_no
class SecPkgContext_Sizes(Structure):
    cbMaxToken: UInt32
    cbMaxSignature: UInt32
    cbBlockSize: UInt32
    cbSecurityTrailer: UInt32
class SecPkgContext_SrtpParameters(Structure):
    ProtectionProfile: UInt16
    MasterKeyIdentifierSize: Byte
    MasterKeyIdentifier: c_char_p_no
class SecPkgContext_StreamSizes(Structure):
    cbHeader: UInt32
    cbTrailer: UInt32
    cbMaximumMessage: UInt32
    cBuffers: UInt32
    cbBlockSize: UInt32
class SecPkgContext_SubjectAttributes(Structure):
    AttributeInfo: c_void_p
class SecPkgContext_SupportedSignatures(Structure):
    cSignatureAndHashAlgorithms: UInt16
    pSignatureAndHashAlgorithms: POINTER(UInt16)
class SecPkgContext_Target(Structure):
    TargetLength: UInt32
    Target: Windows.Win32.Foundation.PSTR
class SecPkgContext_TargetInformation(Structure):
    MarshalledTargetInfoLength: UInt32
    MarshalledTargetInfo: c_char_p_no
class SecPkgContext_TokenBinding(Structure):
    MajorVersion: Byte
    MinorVersion: Byte
    KeyParametersSize: UInt16
    KeyParameters: c_char_p_no
class SecPkgContext_UiInfo(Structure):
    hParentWindow: Windows.Win32.Foundation.HWND
class SecPkgContext_UserFlags(Structure):
    UserFlags: UInt32
class SecPkgCred_CipherStrengths(Structure):
    dwMinimumCipherStrength: UInt32
    dwMaximumCipherStrength: UInt32
class SecPkgCred_ClientCertPolicy(Structure):
    dwFlags: UInt32
    guidPolicyId: Guid
    dwCertFlags: UInt32
    dwUrlRetrievalTimeout: UInt32
    fCheckRevocationFreshnessTime: Windows.Win32.Foundation.BOOL
    dwRevocationFreshnessTime: UInt32
    fOmitUsageCheck: Windows.Win32.Foundation.BOOL
    pwszSslCtlStoreName: Windows.Win32.Foundation.PWSTR
    pwszSslCtlIdentifier: Windows.Win32.Foundation.PWSTR
class SecPkgCred_SessionTicketKey(Structure):
    TicketInfoVersion: UInt32
    KeyId: Byte * 16
    KeyingMaterial: Byte * 64
    KeyingMaterialSize: Byte
class SecPkgCred_SessionTicketKeys(Structure):
    cSessionTicketKeys: UInt32
    pSessionTicketKeys: POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgCred_SessionTicketKey_head)
class SecPkgCred_SupportedAlgs(Structure):
    cSupportedAlgs: UInt32
    palgSupportedAlgs: POINTER(UInt32)
class SecPkgCred_SupportedProtocols(Structure):
    grbitProtocol: UInt32
class SecPkgCredentials_Cert(Structure):
    EncodedCertSize: UInt32
    EncodedCert: c_char_p_no
class SecPkgCredentials_KdcProxySettingsW(Structure):
    Version: UInt32
    Flags: UInt32
    ProxyServerOffset: UInt16
    ProxyServerLength: UInt16
    ClientTlsCredOffset: UInt16
    ClientTlsCredLength: UInt16
class SecPkgCredentials_NamesA(Structure):
    sUserName: POINTER(SByte)
class SecPkgCredentials_NamesW(Structure):
    sUserName: POINTER(UInt16)
class SecPkgCredentials_SSIProviderA(Structure):
    sProviderName: POINTER(SByte)
    ProviderInfoLength: UInt32
    ProviderInfo: Windows.Win32.Foundation.PSTR
class SecPkgCredentials_SSIProviderW(Structure):
    sProviderName: POINTER(UInt16)
    ProviderInfoLength: UInt32
    ProviderInfo: Windows.Win32.Foundation.PSTR
class SecPkgInfoA(Structure):
    fCapabilities: UInt32
    wVersion: UInt16
    wRPCID: UInt16
    cbMaxToken: UInt32
    Name: POINTER(SByte)
    Comment: POINTER(SByte)
class SecPkgInfoW(Structure):
    fCapabilities: UInt32
    wVersion: UInt16
    wRPCID: UInt16
    cbMaxToken: UInt32
    Name: POINTER(UInt16)
    Comment: POINTER(UInt16)
class SecurityFunctionTableA(Structure):
    dwVersion: UInt32
    EnumerateSecurityPackagesA: Windows.Win32.Security.Authentication.Identity.ENUMERATE_SECURITY_PACKAGES_FN_A
    QueryCredentialsAttributesA: Windows.Win32.Security.Authentication.Identity.QUERY_CREDENTIALS_ATTRIBUTES_FN_A
    AcquireCredentialsHandleA: Windows.Win32.Security.Authentication.Identity.ACQUIRE_CREDENTIALS_HANDLE_FN_A
    FreeCredentialsHandle: Windows.Win32.Security.Authentication.Identity.FREE_CREDENTIALS_HANDLE_FN
    Reserved2: c_void_p
    InitializeSecurityContextA: Windows.Win32.Security.Authentication.Identity.INITIALIZE_SECURITY_CONTEXT_FN_A
    AcceptSecurityContext: Windows.Win32.Security.Authentication.Identity.ACCEPT_SECURITY_CONTEXT_FN
    CompleteAuthToken: Windows.Win32.Security.Authentication.Identity.COMPLETE_AUTH_TOKEN_FN
    DeleteSecurityContext: Windows.Win32.Security.Authentication.Identity.DELETE_SECURITY_CONTEXT_FN
    ApplyControlToken: Windows.Win32.Security.Authentication.Identity.APPLY_CONTROL_TOKEN_FN
    QueryContextAttributesA: Windows.Win32.Security.Authentication.Identity.QUERY_CONTEXT_ATTRIBUTES_FN_A
    ImpersonateSecurityContext: Windows.Win32.Security.Authentication.Identity.IMPERSONATE_SECURITY_CONTEXT_FN
    RevertSecurityContext: Windows.Win32.Security.Authentication.Identity.REVERT_SECURITY_CONTEXT_FN
    MakeSignature: Windows.Win32.Security.Authentication.Identity.MAKE_SIGNATURE_FN
    VerifySignature: Windows.Win32.Security.Authentication.Identity.VERIFY_SIGNATURE_FN
    FreeContextBuffer: Windows.Win32.Security.Authentication.Identity.FREE_CONTEXT_BUFFER_FN
    QuerySecurityPackageInfoA: Windows.Win32.Security.Authentication.Identity.QUERY_SECURITY_PACKAGE_INFO_FN_A
    Reserved3: c_void_p
    Reserved4: c_void_p
    ExportSecurityContext: Windows.Win32.Security.Authentication.Identity.EXPORT_SECURITY_CONTEXT_FN
    ImportSecurityContextA: Windows.Win32.Security.Authentication.Identity.IMPORT_SECURITY_CONTEXT_FN_A
    AddCredentialsA: Windows.Win32.Security.Authentication.Identity.ADD_CREDENTIALS_FN_A
    Reserved8: c_void_p
    QuerySecurityContextToken: Windows.Win32.Security.Authentication.Identity.QUERY_SECURITY_CONTEXT_TOKEN_FN
    EncryptMessage: Windows.Win32.Security.Authentication.Identity.ENCRYPT_MESSAGE_FN
    DecryptMessage: Windows.Win32.Security.Authentication.Identity.DECRYPT_MESSAGE_FN
    SetContextAttributesA: Windows.Win32.Security.Authentication.Identity.SET_CONTEXT_ATTRIBUTES_FN_A
    SetCredentialsAttributesA: Windows.Win32.Security.Authentication.Identity.SET_CREDENTIALS_ATTRIBUTES_FN_A
    ChangeAccountPasswordA: Windows.Win32.Security.Authentication.Identity.CHANGE_PASSWORD_FN_A
    QueryContextAttributesExA: Windows.Win32.Security.Authentication.Identity.QUERY_CONTEXT_ATTRIBUTES_EX_FN_A
    QueryCredentialsAttributesExA: Windows.Win32.Security.Authentication.Identity.QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_A
class SecurityFunctionTableW(Structure):
    dwVersion: UInt32
    EnumerateSecurityPackagesW: Windows.Win32.Security.Authentication.Identity.ENUMERATE_SECURITY_PACKAGES_FN_W
    QueryCredentialsAttributesW: Windows.Win32.Security.Authentication.Identity.QUERY_CREDENTIALS_ATTRIBUTES_FN_W
    AcquireCredentialsHandleW: Windows.Win32.Security.Authentication.Identity.ACQUIRE_CREDENTIALS_HANDLE_FN_W
    FreeCredentialsHandle: Windows.Win32.Security.Authentication.Identity.FREE_CREDENTIALS_HANDLE_FN
    Reserved2: c_void_p
    InitializeSecurityContextW: Windows.Win32.Security.Authentication.Identity.INITIALIZE_SECURITY_CONTEXT_FN_W
    AcceptSecurityContext: Windows.Win32.Security.Authentication.Identity.ACCEPT_SECURITY_CONTEXT_FN
    CompleteAuthToken: Windows.Win32.Security.Authentication.Identity.COMPLETE_AUTH_TOKEN_FN
    DeleteSecurityContext: Windows.Win32.Security.Authentication.Identity.DELETE_SECURITY_CONTEXT_FN
    ApplyControlToken: Windows.Win32.Security.Authentication.Identity.APPLY_CONTROL_TOKEN_FN
    QueryContextAttributesW: Windows.Win32.Security.Authentication.Identity.QUERY_CONTEXT_ATTRIBUTES_FN_W
    ImpersonateSecurityContext: Windows.Win32.Security.Authentication.Identity.IMPERSONATE_SECURITY_CONTEXT_FN
    RevertSecurityContext: Windows.Win32.Security.Authentication.Identity.REVERT_SECURITY_CONTEXT_FN
    MakeSignature: Windows.Win32.Security.Authentication.Identity.MAKE_SIGNATURE_FN
    VerifySignature: Windows.Win32.Security.Authentication.Identity.VERIFY_SIGNATURE_FN
    FreeContextBuffer: Windows.Win32.Security.Authentication.Identity.FREE_CONTEXT_BUFFER_FN
    QuerySecurityPackageInfoW: Windows.Win32.Security.Authentication.Identity.QUERY_SECURITY_PACKAGE_INFO_FN_W
    Reserved3: c_void_p
    Reserved4: c_void_p
    ExportSecurityContext: Windows.Win32.Security.Authentication.Identity.EXPORT_SECURITY_CONTEXT_FN
    ImportSecurityContextW: Windows.Win32.Security.Authentication.Identity.IMPORT_SECURITY_CONTEXT_FN_W
    AddCredentialsW: Windows.Win32.Security.Authentication.Identity.ADD_CREDENTIALS_FN_W
    Reserved8: c_void_p
    QuerySecurityContextToken: Windows.Win32.Security.Authentication.Identity.QUERY_SECURITY_CONTEXT_TOKEN_FN
    EncryptMessage: Windows.Win32.Security.Authentication.Identity.ENCRYPT_MESSAGE_FN
    DecryptMessage: Windows.Win32.Security.Authentication.Identity.DECRYPT_MESSAGE_FN
    SetContextAttributesW: Windows.Win32.Security.Authentication.Identity.SET_CONTEXT_ATTRIBUTES_FN_W
    SetCredentialsAttributesW: Windows.Win32.Security.Authentication.Identity.SET_CREDENTIALS_ATTRIBUTES_FN_W
    ChangeAccountPasswordW: Windows.Win32.Security.Authentication.Identity.CHANGE_PASSWORD_FN_W
    QueryContextAttributesExW: Windows.Win32.Security.Authentication.Identity.QUERY_CONTEXT_ATTRIBUTES_EX_FN_W
    QueryCredentialsAttributesExW: Windows.Win32.Security.Authentication.Identity.QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_W
@winfunctype_pointer
def SpAcceptCredentialsFn(LogonType: Windows.Win32.Security.Authentication.Identity.SECURITY_LOGON_TYPE, AccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), PrimaryCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_PRIMARY_CRED_head), SupplementalCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_SUPPLEMENTAL_CRED_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpAcceptLsaModeContextFn(CredentialHandle: UIntPtr, ContextHandle: UIntPtr, InputBuffer: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), ContextRequirements: UInt32, TargetDataRep: UInt32, NewContextHandle: POINTER(UIntPtr), OutputBuffer: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), ContextAttributes: POINTER(UInt32), ExpirationTime: POINTER(Int64), MappedContext: POINTER(Windows.Win32.Foundation.BOOLEAN), ContextData: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpAcquireCredentialsHandleFn(PrincipalName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), CredentialUseFlags: UInt32, LogonId: POINTER(Windows.Win32.Foundation.LUID_head), AuthorizationData: c_void_p, GetKeyFunciton: c_void_p, GetKeyArgument: c_void_p, CredentialHandle: POINTER(UIntPtr), ExpirationTime: POINTER(Int64)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpAddCredentialsFn(CredentialHandle: UIntPtr, PrincipalName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Package: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), CredentialUseFlags: UInt32, AuthorizationData: c_void_p, GetKeyFunciton: c_void_p, GetKeyArgument: c_void_p, ExpirationTime: POINTER(Int64)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpApplyControlTokenFn(ContextHandle: UIntPtr, ControlToken: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpChangeAccountPasswordFn(pDomainName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), pAccountName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), pOldPassword: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), pNewPassword: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), Impersonating: Windows.Win32.Foundation.BOOLEAN, pOutput: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpCompleteAuthTokenFn(ContextHandle: UIntPtr, InputBuffer: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpDeleteContextFn(ContextHandle: UIntPtr) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpDeleteCredentialsFn(CredentialHandle: UIntPtr, Key: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpExchangeMetaDataFn(CredentialHandle: UIntPtr, TargetName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ContextRequirements: UInt32, MetaDataLength: UInt32, MetaData: c_char_p_no, ContextHandle: POINTER(UIntPtr)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpExportSecurityContextFn(phContext: UIntPtr, fFlags: UInt32, pPackedContext: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), pToken: POINTER(Windows.Win32.Foundation.HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpFormatCredentialsFn(Credentials: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), FormattedCredentials: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpFreeCredentialsHandleFn(CredentialHandle: UIntPtr) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetContextTokenFn(ContextHandle: UIntPtr, ImpersonationToken: POINTER(Windows.Win32.Foundation.HANDLE)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetCredUIContextFn(ContextHandle: UIntPtr, CredType: POINTER(Guid), FlatCredUIContextLength: POINTER(UInt32), FlatCredUIContext: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetCredentialsFn(CredentialHandle: UIntPtr, Credentials: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetExtendedInformationFn(Class: Windows.Win32.Security.Authentication.Identity.SECPKG_EXTENDED_INFORMATION_CLASS, ppInformation: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_EXTENDED_INFORMATION_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetInfoFn(PackageInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SecPkgInfoA_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetRemoteCredGuardLogonBufferFn(CredHandle: UIntPtr, ContextHandle: UIntPtr, TargetName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), RedirectedLogonHandle: POINTER(Windows.Win32.Foundation.HANDLE), Callback: POINTER(Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_CALLBACK), CleanupCallback: POINTER(Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_CLEANUP_CALLBACK), LogonBufferSize: POINTER(UInt32), LogonBuffer: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetRemoteCredGuardSupplementalCredsFn(CredHandle: UIntPtr, TargetName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), RedirectedLogonHandle: POINTER(Windows.Win32.Foundation.HANDLE), Callback: POINTER(Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_CALLBACK), CleanupCallback: POINTER(Windows.Win32.Security.Authentication.Identity.PLSA_REDIRECTED_LOGON_CLEANUP_CALLBACK), SupplementalCredsSize: POINTER(UInt32), SupplementalCreds: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetTbalSupplementalCredsFn(LogonId: Windows.Win32.Foundation.LUID, SupplementalCredsSize: POINTER(UInt32), SupplementalCreds: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpGetUserInfoFn(LogonId: POINTER(Windows.Win32.Foundation.LUID_head), Flags: UInt32, UserData: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECURITY_USER_DATA_head))) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpImportSecurityContextFn(pPackedContext: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head), Token: Windows.Win32.Foundation.HANDLE, phContext: POINTER(UIntPtr)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpInitLsaModeContextFn(CredentialHandle: UIntPtr, ContextHandle: UIntPtr, TargetName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ContextRequirements: UInt32, TargetDataRep: UInt32, InputBuffers: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), NewContextHandle: POINTER(UIntPtr), OutputBuffers: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), ContextAttributes: POINTER(UInt32), ExpirationTime: POINTER(Int64), MappedContext: POINTER(Windows.Win32.Foundation.BOOLEAN), ContextData: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpInitUserModeContextFn(ContextHandle: UIntPtr, PackedContext: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpInitializeFn(PackageId: UIntPtr, Parameters: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_PARAMETERS_head), FunctionTable: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_SECPKG_FUNCTION_TABLE_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpInstanceInitFn(Version: UInt32, FunctionTable: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_DLL_FUNCTIONS_head), UserFunctions: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpLsaModeInitializeFn(LsaVersion: UInt32, PackageVersion: POINTER(UInt32), ppTables: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_FUNCTION_TABLE_head)), pcTables: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpMakeSignatureFn(ContextHandle: UIntPtr, QualityOfProtection: UInt32, MessageBuffers: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSequenceNumber: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpMarshalAttributeDataFn(AttributeInfo: UInt32, Attribute: UInt32, AttributeDataSize: UInt32, AttributeData: c_char_p_no, MarshaledAttributeDataSize: POINTER(UInt32), MarshaledAttributeData: POINTER(c_char_p_no)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpMarshallSupplementalCredsFn(CredentialSize: UInt32, Credentials: c_char_p_no, MarshalledCredSize: POINTER(UInt32), MarshalledCreds: POINTER(c_void_p)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpQueryContextAttributesFn(ContextHandle: UIntPtr, ContextAttribute: UInt32, Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpQueryCredentialsAttributesFn(CredentialHandle: UIntPtr, CredentialAttribute: UInt32, Buffer: c_void_p) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpQueryMetaDataFn(CredentialHandle: UIntPtr, TargetName: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head), ContextRequirements: UInt32, MetaDataLength: POINTER(UInt32), MetaData: POINTER(c_char_p_no), ContextHandle: POINTER(UIntPtr)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpSaveCredentialsFn(CredentialHandle: UIntPtr, Credentials: POINTER(Windows.Win32.Security.Authentication.Identity.SecBuffer_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpSealMessageFn(ContextHandle: UIntPtr, QualityOfProtection: UInt32, MessageBuffers: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSequenceNumber: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpSetContextAttributesFn(ContextHandle: UIntPtr, ContextAttribute: UInt32, Buffer: c_void_p, BufferSize: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpSetCredentialsAttributesFn(CredentialHandle: UIntPtr, CredentialAttribute: UInt32, Buffer: c_void_p, BufferSize: UInt32) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpSetExtendedInformationFn(Class: Windows.Win32.Security.Authentication.Identity.SECPKG_EXTENDED_INFORMATION_CLASS, Info: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_EXTENDED_INFORMATION_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpShutdownFn() -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpUnsealMessageFn(ContextHandle: UIntPtr, MessageBuffers: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSequenceNumber: UInt32, QualityOfProtection: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpUpdateCredentialsFn(ContextHandle: UIntPtr, CredType: POINTER(Guid), FlatCredUIContextLength: UInt32, FlatCredUIContext: c_char_p_no) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpUserModeInitializeFn(LsaVersion: UInt32, PackageVersion: POINTER(UInt32), ppTables: POINTER(POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_USER_FUNCTION_TABLE_head)), pcTables: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpValidateTargetInfoFn(ClientRequest: POINTER(c_void_p), ProtocolSubmitBuffer: c_void_p, ClientBufferBase: c_void_p, SubmitBufferLength: UInt32, TargetInfo: POINTER(Windows.Win32.Security.Authentication.Identity.SECPKG_TARGETINFO_head)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SpVerifySignatureFn(ContextHandle: UIntPtr, MessageBuffers: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), MessageSequenceNumber: UInt32, QualityOfProtection: POINTER(UInt32)) -> Windows.Win32.Foundation.NTSTATUS: ...
@winfunctype_pointer
def SslGetExtensionsFn(clientHello: c_char_p_no, clientHelloByteSize: UInt32, genericExtensions: POINTER(Windows.Win32.Security.Authentication.Identity.SCH_EXTENSION_DATA_head), genericExtensionsCount: Byte, bytesToRead: POINTER(UInt32), flags: Windows.Win32.Security.Authentication.Identity.SchGetExtensionsOptions) -> Windows.Win32.Foundation.HRESULT: ...
@winfunctype_pointer
def SslGetServerIdentityFn(ClientHello: c_char_p_no, ClientHelloSize: UInt32, ServerIdentity: POINTER(c_char_p_no), ServerIdentitySize: POINTER(UInt32), Flags: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
class TLS_EXTENSION_SUBSCRIPTION(Structure):
    ExtensionType: UInt16
    HandshakeType: UInt16
TOKENBINDING_EXTENSION_FORMAT = Int32
TOKENBINDING_EXTENSION_FORMAT_UNDEFINED: TOKENBINDING_EXTENSION_FORMAT = 0
class TOKENBINDING_IDENTIFIER(Structure):
    keyType: Byte
TOKENBINDING_KEY_PARAMETERS_TYPE = Int32
TOKENBINDING_KEY_PARAMETERS_TYPE_RSA2048_PKCS: TOKENBINDING_KEY_PARAMETERS_TYPE = 0
TOKENBINDING_KEY_PARAMETERS_TYPE_RSA2048_PSS: TOKENBINDING_KEY_PARAMETERS_TYPE = 1
TOKENBINDING_KEY_PARAMETERS_TYPE_ECDSAP256: TOKENBINDING_KEY_PARAMETERS_TYPE = 2
TOKENBINDING_KEY_PARAMETERS_TYPE_ANYEXISTING: TOKENBINDING_KEY_PARAMETERS_TYPE = 255
class TOKENBINDING_KEY_TYPES(Structure):
    keyCount: UInt32
    keyType: POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_KEY_PARAMETERS_TYPE)
class TOKENBINDING_RESULT_DATA(Structure):
    bindingType: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_TYPE
    identifierSize: UInt32
    identifierData: POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_IDENTIFIER_head)
    extensionFormat: Windows.Win32.Security.Authentication.Identity.TOKENBINDING_EXTENSION_FORMAT
    extensionSize: UInt32
    extensionData: c_void_p
class TOKENBINDING_RESULT_LIST(Structure):
    resultCount: UInt32
    resultData: POINTER(Windows.Win32.Security.Authentication.Identity.TOKENBINDING_RESULT_DATA_head)
TOKENBINDING_TYPE = Int32
TOKENBINDING_TYPE_PROVIDED: TOKENBINDING_TYPE = 0
TOKENBINDING_TYPE_REFERRED: TOKENBINDING_TYPE = 1
class TRUSTED_CONTROLLERS_INFO(Structure):
    Entries: UInt32
    Names: POINTER(Windows.Win32.Foundation.UNICODE_STRING_head)
class TRUSTED_DOMAIN_AUTH_INFORMATION(Structure):
    IncomingAuthInfos: UInt32
    IncomingAuthenticationInformation: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_AUTH_INFORMATION_head)
    IncomingPreviousAuthenticationInformation: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_AUTH_INFORMATION_head)
    OutgoingAuthInfos: UInt32
    OutgoingAuthenticationInformation: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_AUTH_INFORMATION_head)
    OutgoingPreviousAuthenticationInformation: POINTER(Windows.Win32.Security.Authentication.Identity.LSA_AUTH_INFORMATION_head)
class TRUSTED_DOMAIN_FULL_INFORMATION(Structure):
    Information: Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_INFORMATION_EX
    PosixOffset: Windows.Win32.Security.Authentication.Identity.TRUSTED_POSIX_OFFSET_INFO
    AuthInformation: Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_AUTH_INFORMATION
class TRUSTED_DOMAIN_FULL_INFORMATION2(Structure):
    Information: Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_INFORMATION_EX2
    PosixOffset: Windows.Win32.Security.Authentication.Identity.TRUSTED_POSIX_OFFSET_INFO
    AuthInformation: Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_AUTH_INFORMATION
class TRUSTED_DOMAIN_INFORMATION_EX(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
    FlatName: Windows.Win32.Foundation.UNICODE_STRING
    Sid: Windows.Win32.Foundation.PSID
    TrustDirection: Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_TRUST_DIRECTION
    TrustType: Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_TRUST_TYPE
    TrustAttributes: Windows.Win32.Security.Authentication.Identity.TRUSTED_DOMAIN_TRUST_ATTRIBUTES
class TRUSTED_DOMAIN_INFORMATION_EX2(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
    FlatName: Windows.Win32.Foundation.UNICODE_STRING
    Sid: Windows.Win32.Foundation.PSID
    TrustDirection: UInt32
    TrustType: UInt32
    TrustAttributes: UInt32
    ForestTrustLength: UInt32
    ForestTrustInfo: c_char_p_no
class TRUSTED_DOMAIN_NAME_INFO(Structure):
    Name: Windows.Win32.Foundation.UNICODE_STRING
class TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES(Structure):
    SupportedEncryptionTypes: UInt32
TRUSTED_DOMAIN_TRUST_ATTRIBUTES = UInt32
TRUST_ATTRIBUTE_NON_TRANSITIVE: TRUSTED_DOMAIN_TRUST_ATTRIBUTES = 1
TRUST_ATTRIBUTE_UPLEVEL_ONLY: TRUSTED_DOMAIN_TRUST_ATTRIBUTES = 2
TRUST_ATTRIBUTE_FILTER_SIDS: TRUSTED_DOMAIN_TRUST_ATTRIBUTES = 4
TRUST_ATTRIBUTE_FOREST_TRANSITIVE: TRUSTED_DOMAIN_TRUST_ATTRIBUTES = 8
TRUST_ATTRIBUTE_CROSS_ORGANIZATION: TRUSTED_DOMAIN_TRUST_ATTRIBUTES = 16
TRUST_ATTRIBUTE_TREAT_AS_EXTERNAL: TRUSTED_DOMAIN_TRUST_ATTRIBUTES = 64
TRUST_ATTRIBUTE_WITHIN_FOREST: TRUSTED_DOMAIN_TRUST_ATTRIBUTES = 32
TRUSTED_DOMAIN_TRUST_DIRECTION = UInt32
TRUST_DIRECTION_DISABLED: TRUSTED_DOMAIN_TRUST_DIRECTION = 0
TRUST_DIRECTION_INBOUND: TRUSTED_DOMAIN_TRUST_DIRECTION = 1
TRUST_DIRECTION_OUTBOUND: TRUSTED_DOMAIN_TRUST_DIRECTION = 2
TRUST_DIRECTION_BIDIRECTIONAL: TRUSTED_DOMAIN_TRUST_DIRECTION = 3
TRUSTED_DOMAIN_TRUST_TYPE = UInt32
TRUST_TYPE_DOWNLEVEL: TRUSTED_DOMAIN_TRUST_TYPE = 1
TRUST_TYPE_UPLEVEL: TRUSTED_DOMAIN_TRUST_TYPE = 2
TRUST_TYPE_MIT: TRUSTED_DOMAIN_TRUST_TYPE = 3
TRUST_TYPE_DCE: TRUSTED_DOMAIN_TRUST_TYPE = 4
TRUSTED_INFORMATION_CLASS = Int32
TRUSTED_INFORMATION_CLASS_TrustedDomainNameInformation: TRUSTED_INFORMATION_CLASS = 1
TRUSTED_INFORMATION_CLASS_TrustedControllersInformation: TRUSTED_INFORMATION_CLASS = 2
TRUSTED_INFORMATION_CLASS_TrustedPosixOffsetInformation: TRUSTED_INFORMATION_CLASS = 3
TRUSTED_INFORMATION_CLASS_TrustedPasswordInformation: TRUSTED_INFORMATION_CLASS = 4
TRUSTED_INFORMATION_CLASS_TrustedDomainInformationBasic: TRUSTED_INFORMATION_CLASS = 5
TRUSTED_INFORMATION_CLASS_TrustedDomainInformationEx: TRUSTED_INFORMATION_CLASS = 6
TRUSTED_INFORMATION_CLASS_TrustedDomainAuthInformation: TRUSTED_INFORMATION_CLASS = 7
TRUSTED_INFORMATION_CLASS_TrustedDomainFullInformation: TRUSTED_INFORMATION_CLASS = 8
TRUSTED_INFORMATION_CLASS_TrustedDomainAuthInformationInternal: TRUSTED_INFORMATION_CLASS = 9
TRUSTED_INFORMATION_CLASS_TrustedDomainFullInformationInternal: TRUSTED_INFORMATION_CLASS = 10
TRUSTED_INFORMATION_CLASS_TrustedDomainInformationEx2Internal: TRUSTED_INFORMATION_CLASS = 11
TRUSTED_INFORMATION_CLASS_TrustedDomainFullInformation2Internal: TRUSTED_INFORMATION_CLASS = 12
TRUSTED_INFORMATION_CLASS_TrustedDomainSupportedEncryptionTypes: TRUSTED_INFORMATION_CLASS = 13
class TRUSTED_PASSWORD_INFO(Structure):
    Password: Windows.Win32.Foundation.UNICODE_STRING
    OldPassword: Windows.Win32.Foundation.UNICODE_STRING
class TRUSTED_POSIX_OFFSET_INFO(Structure):
    Offset: UInt32
class USER_ALL_INFORMATION(Structure):
    LastLogon: Int64
    LastLogoff: Int64
    PasswordLastSet: Int64
    AccountExpires: Int64
    PasswordCanChange: Int64
    PasswordMustChange: Int64
    UserName: Windows.Win32.Foundation.UNICODE_STRING
    FullName: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectory: Windows.Win32.Foundation.UNICODE_STRING
    HomeDirectoryDrive: Windows.Win32.Foundation.UNICODE_STRING
    ScriptPath: Windows.Win32.Foundation.UNICODE_STRING
    ProfilePath: Windows.Win32.Foundation.UNICODE_STRING
    AdminComment: Windows.Win32.Foundation.UNICODE_STRING
    WorkStations: Windows.Win32.Foundation.UNICODE_STRING
    UserComment: Windows.Win32.Foundation.UNICODE_STRING
    Parameters: Windows.Win32.Foundation.UNICODE_STRING
    LmPassword: Windows.Win32.Foundation.UNICODE_STRING
    NtPassword: Windows.Win32.Foundation.UNICODE_STRING
    PrivateData: Windows.Win32.Foundation.UNICODE_STRING
    SecurityDescriptor: Windows.Win32.Security.Authentication.Identity.SR_SECURITY_DESCRIPTOR
    UserId: UInt32
    PrimaryGroupId: UInt32
    UserAccountControl: UInt32
    WhichFields: UInt32
    LogonHours: Windows.Win32.Security.Authentication.Identity.LOGON_HOURS
    BadPasswordCount: UInt16
    LogonCount: UInt16
    CountryCode: UInt16
    CodePage: UInt16
    LmPasswordPresent: Windows.Win32.Foundation.BOOLEAN
    NtPasswordPresent: Windows.Win32.Foundation.BOOLEAN
    PasswordExpired: Windows.Win32.Foundation.BOOLEAN
    PrivateDataSensitive: Windows.Win32.Foundation.BOOLEAN
    _pack_ = 4
class USER_SESSION_KEY(Structure):
    data: Windows.Win32.System.PasswordManagement.CYPHER_BLOCK * 2
@winfunctype_pointer
def VERIFY_SIGNATURE_FN(param0: POINTER(Windows.Win32.Security.Credentials.SecHandle_head), param1: POINTER(Windows.Win32.Security.Authentication.Identity.SecBufferDesc_head), param2: UInt32, param3: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class X509Certificate(Structure):
    Version: UInt32
    SerialNumber: UInt32 * 4
    SignatureAlgorithm: UInt32
    ValidFrom: Windows.Win32.Foundation.FILETIME
    ValidUntil: Windows.Win32.Foundation.FILETIME
    pszIssuer: Windows.Win32.Foundation.PSTR
    pszSubject: Windows.Win32.Foundation.PSTR
    pPublicKey: POINTER(Windows.Win32.Security.Authentication.Identity.PctPublicKey_head)
class _HMAPPER(Structure):
    pass
eTlsHashAlgorithm = Int32
TlsHashAlgorithm_None: eTlsHashAlgorithm = 0
TlsHashAlgorithm_Md5: eTlsHashAlgorithm = 1
TlsHashAlgorithm_Sha1: eTlsHashAlgorithm = 2
TlsHashAlgorithm_Sha224: eTlsHashAlgorithm = 3
TlsHashAlgorithm_Sha256: eTlsHashAlgorithm = 4
TlsHashAlgorithm_Sha384: eTlsHashAlgorithm = 5
TlsHashAlgorithm_Sha512: eTlsHashAlgorithm = 6
eTlsSignatureAlgorithm = Int32
TlsSignatureAlgorithm_Anonymous: eTlsSignatureAlgorithm = 0
TlsSignatureAlgorithm_Rsa: eTlsSignatureAlgorithm = 1
TlsSignatureAlgorithm_Dsa: eTlsSignatureAlgorithm = 2
TlsSignatureAlgorithm_Ecdsa: eTlsSignatureAlgorithm = 3
make_head(_module, 'ACCEPT_SECURITY_CONTEXT_FN')
make_head(_module, 'ACQUIRE_CREDENTIALS_HANDLE_FN_A')
make_head(_module, 'ACQUIRE_CREDENTIALS_HANDLE_FN_W')
make_head(_module, 'ADD_CREDENTIALS_FN_A')
make_head(_module, 'ADD_CREDENTIALS_FN_W')
make_head(_module, 'APPLY_CONTROL_TOKEN_FN')
make_head(_module, 'AUDIT_POLICY_INFORMATION')
make_head(_module, 'CENTRAL_ACCESS_POLICY')
make_head(_module, 'CENTRAL_ACCESS_POLICY_ENTRY')
make_head(_module, 'CHANGE_PASSWORD_FN_A')
make_head(_module, 'CHANGE_PASSWORD_FN_W')
make_head(_module, 'CLEAR_BLOCK')
make_head(_module, 'COMPLETE_AUTH_TOKEN_FN')
make_head(_module, 'CredFreeCredentialsFn')
make_head(_module, 'CredReadDomainCredentialsFn')
make_head(_module, 'CredReadFn')
make_head(_module, 'CredWriteFn')
make_head(_module, 'CrediUnmarshalandDecodeStringFn')
make_head(_module, 'DECRYPT_MESSAGE_FN')
make_head(_module, 'DELETE_SECURITY_CONTEXT_FN')
make_head(_module, 'DOMAIN_PASSWORD_INFORMATION')
make_head(_module, 'ENCRYPTED_CREDENTIALW')
make_head(_module, 'ENCRYPT_MESSAGE_FN')
make_head(_module, 'ENUMERATE_SECURITY_PACKAGES_FN_A')
make_head(_module, 'ENUMERATE_SECURITY_PACKAGES_FN_W')
make_head(_module, 'EXPORT_SECURITY_CONTEXT_FN')
make_head(_module, 'FREE_CONTEXT_BUFFER_FN')
make_head(_module, 'FREE_CREDENTIALS_HANDLE_FN')
make_head(_module, 'ICcgDomainAuthCredentials')
make_head(_module, 'IMPERSONATE_SECURITY_CONTEXT_FN')
make_head(_module, 'IMPORT_SECURITY_CONTEXT_FN_A')
make_head(_module, 'IMPORT_SECURITY_CONTEXT_FN_W')
make_head(_module, 'INITIALIZE_SECURITY_CONTEXT_FN_A')
make_head(_module, 'INITIALIZE_SECURITY_CONTEXT_FN_W')
make_head(_module, 'INIT_SECURITY_INTERFACE_A')
make_head(_module, 'INIT_SECURITY_INTERFACE_W')
make_head(_module, 'KDC_PROXY_CACHE_ENTRY_DATA')
make_head(_module, 'KERB_ADD_BINDING_CACHE_ENTRY_EX_REQUEST')
make_head(_module, 'KERB_ADD_BINDING_CACHE_ENTRY_REQUEST')
make_head(_module, 'KERB_ADD_CREDENTIALS_REQUEST')
make_head(_module, 'KERB_ADD_CREDENTIALS_REQUEST_EX')
make_head(_module, 'KERB_AUTH_DATA')
make_head(_module, 'KERB_BINDING_CACHE_ENTRY_DATA')
make_head(_module, 'KERB_CERTIFICATE_HASHINFO')
make_head(_module, 'KERB_CERTIFICATE_INFO')
make_head(_module, 'KERB_CERTIFICATE_LOGON')
make_head(_module, 'KERB_CERTIFICATE_S4U_LOGON')
make_head(_module, 'KERB_CERTIFICATE_UNLOCK_LOGON')
make_head(_module, 'KERB_CHANGEPASSWORD_REQUEST')
make_head(_module, 'KERB_CLEANUP_MACHINE_PKINIT_CREDS_REQUEST')
make_head(_module, 'KERB_CLOUD_KERBEROS_DEBUG_DATA_V0')
make_head(_module, 'KERB_CLOUD_KERBEROS_DEBUG_REQUEST')
make_head(_module, 'KERB_CLOUD_KERBEROS_DEBUG_RESPONSE')
make_head(_module, 'KERB_CRYPTO_KEY')
make_head(_module, 'KERB_CRYPTO_KEY32')
make_head(_module, 'KERB_DECRYPT_REQUEST')
make_head(_module, 'KERB_DECRYPT_RESPONSE')
make_head(_module, 'KERB_EXTERNAL_NAME')
make_head(_module, 'KERB_EXTERNAL_TICKET')
make_head(_module, 'KERB_INTERACTIVE_LOGON')
make_head(_module, 'KERB_INTERACTIVE_PROFILE')
make_head(_module, 'KERB_INTERACTIVE_UNLOCK_LOGON')
make_head(_module, 'KERB_NET_ADDRESS')
make_head(_module, 'KERB_NET_ADDRESSES')
make_head(_module, 'KERB_PURGE_BINDING_CACHE_REQUEST')
make_head(_module, 'KERB_PURGE_KDC_PROXY_CACHE_REQUEST')
make_head(_module, 'KERB_PURGE_KDC_PROXY_CACHE_RESPONSE')
make_head(_module, 'KERB_PURGE_TKT_CACHE_EX_REQUEST')
make_head(_module, 'KERB_PURGE_TKT_CACHE_REQUEST')
make_head(_module, 'KERB_QUERY_BINDING_CACHE_REQUEST')
make_head(_module, 'KERB_QUERY_BINDING_CACHE_RESPONSE')
make_head(_module, 'KERB_QUERY_DOMAIN_EXTENDED_POLICIES_REQUEST')
make_head(_module, 'KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE')
make_head(_module, 'KERB_QUERY_KDC_PROXY_CACHE_REQUEST')
make_head(_module, 'KERB_QUERY_KDC_PROXY_CACHE_RESPONSE')
make_head(_module, 'KERB_QUERY_S4U2PROXY_CACHE_REQUEST')
make_head(_module, 'KERB_QUERY_S4U2PROXY_CACHE_RESPONSE')
make_head(_module, 'KERB_QUERY_TKT_CACHE_EX2_RESPONSE')
make_head(_module, 'KERB_QUERY_TKT_CACHE_EX3_RESPONSE')
make_head(_module, 'KERB_QUERY_TKT_CACHE_EX_RESPONSE')
make_head(_module, 'KERB_QUERY_TKT_CACHE_REQUEST')
make_head(_module, 'KERB_QUERY_TKT_CACHE_RESPONSE')
make_head(_module, 'KERB_REFRESH_POLICY_REQUEST')
make_head(_module, 'KERB_REFRESH_POLICY_RESPONSE')
make_head(_module, 'KERB_REFRESH_SCCRED_REQUEST')
make_head(_module, 'KERB_RETRIEVE_KEY_TAB_REQUEST')
make_head(_module, 'KERB_RETRIEVE_KEY_TAB_RESPONSE')
make_head(_module, 'KERB_RETRIEVE_TKT_REQUEST')
make_head(_module, 'KERB_RETRIEVE_TKT_RESPONSE')
make_head(_module, 'KERB_S4U2PROXY_CACHE_ENTRY_INFO')
make_head(_module, 'KERB_S4U2PROXY_CRED')
make_head(_module, 'KERB_S4U_LOGON')
make_head(_module, 'KERB_SETPASSWORD_EX_REQUEST')
make_head(_module, 'KERB_SETPASSWORD_REQUEST')
make_head(_module, 'KERB_SMART_CARD_LOGON')
make_head(_module, 'KERB_SMART_CARD_PROFILE')
make_head(_module, 'KERB_SMART_CARD_UNLOCK_LOGON')
make_head(_module, 'KERB_SUBMIT_TKT_REQUEST')
make_head(_module, 'KERB_TICKET_CACHE_INFO')
make_head(_module, 'KERB_TICKET_CACHE_INFO_EX')
make_head(_module, 'KERB_TICKET_CACHE_INFO_EX2')
make_head(_module, 'KERB_TICKET_CACHE_INFO_EX3')
make_head(_module, 'KERB_TICKET_LOGON')
make_head(_module, 'KERB_TICKET_PROFILE')
make_head(_module, 'KERB_TICKET_UNLOCK_LOGON')
make_head(_module, 'KERB_TRANSFER_CRED_REQUEST')
make_head(_module, 'KSEC_LIST_ENTRY')
make_head(_module, 'KspCompleteTokenFn')
make_head(_module, 'KspDeleteContextFn')
make_head(_module, 'KspGetTokenFn')
make_head(_module, 'KspInitContextFn')
make_head(_module, 'KspInitPackageFn')
make_head(_module, 'KspMakeSignatureFn')
make_head(_module, 'KspMapHandleFn')
make_head(_module, 'KspQueryAttributesFn')
make_head(_module, 'KspSealMessageFn')
make_head(_module, 'KspSerializeAuthDataFn')
make_head(_module, 'KspSetPagingModeFn')
make_head(_module, 'KspUnsealMessageFn')
make_head(_module, 'KspVerifySignatureFn')
make_head(_module, 'LOGON_HOURS')
make_head(_module, 'LSA_AP_POST_LOGON_USER')
make_head(_module, 'LSA_AUTH_INFORMATION')
make_head(_module, 'LSA_DISPATCH_TABLE')
make_head(_module, 'LSA_ENUMERATION_INFORMATION')
make_head(_module, 'LSA_FOREST_TRUST_BINARY_DATA')
make_head(_module, 'LSA_FOREST_TRUST_COLLISION_INFORMATION')
make_head(_module, 'LSA_FOREST_TRUST_COLLISION_RECORD')
make_head(_module, 'LSA_FOREST_TRUST_DOMAIN_INFO')
make_head(_module, 'LSA_FOREST_TRUST_INFORMATION')
make_head(_module, 'LSA_FOREST_TRUST_RECORD')
make_head(_module, 'LSA_LAST_INTER_LOGON_INFO')
make_head(_module, 'LSA_REFERENCED_DOMAIN_LIST')
make_head(_module, 'LSA_SECPKG_FUNCTION_TABLE')
make_head(_module, 'LSA_TOKEN_INFORMATION_NULL')
make_head(_module, 'LSA_TOKEN_INFORMATION_V1')
make_head(_module, 'LSA_TOKEN_INFORMATION_V3')
make_head(_module, 'LSA_TRANSLATED_NAME')
make_head(_module, 'LSA_TRANSLATED_SID')
make_head(_module, 'LSA_TRANSLATED_SID2')
make_head(_module, 'LSA_TRUST_INFORMATION')
make_head(_module, 'MAKE_SIGNATURE_FN')
make_head(_module, 'MSV1_0_AV_PAIR')
make_head(_module, 'MSV1_0_CHANGEPASSWORD_REQUEST')
make_head(_module, 'MSV1_0_CHANGEPASSWORD_RESPONSE')
make_head(_module, 'MSV1_0_CREDENTIAL_KEY')
make_head(_module, 'MSV1_0_INTERACTIVE_LOGON')
make_head(_module, 'MSV1_0_INTERACTIVE_PROFILE')
make_head(_module, 'MSV1_0_IUM_SUPPLEMENTAL_CREDENTIAL')
make_head(_module, 'MSV1_0_LM20_LOGON')
make_head(_module, 'MSV1_0_LM20_LOGON_PROFILE')
make_head(_module, 'MSV1_0_NTLM3_RESPONSE')
make_head(_module, 'MSV1_0_PASSTHROUGH_REQUEST')
make_head(_module, 'MSV1_0_PASSTHROUGH_RESPONSE')
make_head(_module, 'MSV1_0_REMOTE_SUPPLEMENTAL_CREDENTIAL')
make_head(_module, 'MSV1_0_S4U_LOGON')
make_head(_module, 'MSV1_0_SUBAUTH_LOGON')
make_head(_module, 'MSV1_0_SUBAUTH_REQUEST')
make_head(_module, 'MSV1_0_SUBAUTH_RESPONSE')
make_head(_module, 'MSV1_0_SUPPLEMENTAL_CREDENTIAL')
make_head(_module, 'MSV1_0_SUPPLEMENTAL_CREDENTIAL_V2')
make_head(_module, 'MSV1_0_SUPPLEMENTAL_CREDENTIAL_V3')
make_head(_module, 'MSV1_0_VALIDATION_INFO')
make_head(_module, 'NEGOTIATE_CALLER_NAME_REQUEST')
make_head(_module, 'NEGOTIATE_CALLER_NAME_RESPONSE')
make_head(_module, 'NEGOTIATE_PACKAGE_PREFIX')
make_head(_module, 'NEGOTIATE_PACKAGE_PREFIXES')
make_head(_module, 'NETLOGON_GENERIC_INFO')
make_head(_module, 'NETLOGON_INTERACTIVE_INFO')
make_head(_module, 'NETLOGON_LOGON_IDENTITY_INFO')
make_head(_module, 'NETLOGON_NETWORK_INFO')
make_head(_module, 'NETLOGON_SERVICE_INFO')
make_head(_module, 'PKSEC_CREATE_CONTEXT_LIST')
make_head(_module, 'PKSEC_DEREFERENCE_LIST_ENTRY')
make_head(_module, 'PKSEC_INSERT_LIST_ENTRY')
make_head(_module, 'PKSEC_LOCATE_PKG_BY_ID')
make_head(_module, 'PKSEC_REFERENCE_LIST_ENTRY')
make_head(_module, 'PKSEC_SERIALIZE_SCHANNEL_AUTH_DATA')
make_head(_module, 'PKSEC_SERIALIZE_WINNT_AUTH_DATA')
make_head(_module, 'PKU2U_CERTIFICATE_S4U_LOGON')
make_head(_module, 'PKU2U_CERT_BLOB')
make_head(_module, 'PKU2U_CREDUI_CONTEXT')
make_head(_module, 'PLSA_ADD_CREDENTIAL')
make_head(_module, 'PLSA_ALLOCATE_CLIENT_BUFFER')
make_head(_module, 'PLSA_ALLOCATE_LSA_HEAP')
make_head(_module, 'PLSA_ALLOCATE_PRIVATE_HEAP')
make_head(_module, 'PLSA_ALLOCATE_SHARED_MEMORY')
make_head(_module, 'PLSA_AP_CALL_PACKAGE')
make_head(_module, 'PLSA_AP_CALL_PACKAGE_PASSTHROUGH')
make_head(_module, 'PLSA_AP_INITIALIZE_PACKAGE')
make_head(_module, 'PLSA_AP_LOGON_TERMINATED')
make_head(_module, 'PLSA_AP_LOGON_USER')
make_head(_module, 'PLSA_AP_LOGON_USER_EX')
make_head(_module, 'PLSA_AP_LOGON_USER_EX2')
make_head(_module, 'PLSA_AP_LOGON_USER_EX3')
make_head(_module, 'PLSA_AP_POST_LOGON_USER_SURROGATE')
make_head(_module, 'PLSA_AP_PRE_LOGON_USER_SURROGATE')
make_head(_module, 'PLSA_AUDIT_ACCOUNT_LOGON')
make_head(_module, 'PLSA_AUDIT_LOGON')
make_head(_module, 'PLSA_AUDIT_LOGON_EX')
make_head(_module, 'PLSA_CALLBACK_FUNCTION')
make_head(_module, 'PLSA_CALL_PACKAGE')
make_head(_module, 'PLSA_CALL_PACKAGEEX')
make_head(_module, 'PLSA_CALL_PACKAGE_PASSTHROUGH')
make_head(_module, 'PLSA_CANCEL_NOTIFICATION')
make_head(_module, 'PLSA_CHECK_PROTECTED_USER_BY_TOKEN')
make_head(_module, 'PLSA_CLIENT_CALLBACK')
make_head(_module, 'PLSA_CLOSE_SAM_USER')
make_head(_module, 'PLSA_CONVERT_AUTH_DATA_TO_TOKEN')
make_head(_module, 'PLSA_COPY_FROM_CLIENT_BUFFER')
make_head(_module, 'PLSA_COPY_TO_CLIENT_BUFFER')
make_head(_module, 'PLSA_CRACK_SINGLE_NAME')
make_head(_module, 'PLSA_CREATE_LOGON_SESSION')
make_head(_module, 'PLSA_CREATE_SHARED_MEMORY')
make_head(_module, 'PLSA_CREATE_THREAD')
make_head(_module, 'PLSA_CREATE_TOKEN')
make_head(_module, 'PLSA_CREATE_TOKEN_EX')
make_head(_module, 'PLSA_DELETE_CREDENTIAL')
make_head(_module, 'PLSA_DELETE_LOGON_SESSION')
make_head(_module, 'PLSA_DELETE_SHARED_MEMORY')
make_head(_module, 'PLSA_DUPLICATE_HANDLE')
make_head(_module, 'PLSA_EXPAND_AUTH_DATA_FOR_DOMAIN')
make_head(_module, 'PLSA_FREE_CLIENT_BUFFER')
make_head(_module, 'PLSA_FREE_LSA_HEAP')
make_head(_module, 'PLSA_FREE_PRIVATE_HEAP')
make_head(_module, 'PLSA_FREE_SHARED_MEMORY')
make_head(_module, 'PLSA_GET_APP_MODE_INFO')
make_head(_module, 'PLSA_GET_AUTH_DATA_FOR_USER')
make_head(_module, 'PLSA_GET_CALL_INFO')
make_head(_module, 'PLSA_GET_CLIENT_INFO')
make_head(_module, 'PLSA_GET_CREDENTIALS')
make_head(_module, 'PLSA_GET_EXTENDED_CALL_FLAGS')
make_head(_module, 'PLSA_GET_SERVICE_ACCOUNT_PASSWORD')
make_head(_module, 'PLSA_GET_USER_AUTH_DATA')
make_head(_module, 'PLSA_GET_USER_CREDENTIALS')
make_head(_module, 'PLSA_IMPERSONATE_CLIENT')
make_head(_module, 'PLSA_LOCATE_PKG_BY_ID')
make_head(_module, 'PLSA_MAP_BUFFER')
make_head(_module, 'PLSA_OPEN_SAM_USER')
make_head(_module, 'PLSA_OPEN_TOKEN_BY_LOGON_ID')
make_head(_module, 'PLSA_PROTECT_MEMORY')
make_head(_module, 'PLSA_QUERY_CLIENT_REQUEST')
make_head(_module, 'PLSA_REDIRECTED_LOGON_CALLBACK')
make_head(_module, 'PLSA_REDIRECTED_LOGON_CLEANUP_CALLBACK')
make_head(_module, 'PLSA_REDIRECTED_LOGON_GET_LOGON_CREDS')
make_head(_module, 'PLSA_REDIRECTED_LOGON_GET_SUPP_CREDS')
make_head(_module, 'PLSA_REDIRECTED_LOGON_INIT')
make_head(_module, 'PLSA_REGISTER_CALLBACK')
make_head(_module, 'PLSA_REGISTER_NOTIFICATION')
make_head(_module, 'PLSA_SAVE_SUPPLEMENTAL_CREDENTIALS')
make_head(_module, 'PLSA_SET_APP_MODE_INFO')
make_head(_module, 'PLSA_UNLOAD_PACKAGE')
make_head(_module, 'PLSA_UPDATE_PRIMARY_CREDENTIALS')
make_head(_module, 'POLICY_ACCOUNT_DOMAIN_INFO')
make_head(_module, 'POLICY_AUDIT_CATEGORIES_INFO')
make_head(_module, 'POLICY_AUDIT_EVENTS_INFO')
make_head(_module, 'POLICY_AUDIT_FULL_QUERY_INFO')
make_head(_module, 'POLICY_AUDIT_FULL_SET_INFO')
make_head(_module, 'POLICY_AUDIT_LOG_INFO')
make_head(_module, 'POLICY_AUDIT_SID_ARRAY')
make_head(_module, 'POLICY_AUDIT_SUBCATEGORIES_INFO')
make_head(_module, 'POLICY_DEFAULT_QUOTA_INFO')
make_head(_module, 'POLICY_DNS_DOMAIN_INFO')
make_head(_module, 'POLICY_DOMAIN_EFS_INFO')
make_head(_module, 'POLICY_DOMAIN_KERBEROS_TICKET_INFO')
make_head(_module, 'POLICY_LSA_SERVER_ROLE_INFO')
make_head(_module, 'POLICY_MACHINE_ACCT_INFO')
make_head(_module, 'POLICY_MODIFICATION_INFO')
make_head(_module, 'POLICY_PD_ACCOUNT_INFO')
make_head(_module, 'POLICY_PRIMARY_DOMAIN_INFO')
make_head(_module, 'POLICY_REPLICA_SOURCE_INFO')
make_head(_module, 'PSAM_CREDENTIAL_UPDATE_FREE_ROUTINE')
make_head(_module, 'PSAM_CREDENTIAL_UPDATE_NOTIFY_ROUTINE')
make_head(_module, 'PSAM_CREDENTIAL_UPDATE_REGISTER_MAPPED_ENTRYPOINTS_ROUTINE')
make_head(_module, 'PSAM_CREDENTIAL_UPDATE_REGISTER_ROUTINE')
make_head(_module, 'PSAM_INIT_NOTIFICATION_ROUTINE')
make_head(_module, 'PSAM_PASSWORD_FILTER_ROUTINE')
make_head(_module, 'PSAM_PASSWORD_NOTIFICATION_ROUTINE')
make_head(_module, 'PctPublicKey')
make_head(_module, 'QUERY_CONTEXT_ATTRIBUTES_EX_FN_A')
make_head(_module, 'QUERY_CONTEXT_ATTRIBUTES_EX_FN_W')
make_head(_module, 'QUERY_CONTEXT_ATTRIBUTES_FN_A')
make_head(_module, 'QUERY_CONTEXT_ATTRIBUTES_FN_W')
make_head(_module, 'QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_A')
make_head(_module, 'QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_W')
make_head(_module, 'QUERY_CREDENTIALS_ATTRIBUTES_FN_A')
make_head(_module, 'QUERY_CREDENTIALS_ATTRIBUTES_FN_W')
make_head(_module, 'QUERY_SECURITY_CONTEXT_TOKEN_FN')
make_head(_module, 'QUERY_SECURITY_PACKAGE_INFO_FN_A')
make_head(_module, 'QUERY_SECURITY_PACKAGE_INFO_FN_W')
make_head(_module, 'REVERT_SECURITY_CONTEXT_FN')
make_head(_module, 'SAM_REGISTER_MAPPING_ELEMENT')
make_head(_module, 'SAM_REGISTER_MAPPING_LIST')
make_head(_module, 'SAM_REGISTER_MAPPING_TABLE')
make_head(_module, 'SCHANNEL_ALERT_TOKEN')
make_head(_module, 'SCHANNEL_CERT_HASH')
make_head(_module, 'SCHANNEL_CERT_HASH_STORE')
make_head(_module, 'SCHANNEL_CLIENT_SIGNATURE')
make_head(_module, 'SCHANNEL_CRED')
make_head(_module, 'SCHANNEL_SESSION_TOKEN')
make_head(_module, 'SCH_CRED')
make_head(_module, 'SCH_CRED_PUBLIC_CERTCHAIN')
make_head(_module, 'SCH_CRED_SECRET_CAPI')
make_head(_module, 'SCH_CRED_SECRET_PRIVKEY')
make_head(_module, 'SCH_EXTENSION_DATA')
make_head(_module, 'SECPKG_APP_MODE_INFO')
make_head(_module, 'SECPKG_BYTE_VECTOR')
make_head(_module, 'SECPKG_CALL_INFO')
make_head(_module, 'SECPKG_CALL_PACKAGE_PIN_DC_REQUEST')
make_head(_module, 'SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST')
make_head(_module, 'SECPKG_CALL_PACKAGE_UNPIN_ALL_DCS_REQUEST')
make_head(_module, 'SECPKG_CLIENT_INFO')
make_head(_module, 'SECPKG_CONTEXT_THUNKS')
make_head(_module, 'SECPKG_CREDENTIAL')
make_head(_module, 'SECPKG_DLL_FUNCTIONS')
make_head(_module, 'SECPKG_EVENT_NOTIFY')
make_head(_module, 'SECPKG_EVENT_PACKAGE_CHANGE')
make_head(_module, 'SECPKG_EVENT_ROLE_CHANGE')
make_head(_module, 'SECPKG_EXTENDED_INFORMATION')
make_head(_module, 'SECPKG_EXTRA_OIDS')
make_head(_module, 'SECPKG_FUNCTION_TABLE')
make_head(_module, 'SECPKG_GSS_INFO')
make_head(_module, 'SECPKG_KERNEL_FUNCTIONS')
make_head(_module, 'SECPKG_KERNEL_FUNCTION_TABLE')
make_head(_module, 'SECPKG_MUTUAL_AUTH_LEVEL')
make_head(_module, 'SECPKG_NEGO2_INFO')
make_head(_module, 'SECPKG_PARAMETERS')
make_head(_module, 'SECPKG_POST_LOGON_USER_INFO')
make_head(_module, 'SECPKG_PRIMARY_CRED')
make_head(_module, 'SECPKG_PRIMARY_CRED_EX')
make_head(_module, 'SECPKG_REDIRECTED_LOGON_BUFFER')
make_head(_module, 'SECPKG_SERIALIZED_OID')
make_head(_module, 'SECPKG_SHORT_VECTOR')
make_head(_module, 'SECPKG_SUPPLEMENTAL_CRED')
make_head(_module, 'SECPKG_SUPPLEMENTAL_CRED_ARRAY')
make_head(_module, 'SECPKG_SUPPLIED_CREDENTIAL')
make_head(_module, 'SECPKG_SURROGATE_LOGON')
make_head(_module, 'SECPKG_SURROGATE_LOGON_ENTRY')
make_head(_module, 'SECPKG_TARGETINFO')
make_head(_module, 'SECPKG_USER_FUNCTION_TABLE')
make_head(_module, 'SECPKG_WOW_CLIENT_DLL')
make_head(_module, 'SECURITY_LOGON_SESSION_DATA')
make_head(_module, 'SECURITY_PACKAGE_OPTIONS')
make_head(_module, 'SECURITY_USER_DATA')
make_head(_module, 'SEC_APPLICATION_PROTOCOLS')
make_head(_module, 'SEC_APPLICATION_PROTOCOL_LIST')
make_head(_module, 'SEC_CHANNEL_BINDINGS')
make_head(_module, 'SEC_DTLS_MTU')
make_head(_module, 'SEC_FLAGS')
make_head(_module, 'SEC_GET_KEY_FN')
make_head(_module, 'SEC_NEGOTIATION_INFO')
make_head(_module, 'SEC_PRESHAREDKEY')
make_head(_module, 'SEC_PRESHAREDKEY_IDENTITY')
make_head(_module, 'SEC_SRTP_MASTER_KEY_IDENTIFIER')
make_head(_module, 'SEC_SRTP_PROTECTION_PROFILES')
make_head(_module, 'SEC_TOKEN_BINDING')
make_head(_module, 'SEC_TRAFFIC_SECRETS')
make_head(_module, 'SEC_WINNT_AUTH_IDENTITY32')
make_head(_module, 'SEC_WINNT_AUTH_IDENTITY_EX2')
make_head(_module, 'SEC_WINNT_AUTH_IDENTITY_EX32')
make_head(_module, 'SEC_WINNT_AUTH_IDENTITY_EXA')
make_head(_module, 'SEC_WINNT_AUTH_IDENTITY_EXW')
make_head(_module, 'SEC_WINNT_AUTH_IDENTITY_INFO')
make_head(_module, 'SEND_GENERIC_TLS_EXTENSION')
make_head(_module, 'SET_CONTEXT_ATTRIBUTES_FN_A')
make_head(_module, 'SET_CONTEXT_ATTRIBUTES_FN_W')
make_head(_module, 'SET_CREDENTIALS_ATTRIBUTES_FN_A')
make_head(_module, 'SET_CREDENTIALS_ATTRIBUTES_FN_W')
make_head(_module, 'SE_ADT_ACCESS_REASON')
make_head(_module, 'SE_ADT_CLAIMS')
make_head(_module, 'SE_ADT_OBJECT_TYPE')
make_head(_module, 'SE_ADT_PARAMETER_ARRAY')
make_head(_module, 'SE_ADT_PARAMETER_ARRAY_ENTRY')
make_head(_module, 'SE_ADT_PARAMETER_ARRAY_EX')
make_head(_module, 'SL_ACTIVATION_INFO_HEADER')
make_head(_module, 'SL_AD_ACTIVATION_INFO')
make_head(_module, 'SL_LICENSING_STATUS')
make_head(_module, 'SL_NONGENUINE_UI_OPTIONS')
make_head(_module, 'SL_SYSTEM_POLICY_INFORMATION')
make_head(_module, 'SR_SECURITY_DESCRIPTOR')
make_head(_module, 'SSL_CRACK_CERTIFICATE_FN')
make_head(_module, 'SSL_CREDENTIAL_CERTIFICATE')
make_head(_module, 'SSL_EMPTY_CACHE_FN_A')
make_head(_module, 'SSL_EMPTY_CACHE_FN_W')
make_head(_module, 'SSL_FREE_CERTIFICATE_FN')
make_head(_module, 'SUBSCRIBE_GENERIC_TLS_EXTENSION')
make_head(_module, 'SecBuffer')
make_head(_module, 'SecBufferDesc')
make_head(_module, 'SecPkgContext_AccessToken')
make_head(_module, 'SecPkgContext_ApplicationProtocol')
make_head(_module, 'SecPkgContext_AuthorityA')
make_head(_module, 'SecPkgContext_AuthorityW')
make_head(_module, 'SecPkgContext_AuthzID')
make_head(_module, 'SecPkgContext_Bindings')
make_head(_module, 'SecPkgContext_CertInfo')
make_head(_module, 'SecPkgContext_CertificateValidationResult')
make_head(_module, 'SecPkgContext_Certificates')
make_head(_module, 'SecPkgContext_CipherInfo')
make_head(_module, 'SecPkgContext_ClientCertPolicyResult')
make_head(_module, 'SecPkgContext_ClientSpecifiedTarget')
make_head(_module, 'SecPkgContext_ConnectionInfo')
make_head(_module, 'SecPkgContext_ConnectionInfoEx')
make_head(_module, 'SecPkgContext_CredInfo')
make_head(_module, 'SecPkgContext_CredentialNameA')
make_head(_module, 'SecPkgContext_CredentialNameW')
make_head(_module, 'SecPkgContext_DceInfo')
make_head(_module, 'SecPkgContext_EapKeyBlock')
make_head(_module, 'SecPkgContext_EapPrfInfo')
make_head(_module, 'SecPkgContext_EarlyStart')
make_head(_module, 'SecPkgContext_Flags')
make_head(_module, 'SecPkgContext_IssuerListInfoEx')
make_head(_module, 'SecPkgContext_KeyInfoA')
make_head(_module, 'SecPkgContext_KeyInfoW')
make_head(_module, 'SecPkgContext_KeyingMaterial')
make_head(_module, 'SecPkgContext_KeyingMaterialInfo')
make_head(_module, 'SecPkgContext_KeyingMaterial_Inproc')
make_head(_module, 'SecPkgContext_LastClientTokenStatus')
make_head(_module, 'SecPkgContext_Lifespan')
make_head(_module, 'SecPkgContext_LocalCredentialInfo')
make_head(_module, 'SecPkgContext_LogoffTime')
make_head(_module, 'SecPkgContext_MappedCredAttr')
make_head(_module, 'SecPkgContext_NamesA')
make_head(_module, 'SecPkgContext_NamesW')
make_head(_module, 'SecPkgContext_NativeNamesA')
make_head(_module, 'SecPkgContext_NativeNamesW')
make_head(_module, 'SecPkgContext_NegoKeys')
make_head(_module, 'SecPkgContext_NegoPackageInfo')
make_head(_module, 'SecPkgContext_NegoStatus')
make_head(_module, 'SecPkgContext_NegotiatedTlsExtensions')
make_head(_module, 'SecPkgContext_NegotiationInfoA')
make_head(_module, 'SecPkgContext_NegotiationInfoW')
make_head(_module, 'SecPkgContext_PackageInfoA')
make_head(_module, 'SecPkgContext_PackageInfoW')
make_head(_module, 'SecPkgContext_PasswordExpiry')
make_head(_module, 'SecPkgContext_ProtoInfoA')
make_head(_module, 'SecPkgContext_ProtoInfoW')
make_head(_module, 'SecPkgContext_RemoteCredentialInfo')
make_head(_module, 'SecPkgContext_SaslContext')
make_head(_module, 'SecPkgContext_SessionAppData')
make_head(_module, 'SecPkgContext_SessionInfo')
make_head(_module, 'SecPkgContext_SessionKey')
make_head(_module, 'SecPkgContext_Sizes')
make_head(_module, 'SecPkgContext_SrtpParameters')
make_head(_module, 'SecPkgContext_StreamSizes')
make_head(_module, 'SecPkgContext_SubjectAttributes')
make_head(_module, 'SecPkgContext_SupportedSignatures')
make_head(_module, 'SecPkgContext_Target')
make_head(_module, 'SecPkgContext_TargetInformation')
make_head(_module, 'SecPkgContext_TokenBinding')
make_head(_module, 'SecPkgContext_UiInfo')
make_head(_module, 'SecPkgContext_UserFlags')
make_head(_module, 'SecPkgCred_CipherStrengths')
make_head(_module, 'SecPkgCred_ClientCertPolicy')
make_head(_module, 'SecPkgCred_SessionTicketKey')
make_head(_module, 'SecPkgCred_SessionTicketKeys')
make_head(_module, 'SecPkgCred_SupportedAlgs')
make_head(_module, 'SecPkgCred_SupportedProtocols')
make_head(_module, 'SecPkgCredentials_Cert')
make_head(_module, 'SecPkgCredentials_KdcProxySettingsW')
make_head(_module, 'SecPkgCredentials_NamesA')
make_head(_module, 'SecPkgCredentials_NamesW')
make_head(_module, 'SecPkgCredentials_SSIProviderA')
make_head(_module, 'SecPkgCredentials_SSIProviderW')
make_head(_module, 'SecPkgInfoA')
make_head(_module, 'SecPkgInfoW')
make_head(_module, 'SecurityFunctionTableA')
make_head(_module, 'SecurityFunctionTableW')
make_head(_module, 'SpAcceptCredentialsFn')
make_head(_module, 'SpAcceptLsaModeContextFn')
make_head(_module, 'SpAcquireCredentialsHandleFn')
make_head(_module, 'SpAddCredentialsFn')
make_head(_module, 'SpApplyControlTokenFn')
make_head(_module, 'SpChangeAccountPasswordFn')
make_head(_module, 'SpCompleteAuthTokenFn')
make_head(_module, 'SpDeleteContextFn')
make_head(_module, 'SpDeleteCredentialsFn')
make_head(_module, 'SpExchangeMetaDataFn')
make_head(_module, 'SpExportSecurityContextFn')
make_head(_module, 'SpFormatCredentialsFn')
make_head(_module, 'SpFreeCredentialsHandleFn')
make_head(_module, 'SpGetContextTokenFn')
make_head(_module, 'SpGetCredUIContextFn')
make_head(_module, 'SpGetCredentialsFn')
make_head(_module, 'SpGetExtendedInformationFn')
make_head(_module, 'SpGetInfoFn')
make_head(_module, 'SpGetRemoteCredGuardLogonBufferFn')
make_head(_module, 'SpGetRemoteCredGuardSupplementalCredsFn')
make_head(_module, 'SpGetTbalSupplementalCredsFn')
make_head(_module, 'SpGetUserInfoFn')
make_head(_module, 'SpImportSecurityContextFn')
make_head(_module, 'SpInitLsaModeContextFn')
make_head(_module, 'SpInitUserModeContextFn')
make_head(_module, 'SpInitializeFn')
make_head(_module, 'SpInstanceInitFn')
make_head(_module, 'SpLsaModeInitializeFn')
make_head(_module, 'SpMakeSignatureFn')
make_head(_module, 'SpMarshalAttributeDataFn')
make_head(_module, 'SpMarshallSupplementalCredsFn')
make_head(_module, 'SpQueryContextAttributesFn')
make_head(_module, 'SpQueryCredentialsAttributesFn')
make_head(_module, 'SpQueryMetaDataFn')
make_head(_module, 'SpSaveCredentialsFn')
make_head(_module, 'SpSealMessageFn')
make_head(_module, 'SpSetContextAttributesFn')
make_head(_module, 'SpSetCredentialsAttributesFn')
make_head(_module, 'SpSetExtendedInformationFn')
make_head(_module, 'SpShutdownFn')
make_head(_module, 'SpUnsealMessageFn')
make_head(_module, 'SpUpdateCredentialsFn')
make_head(_module, 'SpUserModeInitializeFn')
make_head(_module, 'SpValidateTargetInfoFn')
make_head(_module, 'SpVerifySignatureFn')
make_head(_module, 'SslGetExtensionsFn')
make_head(_module, 'SslGetServerIdentityFn')
make_head(_module, 'TLS_EXTENSION_SUBSCRIPTION')
make_head(_module, 'TOKENBINDING_IDENTIFIER')
make_head(_module, 'TOKENBINDING_KEY_TYPES')
make_head(_module, 'TOKENBINDING_RESULT_DATA')
make_head(_module, 'TOKENBINDING_RESULT_LIST')
make_head(_module, 'TRUSTED_CONTROLLERS_INFO')
make_head(_module, 'TRUSTED_DOMAIN_AUTH_INFORMATION')
make_head(_module, 'TRUSTED_DOMAIN_FULL_INFORMATION')
make_head(_module, 'TRUSTED_DOMAIN_FULL_INFORMATION2')
make_head(_module, 'TRUSTED_DOMAIN_INFORMATION_EX')
make_head(_module, 'TRUSTED_DOMAIN_INFORMATION_EX2')
make_head(_module, 'TRUSTED_DOMAIN_NAME_INFO')
make_head(_module, 'TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES')
make_head(_module, 'TRUSTED_PASSWORD_INFO')
make_head(_module, 'TRUSTED_POSIX_OFFSET_INFO')
make_head(_module, 'USER_ALL_INFORMATION')
make_head(_module, 'USER_SESSION_KEY')
make_head(_module, 'VERIFY_SIGNATURE_FN')
make_head(_module, 'X509Certificate')
make_head(_module, '_HMAPPER')
__all__ = [
    "ACCEPT_SECURITY_CONTEXT_FN",
    "ACCOUNT_ADJUST_PRIVILEGES",
    "ACCOUNT_ADJUST_QUOTAS",
    "ACCOUNT_ADJUST_SYSTEM_ACCESS",
    "ACCOUNT_VIEW",
    "ACQUIRE_CREDENTIALS_HANDLE_FN_A",
    "ACQUIRE_CREDENTIALS_HANDLE_FN_W",
    "ADD_CREDENTIALS_FN_A",
    "ADD_CREDENTIALS_FN_W",
    "APPLY_CONTROL_TOKEN_FN",
    "ASC_REQ_ALLOCATE_MEMORY",
    "ASC_REQ_ALLOW_CONTEXT_REPLAY",
    "ASC_REQ_ALLOW_MISSING_BINDINGS",
    "ASC_REQ_ALLOW_NON_USER_LOGONS",
    "ASC_REQ_ALLOW_NULL_SESSION",
    "ASC_REQ_CALL_LEVEL",
    "ASC_REQ_CONFIDENTIALITY",
    "ASC_REQ_CONNECTION",
    "ASC_REQ_DATAGRAM",
    "ASC_REQ_DELEGATE",
    "ASC_REQ_EXTENDED_ERROR",
    "ASC_REQ_FLAGS",
    "ASC_REQ_FRAGMENT_SUPPLIED",
    "ASC_REQ_FRAGMENT_TO_FIT",
    "ASC_REQ_HIGH_FLAGS",
    "ASC_REQ_IDENTIFY",
    "ASC_REQ_INTEGRITY",
    "ASC_REQ_LICENSING",
    "ASC_REQ_MESSAGES",
    "ASC_REQ_MUTUAL_AUTH",
    "ASC_REQ_NO_TOKEN",
    "ASC_REQ_PROXY_BINDINGS",
    "ASC_REQ_REPLAY_DETECT",
    "ASC_REQ_SEQUENCE_DETECT",
    "ASC_REQ_SESSION_TICKET",
    "ASC_REQ_STREAM",
    "ASC_REQ_USE_DCE_STYLE",
    "ASC_REQ_USE_SESSION_KEY",
    "ASC_RET_ALLOCATED_MEMORY",
    "ASC_RET_ALLOW_CONTEXT_REPLAY",
    "ASC_RET_ALLOW_NON_USER_LOGONS",
    "ASC_RET_CALL_LEVEL",
    "ASC_RET_CONFIDENTIALITY",
    "ASC_RET_CONNECTION",
    "ASC_RET_DATAGRAM",
    "ASC_RET_DELEGATE",
    "ASC_RET_EXTENDED_ERROR",
    "ASC_RET_FRAGMENT_ONLY",
    "ASC_RET_IDENTIFY",
    "ASC_RET_INTEGRITY",
    "ASC_RET_LICENSING",
    "ASC_RET_MESSAGES",
    "ASC_RET_MUTUAL_AUTH",
    "ASC_RET_NO_ADDITIONAL_TOKEN",
    "ASC_RET_NO_TOKEN",
    "ASC_RET_NULL_SESSION",
    "ASC_RET_REPLAY_DETECT",
    "ASC_RET_SEQUENCE_DETECT",
    "ASC_RET_SESSION_TICKET",
    "ASC_RET_STREAM",
    "ASC_RET_THIRD_LEG_FAILED",
    "ASC_RET_USED_DCE_STYLE",
    "ASC_RET_USE_SESSION_KEY",
    "AUDIT_ENUMERATE_USERS",
    "AUDIT_POLICY_INFORMATION",
    "AUDIT_QUERY_MISC_POLICY",
    "AUDIT_QUERY_SYSTEM_POLICY",
    "AUDIT_QUERY_USER_POLICY",
    "AUDIT_SET_MISC_POLICY",
    "AUDIT_SET_SYSTEM_POLICY",
    "AUDIT_SET_USER_POLICY",
    "AUTH_REQ_ALLOW_ENC_TKT_IN_SKEY",
    "AUTH_REQ_ALLOW_FORWARDABLE",
    "AUTH_REQ_ALLOW_NOADDRESS",
    "AUTH_REQ_ALLOW_POSTDATE",
    "AUTH_REQ_ALLOW_PROXIABLE",
    "AUTH_REQ_ALLOW_RENEWABLE",
    "AUTH_REQ_ALLOW_S4U_DELEGATE",
    "AUTH_REQ_ALLOW_VALIDATE",
    "AUTH_REQ_OK_AS_DELEGATE",
    "AUTH_REQ_PREAUTH_REQUIRED",
    "AUTH_REQ_TRANSITIVE_TRUST",
    "AUTH_REQ_VALIDATE_CLIENT",
    "AcceptSecurityContext",
    "AcquireCredentialsHandleA",
    "AcquireCredentialsHandleW",
    "AddCredentialsA",
    "AddCredentialsW",
    "AddSecurityPackageA",
    "AddSecurityPackageW",
    "ApplyControlToken",
    "AuditComputeEffectivePolicyBySid",
    "AuditComputeEffectivePolicyByToken",
    "AuditEnumerateCategories",
    "AuditEnumeratePerUserPolicy",
    "AuditEnumerateSubCategories",
    "AuditFree",
    "AuditLookupCategoryGuidFromCategoryId",
    "AuditLookupCategoryIdFromCategoryGuid",
    "AuditLookupCategoryNameA",
    "AuditLookupCategoryNameW",
    "AuditLookupSubCategoryNameA",
    "AuditLookupSubCategoryNameW",
    "AuditQueryGlobalSaclA",
    "AuditQueryGlobalSaclW",
    "AuditQueryPerUserPolicy",
    "AuditQuerySecurity",
    "AuditQuerySystemPolicy",
    "AuditSetGlobalSaclA",
    "AuditSetGlobalSaclW",
    "AuditSetPerUserPolicy",
    "AuditSetSecurity",
    "AuditSetSystemPolicy",
    "Audit_AccountLogon",
    "Audit_AccountLogon_CredentialValidation",
    "Audit_AccountLogon_KerbCredentialValidation",
    "Audit_AccountLogon_Kerberos",
    "Audit_AccountLogon_Others",
    "Audit_AccountManagement",
    "Audit_AccountManagement_ApplicationGroup",
    "Audit_AccountManagement_ComputerAccount",
    "Audit_AccountManagement_DistributionGroup",
    "Audit_AccountManagement_Others",
    "Audit_AccountManagement_SecurityGroup",
    "Audit_AccountManagement_UserAccount",
    "Audit_DSAccess_DSAccess",
    "Audit_DetailedTracking",
    "Audit_DetailedTracking_DpapiActivity",
    "Audit_DetailedTracking_PnpActivity",
    "Audit_DetailedTracking_ProcessCreation",
    "Audit_DetailedTracking_ProcessTermination",
    "Audit_DetailedTracking_RpcCall",
    "Audit_DetailedTracking_TokenRightAdjusted",
    "Audit_DirectoryServiceAccess",
    "Audit_DsAccess_AdAuditChanges",
    "Audit_Ds_DetailedReplication",
    "Audit_Ds_Replication",
    "Audit_Logon",
    "Audit_Logon_AccountLockout",
    "Audit_Logon_Claims",
    "Audit_Logon_Groups",
    "Audit_Logon_IPSecMainMode",
    "Audit_Logon_IPSecQuickMode",
    "Audit_Logon_IPSecUserMode",
    "Audit_Logon_Logoff",
    "Audit_Logon_Logon",
    "Audit_Logon_NPS",
    "Audit_Logon_Others",
    "Audit_Logon_SpecialLogon",
    "Audit_ObjectAccess",
    "Audit_ObjectAccess_ApplicationGenerated",
    "Audit_ObjectAccess_CbacStaging",
    "Audit_ObjectAccess_CertificationServices",
    "Audit_ObjectAccess_DetailedFileShare",
    "Audit_ObjectAccess_FileSystem",
    "Audit_ObjectAccess_FirewallConnection",
    "Audit_ObjectAccess_FirewallPacketDrops",
    "Audit_ObjectAccess_Handle",
    "Audit_ObjectAccess_Kernel",
    "Audit_ObjectAccess_Other",
    "Audit_ObjectAccess_Registry",
    "Audit_ObjectAccess_RemovableStorage",
    "Audit_ObjectAccess_Sam",
    "Audit_ObjectAccess_Share",
    "Audit_PolicyChange",
    "Audit_PolicyChange_AuditPolicy",
    "Audit_PolicyChange_AuthenticationPolicy",
    "Audit_PolicyChange_AuthorizationPolicy",
    "Audit_PolicyChange_MpsscvRulePolicy",
    "Audit_PolicyChange_Others",
    "Audit_PolicyChange_WfpIPSecPolicy",
    "Audit_PrivilegeUse",
    "Audit_PrivilegeUse_NonSensitive",
    "Audit_PrivilegeUse_Others",
    "Audit_PrivilegeUse_Sensitive",
    "Audit_System",
    "Audit_System_IPSecDriverEvents",
    "Audit_System_Integrity",
    "Audit_System_Others",
    "Audit_System_SecurityStateChange",
    "Audit_System_SecuritySubsystemExtension",
    "CENTRAL_ACCESS_POLICY",
    "CENTRAL_ACCESS_POLICY_ENTRY",
    "CENTRAL_ACCESS_POLICY_OWNER_RIGHTS_PRESENT_FLAG",
    "CENTRAL_ACCESS_POLICY_STAGED_FLAG",
    "CENTRAL_ACCESS_POLICY_STAGED_OWNER_RIGHTS_PRESENT_FLAG",
    "CHANGE_PASSWORD_FN_A",
    "CHANGE_PASSWORD_FN_W",
    "CLEAR_BLOCK",
    "CLEAR_BLOCK_LENGTH",
    "CLOUDAP_NAME",
    "CLOUDAP_NAME_W",
    "COMPLETE_AUTH_TOKEN_FN",
    "CREDP_FLAGS_CLEAR_PASSWORD",
    "CREDP_FLAGS_DONT_CACHE_TI",
    "CREDP_FLAGS_IN_PROCESS",
    "CREDP_FLAGS_TRUSTED_CALLER",
    "CREDP_FLAGS_USER_ENCRYPTED_PASSWORD",
    "CREDP_FLAGS_USE_MIDL_HEAP",
    "CREDP_FLAGS_VALIDATE_PROXY_TARGET",
    "CRED_FETCH",
    "CRED_FETCH_CredFetchDPAPI",
    "CRED_FETCH_CredFetchDefault",
    "CRED_FETCH_CredFetchForced",
    "CRED_MARSHALED_TI_SIZE_SIZE",
    "CYPHER_BLOCK_LENGTH",
    "ChangeAccountPasswordA",
    "ChangeAccountPasswordW",
    "ClOUDAP_NAME_A",
    "CompleteAuthToken",
    "CredFreeCredentialsFn",
    "CredMarshalTargetInfo",
    "CredReadDomainCredentialsFn",
    "CredReadFn",
    "CredUnmarshalTargetInfo",
    "CredWriteFn",
    "CrediUnmarshalandDecodeStringFn",
    "DECRYPT_MESSAGE_FN",
    "DEFAULT_TLS_SSP_NAME",
    "DEFAULT_TLS_SSP_NAME_A",
    "DEFAULT_TLS_SSP_NAME_W",
    "DELETE_SECURITY_CONTEXT_FN",
    "DOMAIN_LOCKOUT_ADMINS",
    "DOMAIN_NO_LM_OWF_CHANGE",
    "DOMAIN_PASSWORD_COMPLEX",
    "DOMAIN_PASSWORD_INFORMATION",
    "DOMAIN_PASSWORD_NO_ANON_CHANGE",
    "DOMAIN_PASSWORD_NO_CLEAR_CHANGE",
    "DOMAIN_PASSWORD_PROPERTIES",
    "DOMAIN_PASSWORD_STORE_CLEARTEXT",
    "DOMAIN_REFUSE_PASSWORD_CHANGE",
    "DS_INET_ADDRESS",
    "DS_NETBIOS_ADDRESS",
    "DS_UNKNOWN_ADDRESS_TYPE",
    "DecryptMessage",
    "DeleteSecurityContext",
    "DeleteSecurityPackageA",
    "DeleteSecurityPackageW",
    "ENABLE_TLS_CLIENT_EARLY_START",
    "ENCRYPTED_CREDENTIALW",
    "ENCRYPT_MESSAGE_FN",
    "ENUMERATE_SECURITY_PACKAGES_FN_A",
    "ENUMERATE_SECURITY_PACKAGES_FN_W",
    "EXPORT_SECURITY_CONTEXT_FLAGS",
    "EXPORT_SECURITY_CONTEXT_FN",
    "EXTENDED_NAME_FORMAT",
    "EXTENDED_NAME_FORMAT_NameCanonical",
    "EXTENDED_NAME_FORMAT_NameCanonicalEx",
    "EXTENDED_NAME_FORMAT_NameDisplay",
    "EXTENDED_NAME_FORMAT_NameDnsDomain",
    "EXTENDED_NAME_FORMAT_NameFullyQualifiedDN",
    "EXTENDED_NAME_FORMAT_NameGivenName",
    "EXTENDED_NAME_FORMAT_NameSamCompatible",
    "EXTENDED_NAME_FORMAT_NameServicePrincipal",
    "EXTENDED_NAME_FORMAT_NameSurname",
    "EXTENDED_NAME_FORMAT_NameUniqueId",
    "EXTENDED_NAME_FORMAT_NameUnknown",
    "EXTENDED_NAME_FORMAT_NameUserPrincipal",
    "E_RM_UNKNOWN_ERROR",
    "EncryptMessage",
    "EnumerateSecurityPackagesA",
    "EnumerateSecurityPackagesW",
    "ExportSecurityContext",
    "FACILITY_SL_ITF",
    "FREE_CONTEXT_BUFFER_FN",
    "FREE_CREDENTIALS_HANDLE_FN",
    "FreeContextBuffer",
    "FreeCredentialsHandle",
    "GetComputerObjectNameA",
    "GetComputerObjectNameW",
    "GetUserNameExA",
    "GetUserNameExW",
    "ICcgDomainAuthCredentials",
    "ID_CAP_SLAPI",
    "IMPERSONATE_SECURITY_CONTEXT_FN",
    "IMPORT_SECURITY_CONTEXT_FN_A",
    "IMPORT_SECURITY_CONTEXT_FN_W",
    "INITIALIZE_SECURITY_CONTEXT_FN_A",
    "INITIALIZE_SECURITY_CONTEXT_FN_W",
    "INIT_SECURITY_INTERFACE_A",
    "INIT_SECURITY_INTERFACE_W",
    "ISC_REQ_ALLOCATE_MEMORY",
    "ISC_REQ_CALL_LEVEL",
    "ISC_REQ_CONFIDENTIALITY",
    "ISC_REQ_CONFIDENTIALITY_ONLY",
    "ISC_REQ_CONNECTION",
    "ISC_REQ_DATAGRAM",
    "ISC_REQ_DEFERRED_CRED_VALIDATION",
    "ISC_REQ_DELEGATE",
    "ISC_REQ_EXTENDED_ERROR",
    "ISC_REQ_FLAGS",
    "ISC_REQ_FORWARD_CREDENTIALS",
    "ISC_REQ_FRAGMENT_SUPPLIED",
    "ISC_REQ_FRAGMENT_TO_FIT",
    "ISC_REQ_HIGH_FLAGS",
    "ISC_REQ_IDENTIFY",
    "ISC_REQ_INTEGRITY",
    "ISC_REQ_MANUAL_CRED_VALIDATION",
    "ISC_REQ_MESSAGES",
    "ISC_REQ_MUTUAL_AUTH",
    "ISC_REQ_NO_INTEGRITY",
    "ISC_REQ_NULL_SESSION",
    "ISC_REQ_PROMPT_FOR_CREDS",
    "ISC_REQ_REPLAY_DETECT",
    "ISC_REQ_RESERVED1",
    "ISC_REQ_SEQUENCE_DETECT",
    "ISC_REQ_STREAM",
    "ISC_REQ_UNVERIFIED_TARGET_NAME",
    "ISC_REQ_USE_DCE_STYLE",
    "ISC_REQ_USE_HTTP_STYLE",
    "ISC_REQ_USE_SESSION_KEY",
    "ISC_REQ_USE_SUPPLIED_CREDS",
    "ISC_RET_ALLOCATED_MEMORY",
    "ISC_RET_CALL_LEVEL",
    "ISC_RET_CONFIDENTIALITY",
    "ISC_RET_CONFIDENTIALITY_ONLY",
    "ISC_RET_CONNECTION",
    "ISC_RET_DATAGRAM",
    "ISC_RET_DEFERRED_CRED_VALIDATION",
    "ISC_RET_DELEGATE",
    "ISC_RET_EXTENDED_ERROR",
    "ISC_RET_FORWARD_CREDENTIALS",
    "ISC_RET_FRAGMENT_ONLY",
    "ISC_RET_IDENTIFY",
    "ISC_RET_INTEGRITY",
    "ISC_RET_INTERMEDIATE_RETURN",
    "ISC_RET_MANUAL_CRED_VALIDATION",
    "ISC_RET_MESSAGES",
    "ISC_RET_MUTUAL_AUTH",
    "ISC_RET_NO_ADDITIONAL_TOKEN",
    "ISC_RET_NULL_SESSION",
    "ISC_RET_REAUTHENTICATION",
    "ISC_RET_REPLAY_DETECT",
    "ISC_RET_RESERVED1",
    "ISC_RET_SEQUENCE_DETECT",
    "ISC_RET_STREAM",
    "ISC_RET_USED_COLLECTED_CREDS",
    "ISC_RET_USED_DCE_STYLE",
    "ISC_RET_USED_HTTP_STYLE",
    "ISC_RET_USED_SUPPLIED_CREDS",
    "ISC_RET_USE_SESSION_KEY",
    "ISSP_LEVEL",
    "ISSP_MODE",
    "ImpersonateSecurityContext",
    "ImportSecurityContextA",
    "ImportSecurityContextW",
    "InitSecurityInterfaceA",
    "InitSecurityInterfaceW",
    "InitializeSecurityContextA",
    "InitializeSecurityContextW",
    "KDC_PROXY_CACHE_ENTRY_DATA",
    "KDC_PROXY_SETTINGS_FLAGS_FORCEPROXY",
    "KDC_PROXY_SETTINGS_V1",
    "KERBEROS_REVISION",
    "KERBEROS_VERSION",
    "KERB_ADDRESS_TYPE",
    "KERB_ADD_BINDING_CACHE_ENTRY_EX_REQUEST",
    "KERB_ADD_BINDING_CACHE_ENTRY_REQUEST",
    "KERB_ADD_CREDENTIALS_REQUEST",
    "KERB_ADD_CREDENTIALS_REQUEST_EX",
    "KERB_AUTH_DATA",
    "KERB_BINDING_CACHE_ENTRY_DATA",
    "KERB_CERTIFICATE_HASHINFO",
    "KERB_CERTIFICATE_INFO",
    "KERB_CERTIFICATE_INFO_TYPE",
    "KERB_CERTIFICATE_INFO_TYPE_CertHashInfo",
    "KERB_CERTIFICATE_LOGON",
    "KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES",
    "KERB_CERTIFICATE_LOGON_FLAG_USE_CERTIFICATE_INFO",
    "KERB_CERTIFICATE_S4U_LOGON",
    "KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_DUPLICATES",
    "KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_LOGONHOURS",
    "KERB_CERTIFICATE_S4U_LOGON_FLAG_FAIL_IF_NT_AUTH_POLICY_REQUIRED",
    "KERB_CERTIFICATE_S4U_LOGON_FLAG_IDENTIFY",
    "KERB_CERTIFICATE_UNLOCK_LOGON",
    "KERB_CHANGEPASSWORD_REQUEST",
    "KERB_CHECKSUM_CRC32",
    "KERB_CHECKSUM_DES_MAC",
    "KERB_CHECKSUM_DES_MAC_MD5",
    "KERB_CHECKSUM_HMAC_MD5",
    "KERB_CHECKSUM_HMAC_SHA1_96_AES128",
    "KERB_CHECKSUM_HMAC_SHA1_96_AES128_Ki",
    "KERB_CHECKSUM_HMAC_SHA1_96_AES256",
    "KERB_CHECKSUM_HMAC_SHA1_96_AES256_Ki",
    "KERB_CHECKSUM_KRB_DES_MAC",
    "KERB_CHECKSUM_KRB_DES_MAC_K",
    "KERB_CHECKSUM_LM",
    "KERB_CHECKSUM_MD25",
    "KERB_CHECKSUM_MD4",
    "KERB_CHECKSUM_MD5",
    "KERB_CHECKSUM_MD5_DES",
    "KERB_CHECKSUM_MD5_HMAC",
    "KERB_CHECKSUM_NONE",
    "KERB_CHECKSUM_RC4_MD5",
    "KERB_CHECKSUM_REAL_CRC32",
    "KERB_CHECKSUM_SHA1",
    "KERB_CHECKSUM_SHA1_NEW",
    "KERB_CLEANUP_MACHINE_PKINIT_CREDS_REQUEST",
    "KERB_CLOUD_KERBEROS_DEBUG_DATA_V0",
    "KERB_CLOUD_KERBEROS_DEBUG_DATA_VERSION",
    "KERB_CLOUD_KERBEROS_DEBUG_REQUEST",
    "KERB_CLOUD_KERBEROS_DEBUG_RESPONSE",
    "KERB_CRYPTO_KEY",
    "KERB_CRYPTO_KEY32",
    "KERB_CRYPTO_KEY_TYPE",
    "KERB_DECRYPT_FLAG_DEFAULT_KEY",
    "KERB_DECRYPT_REQUEST",
    "KERB_DECRYPT_RESPONSE",
    "KERB_ETYPE_AES128_CTS_HMAC_SHA1_96",
    "KERB_ETYPE_AES128_CTS_HMAC_SHA1_96_PLAIN",
    "KERB_ETYPE_AES256_CTS_HMAC_SHA1_96",
    "KERB_ETYPE_AES256_CTS_HMAC_SHA1_96_PLAIN",
    "KERB_ETYPE_DEFAULT",
    "KERB_ETYPE_DES3_CBC_MD5",
    "KERB_ETYPE_DES3_CBC_SHA1",
    "KERB_ETYPE_DES3_CBC_SHA1_KD",
    "KERB_ETYPE_DES_CBC_CRC",
    "KERB_ETYPE_DES_CBC_MD4",
    "KERB_ETYPE_DES_CBC_MD5",
    "KERB_ETYPE_DES_CBC_MD5_NT",
    "KERB_ETYPE_DES_EDE3_CBC_ENV",
    "KERB_ETYPE_DES_PLAIN",
    "KERB_ETYPE_DSA_SHA1_CMS",
    "KERB_ETYPE_DSA_SIGN",
    "KERB_ETYPE_NULL",
    "KERB_ETYPE_PKCS7_PUB",
    "KERB_ETYPE_RC2_CBC_ENV",
    "KERB_ETYPE_RC4_HMAC_NT",
    "KERB_ETYPE_RC4_HMAC_NT_EXP",
    "KERB_ETYPE_RC4_HMAC_OLD",
    "KERB_ETYPE_RC4_HMAC_OLD_EXP",
    "KERB_ETYPE_RC4_LM",
    "KERB_ETYPE_RC4_MD4",
    "KERB_ETYPE_RC4_PLAIN",
    "KERB_ETYPE_RC4_PLAIN2",
    "KERB_ETYPE_RC4_PLAIN_EXP",
    "KERB_ETYPE_RC4_PLAIN_OLD",
    "KERB_ETYPE_RC4_PLAIN_OLD_EXP",
    "KERB_ETYPE_RC4_SHA",
    "KERB_ETYPE_RSA_ENV",
    "KERB_ETYPE_RSA_ES_OEAP_ENV",
    "KERB_ETYPE_RSA_MD5_CMS",
    "KERB_ETYPE_RSA_PRIV",
    "KERB_ETYPE_RSA_PUB",
    "KERB_ETYPE_RSA_PUB_MD5",
    "KERB_ETYPE_RSA_PUB_SHA1",
    "KERB_ETYPE_RSA_SHA1_CMS",
    "KERB_EXTERNAL_NAME",
    "KERB_EXTERNAL_TICKET",
    "KERB_INTERACTIVE_LOGON",
    "KERB_INTERACTIVE_PROFILE",
    "KERB_INTERACTIVE_UNLOCK_LOGON",
    "KERB_LOGON_FLAG_ALLOW_EXPIRED_TICKET",
    "KERB_LOGON_FLAG_REDIRECTED",
    "KERB_LOGON_SUBMIT_TYPE",
    "KERB_LOGON_SUBMIT_TYPE_KerbCertificateLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbCertificateS4ULogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbCertificateUnlockLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbInteractiveLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbLuidLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbNoElevationLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbProxyLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbS4ULogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbSmartCardLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbSmartCardUnlockLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbTicketLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbTicketUnlockLogon",
    "KERB_LOGON_SUBMIT_TYPE_KerbWorkstationUnlockLogon",
    "KERB_NET_ADDRESS",
    "KERB_NET_ADDRESSES",
    "KERB_PROFILE_BUFFER_TYPE",
    "KERB_PROFILE_BUFFER_TYPE_KerbInteractiveProfile",
    "KERB_PROFILE_BUFFER_TYPE_KerbSmartCardProfile",
    "KERB_PROFILE_BUFFER_TYPE_KerbTicketProfile",
    "KERB_PROTOCOL_MESSAGE_TYPE",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbAddBindingCacheEntryExMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbAddBindingCacheEntryMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbAddExtraCredentialsExMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbAddExtraCredentialsMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbChangeMachinePasswordMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbChangePasswordMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbCleanupMachinePkinitCredsMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbDebugRequestMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbDecryptDataMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbPinKdcMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbPrintCloudKerberosDebugMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeBindingCacheMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeKdcProxyCacheMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeTicketCacheExMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbPurgeTicketCacheMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryBindingCacheMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryDomainExtendedPoliciesMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryKdcProxyCacheMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryS4U2ProxyCacheMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQuerySupplementalCredentialsMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheEx2Message",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheEx3Message",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheExMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbQueryTicketCacheMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbRefreshPolicyMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbRefreshSmartcardCredentialsMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbRetrieveEncodedTicketMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbRetrieveKeyTabMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbRetrieveTicketMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbSetPasswordExMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbSetPasswordMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbSubmitTicketMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbTransferCredentialsMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbUnpinAllKdcsMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbUpdateAddressesMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbVerifyCredentialsMessage",
    "KERB_PROTOCOL_MESSAGE_TYPE_KerbVerifyPacMessage",
    "KERB_PURGE_ALL_TICKETS",
    "KERB_PURGE_BINDING_CACHE_REQUEST",
    "KERB_PURGE_KDC_PROXY_CACHE_REQUEST",
    "KERB_PURGE_KDC_PROXY_CACHE_RESPONSE",
    "KERB_PURGE_TKT_CACHE_EX_REQUEST",
    "KERB_PURGE_TKT_CACHE_REQUEST",
    "KERB_QUERY_BINDING_CACHE_REQUEST",
    "KERB_QUERY_BINDING_CACHE_RESPONSE",
    "KERB_QUERY_DOMAIN_EXTENDED_POLICIES_REQUEST",
    "KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE",
    "KERB_QUERY_DOMAIN_EXTENDED_POLICIES_RESPONSE_FLAG_DAC_DISABLED",
    "KERB_QUERY_KDC_PROXY_CACHE_REQUEST",
    "KERB_QUERY_KDC_PROXY_CACHE_RESPONSE",
    "KERB_QUERY_S4U2PROXY_CACHE_REQUEST",
    "KERB_QUERY_S4U2PROXY_CACHE_RESPONSE",
    "KERB_QUERY_TKT_CACHE_EX2_RESPONSE",
    "KERB_QUERY_TKT_CACHE_EX3_RESPONSE",
    "KERB_QUERY_TKT_CACHE_EX_RESPONSE",
    "KERB_QUERY_TKT_CACHE_REQUEST",
    "KERB_QUERY_TKT_CACHE_RESPONSE",
    "KERB_REFRESH_POLICY_KDC",
    "KERB_REFRESH_POLICY_KERBEROS",
    "KERB_REFRESH_POLICY_REQUEST",
    "KERB_REFRESH_POLICY_RESPONSE",
    "KERB_REFRESH_SCCRED_GETTGT",
    "KERB_REFRESH_SCCRED_RELEASE",
    "KERB_REFRESH_SCCRED_REQUEST",
    "KERB_REQUEST_ADD_CREDENTIAL",
    "KERB_REQUEST_FLAGS",
    "KERB_REQUEST_REMOVE_CREDENTIAL",
    "KERB_REQUEST_REPLACE_CREDENTIAL",
    "KERB_RETRIEVE_KEY_TAB_REQUEST",
    "KERB_RETRIEVE_KEY_TAB_RESPONSE",
    "KERB_RETRIEVE_TICKET_AS_KERB_CRED",
    "KERB_RETRIEVE_TICKET_CACHE_TICKET",
    "KERB_RETRIEVE_TICKET_DEFAULT",
    "KERB_RETRIEVE_TICKET_DONT_USE_CACHE",
    "KERB_RETRIEVE_TICKET_MAX_LIFETIME",
    "KERB_RETRIEVE_TICKET_USE_CACHE_ONLY",
    "KERB_RETRIEVE_TICKET_USE_CREDHANDLE",
    "KERB_RETRIEVE_TICKET_WITH_SEC_CRED",
    "KERB_RETRIEVE_TKT_REQUEST",
    "KERB_RETRIEVE_TKT_RESPONSE",
    "KERB_S4U2PROXY_CACHE_ENTRY_INFO",
    "KERB_S4U2PROXY_CACHE_ENTRY_INFO_FLAG_NEGATIVE",
    "KERB_S4U2PROXY_CRED",
    "KERB_S4U2PROXY_CRED_FLAG_NEGATIVE",
    "KERB_S4U_LOGON",
    "KERB_S4U_LOGON_FLAG_CHECK_LOGONHOURS",
    "KERB_S4U_LOGON_FLAG_IDENTIFY",
    "KERB_SETPASSWORD_EX_REQUEST",
    "KERB_SETPASSWORD_REQUEST",
    "KERB_SETPASS_USE_CREDHANDLE",
    "KERB_SETPASS_USE_LOGONID",
    "KERB_SMART_CARD_LOGON",
    "KERB_SMART_CARD_PROFILE",
    "KERB_SMART_CARD_UNLOCK_LOGON",
    "KERB_SUBMIT_TKT_REQUEST",
    "KERB_TICKET_CACHE_INFO",
    "KERB_TICKET_CACHE_INFO_EX",
    "KERB_TICKET_CACHE_INFO_EX2",
    "KERB_TICKET_CACHE_INFO_EX3",
    "KERB_TICKET_FLAGS",
    "KERB_TICKET_FLAGS_cname_in_pa_data",
    "KERB_TICKET_FLAGS_enc_pa_rep",
    "KERB_TICKET_FLAGS_forwardable",
    "KERB_TICKET_FLAGS_forwarded",
    "KERB_TICKET_FLAGS_hw_authent",
    "KERB_TICKET_FLAGS_initial",
    "KERB_TICKET_FLAGS_invalid",
    "KERB_TICKET_FLAGS_may_postdate",
    "KERB_TICKET_FLAGS_name_canonicalize",
    "KERB_TICKET_FLAGS_ok_as_delegate",
    "KERB_TICKET_FLAGS_postdated",
    "KERB_TICKET_FLAGS_pre_authent",
    "KERB_TICKET_FLAGS_proxiable",
    "KERB_TICKET_FLAGS_proxy",
    "KERB_TICKET_FLAGS_renewable",
    "KERB_TICKET_FLAGS_reserved",
    "KERB_TICKET_FLAGS_reserved1",
    "KERB_TICKET_LOGON",
    "KERB_TICKET_PROFILE",
    "KERB_TICKET_UNLOCK_LOGON",
    "KERB_TRANSFER_CRED_CLEANUP_CREDENTIALS",
    "KERB_TRANSFER_CRED_REQUEST",
    "KERB_TRANSFER_CRED_WITH_TICKETS",
    "KERB_USE_DEFAULT_TICKET_FLAGS",
    "KERB_WRAP_NO_ENCRYPT",
    "KERN_CONTEXT_CERT_INFO_V1",
    "KRB_ANONYMOUS_STRING",
    "KRB_NT_ENTERPRISE_PRINCIPAL",
    "KRB_NT_ENT_PRINCIPAL_AND_ID",
    "KRB_NT_MS_BRANCH_ID",
    "KRB_NT_MS_PRINCIPAL",
    "KRB_NT_MS_PRINCIPAL_AND_ID",
    "KRB_NT_PRINCIPAL",
    "KRB_NT_PRINCIPAL_AND_ID",
    "KRB_NT_SRV_HST",
    "KRB_NT_SRV_INST",
    "KRB_NT_SRV_INST_AND_ID",
    "KRB_NT_SRV_XHST",
    "KRB_NT_UID",
    "KRB_NT_UNKNOWN",
    "KRB_NT_WELLKNOWN",
    "KRB_NT_X500_PRINCIPAL",
    "KRB_WELLKNOWN_STRING",
    "KSEC_CONTEXT_TYPE",
    "KSEC_CONTEXT_TYPE_KSecNonPaged",
    "KSEC_CONTEXT_TYPE_KSecPaged",
    "KSEC_LIST_ENTRY",
    "KspCompleteTokenFn",
    "KspDeleteContextFn",
    "KspGetTokenFn",
    "KspInitContextFn",
    "KspInitPackageFn",
    "KspMakeSignatureFn",
    "KspMapHandleFn",
    "KspQueryAttributesFn",
    "KspSealMessageFn",
    "KspSerializeAuthDataFn",
    "KspSetPagingModeFn",
    "KspUnsealMessageFn",
    "KspVerifySignatureFn",
    "LCRED_CRED_EXISTS",
    "LCRED_STATUS_NOCRED",
    "LCRED_STATUS_UNKNOWN_ISSUER",
    "LOGON_CACHED_ACCOUNT",
    "LOGON_EXTRA_SIDS",
    "LOGON_GRACE_LOGON",
    "LOGON_GUEST",
    "LOGON_HOURS",
    "LOGON_LM_V2",
    "LOGON_MANAGED_SERVICE",
    "LOGON_NOENCRYPTION",
    "LOGON_NO_ELEVATION",
    "LOGON_NO_OPTIMIZED",
    "LOGON_NTLMV2_ENABLED",
    "LOGON_NTLM_V2",
    "LOGON_NT_V2",
    "LOGON_OPTIMIZED",
    "LOGON_PKINIT",
    "LOGON_PROFILE_PATH_RETURNED",
    "LOGON_RESOURCE_GROUPS",
    "LOGON_SERVER_TRUST_ACCOUNT",
    "LOGON_SUBAUTH_SESSION_KEY",
    "LOGON_USED_LM_PASSWORD",
    "LOGON_WINLOGON",
    "LOOKUP_TRANSLATE_NAMES",
    "LOOKUP_VIEW_LOCAL_INFORMATION",
    "LSASETCAPS_RELOAD_FLAG",
    "LSASETCAPS_VALID_FLAG_MASK",
    "LSA_ADT_LEGACY_SECURITY_SOURCE_NAME",
    "LSA_ADT_SECURITY_SOURCE_NAME",
    "LSA_AP_NAME_CALL_PACKAGE",
    "LSA_AP_NAME_CALL_PACKAGE_PASSTHROUGH",
    "LSA_AP_NAME_CALL_PACKAGE_UNTRUSTED",
    "LSA_AP_NAME_INITIALIZE_PACKAGE",
    "LSA_AP_NAME_LOGON_TERMINATED",
    "LSA_AP_NAME_LOGON_USER",
    "LSA_AP_NAME_LOGON_USER_EX",
    "LSA_AP_NAME_LOGON_USER_EX2",
    "LSA_AP_POST_LOGON_USER",
    "LSA_AUTH_INFORMATION",
    "LSA_AUTH_INFORMATION_AUTH_TYPE",
    "LSA_CALL_LICENSE_SERVER",
    "LSA_DISPATCH_TABLE",
    "LSA_ENUMERATION_INFORMATION",
    "LSA_FOREST_TRUST_BINARY_DATA",
    "LSA_FOREST_TRUST_COLLISION_INFORMATION",
    "LSA_FOREST_TRUST_COLLISION_RECORD",
    "LSA_FOREST_TRUST_COLLISION_RECORD_TYPE",
    "LSA_FOREST_TRUST_COLLISION_RECORD_TYPE_CollisionOther",
    "LSA_FOREST_TRUST_COLLISION_RECORD_TYPE_CollisionTdo",
    "LSA_FOREST_TRUST_COLLISION_RECORD_TYPE_CollisionXref",
    "LSA_FOREST_TRUST_DOMAIN_INFO",
    "LSA_FOREST_TRUST_INFORMATION",
    "LSA_FOREST_TRUST_RECORD",
    "LSA_FOREST_TRUST_RECORD_TYPE",
    "LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustDomainInfo",
    "LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustRecordTypeLast",
    "LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustTopLevelName",
    "LSA_FOREST_TRUST_RECORD_TYPE_ForestTrustTopLevelNameEx",
    "LSA_FOREST_TRUST_RECORD_TYPE_UNRECOGNIZED",
    "LSA_FTRECORD_DISABLED_REASONS",
    "LSA_GLOBAL_SECRET_PREFIX",
    "LSA_GLOBAL_SECRET_PREFIX_LENGTH",
    "LSA_HANDLE",
    "LSA_LAST_INTER_LOGON_INFO",
    "LSA_LOCAL_SECRET_PREFIX",
    "LSA_LOCAL_SECRET_PREFIX_LENGTH",
    "LSA_LOOKUP_DISALLOW_CONNECTED_ACCOUNT_INTERNET_SID",
    "LSA_LOOKUP_DOMAIN_INFO_CLASS",
    "LSA_LOOKUP_DOMAIN_INFO_CLASS_AccountDomainInformation",
    "LSA_LOOKUP_DOMAIN_INFO_CLASS_DnsDomainInformation",
    "LSA_LOOKUP_ISOLATED_AS_LOCAL",
    "LSA_LOOKUP_PREFER_INTERNET_NAMES",
    "LSA_MACHINE_SECRET_PREFIX",
    "LSA_MAXIMUM_ENUMERATION_LENGTH",
    "LSA_MAXIMUM_SID_COUNT",
    "LSA_MODE_INDIVIDUAL_ACCOUNTS",
    "LSA_MODE_LOG_FULL",
    "LSA_MODE_MANDATORY_ACCESS",
    "LSA_MODE_PASSWORD_PROTECTED",
    "LSA_NB_DISABLED_ADMIN",
    "LSA_NB_DISABLED_CONFLICT",
    "LSA_QUERY_CLIENT_PRELOGON_SESSION_ID",
    "LSA_REFERENCED_DOMAIN_LIST",
    "LSA_SECPKG_FUNCTION_TABLE",
    "LSA_SECRET_MAXIMUM_COUNT",
    "LSA_SECRET_MAXIMUM_LENGTH",
    "LSA_SID_DISABLED_ADMIN",
    "LSA_SID_DISABLED_CONFLICT",
    "LSA_TLN_DISABLED_ADMIN",
    "LSA_TLN_DISABLED_CONFLICT",
    "LSA_TLN_DISABLED_NEW",
    "LSA_TOKEN_INFORMATION_NULL",
    "LSA_TOKEN_INFORMATION_TYPE",
    "LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationNull",
    "LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationV1",
    "LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationV2",
    "LSA_TOKEN_INFORMATION_TYPE_LsaTokenInformationV3",
    "LSA_TOKEN_INFORMATION_V1",
    "LSA_TOKEN_INFORMATION_V3",
    "LSA_TRANSLATED_NAME",
    "LSA_TRANSLATED_SID",
    "LSA_TRANSLATED_SID2",
    "LSA_TRUST_INFORMATION",
    "LsaAddAccountRights",
    "LsaCallAuthenticationPackage",
    "LsaClose",
    "LsaConnectUntrusted",
    "LsaCreateTrustedDomainEx",
    "LsaDeleteTrustedDomain",
    "LsaDeregisterLogonProcess",
    "LsaEnumerateAccountRights",
    "LsaEnumerateAccountsWithUserRight",
    "LsaEnumerateLogonSessions",
    "LsaEnumerateTrustedDomains",
    "LsaEnumerateTrustedDomainsEx",
    "LsaFreeMemory",
    "LsaFreeReturnBuffer",
    "LsaGetAppliedCAPIDs",
    "LsaGetLogonSessionData",
    "LsaLogonUser",
    "LsaLookupAuthenticationPackage",
    "LsaLookupNames",
    "LsaLookupNames2",
    "LsaLookupSids",
    "LsaLookupSids2",
    "LsaNtStatusToWinError",
    "LsaOpenPolicy",
    "LsaOpenTrustedDomainByName",
    "LsaQueryCAPs",
    "LsaQueryDomainInformationPolicy",
    "LsaQueryForestTrustInformation",
    "LsaQueryInformationPolicy",
    "LsaQueryTrustedDomainInfo",
    "LsaQueryTrustedDomainInfoByName",
    "LsaRegisterLogonProcess",
    "LsaRegisterPolicyChangeNotification",
    "LsaRemoveAccountRights",
    "LsaRetrievePrivateData",
    "LsaSetCAPs",
    "LsaSetDomainInformationPolicy",
    "LsaSetForestTrustInformation",
    "LsaSetInformationPolicy",
    "LsaSetTrustedDomainInfoByName",
    "LsaSetTrustedDomainInformation",
    "LsaStorePrivateData",
    "LsaUnregisterPolicyChangeNotification",
    "MAKE_SIGNATURE_FN",
    "MAXIMUM_CAPES_PER_CAP",
    "MAX_CRED_SIZE",
    "MAX_PROTOCOL_ID_SIZE",
    "MAX_RECORDS_IN_FOREST_TRUST_INFO",
    "MAX_USER_RECORDS",
    "MICROSOFT_KERBEROS_NAME",
    "MICROSOFT_KERBEROS_NAME_A",
    "MICROSOFT_KERBEROS_NAME_W",
    "MSV1_0",
    "MSV1_0_ALLOW_FORCE_GUEST",
    "MSV1_0_ALLOW_MSVCHAPV2",
    "MSV1_0_ALLOW_SERVER_TRUST_ACCOUNT",
    "MSV1_0_ALLOW_WORKSTATION_TRUST_ACCOUNT",
    "MSV1_0_AVID",
    "MSV1_0_AVID_MsvAvChannelBindings",
    "MSV1_0_AVID_MsvAvDnsComputerName",
    "MSV1_0_AVID_MsvAvDnsDomainName",
    "MSV1_0_AVID_MsvAvDnsTreeName",
    "MSV1_0_AVID_MsvAvEOL",
    "MSV1_0_AVID_MsvAvFlags",
    "MSV1_0_AVID_MsvAvNbComputerName",
    "MSV1_0_AVID_MsvAvNbDomainName",
    "MSV1_0_AVID_MsvAvRestrictions",
    "MSV1_0_AVID_MsvAvTargetName",
    "MSV1_0_AVID_MsvAvTimestamp",
    "MSV1_0_AV_FLAG_FORCE_GUEST",
    "MSV1_0_AV_FLAG_MIC_HANDSHAKE_MESSAGES",
    "MSV1_0_AV_FLAG_UNVERIFIED_TARGET",
    "MSV1_0_AV_PAIR",
    "MSV1_0_CHALLENGE_LENGTH",
    "MSV1_0_CHANGEPASSWORD_REQUEST",
    "MSV1_0_CHANGEPASSWORD_RESPONSE",
    "MSV1_0_CHECK_LOGONHOURS_FOR_S4U",
    "MSV1_0_CLEARTEXT_PASSWORD_ALLOWED",
    "MSV1_0_CLEARTEXT_PASSWORD_SUPPLIED",
    "MSV1_0_CREDENTIAL_KEY",
    "MSV1_0_CREDENTIAL_KEY_LENGTH",
    "MSV1_0_CREDENTIAL_KEY_TYPE",
    "MSV1_0_CREDENTIAL_KEY_TYPE_DeprecatedIUMCredKey",
    "MSV1_0_CREDENTIAL_KEY_TYPE_DomainUserCredKey",
    "MSV1_0_CREDENTIAL_KEY_TYPE_ExternallySuppliedCredKey",
    "MSV1_0_CREDENTIAL_KEY_TYPE_InvalidCredKey",
    "MSV1_0_CREDENTIAL_KEY_TYPE_LocalUserCredKey",
    "MSV1_0_CRED_CREDKEY_PRESENT",
    "MSV1_0_CRED_LM_PRESENT",
    "MSV1_0_CRED_NT_PRESENT",
    "MSV1_0_CRED_REMOVED",
    "MSV1_0_CRED_SHA_PRESENT",
    "MSV1_0_CRED_VERSION",
    "MSV1_0_CRED_VERSION_ARSO",
    "MSV1_0_CRED_VERSION_INVALID",
    "MSV1_0_CRED_VERSION_IUM",
    "MSV1_0_CRED_VERSION_REMOTE",
    "MSV1_0_CRED_VERSION_RESERVED_1",
    "MSV1_0_CRED_VERSION_V2",
    "MSV1_0_CRED_VERSION_V3",
    "MSV1_0_DISABLE_PERSONAL_FALLBACK",
    "MSV1_0_DONT_TRY_GUEST_ACCOUNT",
    "MSV1_0_GUEST_LOGON",
    "MSV1_0_INTERACTIVE_LOGON",
    "MSV1_0_INTERACTIVE_PROFILE",
    "MSV1_0_INTERNET_DOMAIN",
    "MSV1_0_IUM_SUPPLEMENTAL_CREDENTIAL",
    "MSV1_0_LANMAN_SESSION_KEY_LENGTH",
    "MSV1_0_LM20_LOGON",
    "MSV1_0_LM20_LOGON_PROFILE",
    "MSV1_0_LOGON_SUBMIT_TYPE",
    "MSV1_0_MAX_AVL_SIZE",
    "MSV1_0_MAX_NTLM3_LIFE",
    "MSV1_0_MNS_LOGON",
    "MSV1_0_NTLM3_OWF_LENGTH",
    "MSV1_0_NTLM3_RESPONSE",
    "MSV1_0_NTLM3_RESPONSE_LENGTH",
    "MSV1_0_OWF_PASSWORD_LENGTH",
    "MSV1_0_PACKAGE_NAME",
    "MSV1_0_PACKAGE_NAMEW",
    "MSV1_0_PASSTHROUGH_REQUEST",
    "MSV1_0_PASSTHROUGH_RESPONSE",
    "MSV1_0_PASSTHRU",
    "MSV1_0_PROFILE_BUFFER_TYPE",
    "MSV1_0_PROTOCOL_MESSAGE_TYPE",
    "MSV1_0_REMOTE_SUPPLEMENTAL_CREDENTIAL",
    "MSV1_0_RETURN_PASSWORD_EXPIRY",
    "MSV1_0_RETURN_PROFILE_PATH",
    "MSV1_0_RETURN_USER_PARAMETERS",
    "MSV1_0_S4U2SELF",
    "MSV1_0_S4U_LOGON",
    "MSV1_0_S4U_LOGON_FLAG_CHECK_LOGONHOURS",
    "MSV1_0_SHA_PASSWORD_LENGTH",
    "MSV1_0_SUBAUTHENTICATION_DLL",
    "MSV1_0_SUBAUTHENTICATION_DLL_EX",
    "MSV1_0_SUBAUTHENTICATION_DLL_IIS",
    "MSV1_0_SUBAUTHENTICATION_DLL_RAS",
    "MSV1_0_SUBAUTHENTICATION_DLL_SHIFT",
    "MSV1_0_SUBAUTHENTICATION_FLAGS",
    "MSV1_0_SUBAUTHENTICATION_KEY",
    "MSV1_0_SUBAUTHENTICATION_VALUE",
    "MSV1_0_SUBAUTH_ACCOUNT_DISABLED",
    "MSV1_0_SUBAUTH_ACCOUNT_EXPIRY",
    "MSV1_0_SUBAUTH_ACCOUNT_TYPE",
    "MSV1_0_SUBAUTH_LOCKOUT",
    "MSV1_0_SUBAUTH_LOGON",
    "MSV1_0_SUBAUTH_LOGON_HOURS",
    "MSV1_0_SUBAUTH_PASSWORD",
    "MSV1_0_SUBAUTH_PASSWORD_EXPIRY",
    "MSV1_0_SUBAUTH_REQUEST",
    "MSV1_0_SUBAUTH_RESPONSE",
    "MSV1_0_SUBAUTH_WORKSTATIONS",
    "MSV1_0_SUPPLEMENTAL_CREDENTIAL",
    "MSV1_0_SUPPLEMENTAL_CREDENTIAL_V2",
    "MSV1_0_SUPPLEMENTAL_CREDENTIAL_V3",
    "MSV1_0_TRY_GUEST_ACCOUNT_ONLY",
    "MSV1_0_TRY_SPECIFIED_DOMAIN_ONLY",
    "MSV1_0_UPDATE_LOGON_STATISTICS",
    "MSV1_0_USER_SESSION_KEY_LENGTH",
    "MSV1_0_USE_CLIENT_CHALLENGE",
    "MSV1_0_USE_DOMAIN_FOR_ROUTING_ONLY",
    "MSV1_0_VALIDATION_INFO",
    "MSV1_0_VALIDATION_KICKOFF_TIME",
    "MSV1_0_VALIDATION_LOGOFF_TIME",
    "MSV1_0_VALIDATION_LOGON_DOMAIN",
    "MSV1_0_VALIDATION_LOGON_SERVER",
    "MSV1_0_VALIDATION_SESSION_KEY",
    "MSV1_0_VALIDATION_USER_FLAGS",
    "MSV1_0_VALIDATION_USER_ID",
    "MSV_SUBAUTH_LOGON_PARAMETER_CONTROL",
    "MSV_SUB_AUTHENTICATION_FILTER",
    "MSV_SUPPLEMENTAL_CREDENTIAL_FLAGS",
    "MakeSignature",
    "MsV1_0CacheLogon",
    "MsV1_0CacheLookup",
    "MsV1_0CacheLookupEx",
    "MsV1_0ChangeCachedPassword",
    "MsV1_0ChangePassword",
    "MsV1_0ClearCachedCredentials",
    "MsV1_0ConfigLocalAliases",
    "MsV1_0DecryptDpapiMasterKey",
    "MsV1_0DeleteTbalSecrets",
    "MsV1_0DeriveCredential",
    "MsV1_0EnumerateUsers",
    "MsV1_0GenericPassthrough",
    "MsV1_0GetCredentialKey",
    "MsV1_0GetStrongCredentialKey",
    "MsV1_0GetUserInfo",
    "MsV1_0InteractiveLogon",
    "MsV1_0InteractiveProfile",
    "MsV1_0Lm20ChallengeRequest",
    "MsV1_0Lm20GetChallengeResponse",
    "MsV1_0Lm20Logon",
    "MsV1_0Lm20LogonProfile",
    "MsV1_0LookupToken",
    "MsV1_0LuidLogon",
    "MsV1_0NetworkLogon",
    "MsV1_0NoElevationLogon",
    "MsV1_0ProvisionTbal",
    "MsV1_0ReLogonUsers",
    "MsV1_0S4ULogon",
    "MsV1_0SetProcessOption",
    "MsV1_0SetThreadOption",
    "MsV1_0SmartCardProfile",
    "MsV1_0SubAuth",
    "MsV1_0SubAuthLogon",
    "MsV1_0TransferCred",
    "MsV1_0ValidateAuth",
    "MsV1_0VirtualLogon",
    "MsV1_0WorkstationUnlockLogon",
    "NEGOSSP_NAME",
    "NEGOSSP_NAME_A",
    "NEGOSSP_NAME_W",
    "NEGOTIATE_ALLOW_NTLM",
    "NEGOTIATE_CALLER_NAME_REQUEST",
    "NEGOTIATE_CALLER_NAME_RESPONSE",
    "NEGOTIATE_MAX_PREFIX",
    "NEGOTIATE_MESSAGES",
    "NEGOTIATE_MESSAGES_NegCallPackageMax",
    "NEGOTIATE_MESSAGES_NegEnumPackagePrefixes",
    "NEGOTIATE_MESSAGES_NegGetCallerName",
    "NEGOTIATE_MESSAGES_NegMsgReserved1",
    "NEGOTIATE_MESSAGES_NegTransferCredentials",
    "NEGOTIATE_NEG_NTLM",
    "NEGOTIATE_PACKAGE_PREFIX",
    "NEGOTIATE_PACKAGE_PREFIXES",
    "NETLOGON_GENERIC_INFO",
    "NETLOGON_INTERACTIVE_INFO",
    "NETLOGON_LOGON_IDENTITY_INFO",
    "NETLOGON_LOGON_INFO_CLASS",
    "NETLOGON_LOGON_INFO_CLASS_NetlogonGenericInformation",
    "NETLOGON_LOGON_INFO_CLASS_NetlogonInteractiveInformation",
    "NETLOGON_LOGON_INFO_CLASS_NetlogonInteractiveTransitiveInformation",
    "NETLOGON_LOGON_INFO_CLASS_NetlogonNetworkInformation",
    "NETLOGON_LOGON_INFO_CLASS_NetlogonNetworkTransitiveInformation",
    "NETLOGON_LOGON_INFO_CLASS_NetlogonServiceInformation",
    "NETLOGON_LOGON_INFO_CLASS_NetlogonServiceTransitiveInformation",
    "NETLOGON_NETWORK_INFO",
    "NETLOGON_SERVICE_INFO",
    "NGC_DATA_FLAG_IS_CLOUD_TRUST_CRED",
    "NGC_DATA_FLAG_IS_SMARTCARD_DATA",
    "NGC_DATA_FLAG_KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES",
    "NGC_DATA_FLAG_KERB_CERTIFICATE_LOGON_FLAG_USE_CERTIFICATE_INFO",
    "NOTIFIER_FLAG_NEW_THREAD",
    "NOTIFIER_FLAG_ONE_SHOT",
    "NOTIFIER_FLAG_SECONDS",
    "NOTIFIER_TYPE_HANDLE_WAIT",
    "NOTIFIER_TYPE_IMMEDIATE",
    "NOTIFIER_TYPE_INTERVAL",
    "NOTIFIER_TYPE_NOTIFY_EVENT",
    "NOTIFIER_TYPE_STATE_CHANGE",
    "NOTIFY_CLASS_DOMAIN_CHANGE",
    "NOTIFY_CLASS_PACKAGE_CHANGE",
    "NOTIFY_CLASS_REGISTRY_CHANGE",
    "NOTIFY_CLASS_ROLE_CHANGE",
    "NO_LONG_NAMES",
    "NTLMSP_NAME",
    "NTLMSP_NAME_A",
    "PCT1SP_NAME",
    "PCT1SP_NAME_A",
    "PCT1SP_NAME_W",
    "PER_USER_AUDIT_FAILURE_EXCLUDE",
    "PER_USER_AUDIT_FAILURE_INCLUDE",
    "PER_USER_AUDIT_NONE",
    "PER_USER_AUDIT_SUCCESS_EXCLUDE",
    "PER_USER_AUDIT_SUCCESS_INCLUDE",
    "PER_USER_POLICY_UNCHANGED",
    "PKSEC_CREATE_CONTEXT_LIST",
    "PKSEC_DEREFERENCE_LIST_ENTRY",
    "PKSEC_INSERT_LIST_ENTRY",
    "PKSEC_LOCATE_PKG_BY_ID",
    "PKSEC_REFERENCE_LIST_ENTRY",
    "PKSEC_SERIALIZE_SCHANNEL_AUTH_DATA",
    "PKSEC_SERIALIZE_WINNT_AUTH_DATA",
    "PKU2U_CERTIFICATE_S4U_LOGON",
    "PKU2U_CERT_BLOB",
    "PKU2U_CREDUI_CONTEXT",
    "PKU2U_LOGON_SUBMIT_TYPE",
    "PKU2U_LOGON_SUBMIT_TYPE_Pku2uCertificateS4ULogon",
    "PKU2U_PACKAGE_NAME",
    "PKU2U_PACKAGE_NAME_A",
    "PKU2U_PACKAGE_NAME_W",
    "PLSA_ADD_CREDENTIAL",
    "PLSA_ALLOCATE_CLIENT_BUFFER",
    "PLSA_ALLOCATE_LSA_HEAP",
    "PLSA_ALLOCATE_PRIVATE_HEAP",
    "PLSA_ALLOCATE_SHARED_MEMORY",
    "PLSA_AP_CALL_PACKAGE",
    "PLSA_AP_CALL_PACKAGE_PASSTHROUGH",
    "PLSA_AP_INITIALIZE_PACKAGE",
    "PLSA_AP_LOGON_TERMINATED",
    "PLSA_AP_LOGON_USER",
    "PLSA_AP_LOGON_USER_EX",
    "PLSA_AP_LOGON_USER_EX2",
    "PLSA_AP_LOGON_USER_EX3",
    "PLSA_AP_POST_LOGON_USER_SURROGATE",
    "PLSA_AP_PRE_LOGON_USER_SURROGATE",
    "PLSA_AUDIT_ACCOUNT_LOGON",
    "PLSA_AUDIT_LOGON",
    "PLSA_AUDIT_LOGON_EX",
    "PLSA_CALLBACK_FUNCTION",
    "PLSA_CALL_PACKAGE",
    "PLSA_CALL_PACKAGEEX",
    "PLSA_CALL_PACKAGE_PASSTHROUGH",
    "PLSA_CANCEL_NOTIFICATION",
    "PLSA_CHECK_PROTECTED_USER_BY_TOKEN",
    "PLSA_CLIENT_CALLBACK",
    "PLSA_CLOSE_SAM_USER",
    "PLSA_CONVERT_AUTH_DATA_TO_TOKEN",
    "PLSA_COPY_FROM_CLIENT_BUFFER",
    "PLSA_COPY_TO_CLIENT_BUFFER",
    "PLSA_CRACK_SINGLE_NAME",
    "PLSA_CREATE_LOGON_SESSION",
    "PLSA_CREATE_SHARED_MEMORY",
    "PLSA_CREATE_THREAD",
    "PLSA_CREATE_TOKEN",
    "PLSA_CREATE_TOKEN_EX",
    "PLSA_DELETE_CREDENTIAL",
    "PLSA_DELETE_LOGON_SESSION",
    "PLSA_DELETE_SHARED_MEMORY",
    "PLSA_DUPLICATE_HANDLE",
    "PLSA_EXPAND_AUTH_DATA_FOR_DOMAIN",
    "PLSA_FREE_CLIENT_BUFFER",
    "PLSA_FREE_LSA_HEAP",
    "PLSA_FREE_PRIVATE_HEAP",
    "PLSA_FREE_SHARED_MEMORY",
    "PLSA_GET_APP_MODE_INFO",
    "PLSA_GET_AUTH_DATA_FOR_USER",
    "PLSA_GET_CALL_INFO",
    "PLSA_GET_CLIENT_INFO",
    "PLSA_GET_CREDENTIALS",
    "PLSA_GET_EXTENDED_CALL_FLAGS",
    "PLSA_GET_SERVICE_ACCOUNT_PASSWORD",
    "PLSA_GET_USER_AUTH_DATA",
    "PLSA_GET_USER_CREDENTIALS",
    "PLSA_IMPERSONATE_CLIENT",
    "PLSA_LOCATE_PKG_BY_ID",
    "PLSA_MAP_BUFFER",
    "PLSA_OPEN_SAM_USER",
    "PLSA_OPEN_TOKEN_BY_LOGON_ID",
    "PLSA_PROTECT_MEMORY",
    "PLSA_QUERY_CLIENT_REQUEST",
    "PLSA_REDIRECTED_LOGON_CALLBACK",
    "PLSA_REDIRECTED_LOGON_CLEANUP_CALLBACK",
    "PLSA_REDIRECTED_LOGON_GET_LOGON_CREDS",
    "PLSA_REDIRECTED_LOGON_GET_SUPP_CREDS",
    "PLSA_REDIRECTED_LOGON_INIT",
    "PLSA_REGISTER_CALLBACK",
    "PLSA_REGISTER_NOTIFICATION",
    "PLSA_SAVE_SUPPLEMENTAL_CREDENTIALS",
    "PLSA_SET_APP_MODE_INFO",
    "PLSA_UNLOAD_PACKAGE",
    "PLSA_UPDATE_PRIMARY_CREDENTIALS",
    "POLICY_ACCOUNT_DOMAIN_INFO",
    "POLICY_AUDIT_CATEGORIES_INFO",
    "POLICY_AUDIT_EVENTS_INFO",
    "POLICY_AUDIT_EVENT_FAILURE",
    "POLICY_AUDIT_EVENT_NONE",
    "POLICY_AUDIT_EVENT_SUCCESS",
    "POLICY_AUDIT_EVENT_TYPE",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryAccountLogon",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryAccountManagement",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryDetailedTracking",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryDirectoryServiceAccess",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryLogon",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryObjectAccess",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryPolicyChange",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategoryPrivilegeUse",
    "POLICY_AUDIT_EVENT_TYPE_AuditCategorySystem",
    "POLICY_AUDIT_EVENT_UNCHANGED",
    "POLICY_AUDIT_FULL_QUERY_INFO",
    "POLICY_AUDIT_FULL_SET_INFO",
    "POLICY_AUDIT_LOG_ADMIN",
    "POLICY_AUDIT_LOG_INFO",
    "POLICY_AUDIT_SID_ARRAY",
    "POLICY_AUDIT_SUBCATEGORIES_INFO",
    "POLICY_CREATE_ACCOUNT",
    "POLICY_CREATE_PRIVILEGE",
    "POLICY_CREATE_SECRET",
    "POLICY_DEFAULT_QUOTA_INFO",
    "POLICY_DNS_DOMAIN_INFO",
    "POLICY_DOMAIN_EFS_INFO",
    "POLICY_DOMAIN_INFORMATION_CLASS",
    "POLICY_DOMAIN_INFORMATION_CLASS_PolicyDomainEfsInformation",
    "POLICY_DOMAIN_INFORMATION_CLASS_PolicyDomainKerberosTicketInformation",
    "POLICY_DOMAIN_KERBEROS_TICKET_INFO",
    "POLICY_GET_PRIVATE_INFORMATION",
    "POLICY_INFORMATION_CLASS",
    "POLICY_INFORMATION_CLASS_PolicyAccountDomainInformation",
    "POLICY_INFORMATION_CLASS_PolicyAuditEventsInformation",
    "POLICY_INFORMATION_CLASS_PolicyAuditFullQueryInformation",
    "POLICY_INFORMATION_CLASS_PolicyAuditFullSetInformation",
    "POLICY_INFORMATION_CLASS_PolicyAuditLogInformation",
    "POLICY_INFORMATION_CLASS_PolicyDefaultQuotaInformation",
    "POLICY_INFORMATION_CLASS_PolicyDnsDomainInformation",
    "POLICY_INFORMATION_CLASS_PolicyDnsDomainInformationInt",
    "POLICY_INFORMATION_CLASS_PolicyLastEntry",
    "POLICY_INFORMATION_CLASS_PolicyLocalAccountDomainInformation",
    "POLICY_INFORMATION_CLASS_PolicyLsaServerRoleInformation",
    "POLICY_INFORMATION_CLASS_PolicyMachineAccountInformation",
    "POLICY_INFORMATION_CLASS_PolicyModificationInformation",
    "POLICY_INFORMATION_CLASS_PolicyPdAccountInformation",
    "POLICY_INFORMATION_CLASS_PolicyPrimaryDomainInformation",
    "POLICY_INFORMATION_CLASS_PolicyReplicaSourceInformation",
    "POLICY_KERBEROS_VALIDATE_CLIENT",
    "POLICY_LOOKUP_NAMES",
    "POLICY_LSA_SERVER_ROLE",
    "POLICY_LSA_SERVER_ROLE_INFO",
    "POLICY_LSA_SERVER_ROLE_PolicyServerRoleBackup",
    "POLICY_LSA_SERVER_ROLE_PolicyServerRolePrimary",
    "POLICY_MACHINE_ACCT_INFO",
    "POLICY_MODIFICATION_INFO",
    "POLICY_NOTIFICATION",
    "POLICY_NOTIFICATION_INFORMATION_CLASS",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyAccountDomainInformation",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyAuditEventsInformation",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyDnsDomainInformation",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyDomainEfsInformation",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyDomainKerberosTicketInformation",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyGlobalSaclInformation",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyMachineAccountPasswordInformation",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyMax",
    "POLICY_NOTIFICATION_INFORMATION_CLASS_PolicyNotifyServerRoleInformation",
    "POLICY_PD_ACCOUNT_INFO",
    "POLICY_PRIMARY_DOMAIN_INFO",
    "POLICY_QOS_ALLOW_LOCAL_ROOT_CERT_STORE",
    "POLICY_QOS_DHCP_SERVER_ALLOWED",
    "POLICY_QOS_INBOUND_CONFIDENTIALITY",
    "POLICY_QOS_INBOUND_INTEGRITY",
    "POLICY_QOS_OUTBOUND_CONFIDENTIALITY",
    "POLICY_QOS_OUTBOUND_INTEGRITY",
    "POLICY_QOS_RAS_SERVER_ALLOWED",
    "POLICY_QOS_SCHANNEL_REQUIRED",
    "POLICY_REPLICA_SOURCE_INFO",
    "POLICY_SERVER_ADMIN",
    "POLICY_SET_AUDIT_REQUIREMENTS",
    "POLICY_SET_DEFAULT_QUOTA_LIMITS",
    "POLICY_TRUST_ADMIN",
    "POLICY_VIEW_AUDIT_INFORMATION",
    "POLICY_VIEW_LOCAL_INFORMATION",
    "PRIMARY_CRED_ARSO_LOGON",
    "PRIMARY_CRED_AUTH_ID",
    "PRIMARY_CRED_CACHED_INTERACTIVE_LOGON",
    "PRIMARY_CRED_CACHED_LOGON",
    "PRIMARY_CRED_CLEAR_PASSWORD",
    "PRIMARY_CRED_DO_NOT_SPLIT",
    "PRIMARY_CRED_ENCRYPTED_CREDGUARD_PASSWORD",
    "PRIMARY_CRED_ENTERPRISE_INTERNET_USER",
    "PRIMARY_CRED_EX",
    "PRIMARY_CRED_INTERACTIVE_FIDO_LOGON",
    "PRIMARY_CRED_INTERACTIVE_NGC_LOGON",
    "PRIMARY_CRED_INTERACTIVE_SMARTCARD_LOGON",
    "PRIMARY_CRED_INTERNET_USER",
    "PRIMARY_CRED_LOGON_LUA",
    "PRIMARY_CRED_LOGON_NO_TCB",
    "PRIMARY_CRED_LOGON_PACKAGE_SHIFT",
    "PRIMARY_CRED_OWF_PASSWORD",
    "PRIMARY_CRED_PACKAGE_MASK",
    "PRIMARY_CRED_PACKED_CREDS",
    "PRIMARY_CRED_PROTECTED_USER",
    "PRIMARY_CRED_REFRESH_NEEDED",
    "PRIMARY_CRED_RESTRICTED_TS",
    "PRIMARY_CRED_SUPPLEMENTAL",
    "PRIMARY_CRED_TRANSFER",
    "PRIMARY_CRED_UPDATE",
    "PSAM_CREDENTIAL_UPDATE_FREE_ROUTINE",
    "PSAM_CREDENTIAL_UPDATE_NOTIFY_ROUTINE",
    "PSAM_CREDENTIAL_UPDATE_REGISTER_MAPPED_ENTRYPOINTS_ROUTINE",
    "PSAM_CREDENTIAL_UPDATE_REGISTER_ROUTINE",
    "PSAM_INIT_NOTIFICATION_ROUTINE",
    "PSAM_PASSWORD_FILTER_ROUTINE",
    "PSAM_PASSWORD_NOTIFICATION_ROUTINE",
    "PctPublicKey",
    "QUERY_CONTEXT_ATTRIBUTES_EX_FN_A",
    "QUERY_CONTEXT_ATTRIBUTES_EX_FN_W",
    "QUERY_CONTEXT_ATTRIBUTES_FN_A",
    "QUERY_CONTEXT_ATTRIBUTES_FN_W",
    "QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_A",
    "QUERY_CREDENTIALS_ATTRIBUTES_EX_FN_W",
    "QUERY_CREDENTIALS_ATTRIBUTES_FN_A",
    "QUERY_CREDENTIALS_ATTRIBUTES_FN_W",
    "QUERY_SECURITY_CONTEXT_TOKEN_FN",
    "QUERY_SECURITY_PACKAGE_INFO_FN_A",
    "QUERY_SECURITY_PACKAGE_INFO_FN_W",
    "QueryContextAttributesA",
    "QueryContextAttributesExA",
    "QueryContextAttributesExW",
    "QueryContextAttributesW",
    "QueryCredentialsAttributesA",
    "QueryCredentialsAttributesExA",
    "QueryCredentialsAttributesExW",
    "QueryCredentialsAttributesW",
    "QuerySecurityContextToken",
    "QuerySecurityPackageInfoA",
    "QuerySecurityPackageInfoW",
    "RCRED_CRED_EXISTS",
    "RCRED_STATUS_NOCRED",
    "RCRED_STATUS_UNKNOWN_ISSUER",
    "REVERT_SECURITY_CONTEXT_FN",
    "RTL_ENCRYPT_MEMORY_SIZE",
    "RTL_ENCRYPT_OPTION_CROSS_PROCESS",
    "RTL_ENCRYPT_OPTION_FOR_SYSTEM",
    "RTL_ENCRYPT_OPTION_SAME_LOGON",
    "RevertSecurityContext",
    "SAM_CREDENTIAL_UPDATE_FREE_ROUTINE",
    "SAM_CREDENTIAL_UPDATE_NOTIFY_ROUTINE",
    "SAM_CREDENTIAL_UPDATE_REGISTER_MAPPED_ENTRYPOINTS_ROUTINE",
    "SAM_CREDENTIAL_UPDATE_REGISTER_ROUTINE",
    "SAM_DAYS_PER_WEEK",
    "SAM_INIT_NOTIFICATION_ROUTINE",
    "SAM_PASSWORD_CHANGE_NOTIFY_ROUTINE",
    "SAM_PASSWORD_FILTER_ROUTINE",
    "SAM_REGISTER_MAPPING_ELEMENT",
    "SAM_REGISTER_MAPPING_LIST",
    "SAM_REGISTER_MAPPING_TABLE",
    "SASL_AUTHZID_STATE",
    "SASL_OPTION_AUTHZ_PROCESSING",
    "SASL_OPTION_AUTHZ_STRING",
    "SASL_OPTION_RECV_SIZE",
    "SASL_OPTION_SEND_SIZE",
    "SCHANNEL_ALERT",
    "SCHANNEL_ALERT_TOKEN",
    "SCHANNEL_ALERT_TOKEN_ALERT_TYPE",
    "SCHANNEL_CERT_HASH",
    "SCHANNEL_CERT_HASH_STORE",
    "SCHANNEL_CLIENT_SIGNATURE",
    "SCHANNEL_CRED",
    "SCHANNEL_CRED_FLAGS",
    "SCHANNEL_CRED_VERSION",
    "SCHANNEL_NAME",
    "SCHANNEL_NAME_A",
    "SCHANNEL_NAME_W",
    "SCHANNEL_RENEGOTIATE",
    "SCHANNEL_SECRET_PRIVKEY",
    "SCHANNEL_SECRET_TYPE_CAPI",
    "SCHANNEL_SESSION",
    "SCHANNEL_SESSION_TOKEN",
    "SCHANNEL_SESSION_TOKEN_FLAGS",
    "SCHANNEL_SHUTDOWN",
    "SCH_ALLOW_NULL_ENCRYPTION",
    "SCH_CRED",
    "SCH_CREDENTIALS_VERSION",
    "SCH_CRED_AUTO_CRED_VALIDATION",
    "SCH_CRED_CACHE_ONLY_URL_RETRIEVAL",
    "SCH_CRED_CACHE_ONLY_URL_RETRIEVAL_ON_CREATE",
    "SCH_CRED_CERT_CONTEXT",
    "SCH_CRED_DEFERRED_CRED_VALIDATION",
    "SCH_CRED_DISABLE_RECONNECTS",
    "SCH_CRED_FORMAT_CERT_CONTEXT",
    "SCH_CRED_FORMAT_CERT_HASH",
    "SCH_CRED_FORMAT_CERT_HASH_STORE",
    "SCH_CRED_IGNORE_NO_REVOCATION_CHECK",
    "SCH_CRED_IGNORE_REVOCATION_OFFLINE",
    "SCH_CRED_MANUAL_CRED_VALIDATION",
    "SCH_CRED_MAX_STORE_NAME_SIZE",
    "SCH_CRED_MAX_SUPPORTED_ALGS",
    "SCH_CRED_MAX_SUPPORTED_ALPN_IDS",
    "SCH_CRED_MAX_SUPPORTED_CERTS",
    "SCH_CRED_MAX_SUPPORTED_CHAINING_MODES",
    "SCH_CRED_MAX_SUPPORTED_CRYPTO_SETTINGS",
    "SCH_CRED_MAX_SUPPORTED_PARAMETERS",
    "SCH_CRED_MEMORY_STORE_CERT",
    "SCH_CRED_NO_DEFAULT_CREDS",
    "SCH_CRED_NO_SERVERNAME_CHECK",
    "SCH_CRED_NO_SYSTEM_MAPPER",
    "SCH_CRED_PUBLIC_CERTCHAIN",
    "SCH_CRED_RESTRICTED_ROOTS",
    "SCH_CRED_REVOCATION_CHECK_CACHE_ONLY",
    "SCH_CRED_REVOCATION_CHECK_CHAIN",
    "SCH_CRED_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT",
    "SCH_CRED_REVOCATION_CHECK_END_CERT",
    "SCH_CRED_SECRET_CAPI",
    "SCH_CRED_SECRET_PRIVKEY",
    "SCH_CRED_SNI_CREDENTIAL",
    "SCH_CRED_SNI_ENABLE_OCSP",
    "SCH_CRED_USE_DEFAULT_CREDS",
    "SCH_CRED_V1",
    "SCH_CRED_V2",
    "SCH_CRED_V3",
    "SCH_CRED_VERSION",
    "SCH_CRED_X509_CAPI",
    "SCH_CRED_X509_CERTCHAIN",
    "SCH_DISABLE_RECONNECTS",
    "SCH_EXTENSIONS_OPTIONS_NONE",
    "SCH_EXTENSION_DATA",
    "SCH_MACHINE_CERT_HASH",
    "SCH_MAX_EXT_SUBSCRIPTIONS",
    "SCH_NO_RECORD_HEADER",
    "SCH_SEND_AUX_RECORD",
    "SCH_SEND_ROOT_CERT",
    "SCH_USE_DTLS_ONLY",
    "SCH_USE_PRESHAREDKEY_ONLY",
    "SCH_USE_STRONG_CRYPTO",
    "SECBUFFER_ALERT",
    "SECBUFFER_APPLICATION_PROTOCOLS",
    "SECBUFFER_ATTRMASK",
    "SECBUFFER_CHANGE_PASS_RESPONSE",
    "SECBUFFER_CHANNEL_BINDINGS",
    "SECBUFFER_DATA",
    "SECBUFFER_DTLS_MTU",
    "SECBUFFER_EMPTY",
    "SECBUFFER_EXTRA",
    "SECBUFFER_FLAGS",
    "SECBUFFER_KERNEL_MAP",
    "SECBUFFER_MECHLIST",
    "SECBUFFER_MECHLIST_SIGNATURE",
    "SECBUFFER_MISSING",
    "SECBUFFER_NEGOTIATION_INFO",
    "SECBUFFER_PADDING",
    "SECBUFFER_PKG_PARAMS",
    "SECBUFFER_PRESHARED_KEY",
    "SECBUFFER_PRESHARED_KEY_IDENTITY",
    "SECBUFFER_READONLY",
    "SECBUFFER_READONLY_WITH_CHECKSUM",
    "SECBUFFER_RESERVED",
    "SECBUFFER_SEND_GENERIC_TLS_EXTENSION",
    "SECBUFFER_SRTP_MASTER_KEY_IDENTIFIER",
    "SECBUFFER_SRTP_PROTECTION_PROFILES",
    "SECBUFFER_STREAM",
    "SECBUFFER_STREAM_HEADER",
    "SECBUFFER_STREAM_TRAILER",
    "SECBUFFER_SUBSCRIBE_GENERIC_TLS_EXTENSION",
    "SECBUFFER_TARGET",
    "SECBUFFER_TARGET_HOST",
    "SECBUFFER_TOKEN",
    "SECBUFFER_TOKEN_BINDING",
    "SECBUFFER_TRAFFIC_SECRETS",
    "SECBUFFER_UNMAPPED",
    "SECBUFFER_VERSION",
    "SECPKGCONTEXT_CIPHERINFO_V1",
    "SECPKGCONTEXT_CONNECTION_INFO_EX_V1",
    "SECPKG_ANSI_ATTRIBUTE",
    "SECPKG_APP_MODE_INFO",
    "SECPKG_ATTR",
    "SECPKG_ATTR_ACCESS_TOKEN",
    "SECPKG_ATTR_APPLICATION_PROTOCOL",
    "SECPKG_ATTR_APP_DATA",
    "SECPKG_ATTR_AUTHENTICATION_ID",
    "SECPKG_ATTR_AUTHORITY",
    "SECPKG_ATTR_CC_POLICY_RESULT",
    "SECPKG_ATTR_CERT_CHECK_RESULT",
    "SECPKG_ATTR_CERT_CHECK_RESULT_INPROC",
    "SECPKG_ATTR_CERT_TRUST_STATUS",
    "SECPKG_ATTR_CIPHER_INFO",
    "SECPKG_ATTR_CIPHER_STRENGTHS",
    "SECPKG_ATTR_CLIENT_CERT_POLICY",
    "SECPKG_ATTR_CLIENT_SPECIFIED_TARGET",
    "SECPKG_ATTR_CONNECTION_INFO",
    "SECPKG_ATTR_CONNECTION_INFO_EX",
    "SECPKG_ATTR_CONTEXT_DELETED",
    "SECPKG_ATTR_CREDENTIAL_NAME",
    "SECPKG_ATTR_CREDS",
    "SECPKG_ATTR_CREDS_2",
    "SECPKG_ATTR_C_ACCESS_TOKEN",
    "SECPKG_ATTR_C_FULL_ACCESS_TOKEN",
    "SECPKG_ATTR_DCE_INFO",
    "SECPKG_ATTR_DTLS_MTU",
    "SECPKG_ATTR_EAP_KEY_BLOCK",
    "SECPKG_ATTR_EAP_PRF_INFO",
    "SECPKG_ATTR_EARLY_START",
    "SECPKG_ATTR_ENDPOINT_BINDINGS",
    "SECPKG_ATTR_FLAGS",
    "SECPKG_ATTR_ISSUER_LIST",
    "SECPKG_ATTR_ISSUER_LIST_EX",
    "SECPKG_ATTR_IS_LOOPBACK",
    "SECPKG_ATTR_KEYING_MATERIAL",
    "SECPKG_ATTR_KEYING_MATERIAL_INFO",
    "SECPKG_ATTR_KEYING_MATERIAL_INPROC",
    "SECPKG_ATTR_KEYING_MATERIAL_TOKEN_BINDING",
    "SECPKG_ATTR_KEY_INFO",
    "SECPKG_ATTR_LAST_CLIENT_TOKEN_STATUS",
    "SECPKG_ATTR_LCT_STATUS",
    "SECPKG_ATTR_LCT_STATUS_SecPkgAttrLastClientTokenMaybe",
    "SECPKG_ATTR_LCT_STATUS_SecPkgAttrLastClientTokenNo",
    "SECPKG_ATTR_LCT_STATUS_SecPkgAttrLastClientTokenYes",
    "SECPKG_ATTR_LIFESPAN",
    "SECPKG_ATTR_LOCAL_CERT_CONTEXT",
    "SECPKG_ATTR_LOCAL_CERT_INFO",
    "SECPKG_ATTR_LOCAL_CRED",
    "SECPKG_ATTR_LOGOFF_TIME",
    "SECPKG_ATTR_MAPPED_CRED_ATTR",
    "SECPKG_ATTR_NAMES",
    "SECPKG_ATTR_NATIVE_NAMES",
    "SECPKG_ATTR_NEGOTIATED_TLS_EXTENSIONS",
    "SECPKG_ATTR_NEGOTIATION_INFO",
    "SECPKG_ATTR_NEGOTIATION_PACKAGE",
    "SECPKG_ATTR_NEGO_INFO_FLAG_NO_KERBEROS",
    "SECPKG_ATTR_NEGO_INFO_FLAG_NO_NTLM",
    "SECPKG_ATTR_NEGO_KEYS",
    "SECPKG_ATTR_NEGO_PKG_INFO",
    "SECPKG_ATTR_NEGO_STATUS",
    "SECPKG_ATTR_PACKAGE_INFO",
    "SECPKG_ATTR_PASSWORD_EXPIRY",
    "SECPKG_ATTR_PROMPTING_NEEDED",
    "SECPKG_ATTR_PROTO_INFO",
    "SECPKG_ATTR_REMOTE_CERTIFICATES",
    "SECPKG_ATTR_REMOTE_CERT_CHAIN",
    "SECPKG_ATTR_REMOTE_CERT_CONTEXT",
    "SECPKG_ATTR_REMOTE_CRED",
    "SECPKG_ATTR_ROOT_STORE",
    "SECPKG_ATTR_SASL_CONTEXT",
    "SECPKG_ATTR_SERVER_AUTH_FLAGS",
    "SECPKG_ATTR_SESSION_INFO",
    "SECPKG_ATTR_SESSION_KEY",
    "SECPKG_ATTR_SESSION_TICKET_KEYS",
    "SECPKG_ATTR_SIZES",
    "SECPKG_ATTR_SRTP_PARAMETERS",
    "SECPKG_ATTR_STREAM_SIZES",
    "SECPKG_ATTR_SUBJECT_SECURITY_ATTRIBUTES",
    "SECPKG_ATTR_SUPPORTED_ALGS",
    "SECPKG_ATTR_SUPPORTED_PROTOCOLS",
    "SECPKG_ATTR_SUPPORTED_SIGNATURES",
    "SECPKG_ATTR_TARGET",
    "SECPKG_ATTR_TARGET_INFORMATION",
    "SECPKG_ATTR_THUNK_ALL",
    "SECPKG_ATTR_TOKEN_BINDING",
    "SECPKG_ATTR_UI_INFO",
    "SECPKG_ATTR_UNIQUE_BINDINGS",
    "SECPKG_ATTR_USER_FLAGS",
    "SECPKG_ATTR_USE_NCRYPT",
    "SECPKG_ATTR_USE_VALIDATED",
    "SECPKG_BYTE_VECTOR",
    "SECPKG_CALLFLAGS_APPCONTAINER",
    "SECPKG_CALLFLAGS_APPCONTAINER_AUTHCAPABLE",
    "SECPKG_CALLFLAGS_APPCONTAINER_UPNCAPABLE",
    "SECPKG_CALLFLAGS_FORCE_SUPPLIED",
    "SECPKG_CALL_ANSI",
    "SECPKG_CALL_ASYNC_UPDATE",
    "SECPKG_CALL_BUFFER_MARSHAL",
    "SECPKG_CALL_CLEANUP",
    "SECPKG_CALL_CLOUDAP_CONNECT",
    "SECPKG_CALL_INFO",
    "SECPKG_CALL_IN_PROC",
    "SECPKG_CALL_IS_TCB",
    "SECPKG_CALL_KERNEL_MODE",
    "SECPKG_CALL_NEGO",
    "SECPKG_CALL_NEGO_EXTENDER",
    "SECPKG_CALL_NETWORK_ONLY",
    "SECPKG_CALL_PACKAGE_MESSAGE_TYPE",
    "SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageMaxMessage",
    "SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageMinMessage",
    "SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackagePinDcMessage",
    "SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageTransferCredMessage",
    "SECPKG_CALL_PACKAGE_MESSAGE_TYPE_SecPkgCallPackageUnpinAllDcsMessage",
    "SECPKG_CALL_PACKAGE_PIN_DC_REQUEST",
    "SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST",
    "SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_CLEANUP_CREDENTIALS",
    "SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_OPTIMISTIC_LOGON",
    "SECPKG_CALL_PACKAGE_TRANSFER_CRED_REQUEST_FLAG_TO_SSO_SESSION",
    "SECPKG_CALL_PACKAGE_UNPIN_ALL_DCS_REQUEST",
    "SECPKG_CALL_PROCESS_TERM",
    "SECPKG_CALL_RECURSIVE",
    "SECPKG_CALL_SYSTEM_PROC",
    "SECPKG_CALL_THREAD_TERM",
    "SECPKG_CALL_UNLOCK",
    "SECPKG_CALL_URGENT",
    "SECPKG_CALL_WINLOGON",
    "SECPKG_CALL_WOWA32",
    "SECPKG_CALL_WOWCLIENT",
    "SECPKG_CALL_WOWX86",
    "SECPKG_CLIENT_INFO",
    "SECPKG_CLIENT_PROCESS_TERMINATED",
    "SECPKG_CLIENT_THREAD_TERMINATED",
    "SECPKG_CONTEXT_EXPORT_DELETE_OLD",
    "SECPKG_CONTEXT_EXPORT_RESET_NEW",
    "SECPKG_CONTEXT_EXPORT_TO_KERNEL",
    "SECPKG_CONTEXT_THUNKS",
    "SECPKG_CRED",
    "SECPKG_CREDENTIAL",
    "SECPKG_CREDENTIAL_ATTRIBUTE",
    "SECPKG_CREDENTIAL_FLAGS_CALLER_HAS_TCB",
    "SECPKG_CREDENTIAL_FLAGS_CREDMAN_CRED",
    "SECPKG_CREDENTIAL_VERSION",
    "SECPKG_CRED_ATTR_CERT",
    "SECPKG_CRED_ATTR_KDC_PROXY_SETTINGS",
    "SECPKG_CRED_ATTR_NAMES",
    "SECPKG_CRED_ATTR_PAC_BYPASS",
    "SECPKG_CRED_ATTR_SSI_PROVIDER",
    "SECPKG_CRED_AUTOLOGON_RESTRICTED",
    "SECPKG_CRED_BOTH",
    "SECPKG_CRED_CLASS",
    "SECPKG_CRED_DEFAULT",
    "SECPKG_CRED_INBOUND",
    "SECPKG_CRED_OUTBOUND",
    "SECPKG_CRED_PROCESS_POLICY_ONLY",
    "SECPKG_CRED_RESERVED",
    "SECPKG_DLL_FUNCTIONS",
    "SECPKG_EVENT_NOTIFY",
    "SECPKG_EVENT_PACKAGE_CHANGE",
    "SECPKG_EVENT_ROLE_CHANGE",
    "SECPKG_EXTENDED_INFORMATION",
    "SECPKG_EXTENDED_INFORMATION_CLASS",
    "SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgContextThunks",
    "SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgExtraOids",
    "SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgGssInfo",
    "SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgMaxInfo",
    "SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgMutualAuthLevel",
    "SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgNego2Info",
    "SECPKG_EXTENDED_INFORMATION_CLASS_SecpkgWowClientDll",
    "SECPKG_EXTRA_OIDS",
    "SECPKG_FLAG_ACCEPT_WIN32_NAME",
    "SECPKG_FLAG_APPCONTAINER_CHECKS",
    "SECPKG_FLAG_APPCONTAINER_PASSTHROUGH",
    "SECPKG_FLAG_APPLY_LOOPBACK",
    "SECPKG_FLAG_ASCII_BUFFERS",
    "SECPKG_FLAG_CLIENT_ONLY",
    "SECPKG_FLAG_CONNECTION",
    "SECPKG_FLAG_CREDENTIAL_ISOLATION_ENABLED",
    "SECPKG_FLAG_DATAGRAM",
    "SECPKG_FLAG_DELEGATION",
    "SECPKG_FLAG_EXTENDED_ERROR",
    "SECPKG_FLAG_FRAGMENT",
    "SECPKG_FLAG_GSS_COMPATIBLE",
    "SECPKG_FLAG_IMPERSONATION",
    "SECPKG_FLAG_INTEGRITY",
    "SECPKG_FLAG_LOGON",
    "SECPKG_FLAG_MULTI_REQUIRED",
    "SECPKG_FLAG_MUTUAL_AUTH",
    "SECPKG_FLAG_NEGOTIABLE",
    "SECPKG_FLAG_NEGOTIABLE2",
    "SECPKG_FLAG_NEGO_EXTENDER",
    "SECPKG_FLAG_PRIVACY",
    "SECPKG_FLAG_READONLY_WITH_CHECKSUM",
    "SECPKG_FLAG_RESTRICTED_TOKENS",
    "SECPKG_FLAG_STREAM",
    "SECPKG_FLAG_TOKEN_ONLY",
    "SECPKG_FUNCTION_TABLE",
    "SECPKG_GSS_INFO",
    "SECPKG_ID_NONE",
    "SECPKG_INTERFACE_VERSION",
    "SECPKG_INTERFACE_VERSION_10",
    "SECPKG_INTERFACE_VERSION_2",
    "SECPKG_INTERFACE_VERSION_3",
    "SECPKG_INTERFACE_VERSION_4",
    "SECPKG_INTERFACE_VERSION_5",
    "SECPKG_INTERFACE_VERSION_6",
    "SECPKG_INTERFACE_VERSION_7",
    "SECPKG_INTERFACE_VERSION_8",
    "SECPKG_INTERFACE_VERSION_9",
    "SECPKG_KERNEL_FUNCTIONS",
    "SECPKG_KERNEL_FUNCTION_TABLE",
    "SECPKG_LSAMODEINIT_NAME",
    "SECPKG_MAX_OID_LENGTH",
    "SECPKG_MUTUAL_AUTH_LEVEL",
    "SECPKG_NAME_TYPE",
    "SECPKG_NAME_TYPE_SecNameAlternateId",
    "SECPKG_NAME_TYPE_SecNameDN",
    "SECPKG_NAME_TYPE_SecNameFlat",
    "SECPKG_NAME_TYPE_SecNameSPN",
    "SECPKG_NAME_TYPE_SecNameSamCompatible",
    "SECPKG_NEGO2_INFO",
    "SECPKG_NEGOTIATION_COMPLETE",
    "SECPKG_NEGOTIATION_DIRECT",
    "SECPKG_NEGOTIATION_IN_PROGRESS",
    "SECPKG_NEGOTIATION_OPTIMISTIC",
    "SECPKG_NEGOTIATION_TRY_MULTICRED",
    "SECPKG_OPTIONS_PERMANENT",
    "SECPKG_OPTIONS_TYPE_LSA",
    "SECPKG_OPTIONS_TYPE_SSPI",
    "SECPKG_OPTIONS_TYPE_UNKNOWN",
    "SECPKG_PACKAGE_CHANGE_LOAD",
    "SECPKG_PACKAGE_CHANGE_SELECT",
    "SECPKG_PACKAGE_CHANGE_TYPE",
    "SECPKG_PACKAGE_CHANGE_UNLOAD",
    "SECPKG_PARAMETERS",
    "SECPKG_POST_LOGON_USER_INFO",
    "SECPKG_PRIMARY_CRED",
    "SECPKG_PRIMARY_CRED_EX",
    "SECPKG_PRIMARY_CRED_EX_FLAGS_EX_DELEGATION_TOKEN",
    "SECPKG_REDIRECTED_LOGON_BUFFER",
    "SECPKG_REDIRECTED_LOGON_GUID_INITIALIZER",
    "SECPKG_SERIALIZED_OID",
    "SECPKG_SESSIONINFO_TYPE",
    "SECPKG_SESSIONINFO_TYPE_SecSessionPrimaryCred",
    "SECPKG_SHORT_VECTOR",
    "SECPKG_STATE_CRED_ISOLATION_ENABLED",
    "SECPKG_STATE_DOMAIN_CONTROLLER",
    "SECPKG_STATE_ENCRYPTION_PERMITTED",
    "SECPKG_STATE_RESERVED_1",
    "SECPKG_STATE_STANDALONE",
    "SECPKG_STATE_STRONG_ENCRYPTION_PERMITTED",
    "SECPKG_STATE_WORKSTATION",
    "SECPKG_SUPPLEMENTAL_CRED",
    "SECPKG_SUPPLEMENTAL_CRED_ARRAY",
    "SECPKG_SUPPLIED_CREDENTIAL",
    "SECPKG_SURROGATE_LOGON",
    "SECPKG_SURROGATE_LOGON_ENTRY",
    "SECPKG_SURROGATE_LOGON_VERSION_1",
    "SECPKG_TARGETINFO",
    "SECPKG_UNICODE_ATTRIBUTE",
    "SECPKG_USERMODEINIT_NAME",
    "SECPKG_USER_FUNCTION_TABLE",
    "SECPKG_WOW_CLIENT_DLL",
    "SECQOP_WRAP_NO_ENCRYPT",
    "SECQOP_WRAP_OOB_DATA",
    "SECRET_QUERY_VALUE",
    "SECRET_SET_VALUE",
    "SECURITY_ENTRYPOINT",
    "SECURITY_ENTRYPOINT16",
    "SECURITY_ENTRYPOINT_ANSI",
    "SECURITY_ENTRYPOINT_ANSIA",
    "SECURITY_ENTRYPOINT_ANSIW",
    "SECURITY_LOGON_SESSION_DATA",
    "SECURITY_LOGON_TYPE",
    "SECURITY_LOGON_TYPE_Batch",
    "SECURITY_LOGON_TYPE_CachedInteractive",
    "SECURITY_LOGON_TYPE_CachedRemoteInteractive",
    "SECURITY_LOGON_TYPE_CachedUnlock",
    "SECURITY_LOGON_TYPE_Interactive",
    "SECURITY_LOGON_TYPE_Network",
    "SECURITY_LOGON_TYPE_NetworkCleartext",
    "SECURITY_LOGON_TYPE_NewCredentials",
    "SECURITY_LOGON_TYPE_Proxy",
    "SECURITY_LOGON_TYPE_RemoteInteractive",
    "SECURITY_LOGON_TYPE_Service",
    "SECURITY_LOGON_TYPE_UndefinedLogonType",
    "SECURITY_LOGON_TYPE_Unlock",
    "SECURITY_NATIVE_DREP",
    "SECURITY_NETWORK_DREP",
    "SECURITY_PACKAGE_OPTIONS",
    "SECURITY_PACKAGE_OPTIONS_TYPE",
    "SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION",
    "SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_2",
    "SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_3",
    "SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_4",
    "SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_5",
    "SECURITY_USER_DATA",
    "SEC_APPLICATION_PROTOCOLS",
    "SEC_APPLICATION_PROTOCOL_LIST",
    "SEC_APPLICATION_PROTOCOL_NEGOTIATION_EXT",
    "SEC_APPLICATION_PROTOCOL_NEGOTIATION_STATUS",
    "SEC_CHANNEL_BINDINGS",
    "SEC_DTLS_MTU",
    "SEC_FLAGS",
    "SEC_GET_KEY_FN",
    "SEC_NEGOTIATION_INFO",
    "SEC_PRESHAREDKEY",
    "SEC_PRESHAREDKEY_IDENTITY",
    "SEC_SRTP_MASTER_KEY_IDENTIFIER",
    "SEC_SRTP_PROTECTION_PROFILES",
    "SEC_TOKEN_BINDING",
    "SEC_TRAFFIC_SECRETS",
    "SEC_TRAFFIC_SECRET_TYPE",
    "SEC_WINNT_AUTH_IDENTITY32",
    "SEC_WINNT_AUTH_IDENTITY_ENCRYPT_FOR_SYSTEM",
    "SEC_WINNT_AUTH_IDENTITY_ENCRYPT_SAME_LOGON",
    "SEC_WINNT_AUTH_IDENTITY_ENCRYPT_SAME_PROCESS",
    "SEC_WINNT_AUTH_IDENTITY_EX2",
    "SEC_WINNT_AUTH_IDENTITY_EX32",
    "SEC_WINNT_AUTH_IDENTITY_EXA",
    "SEC_WINNT_AUTH_IDENTITY_EXW",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_ID_PROVIDER",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_NULL_DOMAIN",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_NULL_USER",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_PROCESS_ENCRYPTED",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_RESERVED",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_CREDPROV_DO_NOT_LOAD",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_CREDPROV_DO_NOT_SAVE",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_NO_CHECKBOX",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_SAVE_CRED_BY_CALLER",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_SAVE_CRED_CHECKED",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SSPIPFC_USE_MASK",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SYSTEM_ENCRYPTED",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_SYSTEM_PROTECTED",
    "SEC_WINNT_AUTH_IDENTITY_FLAGS_USER_PROTECTED",
    "SEC_WINNT_AUTH_IDENTITY_INFO",
    "SEC_WINNT_AUTH_IDENTITY_MARSHALLED",
    "SEC_WINNT_AUTH_IDENTITY_ONLY",
    "SEC_WINNT_AUTH_IDENTITY_VERSION",
    "SEC_WINNT_AUTH_IDENTITY_VERSION_2",
    "SEND_GENERIC_TLS_EXTENSION",
    "SESSION_TICKET_INFO_V0",
    "SESSION_TICKET_INFO_VERSION",
    "SET_CONTEXT_ATTRIBUTES_FN_A",
    "SET_CONTEXT_ATTRIBUTES_FN_W",
    "SET_CREDENTIALS_ATTRIBUTES_FN_A",
    "SET_CREDENTIALS_ATTRIBUTES_FN_W",
    "SE_ADT_ACCESS_REASON",
    "SE_ADT_CLAIMS",
    "SE_ADT_OBJECT_ONLY",
    "SE_ADT_OBJECT_TYPE",
    "SE_ADT_PARAMETERS_SELF_RELATIVE",
    "SE_ADT_PARAMETERS_SEND_TO_LSA",
    "SE_ADT_PARAMETER_ARRAY",
    "SE_ADT_PARAMETER_ARRAY_ENTRY",
    "SE_ADT_PARAMETER_ARRAY_EX",
    "SE_ADT_PARAMETER_EXTENSIBLE_AUDIT",
    "SE_ADT_PARAMETER_GENERIC_AUDIT",
    "SE_ADT_PARAMETER_TYPE",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeAccessMask",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeAccessReason",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeClaims",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeDateTime",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeDuration",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeFileSpec",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeGuid",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeHexInt64",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeHexUlong",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonHours",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonId",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonIdAsSid",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonIdEx",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLogonIdNoSid",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeLuid",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeMessage",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeMultiSzString",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeNoLogonId",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeNoUac",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeNone",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeObjectTypes",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypePrivs",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypePtr",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeResourceAttribute",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSD",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSid",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSidList",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSockAddr",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeSockAddrNoPort",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeStagingReason",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeString",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeStringList",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeTime",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeUlong",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeUlongNoConv",
    "SE_ADT_PARAMETER_TYPE_SeAdtParmTypeUserAccountControl",
    "SE_ADT_PARAMETER_WRITE_SYNCHRONOUS",
    "SE_ADT_POLICY_AUDIT_EVENT_TYPE_EX_BEGIN",
    "SE_BATCH_LOGON_NAME",
    "SE_DENY_BATCH_LOGON_NAME",
    "SE_DENY_INTERACTIVE_LOGON_NAME",
    "SE_DENY_NETWORK_LOGON_NAME",
    "SE_DENY_REMOTE_INTERACTIVE_LOGON_NAME",
    "SE_DENY_SERVICE_LOGON_NAME",
    "SE_INTERACTIVE_LOGON_NAME",
    "SE_MAX_AUDIT_PARAMETERS",
    "SE_MAX_GENERIC_AUDIT_PARAMETERS",
    "SE_NETWORK_LOGON_NAME",
    "SE_REMOTE_INTERACTIVE_LOGON_NAME",
    "SE_SERVICE_LOGON_NAME",
    "SLAcquireGenuineTicket",
    "SLActivateProduct",
    "SLClose",
    "SLConsumeRight",
    "SLDATATYPE",
    "SLDepositOfflineConfirmationId",
    "SLDepositOfflineConfirmationIdEx",
    "SLFireEvent",
    "SLGenerateOfflineInstallationId",
    "SLGenerateOfflineInstallationIdEx",
    "SLGetApplicationInformation",
    "SLGetGenuineInformation",
    "SLGetInstalledProductKeyIds",
    "SLGetLicense",
    "SLGetLicenseFileId",
    "SLGetLicenseInformation",
    "SLGetLicensingStatusInformation",
    "SLGetPKeyId",
    "SLGetPKeyInformation",
    "SLGetPolicyInformation",
    "SLGetPolicyInformationDWORD",
    "SLGetProductSkuInformation",
    "SLGetReferralInformation",
    "SLGetSLIDList",
    "SLGetServerStatus",
    "SLGetServiceInformation",
    "SLGetWindowsInformation",
    "SLGetWindowsInformationDWORD",
    "SLIDTYPE",
    "SLInstallLicense",
    "SLInstallProofOfPurchase",
    "SLIsGenuineLocal",
    "SLLICENSINGSTATUS",
    "SLOpen",
    "SLQueryLicenseValueFromApp",
    "SLREFERRALTYPE",
    "SLRegisterEvent",
    "SLSetCurrentProductKey",
    "SLSetGenuineInformation",
    "SLUninstallLicense",
    "SLUninstallProofOfPurchase",
    "SLUnregisterEvent",
    "SL_ACTIVATION_INFO_HEADER",
    "SL_ACTIVATION_TYPE",
    "SL_ACTIVATION_TYPE_ACTIVE_DIRECTORY",
    "SL_ACTIVATION_TYPE_DEFAULT",
    "SL_AD_ACTIVATION_INFO",
    "SL_CLIENTAPI_ZONE",
    "SL_DATA_BINARY",
    "SL_DATA_DWORD",
    "SL_DATA_MULTI_SZ",
    "SL_DATA_NONE",
    "SL_DATA_SUM",
    "SL_DATA_SZ",
    "SL_DEFAULT_MIGRATION_ENCRYPTOR_URI",
    "SL_EVENT_LICENSING_STATE_CHANGED",
    "SL_EVENT_POLICY_CHANGED",
    "SL_EVENT_USER_NOTIFICATION",
    "SL_E_ACTIVATION_IN_PROGRESS",
    "SL_E_APPLICATION_POLICIES_MISSING",
    "SL_E_APPLICATION_POLICIES_NOT_LOADED",
    "SL_E_AUTHN_CANT_VERIFY",
    "SL_E_AUTHN_CHALLENGE_NOT_SET",
    "SL_E_AUTHN_MISMATCHED_KEY",
    "SL_E_AUTHN_WRONG_VERSION",
    "SL_E_BASE_SKU_NOT_AVAILABLE",
    "SL_E_BIOS_KEY",
    "SL_E_BLOCKED_PRODUCT_KEY",
    "SL_E_CHPA_ACTCONFIG_ID_NOT_FOUND",
    "SL_E_CHPA_BINDING_MAPPING_NOT_FOUND",
    "SL_E_CHPA_BINDING_NOT_FOUND",
    "SL_E_CHPA_BUSINESS_RULE_INPUT_NOT_FOUND",
    "SL_E_CHPA_DATABASE_ERROR",
    "SL_E_CHPA_DIGITALMARKER_BINDING_NOT_CONFIGURED",
    "SL_E_CHPA_DIGITALMARKER_INVALID_BINDING",
    "SL_E_CHPA_DMAK_EXTENSION_LIMIT_EXCEEDED",
    "SL_E_CHPA_DMAK_LIMIT_EXCEEDED",
    "SL_E_CHPA_DYNAMICALLY_BLOCKED_PRODUCT_KEY",
    "SL_E_CHPA_FAILED_TO_DELETE_PRODUCTKEY_BINDING",
    "SL_E_CHPA_FAILED_TO_DELETE_PRODUCT_KEY_PROPERTY",
    "SL_E_CHPA_FAILED_TO_INSERT_PRODUCTKEY_BINDING",
    "SL_E_CHPA_FAILED_TO_INSERT_PRODUCT_KEY_PROPERTY",
    "SL_E_CHPA_FAILED_TO_INSERT_PRODUCT_KEY_RECORD",
    "SL_E_CHPA_FAILED_TO_PROCESS_PRODUCT_KEY_BINDINGS_XML",
    "SL_E_CHPA_FAILED_TO_UPDATE_PRODUCTKEY_BINDING",
    "SL_E_CHPA_FAILED_TO_UPDATE_PRODUCT_KEY_PROPERTY",
    "SL_E_CHPA_FAILED_TO_UPDATE_PRODUCT_KEY_RECORD",
    "SL_E_CHPA_GENERAL_ERROR",
    "SL_E_CHPA_INVALID_ACTCONFIG_ID",
    "SL_E_CHPA_INVALID_ARGUMENT",
    "SL_E_CHPA_INVALID_BINDING",
    "SL_E_CHPA_INVALID_BINDING_URI",
    "SL_E_CHPA_INVALID_PRODUCT_DATA",
    "SL_E_CHPA_INVALID_PRODUCT_DATA_ID",
    "SL_E_CHPA_INVALID_PRODUCT_KEY",
    "SL_E_CHPA_INVALID_PRODUCT_KEY_CHAR",
    "SL_E_CHPA_INVALID_PRODUCT_KEY_FORMAT",
    "SL_E_CHPA_INVALID_PRODUCT_KEY_LENGTH",
    "SL_E_CHPA_MAXIMUM_UNLOCK_EXCEEDED",
    "SL_E_CHPA_MSCH_RESPONSE_NOT_AVAILABLE_VGA",
    "SL_E_CHPA_NETWORK_ERROR",
    "SL_E_CHPA_NO_RULES_TO_ACTIVATE",
    "SL_E_CHPA_NULL_VALUE_FOR_PROPERTY_NAME_OR_ID",
    "SL_E_CHPA_OEM_SLP_COA0",
    "SL_E_CHPA_OVERRIDE_REQUEST_NOT_FOUND",
    "SL_E_CHPA_PRODUCT_KEY_BEING_USED",
    "SL_E_CHPA_PRODUCT_KEY_BLOCKED",
    "SL_E_CHPA_PRODUCT_KEY_BLOCKED_IPLOCATION",
    "SL_E_CHPA_PRODUCT_KEY_OUT_OF_RANGE",
    "SL_E_CHPA_REISSUANCE_LIMIT_NOT_FOUND",
    "SL_E_CHPA_RESPONSE_NOT_AVAILABLE",
    "SL_E_CHPA_SYSTEM_ERROR",
    "SL_E_CHPA_TIMEBASED_ACTIVATION_AFTER_END_DATE",
    "SL_E_CHPA_TIMEBASED_ACTIVATION_BEFORE_START_DATE",
    "SL_E_CHPA_TIMEBASED_ACTIVATION_NOT_AVAILABLE",
    "SL_E_CHPA_TIMEBASED_PRODUCT_KEY_NOT_CONFIGURED",
    "SL_E_CHPA_UNKNOWN_PRODUCT_KEY_TYPE",
    "SL_E_CHPA_UNKNOWN_PROPERTY_ID",
    "SL_E_CHPA_UNKNOWN_PROPERTY_NAME",
    "SL_E_CHPA_UNSUPPORTED_PRODUCT_KEY",
    "SL_E_CIDIID_INVALID_CHECK_DIGITS",
    "SL_E_CIDIID_INVALID_DATA",
    "SL_E_CIDIID_INVALID_DATA_LENGTH",
    "SL_E_CIDIID_INVALID_VERSION",
    "SL_E_CIDIID_MISMATCHED",
    "SL_E_CIDIID_MISMATCHED_PKEY",
    "SL_E_CIDIID_NOT_BOUND",
    "SL_E_CIDIID_NOT_DEPOSITED",
    "SL_E_CIDIID_VERSION_NOT_SUPPORTED",
    "SL_E_DATATYPE_MISMATCHED",
    "SL_E_DECRYPTION_LICENSES_NOT_AVAILABLE",
    "SL_E_DEPENDENT_PROPERTY_NOT_SET",
    "SL_E_DOWNLEVEL_SETUP_KEY",
    "SL_E_DUPLICATE_POLICY",
    "SL_E_EDITION_MISMATCHED",
    "SL_E_ENGINE_DETECTED_EXPLOIT",
    "SL_E_EUL_CONSUMPTION_FAILED",
    "SL_E_EUL_NOT_AVAILABLE",
    "SL_E_EVALUATION_FAILED",
    "SL_E_EVENT_ALREADY_REGISTERED",
    "SL_E_EVENT_NOT_REGISTERED",
    "SL_E_EXTERNAL_SIGNATURE_NOT_FOUND",
    "SL_E_GRACE_TIME_EXPIRED",
    "SL_E_HEALTH_CHECK_FAILED_MUI_FILES",
    "SL_E_HEALTH_CHECK_FAILED_NEUTRAL_FILES",
    "SL_E_HWID_CHANGED",
    "SL_E_HWID_ERROR",
    "SL_E_IA_ID_MISMATCH",
    "SL_E_IA_INVALID_VIRTUALIZATION_PLATFORM",
    "SL_E_IA_MACHINE_NOT_BOUND",
    "SL_E_IA_PARENT_PARTITION_NOT_ACTIVATED",
    "SL_E_IA_THROTTLE_LIMIT_EXCEEDED",
    "SL_E_INTERNAL_ERROR",
    "SL_E_INVALID_AD_DATA",
    "SL_E_INVALID_BINDING_BLOB",
    "SL_E_INVALID_CLIENT_TOKEN",
    "SL_E_INVALID_CONTEXT",
    "SL_E_INVALID_CONTEXT_DATA",
    "SL_E_INVALID_EVENT_ID",
    "SL_E_INVALID_FILE_HASH",
    "SL_E_INVALID_GUID",
    "SL_E_INVALID_HASH",
    "SL_E_INVALID_LICENSE",
    "SL_E_INVALID_LICENSE_STATE",
    "SL_E_INVALID_LICENSE_STATE_BREACH_GRACE",
    "SL_E_INVALID_LICENSE_STATE_BREACH_GRACE_EXPIRED",
    "SL_E_INVALID_OEM_OR_VOLUME_BINDING_DATA",
    "SL_E_INVALID_OFFLINE_BLOB",
    "SL_E_INVALID_OSVERSION_TEMPLATEID",
    "SL_E_INVALID_OS_FOR_PRODUCT_KEY",
    "SL_E_INVALID_PACKAGE",
    "SL_E_INVALID_PACKAGE_VERSION",
    "SL_E_INVALID_PKEY",
    "SL_E_INVALID_PRODUCT_KEY",
    "SL_E_INVALID_PRODUCT_KEY_TYPE",
    "SL_E_INVALID_RSDP_COUNT",
    "SL_E_INVALID_RULESET_RULE",
    "SL_E_INVALID_RUNNING_MODE",
    "SL_E_INVALID_TEMPLATE_ID",
    "SL_E_INVALID_TOKEN_DATA",
    "SL_E_INVALID_USE_OF_ADD_ON_PKEY",
    "SL_E_INVALID_XML_BLOB",
    "SL_E_IP_LOCATION_FALIED",
    "SL_E_ISSUANCE_LICENSE_NOT_INSTALLED",
    "SL_E_LICENSE_AUTHORIZATION_FAILED",
    "SL_E_LICENSE_DECRYPTION_FAILED",
    "SL_E_LICENSE_FILE_NOT_INSTALLED",
    "SL_E_LICENSE_INVALID_ADDON_INFO",
    "SL_E_LICENSE_MANAGEMENT_DATA_DUPLICATED",
    "SL_E_LICENSE_MANAGEMENT_DATA_NOT_FOUND",
    "SL_E_LICENSE_NOT_BOUND",
    "SL_E_LICENSE_SERVER_URL_NOT_FOUND",
    "SL_E_LICENSE_SIGNATURE_VERIFICATION_FAILED",
    "SL_E_LUA_ACCESSDENIED",
    "SL_E_MISMATCHED_APPID",
    "SL_E_MISMATCHED_KEY_TYPES",
    "SL_E_MISMATCHED_PID",
    "SL_E_MISMATCHED_PKEY_RANGE",
    "SL_E_MISMATCHED_PRODUCT_SKU",
    "SL_E_MISMATCHED_SECURITY_PROCESSOR",
    "SL_E_MISSING_OVERRIDE_ONLY_ATTRIBUTE",
    "SL_E_NONGENUINE_GRACE_TIME_EXPIRED",
    "SL_E_NONGENUINE_GRACE_TIME_EXPIRED_2",
    "SL_E_NON_GENUINE_STATUS_LAST",
    "SL_E_NOTIFICATION_BREACH_DETECTED",
    "SL_E_NOTIFICATION_GRACE_EXPIRED",
    "SL_E_NOTIFICATION_OTHER_REASONS",
    "SL_E_NOT_ACTIVATED",
    "SL_E_NOT_EVALUATED",
    "SL_E_NOT_GENUINE",
    "SL_E_NOT_SUPPORTED",
    "SL_E_NO_PID_CONFIG_DATA",
    "SL_E_NO_PRODUCT_KEY_FOUND",
    "SL_E_OEM_KEY_EDITION_MISMATCH",
    "SL_E_OFFLINE_GENUINE_BLOB_NOT_FOUND",
    "SL_E_OFFLINE_GENUINE_BLOB_REVOKED",
    "SL_E_OFFLINE_VALIDATION_BLOB_PARAM_NOT_FOUND",
    "SL_E_OPERATION_NOT_ALLOWED",
    "SL_E_OUT_OF_TOLERANCE",
    "SL_E_PKEY_INTERNAL_ERROR",
    "SL_E_PKEY_INVALID_ALGORITHM",
    "SL_E_PKEY_INVALID_CONFIG",
    "SL_E_PKEY_INVALID_KEYCHANGE1",
    "SL_E_PKEY_INVALID_KEYCHANGE2",
    "SL_E_PKEY_INVALID_KEYCHANGE3",
    "SL_E_PKEY_INVALID_UNIQUEID",
    "SL_E_PKEY_INVALID_UPGRADE",
    "SL_E_PKEY_NOT_INSTALLED",
    "SL_E_PLUGIN_INVALID_MANIFEST",
    "SL_E_PLUGIN_NOT_REGISTERED",
    "SL_E_POLICY_CACHE_INVALID",
    "SL_E_POLICY_OTHERINFO_MISMATCH",
    "SL_E_PRODUCT_KEY_INSTALLATION_NOT_ALLOWED",
    "SL_E_PRODUCT_SKU_NOT_INSTALLED",
    "SL_E_PRODUCT_UNIQUENESS_GROUP_ID_INVALID",
    "SL_E_PROXY_KEY_NOT_FOUND",
    "SL_E_PROXY_POLICY_NOT_UPDATED",
    "SL_E_PUBLISHING_LICENSE_NOT_INSTALLED",
    "SL_E_RAC_NOT_AVAILABLE",
    "SL_E_RIGHT_NOT_CONSUMED",
    "SL_E_RIGHT_NOT_GRANTED",
    "SL_E_SECURE_STORE_ID_MISMATCH",
    "SL_E_SERVICE_RUNNING",
    "SL_E_SERVICE_STOPPING",
    "SL_E_SFS_BAD_TOKEN_EXT",
    "SL_E_SFS_BAD_TOKEN_NAME",
    "SL_E_SFS_DUPLICATE_TOKEN_NAME",
    "SL_E_SFS_FILE_READ_ERROR",
    "SL_E_SFS_FILE_WRITE_ERROR",
    "SL_E_SFS_INVALID_FD_TABLE",
    "SL_E_SFS_INVALID_FILE_POSITION",
    "SL_E_SFS_INVALID_FS_HEADER",
    "SL_E_SFS_INVALID_FS_VERSION",
    "SL_E_SFS_INVALID_SYNC",
    "SL_E_SFS_INVALID_TOKEN_DATA_HASH",
    "SL_E_SFS_INVALID_TOKEN_DESCRIPTOR",
    "SL_E_SFS_NO_ACTIVE_TRANSACTION",
    "SL_E_SFS_TOKEN_SIZE_MISMATCH",
    "SL_E_SLP_BAD_FORMAT",
    "SL_E_SLP_INVALID_MARKER_VERSION",
    "SL_E_SLP_MISSING_ACPI_SLIC",
    "SL_E_SLP_MISSING_SLP_MARKER",
    "SL_E_SLP_NOT_SIGNED",
    "SL_E_SLP_OEM_CERT_MISSING",
    "SL_E_SOFTMOD_EXPLOIT_DETECTED",
    "SL_E_SPC_NOT_AVAILABLE",
    "SL_E_SRV_AUTHORIZATION_FAILED",
    "SL_E_SRV_BUSINESS_TOKEN_ENTRY_NOT_FOUND",
    "SL_E_SRV_CLIENT_CLOCK_OUT_OF_SYNC",
    "SL_E_SRV_GENERAL_ERROR",
    "SL_E_SRV_INVALID_BINDING",
    "SL_E_SRV_INVALID_LICENSE_STRUCTURE",
    "SL_E_SRV_INVALID_PAYLOAD",
    "SL_E_SRV_INVALID_PRODUCT_KEY_LICENSE",
    "SL_E_SRV_INVALID_PUBLISH_LICENSE",
    "SL_E_SRV_INVALID_RIGHTS_ACCOUNT_LICENSE",
    "SL_E_SRV_INVALID_SECURITY_PROCESSOR_LICENSE",
    "SL_E_SRV_SERVER_PONG",
    "SL_E_STORE_UPGRADE_TOKEN_NOT_AUTHORIZED",
    "SL_E_STORE_UPGRADE_TOKEN_NOT_PRS_SIGNED",
    "SL_E_STORE_UPGRADE_TOKEN_REQUIRED",
    "SL_E_STORE_UPGRADE_TOKEN_WRONG_EDITION",
    "SL_E_STORE_UPGRADE_TOKEN_WRONG_PID",
    "SL_E_STORE_UPGRADE_TOKEN_WRONG_VERSION",
    "SL_E_TAMPER_DETECTED",
    "SL_E_TAMPER_RECOVERY_REQUIRES_ACTIVATION",
    "SL_E_TKA_CERT_CNG_NOT_AVAILABLE",
    "SL_E_TKA_CERT_NOT_FOUND",
    "SL_E_TKA_CHALLENGE_EXPIRED",
    "SL_E_TKA_CHALLENGE_MISMATCH",
    "SL_E_TKA_CRITERIA_MISMATCH",
    "SL_E_TKA_FAILED_GRANT_PARSING",
    "SL_E_TKA_GRANT_NOT_FOUND",
    "SL_E_TKA_INVALID_BLOB",
    "SL_E_TKA_INVALID_CERTIFICATE",
    "SL_E_TKA_INVALID_CERT_CHAIN",
    "SL_E_TKA_INVALID_SKU_ID",
    "SL_E_TKA_INVALID_SMARTCARD",
    "SL_E_TKA_INVALID_THUMBPRINT",
    "SL_E_TKA_SILENT_ACTIVATION_FAILURE",
    "SL_E_TKA_SOFT_CERT_DISALLOWED",
    "SL_E_TKA_SOFT_CERT_INVALID",
    "SL_E_TKA_TAMPERED_CERT_CHAIN",
    "SL_E_TKA_THUMBPRINT_CERT_NOT_FOUND",
    "SL_E_TKA_TPID_MISMATCH",
    "SL_E_TOKEN_STORE_INVALID_STATE",
    "SL_E_TOKSTO_ALREADY_INITIALIZED",
    "SL_E_TOKSTO_CANT_ACQUIRE_MUTEX",
    "SL_E_TOKSTO_CANT_CREATE_FILE",
    "SL_E_TOKSTO_CANT_CREATE_MUTEX",
    "SL_E_TOKSTO_CANT_PARSE_PROPERTIES",
    "SL_E_TOKSTO_CANT_READ_FILE",
    "SL_E_TOKSTO_CANT_WRITE_TO_FILE",
    "SL_E_TOKSTO_INVALID_FILE",
    "SL_E_TOKSTO_NOT_INITIALIZED",
    "SL_E_TOKSTO_NO_ID_SET",
    "SL_E_TOKSTO_NO_PROPERTIES",
    "SL_E_TOKSTO_NO_TOKEN_DATA",
    "SL_E_TOKSTO_PROPERTY_NOT_FOUND",
    "SL_E_TOKSTO_TOKEN_NOT_FOUND",
    "SL_E_USE_LICENSE_NOT_INSTALLED",
    "SL_E_VALIDATION_BLOB_PARAM_NOT_FOUND",
    "SL_E_VALIDATION_BLOCKED_PRODUCT_KEY",
    "SL_E_VALIDATION_INVALID_PRODUCT_KEY",
    "SL_E_VALIDITY_PERIOD_EXPIRED",
    "SL_E_VALIDITY_TIME_EXPIRED",
    "SL_E_VALUE_NOT_FOUND",
    "SL_E_VL_AD_AO_NAME_TOO_LONG",
    "SL_E_VL_AD_AO_NOT_FOUND",
    "SL_E_VL_AD_SCHEMA_VERSION_NOT_SUPPORTED",
    "SL_E_VL_BINDING_SERVICE_NOT_ENABLED",
    "SL_E_VL_BINDING_SERVICE_UNAVAILABLE",
    "SL_E_VL_INFO_PRODUCT_USER_RIGHT",
    "SL_E_VL_INVALID_TIMESTAMP",
    "SL_E_VL_KEY_MANAGEMENT_SERVICE_ID_MISMATCH",
    "SL_E_VL_KEY_MANAGEMENT_SERVICE_NOT_ACTIVATED",
    "SL_E_VL_KEY_MANAGEMENT_SERVICE_VM_NOT_SUPPORTED",
    "SL_E_VL_MACHINE_NOT_BOUND",
    "SL_E_VL_NOT_ENOUGH_COUNT",
    "SL_E_VL_NOT_WINDOWS_SLP",
    "SL_E_WINDOWS_INVALID_LICENSE_STATE",
    "SL_E_WINDOWS_VERSION_MISMATCH",
    "SL_GENUINE_STATE",
    "SL_GEN_STATE_INVALID_LICENSE",
    "SL_GEN_STATE_IS_GENUINE",
    "SL_GEN_STATE_LAST",
    "SL_GEN_STATE_OFFLINE",
    "SL_GEN_STATE_TAMPERED",
    "SL_ID_ALL_LICENSES",
    "SL_ID_ALL_LICENSE_FILES",
    "SL_ID_APPLICATION",
    "SL_ID_LAST",
    "SL_ID_LICENSE",
    "SL_ID_LICENSE_FILE",
    "SL_ID_PKEY",
    "SL_ID_PRODUCT_SKU",
    "SL_ID_STORE_TOKEN",
    "SL_INFO_KEY_ACTIVE_PLUGINS",
    "SL_INFO_KEY_AUTHOR",
    "SL_INFO_KEY_BIOS_OA2_MINOR_VERSION",
    "SL_INFO_KEY_BIOS_PKEY",
    "SL_INFO_KEY_BIOS_PKEY_DESCRIPTION",
    "SL_INFO_KEY_BIOS_PKEY_PKPN",
    "SL_INFO_KEY_BIOS_SLIC_STATE",
    "SL_INFO_KEY_CHANNEL",
    "SL_INFO_KEY_DESCRIPTION",
    "SL_INFO_KEY_DIGITAL_PID",
    "SL_INFO_KEY_DIGITAL_PID2",
    "SL_INFO_KEY_IS_KMS",
    "SL_INFO_KEY_IS_PRS",
    "SL_INFO_KEY_KMS_CURRENT_COUNT",
    "SL_INFO_KEY_KMS_FAILED_REQUESTS",
    "SL_INFO_KEY_KMS_LICENSED_REQUESTS",
    "SL_INFO_KEY_KMS_NON_GENUINE_GRACE_REQUESTS",
    "SL_INFO_KEY_KMS_NOTIFICATION_REQUESTS",
    "SL_INFO_KEY_KMS_OOB_GRACE_REQUESTS",
    "SL_INFO_KEY_KMS_OOT_GRACE_REQUESTS",
    "SL_INFO_KEY_KMS_REQUIRED_CLIENT_COUNT",
    "SL_INFO_KEY_KMS_TOTAL_REQUESTS",
    "SL_INFO_KEY_KMS_UNLICENSED_REQUESTS",
    "SL_INFO_KEY_LICENSE_TYPE",
    "SL_INFO_KEY_LICENSOR_URL",
    "SL_INFO_KEY_NAME",
    "SL_INFO_KEY_PARTIAL_PRODUCT_KEY",
    "SL_INFO_KEY_PRODUCT_KEY_ACTIVATION_URL",
    "SL_INFO_KEY_PRODUCT_SKU_ID",
    "SL_INFO_KEY_RIGHT_ACCOUNT_ACTIVATION_URL",
    "SL_INFO_KEY_SECURE_PROCESSOR_ACTIVATION_URL",
    "SL_INFO_KEY_SECURE_STORE_ID",
    "SL_INFO_KEY_SYSTEM_STATE",
    "SL_INFO_KEY_USE_LICENSE_ACTIVATION_URL",
    "SL_INFO_KEY_VERSION",
    "SL_INTERNAL_ZONE",
    "SL_I_NONGENUINE_GRACE_PERIOD",
    "SL_I_NONGENUINE_GRACE_PERIOD_2",
    "SL_I_OOB_GRACE_PERIOD",
    "SL_I_OOT_GRACE_PERIOD",
    "SL_I_PERPETUAL_OOB_GRACE_PERIOD",
    "SL_I_STORE_BASED_ACTIVATION",
    "SL_I_TIMEBASED_EXTENDED_GRACE_PERIOD",
    "SL_I_TIMEBASED_VALIDITY_PERIOD",
    "SL_LICENSING_STATUS",
    "SL_LICENSING_STATUS_IN_GRACE_PERIOD",
    "SL_LICENSING_STATUS_LAST",
    "SL_LICENSING_STATUS_LICENSED",
    "SL_LICENSING_STATUS_NOTIFICATION",
    "SL_LICENSING_STATUS_UNLICENSED",
    "SL_MDOLLAR_ZONE",
    "SL_MSCH_ZONE",
    "SL_NONGENUINE_UI_OPTIONS",
    "SL_PKEY_DETECT",
    "SL_PKEY_MS2005",
    "SL_PKEY_MS2009",
    "SL_POLICY_EVALUATION_MODE_ENABLED",
    "SL_PROP_ACTIVATION_VALIDATION_IN_PROGRESS",
    "SL_PROP_BRT_COMMIT",
    "SL_PROP_BRT_DATA",
    "SL_PROP_GENUINE_RESULT",
    "SL_PROP_GET_GENUINE_AUTHZ",
    "SL_PROP_GET_GENUINE_SERVER_AUTHZ",
    "SL_PROP_LAST_ACT_ATTEMPT_HRESULT",
    "SL_PROP_LAST_ACT_ATTEMPT_SERVER_FLAGS",
    "SL_PROP_LAST_ACT_ATTEMPT_TIME",
    "SL_PROP_NONGENUINE_GRACE_FLAG",
    "SL_REARM_REBOOT_REQUIRED",
    "SL_REFERRALTYPE_APPID",
    "SL_REFERRALTYPE_BEST_MATCH",
    "SL_REFERRALTYPE_OVERRIDE_APPID",
    "SL_REFERRALTYPE_OVERRIDE_SKUID",
    "SL_REFERRALTYPE_SKUID",
    "SL_REMAPPING_MDOLLAR_CIDIID_INVALID_CHECK_DIGITS",
    "SL_REMAPPING_MDOLLAR_CIDIID_INVALID_DATA",
    "SL_REMAPPING_MDOLLAR_CIDIID_INVALID_DATA_LENGTH",
    "SL_REMAPPING_MDOLLAR_CIDIID_INVALID_VERSION",
    "SL_REMAPPING_MDOLLAR_DIGITALMARKER_BINDING_NOT_CONFIGURED",
    "SL_REMAPPING_MDOLLAR_DIGITALMARKER_INVALID_BINDING",
    "SL_REMAPPING_MDOLLAR_DMAK_EXTENSION_LIMIT_EXCEEDED",
    "SL_REMAPPING_MDOLLAR_DMAK_LIMIT_EXCEEDED",
    "SL_REMAPPING_MDOLLAR_DMAK_OVERRIDE_LIMIT_REACHED",
    "SL_REMAPPING_MDOLLAR_FREE_OFFER_EXPIRED",
    "SL_REMAPPING_MDOLLAR_INVALID_ACTCONFIG_ID",
    "SL_REMAPPING_MDOLLAR_INVALID_ARGUMENT",
    "SL_REMAPPING_MDOLLAR_INVALID_BINDING",
    "SL_REMAPPING_MDOLLAR_INVALID_BINDING_URI",
    "SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_DATA",
    "SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_DATA_ID",
    "SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_KEY",
    "SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_KEY_FORMAT",
    "SL_REMAPPING_MDOLLAR_INVALID_PRODUCT_KEY_LENGTH",
    "SL_REMAPPING_MDOLLAR_MAXIMUM_UNLOCK_EXCEEDED",
    "SL_REMAPPING_MDOLLAR_NO_RULES_TO_ACTIVATE",
    "SL_REMAPPING_MDOLLAR_OEM_SLP_COA0",
    "SL_REMAPPING_MDOLLAR_OSR_DEVICE_BLOCKED",
    "SL_REMAPPING_MDOLLAR_OSR_DEVICE_THROTTLED",
    "SL_REMAPPING_MDOLLAR_OSR_DONOR_HWID_NO_ENTITLEMENT",
    "SL_REMAPPING_MDOLLAR_OSR_GENERIC_ERROR",
    "SL_REMAPPING_MDOLLAR_OSR_GP_DISABLED",
    "SL_REMAPPING_MDOLLAR_OSR_HARDWARE_BLOCKED",
    "SL_REMAPPING_MDOLLAR_OSR_LICENSE_BLOCKED",
    "SL_REMAPPING_MDOLLAR_OSR_LICENSE_THROTTLED",
    "SL_REMAPPING_MDOLLAR_OSR_NOT_ADMIN",
    "SL_REMAPPING_MDOLLAR_OSR_NO_ASSOCIATION",
    "SL_REMAPPING_MDOLLAR_OSR_USER_BLOCKED",
    "SL_REMAPPING_MDOLLAR_OSR_USER_THROTTLED",
    "SL_REMAPPING_MDOLLAR_PRODUCT_KEY_BLOCKED",
    "SL_REMAPPING_MDOLLAR_PRODUCT_KEY_BLOCKED_IPLOCATION",
    "SL_REMAPPING_MDOLLAR_PRODUCT_KEY_OUT_OF_RANGE",
    "SL_REMAPPING_MDOLLAR_ROT_OVERRIDE_LIMIT_REACHED",
    "SL_REMAPPING_MDOLLAR_TIMEBASED_ACTIVATION_AFTER_END_DATE",
    "SL_REMAPPING_MDOLLAR_TIMEBASED_ACTIVATION_BEFORE_START_DATE",
    "SL_REMAPPING_MDOLLAR_TIMEBASED_ACTIVATION_NOT_AVAILABLE",
    "SL_REMAPPING_MDOLLAR_TIMEBASED_PRODUCT_KEY_NOT_CONFIGURED",
    "SL_REMAPPING_MDOLLAR_UNSUPPORTED_PRODUCT_KEY",
    "SL_REMAPPING_SP_PUB_API_BAD_GET_INFO_QUERY",
    "SL_REMAPPING_SP_PUB_API_HANDLE_NOT_COMMITED",
    "SL_REMAPPING_SP_PUB_API_INVALID_ALGORITHM_TYPE",
    "SL_REMAPPING_SP_PUB_API_INVALID_HANDLE",
    "SL_REMAPPING_SP_PUB_API_INVALID_KEY_LENGTH",
    "SL_REMAPPING_SP_PUB_API_INVALID_LICENSE",
    "SL_REMAPPING_SP_PUB_API_NO_AES_PROVIDER",
    "SL_REMAPPING_SP_PUB_API_TOO_MANY_LOADED_ENVIRONMENTS",
    "SL_REMAPPING_SP_PUB_CRYPTO_HASH_FINALIZED",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_BLOCK",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_BLOCKLENGTH",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_CIPHER",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_CIPHERMODE",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_FORMAT",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_KEYLENGTH",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_PADDING",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_SIGNATURE",
    "SL_REMAPPING_SP_PUB_CRYPTO_INVALID_SIGNATURELENGTH",
    "SL_REMAPPING_SP_PUB_CRYPTO_KEY_NOT_AVAILABLE",
    "SL_REMAPPING_SP_PUB_CRYPTO_KEY_NOT_FOUND",
    "SL_REMAPPING_SP_PUB_CRYPTO_NOT_BLOCK_ALIGNED",
    "SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_ATTRIBUTEID",
    "SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_HASHID",
    "SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_KEYID",
    "SL_REMAPPING_SP_PUB_CRYPTO_UNKNOWN_PROVIDERID",
    "SL_REMAPPING_SP_PUB_GENERAL_NOT_INITIALIZED",
    "SL_REMAPPING_SP_PUB_KM_CACHE_IDENTICAL",
    "SL_REMAPPING_SP_PUB_KM_CACHE_POLICY_CHANGED",
    "SL_REMAPPING_SP_PUB_KM_CACHE_TAMPER",
    "SL_REMAPPING_SP_PUB_KM_CACHE_TAMPER_RESTORE_FAILED",
    "SL_REMAPPING_SP_PUB_PROXY_SOFT_TAMPER",
    "SL_REMAPPING_SP_PUB_TAMPER_MODULE_AUTHENTICATION",
    "SL_REMAPPING_SP_PUB_TAMPER_SECURITY_PROCESSOR_PATCHED",
    "SL_REMAPPING_SP_PUB_TIMER_ALREADY_EXISTS",
    "SL_REMAPPING_SP_PUB_TIMER_EXPIRED",
    "SL_REMAPPING_SP_PUB_TIMER_NAME_SIZE_TOO_BIG",
    "SL_REMAPPING_SP_PUB_TIMER_NOT_FOUND",
    "SL_REMAPPING_SP_PUB_TIMER_READ_ONLY",
    "SL_REMAPPING_SP_PUB_TRUSTED_TIME_OK",
    "SL_REMAPPING_SP_PUB_TS_ACCESS_DENIED",
    "SL_REMAPPING_SP_PUB_TS_ATTRIBUTE_NOT_FOUND",
    "SL_REMAPPING_SP_PUB_TS_ATTRIBUTE_READ_ONLY",
    "SL_REMAPPING_SP_PUB_TS_DATA_SIZE_TOO_BIG",
    "SL_REMAPPING_SP_PUB_TS_ENTRY_KEY_ALREADY_EXISTS",
    "SL_REMAPPING_SP_PUB_TS_ENTRY_KEY_NOT_FOUND",
    "SL_REMAPPING_SP_PUB_TS_ENTRY_KEY_SIZE_TOO_BIG",
    "SL_REMAPPING_SP_PUB_TS_ENTRY_READ_ONLY",
    "SL_REMAPPING_SP_PUB_TS_FULL",
    "SL_REMAPPING_SP_PUB_TS_INVALID_HW_BINDING",
    "SL_REMAPPING_SP_PUB_TS_MAX_REARM_REACHED",
    "SL_REMAPPING_SP_PUB_TS_NAMESPACE_IN_USE",
    "SL_REMAPPING_SP_PUB_TS_NAMESPACE_NOT_FOUND",
    "SL_REMAPPING_SP_PUB_TS_REARMED",
    "SL_REMAPPING_SP_PUB_TS_RECREATED",
    "SL_REMAPPING_SP_PUB_TS_TAMPERED",
    "SL_REMAPPING_SP_PUB_TS_TAMPERED_BREADCRUMB_GENERATION",
    "SL_REMAPPING_SP_PUB_TS_TAMPERED_BREADCRUMB_LOAD_INVALID",
    "SL_REMAPPING_SP_PUB_TS_TAMPERED_DATA_BREADCRUMB_MISMATCH",
    "SL_REMAPPING_SP_PUB_TS_TAMPERED_DATA_VERSION_MISMATCH",
    "SL_REMAPPING_SP_PUB_TS_TAMPERED_INVALID_DATA",
    "SL_REMAPPING_SP_PUB_TS_TAMPERED_NO_DATA",
    "SL_REMAPPING_SP_STATUS_ALREADY_EXISTS",
    "SL_REMAPPING_SP_STATUS_DEBUGGER_DETECTED",
    "SL_REMAPPING_SP_STATUS_GENERIC_FAILURE",
    "SL_REMAPPING_SP_STATUS_INSUFFICIENT_BUFFER",
    "SL_REMAPPING_SP_STATUS_INVALIDARG",
    "SL_REMAPPING_SP_STATUS_INVALIDDATA",
    "SL_REMAPPING_SP_STATUS_INVALID_SPAPI_CALL",
    "SL_REMAPPING_SP_STATUS_INVALID_SPAPI_VERSION",
    "SL_REMAPPING_SP_STATUS_NO_MORE_DATA",
    "SL_REMAPPING_SP_STATUS_PUSHKEY_CONFLICT",
    "SL_REMAPPING_SP_STATUS_SYSTEM_TIME_SKEWED",
    "SL_SERVER_ZONE",
    "SL_SYSTEM_POLICY_INFORMATION",
    "SL_SYSTEM_STATE_REBOOT_POLICY_FOUND",
    "SL_SYSTEM_STATE_TAMPERED",
    "SPP_MIGRATION_GATHER_ACTIVATED_WINDOWS_STATE",
    "SPP_MIGRATION_GATHER_ALL",
    "SPP_MIGRATION_GATHER_MIGRATABLE_APPS",
    "SP_ACCEPT_CREDENTIALS_NAME",
    "SP_PROT_ALL",
    "SP_PROT_DTLS1_0_CLIENT",
    "SP_PROT_DTLS1_0_SERVER",
    "SP_PROT_DTLS1_2_CLIENT",
    "SP_PROT_DTLS1_2_SERVER",
    "SP_PROT_DTLS_CLIENT",
    "SP_PROT_DTLS_SERVER",
    "SP_PROT_NONE",
    "SP_PROT_PCT1_CLIENT",
    "SP_PROT_PCT1_SERVER",
    "SP_PROT_SSL2_CLIENT",
    "SP_PROT_SSL2_SERVER",
    "SP_PROT_SSL3_CLIENT",
    "SP_PROT_SSL3_SERVER",
    "SP_PROT_TLS1_0_CLIENT",
    "SP_PROT_TLS1_0_SERVER",
    "SP_PROT_TLS1_1_CLIENT",
    "SP_PROT_TLS1_1_SERVER",
    "SP_PROT_TLS1_2_CLIENT",
    "SP_PROT_TLS1_2_SERVER",
    "SP_PROT_TLS1_3PLUS_CLIENT",
    "SP_PROT_TLS1_3PLUS_SERVER",
    "SP_PROT_TLS1_3_CLIENT",
    "SP_PROT_TLS1_3_SERVER",
    "SP_PROT_TLS1_CLIENT",
    "SP_PROT_TLS1_SERVER",
    "SP_PROT_UNI_CLIENT",
    "SP_PROT_UNI_SERVER",
    "SR_SECURITY_DESCRIPTOR",
    "SSL2SP_NAME",
    "SSL2SP_NAME_A",
    "SSL2SP_NAME_W",
    "SSL3SP_NAME",
    "SSL3SP_NAME_A",
    "SSL3SP_NAME_W",
    "SSL_CRACK_CERTIFICATE_FN",
    "SSL_CRACK_CERTIFICATE_NAME",
    "SSL_CREDENTIAL_CERTIFICATE",
    "SSL_EMPTY_CACHE_FN_A",
    "SSL_EMPTY_CACHE_FN_W",
    "SSL_FREE_CERTIFICATE_FN",
    "SSL_FREE_CERTIFICATE_NAME",
    "SSL_SESSION_DISABLE_RECONNECTS",
    "SSL_SESSION_ENABLE_RECONNECTS",
    "SSL_SESSION_RECONNECT",
    "SSPIPFC_CREDPROV_DO_NOT_LOAD",
    "SSPIPFC_CREDPROV_DO_NOT_SAVE",
    "SSPIPFC_NO_CHECKBOX",
    "SSPIPFC_SAVE_CRED_BY_CALLER",
    "SSPIPFC_USE_CREDUIBROKER",
    "SUBSCRIBE_GENERIC_TLS_EXTENSION",
    "SZ_ALG_MAX_SIZE",
    "SaslAcceptSecurityContext",
    "SaslEnumerateProfilesA",
    "SaslEnumerateProfilesW",
    "SaslGetContextOption",
    "SaslGetProfilePackageA",
    "SaslGetProfilePackageW",
    "SaslIdentifyPackageA",
    "SaslIdentifyPackageW",
    "SaslInitializeSecurityContextA",
    "SaslInitializeSecurityContextW",
    "SaslSetContextOption",
    "Sasl_AuthZIDForbidden",
    "Sasl_AuthZIDProcessed",
    "SchGetExtensionsOptions",
    "SecApplicationProtocolNegotiationExt_ALPN",
    "SecApplicationProtocolNegotiationExt_NPN",
    "SecApplicationProtocolNegotiationExt_None",
    "SecApplicationProtocolNegotiationStatus_None",
    "SecApplicationProtocolNegotiationStatus_SelectedClientOnly",
    "SecApplicationProtocolNegotiationStatus_Success",
    "SecBuffer",
    "SecBufferDesc",
    "SecDelegationType",
    "SecDelegationType_SecDirectory",
    "SecDelegationType_SecFull",
    "SecDelegationType_SecObject",
    "SecDelegationType_SecService",
    "SecDelegationType_SecTree",
    "SecPkgContext_AccessToken",
    "SecPkgContext_ApplicationProtocol",
    "SecPkgContext_AuthorityA",
    "SecPkgContext_AuthorityW",
    "SecPkgContext_AuthzID",
    "SecPkgContext_Bindings",
    "SecPkgContext_CertInfo",
    "SecPkgContext_CertificateValidationResult",
    "SecPkgContext_Certificates",
    "SecPkgContext_CipherInfo",
    "SecPkgContext_ClientCertPolicyResult",
    "SecPkgContext_ClientSpecifiedTarget",
    "SecPkgContext_ConnectionInfo",
    "SecPkgContext_ConnectionInfoEx",
    "SecPkgContext_CredInfo",
    "SecPkgContext_CredentialNameA",
    "SecPkgContext_CredentialNameW",
    "SecPkgContext_DceInfo",
    "SecPkgContext_EapKeyBlock",
    "SecPkgContext_EapPrfInfo",
    "SecPkgContext_EarlyStart",
    "SecPkgContext_Flags",
    "SecPkgContext_IssuerListInfoEx",
    "SecPkgContext_KeyInfoA",
    "SecPkgContext_KeyInfoW",
    "SecPkgContext_KeyingMaterial",
    "SecPkgContext_KeyingMaterialInfo",
    "SecPkgContext_KeyingMaterial_Inproc",
    "SecPkgContext_LastClientTokenStatus",
    "SecPkgContext_Lifespan",
    "SecPkgContext_LocalCredentialInfo",
    "SecPkgContext_LogoffTime",
    "SecPkgContext_MappedCredAttr",
    "SecPkgContext_NamesA",
    "SecPkgContext_NamesW",
    "SecPkgContext_NativeNamesA",
    "SecPkgContext_NativeNamesW",
    "SecPkgContext_NegoKeys",
    "SecPkgContext_NegoPackageInfo",
    "SecPkgContext_NegoStatus",
    "SecPkgContext_NegotiatedTlsExtensions",
    "SecPkgContext_NegotiationInfoA",
    "SecPkgContext_NegotiationInfoW",
    "SecPkgContext_PackageInfoA",
    "SecPkgContext_PackageInfoW",
    "SecPkgContext_PasswordExpiry",
    "SecPkgContext_ProtoInfoA",
    "SecPkgContext_ProtoInfoW",
    "SecPkgContext_RemoteCredentialInfo",
    "SecPkgContext_SaslContext",
    "SecPkgContext_SessionAppData",
    "SecPkgContext_SessionInfo",
    "SecPkgContext_SessionKey",
    "SecPkgContext_Sizes",
    "SecPkgContext_SrtpParameters",
    "SecPkgContext_StreamSizes",
    "SecPkgContext_SubjectAttributes",
    "SecPkgContext_SupportedSignatures",
    "SecPkgContext_Target",
    "SecPkgContext_TargetInformation",
    "SecPkgContext_TokenBinding",
    "SecPkgContext_UiInfo",
    "SecPkgContext_UserFlags",
    "SecPkgCredClass_Ephemeral",
    "SecPkgCredClass_Explicit",
    "SecPkgCredClass_None",
    "SecPkgCredClass_PersistedGeneric",
    "SecPkgCredClass_PersistedSpecific",
    "SecPkgCred_CipherStrengths",
    "SecPkgCred_ClientCertPolicy",
    "SecPkgCred_SessionTicketKey",
    "SecPkgCred_SessionTicketKeys",
    "SecPkgCred_SupportedAlgs",
    "SecPkgCred_SupportedProtocols",
    "SecPkgCredentials_Cert",
    "SecPkgCredentials_KdcProxySettingsW",
    "SecPkgCredentials_NamesA",
    "SecPkgCredentials_NamesW",
    "SecPkgCredentials_SSIProviderA",
    "SecPkgCredentials_SSIProviderW",
    "SecPkgInfoA",
    "SecPkgInfoW",
    "SecTrafficSecret_Client",
    "SecTrafficSecret_None",
    "SecTrafficSecret_Server",
    "SecurityFunctionTableA",
    "SecurityFunctionTableW",
    "SendSAS",
    "SetContextAttributesA",
    "SetContextAttributesW",
    "SetCredentialsAttributesA",
    "SetCredentialsAttributesW",
    "SpAcceptCredentialsFn",
    "SpAcceptLsaModeContextFn",
    "SpAcquireCredentialsHandleFn",
    "SpAddCredentialsFn",
    "SpApplyControlTokenFn",
    "SpChangeAccountPasswordFn",
    "SpCompleteAuthTokenFn",
    "SpDeleteContextFn",
    "SpDeleteCredentialsFn",
    "SpExchangeMetaDataFn",
    "SpExportSecurityContextFn",
    "SpFormatCredentialsFn",
    "SpFreeCredentialsHandleFn",
    "SpGetContextTokenFn",
    "SpGetCredUIContextFn",
    "SpGetCredentialsFn",
    "SpGetExtendedInformationFn",
    "SpGetInfoFn",
    "SpGetRemoteCredGuardLogonBufferFn",
    "SpGetRemoteCredGuardSupplementalCredsFn",
    "SpGetTbalSupplementalCredsFn",
    "SpGetUserInfoFn",
    "SpImportSecurityContextFn",
    "SpInitLsaModeContextFn",
    "SpInitUserModeContextFn",
    "SpInitializeFn",
    "SpInstanceInitFn",
    "SpLsaModeInitializeFn",
    "SpMakeSignatureFn",
    "SpMarshalAttributeDataFn",
    "SpMarshallSupplementalCredsFn",
    "SpQueryContextAttributesFn",
    "SpQueryCredentialsAttributesFn",
    "SpQueryMetaDataFn",
    "SpSaveCredentialsFn",
    "SpSealMessageFn",
    "SpSetContextAttributesFn",
    "SpSetCredentialsAttributesFn",
    "SpSetExtendedInformationFn",
    "SpShutdownFn",
    "SpUnsealMessageFn",
    "SpUpdateCredentialsFn",
    "SpUserModeInitializeFn",
    "SpValidateTargetInfoFn",
    "SpVerifySignatureFn",
    "SslCrackCertificate",
    "SslEmptyCacheA",
    "SslEmptyCacheW",
    "SslFreeCertificate",
    "SslGenerateRandomBits",
    "SslGetExtensions",
    "SslGetExtensionsFn",
    "SslGetMaximumKeySize",
    "SslGetServerIdentity",
    "SslGetServerIdentityFn",
    "SspiCompareAuthIdentities",
    "SspiCopyAuthIdentity",
    "SspiDecryptAuthIdentity",
    "SspiDecryptAuthIdentityEx",
    "SspiEncodeAuthIdentityAsStrings",
    "SspiEncodeStringsAsAuthIdentity",
    "SspiEncryptAuthIdentity",
    "SspiEncryptAuthIdentityEx",
    "SspiExcludePackage",
    "SspiFreeAuthIdentity",
    "SspiGetTargetHostName",
    "SspiIsAuthIdentityEncrypted",
    "SspiIsPromptingNeeded",
    "SspiLocalFree",
    "SspiMarshalAuthIdentity",
    "SspiPrepareForCredRead",
    "SspiPrepareForCredWrite",
    "SspiPromptForCredentialsA",
    "SspiPromptForCredentialsW",
    "SspiUnmarshalAuthIdentity",
    "SspiValidateAuthIdentity",
    "SspiZeroAuthIdentity",
    "SystemFunction036",
    "SystemFunction040",
    "SystemFunction041",
    "TLS1SP_NAME",
    "TLS1SP_NAME_A",
    "TLS1SP_NAME_W",
    "TLS1_ALERT_ACCESS_DENIED",
    "TLS1_ALERT_BAD_CERTIFICATE",
    "TLS1_ALERT_BAD_RECORD_MAC",
    "TLS1_ALERT_CERTIFICATE_EXPIRED",
    "TLS1_ALERT_CERTIFICATE_REVOKED",
    "TLS1_ALERT_CERTIFICATE_UNKNOWN",
    "TLS1_ALERT_CLOSE_NOTIFY",
    "TLS1_ALERT_DECODE_ERROR",
    "TLS1_ALERT_DECOMPRESSION_FAIL",
    "TLS1_ALERT_DECRYPTION_FAILED",
    "TLS1_ALERT_DECRYPT_ERROR",
    "TLS1_ALERT_EXPORT_RESTRICTION",
    "TLS1_ALERT_FATAL",
    "TLS1_ALERT_HANDSHAKE_FAILURE",
    "TLS1_ALERT_ILLEGAL_PARAMETER",
    "TLS1_ALERT_INSUFFIENT_SECURITY",
    "TLS1_ALERT_INTERNAL_ERROR",
    "TLS1_ALERT_NO_APP_PROTOCOL",
    "TLS1_ALERT_NO_RENEGOTIATION",
    "TLS1_ALERT_PROTOCOL_VERSION",
    "TLS1_ALERT_RECORD_OVERFLOW",
    "TLS1_ALERT_UNEXPECTED_MESSAGE",
    "TLS1_ALERT_UNKNOWN_CA",
    "TLS1_ALERT_UNKNOWN_PSK_IDENTITY",
    "TLS1_ALERT_UNSUPPORTED_CERT",
    "TLS1_ALERT_UNSUPPORTED_EXT",
    "TLS1_ALERT_USER_CANCELED",
    "TLS1_ALERT_WARNING",
    "TLS_EXTENSION_SUBSCRIPTION",
    "TLS_PARAMS_OPTIONAL",
    "TOKENBINDING_EXTENSION_FORMAT",
    "TOKENBINDING_EXTENSION_FORMAT_UNDEFINED",
    "TOKENBINDING_IDENTIFIER",
    "TOKENBINDING_KEY_PARAMETERS_TYPE",
    "TOKENBINDING_KEY_PARAMETERS_TYPE_ANYEXISTING",
    "TOKENBINDING_KEY_PARAMETERS_TYPE_ECDSAP256",
    "TOKENBINDING_KEY_PARAMETERS_TYPE_RSA2048_PKCS",
    "TOKENBINDING_KEY_PARAMETERS_TYPE_RSA2048_PSS",
    "TOKENBINDING_KEY_TYPES",
    "TOKENBINDING_RESULT_DATA",
    "TOKENBINDING_RESULT_LIST",
    "TOKENBINDING_TYPE",
    "TOKENBINDING_TYPE_PROVIDED",
    "TOKENBINDING_TYPE_REFERRED",
    "TRUSTED_CONTROLLERS_INFO",
    "TRUSTED_DOMAIN_AUTH_INFORMATION",
    "TRUSTED_DOMAIN_FULL_INFORMATION",
    "TRUSTED_DOMAIN_FULL_INFORMATION2",
    "TRUSTED_DOMAIN_INFORMATION_EX",
    "TRUSTED_DOMAIN_INFORMATION_EX2",
    "TRUSTED_DOMAIN_NAME_INFO",
    "TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES",
    "TRUSTED_DOMAIN_TRUST_ATTRIBUTES",
    "TRUSTED_DOMAIN_TRUST_DIRECTION",
    "TRUSTED_DOMAIN_TRUST_TYPE",
    "TRUSTED_INFORMATION_CLASS",
    "TRUSTED_INFORMATION_CLASS_TrustedControllersInformation",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainAuthInformation",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainAuthInformationInternal",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainFullInformation",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainFullInformation2Internal",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainFullInformationInternal",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainInformationBasic",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainInformationEx",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainInformationEx2Internal",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainNameInformation",
    "TRUSTED_INFORMATION_CLASS_TrustedDomainSupportedEncryptionTypes",
    "TRUSTED_INFORMATION_CLASS_TrustedPasswordInformation",
    "TRUSTED_INFORMATION_CLASS_TrustedPosixOffsetInformation",
    "TRUSTED_PASSWORD_INFO",
    "TRUSTED_POSIX_OFFSET_INFO",
    "TRUSTED_QUERY_AUTH",
    "TRUSTED_QUERY_CONTROLLERS",
    "TRUSTED_QUERY_DOMAIN_NAME",
    "TRUSTED_QUERY_POSIX",
    "TRUSTED_SET_AUTH",
    "TRUSTED_SET_CONTROLLERS",
    "TRUSTED_SET_POSIX",
    "TRUST_ATTRIBUTES_USER",
    "TRUST_ATTRIBUTES_VALID",
    "TRUST_ATTRIBUTE_CROSS_ORGANIZATION",
    "TRUST_ATTRIBUTE_CROSS_ORGANIZATION_ENABLE_TGT_DELEGATION",
    "TRUST_ATTRIBUTE_CROSS_ORGANIZATION_NO_TGT_DELEGATION",
    "TRUST_ATTRIBUTE_FILTER_SIDS",
    "TRUST_ATTRIBUTE_FOREST_TRANSITIVE",
    "TRUST_ATTRIBUTE_NON_TRANSITIVE",
    "TRUST_ATTRIBUTE_PIM_TRUST",
    "TRUST_ATTRIBUTE_QUARANTINED_DOMAIN",
    "TRUST_ATTRIBUTE_TREAT_AS_EXTERNAL",
    "TRUST_ATTRIBUTE_TREE_PARENT",
    "TRUST_ATTRIBUTE_TREE_ROOT",
    "TRUST_ATTRIBUTE_TRUST_USES_AES_KEYS",
    "TRUST_ATTRIBUTE_TRUST_USES_RC4_ENCRYPTION",
    "TRUST_ATTRIBUTE_UPLEVEL_ONLY",
    "TRUST_ATTRIBUTE_WITHIN_FOREST",
    "TRUST_AUTH_TYPE_CLEAR",
    "TRUST_AUTH_TYPE_NONE",
    "TRUST_AUTH_TYPE_NT4OWF",
    "TRUST_AUTH_TYPE_VERSION",
    "TRUST_DIRECTION_BIDIRECTIONAL",
    "TRUST_DIRECTION_DISABLED",
    "TRUST_DIRECTION_INBOUND",
    "TRUST_DIRECTION_OUTBOUND",
    "TRUST_TYPE_DCE",
    "TRUST_TYPE_DOWNLEVEL",
    "TRUST_TYPE_MIT",
    "TRUST_TYPE_UPLEVEL",
    "TlsHashAlgorithm_Md5",
    "TlsHashAlgorithm_None",
    "TlsHashAlgorithm_Sha1",
    "TlsHashAlgorithm_Sha224",
    "TlsHashAlgorithm_Sha256",
    "TlsHashAlgorithm_Sha384",
    "TlsHashAlgorithm_Sha512",
    "TlsSignatureAlgorithm_Anonymous",
    "TlsSignatureAlgorithm_Dsa",
    "TlsSignatureAlgorithm_Ecdsa",
    "TlsSignatureAlgorithm_Rsa",
    "TokenBindingDeleteAllBindings",
    "TokenBindingDeleteBinding",
    "TokenBindingGenerateBinding",
    "TokenBindingGenerateID",
    "TokenBindingGenerateIDForUri",
    "TokenBindingGenerateMessage",
    "TokenBindingGetHighestSupportedVersion",
    "TokenBindingGetKeyTypesClient",
    "TokenBindingGetKeyTypesServer",
    "TokenBindingVerifyMessage",
    "TranslateNameA",
    "TranslateNameW",
    "UNDERSTANDS_LONG_NAMES",
    "UNISP_NAME",
    "UNISP_NAME_A",
    "UNISP_NAME_W",
    "UNISP_RPC_ID",
    "USER_ACCOUNT_AUTO_LOCKED",
    "USER_ACCOUNT_DISABLED",
    "USER_ALL_INFORMATION",
    "USER_ALL_PARAMETERS",
    "USER_DONT_EXPIRE_PASSWORD",
    "USER_DONT_REQUIRE_PREAUTH",
    "USER_ENCRYPTED_TEXT_PASSWORD_ALLOWED",
    "USER_HOME_DIRECTORY_REQUIRED",
    "USER_INTERDOMAIN_TRUST_ACCOUNT",
    "USER_MNS_LOGON_ACCOUNT",
    "USER_NORMAL_ACCOUNT",
    "USER_NOT_DELEGATED",
    "USER_NO_AUTH_DATA_REQUIRED",
    "USER_PARTIAL_SECRETS_ACCOUNT",
    "USER_PASSWORD_EXPIRED",
    "USER_PASSWORD_NOT_REQUIRED",
    "USER_SERVER_TRUST_ACCOUNT",
    "USER_SESSION_KEY",
    "USER_SMARTCARD_REQUIRED",
    "USER_TEMP_DUPLICATE_ACCOUNT",
    "USER_TRUSTED_FOR_DELEGATION",
    "USER_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION",
    "USER_USE_AES_KEYS",
    "USER_USE_DES_KEY_ONLY",
    "USER_WORKSTATION_TRUST_ACCOUNT",
    "VERIFY_SIGNATURE_FN",
    "VerifySignature",
    "WDIGEST_SP_NAME",
    "WDIGEST_SP_NAME_A",
    "WDIGEST_SP_NAME_W",
    "WINDOWS_SLID",
    "X509Certificate",
    "_FACILITY_WINDOWS_STORE",
    "_HMAPPER",
    "eTlsHashAlgorithm",
    "eTlsSignatureAlgorithm",
]
_arch_optional = [
]
