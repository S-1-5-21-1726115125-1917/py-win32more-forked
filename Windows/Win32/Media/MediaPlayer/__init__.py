from __future__ import annotations
from ctypes import POINTER
from Windows import ARCH, Boolean, Byte, Bytes, Char, ComPtr, Double, EasyCastStructure, EasyCastUnion, FAILED, Guid, Int16, Int32, Int64, IntPtr, MissingType, SByte, SUCCEEDED, Single, String, String, UInt16, UInt32, UInt64, UIntPtr, Void, VoidPtr, cfunctype, cfunctype_pointer, commethod, make_head, press, winfunctype, winfunctype_pointer
import Windows.Win32.Foundation
import Windows.Win32.Graphics.Gdi
import Windows.Win32.Media.MediaFoundation
import Windows.Win32.Media.MediaPlayer
import Windows.Win32.System.Com
import Windows.Win32.System.Ole
import Windows.Win32.System.Variant
import Windows.Win32.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
CLSID_XFeedsManager: Guid = Guid('{fe6b11c3-c72e-4061-86c6-9d163121f229}')
WMPGC_FLAGS_ALLOW_PREROLL: UInt32 = 1
WMPGC_FLAGS_SUPPRESS_DIALOGS: UInt32 = 2
WMPGC_FLAGS_IGNORE_AV_SYNC: UInt32 = 4
WMPGC_FLAGS_DISABLE_PLUGINS: UInt32 = 8
WMPGC_FLAGS_USE_CUSTOM_GRAPH: UInt32 = 16
WMPUE_EC_USER: UInt32 = 33024
WMP_MDRT_FLAGS_UNREPORTED_DELETED_ITEMS: UInt32 = 1
WMP_MDRT_FLAGS_UNREPORTED_ADDED_ITEMS: UInt32 = 2
IOCTL_WMP_METADATA_ROUND_TRIP: UInt32 = 827346263
IOCTL_WMP_DEVICE_CAN_SYNC: UInt32 = 844123479
EFFECT_CANGOFULLSCREEN: UInt32 = 1
EFFECT_HASPROPERTYPAGE: UInt32 = 2
EFFECT_VARIABLEFREQSTEP: UInt32 = 4
EFFECT_WINDOWEDONLY: UInt32 = 8
EFFECT2_FULLSCREENEXCLUSIVE: UInt32 = 16
SA_BUFFER_SIZE: UInt32 = 1024
PLUGIN_INSTALLREGKEY: String = 'Software\\Microsoft\\MediaPlayer\\UIPlugins'
PLUGIN_INSTALLREGKEY_FRIENDLYNAME: String = 'FriendlyName'
PLUGIN_INSTALLREGKEY_DESCRIPTION: String = 'Description'
PLUGIN_INSTALLREGKEY_CAPABILITIES: String = 'Capabilities'
PLUGIN_INSTALLREGKEY_UNINSTALL: String = 'UninstallPath'
PLUGIN_TYPE_BACKGROUND: UInt32 = 1
PLUGIN_TYPE_SEPARATEWINDOW: UInt32 = 2
PLUGIN_TYPE_DISPLAYAREA: UInt32 = 3
PLUGIN_TYPE_SETTINGSAREA: UInt32 = 4
PLUGIN_TYPE_METADATAAREA: UInt32 = 5
PLUGIN_FLAGS_HASPROPERTYPAGE: UInt32 = 2147483648
PLUGIN_FLAGS_INSTALLAUTORUN: UInt32 = 1073741824
PLUGIN_FLAGS_LAUNCHPROPERTYPAGE: UInt32 = 536870912
PLUGIN_FLAGS_ACCEPTSMEDIA: UInt32 = 268435456
PLUGIN_FLAGS_ACCEPTSPLAYLISTS: UInt32 = 134217728
PLUGIN_FLAGS_HASPRESETS: UInt32 = 67108864
PLUGIN_FLAGS_HIDDEN: UInt32 = 33554432
PLUGIN_MISC_PRESETCOUNT: String = 'PresetCount'
PLUGIN_MISC_PRESETNAMES: String = 'PresetNames'
PLUGIN_MISC_CURRENTPRESET: String = 'CurrentPreset'
PLUGIN_SEPARATEWINDOW_RESIZABLE: String = 'Resizable'
PLUGIN_SEPARATEWINDOW_DEFAULTWIDTH: String = 'DefaultWidth'
PLUGIN_SEPARATEWINDOW_DEFAULTHEIGHT: String = 'DefaultHeight'
PLUGIN_SEPARATEWINDOW_MINWIDTH: String = 'MinWidth'
PLUGIN_SEPARATEWINDOW_MINHEIGHT: String = 'MinHeight'
PLUGIN_SEPARATEWINDOW_MAXWIDTH: String = 'MaxWidth'
PLUGIN_SEPARATEWINDOW_MAXHEIGHT: String = 'MaxHeight'
PLUGIN_MISC_QUERYDESTROY: String = 'QueryDestroy'
PLUGIN_ALL_MEDIASENDTO: String = 'MediaSendTo'
PLUGIN_ALL_PLAYLISTSENDTO: String = 'PlaylistSendTo'
SUBSCRIPTION_CAP_DEVICEAVAILABLE: UInt32 = 16
SUBSCRIPTION_CAP_BACKGROUNDPROCESSING: UInt32 = 8
SUBSCRIPTION_CAP_IS_CONTENTPARTNER: UInt32 = 64
SUBSCRIPTION_CAP_ALTLOGIN: UInt32 = 128
SUBSCRIPTION_CAP_ALLOWPLAY: UInt32 = 1
SUBSCRIPTION_CAP_ALLOWCDBURN: UInt32 = 2
SUBSCRIPTION_CAP_ALLOWPDATRANSFER: UInt32 = 4
SUBSCRIPTION_CAP_PREPAREFORSYNC: UInt32 = 32
SUBSCRIPTION_V1_CAPS: UInt32 = 15
SUBSCRIPTION_CAP_UILESSMODE_ALLOWPLAY: UInt32 = 256
WMP_SUBSCR_DL_TYPE_BACKGROUND: String = 'background'
WMP_SUBSCR_DL_TYPE_REALTIME: String = 'real time'
DISPID_FEEDS_RootFolder: UInt32 = 4096
DISPID_FEEDS_IsSubscribed: UInt32 = 4097
DISPID_FEEDS_ExistsFeed: UInt32 = 4098
DISPID_FEEDS_GetFeed: UInt32 = 4099
DISPID_FEEDS_ExistsFolder: UInt32 = 4100
DISPID_FEEDS_GetFolder: UInt32 = 4101
DISPID_FEEDS_DeleteFeed: UInt32 = 4102
DISPID_FEEDS_DeleteFolder: UInt32 = 4103
DISPID_FEEDS_GetFeedByUrl: UInt32 = 4104
DISPID_FEEDS_BackgroundSync: UInt32 = 4105
DISPID_FEEDS_BackgroundSyncStatus: UInt32 = 4106
DISPID_FEEDS_DefaultInterval: UInt32 = 4107
DISPID_FEEDS_AsyncSyncAll: UInt32 = 4108
DISPID_FEEDS_Normalize: UInt32 = 4109
DISPID_FEEDS_ItemCountLimit: UInt32 = 4110
DISPID_FEEDSENUM_Count: UInt32 = 8192
DISPID_FEEDSENUM_Item: UInt32 = 8193
DISPID_FEEDFOLDER_Feeds: UInt32 = 12288
DISPID_FEEDFOLDER_Subfolders: UInt32 = 12289
DISPID_FEEDFOLDER_CreateFeed: UInt32 = 12290
DISPID_FEEDFOLDER_CreateSubfolder: UInt32 = 12291
DISPID_FEEDFOLDER_ExistsFeed: UInt32 = 12292
DISPID_FEEDFOLDER_GetFeed: UInt32 = 12293
DISPID_FEEDFOLDER_ExistsSubfolder: UInt32 = 12294
DISPID_FEEDFOLDER_GetSubfolder: UInt32 = 12295
DISPID_FEEDFOLDER_Delete: UInt32 = 12296
DISPID_FEEDFOLDER_Name: UInt32 = 12297
DISPID_FEEDFOLDER_Rename: UInt32 = 12298
DISPID_FEEDFOLDER_Path: UInt32 = 12299
DISPID_FEEDFOLDER_Move: UInt32 = 12300
DISPID_FEEDFOLDER_Parent: UInt32 = 12301
DISPID_FEEDFOLDER_IsRoot: UInt32 = 12302
DISPID_FEEDFOLDER_TotalUnreadItemCount: UInt32 = 12303
DISPID_FEEDFOLDER_TotalItemCount: UInt32 = 12304
DISPID_FEEDFOLDER_GetWatcher: UInt32 = 12305
DISPID_FEED_Xml: UInt32 = 16384
DISPID_FEED_Name: UInt32 = 16385
DISPID_FEED_Rename: UInt32 = 16386
DISPID_FEED_Url: UInt32 = 16387
DISPID_FEED_LocalId: UInt32 = 16388
DISPID_FEED_Path: UInt32 = 16389
DISPID_FEED_Move: UInt32 = 16390
DISPID_FEED_Parent: UInt32 = 16391
DISPID_FEED_LastWriteTime: UInt32 = 16392
DISPID_FEED_Delete: UInt32 = 16393
DISPID_FEED_Download: UInt32 = 16394
DISPID_FEED_AsyncDownload: UInt32 = 16395
DISPID_FEED_CancelAsyncDownload: UInt32 = 16396
DISPID_FEED_Interval: UInt32 = 16397
DISPID_FEED_SyncSetting: UInt32 = 16398
DISPID_FEED_LastDownloadTime: UInt32 = 16399
DISPID_FEED_LocalEnclosurePath: UInt32 = 16400
DISPID_FEED_Items: UInt32 = 16401
DISPID_FEED_GetItem: UInt32 = 16402
DISPID_FEED_Title: UInt32 = 16403
DISPID_FEED_Description: UInt32 = 16404
DISPID_FEED_Link: UInt32 = 16405
DISPID_FEED_Image: UInt32 = 16406
DISPID_FEED_LastBuildDate: UInt32 = 16407
DISPID_FEED_PubDate: UInt32 = 16408
DISPID_FEED_Ttl: UInt32 = 16409
DISPID_FEED_Language: UInt32 = 16410
DISPID_FEED_Copyright: UInt32 = 16411
DISPID_FEED_DownloadEnclosuresAutomatically: UInt32 = 16412
DISPID_FEED_DownloadStatus: UInt32 = 16413
DISPID_FEED_LastDownloadError: UInt32 = 16414
DISPID_FEED_Merge: UInt32 = 16415
DISPID_FEED_DownloadUrl: UInt32 = 16416
DISPID_FEED_IsList: UInt32 = 16417
DISPID_FEED_MarkAllItemsRead: UInt32 = 16418
DISPID_FEED_GetWatcher: UInt32 = 16419
DISPID_FEED_UnreadItemCount: UInt32 = 16420
DISPID_FEED_ItemCount: UInt32 = 16421
DISPID_FEED_MaxItemCount: UInt32 = 16422
DISPID_FEED_GetItemByEffectiveId: UInt32 = 16423
DISPID_FEED_LastItemDownloadTime: UInt32 = 16424
DISPID_FEED_Username: UInt32 = 16425
DISPID_FEED_Password: UInt32 = 16426
DISPID_FEED_SetCredentials: UInt32 = 16427
DISPID_FEED_ClearCredentials: UInt32 = 16428
DISPID_FEEDITEM_Xml: UInt32 = 20480
DISPID_FEEDITEM_Title: UInt32 = 20481
DISPID_FEEDITEM_Link: UInt32 = 20482
DISPID_FEEDITEM_Guid: UInt32 = 20483
DISPID_FEEDITEM_Description: UInt32 = 20484
DISPID_FEEDITEM_PubDate: UInt32 = 20485
DISPID_FEEDITEM_Comments: UInt32 = 20486
DISPID_FEEDITEM_Author: UInt32 = 20487
DISPID_FEEDITEM_Enclosure: UInt32 = 20488
DISPID_FEEDITEM_IsRead: UInt32 = 20489
DISPID_FEEDITEM_LocalId: UInt32 = 20490
DISPID_FEEDITEM_Parent: UInt32 = 20491
DISPID_FEEDITEM_Delete: UInt32 = 20492
DISPID_FEEDITEM_DownloadUrl: UInt32 = 20493
DISPID_FEEDITEM_LastDownloadTime: UInt32 = 20494
DISPID_FEEDITEM_Modified: UInt32 = 20495
DISPID_FEEDITEM_EffectiveId: UInt32 = 20496
DISPID_FEEDENCLOSURE_Url: UInt32 = 24576
DISPID_FEEDENCLOSURE_Type: UInt32 = 24577
DISPID_FEEDENCLOSURE_Length: UInt32 = 24578
DISPID_FEEDENCLOSURE_AsyncDownload: UInt32 = 24579
DISPID_FEEDENCLOSURE_CancelAsyncDownload: UInt32 = 24580
DISPID_FEEDENCLOSURE_DownloadStatus: UInt32 = 24581
DISPID_FEEDENCLOSURE_LastDownloadError: UInt32 = 24582
DISPID_FEEDENCLOSURE_LocalPath: UInt32 = 24583
DISPID_FEEDENCLOSURE_Parent: UInt32 = 24584
DISPID_FEEDENCLOSURE_DownloadUrl: UInt32 = 24585
DISPID_FEEDENCLOSURE_DownloadMimeType: UInt32 = 24586
DISPID_FEEDENCLOSURE_RemoveFile: UInt32 = 24587
DISPID_FEEDENCLOSURE_SetFile: UInt32 = 24588
DISPID_FEEDFOLDEREVENTS_Error: UInt32 = 28672
DISPID_FEEDFOLDEREVENTS_FolderAdded: UInt32 = 28673
DISPID_FEEDFOLDEREVENTS_FolderDeleted: UInt32 = 28674
DISPID_FEEDFOLDEREVENTS_FolderRenamed: UInt32 = 28675
DISPID_FEEDFOLDEREVENTS_FolderMovedFrom: UInt32 = 28676
DISPID_FEEDFOLDEREVENTS_FolderMovedTo: UInt32 = 28677
DISPID_FEEDFOLDEREVENTS_FolderItemCountChanged: UInt32 = 28678
DISPID_FEEDFOLDEREVENTS_FeedAdded: UInt32 = 28679
DISPID_FEEDFOLDEREVENTS_FeedDeleted: UInt32 = 28680
DISPID_FEEDFOLDEREVENTS_FeedRenamed: UInt32 = 28681
DISPID_FEEDFOLDEREVENTS_FeedUrlChanged: UInt32 = 28682
DISPID_FEEDFOLDEREVENTS_FeedMovedFrom: UInt32 = 28683
DISPID_FEEDFOLDEREVENTS_FeedMovedTo: UInt32 = 28684
DISPID_FEEDFOLDEREVENTS_FeedDownloading: UInt32 = 28685
DISPID_FEEDFOLDEREVENTS_FeedDownloadCompleted: UInt32 = 28686
DISPID_FEEDFOLDEREVENTS_FeedItemCountChanged: UInt32 = 28687
DISPID_FEEDEVENTS_Error: UInt32 = 32768
DISPID_FEEDEVENTS_FeedDeleted: UInt32 = 32769
DISPID_FEEDEVENTS_FeedRenamed: UInt32 = 32770
DISPID_FEEDEVENTS_FeedUrlChanged: UInt32 = 32771
DISPID_FEEDEVENTS_FeedMoved: UInt32 = 32772
DISPID_FEEDEVENTS_FeedDownloading: UInt32 = 32773
DISPID_FEEDEVENTS_FeedDownloadCompleted: UInt32 = 32774
DISPID_FEEDEVENTS_FeedItemCountChanged: UInt32 = 32775
DISPID_DELTA: UInt32 = 50
DISPID_WMPCORE_BASE: UInt32 = 0
DISPID_WMPCORE_URL: UInt32 = 1
DISPID_WMPCORE_OPENSTATE: UInt32 = 2
DISPID_WMPCORE_CLOSE: UInt32 = 3
DISPID_WMPCORE_CONTROLS: UInt32 = 4
DISPID_WMPCORE_SETTINGS: UInt32 = 5
DISPID_WMPCORE_CURRENTMEDIA: UInt32 = 6
DISPID_WMPCORE_NETWORK: UInt32 = 7
DISPID_WMPCORE_MEDIACOLLECTION: UInt32 = 8
DISPID_WMPCORE_PLAYLISTCOLLECTION: UInt32 = 9
DISPID_WMPCORE_PLAYSTATE: UInt32 = 10
DISPID_WMPCORE_VERSIONINFO: UInt32 = 11
DISPID_WMPCORE_LAUNCHURL: UInt32 = 12
DISPID_WMPCORE_CURRENTPLAYLIST: UInt32 = 13
DISPID_WMPCORE_CDROMCOLLECTION: UInt32 = 14
DISPID_WMPCORE_CLOSEDCAPTION: UInt32 = 15
DISPID_WMPCORE_ISONLINE: UInt32 = 16
DISPID_WMPCORE_ERROR: UInt32 = 17
DISPID_WMPCORE_STATUS: UInt32 = 18
DISPID_WMPCORE_LAST: UInt32 = 18
DISPID_WMPOCX_BASE: UInt32 = 18
DISPID_WMPOCX_ENABLED: UInt32 = 19
DISPID_WMPOCX_TRANSPARENTATSTART: UInt32 = 20
DISPID_WMPOCX_FULLSCREEN: UInt32 = 21
DISPID_WMPOCX_ENABLECONTEXTMENU: UInt32 = 22
DISPID_WMPOCX_UIMODE: UInt32 = 23
DISPID_WMPOCX_LAST: UInt32 = 23
DISPID_WMPOCX2_BASE: UInt32 = 23
DISPID_WMPOCX2_STRETCHTOFIT: UInt32 = 24
DISPID_WMPOCX2_WINDOWLESSVIDEO: UInt32 = 25
DISPID_WMPOCX4_ISREMOTE: UInt32 = 26
DISPID_WMPOCX4_PLAYERAPPLICATION: UInt32 = 27
DISPID_WMPOCX4_OPENPLAYER: UInt32 = 28
DISPID_WMPCORE2_BASE: UInt32 = 39
DISPID_WMPCORE2_DVD: UInt32 = 40
DISPID_WMPCORE3_NEWPLAYLIST: UInt32 = 41
DISPID_WMPCORE3_NEWMEDIA: UInt32 = 42
DISPID_WMPCONTROLS_PLAY: UInt32 = 51
DISPID_WMPCONTROLS_STOP: UInt32 = 52
DISPID_WMPCONTROLS_PAUSE: UInt32 = 53
DISPID_WMPCONTROLS_FASTFORWARD: UInt32 = 54
DISPID_WMPCONTROLS_FASTREVERSE: UInt32 = 55
DISPID_WMPCONTROLS_CURRENTPOSITION: UInt32 = 56
DISPID_WMPCONTROLS_CURRENTPOSITIONSTRING: UInt32 = 57
DISPID_WMPCONTROLS_NEXT: UInt32 = 58
DISPID_WMPCONTROLS_PREVIOUS: UInt32 = 59
DISPID_WMPCONTROLS_CURRENTITEM: UInt32 = 60
DISPID_WMPCONTROLS_CURRENTMARKER: UInt32 = 61
DISPID_WMPCONTROLS_ISAVAILABLE: UInt32 = 62
DISPID_WMPCONTROLS_PLAYITEM: UInt32 = 63
DISPID_WMPCONTROLS2_STEP: UInt32 = 64
DISPID_WMPCONTROLS3_AUDIOLANGUAGECOUNT: UInt32 = 65
DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEID: UInt32 = 66
DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEDESC: UInt32 = 67
DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGE: UInt32 = 68
DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGEINDEX: UInt32 = 69
DISPID_WMPCONTROLS3_GETLANGUAGENAME: UInt32 = 70
DISPID_WMPCONTROLS3_CURRENTPOSITIONTIMECODE: UInt32 = 71
DISPID_WMPCONTROLSFAKE_TIMECOMPRESSION: UInt32 = 72
DISPID_WMPSETTINGS_AUTOSTART: UInt32 = 101
DISPID_WMPSETTINGS_BALANCE: UInt32 = 102
DISPID_WMPSETTINGS_INVOKEURLS: UInt32 = 103
DISPID_WMPSETTINGS_MUTE: UInt32 = 104
DISPID_WMPSETTINGS_PLAYCOUNT: UInt32 = 105
DISPID_WMPSETTINGS_RATE: UInt32 = 106
DISPID_WMPSETTINGS_VOLUME: UInt32 = 107
DISPID_WMPSETTINGS_BASEURL: UInt32 = 108
DISPID_WMPSETTINGS_DEFAULTFRAME: UInt32 = 109
DISPID_WMPSETTINGS_GETMODE: UInt32 = 110
DISPID_WMPSETTINGS_SETMODE: UInt32 = 111
DISPID_WMPSETTINGS_ENABLEERRORDIALOGS: UInt32 = 112
DISPID_WMPSETTINGS_ISAVAILABLE: UInt32 = 113
DISPID_WMPSETTINGS2_DEFAULTAUDIOLANGUAGE: UInt32 = 114
DISPID_WMPSETTINGS2_LIBRARYACCESSRIGHTS: UInt32 = 115
DISPID_WMPSETTINGS2_REQUESTLIBRARYACCESSRIGHTS: UInt32 = 116
DISPID_WMPPLAYLIST_COUNT: UInt32 = 201
DISPID_WMPPLAYLIST_NAME: UInt32 = 202
DISPID_WMPPLAYLIST_GETITEMINFO: UInt32 = 203
DISPID_WMPPLAYLIST_SETITEMINFO: UInt32 = 204
DISPID_WMPPLAYLIST_CLEAR: UInt32 = 205
DISPID_WMPPLAYLIST_INSERTITEM: UInt32 = 206
DISPID_WMPPLAYLIST_APPENDITEM: UInt32 = 207
DISPID_WMPPLAYLIST_REMOVEITEM: UInt32 = 208
DISPID_WMPPLAYLIST_MOVEITEM: UInt32 = 209
DISPID_WMPPLAYLIST_ATTRIBUTECOUNT: UInt32 = 210
DISPID_WMPPLAYLIST_ATTRIBUTENAME: UInt32 = 211
DISPID_WMPPLAYLIST_ITEM: UInt32 = 212
DISPID_WMPPLAYLIST_ISIDENTICAL: UInt32 = 213
DISPID_WMPCDROM_DRIVESPECIFIER: UInt32 = 251
DISPID_WMPCDROM_PLAYLIST: UInt32 = 252
DISPID_WMPCDROM_EJECT: UInt32 = 253
DISPID_WMPCDROMCOLLECTION_COUNT: UInt32 = 301
DISPID_WMPCDROMCOLLECTION_ITEM: UInt32 = 302
DISPID_WMPCDROMCOLLECTION_GETBYDRIVESPECIFIER: UInt32 = 303
DISPID_WMPCDROMCOLLECTION_STARTMONITORINGCDROMS: UInt32 = 304
DISPID_WMPCDROMCOLLECTION_STOPMONITORINGCDROMS: UInt32 = 305
DISPID_WMPSTRINGCOLLECTION_COUNT: UInt32 = 401
DISPID_WMPSTRINGCOLLECTION_ITEM: UInt32 = 402
DISPID_WMPMEDIACOLLECTION_ADD: UInt32 = 452
DISPID_WMPMEDIACOLLECTION_GETALL: UInt32 = 453
DISPID_WMPMEDIACOLLECTION_GETBYNAME: UInt32 = 454
DISPID_WMPMEDIACOLLECTION_GETBYGENRE: UInt32 = 455
DISPID_WMPMEDIACOLLECTION_GETBYAUTHOR: UInt32 = 456
DISPID_WMPMEDIACOLLECTION_GETBYALBUM: UInt32 = 457
DISPID_WMPMEDIACOLLECTION_GETBYATTRIBUTE: UInt32 = 458
DISPID_WMPMEDIACOLLECTION_REMOVE: UInt32 = 459
DISPID_WMPMEDIACOLLECTION_GETATTRIBUTESTRINGCOLLECTION: UInt32 = 461
DISPID_WMPMEDIACOLLECTION_NEWQUERY: UInt32 = 462
DISPID_WMPMEDIACOLLECTION_STARTMONITORING: UInt32 = 463
DISPID_WMPMEDIACOLLECTION_STOPMONITORING: UInt32 = 464
DISPID_WMPMEDIACOLLECTION_STARTCONTENTSCAN: UInt32 = 465
DISPID_WMPMEDIACOLLECTION_STOPCONTENTSCAN: UInt32 = 466
DISPID_WMPMEDIACOLLECTION_STARTSEARCH: UInt32 = 467
DISPID_WMPMEDIACOLLECTION_STOPSEARCH: UInt32 = 468
DISPID_WMPMEDIACOLLECTION_UPDATEMETADATA: UInt32 = 469
DISPID_WMPMEDIACOLLECTION_GETMEDIAATOM: UInt32 = 470
DISPID_WMPMEDIACOLLECTION_SETDELETED: UInt32 = 471
DISPID_WMPMEDIACOLLECTION_ISDELETED: UInt32 = 472
DISPID_WMPMEDIACOLLECTION_GETBYQUERYDESCRIPTION: UInt32 = 473
DISPID_WMPMEDIACOLLECTION_FREEZECOLLECTIONCHANGE: UInt32 = 474
DISPID_WMPMEDIACOLLECTION_UNFREEZECOLLECTIONCHANGE: UInt32 = 475
DISPID_WMPMEDIACOLLECTION_POSTCOLLECTIONCHANGE: UInt32 = 476
DISPID_WMPPLAYLISTARRAY_COUNT: UInt32 = 501
DISPID_WMPPLAYLISTARRAY_ITEM: UInt32 = 502
DISPID_WMPPLAYLISTCOLLECTION_NEWPLAYLIST: UInt32 = 552
DISPID_WMPPLAYLISTCOLLECTION_GETALL: UInt32 = 553
DISPID_WMPPLAYLISTCOLLECTION_GETBYNAME: UInt32 = 554
DISPID_WMPPLAYLISTCOLLECTION_GETBYQUERYDESCRIPTION: UInt32 = 555
DISPID_WMPPLAYLISTCOLLECTION_REMOVE: UInt32 = 556
DISPID_WMPPLAYLISTCOLLECTION_NEWQUERY: UInt32 = 557
DISPID_WMPPLAYLISTCOLLECTION_STARTMONITORING: UInt32 = 558
DISPID_WMPPLAYLISTCOLLECTION_STOPMONITORING: UInt32 = 559
DISPID_WMPPLAYLISTCOLLECTION_SETDELETED: UInt32 = 560
DISPID_WMPPLAYLISTCOLLECTION_ISDELETED: UInt32 = 561
DISPID_WMPPLAYLISTCOLLECTION_IMPORTPLAYLIST: UInt32 = 562
DISPID_WMPMEDIA_SOURCEURL: UInt32 = 751
DISPID_WMPMEDIA_IMAGESOURCEWIDTH: UInt32 = 752
DISPID_WMPMEDIA_IMAGESOURCEHEIGHT: UInt32 = 753
DISPID_WMPMEDIA_MARKERCOUNT: UInt32 = 754
DISPID_WMPMEDIA_GETMARKERTIME: UInt32 = 755
DISPID_WMPMEDIA_GETMARKERNAME: UInt32 = 756
DISPID_WMPMEDIA_DURATION: UInt32 = 757
DISPID_WMPMEDIA_DURATIONSTRING: UInt32 = 758
DISPID_WMPMEDIA_ATTRIBUTECOUNT: UInt32 = 759
DISPID_WMPMEDIA_GETATTRIBUTENAME: UInt32 = 760
DISPID_WMPMEDIA_GETITEMINFO: UInt32 = 761
DISPID_WMPMEDIA_SETITEMINFO: UInt32 = 762
DISPID_WMPMEDIA_ISIDENTICAL: UInt32 = 763
DISPID_WMPMEDIA_NAME: UInt32 = 764
DISPID_WMPMEDIA_GETITEMINFOBYATOM: UInt32 = 765
DISPID_WMPMEDIA_ISMEMBEROF: UInt32 = 766
DISPID_WMPMEDIA_ISREADONLYITEM: UInt32 = 767
DISPID_WMPMEDIA2_ERROR: UInt32 = 768
DISPID_WMPMEDIA3_GETATTRIBUTECOUNTBYTYPE: UInt32 = 769
DISPID_WMPMEDIA3_GETITEMINFOBYTYPE: UInt32 = 770
DISPID_WMPNETWORK_BANDWIDTH: UInt32 = 801
DISPID_WMPNETWORK_RECOVEREDPACKETS: UInt32 = 802
DISPID_WMPNETWORK_SOURCEPROTOCOL: UInt32 = 803
DISPID_WMPNETWORK_RECEIVEDPACKETS: UInt32 = 804
DISPID_WMPNETWORK_LOSTPACKETS: UInt32 = 805
DISPID_WMPNETWORK_RECEPTIONQUALITY: UInt32 = 806
DISPID_WMPNETWORK_BUFFERINGCOUNT: UInt32 = 807
DISPID_WMPNETWORK_BUFFERINGPROGRESS: UInt32 = 808
DISPID_WMPNETWORK_BUFFERINGTIME: UInt32 = 809
DISPID_WMPNETWORK_FRAMERATE: UInt32 = 810
DISPID_WMPNETWORK_MAXBITRATE: UInt32 = 811
DISPID_WMPNETWORK_BITRATE: UInt32 = 812
DISPID_WMPNETWORK_GETPROXYSETTINGS: UInt32 = 813
DISPID_WMPNETWORK_SETPROXYSETTINGS: UInt32 = 814
DISPID_WMPNETWORK_GETPROXYNAME: UInt32 = 815
DISPID_WMPNETWORK_SETPROXYNAME: UInt32 = 816
DISPID_WMPNETWORK_GETPROXYPORT: UInt32 = 817
DISPID_WMPNETWORK_SETPROXYPORT: UInt32 = 818
DISPID_WMPNETWORK_GETPROXYEXCEPTIONLIST: UInt32 = 819
DISPID_WMPNETWORK_SETPROXYEXCEPTIONLIST: UInt32 = 820
DISPID_WMPNETWORK_GETPROXYBYPASSFORLOCAL: UInt32 = 821
DISPID_WMPNETWORK_SETPROXYBYPASSFORLOCAL: UInt32 = 822
DISPID_WMPNETWORK_MAXBANDWIDTH: UInt32 = 823
DISPID_WMPNETWORK_DOWNLOADPROGRESS: UInt32 = 824
DISPID_WMPNETWORK_ENCODEDFRAMERATE: UInt32 = 825
DISPID_WMPNETWORK_FRAMESSKIPPED: UInt32 = 826
DISPID_WMPERROR_CLEARERRORQUEUE: UInt32 = 851
DISPID_WMPERROR_ERRORCOUNT: UInt32 = 852
DISPID_WMPERROR_ITEM: UInt32 = 853
DISPID_WMPERROR_WEBHELP: UInt32 = 854
DISPID_WMPERRORITEM_ERRORCODE: UInt32 = 901
DISPID_WMPERRORITEM_ERRORDESCRIPTION: UInt32 = 902
DISPID_WMPERRORITEM_ERRORCONTEXT: UInt32 = 903
DISPID_WMPERRORITEM_REMEDY: UInt32 = 904
DISPID_WMPERRORITEM_CUSTOMURL: UInt32 = 905
DISPID_WMPERRORITEM2_CONDITION: UInt32 = 906
DISPID_WMPCLOSEDCAPTION_SAMISTYLE: UInt32 = 951
DISPID_WMPCLOSEDCAPTION_SAMILANG: UInt32 = 952
DISPID_WMPCLOSEDCAPTION_SAMIFILENAME: UInt32 = 953
DISPID_WMPCLOSEDCAPTION_CAPTIONINGID: UInt32 = 954
DISPID_WMPCLOSEDCAPTION2_GETLANGCOUNT: UInt32 = 955
DISPID_WMPCLOSEDCAPTION2_GETLANGNAME: UInt32 = 956
DISPID_WMPCLOSEDCAPTION2_GETLANGID: UInt32 = 957
DISPID_WMPCLOSEDCAPTION2_GETSTYLECOUNT: UInt32 = 958
DISPID_WMPCLOSEDCAPTION2_GETSTYLENAME: UInt32 = 959
DISPID_WMPDVD_ISAVAILABLE: UInt32 = 1001
DISPID_WMPDVD_DOMAIN: UInt32 = 1002
DISPID_WMPDVD_TOPMENU: UInt32 = 1003
DISPID_WMPDVD_TITLEMENU: UInt32 = 1004
DISPID_WMPDVD_BACK: UInt32 = 1005
DISPID_WMPDVD_RESUME: UInt32 = 1006
DISPID_WMPMETADATA_PICTURE_MIMETYPE: UInt32 = 1051
DISPID_WMPMETADATA_PICTURE_PICTURETYPE: UInt32 = 1052
DISPID_WMPMETADATA_PICTURE_DESCRIPTION: UInt32 = 1053
DISPID_WMPMETADATA_PICTURE_URL: UInt32 = 1054
DISPID_WMPMETADATA_TEXT_TEXT: UInt32 = 1055
DISPID_WMPMETADATA_TEXT_DESCRIPTION: UInt32 = 1056
DISPID_WMPPLAYERAPP_SWITCHTOPLAYERAPPLICATION: UInt32 = 1101
DISPID_WMPPLAYERAPP_SWITCHTOCONTROL: UInt32 = 1102
DISPID_WMPPLAYERAPP_PLAYERDOCKED: UInt32 = 1103
DISPID_WMPPLAYERAPP_HASDISPLAY: UInt32 = 1104
DISPID_WMPPLAYERAPP_REMOTESTATUS: UInt32 = 1105
DISPID_WMPDOWNLOADMANAGER_GETDOWNLOADCOLLECTION: UInt32 = 1151
DISPID_WMPDOWNLOADMANAGER_CREATEDOWNLOADCOLLECTION: UInt32 = 1152
DISPID_WMPDOWNLOADCOLLECTION_ID: UInt32 = 1201
DISPID_WMPDOWNLOADCOLLECTION_COUNT: UInt32 = 1202
DISPID_WMPDOWNLOADCOLLECTION_ITEM: UInt32 = 1203
DISPID_WMPDOWNLOADCOLLECTION_STARTDOWNLOAD: UInt32 = 1204
DISPID_WMPDOWNLOADCOLLECTION_REMOVEITEM: UInt32 = 1205
DISPID_WMPDOWNLOADCOLLECTION_CLEAR: UInt32 = 1206
DISPID_WMPDOWNLOADITEM_SOURCEURL: UInt32 = 1251
DISPID_WMPDOWNLOADITEM_SIZE: UInt32 = 1252
DISPID_WMPDOWNLOADITEM_TYPE: UInt32 = 1253
DISPID_WMPDOWNLOADITEM_PROGRESS: UInt32 = 1254
DISPID_WMPDOWNLOADITEM_DOWNLOADSTATE: UInt32 = 1255
DISPID_WMPDOWNLOADITEM_PAUSE: UInt32 = 1256
DISPID_WMPDOWNLOADITEM_RESUME: UInt32 = 1257
DISPID_WMPDOWNLOADITEM_CANCEL: UInt32 = 1258
DISPID_WMPDOWNLOADITEM2_GETITEMINFO: UInt32 = 1301
DISPID_WMPQUERY_ADDCONDITION: UInt32 = 1351
DISPID_WMPQUERY_BEGINNEXTGROUP: UInt32 = 1352
DISPID_WMPMEDIACOLLECTION2_CREATEQUERY: UInt32 = 1401
DISPID_WMPMEDIACOLLECTION2_GETPLAYLISTBYQUERY: UInt32 = 1402
DISPID_WMPMEDIACOLLECTION2_GETSTRINGCOLLBYQUERY: UInt32 = 1403
DISPID_WMPMEDIACOLLECTION2_GETBYATTRANDMEDIATYPE: UInt32 = 1404
DISPID_WMPSTRINGCOLLECTION2_ISIDENTICAL: UInt32 = 1451
DISPID_WMPSTRINGCOLLECTION2_GETITEMINFO: UInt32 = 1452
DISPID_WMPSTRINGCOLLECTION2_GETATTRCOUNTBYTYPE: UInt32 = 1453
DISPID_WMPSTRINGCOLLECTION2_GETITEMINFOBYTYPE: UInt32 = 1454
DISPID_WMPCORE_MIN: UInt32 = 1
DISPID_WMPCORE_MAX: UInt32 = 1454
WMPCOREEVENT_BASE: UInt32 = 5000
DISPID_WMPCOREEVENT_OPENSTATECHANGE: UInt32 = 5001
DISPID_WMPCOREEVENT_STATUSCHANGE: UInt32 = 5002
WMPCOREEVENT_CONTROL_BASE: UInt32 = 5100
DISPID_WMPCOREEVENT_PLAYSTATECHANGE: UInt32 = 5101
DISPID_WMPCOREEVENT_AUDIOLANGUAGECHANGE: UInt32 = 5102
WMPCOREEVENT_SEEK_BASE: UInt32 = 5200
DISPID_WMPCOREEVENT_ENDOFSTREAM: UInt32 = 5201
DISPID_WMPCOREEVENT_POSITIONCHANGE: UInt32 = 5202
DISPID_WMPCOREEVENT_MARKERHIT: UInt32 = 5203
DISPID_WMPCOREEVENT_DURATIONUNITCHANGE: UInt32 = 5204
WMPCOREEVENT_CONTENT_BASE: UInt32 = 5300
DISPID_WMPCOREEVENT_SCRIPTCOMMAND: UInt32 = 5301
WMPCOREEVENT_NETWORK_BASE: UInt32 = 5400
DISPID_WMPCOREEVENT_DISCONNECT: UInt32 = 5401
DISPID_WMPCOREEVENT_BUFFERING: UInt32 = 5402
DISPID_WMPCOREEVENT_NEWSTREAM: UInt32 = 5403
WMPCOREEVENT_ERROR_BASE: UInt32 = 5500
DISPID_WMPCOREEVENT_ERROR: UInt32 = 5501
WMPCOREEVENT_WARNING_BASE: UInt32 = 5600
DISPID_WMPCOREEVENT_WARNING: UInt32 = 5601
WMPCOREEVENT_CDROM_BASE: UInt32 = 5700
DISPID_WMPCOREEVENT_CDROMMEDIACHANGE: UInt32 = 5701
WMPCOREEVENT_PLAYLIST_BASE: UInt32 = 5800
DISPID_WMPCOREEVENT_PLAYLISTCHANGE: UInt32 = 5801
DISPID_WMPCOREEVENT_MEDIACHANGE: UInt32 = 5802
DISPID_WMPCOREEVENT_CURRENTMEDIAITEMAVAILABLE: UInt32 = 5803
DISPID_WMPCOREEVENT_CURRENTPLAYLISTCHANGE: UInt32 = 5804
DISPID_WMPCOREEVENT_CURRENTPLAYLISTITEMAVAILABLE: UInt32 = 5805
DISPID_WMPCOREEVENT_CURRENTITEMCHANGE: UInt32 = 5806
DISPID_WMPCOREEVENT_MEDIACOLLECTIONCHANGE: UInt32 = 5807
DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGADDED: UInt32 = 5808
DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGREMOVED: UInt32 = 5809
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONCHANGE: UInt32 = 5810
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTADDED: UInt32 = 5811
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTREMOVED: UInt32 = 5812
DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANADDEDITEM: UInt32 = 5813
DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANPROGRESS: UInt32 = 5814
DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHFOUNDITEM: UInt32 = 5815
DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHPROGRESS: UInt32 = 5816
DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHCOMPLETE: UInt32 = 5817
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTSETASDELETED: UInt32 = 5818
DISPID_WMPCOREEVENT_MODECHANGE: UInt32 = 5819
DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGCHANGED: UInt32 = 5820
DISPID_WMPCOREEVENT_MEDIAERROR: UInt32 = 5821
DISPID_WMPCOREEVENT_DOMAINCHANGE: UInt32 = 5822
DISPID_WMPCOREEVENT_OPENPLAYLISTSWITCH: UInt32 = 5823
DISPID_WMPCOREEVENT_STRINGCOLLECTIONCHANGE: UInt32 = 5824
DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAADDED: UInt32 = 5825
DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAREMOVED: UInt32 = 5826
WMPOCXEVENT_BASE: UInt32 = 6500
DISPID_WMPOCXEVENT_SWITCHEDTOPLAYERAPPLICATION: UInt32 = 6501
DISPID_WMPOCXEVENT_SWITCHEDTOCONTROL: UInt32 = 6502
DISPID_WMPOCXEVENT_PLAYERDOCKEDSTATECHANGE: UInt32 = 6503
DISPID_WMPOCXEVENT_PLAYERRECONNECT: UInt32 = 6504
DISPID_WMPOCXEVENT_CLICK: UInt32 = 6505
DISPID_WMPOCXEVENT_DOUBLECLICK: UInt32 = 6506
DISPID_WMPOCXEVENT_KEYDOWN: UInt32 = 6507
DISPID_WMPOCXEVENT_KEYPRESS: UInt32 = 6508
DISPID_WMPOCXEVENT_KEYUP: UInt32 = 6509
DISPID_WMPOCXEVENT_MOUSEDOWN: UInt32 = 6510
DISPID_WMPOCXEVENT_MOUSEMOVE: UInt32 = 6511
DISPID_WMPOCXEVENT_MOUSEUP: UInt32 = 6512
DISPID_WMPOCXEVENT_DEVICECONNECT: UInt32 = 6513
DISPID_WMPOCXEVENT_DEVICEDISCONNECT: UInt32 = 6514
DISPID_WMPOCXEVENT_DEVICESTATUSCHANGE: UInt32 = 6515
DISPID_WMPOCXEVENT_DEVICESYNCSTATECHANGE: UInt32 = 6516
DISPID_WMPOCXEVENT_DEVICESYNCERROR: UInt32 = 6517
DISPID_WMPOCXEVENT_CREATEPARTNERSHIPCOMPLETE: UInt32 = 6518
DISPID_WMPOCXEVENT_CDROMRIPSTATECHANGE: UInt32 = 6519
DISPID_WMPOCXEVENT_CDROMRIPMEDIAERROR: UInt32 = 6520
DISPID_WMPOCXEVENT_CDROMBURNSTATECHANGE: UInt32 = 6521
DISPID_WMPOCXEVENT_CDROMBURNMEDIAERROR: UInt32 = 6522
DISPID_WMPOCXEVENT_CDROMBURNERROR: UInt32 = 6523
DISPID_WMPOCXEVENT_LIBRARYCONNECT: UInt32 = 6524
DISPID_WMPOCXEVENT_LIBRARYDISCONNECT: UInt32 = 6525
DISPID_WMPOCXEVENT_FOLDERSCANSTATECHANGE: UInt32 = 6526
DISPID_WMPOCXEVENT_DEVICEESTIMATION: UInt32 = 6527
DISPID_WMPCONTROLS_BASE: UInt32 = 50
DISPID_WMPSETTINGS_BASE: UInt32 = 100
DISPID_WMPPLAYLIST_BASE: UInt32 = 200
DISPID_WMPCDROM_BASE: UInt32 = 250
DISPID_WMPCDROMCOLLECTION_BASE: UInt32 = 300
DISPID_WMPSTRINGCOLLECTION_BASE: UInt32 = 400
DISPID_WMPMEDIACOLLECTION_BASE: UInt32 = 450
DISPID_WMPPLAYLISTARRAY_BASE: UInt32 = 500
DISPID_WMPPLAYLISTCOLLECTION_BASE: UInt32 = 550
DISPID_WMPMEDIA_BASE: UInt32 = 750
DISPID_WMPNETWORK_BASE: UInt32 = 800
DISPID_WMPERROR_BASE: UInt32 = 850
DISPID_WMPERRORITEM_BASE: UInt32 = 900
DISPID_WMPCLOSEDCAPTION_BASE: UInt32 = 950
DISPID_WMPDVD_BASE: UInt32 = 1000
DISPID_WMPMETADATA_BASE: UInt32 = 1050
DISPID_WMPPLAYERAPP_BASE: UInt32 = 1100
DISPID_WMPDOWNLOADMANAGER_BASE: UInt32 = 1150
DISPID_WMPDOWNLOADCOLLECTION_BASE: UInt32 = 1200
DISPID_WMPDOWNLOADITEM_BASE: UInt32 = 1250
DISPID_WMPDOWNLOADITEM2_BASE: UInt32 = 1300
DISPID_WMPQUERY_BASE: UInt32 = 1350
DISPID_WMPMEDIACOLLECTION2_BASE: UInt32 = 1400
DISPID_WMPSTRINGCOLLECTION2_BASE: UInt32 = 1450
CLSID_WMPSkinManager: Guid = Guid('{b2a7fd52-301f-4348-b93a-638c6de49229}')
CLSID_WMPMediaPluginRegistrar: Guid = Guid('{5569e7f5-424b-4b93-89ca-79d17924689a}')
WMP_PLUGINTYPE_DSP: Guid = Guid('{6434baea-4954-498d-abd5-2b07123e1f04}')
WMP_PLUGINTYPE_DSP_OUTOFPROC: Guid = Guid('{ef29b174-c347-44cc-9a4f-2399118ff38c}')
WMP_PLUGINTYPE_RENDERING: Guid = Guid('{a8554541-115d-406a-a4c7-51111c330183}')
kfltTimedLevelMaximumFrequency: Single = 22050
kfltTimedLevelMinimumFrequency: Single = 20
g_szContentPartnerInfo_LoginState: String = 'LoginState'
g_szContentPartnerInfo_MediaPlayerAccountType: String = 'MediaPlayerAccountType'
g_szContentPartnerInfo_AccountType: String = 'AccountType'
g_szContentPartnerInfo_HasCachedCredentials: String = 'HasCachedCredentials'
g_szContentPartnerInfo_LicenseRefreshAdvanceWarning: String = 'LicenseRefreshAdvanceWarning'
g_szContentPartnerInfo_PurchasedTrackRequiresReDownload: String = 'PurchasedTrackRequiresReDownload'
g_szContentPartnerInfo_MaximumTrackPurchasePerPurchase: String = 'MaximumNumberOfTracksPerPurchase'
g_szContentPartnerInfo_AccountBalance: String = 'AccountBalance'
g_szContentPartnerInfo_UserName: String = 'UserName'
g_szMediaPlayerTask_Burn: String = 'Burn'
g_szMediaPlayerTask_Browse: String = 'Browse'
g_szMediaPlayerTask_Sync: String = 'Sync'
g_szItemInfo_PopupURL: String = 'Popup'
g_szItemInfo_AuthenticationSuccessURL: String = 'AuthenticationSuccessURL'
g_szItemInfo_LoginFailureURL: String = 'LoginFailureURL'
g_szItemInfo_HTMLViewURL: String = 'HTMLViewURL'
g_szItemInfo_PopupCaption: String = 'PopupCaption'
g_szItemInfo_ALTLoginURL: String = 'ALTLoginURL'
g_szItemInfo_ALTLoginCaption: String = 'ALTLoginCaption'
g_szItemInfo_ForgetPasswordURL: String = 'ForgotPassword'
g_szItemInfo_CreateAccountURL: String = 'CreateAccount'
g_szItemInfo_ArtistArtURL: String = 'ArtistArt'
g_szItemInfo_AlbumArtURL: String = 'AlbumArt'
g_szItemInfo_ListArtURL: String = 'ListArt'
g_szItemInfo_GenreArtURL: String = 'GenreArt'
g_szItemInfo_SubGenreArtURL: String = 'SubGenreArt'
g_szItemInfo_RadioArtURL: String = 'RadioArt'
g_szItemInfo_TreeListIconURL: String = 'CPListIDIcon'
g_szItemInfo_ErrorDescription: String = 'CPErrorDescription'
g_szItemInfo_ErrorURL: String = 'CPErrorURL'
g_szItemInfo_ErrorURLLinkText: String = 'CPErrorURLLinkText'
g_szUnknownLocation: String = 'UnknownLocation'
g_szRootLocation: String = 'RootLocation'
g_szFlyoutMenu: String = 'FlyoutMenu'
g_szOnlineStore: String = 'OnlineStore'
g_szVideoRecent: String = 'VideoRecent'
g_szVideoRoot: String = 'VideoRoot'
g_szCPListID: String = 'CPListID'
g_szAllCPListIDs: String = 'AllCPListIDs'
g_szCPTrackID: String = 'CPTrackID'
g_szAllCPTrackIDs: String = 'AllCPTrackIDs'
g_szCPArtistID: String = 'CPArtistID'
g_szAllCPArtistIDs: String = 'AllCPArtistIDs'
g_szCPAlbumID: String = 'CPAlbumID'
g_szAllCPAlbumIDs: String = 'AllCPAlbumIDs'
g_szCPGenreID: String = 'CPGenreID'
g_szAllCPGenreIDs: String = 'AllCPGenreIDs'
g_szCPAlbumSubGenreID: String = 'CPAlbumSubGenreID'
g_szAllCPAlbumSubGenreIDs: String = 'AllCPAlbumSubGenreIDs'
g_szReleaseDateYear: String = 'ReleaseDateYear'
g_szAllReleaseDateYears: String = 'AllReleaseDateYears'
g_szCPRadioID: String = 'CPRadioID'
g_szAllCPRadioIDs: String = 'AllCPRadioIDs'
g_szAuthor: String = 'Author'
g_szAllAuthors: String = 'AllAuthors'
g_szWMParentalRating: String = 'WMParentalRating'
g_szAllWMParentalRatings: String = 'AllWMParentalRatings'
g_szAllUserEffectiveRatingStarss: String = 'AllUserEffectiveRatingStarss'
g_szUserEffectiveRatingStars: String = 'UserEffectiveRatingStars'
g_szUserPlaylist: String = 'UserPlaylist'
g_szViewMode_Report: String = 'ViewModeReport'
g_szViewMode_Details: String = 'ViewModeDetails'
g_szViewMode_Icon: String = 'ViewModeIcon'
g_szViewMode_Tile: String = 'ViewModeTile'
g_szViewMode_OrderedList: String = 'ViewModeOrderedList'
g_szContentPrice_Unknown: String = 'PriceUnknown'
g_szContentPrice_CannotBuy: String = 'PriceCannotBuy'
g_szContentPrice_Free: String = 'PriceFree'
g_szRefreshLicensePlay: String = 'RefreshForPlay'
g_szRefreshLicenseBurn: String = 'RefreshForBurn'
g_szRefreshLicenseSync: String = 'RefreshForSync'
g_szVerifyPermissionSync: String = 'VerifyPermissionSync'
g_szStationEvent_Started: String = 'TrackStarted'
g_szStationEvent_Complete: String = 'TrackComplete'
g_szStationEvent_Skipped: String = 'TrackSkipped'
WMProfile_V40_DialUpMBR: Guid = Guid('{fd7f47f1-72a6-45a4-80f0-3aecefc32c07}')
WMProfile_V40_IntranetMBR: Guid = Guid('{82cd3321-a94a-4ffc-9c2b-092c10ca16e7}')
WMProfile_V40_2856100MBR: Guid = Guid('{5a1c2206-dc5e-4186-beb2-4c5a994b132e}')
WMProfile_V40_6VoiceAudio: Guid = Guid('{d508978a-11a0-4d15-b0da-acdc99d4f890}')
WMProfile_V40_16AMRadio: Guid = Guid('{0f4be81f-d57d-41e1-b2e3-2fad986bfec2}')
WMProfile_V40_288FMRadioMono: Guid = Guid('{7fa57fc8-6ea4-4645-8abf-b6e5a8f814a1}')
WMProfile_V40_288FMRadioStereo: Guid = Guid('{22fcf466-aa40-431f-a289-06d0ea1a1e40}')
WMProfile_V40_56DialUpStereo: Guid = Guid('{e8026f87-e905-4594-a3c7-00d00041d1d9}')
WMProfile_V40_64Audio: Guid = Guid('{4820b3f7-cbec-41dc-9391-78598714c8e5}')
WMProfile_V40_96Audio: Guid = Guid('{0efa0ee3-9e64-41e2-837f-3c0038f327ba}')
WMProfile_V40_128Audio: Guid = Guid('{93ddbe12-13dc-4e32-a35e-40378e34279a}')
WMProfile_V40_288VideoVoice: Guid = Guid('{bb2bc274-0eb6-4da9-b550-ecf7f2b9948f}')
WMProfile_V40_288VideoAudio: Guid = Guid('{ac617f2d-6cbe-4e84-8e9a-ce151a12a354}')
WMProfile_V40_288VideoWebServer: Guid = Guid('{abf2f00d-d555-4815-94ce-8275f3a70bfe}')
WMProfile_V40_56DialUpVideo: Guid = Guid('{e21713bb-652f-4dab-99de-71e04400270f}')
WMProfile_V40_56DialUpVideoWebServer: Guid = Guid('{b756ff10-520f-4749-a399-b780e2fc9250}')
WMProfile_V40_100Video: Guid = Guid('{8f99ddd8-6684-456b-a0a3-33e1316895f0}')
WMProfile_V40_250Video: Guid = Guid('{541841c3-9339-4f7b-9a22-b11540894e42}')
WMProfile_V40_512Video: Guid = Guid('{70440e6d-c4ef-4f84-8cd0-d5c28686e784}')
WMProfile_V40_1MBVideo: Guid = Guid('{b4482a4c-cc17-4b07-a94e-9818d5e0f13f}')
WMProfile_V40_3MBVideo: Guid = Guid('{55374ac0-309b-4396-b88f-e6e292113f28}')
WMProfile_V70_DialUpMBR: Guid = Guid('{5b16e74b-4068-45b5-b80e-7bf8c80d2c2f}')
WMProfile_V70_IntranetMBR: Guid = Guid('{045880dc-34b6-4ca9-a326-73557ed143f3}')
WMProfile_V70_2856100MBR: Guid = Guid('{07df7a25-3fe2-4a5b-8b1e-348b0721ca70}')
WMProfile_V70_288VideoVoice: Guid = Guid('{b952f38e-7dbc-4533-a9ca-b00b1c6e9800}')
WMProfile_V70_288VideoAudio: Guid = Guid('{58bba0ee-896a-4948-9953-85b736f83947}')
WMProfile_V70_288VideoWebServer: Guid = Guid('{70a32e2b-e2df-4ebd-9105-d9ca194a2d50}')
WMProfile_V70_56VideoWebServer: Guid = Guid('{def99e40-57bc-4ab3-b2d1-b6e3caf64257}')
WMProfile_V70_64VideoISDN: Guid = Guid('{c2b7a7e9-7b8e-4992-a1a1-068217a3b311}')
WMProfile_V70_100Video: Guid = Guid('{d9f3c932-5ea9-4c6d-89b4-2686e515426e}')
WMProfile_V70_256Video: Guid = Guid('{afe69b3a-403f-4a1b-8007-0e21cfb3df84}')
WMProfile_V70_384Video: Guid = Guid('{f3d45fbb-8782-44df-97c6-8678e2f9b13d}')
WMProfile_V70_768Video: Guid = Guid('{0326ebb6-f76e-4964-b0db-e729978d35ee}')
WMProfile_V70_1500Video: Guid = Guid('{0b89164a-5490-4686-9e37-5a80884e5146}')
WMProfile_V70_2000Video: Guid = Guid('{aa980124-bf10-4e4f-9afd-4329a7395cff}')
WMProfile_V70_700FilmContentVideo: Guid = Guid('{7a747920-2449-4d76-99cb-fdb0c90484d4}')
WMProfile_V70_1500FilmContentVideo: Guid = Guid('{f6a5f6df-ee3f-434c-a433-523ce55f516b}')
WMProfile_V70_6VoiceAudio: Guid = Guid('{eaba9fbf-b64f-49b3-aa0c-73fbdd150ad0}')
WMProfile_V70_288FMRadioMono: Guid = Guid('{c012a833-a03b-44a5-96dc-ed95cc65582d}')
WMProfile_V70_288FMRadioStereo: Guid = Guid('{e96d67c9-1a39-4dc4-b900-b1184dc83620}')
WMProfile_V70_56DialUpStereo: Guid = Guid('{674ee767-0949-4fac-875e-f4c9c292013b}')
WMProfile_V70_64AudioISDN: Guid = Guid('{91dea458-9d60-4212-9c59-d40919c939e4}')
WMProfile_V70_64Audio: Guid = Guid('{b29cffc6-f131-41db-b5e8-99d8b0b945f4}')
WMProfile_V70_96Audio: Guid = Guid('{a9d4b819-16cc-4a59-9f37-693dbb0302d6}')
WMProfile_V70_128Audio: Guid = Guid('{c64cf5da-df45-40d3-8027-de698d68dc66}')
WMProfile_V70_225VideoPDA: Guid = Guid('{f55ea573-4c02-42b5-9026-a8260c438a9f}')
WMProfile_V70_150VideoPDA: Guid = Guid('{0f472967-e3c6-4797-9694-f0304c5e2f17}')
WMProfile_V80_255VideoPDA: Guid = Guid('{feedbcdf-3fac-4c93-ac0d-47941ec72c0b}')
WMProfile_V80_150VideoPDA: Guid = Guid('{aee16dfa-2c14-4a2f-ad3f-a3034031784f}')
WMProfile_V80_28856VideoMBR: Guid = Guid('{d66920c4-c21f-4ec8-a0b4-95cf2bd57fc4}')
WMProfile_V80_100768VideoMBR: Guid = Guid('{5bdb5a0e-979e-47d3-9596-73b386392a55}')
WMProfile_V80_288100VideoMBR: Guid = Guid('{d8722c69-2419-4b36-b4e0-6e17b60564e5}')
WMProfile_V80_288Video: Guid = Guid('{3df678d9-1352-4186-bbf8-74f0c19b6ae2}')
WMProfile_V80_56Video: Guid = Guid('{254e8a96-2612-405c-8039-f0bf725ced7d}')
WMProfile_V80_100Video: Guid = Guid('{a2e300b4-c2d4-4fc0-b5dd-ecbd948dc0df}')
WMProfile_V80_256Video: Guid = Guid('{bbc75500-33d2-4466-b86b-122b201cc9ae}')
WMProfile_V80_384Video: Guid = Guid('{29b00c2b-09a9-48bd-ad09-cdae117d1da7}')
WMProfile_V80_768Video: Guid = Guid('{74d01102-e71a-4820-8f0d-13d2ec1e4872}')
WMProfile_V80_700NTSCVideo: Guid = Guid('{c8c2985f-e5d9-4538-9e23-9b21bf78f745}')
WMProfile_V80_1400NTSCVideo: Guid = Guid('{931d1bee-617a-4bcd-9905-ccd0786683ee}')
WMProfile_V80_384PALVideo: Guid = Guid('{9227c692-ae62-4f72-a7ea-736062d0e21e}')
WMProfile_V80_700PALVideo: Guid = Guid('{ec298949-639b-45e2-96fd-4ab32d5919c2}')
WMProfile_V80_288MonoAudio: Guid = Guid('{7ea3126d-e1ba-4716-89af-f65cee0c0c67}')
WMProfile_V80_288StereoAudio: Guid = Guid('{7e4cab5c-35dc-45bb-a7c0-19b28070d0cc}')
WMProfile_V80_32StereoAudio: Guid = Guid('{60907f9f-b352-47e5-b210-0ef1f47e9f9d}')
WMProfile_V80_48StereoAudio: Guid = Guid('{5ee06be5-492b-480a-8a8f-12f373ecf9d4}')
WMProfile_V80_64StereoAudio: Guid = Guid('{09bb5bc4-3176-457f-8dd6-3cd919123e2d}')
WMProfile_V80_96StereoAudio: Guid = Guid('{1fc81930-61f2-436f-9d33-349f2a1c0f10}')
WMProfile_V80_128StereoAudio: Guid = Guid('{407b9450-8bdc-4ee5-88b8-6f527bd941f2}')
WMProfile_V80_288VideoOnly: Guid = Guid('{8c45b4c7-4aeb-4f78-a5ec-88420b9dadef}')
WMProfile_V80_56VideoOnly: Guid = Guid('{6e2a6955-81df-4943-ba50-68a986a708f6}')
WMProfile_V80_FAIRVBRVideo: Guid = Guid('{3510a862-5850-4886-835f-d78ec6a64042}')
WMProfile_V80_HIGHVBRVideo: Guid = Guid('{0f10d9d3-3b04-4fb0-a3d3-88d4ac854acc}')
WMProfile_V80_BESTVBRVideo: Guid = Guid('{048439ba-309c-440e-9cb4-3dcca3756423}')
FEEDS_BACKGROUNDSYNC_ACTION = Int32
FBSA_DISABLE: FEEDS_BACKGROUNDSYNC_ACTION = 0
FBSA_ENABLE: FEEDS_BACKGROUNDSYNC_ACTION = 1
FBSA_RUNNOW: FEEDS_BACKGROUNDSYNC_ACTION = 2
FEEDS_BACKGROUNDSYNC_STATUS = Int32
FBSS_DISABLED: FEEDS_BACKGROUNDSYNC_STATUS = 0
FBSS_ENABLED: FEEDS_BACKGROUNDSYNC_STATUS = 1
FEEDS_DOWNLOAD_ERROR = Int32
FDE_NONE: FEEDS_DOWNLOAD_ERROR = 0
FDE_DOWNLOAD_FAILED: FEEDS_DOWNLOAD_ERROR = 1
FDE_INVALID_FEED_FORMAT: FEEDS_DOWNLOAD_ERROR = 2
FDE_NORMALIZATION_FAILED: FEEDS_DOWNLOAD_ERROR = 3
FDE_PERSISTENCE_FAILED: FEEDS_DOWNLOAD_ERROR = 4
FDE_DOWNLOAD_BLOCKED: FEEDS_DOWNLOAD_ERROR = 5
FDE_CANCELED: FEEDS_DOWNLOAD_ERROR = 6
FDE_UNSUPPORTED_AUTH: FEEDS_DOWNLOAD_ERROR = 7
FDE_BACKGROUND_DOWNLOAD_DISABLED: FEEDS_DOWNLOAD_ERROR = 8
FDE_NOT_EXIST: FEEDS_DOWNLOAD_ERROR = 9
FDE_UNSUPPORTED_MSXML: FEEDS_DOWNLOAD_ERROR = 10
FDE_UNSUPPORTED_DTD: FEEDS_DOWNLOAD_ERROR = 11
FDE_DOWNLOAD_SIZE_LIMIT_EXCEEDED: FEEDS_DOWNLOAD_ERROR = 12
FDE_ACCESS_DENIED: FEEDS_DOWNLOAD_ERROR = 13
FDE_AUTH_FAILED: FEEDS_DOWNLOAD_ERROR = 14
FDE_INVALID_AUTH: FEEDS_DOWNLOAD_ERROR = 15
FEEDS_DOWNLOAD_STATUS = Int32
FDS_NONE: FEEDS_DOWNLOAD_STATUS = 0
FDS_PENDING: FEEDS_DOWNLOAD_STATUS = 1
FDS_DOWNLOADING: FEEDS_DOWNLOAD_STATUS = 2
FDS_DOWNLOADED: FEEDS_DOWNLOAD_STATUS = 3
FDS_DOWNLOAD_FAILED: FEEDS_DOWNLOAD_STATUS = 4
FEEDS_ERROR_CODE = Int32
FEC_E_ERRORBASE: FEEDS_ERROR_CODE = -1073479168
FEC_E_INVALIDMSXMLPROPERTY: FEEDS_ERROR_CODE = -1073479168
FEC_E_DOWNLOADSIZELIMITEXCEEDED: FEEDS_ERROR_CODE = -1073479167
FEEDS_EVENTS_ITEM_COUNT_FLAGS = Int32
FEICF_READ_ITEM_COUNT_CHANGED: FEEDS_EVENTS_ITEM_COUNT_FLAGS = 1
FEICF_UNREAD_ITEM_COUNT_CHANGED: FEEDS_EVENTS_ITEM_COUNT_FLAGS = 2
FEEDS_EVENTS_MASK = Int32
FEM_FOLDEREVENTS: FEEDS_EVENTS_MASK = 1
FEM_FEEDEVENTS: FEEDS_EVENTS_MASK = 2
FEEDS_EVENTS_SCOPE = Int32
FES_ALL: FEEDS_EVENTS_SCOPE = 0
FES_SELF_ONLY: FEEDS_EVENTS_SCOPE = 1
FES_SELF_AND_CHILDREN_ONLY: FEEDS_EVENTS_SCOPE = 2
FEEDS_SYNC_SETTING = Int32
FSS_DEFAULT: FEEDS_SYNC_SETTING = 0
FSS_INTERVAL: FEEDS_SYNC_SETTING = 1
FSS_MANUAL: FEEDS_SYNC_SETTING = 2
FSS_SUGGESTED: FEEDS_SYNC_SETTING = 3
FEEDS_XML_FILTER_FLAGS = Int32
FXFF_ALL: FEEDS_XML_FILTER_FLAGS = 0
FXFF_UNREAD: FEEDS_XML_FILTER_FLAGS = 1
FXFF_READ: FEEDS_XML_FILTER_FLAGS = 2
FEEDS_XML_INCLUDE_FLAGS = Int32
FXIF_NONE: FEEDS_XML_INCLUDE_FLAGS = 0
FXIF_CF_EXTENSIONS: FEEDS_XML_INCLUDE_FLAGS = 1
FEEDS_XML_SORT_ORDER = Int32
FXSO_NONE: FEEDS_XML_SORT_ORDER = 0
FXSO_ASCENDING: FEEDS_XML_SORT_ORDER = 1
FXSO_DESCENDING: FEEDS_XML_SORT_ORDER = 2
FEEDS_XML_SORT_PROPERTY = Int32
FXSP_NONE: FEEDS_XML_SORT_PROPERTY = 0
FXSP_PUBDATE: FEEDS_XML_SORT_PROPERTY = 1
FXSP_DOWNLOADTIME: FEEDS_XML_SORT_PROPERTY = 2
FeedFolderWatcher = Guid('{281001ed-7765-4cb0-84af-e9b387af01ff}')
FeedWatcher = Guid('{18a6737b-f433-4687-89bc-a1b4dfb9f123}')
FeedsManager = Guid('{faeb54c4-f66f-4806-83a0-805299f5e3ad}')
class IFeed(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{f7f915d8-2ede-42bc-98e7-a5d05063a757}')
    @commethod(7)
    def Xml(self, count: Int32, sortProperty: Windows.Win32.Media.MediaPlayer.FEEDS_XML_SORT_PROPERTY, sortOrder: Windows.Win32.Media.MediaPlayer.FEEDS_XML_SORT_ORDER, filterFlags: Windows.Win32.Media.MediaPlayer.FEEDS_XML_FILTER_FLAGS, includeFlags: Windows.Win32.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, xml: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Name(self, name: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def Rename(self, name: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Url(self, feedUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def put_Url(self, feedUrl: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_LocalId(self, feedGuid: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_Path(self, path: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def Move(self, newParentPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_Parent(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_LastWriteTime(self, lastWrite: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def Delete(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def Download(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def AsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def CancelAsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_SyncSetting(self, syncSetting: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_SYNC_SETTING)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def put_SyncSetting(self, syncSetting: Windows.Win32.Media.MediaPlayer.FEEDS_SYNC_SETTING) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def get_Interval(self, minutes: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def put_Interval(self, minutes: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def get_LastDownloadTime(self, lastDownload: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def get_LocalEnclosurePath(self, path: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def get_Items(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def GetItem(self, itemId: Int32, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def get_Title(self, title: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def get_Description(self, description: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def get_Link(self, homePage: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def get_Image(self, imageUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def get_LastBuildDate(self, lastBuildDate: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def get_PubDate(self, lastPopulateDate: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def get_Ttl(self, ttl: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def get_Language(self, language: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def get_Copyright(self, copyright: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def get_MaxItemCount(self, count: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(39)
    def put_MaxItemCount(self, count: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(40)
    def get_DownloadEnclosuresAutomatically(self, downloadEnclosuresAutomatically: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(41)
    def put_DownloadEnclosuresAutomatically(self, downloadEnclosuresAutomatically: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(42)
    def get_DownloadStatus(self, status: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(43)
    def get_LastDownloadError(self, error: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(44)
    def Merge(self, feedXml: Windows.Win32.Foundation.BSTR, feedUrl: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(45)
    def get_DownloadUrl(self, feedUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(46)
    def get_IsList(self, isList: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(47)
    def MarkAllItemsRead(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(48)
    def GetWatcher(self, scope: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_MASK, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(49)
    def get_UnreadItemCount(self, count: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(50)
    def get_ItemCount(self, count: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IFeed2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IFeed
    _iid_ = Guid('{33f2ea09-1398-4ab9-b6a4-f94b49d0a42e}')
    @commethod(51)
    def GetItemByEffectiveId(self, itemEffectiveId: Int32, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(52)
    def get_LastItemDownloadTime(self, lastItemDownloadTime: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(53)
    def get_Username(self, username: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(54)
    def get_Password(self, password: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(55)
    def SetCredentials(self, username: Windows.Win32.Foundation.BSTR, password: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(56)
    def ClearCredentials(self) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedEnclosure(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{361c26f7-90a4-4e67-ae09-3a36a546436a}')
    @commethod(7)
    def get_Url(self, enclosureUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Type(self, mimeType: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Length(self, length: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def AsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def CancelAsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_DownloadStatus(self, status: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_LastDownloadError(self, error: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_LocalPath(self, localPath: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_Parent(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_DownloadUrl(self, enclosureUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_DownloadMimeType(self, mimeType: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def RemoveFile(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def SetFile(self, downloadUrl: Windows.Win32.Foundation.BSTR, downloadFilePath: Windows.Win32.Foundation.BSTR, downloadMimeType: Windows.Win32.Foundation.BSTR, enclosureFilename: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedEvents(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{abf35c99-0681-47ea-9a8c-1436a375a99e}')
    @commethod(7)
    def Error(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def FeedDeleted(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def FeedRenamed(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def FeedUrlChanged(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def FeedMoved(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def FeedDownloading(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def FeedDownloadCompleted(self, path: Windows.Win32.Foundation.BSTR, error: Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def FeedItemCountChanged(self, path: Windows.Win32.Foundation.BSTR, itemCountType: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedFolder(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{81f04ad1-4194-4d7d-86d6-11813cec163c}')
    @commethod(7)
    def get_Feeds(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Subfolders(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def CreateFeed(self, feedName: Windows.Win32.Foundation.BSTR, feedUrl: Windows.Win32.Foundation.BSTR, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def CreateSubfolder(self, folderName: Windows.Win32.Foundation.BSTR, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def ExistsFeed(self, feedName: Windows.Win32.Foundation.BSTR, exists: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def GetFeed(self, feedName: Windows.Win32.Foundation.BSTR, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def ExistsSubfolder(self, folderName: Windows.Win32.Foundation.BSTR, exists: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def GetSubfolder(self, folderName: Windows.Win32.Foundation.BSTR, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def Delete(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_Name(self, folderName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def Rename(self, folderName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_Path(self, folderPath: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def Move(self, newParentPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_Parent(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_IsRoot(self, isRoot: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_TotalUnreadItemCount(self, count: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def get_TotalItemCount(self, count: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def GetWatcher(self, scope: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_MASK, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedFolderEvents(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{20a59fa6-a844-4630-9e98-175f70b4d55b}')
    @commethod(7)
    def Error(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def FolderAdded(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def FolderDeleted(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def FolderRenamed(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def FolderMovedFrom(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def FolderMovedTo(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def FolderItemCountChanged(self, path: Windows.Win32.Foundation.BSTR, itemCountType: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def FeedAdded(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def FeedDeleted(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def FeedRenamed(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def FeedUrlChanged(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def FeedMovedFrom(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def FeedMovedTo(self, path: Windows.Win32.Foundation.BSTR, oldPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def FeedDownloading(self, path: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def FeedDownloadCompleted(self, path: Windows.Win32.Foundation.BSTR, error: Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def FeedItemCountChanged(self, path: Windows.Win32.Foundation.BSTR, itemCountType: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedItem(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{0a1e6cad-0a47-4da2-a13d-5baaa5c8bd4f}')
    @commethod(7)
    def Xml(self, includeFlags: Windows.Win32.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, xml: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_Title(self, title: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_Link(self, linkUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_Guid(self, itemGuid: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_Description(self, description: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_PubDate(self, pubDate: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_Comments(self, comments: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_Author(self, author: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_Enclosure(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_IsRead(self, isRead: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def put_IsRead(self, isRead: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_LocalId(self, itemId: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_Parent(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def Delete(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_DownloadUrl(self, itemUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_LastDownloadTime(self, lastDownload: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def get_Modified(self, modified: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedItem2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IFeedItem
    _iid_ = Guid('{79ac9ef4-f9c1-4d2b-a50b-a7ffba4dcf37}')
    @commethod(24)
    def get_EffectiveId(self, effectiveId: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedsEnum(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{e3cd0028-2eed-4c60-8fae-a3225309a836}')
    @commethod(7)
    def get_Count(self, count: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def Item(self, index: Int32, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get__NewEnum(self, enumVar: POINTER(Windows.Win32.System.Ole.IEnumVARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IFeedsManager(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{a74029cc-1f1a-4906-88f0-810638d86591}')
    @commethod(7)
    def get_RootFolder(self, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def IsSubscribed(self, feedUrl: Windows.Win32.Foundation.BSTR, subscribed: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def ExistsFeed(self, feedPath: Windows.Win32.Foundation.BSTR, exists: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def GetFeed(self, feedPath: Windows.Win32.Foundation.BSTR, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def GetFeedByUrl(self, feedUrl: Windows.Win32.Foundation.BSTR, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def ExistsFolder(self, folderPath: Windows.Win32.Foundation.BSTR, exists: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def GetFolder(self, folderPath: Windows.Win32.Foundation.BSTR, disp: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def DeleteFeed(self, feedPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def DeleteFolder(self, folderPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def BackgroundSync(self, action: Windows.Win32.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_ACTION) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_BackgroundSyncStatus(self, status: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_STATUS)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_DefaultInterval(self, minutes: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def put_DefaultInterval(self, minutes: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def AsyncSyncAll(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def Normalize(self, feedXmlIn: Windows.Win32.Foundation.BSTR, feedXmlOut: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_ItemCountLimit(self, itemCountLimit: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPAudioRenderConfig(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{e79c6349-5997-4ce4-917c-22a3391ec564}')
    @commethod(3)
    def get_audioOutputDevice(self, pbstrOutputDevice: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def put_audioOutputDevice(self, bstrOutputDevice: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPCdrom(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{cfab6e98-8730-11d3-b388-00c04f68574b}')
    @commethod(7)
    def get_driveSpecifier(self, pbstrDrive: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_playlist(self, ppPlaylist: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def eject(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPCdromBurn(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{bd94dbeb-417f-4928-aa06-087d56ed9b59}')
    @commethod(3)
    def isAvailable(self, bstrItem: Windows.Win32.Foundation.BSTR, pIsAvailable: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def getItemInfo(self, bstrItem: Windows.Win32.Foundation.BSTR, pbstrVal: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def get_label(self, pbstrLabel: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def put_label(self, bstrLabel: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def get_burnFormat(self, pwmpbf: POINTER(Windows.Win32.Media.MediaPlayer.WMPBurnFormat)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_burnFormat(self, wmpbf: Windows.Win32.Media.MediaPlayer.WMPBurnFormat) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_burnPlaylist(self, ppPlaylist: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_burnPlaylist(self, pPlaylist: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def refreshStatus(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_burnState(self, pwmpbs: POINTER(Windows.Win32.Media.MediaPlayer.WMPBurnState)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_burnProgress(self, plProgress: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def startBurn(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def stopBurn(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def erase(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPCdromCollection(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{ee4c8fe2-34b2-11d3-a3bf-006097c9b344}')
    @commethod(7)
    def get_count(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def item(self, lIndex: Int32, ppItem: POINTER(Windows.Win32.Media.MediaPlayer.IWMPCdrom_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def getByDriveSpecifier(self, bstrDriveSpecifier: Windows.Win32.Foundation.BSTR, ppCdrom: POINTER(Windows.Win32.Media.MediaPlayer.IWMPCdrom_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPCdromRip(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{56e2294f-69ed-4629-a869-aea72c0dcc2c}')
    @commethod(3)
    def get_ripState(self, pwmprs: POINTER(Windows.Win32.Media.MediaPlayer.WMPRipState)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def get_ripProgress(self, plProgress: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def startRip(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def stopRip(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPClosedCaption(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{4f2df574-c588-11d3-9ed0-00c04fb6e937}')
    @commethod(7)
    def get_SAMIStyle(self, pbstrSAMIStyle: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def put_SAMIStyle(self, bstrSAMIStyle: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_SAMILang(self, pbstrSAMILang: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_SAMILang(self, bstrSAMILang: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_SAMIFileName(self, pbstrSAMIFileName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def put_SAMIFileName(self, bstrSAMIFileName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_captioningId(self, pbstrCaptioningID: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_captioningId(self, bstrCaptioningID: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPClosedCaption2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPClosedCaption
    _iid_ = Guid('{350ba78b-6bc8-4113-a5f5-312056934eb6}')
    @commethod(15)
    def get_SAMILangCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def getSAMILangName(self, nIndex: Int32, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def getSAMILangID(self, nIndex: Int32, plLangID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_SAMIStyleCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def getSAMIStyleName(self, nIndex: Int32, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPContentContainer(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{ad7f4d9c-1a9f-4ed2-9815-ecc0b58cb616}')
    @commethod(3)
    def GetID(self, pContentID: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetPrice(self, pbstrPrice: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetType(self, pbstrType: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetContentCount(self, pcContent: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def GetContentPrice(self, idxContent: UInt32, pbstrPrice: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def GetContentID(self, idxContent: UInt32, pContentID: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPContentContainerList(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{a9937f78-0802-4af8-8b8d-e3f045bc8ab5}')
    @commethod(3)
    def GetTransactionType(self, pwmptt: POINTER(Windows.Win32.Media.MediaPlayer.WMPTransactionType)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetContainerCount(self, pcContainer: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetContainer(self, idxContainer: UInt32, ppContent: POINTER(Windows.Win32.Media.MediaPlayer.IWMPContentContainer_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPContentPartner(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{55455073-41b5-4e75-87b8-f13bdb291d08}')
    @commethod(3)
    def SetCallback(self, pCallback: Windows.Win32.Media.MediaPlayer.IWMPContentPartnerCallback_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Notify(self, type: Windows.Win32.Media.MediaPlayer.WMPPartnerNotification, pContext: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetItemInfo(self, bstrInfoName: Windows.Win32.Foundation.BSTR, pContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), pData: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetContentPartnerInfo(self, bstrInfoName: Windows.Win32.Foundation.BSTR, pData: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def GetCommands(self, location: Windows.Win32.Foundation.BSTR, pLocationContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), itemLocation: Windows.Win32.Foundation.BSTR, cItemIDs: UInt32, prgItemIDs: POINTER(UInt32), pcItemIDs: POINTER(UInt32), pprgItems: POINTER(POINTER(Windows.Win32.Media.MediaPlayer.WMPContextMenuInfo_head))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def InvokeCommand(self, dwCommandID: UInt32, location: Windows.Win32.Foundation.BSTR, pLocationContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), itemLocation: Windows.Win32.Foundation.BSTR, cItemIDs: UInt32, rgItemIDs: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def CanBuySilent(self, pInfo: Windows.Win32.Media.MediaPlayer.IWMPContentContainerList_head, pbstrTotalPrice: POINTER(Windows.Win32.Foundation.BSTR), pSilentOK: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def Buy(self, pInfo: Windows.Win32.Media.MediaPlayer.IWMPContentContainerList_head, cookie: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def GetStreamingURL(self, st: Windows.Win32.Media.MediaPlayer.WMPStreamingType, pStreamContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), pbstrURL: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def Download(self, pInfo: Windows.Win32.Media.MediaPlayer.IWMPContentContainerList_head, cookie: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def DownloadTrackComplete(self, hrResult: Windows.Win32.Foundation.HRESULT, contentID: UInt32, downloadTrackParam: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def RefreshLicense(self, dwCookie: UInt32, fLocal: Windows.Win32.Foundation.VARIANT_BOOL, bstrURL: Windows.Win32.Foundation.BSTR, type: Windows.Win32.Media.MediaPlayer.WMPStreamingType, contentID: UInt32, bstrRefreshReason: Windows.Win32.Foundation.BSTR, pReasonContext: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def GetCatalogURL(self, dwCatalogVersion: UInt32, dwCatalogSchemaVersion: UInt32, catalogLCID: UInt32, pdwNewCatalogVersion: POINTER(UInt32), pbstrCatalogURL: POINTER(Windows.Win32.Foundation.BSTR), pExpirationDate: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def GetTemplate(self, task: Windows.Win32.Media.MediaPlayer.WMPTaskType, location: Windows.Win32.Foundation.BSTR, pContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), clickLocation: Windows.Win32.Foundation.BSTR, pClickContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), bstrFilter: Windows.Win32.Foundation.BSTR, bstrViewParams: Windows.Win32.Foundation.BSTR, pbstrTemplateURL: POINTER(Windows.Win32.Foundation.BSTR), pTemplateSize: POINTER(Windows.Win32.Media.MediaPlayer.WMPTemplateSize)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def UpdateDevice(self, bstrDeviceName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def GetListContents(self, location: Windows.Win32.Foundation.BSTR, pContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), bstrListType: Windows.Win32.Foundation.BSTR, bstrParams: Windows.Win32.Foundation.BSTR, dwListCookie: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def Login(self, userInfo: Windows.Win32.System.Com.BLOB, pwdInfo: Windows.Win32.System.Com.BLOB, fUsedCachedCreds: Windows.Win32.Foundation.VARIANT_BOOL, fOkToCache: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def Authenticate(self, userInfo: Windows.Win32.System.Com.BLOB, pwdInfo: Windows.Win32.System.Com.BLOB) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def Logout(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def SendMessage(self, bstrMsg: Windows.Win32.Foundation.BSTR, bstrParam: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def StationEvent(self, bstrStationEventType: Windows.Win32.Foundation.BSTR, StationId: UInt32, PlaylistIndex: UInt32, TrackID: UInt32, TrackData: Windows.Win32.Foundation.BSTR, dwSecondsPlayed: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def CompareContainerListPrices(self, pListBase: Windows.Win32.Media.MediaPlayer.IWMPContentContainerList_head, pListCompare: Windows.Win32.Media.MediaPlayer.IWMPContentContainerList_head, pResult: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def VerifyPermission(self, bstrPermission: Windows.Win32.Foundation.BSTR, pContext: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPContentPartnerCallback(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{9e8f7da2-0695-403c-b697-da10fafaa676}')
    @commethod(3)
    def Notify(self, type: Windows.Win32.Media.MediaPlayer.WMPCallbackNotification, pContext: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def BuyComplete(self, hrResult: Windows.Win32.Foundation.HRESULT, dwBuyCookie: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def DownloadTrack(self, cookie: UInt32, bstrTrackURL: Windows.Win32.Foundation.BSTR, dwServiceTrackID: UInt32, bstrDownloadParams: Windows.Win32.Foundation.BSTR, hrDownload: Windows.Win32.Foundation.HRESULT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetCatalogVersion(self, pdwVersion: POINTER(UInt32), pdwSchemaVersion: POINTER(UInt32), plcid: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def UpdateDeviceComplete(self, bstrDeviceName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def ChangeView(self, bstrType: Windows.Win32.Foundation.BSTR, bstrID: Windows.Win32.Foundation.BSTR, bstrFilter: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def AddListContents(self, dwListCookie: UInt32, cItems: UInt32, prgItems: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def ListContentsComplete(self, dwListCookie: UInt32, hrSuccess: Windows.Win32.Foundation.HRESULT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def SendMessageComplete(self, bstrMsg: Windows.Win32.Foundation.BSTR, bstrParam: Windows.Win32.Foundation.BSTR, bstrResult: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def GetContentIDsInLibrary(self, pcContentIDs: POINTER(UInt32), pprgIDs: POINTER(POINTER(UInt32))) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def RefreshLicenseComplete(self, dwCookie: UInt32, contentID: UInt32, hrRefresh: Windows.Win32.Foundation.HRESULT) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def ShowPopup(self, lIndex: Int32, bstrParameters: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def VerifyPermissionComplete(self, bstrPermission: Windows.Win32.Foundation.BSTR, pContext: POINTER(Windows.Win32.System.Variant.VARIANT_head), hrPermission: Windows.Win32.Foundation.HRESULT) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPControls(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{74c09e02-f828-11d2-a74b-00a0c905f36e}')
    @commethod(7)
    def get_isAvailable(self, bstrItem: Windows.Win32.Foundation.BSTR, pIsAvailable: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def play(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def stop(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def pause(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def fastForward(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def fastReverse(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_currentPosition(self, pdCurrentPosition: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def put_currentPosition(self, dCurrentPosition: Double) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_currentPositionString(self, pbstrCurrentPosition: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def next(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def previous(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_currentItem(self, ppIWMPMedia: POINTER(Windows.Win32.Media.MediaPlayer.IWMPMedia_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def put_currentItem(self, pIWMPMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_currentMarker(self, plMarker: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def put_currentMarker(self, lMarker: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def playItem(self, pIWMPMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPControls2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPControls
    _iid_ = Guid('{6f030d25-0890-480f-9775-1f7e40ab5b8e}')
    @commethod(23)
    def step(self, lStep: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPControls3(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPControls2
    _iid_ = Guid('{a1d1110e-d545-476a-9a78-ac3e4cb1e6bd}')
    @commethod(24)
    def get_audioLanguageCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def getAudioLanguageID(self, lIndex: Int32, plLangID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def getAudioLanguageDescription(self, lIndex: Int32, pbstrLangDesc: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def get_currentAudioLanguage(self, plLangID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def put_currentAudioLanguage(self, lLangID: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def get_currentAudioLanguageIndex(self, plIndex: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def put_currentAudioLanguageIndex(self, lIndex: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def getLanguageName(self, lLangID: Int32, pbstrLangName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def get_currentPositionTimecode(self, bstrTimecode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def put_currentPositionTimecode(self, bstrTimecode: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPConvert(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{d683162f-57d4-4108-8373-4a9676d1c2e9}')
    @commethod(3)
    def ConvertFile(self, bstrInputFile: Windows.Win32.Foundation.BSTR, bstrDestinationFolder: Windows.Win32.Foundation.BSTR, pbstrOutputFile: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetErrorURL(self, pbstrURL: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPCore(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{d84cca99-cce2-11d2-9ecc-0000f8085981}')
    @commethod(7)
    def close(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_URL(self, pbstrURL: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_URL(self, bstrURL: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_openState(self, pwmpos: POINTER(Windows.Win32.Media.MediaPlayer.WMPOpenState)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_playState(self, pwmpps: POINTER(Windows.Win32.Media.MediaPlayer.WMPPlayState)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_controls(self, ppControl: POINTER(Windows.Win32.Media.MediaPlayer.IWMPControls_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_settings(self, ppSettings: POINTER(Windows.Win32.Media.MediaPlayer.IWMPSettings_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_currentMedia(self, ppMedia: POINTER(Windows.Win32.Media.MediaPlayer.IWMPMedia_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def put_currentMedia(self, pMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_mediaCollection(self, ppMediaCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPMediaCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_playlistCollection(self, ppPlaylistCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylistCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_versionInfo(self, pbstrVersionInfo: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def launchURL(self, bstrURL: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_network(self, ppQNI: POINTER(Windows.Win32.Media.MediaPlayer.IWMPNetwork_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def get_currentPlaylist(self, ppPL: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def put_currentPlaylist(self, pPL: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def get_cdromCollection(self, ppCdromCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPCdromCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def get_closedCaption(self, ppClosedCaption: POINTER(Windows.Win32.Media.MediaPlayer.IWMPClosedCaption_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def get_isOnline(self, pfOnline: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def get_error(self, ppError: POINTER(Windows.Win32.Media.MediaPlayer.IWMPError_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def get_status(self, pbstrStatus: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPCore2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPCore
    _iid_ = Guid('{bc17e5b7-7561-4c18-bb90-17d485775659}')
    @commethod(28)
    def get_dvd(self, ppDVD: POINTER(Windows.Win32.Media.MediaPlayer.IWMPDVD_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPCore3(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPCore2
    _iid_ = Guid('{7587c667-628f-499f-88e7-6a6f4e888464}')
    @commethod(29)
    def newPlaylist(self, bstrName: Windows.Win32.Foundation.BSTR, bstrURL: Windows.Win32.Foundation.BSTR, ppPlaylist: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def newMedia(self, bstrURL: Windows.Win32.Foundation.BSTR, ppMedia: POINTER(Windows.Win32.Media.MediaPlayer.IWMPMedia_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPDVD(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{8da61686-4668-4a5c-ae5d-803193293dbe}')
    @commethod(7)
    def get_isAvailable(self, bstrItem: Windows.Win32.Foundation.BSTR, pIsAvailable: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_domain(self, strDomain: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def topMenu(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def titleMenu(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def back(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def resume(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPDownloadCollection(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{0a319c7f-85f9-436c-b88e-82fd88000e1c}')
    @commethod(7)
    def get_id(self, plId: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_count(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def item(self, lItem: Int32, ppDownload: POINTER(Windows.Win32.Media.MediaPlayer.IWMPDownloadItem2_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def startDownload(self, bstrSourceURL: Windows.Win32.Foundation.BSTR, bstrType: Windows.Win32.Foundation.BSTR, ppDownload: POINTER(Windows.Win32.Media.MediaPlayer.IWMPDownloadItem2_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def removeItem(self, lItem: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def Clear(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPDownloadItem(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{c9470e8e-3f6b-46a9-a0a9-452815c34297}')
    @commethod(7)
    def get_sourceURL(self, pbstrURL: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_size(self, plSize: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_type(self, pbstrType: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_progress(self, plProgress: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_downloadState(self, pwmpsdls: POINTER(Windows.Win32.Media.MediaPlayer.WMPSubscriptionDownloadState)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def pause(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def resume(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def cancel(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPDownloadItem2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPDownloadItem
    _iid_ = Guid('{9fbb3336-6da3-479d-b8ff-67d46e20a987}')
    @commethod(15)
    def getItemInfo(self, bstrItemName: Windows.Win32.Foundation.BSTR, pbstrVal: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPDownloadManager(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{e15e9ad1-8f20-4cc4-9ec7-1a328ca86a0d}')
    @commethod(7)
    def getDownloadCollection(self, lCollectionId: Int32, ppCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPDownloadCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def createDownloadCollection(self, ppCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPDownloadCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPEffects(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{d3984c13-c3cb-48e2-8be5-5168340b4f35}')
    @commethod(3)
    def Render(self, pLevels: POINTER(Windows.Win32.Media.MediaPlayer.TimedLevel_head), hdc: Windows.Win32.Graphics.Gdi.HDC, prc: POINTER(Windows.Win32.Foundation.RECT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def MediaInfo(self, lChannelCount: Int32, lSampleRate: Int32, bstrTitle: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetCapabilities(self, pdwCapabilities: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetTitle(self, bstrTitle: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def GetPresetTitle(self, nPreset: Int32, bstrPresetTitle: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def GetPresetCount(self, pnPresetCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def SetCurrentPreset(self, nPreset: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def GetCurrentPreset(self, pnPreset: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def DisplayPropertyPage(self, hwndOwner: Windows.Win32.Foundation.HWND) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def GoFullscreen(self, fFullScreen: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def RenderFullScreen(self, pLevels: POINTER(Windows.Win32.Media.MediaPlayer.TimedLevel_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPEffects2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPEffects
    _iid_ = Guid('{695386ec-aa3c-4618-a5e1-dd9a8b987632}')
    @commethod(14)
    def SetCore(self, pPlayer: Windows.Win32.Media.MediaPlayer.IWMPCore_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def Create(self, hwndParent: Windows.Win32.Foundation.HWND) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def Destroy(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def NotifyNewMedia(self, pMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def OnWindowMessage(self, msg: UInt32, WParam: Windows.Win32.Foundation.WPARAM, LParam: Windows.Win32.Foundation.LPARAM, plResultParam: POINTER(Windows.Win32.Foundation.LRESULT)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def RenderWindowed(self, pData: POINTER(Windows.Win32.Media.MediaPlayer.TimedLevel_head), fRequiredRender: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPError(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{a12dcf7d-14ab-4c1b-a8cd-63909f06025b}')
    @commethod(7)
    def clearErrorQueue(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_errorCount(self, plNumErrors: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_item(self, dwIndex: Int32, ppErrorItem: POINTER(Windows.Win32.Media.MediaPlayer.IWMPErrorItem_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def webHelp(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPErrorItem(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{3614c646-3b3b-4de7-a81e-930e3f2127b3}')
    @commethod(7)
    def get_errorCode(self, phr: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_errorDescription(self, pbstrDescription: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_errorContext(self, pvarContext: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_remedy(self, plRemedy: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_customUrl(self, pbstrCustomUrl: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPErrorItem2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPErrorItem
    _iid_ = Guid('{f75ccec0-c67c-475c-931e-8719870bee7d}')
    @commethod(12)
    def get_condition(self, plCondition: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPEvents(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{19a6627b-da9e-47c1-bb23-00b5e668236a}')
    @commethod(3)
    def OpenStateChange(self, NewState: Int32) -> Void: ...
    @commethod(4)
    def PlayStateChange(self, NewState: Int32) -> Void: ...
    @commethod(5)
    def AudioLanguageChange(self, LangID: Int32) -> Void: ...
    @commethod(6)
    def StatusChange(self) -> Void: ...
    @commethod(7)
    def ScriptCommand(self, scType: Windows.Win32.Foundation.BSTR, Param: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(8)
    def NewStream(self) -> Void: ...
    @commethod(9)
    def Disconnect(self, Result: Int32) -> Void: ...
    @commethod(10)
    def Buffering(self, Start: Windows.Win32.Foundation.VARIANT_BOOL) -> Void: ...
    @commethod(11)
    def Error(self) -> Void: ...
    @commethod(12)
    def Warning(self, WarningType: Int32, Param: Int32, Description: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(13)
    def EndOfStream(self, Result: Int32) -> Void: ...
    @commethod(14)
    def PositionChange(self, oldPosition: Double, newPosition: Double) -> Void: ...
    @commethod(15)
    def MarkerHit(self, MarkerNum: Int32) -> Void: ...
    @commethod(16)
    def DurationUnitChange(self, NewDurationUnit: Int32) -> Void: ...
    @commethod(17)
    def CdromMediaChange(self, CdromNum: Int32) -> Void: ...
    @commethod(18)
    def PlaylistChange(self, Playlist: Windows.Win32.System.Com.IDispatch_head, change: Windows.Win32.Media.MediaPlayer.WMPPlaylistChangeEventType) -> Void: ...
    @commethod(19)
    def CurrentPlaylistChange(self, change: Windows.Win32.Media.MediaPlayer.WMPPlaylistChangeEventType) -> Void: ...
    @commethod(20)
    def CurrentPlaylistItemAvailable(self, bstrItemName: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(21)
    def MediaChange(self, Item: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(22)
    def CurrentMediaItemAvailable(self, bstrItemName: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(23)
    def CurrentItemChange(self, pdispMedia: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(24)
    def MediaCollectionChange(self) -> Void: ...
    @commethod(25)
    def MediaCollectionAttributeStringAdded(self, bstrAttribName: Windows.Win32.Foundation.BSTR, bstrAttribVal: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(26)
    def MediaCollectionAttributeStringRemoved(self, bstrAttribName: Windows.Win32.Foundation.BSTR, bstrAttribVal: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(27)
    def MediaCollectionAttributeStringChanged(self, bstrAttribName: Windows.Win32.Foundation.BSTR, bstrOldAttribVal: Windows.Win32.Foundation.BSTR, bstrNewAttribVal: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(28)
    def PlaylistCollectionChange(self) -> Void: ...
    @commethod(29)
    def PlaylistCollectionPlaylistAdded(self, bstrPlaylistName: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(30)
    def PlaylistCollectionPlaylistRemoved(self, bstrPlaylistName: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(31)
    def PlaylistCollectionPlaylistSetAsDeleted(self, bstrPlaylistName: Windows.Win32.Foundation.BSTR, varfIsDeleted: Windows.Win32.Foundation.VARIANT_BOOL) -> Void: ...
    @commethod(32)
    def ModeChange(self, ModeName: Windows.Win32.Foundation.BSTR, NewValue: Windows.Win32.Foundation.VARIANT_BOOL) -> Void: ...
    @commethod(33)
    def MediaError(self, pMediaObject: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(34)
    def OpenPlaylistSwitch(self, pItem: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(35)
    def DomainChange(self, strDomain: Windows.Win32.Foundation.BSTR) -> Void: ...
    @commethod(36)
    def SwitchedToPlayerApplication(self) -> Void: ...
    @commethod(37)
    def SwitchedToControl(self) -> Void: ...
    @commethod(38)
    def PlayerDockedStateChange(self) -> Void: ...
    @commethod(39)
    def PlayerReconnect(self) -> Void: ...
    @commethod(40)
    def Click(self, nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(41)
    def DoubleClick(self, nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(42)
    def KeyDown(self, nKeyCode: Int16, nShiftState: Int16) -> Void: ...
    @commethod(43)
    def KeyPress(self, nKeyAscii: Int16) -> Void: ...
    @commethod(44)
    def KeyUp(self, nKeyCode: Int16, nShiftState: Int16) -> Void: ...
    @commethod(45)
    def MouseDown(self, nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(46)
    def MouseMove(self, nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(47)
    def MouseUp(self, nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
class IWMPEvents2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPEvents
    _iid_ = Guid('{1e7601fa-47ea-4107-9ea9-9004ed9684ff}')
    @commethod(48)
    def DeviceConnect(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head) -> Void: ...
    @commethod(49)
    def DeviceDisconnect(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head) -> Void: ...
    @commethod(50)
    def DeviceStatusChange(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head, NewStatus: Windows.Win32.Media.MediaPlayer.WMPDeviceStatus) -> Void: ...
    @commethod(51)
    def DeviceSyncStateChange(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head, NewState: Windows.Win32.Media.MediaPlayer.WMPSyncState) -> Void: ...
    @commethod(52)
    def DeviceSyncError(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head, pMedia: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(53)
    def CreatePartnershipComplete(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head, hrResult: Windows.Win32.Foundation.HRESULT) -> Void: ...
class IWMPEvents3(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPEvents2
    _iid_ = Guid('{1f504270-a66b-4223-8e96-26a06c63d69f}')
    @commethod(54)
    def CdromRipStateChange(self, pCdromRip: Windows.Win32.Media.MediaPlayer.IWMPCdromRip_head, wmprs: Windows.Win32.Media.MediaPlayer.WMPRipState) -> Void: ...
    @commethod(55)
    def CdromRipMediaError(self, pCdromRip: Windows.Win32.Media.MediaPlayer.IWMPCdromRip_head, pMedia: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(56)
    def CdromBurnStateChange(self, pCdromBurn: Windows.Win32.Media.MediaPlayer.IWMPCdromBurn_head, wmpbs: Windows.Win32.Media.MediaPlayer.WMPBurnState) -> Void: ...
    @commethod(57)
    def CdromBurnMediaError(self, pCdromBurn: Windows.Win32.Media.MediaPlayer.IWMPCdromBurn_head, pMedia: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(58)
    def CdromBurnError(self, pCdromBurn: Windows.Win32.Media.MediaPlayer.IWMPCdromBurn_head, hrError: Windows.Win32.Foundation.HRESULT) -> Void: ...
    @commethod(59)
    def LibraryConnect(self, pLibrary: Windows.Win32.Media.MediaPlayer.IWMPLibrary_head) -> Void: ...
    @commethod(60)
    def LibraryDisconnect(self, pLibrary: Windows.Win32.Media.MediaPlayer.IWMPLibrary_head) -> Void: ...
    @commethod(61)
    def FolderScanStateChange(self, wmpfss: Windows.Win32.Media.MediaPlayer.WMPFolderScanState) -> Void: ...
    @commethod(62)
    def StringCollectionChange(self, pdispStringCollection: Windows.Win32.System.Com.IDispatch_head, change: Windows.Win32.Media.MediaPlayer.WMPStringCollectionChangeEventType, lCollectionIndex: Int32) -> Void: ...
    @commethod(63)
    def MediaCollectionMediaAdded(self, pdispMedia: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
    @commethod(64)
    def MediaCollectionMediaRemoved(self, pdispMedia: Windows.Win32.System.Com.IDispatch_head) -> Void: ...
class IWMPEvents4(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPEvents3
    _iid_ = Guid('{26dabcfa-306b-404d-9a6f-630a8405048d}')
    @commethod(65)
    def DeviceEstimation(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head, hrResult: Windows.Win32.Foundation.HRESULT, qwEstimatedUsedSpace: Int64, qwEstimatedSpace: Int64) -> Void: ...
class IWMPFolderMonitorServices(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{788c8743-e57f-439d-a468-5bc77f2e59c6}')
    @commethod(3)
    def get_count(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def item(self, lIndex: Int32, pbstrFolder: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def add(self, bstrFolder: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def remove(self, lIndex: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def get_scanState(self, pwmpfss: POINTER(Windows.Win32.Media.MediaPlayer.WMPFolderScanState)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_currentFolder(self, pbstrFolder: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_scannedFilesCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_addedFilesCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_updateProgress(self, plProgress: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def startScan(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def stopScan(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPGraphCreation(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{bfb377e5-c594-4369-a970-de896d5ece74}')
    @commethod(3)
    def GraphCreationPreRender(self, pFilterGraph: Windows.Win32.System.Com.IUnknown_head, pReserved: Windows.Win32.System.Com.IUnknown_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GraphCreationPostRender(self, pFilterGraph: Windows.Win32.System.Com.IUnknown_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetGraphCreationFlags(self, pdwFlags: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPLibrary(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{3df47861-7df1-4c1f-a81b-4c26f0f7a7c6}')
    @commethod(3)
    def get_name(self, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def get_type(self, pwmplt: POINTER(Windows.Win32.Media.MediaPlayer.WMPLibraryType)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def get_mediaCollection(self, ppIWMPMediaCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPMediaCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def isIdentical(self, pIWMPLibrary: Windows.Win32.Media.MediaPlayer.IWMPLibrary_head, pvbool: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPLibrary2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPLibrary
    _iid_ = Guid('{dd578a4e-79b1-426c-bf8f-3add9072500b}')
    @commethod(7)
    def getItemInfo(self, bstrItemName: Windows.Win32.Foundation.BSTR, pbstrVal: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPLibraryServices(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{39c2f8d5-1cf2-4d5e-ae09-d73492cf9eaa}')
    @commethod(3)
    def getCountByType(self, wmplt: Windows.Win32.Media.MediaPlayer.WMPLibraryType, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def getLibraryByType(self, wmplt: Windows.Win32.Media.MediaPlayer.WMPLibraryType, lIndex: Int32, ppIWMPLibrary: POINTER(Windows.Win32.Media.MediaPlayer.IWMPLibrary_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPLibrarySharingServices(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{82cba86b-9f04-474b-a365-d6dd1466e541}')
    @commethod(3)
    def isLibraryShared(self, pvbShared: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def isLibrarySharingEnabled(self, pvbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def showLibrarySharing(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMedia(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{94d55e95-3fac-11d3-b155-00c04f79faa6}')
    @commethod(7)
    def get_isIdentical(self, pIWMPMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head, pvbool: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_sourceURL(self, pbstrSourceURL: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_name(self, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def put_name(self, bstrName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_imageSourceWidth(self, pWidth: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_imageSourceHeight(self, pHeight: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_markerCount(self, pMarkerCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def getMarkerTime(self, MarkerNum: Int32, pMarkerTime: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def getMarkerName(self, MarkerNum: Int32, pbstrMarkerName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_duration(self, pDuration: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_durationString(self, pbstrDuration: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_attributeCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def getAttributeName(self, lIndex: Int32, pbstrItemName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def getItemInfo(self, bstrItemName: Windows.Win32.Foundation.BSTR, pbstrVal: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def setItemInfo(self, bstrItemName: Windows.Win32.Foundation.BSTR, bstrVal: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def getItemInfoByAtom(self, lAtom: Int32, pbstrVal: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def isMemberOf(self, pPlaylist: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, pvarfIsMemberOf: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def isReadOnlyItem(self, bstrItemName: Windows.Win32.Foundation.BSTR, pvarfIsReadOnly: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMedia2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPMedia
    _iid_ = Guid('{ab7c88bb-143e-4ea4-acc3-e4350b2106c3}')
    @commethod(25)
    def get_error(self, ppIWMPErrorItem: POINTER(Windows.Win32.Media.MediaPlayer.IWMPErrorItem_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMedia3(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPMedia2
    _iid_ = Guid('{f118efc7-f03a-4fb4-99c9-1c02a5c1065b}')
    @commethod(26)
    def getAttributeCountByType(self, bstrType: Windows.Win32.Foundation.BSTR, bstrLanguage: Windows.Win32.Foundation.BSTR, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def getItemInfoByType(self, bstrType: Windows.Win32.Foundation.BSTR, bstrLanguage: Windows.Win32.Foundation.BSTR, lIndex: Int32, pvarValue: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMediaCollection(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{8363bc22-b4b4-4b19-989d-1cd765749dd1}')
    @commethod(7)
    def add(self, bstrURL: Windows.Win32.Foundation.BSTR, ppItem: POINTER(Windows.Win32.Media.MediaPlayer.IWMPMedia_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def getAll(self, ppMediaItems: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def getByName(self, bstrName: Windows.Win32.Foundation.BSTR, ppMediaItems: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def getByGenre(self, bstrGenre: Windows.Win32.Foundation.BSTR, ppMediaItems: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def getByAuthor(self, bstrAuthor: Windows.Win32.Foundation.BSTR, ppMediaItems: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def getByAlbum(self, bstrAlbum: Windows.Win32.Foundation.BSTR, ppMediaItems: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def getByAttribute(self, bstrAttribute: Windows.Win32.Foundation.BSTR, bstrValue: Windows.Win32.Foundation.BSTR, ppMediaItems: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def remove(self, pItem: Windows.Win32.Media.MediaPlayer.IWMPMedia_head, varfDeleteFile: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def getAttributeStringCollection(self, bstrAttribute: Windows.Win32.Foundation.BSTR, bstrMediaType: Windows.Win32.Foundation.BSTR, ppStringCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPStringCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def getMediaAtom(self, bstrItemName: Windows.Win32.Foundation.BSTR, plAtom: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def setDeleted(self, pItem: Windows.Win32.Media.MediaPlayer.IWMPMedia_head, varfIsDeleted: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def isDeleted(self, pItem: Windows.Win32.Media.MediaPlayer.IWMPMedia_head, pvarfIsDeleted: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMediaCollection2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPMediaCollection
    _iid_ = Guid('{8ba957f5-fd8c-4791-b82d-f840401ee474}')
    @commethod(19)
    def createQuery(self, ppQuery: POINTER(Windows.Win32.Media.MediaPlayer.IWMPQuery_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def getPlaylistByQuery(self, pQuery: Windows.Win32.Media.MediaPlayer.IWMPQuery_head, bstrMediaType: Windows.Win32.Foundation.BSTR, bstrSortAttribute: Windows.Win32.Foundation.BSTR, fSortAscending: Windows.Win32.Foundation.VARIANT_BOOL, ppPlaylist: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def getStringCollectionByQuery(self, bstrAttribute: Windows.Win32.Foundation.BSTR, pQuery: Windows.Win32.Media.MediaPlayer.IWMPQuery_head, bstrMediaType: Windows.Win32.Foundation.BSTR, bstrSortAttribute: Windows.Win32.Foundation.BSTR, fSortAscending: Windows.Win32.Foundation.VARIANT_BOOL, ppStringCollection: POINTER(Windows.Win32.Media.MediaPlayer.IWMPStringCollection_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def getByAttributeAndMediaType(self, bstrAttribute: Windows.Win32.Foundation.BSTR, bstrValue: Windows.Win32.Foundation.BSTR, bstrMediaType: Windows.Win32.Foundation.BSTR, ppMediaItems: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMediaPluginRegistrar(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{68e27045-05bd-40b2-9720-23088c78e390}')
    @commethod(3)
    def WMPRegisterPlayerPlugin(self, pwszFriendlyName: Windows.Win32.Foundation.PWSTR, pwszDescription: Windows.Win32.Foundation.PWSTR, pwszUninstallString: Windows.Win32.Foundation.PWSTR, dwPriority: UInt32, guidPluginType: Guid, clsid: Guid, cMediaTypes: UInt32, pMediaTypes: VoidPtr) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def WMPUnRegisterPlayerPlugin(self, guidPluginType: Guid, clsid: Guid) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMetadataPicture(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{5c29bbe0-f87d-4c45-aa28-a70f0230ffa9}')
    @commethod(7)
    def get_mimeType(self, pbstrMimeType: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_pictureType(self, pbstrPictureType: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_description(self, pbstrDescription: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_URL(self, pbstrURL: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPMetadataText(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{769a72db-13d2-45e2-9c48-53ca9d5b7450}')
    @commethod(7)
    def get_description(self, pbstrDescription: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_text(self, pbstrText: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPNetwork(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{ec21b779-edef-462d-bba4-ad9dde2b29a7}')
    @commethod(7)
    def get_bandWidth(self, plBandwidth: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_recoveredPackets(self, plRecoveredPackets: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_sourceProtocol(self, pbstrSourceProtocol: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_receivedPackets(self, plReceivedPackets: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_lostPackets(self, plLostPackets: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_receptionQuality(self, plReceptionQuality: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def get_bufferingCount(self, plBufferingCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_bufferingProgress(self, plBufferingProgress: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_bufferingTime(self, plBufferingTime: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def put_bufferingTime(self, lBufferingTime: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def get_frameRate(self, plFrameRate: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_maxBitRate(self, plBitRate: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def get_bitRate(self, plBitRate: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def getProxySettings(self, bstrProtocol: Windows.Win32.Foundation.BSTR, plProxySetting: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def setProxySettings(self, bstrProtocol: Windows.Win32.Foundation.BSTR, lProxySetting: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def getProxyName(self, bstrProtocol: Windows.Win32.Foundation.BSTR, pbstrProxyName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def setProxyName(self, bstrProtocol: Windows.Win32.Foundation.BSTR, bstrProxyName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def getProxyPort(self, bstrProtocol: Windows.Win32.Foundation.BSTR, lProxyPort: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def setProxyPort(self, bstrProtocol: Windows.Win32.Foundation.BSTR, lProxyPort: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def getProxyExceptionList(self, bstrProtocol: Windows.Win32.Foundation.BSTR, pbstrExceptionList: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def setProxyExceptionList(self, bstrProtocol: Windows.Win32.Foundation.BSTR, pbstrExceptionList: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def getProxyBypassForLocal(self, bstrProtocol: Windows.Win32.Foundation.BSTR, pfBypassForLocal: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def setProxyBypassForLocal(self, bstrProtocol: Windows.Win32.Foundation.BSTR, fBypassForLocal: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def get_maxBandwidth(self, lMaxBandwidth: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def put_maxBandwidth(self, lMaxBandwidth: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def get_downloadProgress(self, plDownloadProgress: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def get_encodedFrameRate(self, plFrameRate: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def get_framesSkipped(self, plFrames: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPNodeRealEstate(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{42751198-5a50-4460-bcb4-709f8bdc8e59}')
    @commethod(3)
    def GetDesiredSize(self, pSize: POINTER(Windows.Win32.Foundation.SIZE_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def SetRects(self, pSrc: POINTER(Windows.Win32.Foundation.RECT_head), pDest: POINTER(Windows.Win32.Foundation.RECT_head), pClip: POINTER(Windows.Win32.Foundation.RECT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetRects(self, pSrc: POINTER(Windows.Win32.Foundation.RECT_head), pDest: POINTER(Windows.Win32.Foundation.RECT_head), pClip: POINTER(Windows.Win32.Foundation.RECT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def SetWindowless(self, fWindowless: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def GetWindowless(self, pfWindowless: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def SetFullScreen(self, fFullScreen: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def GetFullScreen(self, pfFullScreen: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPNodeRealEstateHost(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{1491087d-2c6b-44c8-b019-b3c929d2ada9}')
    @commethod(3)
    def OnDesiredSizeChange(self, pSize: POINTER(Windows.Win32.Foundation.SIZE_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def OnFullScreenTransition(self, fFullScreen: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPNodeWindowed(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{96740bfa-c56a-45d1-a3a4-762914d4ade9}')
    @commethod(3)
    def SetOwnerWindow(self, hwnd: IntPtr) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetOwnerWindow(self, phwnd: POINTER(IntPtr)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPNodeWindowedHost(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{a300415a-54aa-4081-adbf-3b13610d8958}')
    @commethod(3)
    def OnWindowMessageFromRenderer(self, uMsg: UInt32, wparam: Windows.Win32.Foundation.WPARAM, lparam: Windows.Win32.Foundation.LPARAM, plRet: POINTER(Windows.Win32.Foundation.LRESULT), pfHandled: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPNodeWindowless(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPWindowMessageSink
    _iid_ = Guid('{9b9199ad-780c-4eda-b816-261eba5d1575}')
    @commethod(4)
    def OnDraw(self, hdc: IntPtr, prcDraw: POINTER(Windows.Win32.Foundation.RECT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPNodeWindowlessHost(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{be7017c6-ce34-4901-8106-770381aa6e3e}')
    @commethod(3)
    def InvalidateRect(self, prc: POINTER(Windows.Win32.Foundation.RECT_head), fErase: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlayer(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPCore
    _iid_ = Guid('{6bf52a4f-394a-11d3-b153-00c04f79faa6}')
    @commethod(28)
    def get_enabled(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def put_enabled(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def get_fullScreen(self, pbFullScreen: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def put_fullScreen(self, bFullScreen: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def get_enableContextMenu(self, pbEnableContextMenu: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def put_enableContextMenu(self, bEnableContextMenu: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def put_uiMode(self, bstrMode: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def get_uiMode(self, pbstrMode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlayer2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPCore
    _iid_ = Guid('{0e6b01d1-d407-4c85-bf5f-1c01f6150280}')
    @commethod(28)
    def get_enabled(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def put_enabled(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def get_fullScreen(self, pbFullScreen: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def put_fullScreen(self, bFullScreen: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def get_enableContextMenu(self, pbEnableContextMenu: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def put_enableContextMenu(self, bEnableContextMenu: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def put_uiMode(self, bstrMode: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def get_uiMode(self, pbstrMode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def get_stretchToFit(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def put_stretchToFit(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def get_windowlessVideo(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(39)
    def put_windowlessVideo(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlayer3(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPCore2
    _iid_ = Guid('{54062b68-052a-4c25-a39f-8b63346511d4}')
    @commethod(29)
    def get_enabled(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def put_enabled(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def get_fullScreen(self, pbFullScreen: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def put_fullScreen(self, bFullScreen: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def get_enableContextMenu(self, pbEnableContextMenu: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def put_enableContextMenu(self, bEnableContextMenu: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def put_uiMode(self, bstrMode: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def get_uiMode(self, pbstrMode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def get_stretchToFit(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def put_stretchToFit(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(39)
    def get_windowlessVideo(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(40)
    def put_windowlessVideo(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlayer4(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPCore3
    _iid_ = Guid('{6c497d62-8919-413c-82db-e935fb3ec584}')
    @commethod(31)
    def get_enabled(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def put_enabled(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def get_fullScreen(self, pbFullScreen: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def put_fullScreen(self, bFullScreen: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def get_enableContextMenu(self, pbEnableContextMenu: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def put_enableContextMenu(self, bEnableContextMenu: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def put_uiMode(self, bstrMode: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def get_uiMode(self, pbstrMode: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(39)
    def get_stretchToFit(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(40)
    def put_stretchToFit(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(41)
    def get_windowlessVideo(self, pbEnabled: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(42)
    def put_windowlessVideo(self, bEnabled: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(43)
    def get_isRemote(self, pvarfIsRemote: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(44)
    def get_playerApplication(self, ppIWMPPlayerApplication: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlayerApplication_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(45)
    def openPlayer(self, bstrURL: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlayerApplication(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{40897764-ceab-47be-ad4a-8e28537f9bbf}')
    @commethod(7)
    def switchToPlayerApplication(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def switchToControl(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_playerDocked(self, pbPlayerDocked: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_hasDisplay(self, pbHasDisplay: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlayerServices(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{1d01fbdb-ade2-4c8d-9842-c190b95c3306}')
    @commethod(3)
    def activateUIPlugin(self, bstrPlugin: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def setTaskPane(self, bstrTaskPane: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def setTaskPaneURL(self, bstrTaskPane: Windows.Win32.Foundation.BSTR, bstrURL: Windows.Win32.Foundation.BSTR, bstrFriendlyName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlayerServices2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPPlayerServices
    _iid_ = Guid('{1bb1592f-f040-418a-9f71-17c7512b4d70}')
    @commethod(6)
    def setBackgroundProcessingPriority(self, bstrPriority: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlaylist(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{d5f0f4f1-130c-11d3-b14e-00c04f79faa6}')
    @commethod(7)
    def get_count(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_name(self, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_name(self, bstrName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_attributeCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_attributeName(self, lIndex: Int32, pbstrAttributeName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_item(self, lIndex: Int32, ppIWMPMedia: POINTER(Windows.Win32.Media.MediaPlayer.IWMPMedia_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def getItemInfo(self, bstrName: Windows.Win32.Foundation.BSTR, pbstrVal: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def setItemInfo(self, bstrName: Windows.Win32.Foundation.BSTR, bstrValue: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def get_isIdentical(self, pIWMPPlaylist: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, pvbool: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def clear(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def insertItem(self, lIndex: Int32, pIWMPMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def appendItem(self, pIWMPMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def removeItem(self, pIWMPMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def moveItem(self, lIndexOld: Int32, lIndexNew: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlaylistArray(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{679409c0-99f7-11d3-9fb7-00105aa620bb}')
    @commethod(7)
    def get_count(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def item(self, lIndex: Int32, ppItem: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlaylistCollection(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{10a13217-23a7-439b-b1c0-d847c79b7774}')
    @commethod(7)
    def newPlaylist(self, bstrName: Windows.Win32.Foundation.BSTR, ppItem: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def getAll(self, ppPlaylistArray: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylistArray_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def getByName(self, bstrName: Windows.Win32.Foundation.BSTR, ppPlaylistArray: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylistArray_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def remove(self, pItem: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def setDeleted(self, pItem: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, varfIsDeleted: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def isDeleted(self, pItem: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, pvarfIsDeleted: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def importPlaylist(self, pItem: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, ppImportedItem: POINTER(Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPlugin(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{f1392a70-024c-42bb-a998-73dfdfe7d5a7}')
    @commethod(3)
    def Init(self, dwPlaybackContext: UIntPtr) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Shutdown(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetID(self, pGUID: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetCaps(self, pdwFlags: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def AdviseWMPServices(self, pWMPServices: Windows.Win32.Media.MediaPlayer.IWMPServices_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def UnAdviseWMPServices(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPluginEnable(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{5fca444c-7ad1-479d-a4ef-40566a5309d6}')
    @commethod(3)
    def SetEnable(self, fEnable: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetEnable(self, pfEnable: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPPluginUI(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{4c5e8f9f-ad3e-4bf9-9753-fcd30d6d38dd}')
    @commethod(3)
    def SetCore(self, pCore: Windows.Win32.Media.MediaPlayer.IWMPCore_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Create(self, hwndParent: Windows.Win32.Foundation.HWND, phwndWindow: POINTER(Windows.Win32.Foundation.HWND)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Destroy(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def DisplayPropertyPage(self, hwndParent: Windows.Win32.Foundation.HWND) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def GetProperty(self, pwszName: Windows.Win32.Foundation.PWSTR, pvarProperty: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def SetProperty(self, pwszName: Windows.Win32.Foundation.PWSTR, pvarProperty: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def TranslateAccelerator(self, lpmsg: POINTER(Windows.Win32.UI.WindowsAndMessaging.MSG_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPQuery(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{a00918f3-a6b0-4bfb-9189-fd834c7bc5a5}')
    @commethod(7)
    def addCondition(self, bstrAttribute: Windows.Win32.Foundation.BSTR, bstrOperator: Windows.Win32.Foundation.BSTR, bstrValue: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def beginNextGroup(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPRemoteMediaServices(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{cbb92747-741f-44fe-ab5b-f1a48f3b2a59}')
    @commethod(3)
    def GetServiceType(self, pbstrType: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetApplicationName(self, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def GetScriptableObject(self, pbstrName: POINTER(Windows.Win32.Foundation.BSTR), ppDispatch: POINTER(Windows.Win32.System.Com.IDispatch_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetCustomUIMode(self, pbstrFile: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPRenderConfig(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{959506c1-0314-4ec5-9e61-8528db5e5478}')
    @commethod(3)
    def put_inProcOnly(self, fInProc: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def get_inProcOnly(self, pfInProc: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPServices(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{afb6b76b-1e20-4198-83b3-191db6e0b149}')
    @commethod(3)
    def GetStreamTime(self, prt: POINTER(Int64)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def GetStreamState(self, pState: POINTER(Windows.Win32.Media.MediaPlayer.WMPServices_StreamState)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSettings(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{9104d1ab-80c9-4fed-abf0-2e6417a6df14}')
    @commethod(7)
    def get_isAvailable(self, bstrItem: Windows.Win32.Foundation.BSTR, pIsAvailable: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_autoStart(self, pfAutoStart: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def put_autoStart(self, fAutoStart: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_baseURL(self, pbstrBaseURL: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def put_baseURL(self, bstrBaseURL: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def get_defaultFrame(self, pbstrDefaultFrame: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def put_defaultFrame(self, bstrDefaultFrame: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def get_invokeURLs(self, pfInvokeURLs: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def put_invokeURLs(self, fInvokeURLs: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def get_mute(self, pfMute: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def put_mute(self, fMute: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def get_playCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def put_playCount(self, lCount: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def get_rate(self, pdRate: POINTER(Double)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def put_rate(self, dRate: Double) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def get_balance(self, plBalance: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def put_balance(self, lBalance: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def get_volume(self, plVolume: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def put_volume(self, lVolume: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def getMode(self, bstrMode: Windows.Win32.Foundation.BSTR, pvarfMode: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def setMode(self, bstrMode: Windows.Win32.Foundation.BSTR, varfMode: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def get_enableErrorDialogs(self, pfEnableErrorDialogs: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def put_enableErrorDialogs(self, fEnableErrorDialogs: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSettings2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPSettings
    _iid_ = Guid('{fda937a4-eece-4da5-a0b6-39bf89ade2c2}')
    @commethod(30)
    def get_defaultAudioLanguage(self, plLangID: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def get_mediaAccessRights(self, pbstrRights: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def requestMediaAccessRights(self, bstrDesiredAccess: Windows.Win32.Foundation.BSTR, pvbAccepted: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSkinManager(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{076f2fa6-ed30-448b-8cc5-3f3ef3529c7a}')
    @commethod(3)
    def SetVisualStyle(self, bstrPath: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPStringCollection(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{4a976298-8c0d-11d3-b389-00c04f68574b}')
    @commethod(7)
    def get_count(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def item(self, lIndex: Int32, pbstrString: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPStringCollection2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPStringCollection
    _iid_ = Guid('{46ad648d-53f1-4a74-92e2-2a1b68d63fd4}')
    @commethod(9)
    def isIdentical(self, pIWMPStringCollection2: Windows.Win32.Media.MediaPlayer.IWMPStringCollection2_head, pvbool: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def getItemInfo(self, lCollectionIndex: Int32, bstrItemName: Windows.Win32.Foundation.BSTR, pbstrValue: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def getAttributeCountByType(self, lCollectionIndex: Int32, bstrType: Windows.Win32.Foundation.BSTR, bstrLanguage: Windows.Win32.Foundation.BSTR, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def getItemInfoByType(self, lCollectionIndex: Int32, bstrType: Windows.Win32.Foundation.BSTR, bstrLanguage: Windows.Win32.Foundation.BSTR, lAttributeIndex: Int32, pvarValue: POINTER(Windows.Win32.System.Variant.VARIANT_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSubscriptionService(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{376055f8-2a59-4a73-9501-dca5273a7a10}')
    @commethod(3)
    def allowPlay(self, hwnd: Windows.Win32.Foundation.HWND, pMedia: Windows.Win32.Media.MediaPlayer.IWMPMedia_head, pfAllowPlay: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def allowCDBurn(self, hwnd: Windows.Win32.Foundation.HWND, pPlaylist: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, pfAllowBurn: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def allowPDATransfer(self, hwnd: Windows.Win32.Foundation.HWND, pPlaylist: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, pfAllowTransfer: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def startBackgroundProcessing(self, hwnd: Windows.Win32.Foundation.HWND) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSubscriptionService2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPSubscriptionService
    _iid_ = Guid('{a94c120e-d600-4ec6-b05e-ec9d56d84de0}')
    @commethod(7)
    def stopBackgroundProcessing(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def serviceEvent(self, event: Windows.Win32.Media.MediaPlayer.WMPSubscriptionServiceEvent) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def deviceAvailable(self, bstrDeviceName: Windows.Win32.Foundation.BSTR, pCB: Windows.Win32.Media.MediaPlayer.IWMPSubscriptionServiceCallback_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def prepareForSync(self, bstrFilename: Windows.Win32.Foundation.BSTR, bstrDeviceName: Windows.Win32.Foundation.BSTR, pCB: Windows.Win32.Media.MediaPlayer.IWMPSubscriptionServiceCallback_head) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSubscriptionServiceCallback(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{dd01d127-2dc2-4c3a-876e-63312079f9b0}')
    @commethod(3)
    def onComplete(self, hrResult: Windows.Win32.Foundation.HRESULT) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSyncDevice(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{82a2986c-0293-4fd0-b279-b21b86c058be}')
    @commethod(3)
    def get_friendlyName(self, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def put_friendlyName(self, bstrName: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def get_deviceName(self, pbstrName: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def get_deviceId(self, pbstrDeviceId: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def get_partnershipIndex(self, plIndex: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def get_connected(self, pvbConnected: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def get_status(self, pwmpds: POINTER(Windows.Win32.Media.MediaPlayer.WMPDeviceStatus)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def get_syncState(self, pwmpss: POINTER(Windows.Win32.Media.MediaPlayer.WMPSyncState)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def get_progress(self, plProgress: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def getItemInfo(self, bstrItemName: Windows.Win32.Foundation.BSTR, pbstrVal: POINTER(Windows.Win32.Foundation.BSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def createPartnership(self, vbShowUI: Windows.Win32.Foundation.VARIANT_BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def deletePartnership(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def start(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def stop(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def showSettings(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def isIdentical(self, pDevice: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head, pvbool: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSyncDevice2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice
    _iid_ = Guid('{88afb4b2-140a-44d2-91e6-4543da467cd1}')
    @commethod(19)
    def setItemInfo(self, bstrItemName: Windows.Win32.Foundation.BSTR, bstrVal: Windows.Win32.Foundation.BSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSyncDevice3(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IWMPSyncDevice2
    _iid_ = Guid('{b22c85f9-263c-4372-a0da-b518db9b4098}')
    @commethod(20)
    def estimateSyncSize(self, pNonRulePlaylist: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head, pRulesPlaylist: Windows.Win32.Media.MediaPlayer.IWMPPlaylist_head) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def cancelEstimation(self) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPSyncServices(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{8b5050ff-e0a4-4808-b3a8-893a9e1ed894}')
    @commethod(3)
    def get_deviceCount(self, plCount: POINTER(Int32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def getDevice(self, lIndex: Int32, ppDevice: POINTER(Windows.Win32.Media.MediaPlayer.IWMPSyncDevice_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPTranscodePolicy(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{b64cbac3-401c-4327-a3e8-b9feb3a8c25c}')
    @commethod(3)
    def allowTranscode(self, pvbAllow: POINTER(Windows.Win32.Foundation.VARIANT_BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPUserEventSink(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{cfccfa72-c343-48c3-a2de-b7a4402e39f2}')
    @commethod(3)
    def NotifyUserEvent(self, EventCode: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPVideoRenderConfig(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{6d6cf803-1ec0-4c8d-b3ca-f18e27282074}')
    @commethod(3)
    def put_presenterActivate(self, pActivate: Windows.Win32.Media.MediaFoundation.IMFActivate_head) -> Windows.Win32.Foundation.HRESULT: ...
class IWMPWindowMessageSink(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{3a0daa30-908d-4789-ba87-aed879b5c49b}')
    @commethod(3)
    def OnWindowMessage(self, uMsg: UInt32, wparam: Windows.Win32.Foundation.WPARAM, lparam: Windows.Win32.Foundation.LPARAM, plRet: POINTER(Windows.Win32.Foundation.LRESULT), pfHandled: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeed(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{a44179a4-e0f6-403b-af8d-d080f425a451}')
    @commethod(3)
    def Xml(self, uiItemCount: UInt32, sortProperty: Windows.Win32.Media.MediaPlayer.FEEDS_XML_SORT_PROPERTY, sortOrder: Windows.Win32.Media.MediaPlayer.FEEDS_XML_SORT_ORDER, filterFlags: Windows.Win32.Media.MediaPlayer.FEEDS_XML_FILTER_FLAGS, includeFlags: Windows.Win32.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, pps: POINTER(Windows.Win32.System.Com.IStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Name(self, ppszName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Rename(self, pszName: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Url(self, ppszUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def SetUrl(self, pszUrl: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def LocalId(self, pguid: POINTER(Guid)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def Path(self, ppszPath: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def Move(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def Parent(self, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def LastWriteTime(self, pstLastWriteTime: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def Delete(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def Download(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def AsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def CancelAsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def SyncSetting(self, pfss: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_SYNC_SETTING)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def SetSyncSetting(self, fss: Windows.Win32.Media.MediaPlayer.FEEDS_SYNC_SETTING) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def Interval(self, puiInterval: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def SetInterval(self, uiInterval: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(21)
    def LastDownloadTime(self, pstLastDownloadTime: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(22)
    def LocalEnclosurePath(self, ppszPath: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(23)
    def Items(self, ppfe: POINTER(Windows.Win32.Media.MediaPlayer.IXFeedsEnum_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(24)
    def GetItem(self, uiId: UInt32, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(25)
    def MarkAllItemsRead(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(26)
    def MaxItemCount(self, puiMaxItemCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(27)
    def SetMaxItemCount(self, uiMaxItemCount: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(28)
    def DownloadEnclosuresAutomatically(self, pbDownloadEnclosuresAutomatically: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(29)
    def SetDownloadEnclosuresAutomatically(self, bDownloadEnclosuresAutomatically: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(30)
    def DownloadStatus(self, pfds: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(31)
    def LastDownloadError(self, pfde: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(32)
    def Merge(self, pStream: Windows.Win32.System.Com.IStream_head, pszUrl: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(33)
    def DownloadUrl(self, ppszUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(34)
    def Title(self, ppszTitle: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(35)
    def Description(self, ppszDescription: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(36)
    def Link(self, ppszHomePage: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(37)
    def Image(self, ppszImageUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(38)
    def LastBuildDate(self, pstLastBuildDate: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(39)
    def PubDate(self, pstPubDate: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(40)
    def Ttl(self, puiTtl: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(41)
    def Language(self, ppszLanguage: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(42)
    def Copyright(self, ppszCopyright: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(43)
    def IsList(self, pbIsList: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(44)
    def GetWatcher(self, scope: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_MASK, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(45)
    def UnreadItemCount(self, puiUnreadItemCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(46)
    def ItemCount(self, puiItemCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeed2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IXFeed
    _iid_ = Guid('{ce528e77-3716-4eb7-956d-f5e37502e12a}')
    @commethod(47)
    def GetItemByEffectiveId(self, uiEffectiveId: UInt32, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(48)
    def LastItemDownloadTime(self, pstLastItemDownloadTime: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(49)
    def Username(self, ppszUsername: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(50)
    def Password(self, ppszPassword: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(51)
    def SetCredentials(self, pszUsername: Windows.Win32.Foundation.PWSTR, pszPassword: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(52)
    def ClearCredentials(self) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedEnclosure(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{bfbfb953-644f-4792-b69c-dfaca4cbf89a}')
    @commethod(3)
    def Url(self, ppszUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Type(self, ppszMimeType: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Length(self, puiLength: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def AsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def CancelAsyncDownload(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def DownloadStatus(self, pfds: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def LastDownloadError(self, pfde: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def LocalPath(self, ppszPath: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def Parent(self, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def DownloadUrl(self, ppszUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def DownloadMimeType(self, ppszMimeType: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def RemoveFile(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def SetFile(self, pszDownloadUrl: Windows.Win32.Foundation.PWSTR, pszDownloadFilePath: Windows.Win32.Foundation.PWSTR, pszDownloadMimeType: Windows.Win32.Foundation.PWSTR, pszEnclosureFilename: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedEvents(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{1630852e-1263-465b-98e5-fe60ffec4ac2}')
    @commethod(3)
    def Error(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def FeedDeleted(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def FeedRenamed(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def FeedUrlChanged(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def FeedMoved(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def FeedDownloading(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def FeedDownloadCompleted(self, pszPath: Windows.Win32.Foundation.PWSTR, fde: Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def FeedItemCountChanged(self, pszPath: Windows.Win32.Foundation.PWSTR, feicfFlags: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedFolder(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{4c963678-3a51-4b88-8531-98b90b6508f2}')
    @commethod(3)
    def Feeds(self, ppfe: POINTER(Windows.Win32.Media.MediaPlayer.IXFeedsEnum_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Subfolders(self, ppfe: POINTER(Windows.Win32.Media.MediaPlayer.IXFeedsEnum_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def CreateFeed(self, pszName: Windows.Win32.Foundation.PWSTR, pszUrl: Windows.Win32.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def CreateSubfolder(self, pszName: Windows.Win32.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def ExistsFeed(self, pszName: Windows.Win32.Foundation.PWSTR, pbFeedExists: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def ExistsSubfolder(self, pszName: Windows.Win32.Foundation.PWSTR, pbSubfolderExists: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def GetFeed(self, pszName: Windows.Win32.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def GetSubfolder(self, pszName: Windows.Win32.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def Delete(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def Name(self, ppszName: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def Rename(self, pszName: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def Path(self, ppszPath: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def Move(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def Parent(self, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def IsRoot(self, pbIsRootFeedFolder: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def GetWatcher(self, scope: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: Windows.Win32.Media.MediaPlayer.FEEDS_EVENTS_MASK, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def TotalUnreadItemCount(self, puiTotalUnreadItemCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(20)
    def TotalItemCount(self, puiTotalItemCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedFolderEvents(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{7964b769-234a-4bb1-a5f4-90454c8ad07e}')
    @commethod(3)
    def Error(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def FolderAdded(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def FolderDeleted(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def FolderRenamed(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def FolderMovedFrom(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def FolderMovedTo(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def FolderItemCountChanged(self, pszPath: Windows.Win32.Foundation.PWSTR, feicfFlags: Int32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def FeedAdded(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def FeedDeleted(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def FeedRenamed(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def FeedUrlChanged(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def FeedMovedFrom(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def FeedMovedTo(self, pszPath: Windows.Win32.Foundation.PWSTR, pszOldPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def FeedDownloading(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def FeedDownloadCompleted(self, pszPath: Windows.Win32.Foundation.PWSTR, fde: Windows.Win32.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def FeedItemCountChanged(self, pszPath: Windows.Win32.Foundation.PWSTR, feicfFlags: Int32) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedItem(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{e757b2f5-e73e-434e-a1bf-2bd7c3e60fcb}')
    @commethod(3)
    def Xml(self, fxif: Windows.Win32.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, pps: POINTER(Windows.Win32.System.Com.IStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Title(self, ppszTitle: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def Link(self, ppszUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def Guid(self, ppszGuid: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def Description(self, ppszDescription: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def PubDate(self, pstPubDate: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def Comments(self, ppszUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def Author(self, ppszAuthor: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def Enclosure(self, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def IsRead(self, pbIsRead: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def SetIsRead(self, bIsRead: Windows.Win32.Foundation.BOOL) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def LocalId(self, puiId: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def Parent(self, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def Delete(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def DownloadUrl(self, ppszUrl: POINTER(Windows.Win32.Foundation.PWSTR)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def LastDownloadTime(self, pstLastDownloadTime: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(19)
    def Modified(self, pstModifiedTime: POINTER(Windows.Win32.Foundation.SYSTEMTIME_head)) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedItem2(ComPtr):
    extends: Windows.Win32.Media.MediaPlayer.IXFeedItem
    _iid_ = Guid('{6cda2dc7-9013-4522-9970-2a9dd9ead5a3}')
    @commethod(20)
    def EffectiveId(self, puiEffectiveId: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedsEnum(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{dc43a9d5-5015-4301-8c96-a47434b4d658}')
    @commethod(3)
    def Count(self, puiCount: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def Item(self, uiIndex: UInt32, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
class IXFeedsManager(ComPtr):
    extends: Windows.Win32.System.Com.IUnknown
    _iid_ = Guid('{5357e238-fb12-4aca-a930-cab7832b84bf}')
    @commethod(3)
    def RootFolder(self, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(4)
    def IsSubscribed(self, pszUrl: Windows.Win32.Foundation.PWSTR, pbSubscribed: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(5)
    def ExistsFeed(self, pszPath: Windows.Win32.Foundation.PWSTR, pbFeedExists: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(6)
    def GetFeed(self, pszPath: Windows.Win32.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(7)
    def GetFeedByUrl(self, pszUrl: Windows.Win32.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(8)
    def ExistsFolder(self, pszPath: Windows.Win32.Foundation.PWSTR, pbFolderExists: POINTER(Windows.Win32.Foundation.BOOL)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(9)
    def GetFolder(self, pszPath: Windows.Win32.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(VoidPtr)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(10)
    def DeleteFeed(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(11)
    def DeleteFolder(self, pszPath: Windows.Win32.Foundation.PWSTR) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(12)
    def BackgroundSync(self, fbsa: Windows.Win32.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_ACTION) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(13)
    def BackgroundSyncStatus(self, pfbss: POINTER(Windows.Win32.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_STATUS)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(14)
    def DefaultInterval(self, puiInterval: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(15)
    def SetDefaultInterval(self, uiInterval: UInt32) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(16)
    def AsyncSyncAll(self) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(17)
    def Normalize(self, pStreamIn: Windows.Win32.System.Com.IStream_head, ppStreamOut: POINTER(Windows.Win32.System.Com.IStream_head)) -> Windows.Win32.Foundation.HRESULT: ...
    @commethod(18)
    def ItemCountLimit(self, puiItemCountLimit: POINTER(UInt32)) -> Windows.Win32.Foundation.HRESULT: ...
PlayerState = Int32
stop_state: PlayerState = 0
pause_state: PlayerState = 1
play_state: PlayerState = 2
class TimedLevel(EasyCastStructure):
    frequency: Byte * 2048
    waveform: Byte * 2048
    state: Int32
    timeStamp: Int64
WMPAccountType = Int32
WMPAccountType_wmpatBuyOnly: WMPAccountType = 1
WMPAccountType_wmpatSubscription: WMPAccountType = 2
WMPAccountType_wmpatJanus: WMPAccountType = 3
WMPBurnFormat = Int32
WMPBurnFormat_wmpbfAudioCD: WMPBurnFormat = 0
WMPBurnFormat_wmpbfDataCD: WMPBurnFormat = 1
WMPBurnState = Int32
WMPBurnState_wmpbsUnknown: WMPBurnState = 0
WMPBurnState_wmpbsBusy: WMPBurnState = 1
WMPBurnState_wmpbsReady: WMPBurnState = 2
WMPBurnState_wmpbsWaitingForDisc: WMPBurnState = 3
WMPBurnState_wmpbsRefreshStatusPending: WMPBurnState = 4
WMPBurnState_wmpbsPreparingToBurn: WMPBurnState = 5
WMPBurnState_wmpbsBurning: WMPBurnState = 6
WMPBurnState_wmpbsStopped: WMPBurnState = 7
WMPBurnState_wmpbsErasing: WMPBurnState = 8
WMPBurnState_wmpbsDownloading: WMPBurnState = 9
WMPCallbackNotification = Int32
WMPCallbackNotification_wmpcnLoginStateChange: WMPCallbackNotification = 1
WMPCallbackNotification_wmpcnAuthResult: WMPCallbackNotification = 2
WMPCallbackNotification_wmpcnLicenseUpdated: WMPCallbackNotification = 3
WMPCallbackNotification_wmpcnNewCatalogAvailable: WMPCallbackNotification = 4
WMPCallbackNotification_wmpcnNewPluginAvailable: WMPCallbackNotification = 5
WMPCallbackNotification_wmpcnDisableRadioSkipping: WMPCallbackNotification = 6
class WMPContextMenuInfo(EasyCastStructure):
    dwID: UInt32
    bstrMenuText: Windows.Win32.Foundation.BSTR
    bstrHelpText: Windows.Win32.Foundation.BSTR
WMPDeviceStatus = Int32
WMPDeviceStatus_wmpdsUnknown: WMPDeviceStatus = 0
WMPDeviceStatus_wmpdsPartnershipExists: WMPDeviceStatus = 1
WMPDeviceStatus_wmpdsPartnershipDeclined: WMPDeviceStatus = 2
WMPDeviceStatus_wmpdsPartnershipAnother: WMPDeviceStatus = 3
WMPDeviceStatus_wmpdsManualDevice: WMPDeviceStatus = 4
WMPDeviceStatus_wmpdsNewDevice: WMPDeviceStatus = 5
WMPDeviceStatus_wmpdsLast: WMPDeviceStatus = 6
WMPFolderScanState = Int32
WMPFolderScanState_wmpfssUnknown: WMPFolderScanState = 0
WMPFolderScanState_wmpfssScanning: WMPFolderScanState = 1
WMPFolderScanState_wmpfssUpdating: WMPFolderScanState = 2
WMPFolderScanState_wmpfssStopped: WMPFolderScanState = 3
WMPLib = Guid('{6bf52a50-394a-11d3-b153-00c04f79faa6}')
WMPLibraryType = Int32
WMPLibraryType_wmpltUnknown: WMPLibraryType = 0
WMPLibraryType_wmpltAll: WMPLibraryType = 1
WMPLibraryType_wmpltLocal: WMPLibraryType = 2
WMPLibraryType_wmpltRemote: WMPLibraryType = 3
WMPLibraryType_wmpltDisc: WMPLibraryType = 4
WMPLibraryType_wmpltPortableDevice: WMPLibraryType = 5
WMPOpenState = Int32
WMPOpenState_wmposUndefined: WMPOpenState = 0
WMPOpenState_wmposPlaylistChanging: WMPOpenState = 1
WMPOpenState_wmposPlaylistLocating: WMPOpenState = 2
WMPOpenState_wmposPlaylistConnecting: WMPOpenState = 3
WMPOpenState_wmposPlaylistLoading: WMPOpenState = 4
WMPOpenState_wmposPlaylistOpening: WMPOpenState = 5
WMPOpenState_wmposPlaylistOpenNoMedia: WMPOpenState = 6
WMPOpenState_wmposPlaylistChanged: WMPOpenState = 7
WMPOpenState_wmposMediaChanging: WMPOpenState = 8
WMPOpenState_wmposMediaLocating: WMPOpenState = 9
WMPOpenState_wmposMediaConnecting: WMPOpenState = 10
WMPOpenState_wmposMediaLoading: WMPOpenState = 11
WMPOpenState_wmposMediaOpening: WMPOpenState = 12
WMPOpenState_wmposMediaOpen: WMPOpenState = 13
WMPOpenState_wmposBeginCodecAcquisition: WMPOpenState = 14
WMPOpenState_wmposEndCodecAcquisition: WMPOpenState = 15
WMPOpenState_wmposBeginLicenseAcquisition: WMPOpenState = 16
WMPOpenState_wmposEndLicenseAcquisition: WMPOpenState = 17
WMPOpenState_wmposBeginIndividualization: WMPOpenState = 18
WMPOpenState_wmposEndIndividualization: WMPOpenState = 19
WMPOpenState_wmposMediaWaiting: WMPOpenState = 20
WMPOpenState_wmposOpeningUnknownURL: WMPOpenState = 21
WMPPartnerNotification = Int32
WMPPartnerNotification_wmpsnBackgroundProcessingBegin: WMPPartnerNotification = 1
WMPPartnerNotification_wmpsnBackgroundProcessingEnd: WMPPartnerNotification = 2
WMPPartnerNotification_wmpsnCatalogDownloadFailure: WMPPartnerNotification = 3
WMPPartnerNotification_wmpsnCatalogDownloadComplete: WMPPartnerNotification = 4
WMPPlayState = Int32
WMPPlayState_wmppsUndefined: WMPPlayState = 0
WMPPlayState_wmppsStopped: WMPPlayState = 1
WMPPlayState_wmppsPaused: WMPPlayState = 2
WMPPlayState_wmppsPlaying: WMPPlayState = 3
WMPPlayState_wmppsScanForward: WMPPlayState = 4
WMPPlayState_wmppsScanReverse: WMPPlayState = 5
WMPPlayState_wmppsBuffering: WMPPlayState = 6
WMPPlayState_wmppsWaiting: WMPPlayState = 7
WMPPlayState_wmppsMediaEnded: WMPPlayState = 8
WMPPlayState_wmppsTransitioning: WMPPlayState = 9
WMPPlayState_wmppsReady: WMPPlayState = 10
WMPPlayState_wmppsReconnecting: WMPPlayState = 11
WMPPlayState_wmppsLast: WMPPlayState = 12
WMPPlaylistChangeEventType = Int32
WMPPlaylistChangeEventType_wmplcUnknown: WMPPlaylistChangeEventType = 0
WMPPlaylistChangeEventType_wmplcClear: WMPPlaylistChangeEventType = 1
WMPPlaylistChangeEventType_wmplcInfoChange: WMPPlaylistChangeEventType = 2
WMPPlaylistChangeEventType_wmplcMove: WMPPlaylistChangeEventType = 3
WMPPlaylistChangeEventType_wmplcDelete: WMPPlaylistChangeEventType = 4
WMPPlaylistChangeEventType_wmplcInsert: WMPPlaylistChangeEventType = 5
WMPPlaylistChangeEventType_wmplcAppend: WMPPlaylistChangeEventType = 6
WMPPlaylistChangeEventType_wmplcPrivate: WMPPlaylistChangeEventType = 7
WMPPlaylistChangeEventType_wmplcNameChange: WMPPlaylistChangeEventType = 8
WMPPlaylistChangeEventType_wmplcMorph: WMPPlaylistChangeEventType = 9
WMPPlaylistChangeEventType_wmplcSort: WMPPlaylistChangeEventType = 10
WMPPlaylistChangeEventType_wmplcLast: WMPPlaylistChangeEventType = 11
WMPPlugin_Caps = Int32
WMPPlugin_Caps_CannotConvertFormats: WMPPlugin_Caps = 1
WMPRemoteMediaServices = Guid('{df333473-2cf7-4be2-907f-9aad5661364f}')
WMPRipState = Int32
WMPRipState_wmprsUnknown: WMPRipState = 0
WMPRipState_wmprsRipping: WMPRipState = 1
WMPRipState_wmprsStopped: WMPRipState = 2
WMPServices_StreamState = Int32
WMPServices_StreamState_Stop: WMPServices_StreamState = 0
WMPServices_StreamState_Pause: WMPServices_StreamState = 1
WMPServices_StreamState_Play: WMPServices_StreamState = 2
WMPStreamingType = Int32
WMPStreamingType_wmpstUnknown: WMPStreamingType = 0
WMPStreamingType_wmpstMusic: WMPStreamingType = 1
WMPStreamingType_wmpstVideo: WMPStreamingType = 2
WMPStreamingType_wmpstRadio: WMPStreamingType = 3
WMPStringCollectionChangeEventType = Int32
WMPStringCollectionChangeEventType_wmpsccetUnknown: WMPStringCollectionChangeEventType = 0
WMPStringCollectionChangeEventType_wmpsccetInsert: WMPStringCollectionChangeEventType = 1
WMPStringCollectionChangeEventType_wmpsccetChange: WMPStringCollectionChangeEventType = 2
WMPStringCollectionChangeEventType_wmpsccetDelete: WMPStringCollectionChangeEventType = 3
WMPStringCollectionChangeEventType_wmpsccetClear: WMPStringCollectionChangeEventType = 4
WMPStringCollectionChangeEventType_wmpsccetBeginUpdates: WMPStringCollectionChangeEventType = 5
WMPStringCollectionChangeEventType_wmpsccetEndUpdates: WMPStringCollectionChangeEventType = 6
WMPSubscriptionDownloadState = Int32
WMPSubscriptionDownloadState_wmpsdlsDownloading: WMPSubscriptionDownloadState = 0
WMPSubscriptionDownloadState_wmpsdlsPaused: WMPSubscriptionDownloadState = 1
WMPSubscriptionDownloadState_wmpsdlsProcessing: WMPSubscriptionDownloadState = 2
WMPSubscriptionDownloadState_wmpsdlsCompleted: WMPSubscriptionDownloadState = 3
WMPSubscriptionDownloadState_wmpsdlsCancelled: WMPSubscriptionDownloadState = 4
WMPSubscriptionServiceEvent = Int32
WMPSubscriptionServiceEvent_wmpsseCurrentBegin: WMPSubscriptionServiceEvent = 1
WMPSubscriptionServiceEvent_wmpsseCurrentEnd: WMPSubscriptionServiceEvent = 2
WMPSubscriptionServiceEvent_wmpsseFullBegin: WMPSubscriptionServiceEvent = 3
WMPSubscriptionServiceEvent_wmpsseFullEnd: WMPSubscriptionServiceEvent = 4
WMPSyncState = Int32
WMPSyncState_wmpssUnknown: WMPSyncState = 0
WMPSyncState_wmpssSynchronizing: WMPSyncState = 1
WMPSyncState_wmpssStopped: WMPSyncState = 2
WMPSyncState_wmpssEstimating: WMPSyncState = 3
WMPSyncState_wmpssLast: WMPSyncState = 4
WMPTaskType = Int32
WMPTaskType_wmpttBrowse: WMPTaskType = 1
WMPTaskType_wmpttSync: WMPTaskType = 2
WMPTaskType_wmpttBurn: WMPTaskType = 3
WMPTaskType_wmpttCurrent: WMPTaskType = 4
WMPTemplateSize = Int32
WMPTemplateSize_wmptsSmall: WMPTemplateSize = 0
WMPTemplateSize_wmptsMedium: WMPTemplateSize = 1
WMPTemplateSize_wmptsLarge: WMPTemplateSize = 2
WMPTransactionType = Int32
WMPTransactionType_wmpttNoTransaction: WMPTransactionType = 0
WMPTransactionType_wmpttDownload: WMPTransactionType = 1
WMPTransactionType_wmpttBuy: WMPTransactionType = 2
class WMP_WMDM_METADATA_ROUND_TRIP_DEVICE2PC(EasyCastStructure):
    dwCurrentTransactionID: UInt32
    dwReturnedObjectCount: UInt32
    dwUnretrievedObjectCount: UInt32
    dwDeletedObjectStartingOffset: UInt32
    dwFlags: UInt32
    wsObjectPathnameList: Char * 1
    _pack_ = 1
class WMP_WMDM_METADATA_ROUND_TRIP_PC2DEVICE(EasyCastStructure):
    dwChangesSinceTransactionID: UInt32
    dwResultSetStartingIndex: UInt32
    _pack_ = 1
WindowsMediaPlayer = Guid('{6bf52a52-394a-11d3-b153-00c04f79faa6}')
class _WMPOCXEvents(ComPtr):
    extends: Windows.Win32.System.Com.IDispatch
    _iid_ = Guid('{6bf52a51-394a-11d3-b153-00c04f79faa6}')
make_head(_module, 'IFeed')
make_head(_module, 'IFeed2')
make_head(_module, 'IFeedEnclosure')
make_head(_module, 'IFeedEvents')
make_head(_module, 'IFeedFolder')
make_head(_module, 'IFeedFolderEvents')
make_head(_module, 'IFeedItem')
make_head(_module, 'IFeedItem2')
make_head(_module, 'IFeedsEnum')
make_head(_module, 'IFeedsManager')
make_head(_module, 'IWMPAudioRenderConfig')
make_head(_module, 'IWMPCdrom')
make_head(_module, 'IWMPCdromBurn')
make_head(_module, 'IWMPCdromCollection')
make_head(_module, 'IWMPCdromRip')
make_head(_module, 'IWMPClosedCaption')
make_head(_module, 'IWMPClosedCaption2')
make_head(_module, 'IWMPContentContainer')
make_head(_module, 'IWMPContentContainerList')
make_head(_module, 'IWMPContentPartner')
make_head(_module, 'IWMPContentPartnerCallback')
make_head(_module, 'IWMPControls')
make_head(_module, 'IWMPControls2')
make_head(_module, 'IWMPControls3')
make_head(_module, 'IWMPConvert')
make_head(_module, 'IWMPCore')
make_head(_module, 'IWMPCore2')
make_head(_module, 'IWMPCore3')
make_head(_module, 'IWMPDVD')
make_head(_module, 'IWMPDownloadCollection')
make_head(_module, 'IWMPDownloadItem')
make_head(_module, 'IWMPDownloadItem2')
make_head(_module, 'IWMPDownloadManager')
make_head(_module, 'IWMPEffects')
make_head(_module, 'IWMPEffects2')
make_head(_module, 'IWMPError')
make_head(_module, 'IWMPErrorItem')
make_head(_module, 'IWMPErrorItem2')
make_head(_module, 'IWMPEvents')
make_head(_module, 'IWMPEvents2')
make_head(_module, 'IWMPEvents3')
make_head(_module, 'IWMPEvents4')
make_head(_module, 'IWMPFolderMonitorServices')
make_head(_module, 'IWMPGraphCreation')
make_head(_module, 'IWMPLibrary')
make_head(_module, 'IWMPLibrary2')
make_head(_module, 'IWMPLibraryServices')
make_head(_module, 'IWMPLibrarySharingServices')
make_head(_module, 'IWMPMedia')
make_head(_module, 'IWMPMedia2')
make_head(_module, 'IWMPMedia3')
make_head(_module, 'IWMPMediaCollection')
make_head(_module, 'IWMPMediaCollection2')
make_head(_module, 'IWMPMediaPluginRegistrar')
make_head(_module, 'IWMPMetadataPicture')
make_head(_module, 'IWMPMetadataText')
make_head(_module, 'IWMPNetwork')
make_head(_module, 'IWMPNodeRealEstate')
make_head(_module, 'IWMPNodeRealEstateHost')
make_head(_module, 'IWMPNodeWindowed')
make_head(_module, 'IWMPNodeWindowedHost')
make_head(_module, 'IWMPNodeWindowless')
make_head(_module, 'IWMPNodeWindowlessHost')
make_head(_module, 'IWMPPlayer')
make_head(_module, 'IWMPPlayer2')
make_head(_module, 'IWMPPlayer3')
make_head(_module, 'IWMPPlayer4')
make_head(_module, 'IWMPPlayerApplication')
make_head(_module, 'IWMPPlayerServices')
make_head(_module, 'IWMPPlayerServices2')
make_head(_module, 'IWMPPlaylist')
make_head(_module, 'IWMPPlaylistArray')
make_head(_module, 'IWMPPlaylistCollection')
make_head(_module, 'IWMPPlugin')
make_head(_module, 'IWMPPluginEnable')
make_head(_module, 'IWMPPluginUI')
make_head(_module, 'IWMPQuery')
make_head(_module, 'IWMPRemoteMediaServices')
make_head(_module, 'IWMPRenderConfig')
make_head(_module, 'IWMPServices')
make_head(_module, 'IWMPSettings')
make_head(_module, 'IWMPSettings2')
make_head(_module, 'IWMPSkinManager')
make_head(_module, 'IWMPStringCollection')
make_head(_module, 'IWMPStringCollection2')
make_head(_module, 'IWMPSubscriptionService')
make_head(_module, 'IWMPSubscriptionService2')
make_head(_module, 'IWMPSubscriptionServiceCallback')
make_head(_module, 'IWMPSyncDevice')
make_head(_module, 'IWMPSyncDevice2')
make_head(_module, 'IWMPSyncDevice3')
make_head(_module, 'IWMPSyncServices')
make_head(_module, 'IWMPTranscodePolicy')
make_head(_module, 'IWMPUserEventSink')
make_head(_module, 'IWMPVideoRenderConfig')
make_head(_module, 'IWMPWindowMessageSink')
make_head(_module, 'IXFeed')
make_head(_module, 'IXFeed2')
make_head(_module, 'IXFeedEnclosure')
make_head(_module, 'IXFeedEvents')
make_head(_module, 'IXFeedFolder')
make_head(_module, 'IXFeedFolderEvents')
make_head(_module, 'IXFeedItem')
make_head(_module, 'IXFeedItem2')
make_head(_module, 'IXFeedsEnum')
make_head(_module, 'IXFeedsManager')
make_head(_module, 'TimedLevel')
make_head(_module, 'WMPContextMenuInfo')
make_head(_module, 'WMP_WMDM_METADATA_ROUND_TRIP_DEVICE2PC')
make_head(_module, 'WMP_WMDM_METADATA_ROUND_TRIP_PC2DEVICE')
make_head(_module, '_WMPOCXEvents')
