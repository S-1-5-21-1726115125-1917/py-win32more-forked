from __future__ import annotations
from ctypes import c_void_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from typing import Generic, TypeVar
K = TypeVar('T')
T = TypeVar('T')
V = TypeVar('V')
TProgress = TypeVar('TProgress')
TResult = TypeVar('TResult')
TSender = TypeVar('TSender')
from Windows import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
from Windows._winrt import WinRT_String, winrt_commethod, winrt_mixinmethod, winrt_classmethod, winrt_factorymethod, winrt_activatemethod
import Windows.Win32.System.WinRT
import Windows.ApplicationModel.Core
import Windows.Foundation
import Windows.Foundation.Collections
import Windows.Perception.Spatial
import Windows.System
import Windows.UI
import Windows.UI.Popups
import Windows.UI.StartScreen
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
ForegroundText = Int32
ForegroundText_Dark: ForegroundText = 0
ForegroundText_Light: ForegroundText = 1
class IJumpList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('b0234c3e-cd6f-4cb6-a6-11-61-fd-50-5f-3e-d1')
    @winrt_commethod(6)
    def get_Items(self) -> Windows.Foundation.Collections.IVector[Windows.UI.StartScreen.JumpListItem]: ...
    @winrt_commethod(7)
    def get_SystemGroupKind(self) -> Windows.UI.StartScreen.JumpListSystemGroupKind: ...
    @winrt_commethod(8)
    def put_SystemGroupKind(self, value: Windows.UI.StartScreen.JumpListSystemGroupKind) -> Void: ...
    @winrt_commethod(9)
    def SaveAsync(self) -> Windows.Foundation.IAsyncAction: ...
    Items = property(get_Items, None)
    SystemGroupKind = property(get_SystemGroupKind, put_SystemGroupKind)
class IJumpListItem(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7adb6717-8b5d-4820-99-5b-9b-41-8d-be-48-b0')
    @winrt_commethod(6)
    def get_Kind(self) -> Windows.UI.StartScreen.JumpListItemKind: ...
    @winrt_commethod(7)
    def get_Arguments(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_RemovedByUser(self) -> Boolean: ...
    @winrt_commethod(9)
    def get_Description(self) -> WinRT_String: ...
    @winrt_commethod(10)
    def put_Description(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(11)
    def get_DisplayName(self) -> WinRT_String: ...
    @winrt_commethod(12)
    def put_DisplayName(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(13)
    def get_GroupName(self) -> WinRT_String: ...
    @winrt_commethod(14)
    def put_GroupName(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(15)
    def get_Logo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(16)
    def put_Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    Kind = property(get_Kind, None)
    Arguments = property(get_Arguments, None)
    RemovedByUser = property(get_RemovedByUser, None)
    Description = property(get_Description, put_Description)
    DisplayName = property(get_DisplayName, put_DisplayName)
    GroupName = property(get_GroupName, put_GroupName)
    Logo = property(get_Logo, put_Logo)
class IJumpListItemStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f1bfc4e8-c7aa-49cb-8d-de-ec-fc-cd-7a-d7-e4')
    @winrt_commethod(6)
    def CreateWithArguments(self, arguments: WinRT_String, displayName: WinRT_String) -> Windows.UI.StartScreen.JumpListItem: ...
    @winrt_commethod(7)
    def CreateSeparator(self) -> Windows.UI.StartScreen.JumpListItem: ...
class IJumpListStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('a7e0c681-e67e-4b74-82-50-3f-32-2c-4d-92-c3')
    @winrt_commethod(6)
    def LoadCurrentAsync(self) -> Windows.Foundation.IAsyncOperation[Windows.UI.StartScreen.JumpList]: ...
    @winrt_commethod(7)
    def IsSupported(self) -> Boolean: ...
class ISecondaryTile(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('9e9e51e0-2bb5-4bc0-bb-8d-42-b2-3a-bc-c8-8d')
    @winrt_commethod(6)
    def put_TileId(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def get_TileId(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def put_Arguments(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(9)
    def get_Arguments(self) -> WinRT_String: ...
    @winrt_commethod(10)
    def put_ShortName(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(11)
    def get_ShortName(self) -> WinRT_String: ...
    @winrt_commethod(12)
    def put_DisplayName(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(13)
    def get_DisplayName(self) -> WinRT_String: ...
    @winrt_commethod(14)
    def put_Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(15)
    def get_Logo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(16)
    def put_SmallLogo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(17)
    def get_SmallLogo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(18)
    def put_WideLogo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(19)
    def get_WideLogo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(20)
    def put_LockScreenBadgeLogo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(21)
    def get_LockScreenBadgeLogo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(22)
    def put_LockScreenDisplayBadgeAndTileText(self, value: Boolean) -> Void: ...
    @winrt_commethod(23)
    def get_LockScreenDisplayBadgeAndTileText(self) -> Boolean: ...
    @winrt_commethod(24)
    def put_TileOptions(self, value: Windows.UI.StartScreen.TileOptions) -> Void: ...
    @winrt_commethod(25)
    def get_TileOptions(self) -> Windows.UI.StartScreen.TileOptions: ...
    @winrt_commethod(26)
    def put_ForegroundText(self, value: Windows.UI.StartScreen.ForegroundText) -> Void: ...
    @winrt_commethod(27)
    def get_ForegroundText(self) -> Windows.UI.StartScreen.ForegroundText: ...
    @winrt_commethod(28)
    def put_BackgroundColor(self, value: Windows.UI.Color) -> Void: ...
    @winrt_commethod(29)
    def get_BackgroundColor(self) -> Windows.UI.Color: ...
    @winrt_commethod(30)
    def RequestCreateAsync(self) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(31)
    def RequestCreateAsyncWithPoint(self, invocationPoint: Windows.Foundation.Point) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(32)
    def RequestCreateAsyncWithRect(self, selection: Windows.Foundation.Rect) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(33)
    def RequestCreateAsyncWithRectAndPlacement(self, selection: Windows.Foundation.Rect, preferredPlacement: Windows.UI.Popups.Placement) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(34)
    def RequestDeleteAsync(self) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(35)
    def RequestDeleteAsyncWithPoint(self, invocationPoint: Windows.Foundation.Point) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(36)
    def RequestDeleteAsyncWithRect(self, selection: Windows.Foundation.Rect) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(37)
    def RequestDeleteAsyncWithRectAndPlacement(self, selection: Windows.Foundation.Rect, preferredPlacement: Windows.UI.Popups.Placement) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(38)
    def UpdateAsync(self) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    TileId = property(get_TileId, put_TileId)
    Arguments = property(get_Arguments, put_Arguments)
    ShortName = property(get_ShortName, put_ShortName)
    DisplayName = property(get_DisplayName, put_DisplayName)
    Logo = property(get_Logo, put_Logo)
    SmallLogo = property(get_SmallLogo, put_SmallLogo)
    WideLogo = property(get_WideLogo, put_WideLogo)
    LockScreenBadgeLogo = property(get_LockScreenBadgeLogo, put_LockScreenBadgeLogo)
    LockScreenDisplayBadgeAndTileText = property(get_LockScreenDisplayBadgeAndTileText, put_LockScreenDisplayBadgeAndTileText)
    TileOptions = property(get_TileOptions, put_TileOptions)
    ForegroundText = property(get_ForegroundText, put_ForegroundText)
    BackgroundColor = property(get_BackgroundColor, put_BackgroundColor)
class ISecondaryTile2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('b2f6cc35-3250-4990-92-3c-29-4a-b4-b6-94-dd')
    @winrt_commethod(6)
    def put_PhoneticName(self, value: WinRT_String) -> Void: ...
    @winrt_commethod(7)
    def get_PhoneticName(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def get_VisualElements(self) -> Windows.UI.StartScreen.SecondaryTileVisualElements: ...
    @winrt_commethod(9)
    def put_RoamingEnabled(self, value: Boolean) -> Void: ...
    @winrt_commethod(10)
    def get_RoamingEnabled(self) -> Boolean: ...
    @winrt_commethod(11)
    def add_VisualElementsRequested(self, handler: Windows.Foundation.TypedEventHandler[Windows.UI.StartScreen.SecondaryTile, Windows.UI.StartScreen.VisualElementsRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_commethod(12)
    def remove_VisualElementsRequested(self, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    PhoneticName = property(get_PhoneticName, put_PhoneticName)
    VisualElements = property(get_VisualElements, None)
    RoamingEnabled = property(get_RoamingEnabled, put_RoamingEnabled)
class ISecondaryTileFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('57f52ca0-51bc-4abf-8e-bf-62-7a-03-98-b0-5a')
    @winrt_commethod(6)
    def CreateTile(self, tileId: WinRT_String, shortName: WinRT_String, displayName: WinRT_String, arguments: WinRT_String, tileOptions: Windows.UI.StartScreen.TileOptions, logoReference: Windows.Foundation.Uri) -> Windows.UI.StartScreen.SecondaryTile: ...
    @winrt_commethod(7)
    def CreateWideTile(self, tileId: WinRT_String, shortName: WinRT_String, displayName: WinRT_String, arguments: WinRT_String, tileOptions: Windows.UI.StartScreen.TileOptions, logoReference: Windows.Foundation.Uri, wideLogoReference: Windows.Foundation.Uri) -> Windows.UI.StartScreen.SecondaryTile: ...
    @winrt_commethod(8)
    def CreateWithId(self, tileId: WinRT_String) -> Windows.UI.StartScreen.SecondaryTile: ...
class ISecondaryTileFactory2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('274b8a3b-522d-448e-9e-b2-d0-67-2a-b3-45-c8')
    @winrt_commethod(6)
    def CreateMinimalTile(self, tileId: WinRT_String, displayName: WinRT_String, arguments: WinRT_String, square150x150Logo: Windows.Foundation.Uri, desiredSize: Windows.UI.StartScreen.TileSize) -> Windows.UI.StartScreen.SecondaryTile: ...
class ISecondaryTileStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('99908dae-d051-4676-87-fe-9e-c2-42-d8-3c-74')
    @winrt_commethod(6)
    def Exists(self, tileId: WinRT_String) -> Boolean: ...
    @winrt_commethod(7)
    def FindAllAsync(self) -> Windows.Foundation.IAsyncOperation[Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTile]]: ...
    @winrt_commethod(8)
    def FindAllForApplicationAsync(self, applicationId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTile]]: ...
    @winrt_commethod(9)
    def FindAllForPackageAsync(self) -> Windows.Foundation.IAsyncOperation[Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTile]]: ...
class ISecondaryTileVisualElements(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('1d8df333-815e-413f-9f-50-a8-1d-a7-0a-96-b2')
    @winrt_commethod(6)
    def put_Square30x30Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(7)
    def get_Square30x30Logo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(8)
    def put_Square70x70Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(9)
    def get_Square70x70Logo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(10)
    def put_Square150x150Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(11)
    def get_Square150x150Logo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(12)
    def put_Wide310x150Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(13)
    def get_Wide310x150Logo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(14)
    def put_Square310x310Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(15)
    def get_Square310x310Logo(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(16)
    def put_ForegroundText(self, value: Windows.UI.StartScreen.ForegroundText) -> Void: ...
    @winrt_commethod(17)
    def get_ForegroundText(self) -> Windows.UI.StartScreen.ForegroundText: ...
    @winrt_commethod(18)
    def put_BackgroundColor(self, value: Windows.UI.Color) -> Void: ...
    @winrt_commethod(19)
    def get_BackgroundColor(self) -> Windows.UI.Color: ...
    @winrt_commethod(20)
    def put_ShowNameOnSquare150x150Logo(self, value: Boolean) -> Void: ...
    @winrt_commethod(21)
    def get_ShowNameOnSquare150x150Logo(self) -> Boolean: ...
    @winrt_commethod(22)
    def put_ShowNameOnWide310x150Logo(self, value: Boolean) -> Void: ...
    @winrt_commethod(23)
    def get_ShowNameOnWide310x150Logo(self) -> Boolean: ...
    @winrt_commethod(24)
    def put_ShowNameOnSquare310x310Logo(self, value: Boolean) -> Void: ...
    @winrt_commethod(25)
    def get_ShowNameOnSquare310x310Logo(self) -> Boolean: ...
    Square30x30Logo = property(get_Square30x30Logo, put_Square30x30Logo)
    Square70x70Logo = property(get_Square70x70Logo, put_Square70x70Logo)
    Square150x150Logo = property(get_Square150x150Logo, put_Square150x150Logo)
    Wide310x150Logo = property(get_Wide310x150Logo, put_Wide310x150Logo)
    Square310x310Logo = property(get_Square310x310Logo, put_Square310x310Logo)
    ForegroundText = property(get_ForegroundText, put_ForegroundText)
    BackgroundColor = property(get_BackgroundColor, put_BackgroundColor)
    ShowNameOnSquare150x150Logo = property(get_ShowNameOnSquare150x150Logo, put_ShowNameOnSquare150x150Logo)
    ShowNameOnWide310x150Logo = property(get_ShowNameOnWide310x150Logo, put_ShowNameOnWide310x150Logo)
    ShowNameOnSquare310x310Logo = property(get_ShowNameOnSquare310x310Logo, put_ShowNameOnSquare310x310Logo)
class ISecondaryTileVisualElements2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('fd2e31d0-57dc-4794-8e-cf-56-82-f5-f3-e6-ef')
    @winrt_commethod(6)
    def put_Square71x71Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(7)
    def get_Square71x71Logo(self) -> Windows.Foundation.Uri: ...
    Square71x71Logo = property(get_Square71x71Logo, put_Square71x71Logo)
class ISecondaryTileVisualElements3(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('56b55ad6-d15c-40f4-81-e7-57-ff-d8-f8-a4-e9')
    @winrt_commethod(6)
    def put_Square44x44Logo(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(7)
    def get_Square44x44Logo(self) -> Windows.Foundation.Uri: ...
    Square44x44Logo = property(get_Square44x44Logo, put_Square44x44Logo)
class ISecondaryTileVisualElements4(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('66566117-b544-40d2-8d-12-74-d4-ec-24-d0-4c')
    @winrt_commethod(6)
    def get_MixedRealityModel(self) -> Windows.UI.StartScreen.TileMixedRealityModel: ...
    MixedRealityModel = property(get_MixedRealityModel, None)
class IStartScreenManager(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('4a1dcbcb-26e9-4eb4-89-33-85-9e-b6-ec-db-29')
    @winrt_commethod(6)
    def get_User(self) -> Windows.System.User: ...
    @winrt_commethod(7)
    def SupportsAppListEntry(self, appListEntry: Windows.ApplicationModel.Core.AppListEntry) -> Boolean: ...
    @winrt_commethod(8)
    def ContainsAppListEntryAsync(self, appListEntry: Windows.ApplicationModel.Core.AppListEntry) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(9)
    def RequestAddAppListEntryAsync(self, appListEntry: Windows.ApplicationModel.Core.AppListEntry) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    User = property(get_User, None)
class IStartScreenManager2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('08a716b6-316b-4ad9-ac-b8-fe-9c-f0-0b-d6-08')
    @winrt_commethod(6)
    def ContainsSecondaryTileAsync(self, tileId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(7)
    def TryRemoveSecondaryTileAsync(self, tileId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
class IStartScreenManagerStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7865ef0f-b585-464e-89-93-34-e8-f8-73-8d-48')
    @winrt_commethod(6)
    def GetDefault(self) -> Windows.UI.StartScreen.StartScreenManager: ...
    @winrt_commethod(7)
    def GetForUser(self, user: Windows.System.User) -> Windows.UI.StartScreen.StartScreenManager: ...
class ITileMixedRealityModel(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('b0764e5b-887d-4242-9a-19-3d-0a-4e-a7-80-31')
    @winrt_commethod(6)
    def put_Uri(self, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_commethod(7)
    def get_Uri(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(8)
    def put_BoundingBox(self, value: Windows.Foundation.IReference[Windows.Perception.Spatial.SpatialBoundingBox]) -> Void: ...
    @winrt_commethod(9)
    def get_BoundingBox(self) -> Windows.Foundation.IReference[Windows.Perception.Spatial.SpatialBoundingBox]: ...
    Uri = property(get_Uri, put_Uri)
    BoundingBox = property(get_BoundingBox, put_BoundingBox)
class ITileMixedRealityModel2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('439470b2-d7c5-410b-83-19-94-86-a2-7b-6c-67')
    @winrt_commethod(6)
    def put_ActivationBehavior(self, value: Windows.UI.StartScreen.TileMixedRealityModelActivationBehavior) -> Void: ...
    @winrt_commethod(7)
    def get_ActivationBehavior(self) -> Windows.UI.StartScreen.TileMixedRealityModelActivationBehavior: ...
    ActivationBehavior = property(get_ActivationBehavior, put_ActivationBehavior)
class IVisualElementsRequest(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('c138333a-9308-4072-88-cc-d0-68-db-34-7c-68')
    @winrt_commethod(6)
    def get_VisualElements(self) -> Windows.UI.StartScreen.SecondaryTileVisualElements: ...
    @winrt_commethod(7)
    def get_AlternateVisualElements(self) -> Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTileVisualElements]: ...
    @winrt_commethod(8)
    def get_Deadline(self) -> Windows.Foundation.DateTime: ...
    @winrt_commethod(9)
    def GetDeferral(self) -> Windows.UI.StartScreen.VisualElementsRequestDeferral: ...
    VisualElements = property(get_VisualElements, None)
    AlternateVisualElements = property(get_AlternateVisualElements, None)
    Deadline = property(get_Deadline, None)
class IVisualElementsRequestDeferral(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('a1656eb0-0126-4357-82-04-bd-82-bb-2a-04-6d')
    @winrt_commethod(6)
    def Complete(self) -> Void: ...
class IVisualElementsRequestedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7b6fc982-3a0d-4ece-af-96-cd-17-e1-b0-0b-2d')
    @winrt_commethod(6)
    def get_Request(self) -> Windows.UI.StartScreen.VisualElementsRequest: ...
    Request = property(get_Request, None)
class JumpList(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.JumpList'
    @winrt_mixinmethod
    def get_Items(self: Windows.UI.StartScreen.IJumpList) -> Windows.Foundation.Collections.IVector[Windows.UI.StartScreen.JumpListItem]: ...
    @winrt_mixinmethod
    def get_SystemGroupKind(self: Windows.UI.StartScreen.IJumpList) -> Windows.UI.StartScreen.JumpListSystemGroupKind: ...
    @winrt_mixinmethod
    def put_SystemGroupKind(self: Windows.UI.StartScreen.IJumpList, value: Windows.UI.StartScreen.JumpListSystemGroupKind) -> Void: ...
    @winrt_mixinmethod
    def SaveAsync(self: Windows.UI.StartScreen.IJumpList) -> Windows.Foundation.IAsyncAction: ...
    @winrt_classmethod
    def LoadCurrentAsync(cls: Windows.UI.StartScreen.IJumpListStatics) -> Windows.Foundation.IAsyncOperation[Windows.UI.StartScreen.JumpList]: ...
    @winrt_classmethod
    def IsSupported(cls: Windows.UI.StartScreen.IJumpListStatics) -> Boolean: ...
    Items = property(get_Items, None)
    SystemGroupKind = property(get_SystemGroupKind, put_SystemGroupKind)
class JumpListItem(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.JumpListItem'
    @winrt_mixinmethod
    def get_Kind(self: Windows.UI.StartScreen.IJumpListItem) -> Windows.UI.StartScreen.JumpListItemKind: ...
    @winrt_mixinmethod
    def get_Arguments(self: Windows.UI.StartScreen.IJumpListItem) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_RemovedByUser(self: Windows.UI.StartScreen.IJumpListItem) -> Boolean: ...
    @winrt_mixinmethod
    def get_Description(self: Windows.UI.StartScreen.IJumpListItem) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Description(self: Windows.UI.StartScreen.IJumpListItem, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_DisplayName(self: Windows.UI.StartScreen.IJumpListItem) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_DisplayName(self: Windows.UI.StartScreen.IJumpListItem, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_GroupName(self: Windows.UI.StartScreen.IJumpListItem) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_GroupName(self: Windows.UI.StartScreen.IJumpListItem, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Logo(self: Windows.UI.StartScreen.IJumpListItem) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Logo(self: Windows.UI.StartScreen.IJumpListItem, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_classmethod
    def CreateWithArguments(cls: Windows.UI.StartScreen.IJumpListItemStatics, arguments: WinRT_String, displayName: WinRT_String) -> Windows.UI.StartScreen.JumpListItem: ...
    @winrt_classmethod
    def CreateSeparator(cls: Windows.UI.StartScreen.IJumpListItemStatics) -> Windows.UI.StartScreen.JumpListItem: ...
    Kind = property(get_Kind, None)
    Arguments = property(get_Arguments, None)
    RemovedByUser = property(get_RemovedByUser, None)
    Description = property(get_Description, put_Description)
    DisplayName = property(get_DisplayName, put_DisplayName)
    GroupName = property(get_GroupName, put_GroupName)
    Logo = property(get_Logo, put_Logo)
JumpListItemKind = Int32
JumpListItemKind_Arguments: JumpListItemKind = 0
JumpListItemKind_Separator: JumpListItemKind = 1
JumpListSystemGroupKind = Int32
JumpListSystemGroupKind_None: JumpListSystemGroupKind = 0
JumpListSystemGroupKind_Frequent: JumpListSystemGroupKind = 1
JumpListSystemGroupKind_Recent: JumpListSystemGroupKind = 2
class SecondaryTile(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.SecondaryTile'
    @winrt_activatemethod
    def New(cls) -> Windows.UI.StartScreen.SecondaryTile: ...
    @winrt_factorymethod
    def CreateTile(cls: Windows.UI.StartScreen.ISecondaryTileFactory, tileId: WinRT_String, shortName: WinRT_String, displayName: WinRT_String, arguments: WinRT_String, tileOptions: Windows.UI.StartScreen.TileOptions, logoReference: Windows.Foundation.Uri) -> Windows.UI.StartScreen.SecondaryTile: ...
    @winrt_factorymethod
    def CreateWideTile(cls: Windows.UI.StartScreen.ISecondaryTileFactory, tileId: WinRT_String, shortName: WinRT_String, displayName: WinRT_String, arguments: WinRT_String, tileOptions: Windows.UI.StartScreen.TileOptions, logoReference: Windows.Foundation.Uri, wideLogoReference: Windows.Foundation.Uri) -> Windows.UI.StartScreen.SecondaryTile: ...
    @winrt_factorymethod
    def CreateWithId(cls: Windows.UI.StartScreen.ISecondaryTileFactory, tileId: WinRT_String) -> Windows.UI.StartScreen.SecondaryTile: ...
    @winrt_factorymethod
    def CreateMinimalTile(cls: Windows.UI.StartScreen.ISecondaryTileFactory2, tileId: WinRT_String, displayName: WinRT_String, arguments: WinRT_String, square150x150Logo: Windows.Foundation.Uri, desiredSize: Windows.UI.StartScreen.TileSize) -> Windows.UI.StartScreen.SecondaryTile: ...
    @winrt_mixinmethod
    def put_TileId(self: Windows.UI.StartScreen.ISecondaryTile, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_TileId(self: Windows.UI.StartScreen.ISecondaryTile) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Arguments(self: Windows.UI.StartScreen.ISecondaryTile, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_Arguments(self: Windows.UI.StartScreen.ISecondaryTile) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_ShortName(self: Windows.UI.StartScreen.ISecondaryTile, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_ShortName(self: Windows.UI.StartScreen.ISecondaryTile) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_DisplayName(self: Windows.UI.StartScreen.ISecondaryTile, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_DisplayName(self: Windows.UI.StartScreen.ISecondaryTile) -> WinRT_String: ...
    @winrt_mixinmethod
    def put_Logo(self: Windows.UI.StartScreen.ISecondaryTile, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Logo(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_SmallLogo(self: Windows.UI.StartScreen.ISecondaryTile, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_SmallLogo(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_WideLogo(self: Windows.UI.StartScreen.ISecondaryTile, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_WideLogo(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_LockScreenBadgeLogo(self: Windows.UI.StartScreen.ISecondaryTile, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_LockScreenBadgeLogo(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_LockScreenDisplayBadgeAndTileText(self: Windows.UI.StartScreen.ISecondaryTile, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_LockScreenDisplayBadgeAndTileText(self: Windows.UI.StartScreen.ISecondaryTile) -> Boolean: ...
    @winrt_mixinmethod
    def put_TileOptions(self: Windows.UI.StartScreen.ISecondaryTile, value: Windows.UI.StartScreen.TileOptions) -> Void: ...
    @winrt_mixinmethod
    def get_TileOptions(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.UI.StartScreen.TileOptions: ...
    @winrt_mixinmethod
    def put_ForegroundText(self: Windows.UI.StartScreen.ISecondaryTile, value: Windows.UI.StartScreen.ForegroundText) -> Void: ...
    @winrt_mixinmethod
    def get_ForegroundText(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.UI.StartScreen.ForegroundText: ...
    @winrt_mixinmethod
    def put_BackgroundColor(self: Windows.UI.StartScreen.ISecondaryTile, value: Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_BackgroundColor(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.UI.Color: ...
    @winrt_mixinmethod
    def RequestCreateAsync(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestCreateAsyncWithPoint(self: Windows.UI.StartScreen.ISecondaryTile, invocationPoint: Windows.Foundation.Point) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestCreateAsyncWithRect(self: Windows.UI.StartScreen.ISecondaryTile, selection: Windows.Foundation.Rect) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestCreateAsyncWithRectAndPlacement(self: Windows.UI.StartScreen.ISecondaryTile, selection: Windows.Foundation.Rect, preferredPlacement: Windows.UI.Popups.Placement) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestDeleteAsync(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestDeleteAsyncWithPoint(self: Windows.UI.StartScreen.ISecondaryTile, invocationPoint: Windows.Foundation.Point) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestDeleteAsyncWithRect(self: Windows.UI.StartScreen.ISecondaryTile, selection: Windows.Foundation.Rect) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestDeleteAsyncWithRectAndPlacement(self: Windows.UI.StartScreen.ISecondaryTile, selection: Windows.Foundation.Rect, preferredPlacement: Windows.UI.Popups.Placement) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def UpdateAsync(self: Windows.UI.StartScreen.ISecondaryTile) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def put_PhoneticName(self: Windows.UI.StartScreen.ISecondaryTile2, value: WinRT_String) -> Void: ...
    @winrt_mixinmethod
    def get_PhoneticName(self: Windows.UI.StartScreen.ISecondaryTile2) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_VisualElements(self: Windows.UI.StartScreen.ISecondaryTile2) -> Windows.UI.StartScreen.SecondaryTileVisualElements: ...
    @winrt_mixinmethod
    def put_RoamingEnabled(self: Windows.UI.StartScreen.ISecondaryTile2, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_RoamingEnabled(self: Windows.UI.StartScreen.ISecondaryTile2) -> Boolean: ...
    @winrt_mixinmethod
    def add_VisualElementsRequested(self: Windows.UI.StartScreen.ISecondaryTile2, handler: Windows.Foundation.TypedEventHandler[Windows.UI.StartScreen.SecondaryTile, Windows.UI.StartScreen.VisualElementsRequestedEventArgs]) -> Windows.Foundation.EventRegistrationToken: ...
    @winrt_mixinmethod
    def remove_VisualElementsRequested(self: Windows.UI.StartScreen.ISecondaryTile2, token: Windows.Foundation.EventRegistrationToken) -> Void: ...
    @winrt_classmethod
    def Exists(cls: Windows.UI.StartScreen.ISecondaryTileStatics, tileId: WinRT_String) -> Boolean: ...
    @winrt_classmethod
    def FindAllAsync(cls: Windows.UI.StartScreen.ISecondaryTileStatics) -> Windows.Foundation.IAsyncOperation[Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTile]]: ...
    @winrt_classmethod
    def FindAllForApplicationAsync(cls: Windows.UI.StartScreen.ISecondaryTileStatics, applicationId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTile]]: ...
    @winrt_classmethod
    def FindAllForPackageAsync(cls: Windows.UI.StartScreen.ISecondaryTileStatics) -> Windows.Foundation.IAsyncOperation[Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTile]]: ...
    TileId = property(get_TileId, put_TileId)
    Arguments = property(get_Arguments, put_Arguments)
    ShortName = property(get_ShortName, put_ShortName)
    DisplayName = property(get_DisplayName, put_DisplayName)
    Logo = property(get_Logo, put_Logo)
    SmallLogo = property(get_SmallLogo, put_SmallLogo)
    WideLogo = property(get_WideLogo, put_WideLogo)
    LockScreenBadgeLogo = property(get_LockScreenBadgeLogo, put_LockScreenBadgeLogo)
    LockScreenDisplayBadgeAndTileText = property(get_LockScreenDisplayBadgeAndTileText, put_LockScreenDisplayBadgeAndTileText)
    TileOptions = property(get_TileOptions, put_TileOptions)
    ForegroundText = property(get_ForegroundText, put_ForegroundText)
    BackgroundColor = property(get_BackgroundColor, put_BackgroundColor)
    PhoneticName = property(get_PhoneticName, put_PhoneticName)
    VisualElements = property(get_VisualElements, None)
    RoamingEnabled = property(get_RoamingEnabled, put_RoamingEnabled)
class SecondaryTileVisualElements(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.SecondaryTileVisualElements'
    @winrt_mixinmethod
    def put_Square30x30Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Square30x30Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Square70x70Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Square70x70Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Square150x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Square150x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Wide310x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Wide310x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Square310x310Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Square310x310Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_ForegroundText(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Windows.UI.StartScreen.ForegroundText) -> Void: ...
    @winrt_mixinmethod
    def get_ForegroundText(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Windows.UI.StartScreen.ForegroundText: ...
    @winrt_mixinmethod
    def put_BackgroundColor(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Windows.UI.Color) -> Void: ...
    @winrt_mixinmethod
    def get_BackgroundColor(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Windows.UI.Color: ...
    @winrt_mixinmethod
    def put_ShowNameOnSquare150x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_ShowNameOnSquare150x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Boolean: ...
    @winrt_mixinmethod
    def put_ShowNameOnWide310x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_ShowNameOnWide310x150Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Boolean: ...
    @winrt_mixinmethod
    def put_ShowNameOnSquare310x310Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def get_ShowNameOnSquare310x310Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements) -> Boolean: ...
    @winrt_mixinmethod
    def put_Square71x71Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements2, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Square71x71Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements2) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_Square44x44Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements3, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Square44x44Logo(self: Windows.UI.StartScreen.ISecondaryTileVisualElements3) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def get_MixedRealityModel(self: Windows.UI.StartScreen.ISecondaryTileVisualElements4) -> Windows.UI.StartScreen.TileMixedRealityModel: ...
    Square30x30Logo = property(get_Square30x30Logo, put_Square30x30Logo)
    Square70x70Logo = property(get_Square70x70Logo, put_Square70x70Logo)
    Square150x150Logo = property(get_Square150x150Logo, put_Square150x150Logo)
    Wide310x150Logo = property(get_Wide310x150Logo, put_Wide310x150Logo)
    Square310x310Logo = property(get_Square310x310Logo, put_Square310x310Logo)
    ForegroundText = property(get_ForegroundText, put_ForegroundText)
    BackgroundColor = property(get_BackgroundColor, put_BackgroundColor)
    ShowNameOnSquare150x150Logo = property(get_ShowNameOnSquare150x150Logo, put_ShowNameOnSquare150x150Logo)
    ShowNameOnWide310x150Logo = property(get_ShowNameOnWide310x150Logo, put_ShowNameOnWide310x150Logo)
    ShowNameOnSquare310x310Logo = property(get_ShowNameOnSquare310x310Logo, put_ShowNameOnSquare310x310Logo)
    Square71x71Logo = property(get_Square71x71Logo, put_Square71x71Logo)
    Square44x44Logo = property(get_Square44x44Logo, put_Square44x44Logo)
    MixedRealityModel = property(get_MixedRealityModel, None)
class StartScreenManager(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.StartScreenManager'
    @winrt_mixinmethod
    def get_User(self: Windows.UI.StartScreen.IStartScreenManager) -> Windows.System.User: ...
    @winrt_mixinmethod
    def SupportsAppListEntry(self: Windows.UI.StartScreen.IStartScreenManager, appListEntry: Windows.ApplicationModel.Core.AppListEntry) -> Boolean: ...
    @winrt_mixinmethod
    def ContainsAppListEntryAsync(self: Windows.UI.StartScreen.IStartScreenManager, appListEntry: Windows.ApplicationModel.Core.AppListEntry) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def RequestAddAppListEntryAsync(self: Windows.UI.StartScreen.IStartScreenManager, appListEntry: Windows.ApplicationModel.Core.AppListEntry) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def ContainsSecondaryTileAsync(self: Windows.UI.StartScreen.IStartScreenManager2, tileId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def TryRemoveSecondaryTileAsync(self: Windows.UI.StartScreen.IStartScreenManager2, tileId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_classmethod
    def GetDefault(cls: Windows.UI.StartScreen.IStartScreenManagerStatics) -> Windows.UI.StartScreen.StartScreenManager: ...
    @winrt_classmethod
    def GetForUser(cls: Windows.UI.StartScreen.IStartScreenManagerStatics, user: Windows.System.User) -> Windows.UI.StartScreen.StartScreenManager: ...
    User = property(get_User, None)
class TileMixedRealityModel(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.TileMixedRealityModel'
    @winrt_mixinmethod
    def put_Uri(self: Windows.UI.StartScreen.ITileMixedRealityModel, value: Windows.Foundation.Uri) -> Void: ...
    @winrt_mixinmethod
    def get_Uri(self: Windows.UI.StartScreen.ITileMixedRealityModel) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def put_BoundingBox(self: Windows.UI.StartScreen.ITileMixedRealityModel, value: Windows.Foundation.IReference[Windows.Perception.Spatial.SpatialBoundingBox]) -> Void: ...
    @winrt_mixinmethod
    def get_BoundingBox(self: Windows.UI.StartScreen.ITileMixedRealityModel) -> Windows.Foundation.IReference[Windows.Perception.Spatial.SpatialBoundingBox]: ...
    @winrt_mixinmethod
    def put_ActivationBehavior(self: Windows.UI.StartScreen.ITileMixedRealityModel2, value: Windows.UI.StartScreen.TileMixedRealityModelActivationBehavior) -> Void: ...
    @winrt_mixinmethod
    def get_ActivationBehavior(self: Windows.UI.StartScreen.ITileMixedRealityModel2) -> Windows.UI.StartScreen.TileMixedRealityModelActivationBehavior: ...
    Uri = property(get_Uri, put_Uri)
    BoundingBox = property(get_BoundingBox, put_BoundingBox)
    ActivationBehavior = property(get_ActivationBehavior, put_ActivationBehavior)
TileMixedRealityModelActivationBehavior = Int32
TileMixedRealityModelActivationBehavior_Default: TileMixedRealityModelActivationBehavior = 0
TileMixedRealityModelActivationBehavior_None: TileMixedRealityModelActivationBehavior = 1
TileOptions = UInt32
TileOptions_None: TileOptions = 0
TileOptions_ShowNameOnLogo: TileOptions = 1
TileOptions_ShowNameOnWideLogo: TileOptions = 2
TileOptions_CopyOnDeployment: TileOptions = 4
TileSize = Int32
TileSize_Default: TileSize = 0
TileSize_Square30x30: TileSize = 1
TileSize_Square70x70: TileSize = 2
TileSize_Square150x150: TileSize = 3
TileSize_Wide310x150: TileSize = 4
TileSize_Square310x310: TileSize = 5
TileSize_Square71x71: TileSize = 6
TileSize_Square44x44: TileSize = 7
class VisualElementsRequest(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.VisualElementsRequest'
    @winrt_mixinmethod
    def get_VisualElements(self: Windows.UI.StartScreen.IVisualElementsRequest) -> Windows.UI.StartScreen.SecondaryTileVisualElements: ...
    @winrt_mixinmethod
    def get_AlternateVisualElements(self: Windows.UI.StartScreen.IVisualElementsRequest) -> Windows.Foundation.Collections.IVectorView[Windows.UI.StartScreen.SecondaryTileVisualElements]: ...
    @winrt_mixinmethod
    def get_Deadline(self: Windows.UI.StartScreen.IVisualElementsRequest) -> Windows.Foundation.DateTime: ...
    @winrt_mixinmethod
    def GetDeferral(self: Windows.UI.StartScreen.IVisualElementsRequest) -> Windows.UI.StartScreen.VisualElementsRequestDeferral: ...
    VisualElements = property(get_VisualElements, None)
    AlternateVisualElements = property(get_AlternateVisualElements, None)
    Deadline = property(get_Deadline, None)
class VisualElementsRequestDeferral(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.VisualElementsRequestDeferral'
    @winrt_mixinmethod
    def Complete(self: Windows.UI.StartScreen.IVisualElementsRequestDeferral) -> Void: ...
class VisualElementsRequestedEventArgs(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.UI.StartScreen.VisualElementsRequestedEventArgs'
    @winrt_mixinmethod
    def get_Request(self: Windows.UI.StartScreen.IVisualElementsRequestedEventArgs) -> Windows.UI.StartScreen.VisualElementsRequest: ...
    Request = property(get_Request, None)
make_head(_module, 'IJumpList')
make_head(_module, 'IJumpListItem')
make_head(_module, 'IJumpListItemStatics')
make_head(_module, 'IJumpListStatics')
make_head(_module, 'ISecondaryTile')
make_head(_module, 'ISecondaryTile2')
make_head(_module, 'ISecondaryTileFactory')
make_head(_module, 'ISecondaryTileFactory2')
make_head(_module, 'ISecondaryTileStatics')
make_head(_module, 'ISecondaryTileVisualElements')
make_head(_module, 'ISecondaryTileVisualElements2')
make_head(_module, 'ISecondaryTileVisualElements3')
make_head(_module, 'ISecondaryTileVisualElements4')
make_head(_module, 'IStartScreenManager')
make_head(_module, 'IStartScreenManager2')
make_head(_module, 'IStartScreenManagerStatics')
make_head(_module, 'ITileMixedRealityModel')
make_head(_module, 'ITileMixedRealityModel2')
make_head(_module, 'IVisualElementsRequest')
make_head(_module, 'IVisualElementsRequestDeferral')
make_head(_module, 'IVisualElementsRequestedEventArgs')
make_head(_module, 'JumpList')
make_head(_module, 'JumpListItem')
make_head(_module, 'SecondaryTile')
make_head(_module, 'SecondaryTileVisualElements')
make_head(_module, 'StartScreenManager')
make_head(_module, 'TileMixedRealityModel')
make_head(_module, 'VisualElementsRequest')
make_head(_module, 'VisualElementsRequestDeferral')
make_head(_module, 'VisualElementsRequestedEventArgs')
