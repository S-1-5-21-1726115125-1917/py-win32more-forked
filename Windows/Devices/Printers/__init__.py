from __future__ import annotations
from ctypes import c_void_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from typing import Generic, TypeVar
K = TypeVar('T')
T = TypeVar('T')
V = TypeVar('V')
TProgress = TypeVar('TProgress')
TResult = TypeVar('TResult')
TSender = TypeVar('TSender')
from Windows import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion, ComPtr
from Windows._winrt import WinRT_String, winrt_commethod, winrt_mixinmethod, winrt_classmethod, winrt_factorymethod, winrt_activatemethod
import Windows.Win32.System.WinRT
import Windows.Devices.Printers
import Windows.Foundation
import Windows.Foundation.Collections
import Windows.Graphics.Printing
import Windows.Storage.Streams
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
class IIppAttributeError(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('750feda1-9eef-5c39-93-e4-46-14-9b-bc-ef-27')
    @winrt_commethod(6)
    def get_Reason(self) -> Windows.Devices.Printers.IppAttributeErrorReason: ...
    @winrt_commethod(7)
    def get_ExtendedError(self) -> Windows.Foundation.HResult: ...
    @winrt_commethod(8)
    def GetUnsupportedValues(self) -> Windows.Foundation.Collections.IVectorView[Windows.Devices.Printers.IppAttributeValue]: ...
    Reason = property(get_Reason, None)
    ExtendedError = property(get_ExtendedError, None)
class IIppAttributeValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('99407fed-e2bb-59a3-98-8b-28-a9-74-05-2a-26')
    @winrt_commethod(6)
    def get_Kind(self) -> Windows.Devices.Printers.IppAttributeValueKind: ...
    @winrt_commethod(7)
    def GetIntegerArray(self) -> Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_commethod(8)
    def GetBooleanArray(self) -> Windows.Foundation.Collections.IVector[Boolean]: ...
    @winrt_commethod(9)
    def GetEnumArray(self) -> Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_commethod(10)
    def GetOctetStringArray(self) -> Windows.Foundation.Collections.IVector[Windows.Storage.Streams.IBuffer]: ...
    @winrt_commethod(11)
    def GetDateTimeArray(self) -> Windows.Foundation.Collections.IVector[Windows.Foundation.DateTime]: ...
    @winrt_commethod(12)
    def GetResolutionArray(self) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppResolution]: ...
    @winrt_commethod(13)
    def GetRangeOfIntegerArray(self) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppIntegerRange]: ...
    @winrt_commethod(14)
    def GetCollectionArray(self) -> Windows.Foundation.Collections.IVector[Windows.Foundation.Collections.IMapView[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]: ...
    @winrt_commethod(15)
    def GetTextWithLanguageArray(self) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_commethod(16)
    def GetNameWithLanguageArray(self) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_commethod(17)
    def GetTextWithoutLanguageArray(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(18)
    def GetNameWithoutLanguageArray(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(19)
    def GetKeywordArray(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(20)
    def GetUriArray(self) -> Windows.Foundation.Collections.IVector[Windows.Foundation.Uri]: ...
    @winrt_commethod(21)
    def GetUriSchemaArray(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(22)
    def GetCharsetArray(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(23)
    def GetNaturalLanguageArray(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_commethod(24)
    def GetMimeMediaTypeArray(self) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    Kind = property(get_Kind, None)
class IIppAttributeValueStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('10d43942-dd94-5998-b2-35-af-af-b6-fa-79-35')
    @winrt_commethod(6)
    def CreateUnsupported(self) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(7)
    def CreateUnknown(self) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(8)
    def CreateNoValue(self) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(9)
    def CreateInteger(self, value: Int32) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(10)
    def CreateIntegerArray(self, values: Windows.Foundation.Collections.IIterable[Int32]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(11)
    def CreateBoolean(self, value: Boolean) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(12)
    def CreateBooleanArray(self, values: Windows.Foundation.Collections.IIterable[Boolean]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(13)
    def CreateEnum(self, value: Int32) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(14)
    def CreateEnumArray(self, values: Windows.Foundation.Collections.IIterable[Int32]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(15)
    def CreateOctetString(self, value: Windows.Storage.Streams.IBuffer) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(16)
    def CreateOctetStringArray(self, values: Windows.Foundation.Collections.IIterable[Windows.Storage.Streams.IBuffer]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(17)
    def CreateDateTime(self, value: Windows.Foundation.DateTime) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(18)
    def CreateDateTimeArray(self, values: Windows.Foundation.Collections.IIterable[Windows.Foundation.DateTime]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(19)
    def CreateResolution(self, value: Windows.Devices.Printers.IppResolution) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(20)
    def CreateResolutionArray(self, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppResolution]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(21)
    def CreateRangeOfInteger(self, value: Windows.Devices.Printers.IppIntegerRange) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(22)
    def CreateRangeOfIntegerArray(self, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppIntegerRange]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(23)
    def CreateCollection(self, memberAttributes: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(24)
    def CreateCollectionArray(self, memberAttributesArray: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(25)
    def CreateTextWithLanguage(self, value: Windows.Devices.Printers.IppTextWithLanguage) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(26)
    def CreateTextWithLanguageArray(self, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppTextWithLanguage]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(27)
    def CreateNameWithLanguage(self, value: Windows.Devices.Printers.IppTextWithLanguage) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(28)
    def CreateNameWithLanguageArray(self, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppTextWithLanguage]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(29)
    def CreateTextWithoutLanguage(self, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(30)
    def CreateTextWithoutLanguageArray(self, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(31)
    def CreateNameWithoutLanguage(self, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(32)
    def CreateNameWithoutLanguageArray(self, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(33)
    def CreateKeyword(self, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(34)
    def CreateKeywordArray(self, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(35)
    def CreateUri(self, value: Windows.Foundation.Uri) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(36)
    def CreateUriArray(self, values: Windows.Foundation.Collections.IIterable[Windows.Foundation.Uri]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(37)
    def CreateUriSchema(self, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(38)
    def CreateUriSchemaArray(self, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(39)
    def CreateCharset(self, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(40)
    def CreateCharsetArray(self, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(41)
    def CreateNaturalLanguage(self, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(42)
    def CreateNaturalLanguageArray(self, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(43)
    def CreateMimeMedia(self, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_commethod(44)
    def CreateMimeMediaArray(self, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
class IIppIntegerRange(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('92907346-c3ea-5ed6-bd-b1-37-52-c6-2c-6f-7f')
    @winrt_commethod(6)
    def get_Start(self) -> Int32: ...
    @winrt_commethod(7)
    def get_End(self) -> Int32: ...
    Start = property(get_Start, None)
    End = property(get_End, None)
class IIppIntegerRangeFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('75d4ecae-f87e-54ad-b5-d0-46-52-04-db-75-53')
    @winrt_commethod(6)
    def CreateInstance(self, start: Int32, end: Int32) -> Windows.Devices.Printers.IppIntegerRange: ...
class IIppPrintDevice(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('d748ac56-76f3-5dc6-af-d4-c2-a8-68-6b-93-59')
    @winrt_commethod(6)
    def get_PrinterName(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_PrinterUri(self) -> Windows.Foundation.Uri: ...
    @winrt_commethod(8)
    def GetPrinterAttributesAsBuffer(self, attributeNames: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_commethod(9)
    def GetPrinterAttributes(self, attributeNames: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Foundation.Collections.IMap[WinRT_String, Windows.Devices.Printers.IppAttributeValue]: ...
    @winrt_commethod(10)
    def SetPrinterAttributesFromBuffer(self, printerAttributesBuffer: Windows.Storage.Streams.IBuffer) -> Windows.Devices.Printers.IppSetAttributesResult: ...
    @winrt_commethod(11)
    def SetPrinterAttributes(self, printerAttributes: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]) -> Windows.Devices.Printers.IppSetAttributesResult: ...
    PrinterName = property(get_PrinterName, None)
    PrinterUri = property(get_PrinterUri, None)
class IIppPrintDevice2(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('f7c844c9-9d21-5c63-ac-20-36-76-91-5b-e2-d7')
    @winrt_commethod(6)
    def GetMaxSupportedPdfSize(self) -> UInt64: ...
    @winrt_commethod(7)
    def GetMaxSupportedPdfVersion(self) -> WinRT_String: ...
    @winrt_commethod(8)
    def IsPdlPassthroughSupported(self, pdlContentType: WinRT_String) -> Boolean: ...
    @winrt_commethod(9)
    def GetPdlPassthroughProvider(self) -> Windows.Devices.Printers.PdlPassthroughProvider: ...
class IIppPrintDeviceStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7dc19f08-7f20-52ab-94-a7-89-4b-83-b2-a1-7e')
    @winrt_commethod(6)
    def GetDeviceSelector(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def FromId(self, deviceId: WinRT_String) -> Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_commethod(8)
    def FromPrinterName(self, printerName: WinRT_String) -> Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_commethod(9)
    def IsIppPrinter(self, printerName: WinRT_String) -> Boolean: ...
class IIppResolution(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('cb493f86-6bf3-56f5-86-ce-26-3d-08-ae-ad-63')
    @winrt_commethod(6)
    def get_Width(self) -> Int32: ...
    @winrt_commethod(7)
    def get_Height(self) -> Int32: ...
    @winrt_commethod(8)
    def get_Unit(self) -> Windows.Devices.Printers.IppResolutionUnit: ...
    Width = property(get_Width, None)
    Height = property(get_Height, None)
    Unit = property(get_Unit, None)
class IIppResolutionFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('e481c2ae-251a-5326-b1-73-95-54-3e-d9-9a-35')
    @winrt_commethod(6)
    def CreateInstance(self, width: Int32, height: Int32, unit: Windows.Devices.Printers.IppResolutionUnit) -> Windows.Devices.Printers.IppResolution: ...
class IIppSetAttributesResult(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('7d1c7f55-aa9d-58a3-90-e9-17-bd-c5-28-1f-07')
    @winrt_commethod(6)
    def get_Succeeded(self) -> Boolean: ...
    @winrt_commethod(7)
    def get_AttributeErrors(self) -> Windows.Foundation.Collections.IMapView[WinRT_String, Windows.Devices.Printers.IppAttributeError]: ...
    Succeeded = property(get_Succeeded, None)
    AttributeErrors = property(get_AttributeErrors, None)
class IIppTextWithLanguage(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('326447a6-5149-5936-90-e8-0c-73-60-36-bf-77')
    @winrt_commethod(6)
    def get_Language(self) -> WinRT_String: ...
    @winrt_commethod(7)
    def get_Value(self) -> WinRT_String: ...
    Language = property(get_Language, None)
    Value = property(get_Value, None)
class IIppTextWithLanguageFactory(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('ca4a1e8d-2968-5775-99-7c-8a-46-f1-a5-74-ed')
    @winrt_commethod(6)
    def CreateInstance(self, language: WinRT_String, text: WinRT_String) -> Windows.Devices.Printers.IppTextWithLanguage: ...
class IPageConfigurationSettings(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('b6fc1e02-5331-54ff-95-a0-1f-cb-76-bb-97-a9')
    @winrt_commethod(6)
    def get_OrientationSource(self) -> Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_commethod(7)
    def put_OrientationSource(self, value: Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    @winrt_commethod(8)
    def get_SizeSource(self) -> Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_commethod(9)
    def put_SizeSource(self, value: Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    OrientationSource = property(get_OrientationSource, put_OrientationSource)
    SizeSource = property(get_SizeSource, put_SizeSource)
class IPdlPassthroughProvider(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('23c71dd2-6117-553f-93-78-18-0a-f5-84-9a-49')
    @winrt_commethod(6)
    def get_SupportedPdlContentTypes(self) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_commethod(7)
    def StartPrintJobWithTaskOptions(self, jobName: WinRT_String, pdlContentType: WinRT_String, taskOptions: Windows.Graphics.Printing.PrintTaskOptions, pageConfigurationSettings: Windows.Devices.Printers.PageConfigurationSettings) -> Windows.Devices.Printers.PdlPassthroughTarget: ...
    @winrt_commethod(8)
    def StartPrintJobWithPrintTicket(self, jobName: WinRT_String, pdlContentType: WinRT_String, printTicket: Windows.Storage.Streams.IInputStream, pageConfigurationSettings: Windows.Devices.Printers.PageConfigurationSettings) -> Windows.Devices.Printers.PdlPassthroughTarget: ...
    SupportedPdlContentTypes = property(get_SupportedPdlContentTypes, None)
class IPdlPassthroughTarget(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('9840be79-67f8-5385-a5-b9-e8-c9-6e-0f-ca-76')
    @winrt_commethod(6)
    def get_PrintJobId(self) -> Int32: ...
    @winrt_commethod(7)
    def GetOutputStream(self) -> Windows.Storage.Streams.IOutputStream: ...
    @winrt_commethod(8)
    def Submit(self) -> Void: ...
    PrintJobId = property(get_PrintJobId, None)
class IPrint3DDevice(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('041c3d19-9713-42a2-98-13-7d-c3-33-74-28-d3')
    @winrt_commethod(6)
    def get_PrintSchema(self) -> Windows.Devices.Printers.PrintSchema: ...
    PrintSchema = property(get_PrintSchema, None)
class IPrint3DDeviceStatics(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('fde3620a-67cd-41b7-a3-44-51-50-a1-fd-75-b5')
    @winrt_commethod(6)
    def FromIdAsync(self, deviceId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Devices.Printers.Print3DDevice]: ...
    @winrt_commethod(7)
    def GetDeviceSelector(self) -> WinRT_String: ...
class IPrintSchema(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _iid_ = Guid('c2b98316-26b8-4bfb-81-38-9f-96-2c-22-a3-5b')
    @winrt_commethod(6)
    def GetDefaultPrintTicketAsync(self) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_commethod(7)
    def GetCapabilitiesAsync(self, constrainTicket: Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_commethod(8)
    def MergeAndValidateWithDefaultPrintTicketAsync(self, deltaTicket: Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
class IppAttributeError(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IppAttributeError'
    @winrt_mixinmethod
    def get_Reason(self: Windows.Devices.Printers.IIppAttributeError) -> Windows.Devices.Printers.IppAttributeErrorReason: ...
    @winrt_mixinmethod
    def get_ExtendedError(self: Windows.Devices.Printers.IIppAttributeError) -> Windows.Foundation.HResult: ...
    @winrt_mixinmethod
    def GetUnsupportedValues(self: Windows.Devices.Printers.IIppAttributeError) -> Windows.Foundation.Collections.IVectorView[Windows.Devices.Printers.IppAttributeValue]: ...
    Reason = property(get_Reason, None)
    ExtendedError = property(get_ExtendedError, None)
IppAttributeErrorReason = Int32
IppAttributeErrorReason_RequestEntityTooLarge: IppAttributeErrorReason = 0
IppAttributeErrorReason_AttributeNotSupported: IppAttributeErrorReason = 1
IppAttributeErrorReason_AttributeValuesNotSupported: IppAttributeErrorReason = 2
IppAttributeErrorReason_AttributeNotSettable: IppAttributeErrorReason = 3
IppAttributeErrorReason_ConflictingAttributes: IppAttributeErrorReason = 4
class IppAttributeValue(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IppAttributeValue'
    @winrt_mixinmethod
    def get_Kind(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Devices.Printers.IppAttributeValueKind: ...
    @winrt_mixinmethod
    def GetIntegerArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_mixinmethod
    def GetBooleanArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Boolean]: ...
    @winrt_mixinmethod
    def GetEnumArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Int32]: ...
    @winrt_mixinmethod
    def GetOctetStringArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Storage.Streams.IBuffer]: ...
    @winrt_mixinmethod
    def GetDateTimeArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Foundation.DateTime]: ...
    @winrt_mixinmethod
    def GetResolutionArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppResolution]: ...
    @winrt_mixinmethod
    def GetRangeOfIntegerArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppIntegerRange]: ...
    @winrt_mixinmethod
    def GetCollectionArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Foundation.Collections.IMapView[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]: ...
    @winrt_mixinmethod
    def GetTextWithLanguageArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_mixinmethod
    def GetNameWithLanguageArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Devices.Printers.IppTextWithLanguage]: ...
    @winrt_mixinmethod
    def GetTextWithoutLanguageArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetNameWithoutLanguageArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetKeywordArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetUriArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[Windows.Foundation.Uri]: ...
    @winrt_mixinmethod
    def GetUriSchemaArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetCharsetArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetNaturalLanguageArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_mixinmethod
    def GetMimeMediaTypeArray(self: Windows.Devices.Printers.IIppAttributeValue) -> Windows.Foundation.Collections.IVector[WinRT_String]: ...
    @winrt_classmethod
    def CreateUnsupported(cls: Windows.Devices.Printers.IIppAttributeValueStatics) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUnknown(cls: Windows.Devices.Printers.IIppAttributeValueStatics) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNoValue(cls: Windows.Devices.Printers.IIppAttributeValueStatics) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateInteger(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Int32) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateIntegerArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Int32]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateBoolean(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Boolean) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateBooleanArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Boolean]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateEnum(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Int32) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateEnumArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Int32]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateOctetString(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Windows.Storage.Streams.IBuffer) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateOctetStringArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Windows.Storage.Streams.IBuffer]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateDateTime(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Windows.Foundation.DateTime) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateDateTimeArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Windows.Foundation.DateTime]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateResolution(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Windows.Devices.Printers.IppResolution) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateResolutionArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppResolution]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateRangeOfInteger(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Windows.Devices.Printers.IppIntegerRange) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateRangeOfIntegerArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppIntegerRange]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCollection(cls: Windows.Devices.Printers.IIppAttributeValueStatics, memberAttributes: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCollectionArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, memberAttributesArray: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithLanguage(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Windows.Devices.Printers.IppTextWithLanguage) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithLanguageArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppTextWithLanguage]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithLanguage(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Windows.Devices.Printers.IppTextWithLanguage) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithLanguageArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Windows.Devices.Printers.IppTextWithLanguage]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithoutLanguage(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateTextWithoutLanguageArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithoutLanguage(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNameWithoutLanguageArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateKeyword(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateKeywordArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUri(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: Windows.Foundation.Uri) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUriArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[Windows.Foundation.Uri]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUriSchema(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateUriSchemaArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCharset(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateCharsetArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNaturalLanguage(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateNaturalLanguageArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateMimeMedia(cls: Windows.Devices.Printers.IIppAttributeValueStatics, value: WinRT_String) -> Windows.Devices.Printers.IppAttributeValue: ...
    @winrt_classmethod
    def CreateMimeMediaArray(cls: Windows.Devices.Printers.IIppAttributeValueStatics, values: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Devices.Printers.IppAttributeValue: ...
    Kind = property(get_Kind, None)
IppAttributeValueKind = Int32
IppAttributeValueKind_Unsupported: IppAttributeValueKind = 0
IppAttributeValueKind_Unknown: IppAttributeValueKind = 1
IppAttributeValueKind_NoValue: IppAttributeValueKind = 2
IppAttributeValueKind_Integer: IppAttributeValueKind = 3
IppAttributeValueKind_Boolean: IppAttributeValueKind = 4
IppAttributeValueKind_Enum: IppAttributeValueKind = 5
IppAttributeValueKind_OctetString: IppAttributeValueKind = 6
IppAttributeValueKind_DateTime: IppAttributeValueKind = 7
IppAttributeValueKind_Resolution: IppAttributeValueKind = 8
IppAttributeValueKind_RangeOfInteger: IppAttributeValueKind = 9
IppAttributeValueKind_Collection: IppAttributeValueKind = 10
IppAttributeValueKind_TextWithLanguage: IppAttributeValueKind = 11
IppAttributeValueKind_NameWithLanguage: IppAttributeValueKind = 12
IppAttributeValueKind_TextWithoutLanguage: IppAttributeValueKind = 13
IppAttributeValueKind_NameWithoutLanguage: IppAttributeValueKind = 14
IppAttributeValueKind_Keyword: IppAttributeValueKind = 15
IppAttributeValueKind_Uri: IppAttributeValueKind = 16
IppAttributeValueKind_UriSchema: IppAttributeValueKind = 17
IppAttributeValueKind_Charset: IppAttributeValueKind = 18
IppAttributeValueKind_NaturalLanguage: IppAttributeValueKind = 19
IppAttributeValueKind_MimeMediaType: IppAttributeValueKind = 20
class IppIntegerRange(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IppIntegerRange'
    @winrt_factorymethod
    def CreateInstance(cls: Windows.Devices.Printers.IIppIntegerRangeFactory, start: Int32, end: Int32) -> Windows.Devices.Printers.IppIntegerRange: ...
    @winrt_mixinmethod
    def get_Start(self: Windows.Devices.Printers.IIppIntegerRange) -> Int32: ...
    @winrt_mixinmethod
    def get_End(self: Windows.Devices.Printers.IIppIntegerRange) -> Int32: ...
    Start = property(get_Start, None)
    End = property(get_End, None)
class IppPrintDevice(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IppPrintDevice'
    @winrt_mixinmethod
    def get_PrinterName(self: Windows.Devices.Printers.IIppPrintDevice) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_PrinterUri(self: Windows.Devices.Printers.IIppPrintDevice) -> Windows.Foundation.Uri: ...
    @winrt_mixinmethod
    def GetPrinterAttributesAsBuffer(self: Windows.Devices.Printers.IIppPrintDevice, attributeNames: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_mixinmethod
    def GetPrinterAttributes(self: Windows.Devices.Printers.IIppPrintDevice, attributeNames: Windows.Foundation.Collections.IIterable[WinRT_String]) -> Windows.Foundation.Collections.IMap[WinRT_String, Windows.Devices.Printers.IppAttributeValue]: ...
    @winrt_mixinmethod
    def SetPrinterAttributesFromBuffer(self: Windows.Devices.Printers.IIppPrintDevice, printerAttributesBuffer: Windows.Storage.Streams.IBuffer) -> Windows.Devices.Printers.IppSetAttributesResult: ...
    @winrt_mixinmethod
    def SetPrinterAttributes(self: Windows.Devices.Printers.IIppPrintDevice, printerAttributes: Windows.Foundation.Collections.IIterable[Windows.Foundation.Collections.IKeyValuePair[WinRT_String, Windows.Devices.Printers.IppAttributeValue]]) -> Windows.Devices.Printers.IppSetAttributesResult: ...
    @winrt_mixinmethod
    def GetMaxSupportedPdfSize(self: Windows.Devices.Printers.IIppPrintDevice2) -> UInt64: ...
    @winrt_mixinmethod
    def GetMaxSupportedPdfVersion(self: Windows.Devices.Printers.IIppPrintDevice2) -> WinRT_String: ...
    @winrt_mixinmethod
    def IsPdlPassthroughSupported(self: Windows.Devices.Printers.IIppPrintDevice2, pdlContentType: WinRT_String) -> Boolean: ...
    @winrt_mixinmethod
    def GetPdlPassthroughProvider(self: Windows.Devices.Printers.IIppPrintDevice2) -> Windows.Devices.Printers.PdlPassthroughProvider: ...
    @winrt_classmethod
    def GetDeviceSelector(cls: Windows.Devices.Printers.IIppPrintDeviceStatics) -> WinRT_String: ...
    @winrt_classmethod
    def FromId(cls: Windows.Devices.Printers.IIppPrintDeviceStatics, deviceId: WinRT_String) -> Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_classmethod
    def FromPrinterName(cls: Windows.Devices.Printers.IIppPrintDeviceStatics, printerName: WinRT_String) -> Windows.Devices.Printers.IppPrintDevice: ...
    @winrt_classmethod
    def IsIppPrinter(cls: Windows.Devices.Printers.IIppPrintDeviceStatics, printerName: WinRT_String) -> Boolean: ...
    PrinterName = property(get_PrinterName, None)
    PrinterUri = property(get_PrinterUri, None)
class IppResolution(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IppResolution'
    @winrt_factorymethod
    def CreateInstance(cls: Windows.Devices.Printers.IIppResolutionFactory, width: Int32, height: Int32, unit: Windows.Devices.Printers.IppResolutionUnit) -> Windows.Devices.Printers.IppResolution: ...
    @winrt_mixinmethod
    def get_Width(self: Windows.Devices.Printers.IIppResolution) -> Int32: ...
    @winrt_mixinmethod
    def get_Height(self: Windows.Devices.Printers.IIppResolution) -> Int32: ...
    @winrt_mixinmethod
    def get_Unit(self: Windows.Devices.Printers.IIppResolution) -> Windows.Devices.Printers.IppResolutionUnit: ...
    Width = property(get_Width, None)
    Height = property(get_Height, None)
    Unit = property(get_Unit, None)
IppResolutionUnit = Int32
IppResolutionUnit_DotsPerInch: IppResolutionUnit = 0
IppResolutionUnit_DotsPerCentimeter: IppResolutionUnit = 1
class IppSetAttributesResult(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IppSetAttributesResult'
    @winrt_mixinmethod
    def get_Succeeded(self: Windows.Devices.Printers.IIppSetAttributesResult) -> Boolean: ...
    @winrt_mixinmethod
    def get_AttributeErrors(self: Windows.Devices.Printers.IIppSetAttributesResult) -> Windows.Foundation.Collections.IMapView[WinRT_String, Windows.Devices.Printers.IppAttributeError]: ...
    Succeeded = property(get_Succeeded, None)
    AttributeErrors = property(get_AttributeErrors, None)
class IppTextWithLanguage(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.IppTextWithLanguage'
    @winrt_factorymethod
    def CreateInstance(cls: Windows.Devices.Printers.IIppTextWithLanguageFactory, language: WinRT_String, text: WinRT_String) -> Windows.Devices.Printers.IppTextWithLanguage: ...
    @winrt_mixinmethod
    def get_Language(self: Windows.Devices.Printers.IIppTextWithLanguage) -> WinRT_String: ...
    @winrt_mixinmethod
    def get_Value(self: Windows.Devices.Printers.IIppTextWithLanguage) -> WinRT_String: ...
    Language = property(get_Language, None)
    Value = property(get_Value, None)
class PageConfigurationSettings(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.PageConfigurationSettings'
    @winrt_activatemethod
    def New(cls) -> Windows.Devices.Printers.PageConfigurationSettings: ...
    @winrt_mixinmethod
    def get_OrientationSource(self: Windows.Devices.Printers.IPageConfigurationSettings) -> Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_mixinmethod
    def put_OrientationSource(self: Windows.Devices.Printers.IPageConfigurationSettings, value: Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    @winrt_mixinmethod
    def get_SizeSource(self: Windows.Devices.Printers.IPageConfigurationSettings) -> Windows.Devices.Printers.PageConfigurationSource: ...
    @winrt_mixinmethod
    def put_SizeSource(self: Windows.Devices.Printers.IPageConfigurationSettings, value: Windows.Devices.Printers.PageConfigurationSource) -> Void: ...
    OrientationSource = property(get_OrientationSource, put_OrientationSource)
    SizeSource = property(get_SizeSource, put_SizeSource)
PageConfigurationSource = Int32
PageConfigurationSource_PrintJobConfiguration: PageConfigurationSource = 0
PageConfigurationSource_PdlContent: PageConfigurationSource = 1
class PdlPassthroughProvider(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.PdlPassthroughProvider'
    @winrt_mixinmethod
    def get_SupportedPdlContentTypes(self: Windows.Devices.Printers.IPdlPassthroughProvider) -> Windows.Foundation.Collections.IVectorView[WinRT_String]: ...
    @winrt_mixinmethod
    def StartPrintJobWithTaskOptions(self: Windows.Devices.Printers.IPdlPassthroughProvider, jobName: WinRT_String, pdlContentType: WinRT_String, taskOptions: Windows.Graphics.Printing.PrintTaskOptions, pageConfigurationSettings: Windows.Devices.Printers.PageConfigurationSettings) -> Windows.Devices.Printers.PdlPassthroughTarget: ...
    @winrt_mixinmethod
    def StartPrintJobWithPrintTicket(self: Windows.Devices.Printers.IPdlPassthroughProvider, jobName: WinRT_String, pdlContentType: WinRT_String, printTicket: Windows.Storage.Streams.IInputStream, pageConfigurationSettings: Windows.Devices.Printers.PageConfigurationSettings) -> Windows.Devices.Printers.PdlPassthroughTarget: ...
    SupportedPdlContentTypes = property(get_SupportedPdlContentTypes, None)
class PdlPassthroughTarget(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.PdlPassthroughTarget'
    @winrt_mixinmethod
    def get_PrintJobId(self: Windows.Devices.Printers.IPdlPassthroughTarget) -> Int32: ...
    @winrt_mixinmethod
    def GetOutputStream(self: Windows.Devices.Printers.IPdlPassthroughTarget) -> Windows.Storage.Streams.IOutputStream: ...
    @winrt_mixinmethod
    def Submit(self: Windows.Devices.Printers.IPdlPassthroughTarget) -> Void: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    PrintJobId = property(get_PrintJobId, None)
class Print3DDevice(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.Print3DDevice'
    @winrt_mixinmethod
    def get_PrintSchema(self: Windows.Devices.Printers.IPrint3DDevice) -> Windows.Devices.Printers.PrintSchema: ...
    @winrt_classmethod
    def FromIdAsync(cls: Windows.Devices.Printers.IPrint3DDeviceStatics, deviceId: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Devices.Printers.Print3DDevice]: ...
    @winrt_classmethod
    def GetDeviceSelector(cls: Windows.Devices.Printers.IPrint3DDeviceStatics) -> WinRT_String: ...
    PrintSchema = property(get_PrintSchema, None)
class PrintSchema(ComPtr):
    extends: Windows.Win32.System.WinRT.IInspectable
    _classid_ = 'Windows.Devices.Printers.PrintSchema'
    @winrt_mixinmethod
    def GetDefaultPrintTicketAsync(self: Windows.Devices.Printers.IPrintSchema) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_mixinmethod
    def GetCapabilitiesAsync(self: Windows.Devices.Printers.IPrintSchema, constrainTicket: Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_mixinmethod
    def MergeAndValidateWithDefaultPrintTicketAsync(self: Windows.Devices.Printers.IPrintSchema, deltaTicket: Windows.Storage.Streams.IRandomAccessStreamWithContentType) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
PrintersContract: UInt32 = 65536
make_head(_module, 'IIppAttributeError')
make_head(_module, 'IIppAttributeValue')
make_head(_module, 'IIppAttributeValueStatics')
make_head(_module, 'IIppIntegerRange')
make_head(_module, 'IIppIntegerRangeFactory')
make_head(_module, 'IIppPrintDevice')
make_head(_module, 'IIppPrintDevice2')
make_head(_module, 'IIppPrintDeviceStatics')
make_head(_module, 'IIppResolution')
make_head(_module, 'IIppResolutionFactory')
make_head(_module, 'IIppSetAttributesResult')
make_head(_module, 'IIppTextWithLanguage')
make_head(_module, 'IIppTextWithLanguageFactory')
make_head(_module, 'IPageConfigurationSettings')
make_head(_module, 'IPdlPassthroughProvider')
make_head(_module, 'IPdlPassthroughTarget')
make_head(_module, 'IPrint3DDevice')
make_head(_module, 'IPrint3DDeviceStatics')
make_head(_module, 'IPrintSchema')
make_head(_module, 'IppAttributeError')
make_head(_module, 'IppAttributeValue')
make_head(_module, 'IppIntegerRange')
make_head(_module, 'IppPrintDevice')
make_head(_module, 'IppResolution')
make_head(_module, 'IppSetAttributesResult')
make_head(_module, 'IppTextWithLanguage')
make_head(_module, 'PageConfigurationSettings')
make_head(_module, 'PdlPassthroughProvider')
make_head(_module, 'PdlPassthroughTarget')
make_head(_module, 'Print3DDevice')
make_head(_module, 'PrintSchema')
