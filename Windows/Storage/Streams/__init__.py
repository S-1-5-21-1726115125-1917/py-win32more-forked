from __future__ import annotations
from ctypes import c_void_p, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from typing import Generic, TypeVar
K = TypeVar('T')
T = TypeVar('T')
V = TypeVar('V')
TProgress = TypeVar('TProgress')
TResult = TypeVar('TResult')
TSender = TypeVar('TSender')
from Windows import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, WinRT_String, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, winrt_commethod, winrt_mixinmethod, winrt_classmethod, winrt_factorymethod, winrt_activatemethod, cfunctype_pointer, winfunctype_pointer, press, make_head, EasyCastStructure, EasyCastUnion
import Windows.Win32.System.WinRT
import Windows.Foundation
import Windows.Foundation.Collections
import Windows.Storage
import Windows.Storage.Streams
import Windows.System
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
class Buffer(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.Buffer'
    @winrt_factorymethod
    def Create(cls: Windows.Storage.Streams.IBufferFactory, capacity: UInt32) -> Windows.Storage.Streams.Buffer: ...
    @winrt_mixinmethod
    def get_Capacity(self: Windows.Storage.Streams.IBuffer) -> UInt32: ...
    @winrt_mixinmethod
    def get_Length(self: Windows.Storage.Streams.IBuffer) -> UInt32: ...
    @winrt_mixinmethod
    def put_Length(self: Windows.Storage.Streams.IBuffer, value: UInt32) -> Void: ...
    @winrt_classmethod
    def CreateCopyFromMemoryBuffer(cls: Windows.Storage.Streams.IBufferStatics, input: Windows.Foundation.IMemoryBuffer) -> Windows.Storage.Streams.Buffer: ...
    @winrt_classmethod
    def CreateMemoryBufferOverIBuffer(cls: Windows.Storage.Streams.IBufferStatics, input: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.MemoryBuffer: ...
    Capacity = property(get_Capacity, None)
    Length = property(get_Length, put_Length)
ByteOrder = Int32
ByteOrder_LittleEndian: ByteOrder = 0
ByteOrder_BigEndian: ByteOrder = 1
class DataReader(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.DataReader'
    @winrt_factorymethod
    def CreateDataReader(cls: Windows.Storage.Streams.IDataReaderFactory, inputStream: Windows.Storage.Streams.IInputStream) -> Windows.Storage.Streams.DataReader: ...
    @winrt_mixinmethod
    def get_UnconsumedBufferLength(self: Windows.Storage.Streams.IDataReader) -> UInt32: ...
    @winrt_mixinmethod
    def get_UnicodeEncoding(self: Windows.Storage.Streams.IDataReader) -> Windows.Storage.Streams.UnicodeEncoding: ...
    @winrt_mixinmethod
    def put_UnicodeEncoding(self: Windows.Storage.Streams.IDataReader, value: Windows.Storage.Streams.UnicodeEncoding) -> Void: ...
    @winrt_mixinmethod
    def get_ByteOrder(self: Windows.Storage.Streams.IDataReader) -> Windows.Storage.Streams.ByteOrder: ...
    @winrt_mixinmethod
    def put_ByteOrder(self: Windows.Storage.Streams.IDataReader, value: Windows.Storage.Streams.ByteOrder) -> Void: ...
    @winrt_mixinmethod
    def get_InputStreamOptions(self: Windows.Storage.Streams.IDataReader) -> Windows.Storage.Streams.InputStreamOptions: ...
    @winrt_mixinmethod
    def put_InputStreamOptions(self: Windows.Storage.Streams.IDataReader, value: Windows.Storage.Streams.InputStreamOptions) -> Void: ...
    @winrt_mixinmethod
    def ReadByte(self: Windows.Storage.Streams.IDataReader) -> Byte: ...
    @winrt_mixinmethod
    def ReadBytes(self: Windows.Storage.Streams.IDataReader, value: c_char_p_no) -> Void: ...
    @winrt_mixinmethod
    def ReadBuffer(self: Windows.Storage.Streams.IDataReader, length: UInt32) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_mixinmethod
    def ReadBoolean(self: Windows.Storage.Streams.IDataReader) -> Boolean: ...
    @winrt_mixinmethod
    def ReadGuid(self: Windows.Storage.Streams.IDataReader) -> Guid: ...
    @winrt_mixinmethod
    def ReadInt16(self: Windows.Storage.Streams.IDataReader) -> Int16: ...
    @winrt_mixinmethod
    def ReadInt32(self: Windows.Storage.Streams.IDataReader) -> Int32: ...
    @winrt_mixinmethod
    def ReadInt64(self: Windows.Storage.Streams.IDataReader) -> Int64: ...
    @winrt_mixinmethod
    def ReadUInt16(self: Windows.Storage.Streams.IDataReader) -> UInt16: ...
    @winrt_mixinmethod
    def ReadUInt32(self: Windows.Storage.Streams.IDataReader) -> UInt32: ...
    @winrt_mixinmethod
    def ReadUInt64(self: Windows.Storage.Streams.IDataReader) -> UInt64: ...
    @winrt_mixinmethod
    def ReadSingle(self: Windows.Storage.Streams.IDataReader) -> Single: ...
    @winrt_mixinmethod
    def ReadDouble(self: Windows.Storage.Streams.IDataReader) -> Double: ...
    @winrt_mixinmethod
    def ReadString(self: Windows.Storage.Streams.IDataReader, codeUnitCount: UInt32) -> WinRT_String: ...
    @winrt_mixinmethod
    def ReadDateTime(self: Windows.Storage.Streams.IDataReader) -> Windows.Foundation.DateTime: ...
    @winrt_mixinmethod
    def ReadTimeSpan(self: Windows.Storage.Streams.IDataReader) -> Windows.Foundation.TimeSpan: ...
    @winrt_mixinmethod
    def LoadAsync(self: Windows.Storage.Streams.IDataReader, count: UInt32) -> Windows.Storage.Streams.DataReaderLoadOperation: ...
    @winrt_mixinmethod
    def DetachBuffer(self: Windows.Storage.Streams.IDataReader) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_mixinmethod
    def DetachStream(self: Windows.Storage.Streams.IDataReader) -> Windows.Storage.Streams.IInputStream: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    @winrt_classmethod
    def FromBuffer(cls: Windows.Storage.Streams.IDataReaderStatics, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Storage.Streams.DataReader: ...
    UnconsumedBufferLength = property(get_UnconsumedBufferLength, None)
    UnicodeEncoding = property(get_UnicodeEncoding, put_UnicodeEncoding)
    ByteOrder = property(get_ByteOrder, put_ByteOrder)
    InputStreamOptions = property(get_InputStreamOptions, put_InputStreamOptions)
class DataReaderLoadOperation(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.DataReaderLoadOperation'
    @winrt_mixinmethod
    def put_Completed(self: Windows.Foundation.IAsyncOperation[UInt32], handler: Windows.Foundation.AsyncOperationCompletedHandler[UInt32]) -> Void: ...
    @winrt_mixinmethod
    def get_Completed(self: Windows.Foundation.IAsyncOperation[UInt32]) -> Windows.Foundation.AsyncOperationCompletedHandler[UInt32]: ...
    @winrt_mixinmethod
    def GetResults(self: Windows.Foundation.IAsyncOperation[UInt32]) -> UInt32: ...
    @winrt_mixinmethod
    def get_Id(self: Windows.Foundation.IAsyncInfo) -> UInt32: ...
    @winrt_mixinmethod
    def get_Status(self: Windows.Foundation.IAsyncInfo) -> Windows.Foundation.AsyncStatus: ...
    @winrt_mixinmethod
    def get_ErrorCode(self: Windows.Foundation.IAsyncInfo) -> Windows.Foundation.HResult: ...
    @winrt_mixinmethod
    def Cancel(self: Windows.Foundation.IAsyncInfo) -> Void: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IAsyncInfo) -> Void: ...
    Completed = property(get_Completed, put_Completed)
    Id = property(get_Id, None)
    Status = property(get_Status, None)
    ErrorCode = property(get_ErrorCode, None)
class DataWriter(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.DataWriter'
    @winrt_factorymethod
    def CreateDataWriter(cls: Windows.Storage.Streams.IDataWriterFactory, outputStream: Windows.Storage.Streams.IOutputStream) -> Windows.Storage.Streams.DataWriter: ...
    @winrt_activatemethod
    def New(cls) -> Windows.Storage.Streams.DataWriter: ...
    @winrt_mixinmethod
    def get_UnstoredBufferLength(self: Windows.Storage.Streams.IDataWriter) -> UInt32: ...
    @winrt_mixinmethod
    def get_UnicodeEncoding(self: Windows.Storage.Streams.IDataWriter) -> Windows.Storage.Streams.UnicodeEncoding: ...
    @winrt_mixinmethod
    def put_UnicodeEncoding(self: Windows.Storage.Streams.IDataWriter, value: Windows.Storage.Streams.UnicodeEncoding) -> Void: ...
    @winrt_mixinmethod
    def get_ByteOrder(self: Windows.Storage.Streams.IDataWriter) -> Windows.Storage.Streams.ByteOrder: ...
    @winrt_mixinmethod
    def put_ByteOrder(self: Windows.Storage.Streams.IDataWriter, value: Windows.Storage.Streams.ByteOrder) -> Void: ...
    @winrt_mixinmethod
    def WriteByte(self: Windows.Storage.Streams.IDataWriter, value: Byte) -> Void: ...
    @winrt_mixinmethod
    def WriteBytes(self: Windows.Storage.Streams.IDataWriter, value: c_char_p_no) -> Void: ...
    @winrt_mixinmethod
    def WriteBuffer(self: Windows.Storage.Streams.IDataWriter, buffer: Windows.Storage.Streams.IBuffer) -> Void: ...
    @winrt_mixinmethod
    def WriteBufferRange(self: Windows.Storage.Streams.IDataWriter, buffer: Windows.Storage.Streams.IBuffer, start: UInt32, count: UInt32) -> Void: ...
    @winrt_mixinmethod
    def WriteBoolean(self: Windows.Storage.Streams.IDataWriter, value: Boolean) -> Void: ...
    @winrt_mixinmethod
    def WriteGuid(self: Windows.Storage.Streams.IDataWriter, value: Guid) -> Void: ...
    @winrt_mixinmethod
    def WriteInt16(self: Windows.Storage.Streams.IDataWriter, value: Int16) -> Void: ...
    @winrt_mixinmethod
    def WriteInt32(self: Windows.Storage.Streams.IDataWriter, value: Int32) -> Void: ...
    @winrt_mixinmethod
    def WriteInt64(self: Windows.Storage.Streams.IDataWriter, value: Int64) -> Void: ...
    @winrt_mixinmethod
    def WriteUInt16(self: Windows.Storage.Streams.IDataWriter, value: UInt16) -> Void: ...
    @winrt_mixinmethod
    def WriteUInt32(self: Windows.Storage.Streams.IDataWriter, value: UInt32) -> Void: ...
    @winrt_mixinmethod
    def WriteUInt64(self: Windows.Storage.Streams.IDataWriter, value: UInt64) -> Void: ...
    @winrt_mixinmethod
    def WriteSingle(self: Windows.Storage.Streams.IDataWriter, value: Single) -> Void: ...
    @winrt_mixinmethod
    def WriteDouble(self: Windows.Storage.Streams.IDataWriter, value: Double) -> Void: ...
    @winrt_mixinmethod
    def WriteDateTime(self: Windows.Storage.Streams.IDataWriter, value: Windows.Foundation.DateTime) -> Void: ...
    @winrt_mixinmethod
    def WriteTimeSpan(self: Windows.Storage.Streams.IDataWriter, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_mixinmethod
    def WriteString(self: Windows.Storage.Streams.IDataWriter, value: WinRT_String) -> UInt32: ...
    @winrt_mixinmethod
    def MeasureString(self: Windows.Storage.Streams.IDataWriter, value: WinRT_String) -> UInt32: ...
    @winrt_mixinmethod
    def StoreAsync(self: Windows.Storage.Streams.IDataWriter) -> Windows.Storage.Streams.DataWriterStoreOperation: ...
    @winrt_mixinmethod
    def FlushAsync(self: Windows.Storage.Streams.IDataWriter) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def DetachBuffer(self: Windows.Storage.Streams.IDataWriter) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_mixinmethod
    def DetachStream(self: Windows.Storage.Streams.IDataWriter) -> Windows.Storage.Streams.IOutputStream: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    UnstoredBufferLength = property(get_UnstoredBufferLength, None)
    UnicodeEncoding = property(get_UnicodeEncoding, put_UnicodeEncoding)
    ByteOrder = property(get_ByteOrder, put_ByteOrder)
class DataWriterStoreOperation(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.DataWriterStoreOperation'
    @winrt_mixinmethod
    def put_Completed(self: Windows.Foundation.IAsyncOperation[UInt32], handler: Windows.Foundation.AsyncOperationCompletedHandler[UInt32]) -> Void: ...
    @winrt_mixinmethod
    def get_Completed(self: Windows.Foundation.IAsyncOperation[UInt32]) -> Windows.Foundation.AsyncOperationCompletedHandler[UInt32]: ...
    @winrt_mixinmethod
    def GetResults(self: Windows.Foundation.IAsyncOperation[UInt32]) -> UInt32: ...
    @winrt_mixinmethod
    def get_Id(self: Windows.Foundation.IAsyncInfo) -> UInt32: ...
    @winrt_mixinmethod
    def get_Status(self: Windows.Foundation.IAsyncInfo) -> Windows.Foundation.AsyncStatus: ...
    @winrt_mixinmethod
    def get_ErrorCode(self: Windows.Foundation.IAsyncInfo) -> Windows.Foundation.HResult: ...
    @winrt_mixinmethod
    def Cancel(self: Windows.Foundation.IAsyncInfo) -> Void: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IAsyncInfo) -> Void: ...
    Completed = property(get_Completed, put_Completed)
    Id = property(get_Id, None)
    Status = property(get_Status, None)
    ErrorCode = property(get_ErrorCode, None)
class FileInputStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.FileInputStream'
    @winrt_mixinmethod
    def ReadAsync(self: Windows.Storage.Streams.IInputStream, buffer: Windows.Storage.Streams.IBuffer, count: UInt32, options: Windows.Storage.Streams.InputStreamOptions) -> Windows.Foundation.IAsyncOperationWithProgress[Windows.Storage.Streams.IBuffer, UInt32]: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
FileOpenDisposition = Int32
FileOpenDisposition_OpenExisting: FileOpenDisposition = 0
FileOpenDisposition_OpenAlways: FileOpenDisposition = 1
FileOpenDisposition_CreateNew: FileOpenDisposition = 2
FileOpenDisposition_CreateAlways: FileOpenDisposition = 3
FileOpenDisposition_TruncateExisting: FileOpenDisposition = 4
class FileOutputStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.FileOutputStream'
    @winrt_mixinmethod
    def WriteAsync(self: Windows.Storage.Streams.IOutputStream, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.IAsyncOperationWithProgress[UInt32, UInt32]: ...
    @winrt_mixinmethod
    def FlushAsync(self: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
class FileRandomAccessStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.FileRandomAccessStream'
    @winrt_mixinmethod
    def get_Size(self: Windows.Storage.Streams.IRandomAccessStream) -> UInt64: ...
    @winrt_mixinmethod
    def put_Size(self: Windows.Storage.Streams.IRandomAccessStream, value: UInt64) -> Void: ...
    @winrt_mixinmethod
    def GetInputStreamAt(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Windows.Storage.Streams.IInputStream: ...
    @winrt_mixinmethod
    def GetOutputStreamAt(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Windows.Storage.Streams.IOutputStream: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Storage.Streams.IRandomAccessStream) -> UInt64: ...
    @winrt_mixinmethod
    def Seek(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Void: ...
    @winrt_mixinmethod
    def CloneStream(self: Windows.Storage.Streams.IRandomAccessStream) -> Windows.Storage.Streams.IRandomAccessStream: ...
    @winrt_mixinmethod
    def get_CanRead(self: Windows.Storage.Streams.IRandomAccessStream) -> Boolean: ...
    @winrt_mixinmethod
    def get_CanWrite(self: Windows.Storage.Streams.IRandomAccessStream) -> Boolean: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    @winrt_mixinmethod
    def ReadAsync(self: Windows.Storage.Streams.IInputStream, buffer: Windows.Storage.Streams.IBuffer, count: UInt32, options: Windows.Storage.Streams.InputStreamOptions) -> Windows.Foundation.IAsyncOperationWithProgress[Windows.Storage.Streams.IBuffer, UInt32]: ...
    @winrt_mixinmethod
    def WriteAsync(self: Windows.Storage.Streams.IOutputStream, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.IAsyncOperationWithProgress[UInt32, UInt32]: ...
    @winrt_mixinmethod
    def FlushAsync(self: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_classmethod
    def OpenAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_classmethod
    def OpenWithOptionsAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode, sharingOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_classmethod
    def OpenTransactedWriteAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, filePath: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
    @winrt_classmethod
    def OpenTransactedWriteWithOptionsAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, filePath: WinRT_String, openOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
    @winrt_classmethod
    def OpenForUserAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, user: Windows.System.User, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_classmethod
    def OpenForUserWithOptionsAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, user: Windows.System.User, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode, sharingOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_classmethod
    def OpenTransactedWriteForUserAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, user: Windows.System.User, filePath: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
    @winrt_classmethod
    def OpenTransactedWriteForUserWithOptionsAsync(cls: Windows.Storage.Streams.IFileRandomAccessStreamStatics, user: Windows.System.User, filePath: WinRT_String, openOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
    Size = property(get_Size, put_Size)
    Position = property(get_Position, None)
    CanRead = property(get_CanRead, None)
    CanWrite = property(get_CanWrite, None)
class IBuffer(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('905a0fe0-bc53-11df-8c-49-00-1e-4f-c6-86-da')
    @winrt_commethod(6)
    def get_Capacity(self) -> UInt32: ...
    @winrt_commethod(7)
    def get_Length(self) -> UInt32: ...
    @winrt_commethod(8)
    def put_Length(self, value: UInt32) -> Void: ...
    Capacity = property(get_Capacity, None)
    Length = property(get_Length, put_Length)
class IBufferFactory(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('71af914d-c10f-484b-bc-50-14-bc-62-3b-3a-27')
    @winrt_commethod(6)
    def Create(self, capacity: UInt32) -> Windows.Storage.Streams.Buffer: ...
class IBufferStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('e901e65b-d716-475a-a9-0a-af-72-29-b1-e7-41')
    @winrt_commethod(6)
    def CreateCopyFromMemoryBuffer(self, input: Windows.Foundation.IMemoryBuffer) -> Windows.Storage.Streams.Buffer: ...
    @winrt_commethod(7)
    def CreateMemoryBufferOverIBuffer(self, input: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.MemoryBuffer: ...
class IContentTypeProvider(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('97d098a5-3b99-4de9-88-a5-e1-1d-2f-50-c7-95')
    @winrt_commethod(6)
    def get_ContentType(self) -> WinRT_String: ...
    ContentType = property(get_ContentType, None)
class IDataReader(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('e2b50029-b4c1-4314-a4-b8-fb-81-3a-2f-27-5e')
    @winrt_commethod(6)
    def get_UnconsumedBufferLength(self) -> UInt32: ...
    @winrt_commethod(7)
    def get_UnicodeEncoding(self) -> Windows.Storage.Streams.UnicodeEncoding: ...
    @winrt_commethod(8)
    def put_UnicodeEncoding(self, value: Windows.Storage.Streams.UnicodeEncoding) -> Void: ...
    @winrt_commethod(9)
    def get_ByteOrder(self) -> Windows.Storage.Streams.ByteOrder: ...
    @winrt_commethod(10)
    def put_ByteOrder(self, value: Windows.Storage.Streams.ByteOrder) -> Void: ...
    @winrt_commethod(11)
    def get_InputStreamOptions(self) -> Windows.Storage.Streams.InputStreamOptions: ...
    @winrt_commethod(12)
    def put_InputStreamOptions(self, value: Windows.Storage.Streams.InputStreamOptions) -> Void: ...
    @winrt_commethod(13)
    def ReadByte(self) -> Byte: ...
    @winrt_commethod(14)
    def ReadBytes(self, value: c_char_p_no) -> Void: ...
    @winrt_commethod(15)
    def ReadBuffer(self, length: UInt32) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_commethod(16)
    def ReadBoolean(self) -> Boolean: ...
    @winrt_commethod(17)
    def ReadGuid(self) -> Guid: ...
    @winrt_commethod(18)
    def ReadInt16(self) -> Int16: ...
    @winrt_commethod(19)
    def ReadInt32(self) -> Int32: ...
    @winrt_commethod(20)
    def ReadInt64(self) -> Int64: ...
    @winrt_commethod(21)
    def ReadUInt16(self) -> UInt16: ...
    @winrt_commethod(22)
    def ReadUInt32(self) -> UInt32: ...
    @winrt_commethod(23)
    def ReadUInt64(self) -> UInt64: ...
    @winrt_commethod(24)
    def ReadSingle(self) -> Single: ...
    @winrt_commethod(25)
    def ReadDouble(self) -> Double: ...
    @winrt_commethod(26)
    def ReadString(self, codeUnitCount: UInt32) -> WinRT_String: ...
    @winrt_commethod(27)
    def ReadDateTime(self) -> Windows.Foundation.DateTime: ...
    @winrt_commethod(28)
    def ReadTimeSpan(self) -> Windows.Foundation.TimeSpan: ...
    @winrt_commethod(29)
    def LoadAsync(self, count: UInt32) -> Windows.Storage.Streams.DataReaderLoadOperation: ...
    @winrt_commethod(30)
    def DetachBuffer(self) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_commethod(31)
    def DetachStream(self) -> Windows.Storage.Streams.IInputStream: ...
    UnconsumedBufferLength = property(get_UnconsumedBufferLength, None)
    UnicodeEncoding = property(get_UnicodeEncoding, put_UnicodeEncoding)
    ByteOrder = property(get_ByteOrder, put_ByteOrder)
    InputStreamOptions = property(get_InputStreamOptions, put_InputStreamOptions)
class IDataReaderFactory(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('d7527847-57da-4e15-91-4c-06-80-66-99-a0-98')
    @winrt_commethod(6)
    def CreateDataReader(self, inputStream: Windows.Storage.Streams.IInputStream) -> Windows.Storage.Streams.DataReader: ...
class IDataReaderStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('11fcbfc8-f93a-471b-b1-21-f3-79-e3-49-31-3c')
    @winrt_commethod(6)
    def FromBuffer(self, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Storage.Streams.DataReader: ...
class IDataWriter(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('64b89265-d341-4922-b3-8a-dd-4a-f8-80-8c-4e')
    @winrt_commethod(6)
    def get_UnstoredBufferLength(self) -> UInt32: ...
    @winrt_commethod(7)
    def get_UnicodeEncoding(self) -> Windows.Storage.Streams.UnicodeEncoding: ...
    @winrt_commethod(8)
    def put_UnicodeEncoding(self, value: Windows.Storage.Streams.UnicodeEncoding) -> Void: ...
    @winrt_commethod(9)
    def get_ByteOrder(self) -> Windows.Storage.Streams.ByteOrder: ...
    @winrt_commethod(10)
    def put_ByteOrder(self, value: Windows.Storage.Streams.ByteOrder) -> Void: ...
    @winrt_commethod(11)
    def WriteByte(self, value: Byte) -> Void: ...
    @winrt_commethod(12)
    def WriteBytes(self, value: c_char_p_no) -> Void: ...
    @winrt_commethod(13)
    def WriteBuffer(self, buffer: Windows.Storage.Streams.IBuffer) -> Void: ...
    @winrt_commethod(14)
    def WriteBufferRange(self, buffer: Windows.Storage.Streams.IBuffer, start: UInt32, count: UInt32) -> Void: ...
    @winrt_commethod(15)
    def WriteBoolean(self, value: Boolean) -> Void: ...
    @winrt_commethod(16)
    def WriteGuid(self, value: Guid) -> Void: ...
    @winrt_commethod(17)
    def WriteInt16(self, value: Int16) -> Void: ...
    @winrt_commethod(18)
    def WriteInt32(self, value: Int32) -> Void: ...
    @winrt_commethod(19)
    def WriteInt64(self, value: Int64) -> Void: ...
    @winrt_commethod(20)
    def WriteUInt16(self, value: UInt16) -> Void: ...
    @winrt_commethod(21)
    def WriteUInt32(self, value: UInt32) -> Void: ...
    @winrt_commethod(22)
    def WriteUInt64(self, value: UInt64) -> Void: ...
    @winrt_commethod(23)
    def WriteSingle(self, value: Single) -> Void: ...
    @winrt_commethod(24)
    def WriteDouble(self, value: Double) -> Void: ...
    @winrt_commethod(25)
    def WriteDateTime(self, value: Windows.Foundation.DateTime) -> Void: ...
    @winrt_commethod(26)
    def WriteTimeSpan(self, value: Windows.Foundation.TimeSpan) -> Void: ...
    @winrt_commethod(27)
    def WriteString(self, value: WinRT_String) -> UInt32: ...
    @winrt_commethod(28)
    def MeasureString(self, value: WinRT_String) -> UInt32: ...
    @winrt_commethod(29)
    def StoreAsync(self) -> Windows.Storage.Streams.DataWriterStoreOperation: ...
    @winrt_commethod(30)
    def FlushAsync(self) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_commethod(31)
    def DetachBuffer(self) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_commethod(32)
    def DetachStream(self) -> Windows.Storage.Streams.IOutputStream: ...
    UnstoredBufferLength = property(get_UnstoredBufferLength, None)
    UnicodeEncoding = property(get_UnicodeEncoding, put_UnicodeEncoding)
    ByteOrder = property(get_ByteOrder, put_ByteOrder)
class IDataWriterFactory(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('338c67c2-8b84-4c2b-9c-50-7b-87-67-84-7a-1f')
    @winrt_commethod(6)
    def CreateDataWriter(self, outputStream: Windows.Storage.Streams.IOutputStream) -> Windows.Storage.Streams.DataWriter: ...
class IFileRandomAccessStreamStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('73550107-3b57-4b5d-83-45-55-4d-2f-c6-21-f0')
    @winrt_commethod(6)
    def OpenAsync(self, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_commethod(7)
    def OpenWithOptionsAsync(self, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode, sharingOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_commethod(8)
    def OpenTransactedWriteAsync(self, filePath: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
    @winrt_commethod(9)
    def OpenTransactedWriteWithOptionsAsync(self, filePath: WinRT_String, openOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
    @winrt_commethod(10)
    def OpenForUserAsync(self, user: Windows.System.User, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_commethod(11)
    def OpenForUserWithOptionsAsync(self, user: Windows.System.User, filePath: WinRT_String, accessMode: Windows.Storage.FileAccessMode, sharingOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStream]: ...
    @winrt_commethod(12)
    def OpenTransactedWriteForUserAsync(self, user: Windows.System.User, filePath: WinRT_String) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
    @winrt_commethod(13)
    def OpenTransactedWriteForUserWithOptionsAsync(self, user: Windows.System.User, filePath: WinRT_String, openOptions: Windows.Storage.StorageOpenOptions, openDisposition: Windows.Storage.Streams.FileOpenDisposition) -> Windows.Foundation.IAsyncOperation[Windows.Storage.StorageStreamTransaction]: ...
class IInputStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('905a0fe2-bc53-11df-8c-49-00-1e-4f-c6-86-da')
    @winrt_commethod(6)
    def ReadAsync(self, buffer: Windows.Storage.Streams.IBuffer, count: UInt32, options: Windows.Storage.Streams.InputStreamOptions) -> Windows.Foundation.IAsyncOperationWithProgress[Windows.Storage.Streams.IBuffer, UInt32]: ...
class IInputStreamReference(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('43929d18-5ec9-4b5a-91-9c-42-05-b0-c8-04-b6')
    @winrt_commethod(6)
    def OpenSequentialReadAsync(self) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IInputStream]: ...
class IOutputStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('905a0fe6-bc53-11df-8c-49-00-1e-4f-c6-86-da')
    @winrt_commethod(6)
    def WriteAsync(self, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.IAsyncOperationWithProgress[UInt32, UInt32]: ...
    @winrt_commethod(7)
    def FlushAsync(self) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
class IPropertySetSerializer(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('6e8ebf1c-ef3d-4376-b2-0e-5b-e6-38-ae-ac-77')
    @winrt_commethod(6)
    def Serialize(self, propertySet: Windows.Foundation.Collections.IPropertySet) -> Windows.Storage.Streams.IBuffer: ...
    @winrt_commethod(7)
    def Deserialize(self, propertySet: Windows.Foundation.Collections.IPropertySet, buffer: Windows.Storage.Streams.IBuffer) -> Void: ...
class IRandomAccessStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('905a0fe1-bc53-11df-8c-49-00-1e-4f-c6-86-da')
    @winrt_commethod(6)
    def get_Size(self) -> UInt64: ...
    @winrt_commethod(7)
    def put_Size(self, value: UInt64) -> Void: ...
    @winrt_commethod(8)
    def GetInputStreamAt(self, position: UInt64) -> Windows.Storage.Streams.IInputStream: ...
    @winrt_commethod(9)
    def GetOutputStreamAt(self, position: UInt64) -> Windows.Storage.Streams.IOutputStream: ...
    @winrt_commethod(10)
    def get_Position(self) -> UInt64: ...
    @winrt_commethod(11)
    def Seek(self, position: UInt64) -> Void: ...
    @winrt_commethod(12)
    def CloneStream(self) -> Windows.Storage.Streams.IRandomAccessStream: ...
    @winrt_commethod(13)
    def get_CanRead(self) -> Boolean: ...
    @winrt_commethod(14)
    def get_CanWrite(self) -> Boolean: ...
    Size = property(get_Size, put_Size)
    Position = property(get_Position, None)
    CanRead = property(get_CanRead, None)
    CanWrite = property(get_CanWrite, None)
class IRandomAccessStreamReference(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('33ee3134-1dd6-4e3a-80-67-d1-c1-62-e8-64-2b')
    @winrt_commethod(6)
    def OpenReadAsync(self) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
class IRandomAccessStreamReferenceStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('857309dc-3fbf-4e7d-98-6f-ef-3b-1a-07-a9-64')
    @winrt_commethod(6)
    def CreateFromFile(self, file: Windows.Storage.IStorageFile) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_commethod(7)
    def CreateFromUri(self, uri: Windows.Foundation.Uri) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_commethod(8)
    def CreateFromStream(self, stream: Windows.Storage.Streams.IRandomAccessStream) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
class IRandomAccessStreamStatics(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('524cedcf-6e29-4ce5-95-73-6b-75-3d-b6-6c-3a')
    @winrt_commethod(6)
    def CopyAsync(self, source: Windows.Storage.Streams.IInputStream, destination: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperationWithProgress[UInt64, UInt64]: ...
    @winrt_commethod(7)
    def CopySizeAsync(self, source: Windows.Storage.Streams.IInputStream, destination: Windows.Storage.Streams.IOutputStream, bytesToCopy: UInt64) -> Windows.Foundation.IAsyncOperationWithProgress[UInt64, UInt64]: ...
    @winrt_commethod(8)
    def CopyAndCloseAsync(self, source: Windows.Storage.Streams.IInputStream, destination: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperationWithProgress[UInt64, UInt64]: ...
class IRandomAccessStreamWithContentType(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    Guid = Guid('cc254827-4b3d-438f-92-32-10-c7-6b-c7-e0-38')
class InMemoryRandomAccessStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.InMemoryRandomAccessStream'
    @winrt_activatemethod
    def New(cls) -> Windows.Storage.Streams.InMemoryRandomAccessStream: ...
    @winrt_mixinmethod
    def get_Size(self: Windows.Storage.Streams.IRandomAccessStream) -> UInt64: ...
    @winrt_mixinmethod
    def put_Size(self: Windows.Storage.Streams.IRandomAccessStream, value: UInt64) -> Void: ...
    @winrt_mixinmethod
    def GetInputStreamAt(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Windows.Storage.Streams.IInputStream: ...
    @winrt_mixinmethod
    def GetOutputStreamAt(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Windows.Storage.Streams.IOutputStream: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Storage.Streams.IRandomAccessStream) -> UInt64: ...
    @winrt_mixinmethod
    def Seek(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Void: ...
    @winrt_mixinmethod
    def CloneStream(self: Windows.Storage.Streams.IRandomAccessStream) -> Windows.Storage.Streams.IRandomAccessStream: ...
    @winrt_mixinmethod
    def get_CanRead(self: Windows.Storage.Streams.IRandomAccessStream) -> Boolean: ...
    @winrt_mixinmethod
    def get_CanWrite(self: Windows.Storage.Streams.IRandomAccessStream) -> Boolean: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    @winrt_mixinmethod
    def ReadAsync(self: Windows.Storage.Streams.IInputStream, buffer: Windows.Storage.Streams.IBuffer, count: UInt32, options: Windows.Storage.Streams.InputStreamOptions) -> Windows.Foundation.IAsyncOperationWithProgress[Windows.Storage.Streams.IBuffer, UInt32]: ...
    @winrt_mixinmethod
    def WriteAsync(self: Windows.Storage.Streams.IOutputStream, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.IAsyncOperationWithProgress[UInt32, UInt32]: ...
    @winrt_mixinmethod
    def FlushAsync(self: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    Size = property(get_Size, put_Size)
    Position = property(get_Position, None)
    CanRead = property(get_CanRead, None)
    CanWrite = property(get_CanWrite, None)
InputStreamOptions = UInt32
InputStreamOptions_None: InputStreamOptions = 0
InputStreamOptions_Partial: InputStreamOptions = 1
InputStreamOptions_ReadAhead: InputStreamOptions = 2
class InputStreamOverStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.InputStreamOverStream'
    @winrt_mixinmethod
    def ReadAsync(self: Windows.Storage.Streams.IInputStream, buffer: Windows.Storage.Streams.IBuffer, count: UInt32, options: Windows.Storage.Streams.InputStreamOptions) -> Windows.Foundation.IAsyncOperationWithProgress[Windows.Storage.Streams.IBuffer, UInt32]: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
class OutputStreamOverStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.OutputStreamOverStream'
    @winrt_mixinmethod
    def WriteAsync(self: Windows.Storage.Streams.IOutputStream, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.IAsyncOperationWithProgress[UInt32, UInt32]: ...
    @winrt_mixinmethod
    def FlushAsync(self: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
class RandomAccessStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.RandomAccessStream'
    @winrt_classmethod
    def CopyAsync(cls: Windows.Storage.Streams.IRandomAccessStreamStatics, source: Windows.Storage.Streams.IInputStream, destination: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperationWithProgress[UInt64, UInt64]: ...
    @winrt_classmethod
    def CopySizeAsync(cls: Windows.Storage.Streams.IRandomAccessStreamStatics, source: Windows.Storage.Streams.IInputStream, destination: Windows.Storage.Streams.IOutputStream, bytesToCopy: UInt64) -> Windows.Foundation.IAsyncOperationWithProgress[UInt64, UInt64]: ...
    @winrt_classmethod
    def CopyAndCloseAsync(cls: Windows.Storage.Streams.IRandomAccessStreamStatics, source: Windows.Storage.Streams.IInputStream, destination: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperationWithProgress[UInt64, UInt64]: ...
class RandomAccessStreamOverStream(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.RandomAccessStreamOverStream'
    @winrt_mixinmethod
    def get_Size(self: Windows.Storage.Streams.IRandomAccessStream) -> UInt64: ...
    @winrt_mixinmethod
    def put_Size(self: Windows.Storage.Streams.IRandomAccessStream, value: UInt64) -> Void: ...
    @winrt_mixinmethod
    def GetInputStreamAt(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Windows.Storage.Streams.IInputStream: ...
    @winrt_mixinmethod
    def GetOutputStreamAt(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Windows.Storage.Streams.IOutputStream: ...
    @winrt_mixinmethod
    def get_Position(self: Windows.Storage.Streams.IRandomAccessStream) -> UInt64: ...
    @winrt_mixinmethod
    def Seek(self: Windows.Storage.Streams.IRandomAccessStream, position: UInt64) -> Void: ...
    @winrt_mixinmethod
    def CloneStream(self: Windows.Storage.Streams.IRandomAccessStream) -> Windows.Storage.Streams.IRandomAccessStream: ...
    @winrt_mixinmethod
    def get_CanRead(self: Windows.Storage.Streams.IRandomAccessStream) -> Boolean: ...
    @winrt_mixinmethod
    def get_CanWrite(self: Windows.Storage.Streams.IRandomAccessStream) -> Boolean: ...
    @winrt_mixinmethod
    def Close(self: Windows.Foundation.IClosable) -> Void: ...
    @winrt_mixinmethod
    def ReadAsync(self: Windows.Storage.Streams.IInputStream, buffer: Windows.Storage.Streams.IBuffer, count: UInt32, options: Windows.Storage.Streams.InputStreamOptions) -> Windows.Foundation.IAsyncOperationWithProgress[Windows.Storage.Streams.IBuffer, UInt32]: ...
    @winrt_mixinmethod
    def WriteAsync(self: Windows.Storage.Streams.IOutputStream, buffer: Windows.Storage.Streams.IBuffer) -> Windows.Foundation.IAsyncOperationWithProgress[UInt32, UInt32]: ...
    @winrt_mixinmethod
    def FlushAsync(self: Windows.Storage.Streams.IOutputStream) -> Windows.Foundation.IAsyncOperation[Boolean]: ...
    Size = property(get_Size, put_Size)
    Position = property(get_Position, None)
    CanRead = property(get_CanRead, None)
    CanWrite = property(get_CanWrite, None)
class RandomAccessStreamReference(c_void_p):
    extends: Windows.Win32.System.WinRT.IInspectable
    ClassId = 'Windows.Storage.Streams.RandomAccessStreamReference'
    @winrt_mixinmethod
    def OpenReadAsync(self: Windows.Storage.Streams.IRandomAccessStreamReference) -> Windows.Foundation.IAsyncOperation[Windows.Storage.Streams.IRandomAccessStreamWithContentType]: ...
    @winrt_classmethod
    def CreateFromFile(cls: Windows.Storage.Streams.IRandomAccessStreamReferenceStatics, file: Windows.Storage.IStorageFile) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_classmethod
    def CreateFromUri(cls: Windows.Storage.Streams.IRandomAccessStreamReferenceStatics, uri: Windows.Foundation.Uri) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
    @winrt_classmethod
    def CreateFromStream(cls: Windows.Storage.Streams.IRandomAccessStreamReferenceStatics, stream: Windows.Storage.Streams.IRandomAccessStream) -> Windows.Storage.Streams.RandomAccessStreamReference: ...
UnicodeEncoding = Int32
UnicodeEncoding_Utf8: UnicodeEncoding = 0
UnicodeEncoding_Utf16LE: UnicodeEncoding = 1
UnicodeEncoding_Utf16BE: UnicodeEncoding = 2
make_head(_module, 'Buffer')
make_head(_module, 'DataReader')
make_head(_module, 'DataReaderLoadOperation')
make_head(_module, 'DataWriter')
make_head(_module, 'DataWriterStoreOperation')
make_head(_module, 'FileInputStream')
make_head(_module, 'FileOutputStream')
make_head(_module, 'FileRandomAccessStream')
make_head(_module, 'IBuffer')
make_head(_module, 'IBufferFactory')
make_head(_module, 'IBufferStatics')
make_head(_module, 'IContentTypeProvider')
make_head(_module, 'IDataReader')
make_head(_module, 'IDataReaderFactory')
make_head(_module, 'IDataReaderStatics')
make_head(_module, 'IDataWriter')
make_head(_module, 'IDataWriterFactory')
make_head(_module, 'IFileRandomAccessStreamStatics')
make_head(_module, 'IInputStream')
make_head(_module, 'IInputStreamReference')
make_head(_module, 'IOutputStream')
make_head(_module, 'IPropertySetSerializer')
make_head(_module, 'IRandomAccessStream')
make_head(_module, 'IRandomAccessStreamReference')
make_head(_module, 'IRandomAccessStreamReferenceStatics')
make_head(_module, 'IRandomAccessStreamStatics')
make_head(_module, 'IRandomAccessStreamWithContentType')
make_head(_module, 'InMemoryRandomAccessStream')
make_head(_module, 'InputStreamOverStream')
make_head(_module, 'OutputStreamOverStream')
make_head(_module, 'RandomAccessStream')
make_head(_module, 'RandomAccessStreamOverStream')
make_head(_module, 'RandomAccessStreamReference')
