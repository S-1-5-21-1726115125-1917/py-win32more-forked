from __future__ import annotations
from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head
import win32more.Foundation
import win32more.Globalization
import win32more.Graphics.Gdi
import win32more.System.Com
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        if name in _arch_optional:
            return None
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
def __dir__():
    return __all__
ALL_SERVICE_TYPES: UInt32 = 0
HIGHLEVEL_SERVICE_TYPES: UInt32 = 1
LOWLEVEL_SERVICE_TYPES: UInt32 = 2
ALL_SERVICES: UInt32 = 0
ONLINE_SERVICES: UInt32 = 1
OFFLINE_SERVICES: UInt32 = 2
MAX_LEADBYTES: UInt32 = 12
MAX_DEFAULTCHAR: UInt32 = 2
HIGH_SURROGATE_START: UInt32 = 55296
HIGH_SURROGATE_END: UInt32 = 56319
LOW_SURROGATE_START: UInt32 = 56320
LOW_SURROGATE_END: UInt32 = 57343
WC_COMPOSITECHECK: UInt32 = 512
WC_DISCARDNS: UInt32 = 16
WC_SEPCHARS: UInt32 = 32
WC_DEFAULTCHAR: UInt32 = 64
WC_ERR_INVALID_CHARS: UInt32 = 128
WC_NO_BEST_FIT_CHARS: UInt32 = 1024
CT_CTYPE1: UInt32 = 1
CT_CTYPE2: UInt32 = 2
CT_CTYPE3: UInt32 = 4
C1_UPPER: UInt32 = 1
C1_LOWER: UInt32 = 2
C1_DIGIT: UInt32 = 4
C1_SPACE: UInt32 = 8
C1_PUNCT: UInt32 = 16
C1_CNTRL: UInt32 = 32
C1_BLANK: UInt32 = 64
C1_XDIGIT: UInt32 = 128
C1_ALPHA: UInt32 = 256
C1_DEFINED: UInt32 = 512
C2_LEFTTORIGHT: UInt32 = 1
C2_RIGHTTOLEFT: UInt32 = 2
C2_EUROPENUMBER: UInt32 = 3
C2_EUROPESEPARATOR: UInt32 = 4
C2_EUROPETERMINATOR: UInt32 = 5
C2_ARABICNUMBER: UInt32 = 6
C2_COMMONSEPARATOR: UInt32 = 7
C2_BLOCKSEPARATOR: UInt32 = 8
C2_SEGMENTSEPARATOR: UInt32 = 9
C2_WHITESPACE: UInt32 = 10
C2_OTHERNEUTRAL: UInt32 = 11
C2_NOTAPPLICABLE: UInt32 = 0
C3_NONSPACING: UInt32 = 1
C3_DIACRITIC: UInt32 = 2
C3_VOWELMARK: UInt32 = 4
C3_SYMBOL: UInt32 = 8
C3_KATAKANA: UInt32 = 16
C3_HIRAGANA: UInt32 = 32
C3_HALFWIDTH: UInt32 = 64
C3_FULLWIDTH: UInt32 = 128
C3_IDEOGRAPH: UInt32 = 256
C3_KASHIDA: UInt32 = 512
C3_LEXICAL: UInt32 = 1024
C3_HIGHSURROGATE: UInt32 = 2048
C3_LOWSURROGATE: UInt32 = 4096
C3_ALPHA: UInt32 = 32768
C3_NOTAPPLICABLE: UInt32 = 0
LCMAP_LOWERCASE: UInt32 = 256
LCMAP_UPPERCASE: UInt32 = 512
LCMAP_TITLECASE: UInt32 = 768
LCMAP_SORTKEY: UInt32 = 1024
LCMAP_BYTEREV: UInt32 = 2048
LCMAP_HIRAGANA: UInt32 = 1048576
LCMAP_KATAKANA: UInt32 = 2097152
LCMAP_HALFWIDTH: UInt32 = 4194304
LCMAP_FULLWIDTH: UInt32 = 8388608
LCMAP_LINGUISTIC_CASING: UInt32 = 16777216
LCMAP_SIMPLIFIED_CHINESE: UInt32 = 33554432
LCMAP_TRADITIONAL_CHINESE: UInt32 = 67108864
LCMAP_SORTHANDLE: UInt32 = 536870912
LCMAP_HASH: UInt32 = 262144
FIND_STARTSWITH: UInt32 = 1048576
FIND_ENDSWITH: UInt32 = 2097152
FIND_FROMSTART: UInt32 = 4194304
FIND_FROMEND: UInt32 = 8388608
LCID_ALTERNATE_SORTS: UInt32 = 4
LOCALE_ALL: UInt32 = 0
LOCALE_WINDOWS: UInt32 = 1
LOCALE_SUPPLEMENTAL: UInt32 = 2
LOCALE_ALTERNATE_SORTS: UInt32 = 4
LOCALE_REPLACEMENT: UInt32 = 8
LOCALE_NEUTRALDATA: UInt32 = 16
LOCALE_SPECIFICDATA: UInt32 = 32
CSTR_LESS_THAN: UInt32 = 1
CSTR_EQUAL: UInt32 = 2
CSTR_GREATER_THAN: UInt32 = 3
CP_ACP: UInt32 = 0
CP_OEMCP: UInt32 = 1
CP_MACCP: UInt32 = 2
CP_THREAD_ACP: UInt32 = 3
CP_SYMBOL: UInt32 = 42
CP_UTF7: UInt32 = 65000
CP_UTF8: UInt32 = 65001
CTRY_DEFAULT: UInt32 = 0
CTRY_ALBANIA: UInt32 = 355
CTRY_ALGERIA: UInt32 = 213
CTRY_ARGENTINA: UInt32 = 54
CTRY_ARMENIA: UInt32 = 374
CTRY_AUSTRALIA: UInt32 = 61
CTRY_AUSTRIA: UInt32 = 43
CTRY_AZERBAIJAN: UInt32 = 994
CTRY_BAHRAIN: UInt32 = 973
CTRY_BELARUS: UInt32 = 375
CTRY_BELGIUM: UInt32 = 32
CTRY_BELIZE: UInt32 = 501
CTRY_BOLIVIA: UInt32 = 591
CTRY_BRAZIL: UInt32 = 55
CTRY_BRUNEI_DARUSSALAM: UInt32 = 673
CTRY_BULGARIA: UInt32 = 359
CTRY_CANADA: UInt32 = 2
CTRY_CARIBBEAN: UInt32 = 1
CTRY_CHILE: UInt32 = 56
CTRY_COLOMBIA: UInt32 = 57
CTRY_COSTA_RICA: UInt32 = 506
CTRY_CROATIA: UInt32 = 385
CTRY_CZECH: UInt32 = 420
CTRY_DENMARK: UInt32 = 45
CTRY_DOMINICAN_REPUBLIC: UInt32 = 1
CTRY_ECUADOR: UInt32 = 593
CTRY_EGYPT: UInt32 = 20
CTRY_EL_SALVADOR: UInt32 = 503
CTRY_ESTONIA: UInt32 = 372
CTRY_FAEROE_ISLANDS: UInt32 = 298
CTRY_FINLAND: UInt32 = 358
CTRY_FRANCE: UInt32 = 33
CTRY_GEORGIA: UInt32 = 995
CTRY_GERMANY: UInt32 = 49
CTRY_GREECE: UInt32 = 30
CTRY_GUATEMALA: UInt32 = 502
CTRY_HONDURAS: UInt32 = 504
CTRY_HONG_KONG: UInt32 = 852
CTRY_HUNGARY: UInt32 = 36
CTRY_ICELAND: UInt32 = 354
CTRY_INDIA: UInt32 = 91
CTRY_INDONESIA: UInt32 = 62
CTRY_IRAN: UInt32 = 981
CTRY_IRAQ: UInt32 = 964
CTRY_IRELAND: UInt32 = 353
CTRY_ISRAEL: UInt32 = 972
CTRY_ITALY: UInt32 = 39
CTRY_JAMAICA: UInt32 = 1
CTRY_JAPAN: UInt32 = 81
CTRY_JORDAN: UInt32 = 962
CTRY_KAZAKSTAN: UInt32 = 7
CTRY_KENYA: UInt32 = 254
CTRY_KUWAIT: UInt32 = 965
CTRY_KYRGYZSTAN: UInt32 = 996
CTRY_LATVIA: UInt32 = 371
CTRY_LEBANON: UInt32 = 961
CTRY_LIBYA: UInt32 = 218
CTRY_LIECHTENSTEIN: UInt32 = 41
CTRY_LITHUANIA: UInt32 = 370
CTRY_LUXEMBOURG: UInt32 = 352
CTRY_MACAU: UInt32 = 853
CTRY_MACEDONIA: UInt32 = 389
CTRY_MALAYSIA: UInt32 = 60
CTRY_MALDIVES: UInt32 = 960
CTRY_MEXICO: UInt32 = 52
CTRY_MONACO: UInt32 = 33
CTRY_MONGOLIA: UInt32 = 976
CTRY_MOROCCO: UInt32 = 212
CTRY_NETHERLANDS: UInt32 = 31
CTRY_NEW_ZEALAND: UInt32 = 64
CTRY_NICARAGUA: UInt32 = 505
CTRY_NORWAY: UInt32 = 47
CTRY_OMAN: UInt32 = 968
CTRY_PAKISTAN: UInt32 = 92
CTRY_PANAMA: UInt32 = 507
CTRY_PARAGUAY: UInt32 = 595
CTRY_PERU: UInt32 = 51
CTRY_PHILIPPINES: UInt32 = 63
CTRY_POLAND: UInt32 = 48
CTRY_PORTUGAL: UInt32 = 351
CTRY_PRCHINA: UInt32 = 86
CTRY_PUERTO_RICO: UInt32 = 1
CTRY_QATAR: UInt32 = 974
CTRY_ROMANIA: UInt32 = 40
CTRY_RUSSIA: UInt32 = 7
CTRY_SAUDI_ARABIA: UInt32 = 966
CTRY_SERBIA: UInt32 = 381
CTRY_SINGAPORE: UInt32 = 65
CTRY_SLOVAK: UInt32 = 421
CTRY_SLOVENIA: UInt32 = 386
CTRY_SOUTH_AFRICA: UInt32 = 27
CTRY_SOUTH_KOREA: UInt32 = 82
CTRY_SPAIN: UInt32 = 34
CTRY_SWEDEN: UInt32 = 46
CTRY_SWITZERLAND: UInt32 = 41
CTRY_SYRIA: UInt32 = 963
CTRY_TAIWAN: UInt32 = 886
CTRY_TATARSTAN: UInt32 = 7
CTRY_THAILAND: UInt32 = 66
CTRY_TRINIDAD_Y_TOBAGO: UInt32 = 1
CTRY_TUNISIA: UInt32 = 216
CTRY_TURKEY: UInt32 = 90
CTRY_UAE: UInt32 = 971
CTRY_UKRAINE: UInt32 = 380
CTRY_UNITED_KINGDOM: UInt32 = 44
CTRY_UNITED_STATES: UInt32 = 1
CTRY_URUGUAY: UInt32 = 598
CTRY_UZBEKISTAN: UInt32 = 7
CTRY_VENEZUELA: UInt32 = 58
CTRY_VIET_NAM: UInt32 = 84
CTRY_YEMEN: UInt32 = 967
CTRY_ZIMBABWE: UInt32 = 263
LOCALE_NOUSEROVERRIDE: UInt32 = 2147483648
LOCALE_USE_CP_ACP: UInt32 = 1073741824
LOCALE_RETURN_NUMBER: UInt32 = 536870912
LOCALE_RETURN_GENITIVE_NAMES: UInt32 = 268435456
LOCALE_ALLOW_NEUTRAL_NAMES: UInt32 = 134217728
LOCALE_SLOCALIZEDDISPLAYNAME: UInt32 = 2
LOCALE_SENGLISHDISPLAYNAME: UInt32 = 114
LOCALE_SNATIVEDISPLAYNAME: UInt32 = 115
LOCALE_SLOCALIZEDLANGUAGENAME: UInt32 = 111
LOCALE_SENGLISHLANGUAGENAME: UInt32 = 4097
LOCALE_SNATIVELANGUAGENAME: UInt32 = 4
LOCALE_SLOCALIZEDCOUNTRYNAME: UInt32 = 6
LOCALE_SENGLISHCOUNTRYNAME: UInt32 = 4098
LOCALE_SNATIVECOUNTRYNAME: UInt32 = 8
LOCALE_IDIALINGCODE: UInt32 = 5
LOCALE_SLIST: UInt32 = 12
LOCALE_IMEASURE: UInt32 = 13
LOCALE_SDECIMAL: UInt32 = 14
LOCALE_STHOUSAND: UInt32 = 15
LOCALE_SGROUPING: UInt32 = 16
LOCALE_IDIGITS: UInt32 = 17
LOCALE_ILZERO: UInt32 = 18
LOCALE_INEGNUMBER: UInt32 = 4112
LOCALE_SNATIVEDIGITS: UInt32 = 19
LOCALE_SCURRENCY: UInt32 = 20
LOCALE_SINTLSYMBOL: UInt32 = 21
LOCALE_SMONDECIMALSEP: UInt32 = 22
LOCALE_SMONTHOUSANDSEP: UInt32 = 23
LOCALE_SMONGROUPING: UInt32 = 24
LOCALE_ICURRDIGITS: UInt32 = 25
LOCALE_ICURRENCY: UInt32 = 27
LOCALE_INEGCURR: UInt32 = 28
LOCALE_SSHORTDATE: UInt32 = 31
LOCALE_SLONGDATE: UInt32 = 32
LOCALE_STIMEFORMAT: UInt32 = 4099
LOCALE_SAM: UInt32 = 40
LOCALE_SPM: UInt32 = 41
LOCALE_ICALENDARTYPE: UInt32 = 4105
LOCALE_IOPTIONALCALENDAR: UInt32 = 4107
LOCALE_IFIRSTDAYOFWEEK: UInt32 = 4108
LOCALE_IFIRSTWEEKOFYEAR: UInt32 = 4109
LOCALE_SDAYNAME1: UInt32 = 42
LOCALE_SDAYNAME2: UInt32 = 43
LOCALE_SDAYNAME3: UInt32 = 44
LOCALE_SDAYNAME4: UInt32 = 45
LOCALE_SDAYNAME5: UInt32 = 46
LOCALE_SDAYNAME6: UInt32 = 47
LOCALE_SDAYNAME7: UInt32 = 48
LOCALE_SABBREVDAYNAME1: UInt32 = 49
LOCALE_SABBREVDAYNAME2: UInt32 = 50
LOCALE_SABBREVDAYNAME3: UInt32 = 51
LOCALE_SABBREVDAYNAME4: UInt32 = 52
LOCALE_SABBREVDAYNAME5: UInt32 = 53
LOCALE_SABBREVDAYNAME6: UInt32 = 54
LOCALE_SABBREVDAYNAME7: UInt32 = 55
LOCALE_SMONTHNAME1: UInt32 = 56
LOCALE_SMONTHNAME2: UInt32 = 57
LOCALE_SMONTHNAME3: UInt32 = 58
LOCALE_SMONTHNAME4: UInt32 = 59
LOCALE_SMONTHNAME5: UInt32 = 60
LOCALE_SMONTHNAME6: UInt32 = 61
LOCALE_SMONTHNAME7: UInt32 = 62
LOCALE_SMONTHNAME8: UInt32 = 63
LOCALE_SMONTHNAME9: UInt32 = 64
LOCALE_SMONTHNAME10: UInt32 = 65
LOCALE_SMONTHNAME11: UInt32 = 66
LOCALE_SMONTHNAME12: UInt32 = 67
LOCALE_SMONTHNAME13: UInt32 = 4110
LOCALE_SABBREVMONTHNAME1: UInt32 = 68
LOCALE_SABBREVMONTHNAME2: UInt32 = 69
LOCALE_SABBREVMONTHNAME3: UInt32 = 70
LOCALE_SABBREVMONTHNAME4: UInt32 = 71
LOCALE_SABBREVMONTHNAME5: UInt32 = 72
LOCALE_SABBREVMONTHNAME6: UInt32 = 73
LOCALE_SABBREVMONTHNAME7: UInt32 = 74
LOCALE_SABBREVMONTHNAME8: UInt32 = 75
LOCALE_SABBREVMONTHNAME9: UInt32 = 76
LOCALE_SABBREVMONTHNAME10: UInt32 = 77
LOCALE_SABBREVMONTHNAME11: UInt32 = 78
LOCALE_SABBREVMONTHNAME12: UInt32 = 79
LOCALE_SABBREVMONTHNAME13: UInt32 = 4111
LOCALE_SPOSITIVESIGN: UInt32 = 80
LOCALE_SNEGATIVESIGN: UInt32 = 81
LOCALE_IPOSSIGNPOSN: UInt32 = 82
LOCALE_INEGSIGNPOSN: UInt32 = 83
LOCALE_IPOSSYMPRECEDES: UInt32 = 84
LOCALE_IPOSSEPBYSPACE: UInt32 = 85
LOCALE_INEGSYMPRECEDES: UInt32 = 86
LOCALE_INEGSEPBYSPACE: UInt32 = 87
LOCALE_FONTSIGNATURE: UInt32 = 88
LOCALE_SISO639LANGNAME: UInt32 = 89
LOCALE_SISO3166CTRYNAME: UInt32 = 90
LOCALE_IPAPERSIZE: UInt32 = 4106
LOCALE_SENGCURRNAME: UInt32 = 4103
LOCALE_SNATIVECURRNAME: UInt32 = 4104
LOCALE_SYEARMONTH: UInt32 = 4102
LOCALE_SSORTNAME: UInt32 = 4115
LOCALE_IDIGITSUBSTITUTION: UInt32 = 4116
LOCALE_SNAME: UInt32 = 92
LOCALE_SDURATION: UInt32 = 93
LOCALE_SSHORTESTDAYNAME1: UInt32 = 96
LOCALE_SSHORTESTDAYNAME2: UInt32 = 97
LOCALE_SSHORTESTDAYNAME3: UInt32 = 98
LOCALE_SSHORTESTDAYNAME4: UInt32 = 99
LOCALE_SSHORTESTDAYNAME5: UInt32 = 100
LOCALE_SSHORTESTDAYNAME6: UInt32 = 101
LOCALE_SSHORTESTDAYNAME7: UInt32 = 102
LOCALE_SISO639LANGNAME2: UInt32 = 103
LOCALE_SISO3166CTRYNAME2: UInt32 = 104
LOCALE_SNAN: UInt32 = 105
LOCALE_SPOSINFINITY: UInt32 = 106
LOCALE_SNEGINFINITY: UInt32 = 107
LOCALE_SSCRIPTS: UInt32 = 108
LOCALE_SPARENT: UInt32 = 109
LOCALE_SCONSOLEFALLBACKNAME: UInt32 = 110
LOCALE_IREADINGLAYOUT: UInt32 = 112
LOCALE_INEUTRAL: UInt32 = 113
LOCALE_INEGATIVEPERCENT: UInt32 = 116
LOCALE_IPOSITIVEPERCENT: UInt32 = 117
LOCALE_SPERCENT: UInt32 = 118
LOCALE_SPERMILLE: UInt32 = 119
LOCALE_SMONTHDAY: UInt32 = 120
LOCALE_SSHORTTIME: UInt32 = 121
LOCALE_SOPENTYPELANGUAGETAG: UInt32 = 122
LOCALE_SSORTLOCALE: UInt32 = 123
LOCALE_SRELATIVELONGDATE: UInt32 = 124
LOCALE_ICONSTRUCTEDLOCALE: UInt32 = 125
LOCALE_SSHORTESTAM: UInt32 = 126
LOCALE_SSHORTESTPM: UInt32 = 127
LOCALE_IUSEUTF8LEGACYACP: UInt32 = 1638
LOCALE_IUSEUTF8LEGACYOEMCP: UInt32 = 2457
LOCALE_IDEFAULTCODEPAGE: UInt32 = 11
LOCALE_IDEFAULTANSICODEPAGE: UInt32 = 4100
LOCALE_IDEFAULTMACCODEPAGE: UInt32 = 4113
LOCALE_IDEFAULTEBCDICCODEPAGE: UInt32 = 4114
LOCALE_ILANGUAGE: UInt32 = 1
LOCALE_SABBREVLANGNAME: UInt32 = 3
LOCALE_SABBREVCTRYNAME: UInt32 = 7
LOCALE_IGEOID: UInt32 = 91
LOCALE_IDEFAULTLANGUAGE: UInt32 = 9
LOCALE_IDEFAULTCOUNTRY: UInt32 = 10
LOCALE_IINTLCURRDIGITS: UInt32 = 26
LOCALE_SDATE: UInt32 = 29
LOCALE_STIME: UInt32 = 30
LOCALE_IDATE: UInt32 = 33
LOCALE_ILDATE: UInt32 = 34
LOCALE_ITIME: UInt32 = 35
LOCALE_ITIMEMARKPOSN: UInt32 = 4101
LOCALE_ICENTURY: UInt32 = 36
LOCALE_ITLZERO: UInt32 = 37
LOCALE_IDAYLZERO: UInt32 = 38
LOCALE_IMONLZERO: UInt32 = 39
LOCALE_SKEYBOARDSTOINSTALL: UInt32 = 94
LOCALE_SLANGUAGE: UInt32 = 2
LOCALE_SLANGDISPLAYNAME: UInt32 = 111
LOCALE_SENGLANGUAGE: UInt32 = 4097
LOCALE_SNATIVELANGNAME: UInt32 = 4
LOCALE_SCOUNTRY: UInt32 = 6
LOCALE_SENGCOUNTRY: UInt32 = 4098
LOCALE_SNATIVECTRYNAME: UInt32 = 8
LOCALE_ICOUNTRY: UInt32 = 5
LOCALE_S1159: UInt32 = 40
LOCALE_S2359: UInt32 = 41
CAL_NOUSEROVERRIDE: UInt32 = 2147483648
CAL_USE_CP_ACP: UInt32 = 1073741824
CAL_RETURN_NUMBER: UInt32 = 536870912
CAL_RETURN_GENITIVE_NAMES: UInt32 = 268435456
CAL_ICALINTVALUE: UInt32 = 1
CAL_SCALNAME: UInt32 = 2
CAL_IYEAROFFSETRANGE: UInt32 = 3
CAL_SERASTRING: UInt32 = 4
CAL_SSHORTDATE: UInt32 = 5
CAL_SLONGDATE: UInt32 = 6
CAL_SDAYNAME1: UInt32 = 7
CAL_SDAYNAME2: UInt32 = 8
CAL_SDAYNAME3: UInt32 = 9
CAL_SDAYNAME4: UInt32 = 10
CAL_SDAYNAME5: UInt32 = 11
CAL_SDAYNAME6: UInt32 = 12
CAL_SDAYNAME7: UInt32 = 13
CAL_SABBREVDAYNAME1: UInt32 = 14
CAL_SABBREVDAYNAME2: UInt32 = 15
CAL_SABBREVDAYNAME3: UInt32 = 16
CAL_SABBREVDAYNAME4: UInt32 = 17
CAL_SABBREVDAYNAME5: UInt32 = 18
CAL_SABBREVDAYNAME6: UInt32 = 19
CAL_SABBREVDAYNAME7: UInt32 = 20
CAL_SMONTHNAME1: UInt32 = 21
CAL_SMONTHNAME2: UInt32 = 22
CAL_SMONTHNAME3: UInt32 = 23
CAL_SMONTHNAME4: UInt32 = 24
CAL_SMONTHNAME5: UInt32 = 25
CAL_SMONTHNAME6: UInt32 = 26
CAL_SMONTHNAME7: UInt32 = 27
CAL_SMONTHNAME8: UInt32 = 28
CAL_SMONTHNAME9: UInt32 = 29
CAL_SMONTHNAME10: UInt32 = 30
CAL_SMONTHNAME11: UInt32 = 31
CAL_SMONTHNAME12: UInt32 = 32
CAL_SMONTHNAME13: UInt32 = 33
CAL_SABBREVMONTHNAME1: UInt32 = 34
CAL_SABBREVMONTHNAME2: UInt32 = 35
CAL_SABBREVMONTHNAME3: UInt32 = 36
CAL_SABBREVMONTHNAME4: UInt32 = 37
CAL_SABBREVMONTHNAME5: UInt32 = 38
CAL_SABBREVMONTHNAME6: UInt32 = 39
CAL_SABBREVMONTHNAME7: UInt32 = 40
CAL_SABBREVMONTHNAME8: UInt32 = 41
CAL_SABBREVMONTHNAME9: UInt32 = 42
CAL_SABBREVMONTHNAME10: UInt32 = 43
CAL_SABBREVMONTHNAME11: UInt32 = 44
CAL_SABBREVMONTHNAME12: UInt32 = 45
CAL_SABBREVMONTHNAME13: UInt32 = 46
CAL_SYEARMONTH: UInt32 = 47
CAL_ITWODIGITYEARMAX: UInt32 = 48
CAL_SSHORTESTDAYNAME1: UInt32 = 49
CAL_SSHORTESTDAYNAME2: UInt32 = 50
CAL_SSHORTESTDAYNAME3: UInt32 = 51
CAL_SSHORTESTDAYNAME4: UInt32 = 52
CAL_SSHORTESTDAYNAME5: UInt32 = 53
CAL_SSHORTESTDAYNAME6: UInt32 = 54
CAL_SSHORTESTDAYNAME7: UInt32 = 55
CAL_SMONTHDAY: UInt32 = 56
CAL_SABBREVERASTRING: UInt32 = 57
CAL_SRELATIVELONGDATE: UInt32 = 58
CAL_SENGLISHERANAME: UInt32 = 59
CAL_SENGLISHABBREVERANAME: UInt32 = 60
CAL_SJAPANESEERAFIRSTYEAR: UInt32 = 61
ENUM_ALL_CALENDARS: UInt32 = 4294967295
CAL_GREGORIAN: UInt32 = 1
CAL_GREGORIAN_US: UInt32 = 2
CAL_JAPAN: UInt32 = 3
CAL_TAIWAN: UInt32 = 4
CAL_KOREA: UInt32 = 5
CAL_HIJRI: UInt32 = 6
CAL_THAI: UInt32 = 7
CAL_HEBREW: UInt32 = 8
CAL_GREGORIAN_ME_FRENCH: UInt32 = 9
CAL_GREGORIAN_ARABIC: UInt32 = 10
CAL_GREGORIAN_XLIT_ENGLISH: UInt32 = 11
CAL_GREGORIAN_XLIT_FRENCH: UInt32 = 12
CAL_PERSIAN: UInt32 = 22
CAL_UMALQURA: UInt32 = 23
LGRPID_WESTERN_EUROPE: UInt32 = 1
LGRPID_CENTRAL_EUROPE: UInt32 = 2
LGRPID_BALTIC: UInt32 = 3
LGRPID_GREEK: UInt32 = 4
LGRPID_CYRILLIC: UInt32 = 5
LGRPID_TURKIC: UInt32 = 6
LGRPID_TURKISH: UInt32 = 6
LGRPID_JAPANESE: UInt32 = 7
LGRPID_KOREAN: UInt32 = 8
LGRPID_TRADITIONAL_CHINESE: UInt32 = 9
LGRPID_SIMPLIFIED_CHINESE: UInt32 = 10
LGRPID_THAI: UInt32 = 11
LGRPID_HEBREW: UInt32 = 12
LGRPID_ARABIC: UInt32 = 13
LGRPID_VIETNAMESE: UInt32 = 14
LGRPID_INDIC: UInt32 = 15
LGRPID_GEORGIAN: UInt32 = 16
LGRPID_ARMENIAN: UInt32 = 17
MUI_LANGUAGE_ID: UInt32 = 4
MUI_LANGUAGE_NAME: UInt32 = 8
MUI_MERGE_SYSTEM_FALLBACK: UInt32 = 16
MUI_MERGE_USER_FALLBACK: UInt32 = 32
MUI_THREAD_LANGUAGES: UInt32 = 64
MUI_CONSOLE_FILTER: UInt32 = 256
MUI_COMPLEX_SCRIPT_FILTER: UInt32 = 512
MUI_RESET_FILTERS: UInt32 = 1
MUI_USER_PREFERRED_UI_LANGUAGES: UInt32 = 16
MUI_USE_INSTALLED_LANGUAGES: UInt32 = 32
MUI_USE_SEARCH_ALL_LANGUAGES: UInt32 = 64
MUI_LANG_NEUTRAL_PE_FILE: UInt32 = 256
MUI_NON_LANG_NEUTRAL_FILE: UInt32 = 512
MUI_MACHINE_LANGUAGE_SETTINGS: UInt32 = 1024
MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL: UInt32 = 1
MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN: UInt32 = 2
MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI: UInt32 = 4
MUI_QUERY_TYPE: UInt32 = 1
MUI_QUERY_CHECKSUM: UInt32 = 2
MUI_QUERY_LANGUAGE_NAME: UInt32 = 4
MUI_QUERY_RESOURCE_TYPES: UInt32 = 8
MUI_FILEINFO_VERSION: UInt32 = 1
MUI_FULL_LANGUAGE: UInt32 = 1
MUI_PARTIAL_LANGUAGE: UInt32 = 2
MUI_LIP_LANGUAGE: UInt32 = 4
MUI_LANGUAGE_INSTALLED: UInt32 = 32
MUI_LANGUAGE_LICENSED: UInt32 = 64
GEOID_NOT_AVAILABLE: Int32 = -1
SORTING_PARADIGM_NLS: UInt32 = 0
SORTING_PARADIGM_ICU: UInt32 = 16777216
IDN_ALLOW_UNASSIGNED: UInt32 = 1
IDN_USE_STD3_ASCII_RULES: UInt32 = 2
IDN_EMAIL_ADDRESS: UInt32 = 4
IDN_RAW_PUNYCODE: UInt32 = 8
VS_ALLOW_LATIN: UInt32 = 1
GSS_ALLOW_INHERITED_COMMON: UInt32 = 1
MUI_FORMAT_REG_COMPAT: UInt32 = 1
MUI_FORMAT_INF_COMPAT: UInt32 = 2
MUI_VERIFY_FILE_EXISTS: UInt32 = 4
MUI_SKIP_STRING_CACHE: UInt32 = 8
MUI_IMMUTABLE_LOOKUP: UInt32 = 16
LOCALE_NAME_INVARIANT: String = ''
LOCALE_NAME_SYSTEM_DEFAULT: String = '!x-sys-default-locale'
MIN_SPELLING_NTDDI: UInt32 = 100794368
SCRIPT_UNDEFINED: UInt32 = 0
USP_E_SCRIPT_NOT_IN_FONT: win32more.Foundation.HRESULT = -2147220992
SGCM_RTL: UInt32 = 1
SSA_PASSWORD: UInt32 = 1
SSA_TAB: UInt32 = 2
SSA_CLIP: UInt32 = 4
SSA_FIT: UInt32 = 8
SSA_DZWG: UInt32 = 16
SSA_FALLBACK: UInt32 = 32
SSA_BREAK: UInt32 = 64
SSA_GLYPHS: UInt32 = 128
SSA_RTL: UInt32 = 256
SSA_GCP: UInt32 = 512
SSA_HOTKEY: UInt32 = 1024
SSA_METAFILE: UInt32 = 2048
SSA_LINK: UInt32 = 4096
SSA_HIDEHOTKEY: UInt32 = 8192
SSA_HOTKEYONLY: UInt32 = 9216
SSA_FULLMEASURE: UInt32 = 67108864
SSA_LPKANSIFALLBACK: UInt32 = 134217728
SSA_PIDX: UInt32 = 268435456
SSA_LAYOUTRTL: UInt32 = 536870912
SSA_DONTGLYPH: UInt32 = 1073741824
SSA_NOKASHIDA: UInt32 = 2147483648
SCRIPT_DIGITSUBSTITUTE_CONTEXT: UInt32 = 0
SCRIPT_DIGITSUBSTITUTE_NONE: UInt32 = 1
SCRIPT_DIGITSUBSTITUTE_NATIONAL: UInt32 = 2
SCRIPT_DIGITSUBSTITUTE_TRADITIONAL: UInt32 = 3
UNISCRIBE_OPENTYPE: UInt32 = 256
SCRIPT_TAG_UNKNOWN: UInt32 = 0
MUI_LANGUAGE_EXACT: UInt32 = 16
NLS_CP_CPINFO: UInt32 = 268435456
NLS_CP_MBTOWC: UInt32 = 1073741824
NLS_CP_WCTOMB: UInt32 = 2147483648
U_DISABLE_RENAMING: UInt32 = 1
U_SHOW_CPLUSPLUS_API: UInt32 = 0
U_DEFAULT_SHOW_DRAFT: UInt32 = 0
U_HIDE_DRAFT_API: UInt32 = 1
U_HIDE_DEPRECATED_API: UInt32 = 1
U_HIDE_OBSOLETE_API: UInt32 = 1
U_HIDE_INTERNAL_API: UInt32 = 1
U_NO_DEFAULT_INCLUDE_UTF_HEADERS: UInt32 = 1
U_DEBUG: UInt32 = 1
UCLN_NO_AUTO_CLEANUP: UInt32 = 1
U_OVERRIDE_CXX_ALLOCATION: UInt32 = 1
U_ENABLE_TRACING: UInt32 = 0
UCONFIG_ENABLE_PLUGINS: UInt32 = 0
U_ENABLE_DYLOAD: UInt32 = 1
U_CHECK_DYLOAD: UInt32 = 1
U_HAVE_LIB_SUFFIX: UInt32 = 1
U_LIB_SUFFIX_C_NAME_STRING: String = ''
UCONFIG_ONLY_COLLATION: UInt32 = 0
UCONFIG_NO_BREAK_ITERATION: UInt32 = 1
UCONFIG_NO_IDNA: UInt32 = 1
UCONFIG_NO_FORMATTING: UInt32 = 1
UCONFIG_NO_TRANSLITERATION: UInt32 = 1
UCONFIG_NO_REGULAR_EXPRESSIONS: UInt32 = 1
UCONFIG_NO_FILE_IO: UInt32 = 0
UCONFIG_NO_CONVERSION: UInt32 = 0
UCONFIG_NO_LEGACY_CONVERSION: UInt32 = 1
UCONFIG_ONLY_HTML_CONVERSION: UInt32 = 0
UCONFIG_NO_NORMALIZATION: UInt32 = 0
UCONFIG_NO_COLLATION: UInt32 = 1
UCONFIG_NO_SERVICE: UInt32 = 0
UCONFIG_HAVE_PARSEALLINPUT: UInt32 = 1
UCONFIG_NO_FILTERED_BREAK_ITERATION: UInt32 = 0
U_PF_UNKNOWN: UInt32 = 0
U_PF_WINDOWS: UInt32 = 1000
U_PF_MINGW: UInt32 = 1800
U_PF_CYGWIN: UInt32 = 1900
U_PF_HPUX: UInt32 = 2100
U_PF_SOLARIS: UInt32 = 2600
U_PF_BSD: UInt32 = 3000
U_PF_AIX: UInt32 = 3100
U_PF_IRIX: UInt32 = 3200
U_PF_DARWIN: UInt32 = 3500
U_PF_IPHONE: UInt32 = 3550
U_PF_QNX: UInt32 = 3700
U_PF_LINUX: UInt32 = 4000
U_PF_BROWSER_NATIVE_CLIENT: UInt32 = 4020
U_PF_ANDROID: UInt32 = 4050
U_PF_FUCHSIA: UInt32 = 4100
U_PF_EMSCRIPTEN: UInt32 = 5010
U_PF_OS390: UInt32 = 9000
U_PF_OS400: UInt32 = 9400
U_PLATFORM: UInt32 = 1800
U_PLATFORM_USES_ONLY_WIN32_API: UInt32 = 1
U_PLATFORM_HAS_WIN32_API: UInt32 = 1
U_PLATFORM_IMPLEMENTS_POSIX: UInt32 = 0
U_PLATFORM_IS_LINUX_BASED: UInt32 = 1
U_PLATFORM_IS_DARWIN_BASED: UInt32 = 1
U_HAVE_STDINT_H: UInt32 = 1
U_HAVE_INTTYPES_H: UInt32 = 1
U_GCC_MAJOR_MINOR: UInt32 = 0
U_IS_BIG_ENDIAN: UInt32 = 0
U_HAVE_PLACEMENT_NEW: UInt32 = 0
U_HAVE_DEBUG_LOCATION_NEW: UInt32 = 1
U_CPLUSPLUS_VERSION: UInt32 = 0
U_ASCII_FAMILY: UInt32 = 0
U_EBCDIC_FAMILY: UInt32 = 1
U_CHARSET_FAMILY: UInt32 = 1
U_CHARSET_IS_UTF8: UInt32 = 1
U_HAVE_WCHAR_H: UInt32 = 0
U_SIZEOF_WCHAR_T: UInt32 = 1
U_HAVE_WCSCPY: UInt32 = 0
U_HAVE_CHAR16_T: UInt32 = 1
U_DEFINE_FALSE_AND_TRUE: UInt32 = 1
U_SIZEOF_UCHAR: UInt32 = 2
U_CHAR16_IS_TYPEDEF: UInt32 = 1
U_SENTINEL: Int32 = -1
U8_LEAD3_T1_BITS: String = ' 000000000000\x1000'
U8_LEAD4_T1_BITS: String = '\x00\x00\x00\x00\x00\x00\x00\x00\x1e\x0f\x0f\x0f\x00\x00\x00\x00'
U8_MAX_LENGTH: UInt32 = 4
U16_MAX_LENGTH: UInt32 = 2
U_HIDE_OBSOLETE_UTF_OLD_H: UInt32 = 0
UTF_SIZE: UInt32 = 16
UTF8_ERROR_VALUE_1: UInt32 = 21
UTF8_ERROR_VALUE_2: UInt32 = 159
UTF_ERROR_VALUE: UInt32 = 65535
UTF8_MAX_CHAR_LENGTH: UInt32 = 4
UTF16_MAX_CHAR_LENGTH: UInt32 = 2
UTF32_MAX_CHAR_LENGTH: UInt32 = 1
UTF_MAX_CHAR_LENGTH: UInt32 = 2
U_COPYRIGHT_STRING_LENGTH: UInt32 = 128
U_MAX_VERSION_LENGTH: UInt32 = 4
U_MAX_VERSION_STRING_LENGTH: UInt32 = 20
U_MILLIS_PER_SECOND: UInt32 = 1000
U_MILLIS_PER_MINUTE: UInt32 = 60000
U_MILLIS_PER_HOUR: UInt32 = 3600000
U_MILLIS_PER_DAY: UInt32 = 86400000
U_COMBINED_IMPLEMENTATION: UInt32 = 1
U_SHAPE_LENGTH_GROW_SHRINK: UInt32 = 0
U_SHAPE_LAMALEF_RESIZE: UInt32 = 0
U_SHAPE_LENGTH_FIXED_SPACES_NEAR: UInt32 = 1
U_SHAPE_LAMALEF_NEAR: UInt32 = 1
U_SHAPE_LENGTH_FIXED_SPACES_AT_END: UInt32 = 2
U_SHAPE_LAMALEF_END: UInt32 = 2
U_SHAPE_LENGTH_FIXED_SPACES_AT_BEGINNING: UInt32 = 3
U_SHAPE_LAMALEF_BEGIN: UInt32 = 3
U_SHAPE_LAMALEF_AUTO: UInt32 = 65536
U_SHAPE_LENGTH_MASK: UInt32 = 65539
U_SHAPE_LAMALEF_MASK: UInt32 = 65539
U_SHAPE_TEXT_DIRECTION_LOGICAL: UInt32 = 0
U_SHAPE_TEXT_DIRECTION_VISUAL_RTL: UInt32 = 0
U_SHAPE_TEXT_DIRECTION_VISUAL_LTR: UInt32 = 4
U_SHAPE_TEXT_DIRECTION_MASK: UInt32 = 4
U_SHAPE_LETTERS_NOOP: UInt32 = 0
U_SHAPE_LETTERS_SHAPE: UInt32 = 8
U_SHAPE_LETTERS_UNSHAPE: UInt32 = 16
U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED: UInt32 = 24
U_SHAPE_LETTERS_MASK: UInt32 = 24
U_SHAPE_DIGITS_NOOP: UInt32 = 0
U_SHAPE_DIGITS_EN2AN: UInt32 = 32
U_SHAPE_DIGITS_AN2EN: UInt32 = 64
U_SHAPE_DIGITS_ALEN2AN_INIT_LR: UInt32 = 96
U_SHAPE_DIGITS_ALEN2AN_INIT_AL: UInt32 = 128
U_SHAPE_DIGITS_RESERVED: UInt32 = 160
U_SHAPE_DIGITS_MASK: UInt32 = 224
U_SHAPE_DIGIT_TYPE_AN: UInt32 = 0
U_SHAPE_DIGIT_TYPE_AN_EXTENDED: UInt32 = 256
U_SHAPE_DIGIT_TYPE_RESERVED: UInt32 = 512
U_SHAPE_DIGIT_TYPE_MASK: UInt32 = 768
U_SHAPE_AGGREGATE_TASHKEEL: UInt32 = 16384
U_SHAPE_AGGREGATE_TASHKEEL_NOOP: UInt32 = 0
U_SHAPE_AGGREGATE_TASHKEEL_MASK: UInt32 = 16384
U_SHAPE_PRESERVE_PRESENTATION: UInt32 = 32768
U_SHAPE_PRESERVE_PRESENTATION_NOOP: UInt32 = 0
U_SHAPE_PRESERVE_PRESENTATION_MASK: UInt32 = 32768
U_SHAPE_SEEN_TWOCELL_NEAR: UInt32 = 2097152
U_SHAPE_SEEN_MASK: UInt32 = 7340032
U_SHAPE_YEHHAMZA_TWOCELL_NEAR: UInt32 = 16777216
U_SHAPE_YEHHAMZA_MASK: UInt32 = 58720256
U_SHAPE_TASHKEEL_BEGIN: UInt32 = 262144
U_SHAPE_TASHKEEL_END: UInt32 = 393216
U_SHAPE_TASHKEEL_RESIZE: UInt32 = 524288
U_SHAPE_TASHKEEL_REPLACE_BY_TATWEEL: UInt32 = 786432
U_SHAPE_TASHKEEL_MASK: UInt32 = 917504
U_SHAPE_SPACES_RELATIVE_TO_TEXT_BEGIN_END: UInt32 = 67108864
U_SHAPE_SPACES_RELATIVE_TO_TEXT_MASK: UInt32 = 67108864
U_SHAPE_TAIL_NEW_UNICODE: UInt32 = 134217728
U_SHAPE_TAIL_TYPE_MASK: UInt32 = 134217728
ULOC_CHINESE: String = 'zh'
ULOC_ENGLISH: String = 'en'
ULOC_FRENCH: String = 'fr'
ULOC_GERMAN: String = 'de'
ULOC_ITALIAN: String = 'it'
ULOC_JAPANESE: String = 'ja'
ULOC_KOREAN: String = 'ko'
ULOC_SIMPLIFIED_CHINESE: String = 'zh_CN'
ULOC_TRADITIONAL_CHINESE: String = 'zh_TW'
ULOC_CANADA: String = 'en_CA'
ULOC_CANADA_FRENCH: String = 'fr_CA'
ULOC_CHINA: String = 'zh_CN'
ULOC_PRC: String = 'zh_CN'
ULOC_FRANCE: String = 'fr_FR'
ULOC_GERMANY: String = 'de_DE'
ULOC_ITALY: String = 'it_IT'
ULOC_JAPAN: String = 'ja_JP'
ULOC_KOREA: String = 'ko_KR'
ULOC_TAIWAN: String = 'zh_TW'
ULOC_UK: String = 'en_GB'
ULOC_US: String = 'en_US'
ULOC_LANG_CAPACITY: UInt32 = 12
ULOC_COUNTRY_CAPACITY: UInt32 = 4
ULOC_FULLNAME_CAPACITY: UInt32 = 157
ULOC_SCRIPT_CAPACITY: UInt32 = 6
ULOC_KEYWORDS_CAPACITY: UInt32 = 96
ULOC_KEYWORD_AND_VALUES_CAPACITY: UInt32 = 100
ULOC_KEYWORD_SEPARATOR_UNICODE: UInt32 = 64
ULOC_KEYWORD_ASSIGN_UNICODE: UInt32 = 61
ULOC_KEYWORD_ITEM_SEPARATOR_UNICODE: UInt32 = 59
UCNV_SUB_STOP_ON_ILLEGAL: String = 'i'
UCNV_SKIP_STOP_ON_ILLEGAL: String = 'i'
UCNV_ESCAPE_JAVA: String = 'J'
UCNV_ESCAPE_C: String = 'C'
UCNV_ESCAPE_XML_DEC: String = 'D'
UCNV_ESCAPE_XML_HEX: String = 'X'
UCNV_ESCAPE_UNICODE: String = 'U'
UCNV_ESCAPE_CSS2: String = 'S'
UCNV_MAX_CONVERTER_NAME_LENGTH: UInt32 = 60
UCNV_SI: UInt32 = 15
UCNV_SO: UInt32 = 14
UCNV_OPTION_SEP_STRING: String = ','
UCNV_VALUE_SEP_STRING: String = '='
UCNV_LOCALE_OPTION_STRING: String = ',locale='
UCNV_VERSION_OPTION_STRING: String = ',version='
UCNV_SWAP_LFNL_OPTION_STRING: String = ',swaplfnl'
U_FOLD_CASE_DEFAULT: UInt32 = 0
U_FOLD_CASE_EXCLUDE_SPECIAL_I: UInt32 = 1
U_TITLECASE_WHOLE_STRING: UInt32 = 32
U_TITLECASE_SENTENCES: UInt32 = 64
U_TITLECASE_NO_LOWERCASE: UInt32 = 256
U_TITLECASE_NO_BREAK_ADJUSTMENT: UInt32 = 512
U_TITLECASE_ADJUST_TO_CASED: UInt32 = 1024
U_EDITS_NO_RESET: UInt32 = 8192
U_OMIT_UNCHANGED_TEXT: UInt32 = 16384
U_COMPARE_CODE_POINT_ORDER: UInt32 = 32768
U_COMPARE_IGNORE_CASE: UInt32 = 65536
UNORM_INPUT_IS_FCD: UInt32 = 131072
UCHAR_MIN_VALUE: UInt32 = 0
UCHAR_MAX_VALUE: UInt32 = 1114111
UBIDI_DEFAULT_LTR: UInt32 = 254
UBIDI_DEFAULT_RTL: UInt32 = 255
UBIDI_MAX_EXPLICIT_LEVEL: UInt32 = 125
UBIDI_LEVEL_OVERRIDE: UInt32 = 128
UBIDI_MAP_NOWHERE: Int32 = -1
UBIDI_KEEP_BASE_COMBINING: UInt32 = 1
UBIDI_DO_MIRRORING: UInt32 = 2
UBIDI_INSERT_LRM_FOR_NUMERIC: UInt32 = 4
UBIDI_REMOVE_BIDI_CONTROLS: UInt32 = 8
UBIDI_OUTPUT_REVERSE: UInt32 = 16
USPREP_DEFAULT: UInt32 = 0
USPREP_ALLOW_UNASSIGNED: UInt32 = 1
U_ICU_VERSION_BUNDLE: String = 'icuver'
U_ICU_DATA_KEY: String = 'DataVersion'
UCAL_UNKNOWN_ZONE_ID: String = 'Etc/Unknown'
UDAT_YEAR: String = 'y'
UDAT_QUARTER: String = 'QQQQ'
UDAT_ABBR_QUARTER: String = 'QQQ'
UDAT_YEAR_QUARTER: String = 'yQQQQ'
UDAT_YEAR_ABBR_QUARTER: String = 'yQQQ'
UDAT_MONTH: String = 'MMMM'
UDAT_ABBR_MONTH: String = 'MMM'
UDAT_NUM_MONTH: String = 'M'
UDAT_YEAR_MONTH: String = 'yMMMM'
UDAT_YEAR_ABBR_MONTH: String = 'yMMM'
UDAT_YEAR_NUM_MONTH: String = 'yM'
UDAT_DAY: String = 'd'
UDAT_YEAR_MONTH_DAY: String = 'yMMMMd'
UDAT_YEAR_ABBR_MONTH_DAY: String = 'yMMMd'
UDAT_YEAR_NUM_MONTH_DAY: String = 'yMd'
UDAT_WEEKDAY: String = 'EEEE'
UDAT_ABBR_WEEKDAY: String = 'E'
UDAT_YEAR_MONTH_WEEKDAY_DAY: String = 'yMMMMEEEEd'
UDAT_YEAR_ABBR_MONTH_WEEKDAY_DAY: String = 'yMMMEd'
UDAT_YEAR_NUM_MONTH_WEEKDAY_DAY: String = 'yMEd'
UDAT_MONTH_DAY: String = 'MMMMd'
UDAT_ABBR_MONTH_DAY: String = 'MMMd'
UDAT_NUM_MONTH_DAY: String = 'Md'
UDAT_MONTH_WEEKDAY_DAY: String = 'MMMMEEEEd'
UDAT_ABBR_MONTH_WEEKDAY_DAY: String = 'MMMEd'
UDAT_NUM_MONTH_WEEKDAY_DAY: String = 'MEd'
UDAT_HOUR: String = 'j'
UDAT_HOUR24: String = 'H'
UDAT_MINUTE: String = 'm'
UDAT_HOUR_MINUTE: String = 'jm'
UDAT_HOUR24_MINUTE: String = 'Hm'
UDAT_SECOND: String = 's'
UDAT_HOUR_MINUTE_SECOND: String = 'jms'
UDAT_HOUR24_MINUTE_SECOND: String = 'Hms'
UDAT_MINUTE_SECOND: String = 'ms'
UDAT_LOCATION_TZ: String = 'VVVV'
UDAT_GENERIC_TZ: String = 'vvvv'
UDAT_ABBR_GENERIC_TZ: String = 'v'
UDAT_SPECIFIC_TZ: String = 'zzzz'
UDAT_ABBR_SPECIFIC_TZ: String = 'z'
UDAT_ABBR_UTC_TZ: String = 'ZZZZ'
USEARCH_DONE: Int32 = -1
U_HAVE_STD_STRING: UInt32 = 0
UCONFIG_FORMAT_FASTPATHS_49: UInt32 = 1
U_PLATFORM_HAS_WINUWP_API: UInt32 = 0
U_IOSTREAM_SOURCE: UInt32 = 199711
U_HAVE_RVALUE_REFERENCES: UInt32 = 1
U_USING_ICU_NAMESPACE: UInt32 = 1
U_ICUDATA_TYPE_LETTER: String = 'e'
U_UNICODE_VERSION: String = '8.0'
CANITER_SKIP_ZEROES: UInt32 = 1
NUMSYS_NAME_CAPACITY: UInt32 = 8
U_HAVE_RBNF: UInt32 = 0
MAX_MIMECP_NAME: UInt32 = 64
MAX_MIMECSET_NAME: UInt32 = 50
MAX_MIMEFACE_NAME: UInt32 = 32
MAX_RFC1766_NAME: UInt32 = 6
MAX_LOCALE_NAME: UInt32 = 32
MAX_SCRIPT_NAME: UInt32 = 48
CPIOD_PEEK: Int32 = 1073741824
CPIOD_FORCE_PROMPT: Int32 = -2147483648
UITER_UNKNOWN_INDEX: Int32 = -2
UCPTRIE_FAST_SHIFT: Int32 = 6
UCPTRIE_FAST_DATA_BLOCK_LENGTH: Int32 = 64
UCPTRIE_FAST_DATA_MASK: Int32 = 63
UCPTRIE_SMALL_MAX: Int32 = 4095
UCPTRIE_ERROR_VALUE_NEG_DATA_OFFSET: Int32 = 1
UCPTRIE_HIGH_VALUE_NEG_DATA_OFFSET: Int32 = 2
UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE: Int32 = 1
UTEXT_PROVIDER_STABLE_CHUNKS: Int32 = 2
UTEXT_PROVIDER_WRITABLE: Int32 = 3
UTEXT_PROVIDER_HAS_META_DATA: Int32 = 4
UTEXT_PROVIDER_OWNS_TEXT: Int32 = 5
UTEXT_MAGIC: Int32 = 878368812
USET_IGNORE_SPACE: Int32 = 1
USET_CASE_INSENSITIVE: Int32 = 2
USET_ADD_CASE_MAPPINGS: Int32 = 4
USET_SERIALIZED_STATIC_ARRAY_CAPACITY: Int32 = 8
U_PARSE_CONTEXT_LEN: Int32 = 16
UIDNA_DEFAULT: Int32 = 0
UIDNA_USE_STD3_RULES: Int32 = 2
UIDNA_CHECK_BIDI: Int32 = 4
UIDNA_CHECK_CONTEXTJ: Int32 = 8
UIDNA_NONTRANSITIONAL_TO_ASCII: Int32 = 16
UIDNA_NONTRANSITIONAL_TO_UNICODE: Int32 = 32
UIDNA_CHECK_CONTEXTO: Int32 = 64
UIDNA_ERROR_EMPTY_LABEL: Int32 = 1
UIDNA_ERROR_LABEL_TOO_LONG: Int32 = 2
UIDNA_ERROR_DOMAIN_NAME_TOO_LONG: Int32 = 4
UIDNA_ERROR_LEADING_HYPHEN: Int32 = 8
UIDNA_ERROR_TRAILING_HYPHEN: Int32 = 16
UIDNA_ERROR_HYPHEN_3_4: Int32 = 32
UIDNA_ERROR_LEADING_COMBINING_MARK: Int32 = 64
UIDNA_ERROR_DISALLOWED: Int32 = 128
UIDNA_ERROR_PUNYCODE: Int32 = 256
UIDNA_ERROR_LABEL_HAS_DOT: Int32 = 512
UIDNA_ERROR_INVALID_ACE_LABEL: Int32 = 1024
UIDNA_ERROR_BIDI: Int32 = 2048
UIDNA_ERROR_CONTEXTJ: Int32 = 4096
UIDNA_ERROR_CONTEXTO_PUNCTUATION: Int32 = 8192
UIDNA_ERROR_CONTEXTO_DIGITS: Int32 = 16384
ELS_GUID_LANGUAGE_DETECTION: Guid = Guid('cf7e00b1-909b-4d95-a8-f4-61-1f-7c-37-77-02')
ELS_GUID_SCRIPT_DETECTION: Guid = Guid('2d64b439-6caf-4f6b-b6-88-e5-d0-f4-fa-a7-d7')
ELS_GUID_TRANSLITERATION_HANT_TO_HANS: Guid = Guid('a3a8333b-f4fc-42f6-a0-c4-04-62-fe-73-17-cb')
ELS_GUID_TRANSLITERATION_HANS_TO_HANT: Guid = Guid('3caccdc8-5590-42dc-9a-7b-b5-a6-b5-b3-b6-3b')
ELS_GUID_TRANSLITERATION_MALAYALAM_TO_LATIN: Guid = Guid('d8b983b1-f8bf-4a2b-bc-d5-5b-5e-a2-06-13-e1')
ELS_GUID_TRANSLITERATION_DEVANAGARI_TO_LATIN: Guid = Guid('c4a4dcfe-2661-4d02-98-35-f4-81-87-10-98-03')
ELS_GUID_TRANSLITERATION_CYRILLIC_TO_LATIN: Guid = Guid('3dd12a98-5afd-4903-a1-3f-e1-7e-6c-0b-fe-01')
ELS_GUID_TRANSLITERATION_BENGALI_TO_LATIN: Guid = Guid('f4dfd825-91a4-489f-85-5e-9a-d9-be-e5-57-27')
ELS_GUID_TRANSLITERATION_HANGUL_DECOMPOSITION: Guid = Guid('4ba2a721-e43d-41b7-b3-30-53-6a-e1-e4-88-63')
UMSGPAT_ARG_NAME_NOT_NUMBER: Int32 = -1
UMSGPAT_ARG_NAME_NOT_VALID: Int32 = -2
@winfunctype('GDI32.dll')
def GetTextCharset(hdc: win32more.Graphics.Gdi.HDC) -> Int32: ...
@winfunctype('GDI32.dll')
def GetTextCharsetInfo(hdc: win32more.Graphics.Gdi.HDC, lpSig: POINTER(win32more.Globalization.FONTSIGNATURE_head), dwFlags: UInt32) -> Int32: ...
@winfunctype('GDI32.dll')
def TranslateCharsetInfo(lpSrc: POINTER(UInt32), lpCs: POINTER(win32more.Globalization.CHARSETINFO_head), dwFlags: win32more.Globalization.TRANSLATE_CHARSET_INFO_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetDateFormatA(Locale: UInt32, dwFlags: UInt32, lpDate: POINTER(win32more.Foundation.SYSTEMTIME_head), lpFormat: win32more.Foundation.PSTR, lpDateStr: win32more.Foundation.PSTR, cchDate: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetDateFormatW(Locale: UInt32, dwFlags: UInt32, lpDate: POINTER(win32more.Foundation.SYSTEMTIME_head), lpFormat: win32more.Foundation.PWSTR, lpDateStr: win32more.Foundation.PWSTR, cchDate: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetTimeFormatA(Locale: UInt32, dwFlags: UInt32, lpTime: POINTER(win32more.Foundation.SYSTEMTIME_head), lpFormat: win32more.Foundation.PSTR, lpTimeStr: win32more.Foundation.PSTR, cchTime: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetTimeFormatW(Locale: UInt32, dwFlags: UInt32, lpTime: POINTER(win32more.Foundation.SYSTEMTIME_head), lpFormat: win32more.Foundation.PWSTR, lpTimeStr: win32more.Foundation.PWSTR, cchTime: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetTimeFormatEx(lpLocaleName: win32more.Foundation.PWSTR, dwFlags: win32more.Globalization.TIME_FORMAT_FLAGS, lpTime: POINTER(win32more.Foundation.SYSTEMTIME_head), lpFormat: win32more.Foundation.PWSTR, lpTimeStr: win32more.Foundation.PWSTR, cchTime: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetDateFormatEx(lpLocaleName: win32more.Foundation.PWSTR, dwFlags: win32more.Globalization.ENUM_DATE_FORMATS_FLAGS, lpDate: POINTER(win32more.Foundation.SYSTEMTIME_head), lpFormat: win32more.Foundation.PWSTR, lpDateStr: win32more.Foundation.PWSTR, cchDate: Int32, lpCalendar: win32more.Foundation.PWSTR) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetDurationFormatEx(lpLocaleName: win32more.Foundation.PWSTR, dwFlags: UInt32, lpDuration: POINTER(win32more.Foundation.SYSTEMTIME_head), ullDuration: UInt64, lpFormat: win32more.Foundation.PWSTR, lpDurationStr: win32more.Foundation.PWSTR, cchDuration: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def CompareStringEx(lpLocaleName: win32more.Foundation.PWSTR, dwCmpFlags: win32more.Globalization.COMPARE_STRING_FLAGS, lpString1: win32more.Foundation.PWSTR, cchCount1: Int32, lpString2: win32more.Foundation.PWSTR, cchCount2: Int32, lpVersionInformation: POINTER(win32more.Globalization.NLSVERSIONINFO_head), lpReserved: c_void_p, lParam: win32more.Foundation.LPARAM) -> Int32: ...
@winfunctype('KERNEL32.dll')
def CompareStringOrdinal(lpString1: win32more.Foundation.PWSTR, cchCount1: Int32, lpString2: win32more.Foundation.PWSTR, cchCount2: Int32, bIgnoreCase: win32more.Foundation.BOOL) -> Int32: ...
@winfunctype('KERNEL32.dll')
def CompareStringW(Locale: UInt32, dwCmpFlags: UInt32, lpString1: win32more.Foundation.PWSTR, cchCount1: Int32, lpString2: win32more.Foundation.PWSTR, cchCount2: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def FoldStringW(dwMapFlags: win32more.Globalization.FOLD_STRING_MAP_FLAGS, lpSrcStr: win32more.Foundation.PWSTR, cchSrc: Int32, lpDestStr: win32more.Foundation.PWSTR, cchDest: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetStringTypeExW(Locale: UInt32, dwInfoType: UInt32, lpSrcStr: win32more.Foundation.PWSTR, cchSrc: Int32, lpCharType: POINTER(UInt16)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetStringTypeW(dwInfoType: UInt32, lpSrcStr: win32more.Foundation.PWSTR, cchSrc: Int32, lpCharType: POINTER(UInt16)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def MultiByteToWideChar(CodePage: UInt32, dwFlags: win32more.Globalization.MULTI_BYTE_TO_WIDE_CHAR_FLAGS, lpMultiByteStr: win32more.Foundation.PSTR, cbMultiByte: Int32, lpWideCharStr: win32more.Foundation.PWSTR, cchWideChar: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def WideCharToMultiByte(CodePage: UInt32, dwFlags: UInt32, lpWideCharStr: win32more.Foundation.PWSTR, cchWideChar: Int32, lpMultiByteStr: win32more.Foundation.PSTR, cbMultiByte: Int32, lpDefaultChar: win32more.Foundation.PSTR, lpUsedDefaultChar: POINTER(Int32)) -> Int32: ...
@winfunctype('KERNEL32.dll')
def IsValidCodePage(CodePage: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetACP() -> UInt32: ...
@winfunctype('KERNEL32.dll')
def GetOEMCP() -> UInt32: ...
@winfunctype('KERNEL32.dll')
def GetCPInfo(CodePage: UInt32, lpCPInfo: POINTER(win32more.Globalization.CPINFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetCPInfoExA(CodePage: UInt32, dwFlags: UInt32, lpCPInfoEx: POINTER(win32more.Globalization.CPINFOEXA_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetCPInfoExW(CodePage: UInt32, dwFlags: UInt32, lpCPInfoEx: POINTER(win32more.Globalization.CPINFOEXW_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def CompareStringA(Locale: UInt32, dwCmpFlags: UInt32, lpString1: POINTER(SByte), cchCount1: Int32, lpString2: POINTER(SByte), cchCount2: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def FindNLSString(Locale: UInt32, dwFindNLSStringFlags: UInt32, lpStringSource: win32more.Foundation.PWSTR, cchSource: Int32, lpStringValue: win32more.Foundation.PWSTR, cchValue: Int32, pcchFound: POINTER(Int32)) -> Int32: ...
@winfunctype('KERNEL32.dll')
def LCMapStringW(Locale: UInt32, dwMapFlags: UInt32, lpSrcStr: win32more.Foundation.PWSTR, cchSrc: Int32, lpDestStr: win32more.Foundation.PWSTR, cchDest: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def LCMapStringA(Locale: UInt32, dwMapFlags: UInt32, lpSrcStr: win32more.Foundation.PSTR, cchSrc: Int32, lpDestStr: win32more.Foundation.PSTR, cchDest: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetLocaleInfoW(Locale: UInt32, LCType: UInt32, lpLCData: win32more.Foundation.PWSTR, cchData: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetLocaleInfoA(Locale: UInt32, LCType: UInt32, lpLCData: win32more.Foundation.PSTR, cchData: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def SetLocaleInfoA(Locale: UInt32, LCType: UInt32, lpLCData: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def SetLocaleInfoW(Locale: UInt32, LCType: UInt32, lpLCData: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetCalendarInfoA(Locale: UInt32, Calendar: UInt32, CalType: UInt32, lpCalData: win32more.Foundation.PSTR, cchData: Int32, lpValue: POINTER(UInt32)) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetCalendarInfoW(Locale: UInt32, Calendar: UInt32, CalType: UInt32, lpCalData: win32more.Foundation.PWSTR, cchData: Int32, lpValue: POINTER(UInt32)) -> Int32: ...
@winfunctype('KERNEL32.dll')
def SetCalendarInfoA(Locale: UInt32, Calendar: UInt32, CalType: UInt32, lpCalData: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def SetCalendarInfoW(Locale: UInt32, Calendar: UInt32, CalType: UInt32, lpCalData: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def IsDBCSLeadByte(TestChar: Byte) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def IsDBCSLeadByteEx(CodePage: UInt32, TestChar: Byte) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def LocaleNameToLCID(lpName: win32more.Foundation.PWSTR, dwFlags: UInt32) -> UInt32: ...
@winfunctype('KERNEL32.dll')
def LCIDToLocaleName(Locale: UInt32, lpName: win32more.Foundation.PWSTR, cchName: Int32, dwFlags: UInt32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetDurationFormat(Locale: UInt32, dwFlags: UInt32, lpDuration: POINTER(win32more.Foundation.SYSTEMTIME_head), ullDuration: UInt64, lpFormat: win32more.Foundation.PWSTR, lpDurationStr: win32more.Foundation.PWSTR, cchDuration: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetNumberFormatA(Locale: UInt32, dwFlags: UInt32, lpValue: win32more.Foundation.PSTR, lpFormat: POINTER(win32more.Globalization.NUMBERFMTA_head), lpNumberStr: win32more.Foundation.PSTR, cchNumber: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetNumberFormatW(Locale: UInt32, dwFlags: UInt32, lpValue: win32more.Foundation.PWSTR, lpFormat: POINTER(win32more.Globalization.NUMBERFMTW_head), lpNumberStr: win32more.Foundation.PWSTR, cchNumber: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetCurrencyFormatA(Locale: UInt32, dwFlags: UInt32, lpValue: win32more.Foundation.PSTR, lpFormat: POINTER(win32more.Globalization.CURRENCYFMTA_head), lpCurrencyStr: win32more.Foundation.PSTR, cchCurrency: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetCurrencyFormatW(Locale: UInt32, dwFlags: UInt32, lpValue: win32more.Foundation.PWSTR, lpFormat: POINTER(win32more.Globalization.CURRENCYFMTW_head), lpCurrencyStr: win32more.Foundation.PWSTR, cchCurrency: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def EnumCalendarInfoA(lpCalInfoEnumProc: win32more.Globalization.CALINFO_ENUMPROCA, Locale: UInt32, Calendar: UInt32, CalType: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumCalendarInfoW(lpCalInfoEnumProc: win32more.Globalization.CALINFO_ENUMPROCW, Locale: UInt32, Calendar: UInt32, CalType: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumCalendarInfoExA(lpCalInfoEnumProcEx: win32more.Globalization.CALINFO_ENUMPROCEXA, Locale: UInt32, Calendar: UInt32, CalType: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumCalendarInfoExW(lpCalInfoEnumProcEx: win32more.Globalization.CALINFO_ENUMPROCEXW, Locale: UInt32, Calendar: UInt32, CalType: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumTimeFormatsA(lpTimeFmtEnumProc: win32more.Globalization.TIMEFMT_ENUMPROCA, Locale: UInt32, dwFlags: win32more.Globalization.TIME_FORMAT_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumTimeFormatsW(lpTimeFmtEnumProc: win32more.Globalization.TIMEFMT_ENUMPROCW, Locale: UInt32, dwFlags: win32more.Globalization.TIME_FORMAT_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumDateFormatsA(lpDateFmtEnumProc: win32more.Globalization.DATEFMT_ENUMPROCA, Locale: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumDateFormatsW(lpDateFmtEnumProc: win32more.Globalization.DATEFMT_ENUMPROCW, Locale: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumDateFormatsExA(lpDateFmtEnumProcEx: win32more.Globalization.DATEFMT_ENUMPROCEXA, Locale: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumDateFormatsExW(lpDateFmtEnumProcEx: win32more.Globalization.DATEFMT_ENUMPROCEXW, Locale: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def IsValidLanguageGroup(LanguageGroup: UInt32, dwFlags: win32more.Globalization.ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetNLSVersion(Function: UInt32, Locale: UInt32, lpVersionInformation: POINTER(win32more.Globalization.NLSVERSIONINFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def IsValidLocale(Locale: UInt32, dwFlags: win32more.Globalization.IS_VALID_LOCALE_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetGeoInfoA(Location: Int32, GeoType: UInt32, lpGeoData: win32more.Foundation.PSTR, cchData: Int32, LangId: UInt16) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetGeoInfoW(Location: Int32, GeoType: UInt32, lpGeoData: win32more.Foundation.PWSTR, cchData: Int32, LangId: UInt16) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetGeoInfoEx(location: win32more.Foundation.PWSTR, geoType: UInt32, geoData: win32more.Foundation.PWSTR, geoDataCount: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def EnumSystemGeoID(GeoClass: UInt32, ParentGeoId: Int32, lpGeoEnumProc: win32more.Globalization.GEO_ENUMPROC) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumSystemGeoNames(geoClass: UInt32, geoEnumProc: win32more.Globalization.GEO_ENUMNAMEPROC, data: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetUserGeoID(GeoClass: UInt32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetUserDefaultGeoName(geoName: win32more.Foundation.PWSTR, geoNameCount: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def SetUserGeoID(GeoId: Int32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def SetUserGeoName(geoName: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def ConvertDefaultLocale(Locale: UInt32) -> UInt32: ...
@winfunctype('KERNEL32.dll')
def GetSystemDefaultUILanguage() -> UInt16: ...
@winfunctype('KERNEL32.dll')
def GetThreadLocale() -> UInt32: ...
@winfunctype('KERNEL32.dll')
def SetThreadLocale(Locale: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetUserDefaultUILanguage() -> UInt16: ...
@winfunctype('KERNEL32.dll')
def GetUserDefaultLangID() -> UInt16: ...
@winfunctype('KERNEL32.dll')
def GetSystemDefaultLangID() -> UInt16: ...
@winfunctype('KERNEL32.dll')
def GetSystemDefaultLCID() -> UInt32: ...
@winfunctype('KERNEL32.dll')
def GetUserDefaultLCID() -> UInt32: ...
@winfunctype('KERNEL32.dll')
def SetThreadUILanguage(LangId: UInt16) -> UInt16: ...
@winfunctype('KERNEL32.dll')
def GetThreadUILanguage() -> UInt16: ...
@winfunctype('KERNEL32.dll')
def GetProcessPreferredUILanguages(dwFlags: UInt32, pulNumLanguages: POINTER(UInt32), pwszLanguagesBuffer: win32more.Foundation.PWSTR, pcchLanguagesBuffer: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def SetProcessPreferredUILanguages(dwFlags: UInt32, pwszLanguagesBuffer: win32more.Foundation.PWSTR, pulNumLanguages: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetUserPreferredUILanguages(dwFlags: UInt32, pulNumLanguages: POINTER(UInt32), pwszLanguagesBuffer: win32more.Foundation.PWSTR, pcchLanguagesBuffer: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetSystemPreferredUILanguages(dwFlags: UInt32, pulNumLanguages: POINTER(UInt32), pwszLanguagesBuffer: win32more.Foundation.PWSTR, pcchLanguagesBuffer: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetThreadPreferredUILanguages(dwFlags: UInt32, pulNumLanguages: POINTER(UInt32), pwszLanguagesBuffer: win32more.Foundation.PWSTR, pcchLanguagesBuffer: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def SetThreadPreferredUILanguages(dwFlags: UInt32, pwszLanguagesBuffer: win32more.Foundation.PWSTR, pulNumLanguages: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetFileMUIInfo(dwFlags: UInt32, pcwszFilePath: win32more.Foundation.PWSTR, pFileMUIInfo: POINTER(win32more.Globalization.FILEMUIINFO_head), pcbFileMUIInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetFileMUIPath(dwFlags: UInt32, pcwszFilePath: win32more.Foundation.PWSTR, pwszLanguage: win32more.Foundation.PWSTR, pcchLanguage: POINTER(UInt32), pwszFileMUIPath: win32more.Foundation.PWSTR, pcchFileMUIPath: POINTER(UInt32), pululEnumerator: POINTER(UInt64)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetUILanguageInfo(dwFlags: UInt32, pwmszLanguage: win32more.Foundation.PWSTR, pwszFallbackLanguages: win32more.Foundation.PWSTR, pcchFallbackLanguages: POINTER(UInt32), pAttributes: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def SetThreadPreferredUILanguages2(flags: UInt32, languages: win32more.Foundation.PWSTR, numLanguagesSet: POINTER(UInt32), snapshot: POINTER(win32more.Globalization.HSAVEDUILANGUAGES)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def RestoreThreadPreferredUILanguages(snapshot: win32more.Globalization.HSAVEDUILANGUAGES) -> Void: ...
@winfunctype('KERNEL32.dll')
def NotifyUILanguageChange(dwFlags: UInt32, pcwstrNewLanguage: win32more.Foundation.PWSTR, pcwstrPreviousLanguage: win32more.Foundation.PWSTR, dwReserved: UInt32, pdwStatusRtrn: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetStringTypeExA(Locale: UInt32, dwInfoType: UInt32, lpSrcStr: win32more.Foundation.PSTR, cchSrc: Int32, lpCharType: POINTER(UInt16)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetStringTypeA(Locale: UInt32, dwInfoType: UInt32, lpSrcStr: win32more.Foundation.PSTR, cchSrc: Int32, lpCharType: POINTER(UInt16)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def FoldStringA(dwMapFlags: win32more.Globalization.FOLD_STRING_MAP_FLAGS, lpSrcStr: win32more.Foundation.PSTR, cchSrc: Int32, lpDestStr: win32more.Foundation.PSTR, cchDest: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def EnumSystemLocalesA(lpLocaleEnumProc: win32more.Globalization.LOCALE_ENUMPROCA, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumSystemLocalesW(lpLocaleEnumProc: win32more.Globalization.LOCALE_ENUMPROCW, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumSystemLanguageGroupsA(lpLanguageGroupEnumProc: win32more.Globalization.LANGUAGEGROUP_ENUMPROCA, dwFlags: win32more.Globalization.ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS, lParam: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumSystemLanguageGroupsW(lpLanguageGroupEnumProc: win32more.Globalization.LANGUAGEGROUP_ENUMPROCW, dwFlags: win32more.Globalization.ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS, lParam: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumLanguageGroupLocalesA(lpLangGroupLocaleEnumProc: win32more.Globalization.LANGGROUPLOCALE_ENUMPROCA, LanguageGroup: UInt32, dwFlags: UInt32, lParam: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumLanguageGroupLocalesW(lpLangGroupLocaleEnumProc: win32more.Globalization.LANGGROUPLOCALE_ENUMPROCW, LanguageGroup: UInt32, dwFlags: UInt32, lParam: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumUILanguagesA(lpUILanguageEnumProc: win32more.Globalization.UILANGUAGE_ENUMPROCA, dwFlags: UInt32, lParam: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumUILanguagesW(lpUILanguageEnumProc: win32more.Globalization.UILANGUAGE_ENUMPROCW, dwFlags: UInt32, lParam: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumSystemCodePagesA(lpCodePageEnumProc: win32more.Globalization.CODEPAGE_ENUMPROCA, dwFlags: win32more.Globalization.ENUM_SYSTEM_CODE_PAGES_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumSystemCodePagesW(lpCodePageEnumProc: win32more.Globalization.CODEPAGE_ENUMPROCW, dwFlags: win32more.Globalization.ENUM_SYSTEM_CODE_PAGES_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('NORMALIZ.dll')
def IdnToAscii(dwFlags: UInt32, lpUnicodeCharStr: win32more.Foundation.PWSTR, cchUnicodeChar: Int32, lpASCIICharStr: win32more.Foundation.PWSTR, cchASCIIChar: Int32) -> Int32: ...
@winfunctype('NORMALIZ.dll')
def IdnToUnicode(dwFlags: UInt32, lpASCIICharStr: win32more.Foundation.PWSTR, cchASCIIChar: Int32, lpUnicodeCharStr: win32more.Foundation.PWSTR, cchUnicodeChar: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def IdnToNameprepUnicode(dwFlags: UInt32, lpUnicodeCharStr: win32more.Foundation.PWSTR, cchUnicodeChar: Int32, lpNameprepCharStr: win32more.Foundation.PWSTR, cchNameprepChar: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def NormalizeString(NormForm: win32more.Globalization.NORM_FORM, lpSrcString: win32more.Foundation.PWSTR, cwSrcLength: Int32, lpDstString: win32more.Foundation.PWSTR, cwDstLength: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def IsNormalizedString(NormForm: win32more.Globalization.NORM_FORM, lpString: win32more.Foundation.PWSTR, cwLength: Int32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def VerifyScripts(dwFlags: UInt32, lpLocaleScripts: win32more.Foundation.PWSTR, cchLocaleScripts: Int32, lpTestScripts: win32more.Foundation.PWSTR, cchTestScripts: Int32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetStringScripts(dwFlags: UInt32, lpString: win32more.Foundation.PWSTR, cchString: Int32, lpScripts: win32more.Foundation.PWSTR, cchScripts: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetLocaleInfoEx(lpLocaleName: win32more.Foundation.PWSTR, LCType: UInt32, lpLCData: win32more.Foundation.PWSTR, cchData: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetCalendarInfoEx(lpLocaleName: win32more.Foundation.PWSTR, Calendar: UInt32, lpReserved: win32more.Foundation.PWSTR, CalType: UInt32, lpCalData: win32more.Foundation.PWSTR, cchData: Int32, lpValue: POINTER(UInt32)) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetNumberFormatEx(lpLocaleName: win32more.Foundation.PWSTR, dwFlags: UInt32, lpValue: win32more.Foundation.PWSTR, lpFormat: POINTER(win32more.Globalization.NUMBERFMTW_head), lpNumberStr: win32more.Foundation.PWSTR, cchNumber: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetCurrencyFormatEx(lpLocaleName: win32more.Foundation.PWSTR, dwFlags: UInt32, lpValue: win32more.Foundation.PWSTR, lpFormat: POINTER(win32more.Globalization.CURRENCYFMTW_head), lpCurrencyStr: win32more.Foundation.PWSTR, cchCurrency: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetUserDefaultLocaleName(lpLocaleName: win32more.Foundation.PWSTR, cchLocaleName: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def GetSystemDefaultLocaleName(lpLocaleName: win32more.Foundation.PWSTR, cchLocaleName: Int32) -> Int32: ...
@winfunctype('KERNEL32.dll')
def IsNLSDefinedString(Function: UInt32, dwFlags: UInt32, lpVersionInformation: POINTER(win32more.Globalization.NLSVERSIONINFO_head), lpString: win32more.Foundation.PWSTR, cchStr: Int32) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def GetNLSVersionEx(function: UInt32, lpLocaleName: win32more.Foundation.PWSTR, lpVersionInformation: POINTER(win32more.Globalization.NLSVERSIONINFOEX_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def IsValidNLSVersion(function: UInt32, lpLocaleName: win32more.Foundation.PWSTR, lpVersionInformation: POINTER(win32more.Globalization.NLSVERSIONINFOEX_head)) -> UInt32: ...
@winfunctype('KERNEL32.dll')
def FindNLSStringEx(lpLocaleName: win32more.Foundation.PWSTR, dwFindNLSStringFlags: UInt32, lpStringSource: win32more.Foundation.PWSTR, cchSource: Int32, lpStringValue: win32more.Foundation.PWSTR, cchValue: Int32, pcchFound: POINTER(Int32), lpVersionInformation: POINTER(win32more.Globalization.NLSVERSIONINFO_head), lpReserved: c_void_p, sortHandle: win32more.Foundation.LPARAM) -> Int32: ...
@winfunctype('KERNEL32.dll')
def LCMapStringEx(lpLocaleName: win32more.Foundation.PWSTR, dwMapFlags: UInt32, lpSrcStr: win32more.Foundation.PWSTR, cchSrc: Int32, lpDestStr: win32more.Foundation.PWSTR, cchDest: Int32, lpVersionInformation: POINTER(win32more.Globalization.NLSVERSIONINFO_head), lpReserved: c_void_p, sortHandle: win32more.Foundation.LPARAM) -> Int32: ...
@winfunctype('KERNEL32.dll')
def IsValidLocaleName(lpLocaleName: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumCalendarInfoExEx(pCalInfoEnumProcExEx: win32more.Globalization.CALINFO_ENUMPROCEXEX, lpLocaleName: win32more.Foundation.PWSTR, Calendar: UInt32, lpReserved: win32more.Foundation.PWSTR, CalType: UInt32, lParam: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumDateFormatsExEx(lpDateFmtEnumProcExEx: win32more.Globalization.DATEFMT_ENUMPROCEXEX, lpLocaleName: win32more.Foundation.PWSTR, dwFlags: win32more.Globalization.ENUM_DATE_FORMATS_FLAGS, lParam: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumTimeFormatsEx(lpTimeFmtEnumProcEx: win32more.Globalization.TIMEFMT_ENUMPROCEX, lpLocaleName: win32more.Foundation.PWSTR, dwFlags: UInt32, lParam: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def EnumSystemLocalesEx(lpLocaleEnumProcEx: win32more.Globalization.LOCALE_ENUMPROCEX, dwFlags: UInt32, lParam: win32more.Foundation.LPARAM, lpReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('KERNEL32.dll')
def ResolveLocaleName(lpNameToResolve: win32more.Foundation.PWSTR, lpLocaleName: win32more.Foundation.PWSTR, cchLocaleName: Int32) -> Int32: ...
@winfunctype('elscore.dll')
def MappingGetServices(pOptions: POINTER(win32more.Globalization.MAPPING_ENUM_OPTIONS_head), prgServices: POINTER(POINTER(win32more.Globalization.MAPPING_SERVICE_INFO_head)), pdwServicesCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('elscore.dll')
def MappingFreeServices(pServiceInfo: POINTER(win32more.Globalization.MAPPING_SERVICE_INFO_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('elscore.dll')
def MappingRecognizeText(pServiceInfo: POINTER(win32more.Globalization.MAPPING_SERVICE_INFO_head), pszText: win32more.Foundation.PWSTR, dwLength: UInt32, dwIndex: UInt32, pOptions: POINTER(win32more.Globalization.MAPPING_OPTIONS_head), pbag: POINTER(win32more.Globalization.MAPPING_PROPERTY_BAG_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('elscore.dll')
def MappingDoAction(pBag: POINTER(win32more.Globalization.MAPPING_PROPERTY_BAG_head), dwRangeIndex: UInt32, pszActionId: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
@winfunctype('elscore.dll')
def MappingFreePropertyBag(pBag: POINTER(win32more.Globalization.MAPPING_PROPERTY_BAG_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptFreeCache(psc: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptItemize(pwcInChars: win32more.Foundation.PWSTR, cInChars: Int32, cMaxItems: Int32, psControl: POINTER(win32more.Globalization.SCRIPT_CONTROL_head), psState: POINTER(win32more.Globalization.SCRIPT_STATE_head), pItems: POINTER(win32more.Globalization.SCRIPT_ITEM_head), pcItems: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptLayout(cRuns: Int32, pbLevel: c_char_p_no, piVisualToLogical: POINTER(Int32), piLogicalToVisual: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptShape(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), pwcChars: win32more.Foundation.PWSTR, cChars: Int32, cMaxGlyphs: Int32, psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), pwOutGlyphs: POINTER(UInt16), pwLogClust: POINTER(UInt16), psva: POINTER(win32more.Globalization.SCRIPT_VISATTR_head), pcGlyphs: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptPlace(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), pwGlyphs: POINTER(UInt16), cGlyphs: Int32, psva: POINTER(win32more.Globalization.SCRIPT_VISATTR_head), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), piAdvance: POINTER(Int32), pGoffset: POINTER(win32more.Globalization.GOFFSET_head), pABC: POINTER(win32more.Graphics.Gdi.ABC_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptTextOut(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), x: Int32, y: Int32, fuOptions: UInt32, lprc: POINTER(win32more.Foundation.RECT_head), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), pwcReserved: win32more.Foundation.PWSTR, iReserved: Int32, pwGlyphs: POINTER(UInt16), cGlyphs: Int32, piAdvance: POINTER(Int32), piJustify: POINTER(Int32), pGoffset: POINTER(win32more.Globalization.GOFFSET_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptJustify(psva: POINTER(win32more.Globalization.SCRIPT_VISATTR_head), piAdvance: POINTER(Int32), cGlyphs: Int32, iDx: Int32, iMinKashida: Int32, piJustify: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptBreak(pwcChars: win32more.Foundation.PWSTR, cChars: Int32, psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), psla: POINTER(win32more.Globalization.SCRIPT_LOGATTR_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptCPtoX(iCP: Int32, fTrailing: win32more.Foundation.BOOL, cChars: Int32, cGlyphs: Int32, pwLogClust: POINTER(UInt16), psva: POINTER(win32more.Globalization.SCRIPT_VISATTR_head), piAdvance: POINTER(Int32), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), piX: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptXtoCP(iX: Int32, cChars: Int32, cGlyphs: Int32, pwLogClust: POINTER(UInt16), psva: POINTER(win32more.Globalization.SCRIPT_VISATTR_head), piAdvance: POINTER(Int32), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), piCP: POINTER(Int32), piTrailing: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetLogicalWidths(psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), cChars: Int32, cGlyphs: Int32, piGlyphWidth: POINTER(Int32), pwLogClust: POINTER(UInt16), psva: POINTER(win32more.Globalization.SCRIPT_VISATTR_head), piDx: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptApplyLogicalWidth(piDx: POINTER(Int32), cChars: Int32, cGlyphs: Int32, pwLogClust: POINTER(UInt16), psva: POINTER(win32more.Globalization.SCRIPT_VISATTR_head), piAdvance: POINTER(Int32), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), pABC: POINTER(win32more.Graphics.Gdi.ABC_head), piJustify: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetCMap(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), pwcInChars: win32more.Foundation.PWSTR, cChars: Int32, dwFlags: UInt32, pwOutGlyphs: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetGlyphABCWidth(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), wGlyph: UInt16, pABC: POINTER(win32more.Graphics.Gdi.ABC_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetProperties(ppSp: POINTER(POINTER(POINTER(win32more.Globalization.SCRIPT_PROPERTIES_head))), piNumScripts: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetFontProperties(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), sfp: POINTER(win32more.Globalization.SCRIPT_FONTPROPERTIES_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptCacheGetHeight(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), tmHeight: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptStringAnalyse(hdc: win32more.Graphics.Gdi.HDC, pString: c_void_p, cString: Int32, cGlyphs: Int32, iCharset: Int32, dwFlags: UInt32, iReqWidth: Int32, psControl: POINTER(win32more.Globalization.SCRIPT_CONTROL_head), psState: POINTER(win32more.Globalization.SCRIPT_STATE_head), piDx: POINTER(Int32), pTabdef: POINTER(win32more.Globalization.SCRIPT_TABDEF_head), pbInClass: c_char_p_no, pssa: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptStringFree(pssa: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptString_pSize(ssa: c_void_p) -> POINTER(win32more.Foundation.SIZE_head): ...
@winfunctype('USP10.dll')
def ScriptString_pcOutChars(ssa: c_void_p) -> POINTER(Int32): ...
@winfunctype('USP10.dll')
def ScriptString_pLogAttr(ssa: c_void_p) -> POINTER(win32more.Globalization.SCRIPT_LOGATTR_head): ...
@winfunctype('USP10.dll')
def ScriptStringGetOrder(ssa: c_void_p, puOrder: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptStringCPtoX(ssa: c_void_p, icp: Int32, fTrailing: win32more.Foundation.BOOL, pX: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptStringXtoCP(ssa: c_void_p, iX: Int32, piCh: POINTER(Int32), piTrailing: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptStringGetLogicalWidths(ssa: c_void_p, piDx: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptStringValidate(ssa: c_void_p) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptStringOut(ssa: c_void_p, iX: Int32, iY: Int32, uOptions: win32more.Graphics.Gdi.ETO_OPTIONS, prc: POINTER(win32more.Foundation.RECT_head), iMinSel: Int32, iMaxSel: Int32, fDisabled: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptIsComplex(pwcInChars: win32more.Foundation.PWSTR, cInChars: Int32, dwFlags: win32more.Globalization.SCRIPT_IS_COMPLEX_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptRecordDigitSubstitution(Locale: UInt32, psds: POINTER(win32more.Globalization.SCRIPT_DIGITSUBSTITUTE_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptApplyDigitSubstitution(psds: POINTER(win32more.Globalization.SCRIPT_DIGITSUBSTITUTE_head), psc: POINTER(win32more.Globalization.SCRIPT_CONTROL_head), pss: POINTER(win32more.Globalization.SCRIPT_STATE_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptShapeOpenType(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), tagScript: UInt32, tagLangSys: UInt32, rcRangeChars: POINTER(Int32), rpRangeProperties: POINTER(POINTER(win32more.Globalization.TEXTRANGE_PROPERTIES_head)), cRanges: Int32, pwcChars: win32more.Foundation.PWSTR, cChars: Int32, cMaxGlyphs: Int32, pwLogClust: POINTER(UInt16), pCharProps: POINTER(win32more.Globalization.SCRIPT_CHARPROP_head), pwOutGlyphs: POINTER(UInt16), pOutGlyphProps: POINTER(win32more.Globalization.SCRIPT_GLYPHPROP_head), pcGlyphs: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptPlaceOpenType(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), tagScript: UInt32, tagLangSys: UInt32, rcRangeChars: POINTER(Int32), rpRangeProperties: POINTER(POINTER(win32more.Globalization.TEXTRANGE_PROPERTIES_head)), cRanges: Int32, pwcChars: win32more.Foundation.PWSTR, pwLogClust: POINTER(UInt16), pCharProps: POINTER(win32more.Globalization.SCRIPT_CHARPROP_head), cChars: Int32, pwGlyphs: POINTER(UInt16), pGlyphProps: POINTER(win32more.Globalization.SCRIPT_GLYPHPROP_head), cGlyphs: Int32, piAdvance: POINTER(Int32), pGoffset: POINTER(win32more.Globalization.GOFFSET_head), pABC: POINTER(win32more.Graphics.Gdi.ABC_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptItemizeOpenType(pwcInChars: win32more.Foundation.PWSTR, cInChars: Int32, cMaxItems: Int32, psControl: POINTER(win32more.Globalization.SCRIPT_CONTROL_head), psState: POINTER(win32more.Globalization.SCRIPT_STATE_head), pItems: POINTER(win32more.Globalization.SCRIPT_ITEM_head), pScriptTags: POINTER(UInt32), pcItems: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetFontScriptTags(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), cMaxTags: Int32, pScriptTags: POINTER(UInt32), pcTags: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetFontLanguageTags(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), tagScript: UInt32, cMaxTags: Int32, pLangsysTags: POINTER(UInt32), pcTags: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetFontFeatureTags(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), tagScript: UInt32, tagLangSys: UInt32, cMaxTags: Int32, pFeatureTags: POINTER(UInt32), pcTags: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptGetFontAlternateGlyphs(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), tagScript: UInt32, tagLangSys: UInt32, tagFeature: UInt32, wGlyphId: UInt16, cMaxAlternates: Int32, pAlternateGlyphs: POINTER(UInt16), pcAlternates: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptSubstituteSingleGlyph(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), tagScript: UInt32, tagLangSys: UInt32, tagFeature: UInt32, lParameter: Int32, wGlyphId: UInt16, pwOutGlyphId: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
@winfunctype('USP10.dll')
def ScriptPositionSingleGlyph(hdc: win32more.Graphics.Gdi.HDC, psc: POINTER(c_void_p), psa: POINTER(win32more.Globalization.SCRIPT_ANALYSIS_head), tagScript: UInt32, tagLangSys: UInt32, tagFeature: UInt32, lParameter: Int32, wGlyphId: UInt16, iAdvance: Int32, GOffset: win32more.Globalization.GOFFSET, piOutAdvance: POINTER(Int32), pOutGoffset: POINTER(win32more.Globalization.GOFFSET_head)) -> win32more.Foundation.HRESULT: ...
@cfunctype('icu.dll')
def utf8_nextCharSafeBody(s: c_char_p_no, pi: POINTER(Int32), length: Int32, c: Int32, strict: SByte) -> Int32: ...
@cfunctype('icu.dll')
def utf8_appendCharSafeBody(s: c_char_p_no, i: Int32, length: Int32, c: Int32, pIsError: POINTER(SByte)) -> Int32: ...
@cfunctype('icu.dll')
def utf8_prevCharSafeBody(s: c_char_p_no, start: Int32, pi: POINTER(Int32), c: Int32, strict: SByte) -> Int32: ...
@cfunctype('icu.dll')
def utf8_back1SafeBody(s: c_char_p_no, start: Int32, i: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_versionFromString(versionArray: c_char_p_no, versionString: win32more.Foundation.PSTR) -> Void: ...
@cfunctype('icu.dll')
def u_versionFromUString(versionArray: c_char_p_no, versionString: POINTER(UInt16)) -> Void: ...
@cfunctype('icu.dll')
def u_versionToString(versionArray: c_char_p_no, versionString: win32more.Foundation.PSTR) -> Void: ...
@cfunctype('icu.dll')
def u_getVersion(versionArray: c_char_p_no) -> Void: ...
@cfunctype('icu.dll')
def u_errorName(code: win32more.Globalization.UErrorCode) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def utrace_setLevel(traceLevel: Int32) -> Void: ...
@cfunctype('icu.dll')
def utrace_getLevel() -> Int32: ...
@cfunctype('icu.dll')
def utrace_setFunctions(context: c_void_p, e: win32more.Globalization.UTraceEntry, x: win32more.Globalization.UTraceExit, d: win32more.Globalization.UTraceData) -> Void: ...
@cfunctype('icu.dll')
def utrace_getFunctions(context: POINTER(c_void_p), e: POINTER(win32more.Globalization.UTraceEntry), x: POINTER(win32more.Globalization.UTraceExit), d: POINTER(win32more.Globalization.UTraceData)) -> Void: ...
@cfunctype('icu.dll')
def utrace_vformat(outBuf: win32more.Foundation.PSTR, capacity: Int32, indent: Int32, fmt: win32more.Foundation.PSTR, args: POINTER(SByte)) -> Int32: ...
@cfunctype('icu.dll')
def utrace_format(outBuf: win32more.Foundation.PSTR, capacity: Int32, indent: Int32, fmt: win32more.Foundation.PSTR) -> Int32: ...
@cfunctype('icu.dll')
def utrace_functionName(fnNumber: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_shapeArabic(source: POINTER(UInt16), sourceLength: Int32, dest: POINTER(UInt16), destSize: Int32, options: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uscript_getCode(nameOrAbbrOrLocale: win32more.Foundation.PSTR, fillIn: POINTER(win32more.Globalization.UScriptCode), capacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uscript_getName(scriptCode: win32more.Globalization.UScriptCode) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uscript_getShortName(scriptCode: win32more.Globalization.UScriptCode) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uscript_getScript(codepoint: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UScriptCode: ...
@cfunctype('icu.dll')
def uscript_hasScript(c: Int32, sc: win32more.Globalization.UScriptCode) -> SByte: ...
@cfunctype('icu.dll')
def uscript_getScriptExtensions(c: Int32, scripts: POINTER(win32more.Globalization.UScriptCode), capacity: Int32, errorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uscript_getSampleString(script: win32more.Globalization.UScriptCode, dest: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uscript_getUsage(script: win32more.Globalization.UScriptCode) -> win32more.Globalization.UScriptUsage: ...
@cfunctype('icu.dll')
def uscript_isRightToLeft(script: win32more.Globalization.UScriptCode) -> SByte: ...
@cfunctype('icu.dll')
def uscript_breaksBetweenLetters(script: win32more.Globalization.UScriptCode) -> SByte: ...
@cfunctype('icu.dll')
def uscript_isCased(script: win32more.Globalization.UScriptCode) -> SByte: ...
@cfunctype('icu.dll')
def uiter_current32(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def uiter_next32(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def uiter_previous32(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def uiter_getState(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> UInt32: ...
@cfunctype('icu.dll')
def uiter_setState(iter: POINTER(win32more.Globalization.UCharIterator_head), state: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uiter_setString(iter: POINTER(win32more.Globalization.UCharIterator_head), s: POINTER(UInt16), length: Int32) -> Void: ...
@cfunctype('icu.dll')
def uiter_setUTF16BE(iter: POINTER(win32more.Globalization.UCharIterator_head), s: win32more.Foundation.PSTR, length: Int32) -> Void: ...
@cfunctype('icu.dll')
def uiter_setUTF8(iter: POINTER(win32more.Globalization.UCharIterator_head), s: win32more.Foundation.PSTR, length: Int32) -> Void: ...
@cfunctype('icu.dll')
def uenum_close(en: POINTER(win32more.Globalization.UEnumeration_head)) -> Void: ...
@cfunctype('icu.dll')
def uenum_count(en: POINTER(win32more.Globalization.UEnumeration_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uenum_unext(en: POINTER(win32more.Globalization.UEnumeration_head), resultLength: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def uenum_next(en: POINTER(win32more.Globalization.UEnumeration_head), resultLength: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uenum_reset(en: POINTER(win32more.Globalization.UEnumeration_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uenum_openUCharStringsEnumeration(strings: POINTER(POINTER(UInt16)), count: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uenum_openCharStringsEnumeration(strings: POINTER(POINTER(SByte)), count: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uloc_getDefault() -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uloc_setDefault(localeID: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uloc_getLanguage(localeID: win32more.Foundation.PSTR, language: win32more.Foundation.PSTR, languageCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getScript(localeID: win32more.Foundation.PSTR, script: win32more.Foundation.PSTR, scriptCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getCountry(localeID: win32more.Foundation.PSTR, country: win32more.Foundation.PSTR, countryCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getVariant(localeID: win32more.Foundation.PSTR, variant: win32more.Foundation.PSTR, variantCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getName(localeID: win32more.Foundation.PSTR, name: win32more.Foundation.PSTR, nameCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_canonicalize(localeID: win32more.Foundation.PSTR, name: win32more.Foundation.PSTR, nameCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getISO3Language(localeID: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uloc_getISO3Country(localeID: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uloc_getLCID(localeID: win32more.Foundation.PSTR) -> UInt32: ...
@cfunctype('icu.dll')
def uloc_getDisplayLanguage(locale: win32more.Foundation.PSTR, displayLocale: win32more.Foundation.PSTR, language: POINTER(UInt16), languageCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getDisplayScript(locale: win32more.Foundation.PSTR, displayLocale: win32more.Foundation.PSTR, script: POINTER(UInt16), scriptCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getDisplayCountry(locale: win32more.Foundation.PSTR, displayLocale: win32more.Foundation.PSTR, country: POINTER(UInt16), countryCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getDisplayVariant(locale: win32more.Foundation.PSTR, displayLocale: win32more.Foundation.PSTR, variant: POINTER(UInt16), variantCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getDisplayKeyword(keyword: win32more.Foundation.PSTR, displayLocale: win32more.Foundation.PSTR, dest: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getDisplayKeywordValue(locale: win32more.Foundation.PSTR, keyword: win32more.Foundation.PSTR, displayLocale: win32more.Foundation.PSTR, dest: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getDisplayName(localeID: win32more.Foundation.PSTR, inLocaleID: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getAvailable(n: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uloc_countAvailable() -> Int32: ...
@cfunctype('icu.dll')
def uloc_openAvailableByType(type: win32more.Globalization.ULocAvailableType, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uloc_getISOLanguages() -> POINTER(POINTER(SByte)): ...
@cfunctype('icu.dll')
def uloc_getISOCountries() -> POINTER(POINTER(SByte)): ...
@cfunctype('icu.dll')
def uloc_getParent(localeID: win32more.Foundation.PSTR, parent: win32more.Foundation.PSTR, parentCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getBaseName(localeID: win32more.Foundation.PSTR, name: win32more.Foundation.PSTR, nameCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_openKeywords(localeID: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uloc_getKeywordValue(localeID: win32more.Foundation.PSTR, keywordName: win32more.Foundation.PSTR, buffer: win32more.Foundation.PSTR, bufferCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_setKeywordValue(keywordName: win32more.Foundation.PSTR, keywordValue: win32more.Foundation.PSTR, buffer: win32more.Foundation.PSTR, bufferCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_isRightToLeft(locale: win32more.Foundation.PSTR) -> SByte: ...
@cfunctype('icu.dll')
def uloc_getCharacterOrientation(localeId: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.ULayoutType: ...
@cfunctype('icu.dll')
def uloc_getLineOrientation(localeId: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.ULayoutType: ...
@cfunctype('icu.dll')
def uloc_acceptLanguageFromHTTP(result: win32more.Foundation.PSTR, resultAvailable: Int32, outResult: POINTER(win32more.Globalization.UAcceptResult), httpAcceptLanguage: win32more.Foundation.PSTR, availableLocales: POINTER(win32more.Globalization.UEnumeration_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_acceptLanguage(result: win32more.Foundation.PSTR, resultAvailable: Int32, outResult: POINTER(win32more.Globalization.UAcceptResult), acceptList: POINTER(POINTER(SByte)), acceptListCount: Int32, availableLocales: POINTER(win32more.Globalization.UEnumeration_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_getLocaleForLCID(hostID: UInt32, locale: win32more.Foundation.PSTR, localeCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_addLikelySubtags(localeID: win32more.Foundation.PSTR, maximizedLocaleID: win32more.Foundation.PSTR, maximizedLocaleIDCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_minimizeSubtags(localeID: win32more.Foundation.PSTR, minimizedLocaleID: win32more.Foundation.PSTR, minimizedLocaleIDCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_forLanguageTag(langtag: win32more.Foundation.PSTR, localeID: win32more.Foundation.PSTR, localeIDCapacity: Int32, parsedLength: POINTER(Int32), err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_toLanguageTag(localeID: win32more.Foundation.PSTR, langtag: win32more.Foundation.PSTR, langtagCapacity: Int32, strict: SByte, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uloc_toUnicodeLocaleKey(keyword: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uloc_toUnicodeLocaleType(keyword: win32more.Foundation.PSTR, value: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uloc_toLegacyKey(keyword: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uloc_toLegacyType(keyword: win32more.Foundation.PSTR, value: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ures_open(packageName: win32more.Foundation.PSTR, locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UResourceBundle_head): ...
@cfunctype('icu.dll')
def ures_openDirect(packageName: win32more.Foundation.PSTR, locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UResourceBundle_head): ...
@cfunctype('icu.dll')
def ures_openU(packageName: POINTER(UInt16), locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UResourceBundle_head): ...
@cfunctype('icu.dll')
def ures_close(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head)) -> Void: ...
@cfunctype('icu.dll')
def ures_getVersion(resB: POINTER(win32more.Globalization.UResourceBundle_head), versionInfo: c_char_p_no) -> Void: ...
@cfunctype('icu.dll')
def ures_getLocaleByType(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), type: win32more.Globalization.ULocDataLocaleType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ures_getString(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), len: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ures_getUTF8String(resB: POINTER(win32more.Globalization.UResourceBundle_head), dest: win32more.Foundation.PSTR, length: POINTER(Int32), forceCopy: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ures_getBinary(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), len: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> c_char_p_no: ...
@cfunctype('icu.dll')
def ures_getIntVector(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), len: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(Int32): ...
@cfunctype('icu.dll')
def ures_getUInt(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), status: POINTER(win32more.Globalization.UErrorCode)) -> UInt32: ...
@cfunctype('icu.dll')
def ures_getInt(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ures_getSize(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head)) -> Int32: ...
@cfunctype('icu.dll')
def ures_getType(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head)) -> win32more.Globalization.UResType: ...
@cfunctype('icu.dll')
def ures_getKey(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ures_resetIterator(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head)) -> Void: ...
@cfunctype('icu.dll')
def ures_hasNext(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head)) -> SByte: ...
@cfunctype('icu.dll')
def ures_getNextResource(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), fillIn: POINTER(win32more.Globalization.UResourceBundle_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UResourceBundle_head): ...
@cfunctype('icu.dll')
def ures_getNextString(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), len: POINTER(Int32), key: POINTER(POINTER(SByte)), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ures_getByIndex(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), indexR: Int32, fillIn: POINTER(win32more.Globalization.UResourceBundle_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UResourceBundle_head): ...
@cfunctype('icu.dll')
def ures_getStringByIndex(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), indexS: Int32, len: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ures_getUTF8StringByIndex(resB: POINTER(win32more.Globalization.UResourceBundle_head), stringIndex: Int32, dest: win32more.Foundation.PSTR, pLength: POINTER(Int32), forceCopy: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ures_getByKey(resourceBundle: POINTER(win32more.Globalization.UResourceBundle_head), key: win32more.Foundation.PSTR, fillIn: POINTER(win32more.Globalization.UResourceBundle_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UResourceBundle_head): ...
@cfunctype('icu.dll')
def ures_getStringByKey(resB: POINTER(win32more.Globalization.UResourceBundle_head), key: win32more.Foundation.PSTR, len: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ures_getUTF8StringByKey(resB: POINTER(win32more.Globalization.UResourceBundle_head), key: win32more.Foundation.PSTR, dest: win32more.Foundation.PSTR, pLength: POINTER(Int32), forceCopy: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ures_openAvailableLocales(packageName: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uldn_open(locale: win32more.Foundation.PSTR, dialectHandling: win32more.Globalization.UDialectHandling, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.ULocaleDisplayNames_head): ...
@cfunctype('icu.dll')
def uldn_close(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head)) -> Void: ...
@cfunctype('icu.dll')
def uldn_getLocale(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uldn_getDialectHandling(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head)) -> win32more.Globalization.UDialectHandling: ...
@cfunctype('icu.dll')
def uldn_localeDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), locale: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_languageDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), lang: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_scriptDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), script: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_scriptCodeDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), scriptCode: win32more.Globalization.UScriptCode, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_regionDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), region: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_variantDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), variant: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_keyDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), key: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_keyValueDisplayName(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), key: win32more.Foundation.PSTR, value: win32more.Foundation.PSTR, result: POINTER(UInt16), maxResultSize: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uldn_openForContext(locale: win32more.Foundation.PSTR, contexts: POINTER(win32more.Globalization.UDisplayContext), length: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.ULocaleDisplayNames_head): ...
@cfunctype('icu.dll')
def uldn_getContext(ldn: POINTER(win32more.Globalization.ULocaleDisplayNames_head), type: win32more.Globalization.UDisplayContextType, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UDisplayContext: ...
@cfunctype('icu.dll')
def ucurr_forLocale(locale: win32more.Foundation.PSTR, buff: POINTER(UInt16), buffCapacity: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucurr_register(isoCode: POINTER(UInt16), locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> c_void_p: ...
@cfunctype('icu.dll')
def ucurr_unregister(key: c_void_p, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def ucurr_getName(currency: POINTER(UInt16), locale: win32more.Foundation.PSTR, nameStyle: win32more.Globalization.UCurrNameStyle, isChoiceFormat: POINTER(SByte), len: POINTER(Int32), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ucurr_getPluralName(currency: POINTER(UInt16), locale: win32more.Foundation.PSTR, isChoiceFormat: POINTER(SByte), pluralCount: win32more.Foundation.PSTR, len: POINTER(Int32), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ucurr_getDefaultFractionDigits(currency: POINTER(UInt16), ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucurr_getDefaultFractionDigitsForUsage(currency: POINTER(UInt16), usage: win32more.Globalization.UCurrencyUsage, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucurr_getRoundingIncrement(currency: POINTER(UInt16), ec: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def ucurr_getRoundingIncrementForUsage(currency: POINTER(UInt16), usage: win32more.Globalization.UCurrencyUsage, ec: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def ucurr_openISOCurrencies(currType: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucurr_isAvailable(isoCode: POINTER(UInt16), from_: Double, to: Double, errorCode: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def ucurr_countCurrencies(locale: win32more.Foundation.PSTR, date: Double, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucurr_forLocaleAndDate(locale: win32more.Foundation.PSTR, date: Double, index: Int32, buff: POINTER(UInt16), buffCapacity: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucurr_getKeywordValuesForLocale(key: win32more.Foundation.PSTR, locale: win32more.Foundation.PSTR, commonlyUsed: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucurr_getNumericCode(currency: POINTER(UInt16)) -> Int32: ...
@cfunctype('icu.dll')
def ucpmap_get(map: POINTER(win32more.Globalization.UCPMap_head), c: Int32) -> UInt32: ...
@cfunctype('icu.dll')
def ucpmap_getRange(map: POINTER(win32more.Globalization.UCPMap_head), start: Int32, option: win32more.Globalization.UCPMapRangeOption, surrogateValue: UInt32, filter: POINTER(win32more.Globalization.UCPMapValueFilter), context: c_void_p, pValue: POINTER(UInt32)) -> Int32: ...
@cfunctype('icu.dll')
def ucptrie_openFromBinary(type: win32more.Globalization.UCPTrieType, valueWidth: win32more.Globalization.UCPTrieValueWidth, data: c_void_p, length: Int32, pActualLength: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCPTrie_head): ...
@cfunctype('icu.dll')
def ucptrie_close(trie: POINTER(win32more.Globalization.UCPTrie_head)) -> Void: ...
@cfunctype('icu.dll')
def ucptrie_getType(trie: POINTER(win32more.Globalization.UCPTrie_head)) -> win32more.Globalization.UCPTrieType: ...
@cfunctype('icu.dll')
def ucptrie_getValueWidth(trie: POINTER(win32more.Globalization.UCPTrie_head)) -> win32more.Globalization.UCPTrieValueWidth: ...
@cfunctype('icu.dll')
def ucptrie_get(trie: POINTER(win32more.Globalization.UCPTrie_head), c: Int32) -> UInt32: ...
@cfunctype('icu.dll')
def ucptrie_getRange(trie: POINTER(win32more.Globalization.UCPTrie_head), start: Int32, option: win32more.Globalization.UCPMapRangeOption, surrogateValue: UInt32, filter: POINTER(win32more.Globalization.UCPMapValueFilter), context: c_void_p, pValue: POINTER(UInt32)) -> Int32: ...
@cfunctype('icu.dll')
def ucptrie_toBinary(trie: POINTER(win32more.Globalization.UCPTrie_head), data: c_void_p, capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucptrie_internalSmallIndex(trie: POINTER(win32more.Globalization.UCPTrie_head), c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucptrie_internalSmallU8Index(trie: POINTER(win32more.Globalization.UCPTrie_head), lt1: Int32, t2: Byte, t3: Byte) -> Int32: ...
@cfunctype('icu.dll')
def ucptrie_internalU8PrevIndex(trie: POINTER(win32more.Globalization.UCPTrie_head), c: Int32, start: c_char_p_no, src: c_char_p_no) -> Int32: ...
@cfunctype('icu.dll')
def umutablecptrie_open(initialValue: UInt32, errorValue: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UMutableCPTrie_head): ...
@cfunctype('icu.dll')
def umutablecptrie_clone(other: POINTER(win32more.Globalization.UMutableCPTrie_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UMutableCPTrie_head): ...
@cfunctype('icu.dll')
def umutablecptrie_close(trie: POINTER(win32more.Globalization.UMutableCPTrie_head)) -> Void: ...
@cfunctype('icu.dll')
def umutablecptrie_fromUCPMap(map: POINTER(win32more.Globalization.UCPMap_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UMutableCPTrie_head): ...
@cfunctype('icu.dll')
def umutablecptrie_fromUCPTrie(trie: POINTER(win32more.Globalization.UCPTrie_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UMutableCPTrie_head): ...
@cfunctype('icu.dll')
def umutablecptrie_get(trie: POINTER(win32more.Globalization.UMutableCPTrie_head), c: Int32) -> UInt32: ...
@cfunctype('icu.dll')
def umutablecptrie_getRange(trie: POINTER(win32more.Globalization.UMutableCPTrie_head), start: Int32, option: win32more.Globalization.UCPMapRangeOption, surrogateValue: UInt32, filter: POINTER(win32more.Globalization.UCPMapValueFilter), context: c_void_p, pValue: POINTER(UInt32)) -> Int32: ...
@cfunctype('icu.dll')
def umutablecptrie_set(trie: POINTER(win32more.Globalization.UMutableCPTrie_head), c: Int32, value: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def umutablecptrie_setRange(trie: POINTER(win32more.Globalization.UMutableCPTrie_head), start: Int32, end: Int32, value: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def umutablecptrie_buildImmutable(trie: POINTER(win32more.Globalization.UMutableCPTrie_head), type: win32more.Globalization.UCPTrieType, valueWidth: win32more.Globalization.UCPTrieValueWidth, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCPTrie_head): ...
@cfunctype('icu.dll')
def UCNV_FROM_U_CALLBACK_STOP(context: c_void_p, fromUArgs: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), codeUnits: POINTER(UInt16), length: Int32, codePoint: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def UCNV_TO_U_CALLBACK_STOP(context: c_void_p, toUArgs: POINTER(win32more.Globalization.UConverterToUnicodeArgs_head), codeUnits: win32more.Foundation.PSTR, length: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def UCNV_FROM_U_CALLBACK_SKIP(context: c_void_p, fromUArgs: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), codeUnits: POINTER(UInt16), length: Int32, codePoint: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def UCNV_FROM_U_CALLBACK_SUBSTITUTE(context: c_void_p, fromUArgs: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), codeUnits: POINTER(UInt16), length: Int32, codePoint: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def UCNV_FROM_U_CALLBACK_ESCAPE(context: c_void_p, fromUArgs: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), codeUnits: POINTER(UInt16), length: Int32, codePoint: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def UCNV_TO_U_CALLBACK_SKIP(context: c_void_p, toUArgs: POINTER(win32more.Globalization.UConverterToUnicodeArgs_head), codeUnits: win32more.Foundation.PSTR, length: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def UCNV_TO_U_CALLBACK_SUBSTITUTE(context: c_void_p, toUArgs: POINTER(win32more.Globalization.UConverterToUnicodeArgs_head), codeUnits: win32more.Foundation.PSTR, length: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def UCNV_TO_U_CALLBACK_ESCAPE(context: c_void_p, toUArgs: POINTER(win32more.Globalization.UConverterToUnicodeArgs_head), codeUnits: win32more.Foundation.PSTR, length: Int32, reason: win32more.Globalization.UConverterCallbackReason, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_compareNames(name1: win32more.Foundation.PSTR, name2: win32more.Foundation.PSTR) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_open(converterName: win32more.Foundation.PSTR, err: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConverter_head): ...
@cfunctype('icu.dll')
def ucnv_openU(name: POINTER(UInt16), err: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConverter_head): ...
@cfunctype('icu.dll')
def ucnv_openCCSID(codepage: Int32, platform: win32more.Globalization.UConverterPlatform, err: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConverter_head): ...
@cfunctype('icu.dll')
def ucnv_openPackage(packageName: win32more.Foundation.PSTR, converterName: win32more.Foundation.PSTR, err: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConverter_head): ...
@cfunctype('icu.dll')
def ucnv_safeClone(cnv: POINTER(win32more.Globalization.UConverter_head), stackBuffer: c_void_p, pBufferSize: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConverter_head): ...
@cfunctype('icu.dll')
def ucnv_close(converter: POINTER(win32more.Globalization.UConverter_head)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_getSubstChars(converter: POINTER(win32more.Globalization.UConverter_head), subChars: win32more.Foundation.PSTR, len: POINTER(SByte), err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_setSubstChars(converter: POINTER(win32more.Globalization.UConverter_head), subChars: win32more.Foundation.PSTR, len: SByte, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_setSubstString(cnv: POINTER(win32more.Globalization.UConverter_head), s: POINTER(UInt16), length: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_getInvalidChars(converter: POINTER(win32more.Globalization.UConverter_head), errBytes: win32more.Foundation.PSTR, len: POINTER(SByte), err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_getInvalidUChars(converter: POINTER(win32more.Globalization.UConverter_head), errUChars: POINTER(UInt16), len: POINTER(SByte), err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_reset(converter: POINTER(win32more.Globalization.UConverter_head)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_resetToUnicode(converter: POINTER(win32more.Globalization.UConverter_head)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_resetFromUnicode(converter: POINTER(win32more.Globalization.UConverter_head)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_getMaxCharSize(converter: POINTER(win32more.Globalization.UConverter_head)) -> SByte: ...
@cfunctype('icu.dll')
def ucnv_getMinCharSize(converter: POINTER(win32more.Globalization.UConverter_head)) -> SByte: ...
@cfunctype('icu.dll')
def ucnv_getDisplayName(converter: POINTER(win32more.Globalization.UConverter_head), displayLocale: win32more.Foundation.PSTR, displayName: POINTER(UInt16), displayNameCapacity: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_getName(converter: POINTER(win32more.Globalization.UConverter_head), err: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_getCCSID(converter: POINTER(win32more.Globalization.UConverter_head), err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_getPlatform(converter: POINTER(win32more.Globalization.UConverter_head), err: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UConverterPlatform: ...
@cfunctype('icu.dll')
def ucnv_getType(converter: POINTER(win32more.Globalization.UConverter_head)) -> win32more.Globalization.UConverterType: ...
@cfunctype('icu.dll')
def ucnv_getStarters(converter: POINTER(win32more.Globalization.UConverter_head), starters: POINTER(SByte), err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_getUnicodeSet(cnv: POINTER(win32more.Globalization.UConverter_head), setFillIn: POINTER(win32more.Globalization.USet_head), whichSet: win32more.Globalization.UConverterUnicodeSet, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_getToUCallBack(converter: POINTER(win32more.Globalization.UConverter_head), action: POINTER(win32more.Globalization.UConverterToUCallback), context: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_getFromUCallBack(converter: POINTER(win32more.Globalization.UConverter_head), action: POINTER(win32more.Globalization.UConverterFromUCallback), context: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_setToUCallBack(converter: POINTER(win32more.Globalization.UConverter_head), newAction: win32more.Globalization.UConverterToUCallback, newContext: c_void_p, oldAction: POINTER(win32more.Globalization.UConverterToUCallback), oldContext: POINTER(c_void_p), err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_setFromUCallBack(converter: POINTER(win32more.Globalization.UConverter_head), newAction: win32more.Globalization.UConverterFromUCallback, newContext: c_void_p, oldAction: POINTER(win32more.Globalization.UConverterFromUCallback), oldContext: POINTER(c_void_p), err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_fromUnicode(converter: POINTER(win32more.Globalization.UConverter_head), target: POINTER(POINTER(SByte)), targetLimit: win32more.Foundation.PSTR, source: POINTER(POINTER(UInt16)), sourceLimit: POINTER(UInt16), offsets: POINTER(Int32), flush: SByte, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_toUnicode(converter: POINTER(win32more.Globalization.UConverter_head), target: POINTER(POINTER(UInt16)), targetLimit: POINTER(UInt16), source: POINTER(POINTER(SByte)), sourceLimit: win32more.Foundation.PSTR, offsets: POINTER(Int32), flush: SByte, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_fromUChars(cnv: POINTER(win32more.Globalization.UConverter_head), dest: win32more.Foundation.PSTR, destCapacity: Int32, src: POINTER(UInt16), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_toUChars(cnv: POINTER(win32more.Globalization.UConverter_head), dest: POINTER(UInt16), destCapacity: Int32, src: win32more.Foundation.PSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_getNextUChar(converter: POINTER(win32more.Globalization.UConverter_head), source: POINTER(POINTER(SByte)), sourceLimit: win32more.Foundation.PSTR, err: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_convertEx(targetCnv: POINTER(win32more.Globalization.UConverter_head), sourceCnv: POINTER(win32more.Globalization.UConverter_head), target: POINTER(POINTER(SByte)), targetLimit: win32more.Foundation.PSTR, source: POINTER(POINTER(SByte)), sourceLimit: win32more.Foundation.PSTR, pivotStart: POINTER(UInt16), pivotSource: POINTER(POINTER(UInt16)), pivotTarget: POINTER(POINTER(UInt16)), pivotLimit: POINTER(UInt16), reset: SByte, flush: SByte, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_convert(toConverterName: win32more.Foundation.PSTR, fromConverterName: win32more.Foundation.PSTR, target: win32more.Foundation.PSTR, targetCapacity: Int32, source: win32more.Foundation.PSTR, sourceLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_toAlgorithmic(algorithmicType: win32more.Globalization.UConverterType, cnv: POINTER(win32more.Globalization.UConverter_head), target: win32more.Foundation.PSTR, targetCapacity: Int32, source: win32more.Foundation.PSTR, sourceLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_fromAlgorithmic(cnv: POINTER(win32more.Globalization.UConverter_head), algorithmicType: win32more.Globalization.UConverterType, target: win32more.Foundation.PSTR, targetCapacity: Int32, source: win32more.Foundation.PSTR, sourceLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_flushCache() -> Int32: ...
@cfunctype('icu.dll')
def ucnv_countAvailable() -> Int32: ...
@cfunctype('icu.dll')
def ucnv_getAvailableName(n: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_openAllNames(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucnv_countAliases(alias: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> UInt16: ...
@cfunctype('icu.dll')
def ucnv_getAlias(alias: win32more.Foundation.PSTR, n: UInt16, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_getAliases(alias: win32more.Foundation.PSTR, aliases: POINTER(POINTER(SByte)), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_openStandardNames(convName: win32more.Foundation.PSTR, standard: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucnv_countStandards() -> UInt16: ...
@cfunctype('icu.dll')
def ucnv_getStandard(n: UInt16, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_getStandardName(name: win32more.Foundation.PSTR, standard: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_getCanonicalName(alias: win32more.Foundation.PSTR, standard: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_getDefaultName() -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_setDefaultName(name: win32more.Foundation.PSTR) -> Void: ...
@cfunctype('icu.dll')
def ucnv_fixFileSeparator(cnv: POINTER(win32more.Globalization.UConverter_head), source: POINTER(UInt16), sourceLen: Int32) -> Void: ...
@cfunctype('icu.dll')
def ucnv_isAmbiguous(cnv: POINTER(win32more.Globalization.UConverter_head)) -> SByte: ...
@cfunctype('icu.dll')
def ucnv_setFallback(cnv: POINTER(win32more.Globalization.UConverter_head), usesFallback: SByte) -> Void: ...
@cfunctype('icu.dll')
def ucnv_usesFallback(cnv: POINTER(win32more.Globalization.UConverter_head)) -> SByte: ...
@cfunctype('icu.dll')
def ucnv_detectUnicodeSignature(source: win32more.Foundation.PSTR, sourceLength: Int32, signatureLength: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucnv_fromUCountPending(cnv: POINTER(win32more.Globalization.UConverter_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_toUCountPending(cnv: POINTER(win32more.Globalization.UConverter_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnv_isFixedWidth(cnv: POINTER(win32more.Globalization.UConverter_head), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def ucnv_cbFromUWriteBytes(args: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), source: win32more.Foundation.PSTR, length: Int32, offsetIndex: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_cbFromUWriteSub(args: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), offsetIndex: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_cbFromUWriteUChars(args: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), source: POINTER(POINTER(UInt16)), sourceLimit: POINTER(UInt16), offsetIndex: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_cbToUWriteUChars(args: POINTER(win32more.Globalization.UConverterToUnicodeArgs_head), source: POINTER(UInt16), length: Int32, offsetIndex: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucnv_cbToUWriteSub(args: POINTER(win32more.Globalization.UConverterToUnicodeArgs_head), offsetIndex: Int32, err: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def u_init(status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def u_cleanup() -> Void: ...
@cfunctype('icu.dll')
def u_setMemoryFunctions(context: c_void_p, a: POINTER(win32more.Globalization.UMemAllocFn), r: POINTER(win32more.Globalization.UMemReallocFn), f: POINTER(win32more.Globalization.UMemFreeFn), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def u_catopen(name: win32more.Foundation.PSTR, locale: win32more.Foundation.PSTR, ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UResourceBundle_head): ...
@cfunctype('icu.dll')
def u_catclose(catd: POINTER(win32more.Globalization.UResourceBundle_head)) -> Void: ...
@cfunctype('icu.dll')
def u_catgets(catd: POINTER(win32more.Globalization.UResourceBundle_head), set_num: Int32, msg_num: Int32, s: POINTER(UInt16), len: POINTER(Int32), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_hasBinaryProperty(c: Int32, which: win32more.Globalization.UProperty) -> SByte: ...
@cfunctype('icu.dll')
def u_getBinaryPropertySet(property: win32more.Globalization.UProperty, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def u_isUAlphabetic(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isULowercase(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isUUppercase(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isUWhiteSpace(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_getIntPropertyValue(c: Int32, which: win32more.Globalization.UProperty) -> Int32: ...
@cfunctype('icu.dll')
def u_getIntPropertyMinValue(which: win32more.Globalization.UProperty) -> Int32: ...
@cfunctype('icu.dll')
def u_getIntPropertyMaxValue(which: win32more.Globalization.UProperty) -> Int32: ...
@cfunctype('icu.dll')
def u_getIntPropertyMap(property: win32more.Globalization.UProperty, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCPMap_head): ...
@cfunctype('icu.dll')
def u_getNumericValue(c: Int32) -> Double: ...
@cfunctype('icu.dll')
def u_islower(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isupper(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_istitle(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isdigit(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isalpha(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isalnum(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isxdigit(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_ispunct(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isgraph(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isblank(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isdefined(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isspace(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isJavaSpaceChar(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isWhitespace(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_iscntrl(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isISOControl(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isprint(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isbase(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_charDirection(c: Int32) -> win32more.Globalization.UCharDirection: ...
@cfunctype('icu.dll')
def u_isMirrored(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_charMirror(c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_getBidiPairedBracket(c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_charType(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_enumCharTypes(enumRange: POINTER(win32more.Globalization.UCharEnumTypeRange), context: c_void_p) -> Void: ...
@cfunctype('icu.dll')
def u_getCombiningClass(c: Int32) -> Byte: ...
@cfunctype('icu.dll')
def u_charDigitValue(c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ublock_getCode(c: Int32) -> win32more.Globalization.UBlockCode: ...
@cfunctype('icu.dll')
def u_charName(code: Int32, nameChoice: win32more.Globalization.UCharNameChoice, buffer: win32more.Foundation.PSTR, bufferLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_charFromName(nameChoice: win32more.Globalization.UCharNameChoice, name: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_enumCharNames(start: Int32, limit: Int32, fn: POINTER(win32more.Globalization.UEnumCharNamesFn), context: c_void_p, nameChoice: win32more.Globalization.UCharNameChoice, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def u_getPropertyName(property: win32more.Globalization.UProperty, nameChoice: win32more.Globalization.UPropertyNameChoice) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_getPropertyEnum(alias: win32more.Foundation.PSTR) -> win32more.Globalization.UProperty: ...
@cfunctype('icu.dll')
def u_getPropertyValueName(property: win32more.Globalization.UProperty, value: Int32, nameChoice: win32more.Globalization.UPropertyNameChoice) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_getPropertyValueEnum(property: win32more.Globalization.UProperty, alias: win32more.Foundation.PSTR) -> Int32: ...
@cfunctype('icu.dll')
def u_isIDStart(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isIDPart(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isIDIgnorable(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isJavaIDStart(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_isJavaIDPart(c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_tolower(c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_toupper(c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_totitle(c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_foldCase(c: Int32, options: UInt32) -> Int32: ...
@cfunctype('icu.dll')
def u_digit(ch: Int32, radix: SByte) -> Int32: ...
@cfunctype('icu.dll')
def u_forDigit(digit: Int32, radix: SByte) -> Int32: ...
@cfunctype('icu.dll')
def u_charAge(c: Int32, versionArray: c_char_p_no) -> Void: ...
@cfunctype('icu.dll')
def u_getUnicodeVersion(versionArray: c_char_p_no) -> Void: ...
@cfunctype('icu.dll')
def u_getFC_NFKC_Closure(c: Int32, dest: POINTER(UInt16), destCapacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_open() -> POINTER(win32more.Globalization.UBiDi_head): ...
@cfunctype('icu.dll')
def ubidi_openSized(maxLength: Int32, maxRunCount: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UBiDi_head): ...
@cfunctype('icu.dll')
def ubidi_close(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_setInverse(pBiDi: POINTER(win32more.Globalization.UBiDi_head), isInverse: SByte) -> Void: ...
@cfunctype('icu.dll')
def ubidi_isInverse(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> SByte: ...
@cfunctype('icu.dll')
def ubidi_orderParagraphsLTR(pBiDi: POINTER(win32more.Globalization.UBiDi_head), orderParagraphsLTR: SByte) -> Void: ...
@cfunctype('icu.dll')
def ubidi_isOrderParagraphsLTR(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> SByte: ...
@cfunctype('icu.dll')
def ubidi_setReorderingMode(pBiDi: POINTER(win32more.Globalization.UBiDi_head), reorderingMode: win32more.Globalization.UBiDiReorderingMode) -> Void: ...
@cfunctype('icu.dll')
def ubidi_getReorderingMode(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> win32more.Globalization.UBiDiReorderingMode: ...
@cfunctype('icu.dll')
def ubidi_setReorderingOptions(pBiDi: POINTER(win32more.Globalization.UBiDi_head), reorderingOptions: UInt32) -> Void: ...
@cfunctype('icu.dll')
def ubidi_getReorderingOptions(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> UInt32: ...
@cfunctype('icu.dll')
def ubidi_setContext(pBiDi: POINTER(win32more.Globalization.UBiDi_head), prologue: POINTER(UInt16), proLength: Int32, epilogue: POINTER(UInt16), epiLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_setPara(pBiDi: POINTER(win32more.Globalization.UBiDi_head), text: POINTER(UInt16), length: Int32, paraLevel: Byte, embeddingLevels: c_char_p_no, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_setLine(pParaBiDi: POINTER(win32more.Globalization.UBiDi_head), start: Int32, limit: Int32, pLineBiDi: POINTER(win32more.Globalization.UBiDi_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_getDirection(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> win32more.Globalization.UBiDiDirection: ...
@cfunctype('icu.dll')
def ubidi_getBaseDirection(text: POINTER(UInt16), length: Int32) -> win32more.Globalization.UBiDiDirection: ...
@cfunctype('icu.dll')
def ubidi_getText(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ubidi_getLength(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getParaLevel(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> Byte: ...
@cfunctype('icu.dll')
def ubidi_countParagraphs(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getParagraph(pBiDi: POINTER(win32more.Globalization.UBiDi_head), charIndex: Int32, pParaStart: POINTER(Int32), pParaLimit: POINTER(Int32), pParaLevel: c_char_p_no, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getParagraphByIndex(pBiDi: POINTER(win32more.Globalization.UBiDi_head), paraIndex: Int32, pParaStart: POINTER(Int32), pParaLimit: POINTER(Int32), pParaLevel: c_char_p_no, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_getLevelAt(pBiDi: POINTER(win32more.Globalization.UBiDi_head), charIndex: Int32) -> Byte: ...
@cfunctype('icu.dll')
def ubidi_getLevels(pBiDi: POINTER(win32more.Globalization.UBiDi_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> c_char_p_no: ...
@cfunctype('icu.dll')
def ubidi_getLogicalRun(pBiDi: POINTER(win32more.Globalization.UBiDi_head), logicalPosition: Int32, pLogicalLimit: POINTER(Int32), pLevel: c_char_p_no) -> Void: ...
@cfunctype('icu.dll')
def ubidi_countRuns(pBiDi: POINTER(win32more.Globalization.UBiDi_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getVisualRun(pBiDi: POINTER(win32more.Globalization.UBiDi_head), runIndex: Int32, pLogicalStart: POINTER(Int32), pLength: POINTER(Int32)) -> win32more.Globalization.UBiDiDirection: ...
@cfunctype('icu.dll')
def ubidi_getVisualIndex(pBiDi: POINTER(win32more.Globalization.UBiDi_head), logicalIndex: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getLogicalIndex(pBiDi: POINTER(win32more.Globalization.UBiDi_head), visualIndex: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getLogicalMap(pBiDi: POINTER(win32more.Globalization.UBiDi_head), indexMap: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_getVisualMap(pBiDi: POINTER(win32more.Globalization.UBiDi_head), indexMap: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_reorderLogical(levels: c_char_p_no, length: Int32, indexMap: POINTER(Int32)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_reorderVisual(levels: c_char_p_no, length: Int32, indexMap: POINTER(Int32)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_invertMap(srcMap: POINTER(Int32), destMap: POINTER(Int32), length: Int32) -> Void: ...
@cfunctype('icu.dll')
def ubidi_getProcessedLength(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getResultLength(pBiDi: POINTER(win32more.Globalization.UBiDi_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_getCustomizedClass(pBiDi: POINTER(win32more.Globalization.UBiDi_head), c: Int32) -> win32more.Globalization.UCharDirection: ...
@cfunctype('icu.dll')
def ubidi_setClassCallback(pBiDi: POINTER(win32more.Globalization.UBiDi_head), newFn: win32more.Globalization.UBiDiClassCallback, newContext: c_void_p, oldFn: POINTER(win32more.Globalization.UBiDiClassCallback), oldContext: POINTER(c_void_p), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_getClassCallback(pBiDi: POINTER(win32more.Globalization.UBiDi_head), fn: POINTER(win32more.Globalization.UBiDiClassCallback), context: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def ubidi_writeReordered(pBiDi: POINTER(win32more.Globalization.UBiDi_head), dest: POINTER(UInt16), destSize: Int32, options: UInt16, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubidi_writeReverse(src: POINTER(UInt16), srcLength: Int32, dest: POINTER(UInt16), destSize: Int32, options: UInt16, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubiditransform_transform(pBiDiTransform: POINTER(win32more.Globalization.UBiDiTransform_head), src: POINTER(UInt16), srcLength: Int32, dest: POINTER(UInt16), destSize: Int32, inParaLevel: Byte, inOrder: win32more.Globalization.UBiDiOrder, outParaLevel: Byte, outOrder: win32more.Globalization.UBiDiOrder, doMirroring: win32more.Globalization.UBiDiMirroring, shapingOptions: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> UInt32: ...
@cfunctype('icu.dll')
def ubiditransform_open(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UBiDiTransform_head): ...
@cfunctype('icu.dll')
def ubiditransform_close(pBidiTransform: POINTER(win32more.Globalization.UBiDiTransform_head)) -> Void: ...
@cfunctype('icu.dll')
def utext_close(ut: POINTER(win32more.Globalization.UText_head)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def utext_openUTF8(ut: POINTER(win32more.Globalization.UText_head), s: win32more.Foundation.PSTR, length: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def utext_openUChars(ut: POINTER(win32more.Globalization.UText_head), s: POINTER(UInt16), length: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def utext_clone(dest: POINTER(win32more.Globalization.UText_head), src: POINTER(win32more.Globalization.UText_head), deep: SByte, readOnly: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def utext_equals(a: POINTER(win32more.Globalization.UText_head), b: POINTER(win32more.Globalization.UText_head)) -> SByte: ...
@cfunctype('icu.dll')
def utext_nativeLength(ut: POINTER(win32more.Globalization.UText_head)) -> Int64: ...
@cfunctype('icu.dll')
def utext_isLengthExpensive(ut: POINTER(win32more.Globalization.UText_head)) -> SByte: ...
@cfunctype('icu.dll')
def utext_char32At(ut: POINTER(win32more.Globalization.UText_head), nativeIndex: Int64) -> Int32: ...
@cfunctype('icu.dll')
def utext_current32(ut: POINTER(win32more.Globalization.UText_head)) -> Int32: ...
@cfunctype('icu.dll')
def utext_next32(ut: POINTER(win32more.Globalization.UText_head)) -> Int32: ...
@cfunctype('icu.dll')
def utext_previous32(ut: POINTER(win32more.Globalization.UText_head)) -> Int32: ...
@cfunctype('icu.dll')
def utext_next32From(ut: POINTER(win32more.Globalization.UText_head), nativeIndex: Int64) -> Int32: ...
@cfunctype('icu.dll')
def utext_previous32From(ut: POINTER(win32more.Globalization.UText_head), nativeIndex: Int64) -> Int32: ...
@cfunctype('icu.dll')
def utext_getNativeIndex(ut: POINTER(win32more.Globalization.UText_head)) -> Int64: ...
@cfunctype('icu.dll')
def utext_setNativeIndex(ut: POINTER(win32more.Globalization.UText_head), nativeIndex: Int64) -> Void: ...
@cfunctype('icu.dll')
def utext_moveIndex32(ut: POINTER(win32more.Globalization.UText_head), delta: Int32) -> SByte: ...
@cfunctype('icu.dll')
def utext_getPreviousNativeIndex(ut: POINTER(win32more.Globalization.UText_head)) -> Int64: ...
@cfunctype('icu.dll')
def utext_extract(ut: POINTER(win32more.Globalization.UText_head), nativeStart: Int64, nativeLimit: Int64, dest: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def utext_isWritable(ut: POINTER(win32more.Globalization.UText_head)) -> SByte: ...
@cfunctype('icu.dll')
def utext_hasMetaData(ut: POINTER(win32more.Globalization.UText_head)) -> SByte: ...
@cfunctype('icu.dll')
def utext_replace(ut: POINTER(win32more.Globalization.UText_head), nativeStart: Int64, nativeLimit: Int64, replacementText: POINTER(UInt16), replacementLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def utext_copy(ut: POINTER(win32more.Globalization.UText_head), nativeStart: Int64, nativeLimit: Int64, destIndex: Int64, move: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def utext_freeze(ut: POINTER(win32more.Globalization.UText_head)) -> Void: ...
@cfunctype('icu.dll')
def utext_setup(ut: POINTER(win32more.Globalization.UText_head), extraSpace: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def uset_openEmpty() -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uset_open(start: Int32, end: Int32) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uset_openPattern(pattern: POINTER(UInt16), patternLength: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uset_openPatternOptions(pattern: POINTER(UInt16), patternLength: Int32, options: UInt32, ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uset_close(set: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_clone(set: POINTER(win32more.Globalization.USet_head)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uset_isFrozen(set: POINTER(win32more.Globalization.USet_head)) -> SByte: ...
@cfunctype('icu.dll')
def uset_freeze(set: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_cloneAsThawed(set: POINTER(win32more.Globalization.USet_head)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uset_set(set: POINTER(win32more.Globalization.USet_head), start: Int32, end: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_applyPattern(set: POINTER(win32more.Globalization.USet_head), pattern: POINTER(UInt16), patternLength: Int32, options: UInt32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uset_applyIntPropertyValue(set: POINTER(win32more.Globalization.USet_head), prop: win32more.Globalization.UProperty, value: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uset_applyPropertyAlias(set: POINTER(win32more.Globalization.USet_head), prop: POINTER(UInt16), propLength: Int32, value: POINTER(UInt16), valueLength: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uset_resemblesPattern(pattern: POINTER(UInt16), patternLength: Int32, pos: Int32) -> SByte: ...
@cfunctype('icu.dll')
def uset_toPattern(set: POINTER(win32more.Globalization.USet_head), result: POINTER(UInt16), resultCapacity: Int32, escapeUnprintable: SByte, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uset_add(set: POINTER(win32more.Globalization.USet_head), c: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_addAll(set: POINTER(win32more.Globalization.USet_head), additionalSet: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_addRange(set: POINTER(win32more.Globalization.USet_head), start: Int32, end: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_addString(set: POINTER(win32more.Globalization.USet_head), str: POINTER(UInt16), strLen: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_addAllCodePoints(set: POINTER(win32more.Globalization.USet_head), str: POINTER(UInt16), strLen: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_remove(set: POINTER(win32more.Globalization.USet_head), c: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_removeRange(set: POINTER(win32more.Globalization.USet_head), start: Int32, end: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_removeString(set: POINTER(win32more.Globalization.USet_head), str: POINTER(UInt16), strLen: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_removeAll(set: POINTER(win32more.Globalization.USet_head), removeSet: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_retain(set: POINTER(win32more.Globalization.USet_head), start: Int32, end: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_retainAll(set: POINTER(win32more.Globalization.USet_head), retain: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_compact(set: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_complement(set: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_complementAll(set: POINTER(win32more.Globalization.USet_head), complement: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_clear(set: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_closeOver(set: POINTER(win32more.Globalization.USet_head), attributes: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_removeAllStrings(set: POINTER(win32more.Globalization.USet_head)) -> Void: ...
@cfunctype('icu.dll')
def uset_isEmpty(set: POINTER(win32more.Globalization.USet_head)) -> SByte: ...
@cfunctype('icu.dll')
def uset_contains(set: POINTER(win32more.Globalization.USet_head), c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def uset_containsRange(set: POINTER(win32more.Globalization.USet_head), start: Int32, end: Int32) -> SByte: ...
@cfunctype('icu.dll')
def uset_containsString(set: POINTER(win32more.Globalization.USet_head), str: POINTER(UInt16), strLen: Int32) -> SByte: ...
@cfunctype('icu.dll')
def uset_indexOf(set: POINTER(win32more.Globalization.USet_head), c: Int32) -> Int32: ...
@cfunctype('icu.dll')
def uset_charAt(set: POINTER(win32more.Globalization.USet_head), charIndex: Int32) -> Int32: ...
@cfunctype('icu.dll')
def uset_size(set: POINTER(win32more.Globalization.USet_head)) -> Int32: ...
@cfunctype('icu.dll')
def uset_getItemCount(set: POINTER(win32more.Globalization.USet_head)) -> Int32: ...
@cfunctype('icu.dll')
def uset_getItem(set: POINTER(win32more.Globalization.USet_head), itemIndex: Int32, start: POINTER(Int32), end: POINTER(Int32), str: POINTER(UInt16), strCapacity: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uset_containsAll(set1: POINTER(win32more.Globalization.USet_head), set2: POINTER(win32more.Globalization.USet_head)) -> SByte: ...
@cfunctype('icu.dll')
def uset_containsAllCodePoints(set: POINTER(win32more.Globalization.USet_head), str: POINTER(UInt16), strLen: Int32) -> SByte: ...
@cfunctype('icu.dll')
def uset_containsNone(set1: POINTER(win32more.Globalization.USet_head), set2: POINTER(win32more.Globalization.USet_head)) -> SByte: ...
@cfunctype('icu.dll')
def uset_containsSome(set1: POINTER(win32more.Globalization.USet_head), set2: POINTER(win32more.Globalization.USet_head)) -> SByte: ...
@cfunctype('icu.dll')
def uset_span(set: POINTER(win32more.Globalization.USet_head), s: POINTER(UInt16), length: Int32, spanCondition: win32more.Globalization.USetSpanCondition) -> Int32: ...
@cfunctype('icu.dll')
def uset_spanBack(set: POINTER(win32more.Globalization.USet_head), s: POINTER(UInt16), length: Int32, spanCondition: win32more.Globalization.USetSpanCondition) -> Int32: ...
@cfunctype('icu.dll')
def uset_spanUTF8(set: POINTER(win32more.Globalization.USet_head), s: win32more.Foundation.PSTR, length: Int32, spanCondition: win32more.Globalization.USetSpanCondition) -> Int32: ...
@cfunctype('icu.dll')
def uset_spanBackUTF8(set: POINTER(win32more.Globalization.USet_head), s: win32more.Foundation.PSTR, length: Int32, spanCondition: win32more.Globalization.USetSpanCondition) -> Int32: ...
@cfunctype('icu.dll')
def uset_equals(set1: POINTER(win32more.Globalization.USet_head), set2: POINTER(win32more.Globalization.USet_head)) -> SByte: ...
@cfunctype('icu.dll')
def uset_serialize(set: POINTER(win32more.Globalization.USet_head), dest: POINTER(UInt16), destCapacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uset_getSerializedSet(fillSet: POINTER(win32more.Globalization.USerializedSet_head), src: POINTER(UInt16), srcLength: Int32) -> SByte: ...
@cfunctype('icu.dll')
def uset_setSerializedToOne(fillSet: POINTER(win32more.Globalization.USerializedSet_head), c: Int32) -> Void: ...
@cfunctype('icu.dll')
def uset_serializedContains(set: POINTER(win32more.Globalization.USerializedSet_head), c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def uset_getSerializedRangeCount(set: POINTER(win32more.Globalization.USerializedSet_head)) -> Int32: ...
@cfunctype('icu.dll')
def uset_getSerializedRange(set: POINTER(win32more.Globalization.USerializedSet_head), rangeIndex: Int32, pStart: POINTER(Int32), pEnd: POINTER(Int32)) -> SByte: ...
@cfunctype('icu.dll')
def unorm2_getNFCInstance(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNormalizer2_head): ...
@cfunctype('icu.dll')
def unorm2_getNFDInstance(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNormalizer2_head): ...
@cfunctype('icu.dll')
def unorm2_getNFKCInstance(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNormalizer2_head): ...
@cfunctype('icu.dll')
def unorm2_getNFKDInstance(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNormalizer2_head): ...
@cfunctype('icu.dll')
def unorm2_getNFKCCasefoldInstance(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNormalizer2_head): ...
@cfunctype('icu.dll')
def unorm2_getInstance(packageName: win32more.Foundation.PSTR, name: win32more.Foundation.PSTR, mode: win32more.Globalization.UNormalization2Mode, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNormalizer2_head): ...
@cfunctype('icu.dll')
def unorm2_openFiltered(norm2: POINTER(win32more.Globalization.UNormalizer2_head), filterSet: POINTER(win32more.Globalization.USet_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNormalizer2_head): ...
@cfunctype('icu.dll')
def unorm2_close(norm2: POINTER(win32more.Globalization.UNormalizer2_head)) -> Void: ...
@cfunctype('icu.dll')
def unorm2_normalize(norm2: POINTER(win32more.Globalization.UNormalizer2_head), src: POINTER(UInt16), length: Int32, dest: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unorm2_normalizeSecondAndAppend(norm2: POINTER(win32more.Globalization.UNormalizer2_head), first: POINTER(UInt16), firstLength: Int32, firstCapacity: Int32, second: POINTER(UInt16), secondLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unorm2_append(norm2: POINTER(win32more.Globalization.UNormalizer2_head), first: POINTER(UInt16), firstLength: Int32, firstCapacity: Int32, second: POINTER(UInt16), secondLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unorm2_getDecomposition(norm2: POINTER(win32more.Globalization.UNormalizer2_head), c: Int32, decomposition: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unorm2_getRawDecomposition(norm2: POINTER(win32more.Globalization.UNormalizer2_head), c: Int32, decomposition: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unorm2_composePair(norm2: POINTER(win32more.Globalization.UNormalizer2_head), a: Int32, b: Int32) -> Int32: ...
@cfunctype('icu.dll')
def unorm2_getCombiningClass(norm2: POINTER(win32more.Globalization.UNormalizer2_head), c: Int32) -> Byte: ...
@cfunctype('icu.dll')
def unorm2_isNormalized(norm2: POINTER(win32more.Globalization.UNormalizer2_head), s: POINTER(UInt16), length: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def unorm2_quickCheck(norm2: POINTER(win32more.Globalization.UNormalizer2_head), s: POINTER(UInt16), length: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UNormalizationCheckResult: ...
@cfunctype('icu.dll')
def unorm2_spanQuickCheckYes(norm2: POINTER(win32more.Globalization.UNormalizer2_head), s: POINTER(UInt16), length: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unorm2_hasBoundaryBefore(norm2: POINTER(win32more.Globalization.UNormalizer2_head), c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def unorm2_hasBoundaryAfter(norm2: POINTER(win32more.Globalization.UNormalizer2_head), c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def unorm2_isInert(norm2: POINTER(win32more.Globalization.UNormalizer2_head), c: Int32) -> SByte: ...
@cfunctype('icu.dll')
def unorm_compare(s1: POINTER(UInt16), length1: Int32, s2: POINTER(UInt16), length2: Int32, options: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnvsel_open(converterList: POINTER(POINTER(SByte)), converterListSize: Int32, excludedCodePoints: POINTER(win32more.Globalization.USet_head), whichSet: win32more.Globalization.UConverterUnicodeSet, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConverterSelector_head): ...
@cfunctype('icu.dll')
def ucnvsel_close(sel: POINTER(win32more.Globalization.UConverterSelector_head)) -> Void: ...
@cfunctype('icu.dll')
def ucnvsel_openFromSerialized(buffer: c_void_p, length: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConverterSelector_head): ...
@cfunctype('icu.dll')
def ucnvsel_serialize(sel: POINTER(win32more.Globalization.UConverterSelector_head), buffer: c_void_p, bufferCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucnvsel_selectForString(sel: POINTER(win32more.Globalization.UConverterSelector_head), s: POINTER(UInt16), length: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucnvsel_selectForUTF8(sel: POINTER(win32more.Globalization.UConverterSelector_head), s: win32more.Foundation.PSTR, length: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def u_charsToUChars(cs: win32more.Foundation.PSTR, us: POINTER(UInt16), length: Int32) -> Void: ...
@cfunctype('icu.dll')
def u_UCharsToChars(us: POINTER(UInt16), cs: win32more.Foundation.PSTR, length: Int32) -> Void: ...
@cfunctype('icu.dll')
def u_strlen(s: POINTER(UInt16)) -> Int32: ...
@cfunctype('icu.dll')
def u_countChar32(s: POINTER(UInt16), length: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_strHasMoreChar32Than(s: POINTER(UInt16), length: Int32, number: Int32) -> SByte: ...
@cfunctype('icu.dll')
def u_strcat(dst: POINTER(UInt16), src: POINTER(UInt16)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strncat(dst: POINTER(UInt16), src: POINTER(UInt16), n: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strstr(s: POINTER(UInt16), substring: POINTER(UInt16)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strFindFirst(s: POINTER(UInt16), length: Int32, substring: POINTER(UInt16), subLength: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strchr(s: POINTER(UInt16), c: UInt16) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strchr32(s: POINTER(UInt16), c: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strrstr(s: POINTER(UInt16), substring: POINTER(UInt16)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strFindLast(s: POINTER(UInt16), length: Int32, substring: POINTER(UInt16), subLength: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strrchr(s: POINTER(UInt16), c: UInt16) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strrchr32(s: POINTER(UInt16), c: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strpbrk(string: POINTER(UInt16), matchSet: POINTER(UInt16)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strcspn(string: POINTER(UInt16), matchSet: POINTER(UInt16)) -> Int32: ...
@cfunctype('icu.dll')
def u_strspn(string: POINTER(UInt16), matchSet: POINTER(UInt16)) -> Int32: ...
@cfunctype('icu.dll')
def u_strtok_r(src: POINTER(UInt16), delim: POINTER(UInt16), saveState: POINTER(POINTER(UInt16))) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strcmp(s1: POINTER(UInt16), s2: POINTER(UInt16)) -> Int32: ...
@cfunctype('icu.dll')
def u_strcmpCodePointOrder(s1: POINTER(UInt16), s2: POINTER(UInt16)) -> Int32: ...
@cfunctype('icu.dll')
def u_strCompare(s1: POINTER(UInt16), length1: Int32, s2: POINTER(UInt16), length2: Int32, codePointOrder: SByte) -> Int32: ...
@cfunctype('icu.dll')
def u_strCompareIter(iter1: POINTER(win32more.Globalization.UCharIterator_head), iter2: POINTER(win32more.Globalization.UCharIterator_head), codePointOrder: SByte) -> Int32: ...
@cfunctype('icu.dll')
def u_strCaseCompare(s1: POINTER(UInt16), length1: Int32, s2: POINTER(UInt16), length2: Int32, options: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_strncmp(ucs1: POINTER(UInt16), ucs2: POINTER(UInt16), n: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_strncmpCodePointOrder(s1: POINTER(UInt16), s2: POINTER(UInt16), n: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_strcasecmp(s1: POINTER(UInt16), s2: POINTER(UInt16), options: UInt32) -> Int32: ...
@cfunctype('icu.dll')
def u_strncasecmp(s1: POINTER(UInt16), s2: POINTER(UInt16), n: Int32, options: UInt32) -> Int32: ...
@cfunctype('icu.dll')
def u_memcasecmp(s1: POINTER(UInt16), s2: POINTER(UInt16), length: Int32, options: UInt32) -> Int32: ...
@cfunctype('icu.dll')
def u_strcpy(dst: POINTER(UInt16), src: POINTER(UInt16)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strncpy(dst: POINTER(UInt16), src: POINTER(UInt16), n: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_uastrcpy(dst: POINTER(UInt16), src: win32more.Foundation.PSTR) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_uastrncpy(dst: POINTER(UInt16), src: win32more.Foundation.PSTR, n: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_austrcpy(dst: win32more.Foundation.PSTR, src: POINTER(UInt16)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_austrncpy(dst: win32more.Foundation.PSTR, src: POINTER(UInt16), n: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_memcpy(dest: POINTER(UInt16), src: POINTER(UInt16), count: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_memmove(dest: POINTER(UInt16), src: POINTER(UInt16), count: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_memset(dest: POINTER(UInt16), c: UInt16, count: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_memcmp(buf1: POINTER(UInt16), buf2: POINTER(UInt16), count: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_memcmpCodePointOrder(s1: POINTER(UInt16), s2: POINTER(UInt16), count: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_memchr(s: POINTER(UInt16), c: UInt16, count: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_memchr32(s: POINTER(UInt16), c: Int32, count: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_memrchr(s: POINTER(UInt16), c: UInt16, count: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_memrchr32(s: POINTER(UInt16), c: Int32, count: Int32) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_unescape(src: win32more.Foundation.PSTR, dest: POINTER(UInt16), destCapacity: Int32) -> Int32: ...
@cfunctype('icu.dll')
def u_unescapeAt(charAt: win32more.Globalization.UNESCAPE_CHAR_AT, offset: POINTER(Int32), length: Int32, context: c_void_p) -> Int32: ...
@cfunctype('icu.dll')
def u_strToUpper(dest: POINTER(UInt16), destCapacity: Int32, src: POINTER(UInt16), srcLength: Int32, locale: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_strToLower(dest: POINTER(UInt16), destCapacity: Int32, src: POINTER(UInt16), srcLength: Int32, locale: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_strToTitle(dest: POINTER(UInt16), destCapacity: Int32, src: POINTER(UInt16), srcLength: Int32, titleIter: POINTER(win32more.Globalization.UBreakIterator_head), locale: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_strFoldCase(dest: POINTER(UInt16), destCapacity: Int32, src: POINTER(UInt16), srcLength: Int32, options: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_strToWCS(dest: win32more.Foundation.PWSTR, destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(UInt16), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PWSTR: ...
@cfunctype('icu.dll')
def u_strFromWCS(dest: POINTER(UInt16), destCapacity: Int32, pDestLength: POINTER(Int32), src: win32more.Foundation.PWSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strToUTF8(dest: win32more.Foundation.PSTR, destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(UInt16), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_strFromUTF8(dest: POINTER(UInt16), destCapacity: Int32, pDestLength: POINTER(Int32), src: win32more.Foundation.PSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strToUTF8WithSub(dest: win32more.Foundation.PSTR, destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(UInt16), srcLength: Int32, subchar: Int32, pNumSubstitutions: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_strFromUTF8WithSub(dest: POINTER(UInt16), destCapacity: Int32, pDestLength: POINTER(Int32), src: win32more.Foundation.PSTR, srcLength: Int32, subchar: Int32, pNumSubstitutions: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strFromUTF8Lenient(dest: POINTER(UInt16), destCapacity: Int32, pDestLength: POINTER(Int32), src: win32more.Foundation.PSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strToUTF32(dest: POINTER(Int32), destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(UInt16), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(Int32): ...
@cfunctype('icu.dll')
def u_strFromUTF32(dest: POINTER(UInt16), destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(Int32), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strToUTF32WithSub(dest: POINTER(Int32), destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(UInt16), srcLength: Int32, subchar: Int32, pNumSubstitutions: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(Int32): ...
@cfunctype('icu.dll')
def u_strFromUTF32WithSub(dest: POINTER(UInt16), destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(Int32), srcLength: Int32, subchar: Int32, pNumSubstitutions: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def u_strToJavaModifiedUTF8(dest: win32more.Foundation.PSTR, destCapacity: Int32, pDestLength: POINTER(Int32), src: POINTER(UInt16), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def u_strFromJavaModifiedUTF8WithSub(dest: POINTER(UInt16), destCapacity: Int32, pDestLength: POINTER(Int32), src: win32more.Foundation.PSTR, srcLength: Int32, subchar: Int32, pNumSubstitutions: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ucasemap_open(locale: win32more.Foundation.PSTR, options: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCaseMap_head): ...
@cfunctype('icu.dll')
def ucasemap_close(csm: POINTER(win32more.Globalization.UCaseMap_head)) -> Void: ...
@cfunctype('icu.dll')
def ucasemap_getLocale(csm: POINTER(win32more.Globalization.UCaseMap_head)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucasemap_getOptions(csm: POINTER(win32more.Globalization.UCaseMap_head)) -> UInt32: ...
@cfunctype('icu.dll')
def ucasemap_setLocale(csm: POINTER(win32more.Globalization.UCaseMap_head), locale: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucasemap_setOptions(csm: POINTER(win32more.Globalization.UCaseMap_head), options: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucasemap_getBreakIterator(csm: POINTER(win32more.Globalization.UCaseMap_head)) -> POINTER(win32more.Globalization.UBreakIterator_head): ...
@cfunctype('icu.dll')
def ucasemap_setBreakIterator(csm: POINTER(win32more.Globalization.UCaseMap_head), iterToAdopt: POINTER(win32more.Globalization.UBreakIterator_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucasemap_toTitle(csm: POINTER(win32more.Globalization.UCaseMap_head), dest: POINTER(UInt16), destCapacity: Int32, src: POINTER(UInt16), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucasemap_utf8ToLower(csm: POINTER(win32more.Globalization.UCaseMap_head), dest: win32more.Foundation.PSTR, destCapacity: Int32, src: win32more.Foundation.PSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucasemap_utf8ToUpper(csm: POINTER(win32more.Globalization.UCaseMap_head), dest: win32more.Foundation.PSTR, destCapacity: Int32, src: win32more.Foundation.PSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucasemap_utf8ToTitle(csm: POINTER(win32more.Globalization.UCaseMap_head), dest: win32more.Foundation.PSTR, destCapacity: Int32, src: win32more.Foundation.PSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucasemap_utf8FoldCase(csm: POINTER(win32more.Globalization.UCaseMap_head), dest: win32more.Foundation.PSTR, destCapacity: Int32, src: win32more.Foundation.PSTR, srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usprep_open(path: win32more.Foundation.PSTR, fileName: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UStringPrepProfile_head): ...
@cfunctype('icu.dll')
def usprep_openByType(type: win32more.Globalization.UStringPrepProfileType, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UStringPrepProfile_head): ...
@cfunctype('icu.dll')
def usprep_close(profile: POINTER(win32more.Globalization.UStringPrepProfile_head)) -> Void: ...
@cfunctype('icu.dll')
def usprep_prepare(prep: POINTER(win32more.Globalization.UStringPrepProfile_head), src: POINTER(UInt16), srcLength: Int32, dest: POINTER(UInt16), destCapacity: Int32, options: Int32, parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_openUTS46(options: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UIDNA_head): ...
@cfunctype('icu.dll')
def uidna_close(idna: POINTER(win32more.Globalization.UIDNA_head)) -> Void: ...
@cfunctype('icu.dll')
def uidna_labelToASCII(idna: POINTER(win32more.Globalization.UIDNA_head), label: POINTER(UInt16), length: Int32, dest: POINTER(UInt16), capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_labelToUnicode(idna: POINTER(win32more.Globalization.UIDNA_head), label: POINTER(UInt16), length: Int32, dest: POINTER(UInt16), capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_nameToASCII(idna: POINTER(win32more.Globalization.UIDNA_head), name: POINTER(UInt16), length: Int32, dest: POINTER(UInt16), capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_nameToUnicode(idna: POINTER(win32more.Globalization.UIDNA_head), name: POINTER(UInt16), length: Int32, dest: POINTER(UInt16), capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_labelToASCII_UTF8(idna: POINTER(win32more.Globalization.UIDNA_head), label: win32more.Foundation.PSTR, length: Int32, dest: win32more.Foundation.PSTR, capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_labelToUnicodeUTF8(idna: POINTER(win32more.Globalization.UIDNA_head), label: win32more.Foundation.PSTR, length: Int32, dest: win32more.Foundation.PSTR, capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_nameToASCII_UTF8(idna: POINTER(win32more.Globalization.UIDNA_head), name: win32more.Foundation.PSTR, length: Int32, dest: win32more.Foundation.PSTR, capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uidna_nameToUnicodeUTF8(idna: POINTER(win32more.Globalization.UIDNA_head), name: win32more.Foundation.PSTR, length: Int32, dest: win32more.Foundation.PSTR, capacity: Int32, pInfo: POINTER(win32more.Globalization.UIDNAInfo_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_open(type: win32more.Globalization.UBreakIteratorType, locale: win32more.Foundation.PSTR, text: POINTER(UInt16), textLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UBreakIterator_head): ...
@cfunctype('icu.dll')
def ubrk_openRules(rules: POINTER(UInt16), rulesLength: Int32, text: POINTER(UInt16), textLength: Int32, parseErr: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UBreakIterator_head): ...
@cfunctype('icu.dll')
def ubrk_openBinaryRules(binaryRules: c_char_p_no, rulesLength: Int32, text: POINTER(UInt16), textLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UBreakIterator_head): ...
@cfunctype('icu.dll')
def ubrk_safeClone(bi: POINTER(win32more.Globalization.UBreakIterator_head), stackBuffer: c_void_p, pBufferSize: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UBreakIterator_head): ...
@cfunctype('icu.dll')
def ubrk_close(bi: POINTER(win32more.Globalization.UBreakIterator_head)) -> Void: ...
@cfunctype('icu.dll')
def ubrk_setText(bi: POINTER(win32more.Globalization.UBreakIterator_head), text: POINTER(UInt16), textLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubrk_setUText(bi: POINTER(win32more.Globalization.UBreakIterator_head), text: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubrk_current(bi: POINTER(win32more.Globalization.UBreakIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_next(bi: POINTER(win32more.Globalization.UBreakIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_previous(bi: POINTER(win32more.Globalization.UBreakIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_first(bi: POINTER(win32more.Globalization.UBreakIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_last(bi: POINTER(win32more.Globalization.UBreakIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_preceding(bi: POINTER(win32more.Globalization.UBreakIterator_head), offset: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_following(bi: POINTER(win32more.Globalization.UBreakIterator_head), offset: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_getAvailable(index: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ubrk_countAvailable() -> Int32: ...
@cfunctype('icu.dll')
def ubrk_isBoundary(bi: POINTER(win32more.Globalization.UBreakIterator_head), offset: Int32) -> SByte: ...
@cfunctype('icu.dll')
def ubrk_getRuleStatus(bi: POINTER(win32more.Globalization.UBreakIterator_head)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_getRuleStatusVec(bi: POINTER(win32more.Globalization.UBreakIterator_head), fillInVec: POINTER(Int32), capacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ubrk_getLocaleByType(bi: POINTER(win32more.Globalization.UBreakIterator_head), type: win32more.Globalization.ULocDataLocaleType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ubrk_refreshUText(bi: POINTER(win32more.Globalization.UBreakIterator_head), text: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ubrk_getBinaryRules(bi: POINTER(win32more.Globalization.UBreakIterator_head), binaryRules: c_char_p_no, rulesCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_getDataVersion(dataVersionFillin: c_char_p_no, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_openTimeZoneIDEnumeration(zoneType: win32more.Globalization.USystemTimeZoneType, region: win32more.Foundation.PSTR, rawOffset: POINTER(Int32), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucal_openTimeZones(ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucal_openCountryTimeZones(country: win32more.Foundation.PSTR, ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucal_getDefaultTimeZone(result: POINTER(UInt16), resultCapacity: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_setDefaultTimeZone(zoneID: POINTER(UInt16), ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_getHostTimeZone(result: POINTER(UInt16), resultCapacity: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_getDSTSavings(zoneID: POINTER(UInt16), ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_getNow() -> Double: ...
@cfunctype('icu.dll')
def ucal_open(zoneID: POINTER(UInt16), len: Int32, locale: win32more.Foundation.PSTR, type: win32more.Globalization.UCalendarType, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def ucal_close(cal: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def ucal_clone(cal: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def ucal_setTimeZone(cal: POINTER(c_void_p), zoneID: POINTER(UInt16), len: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_getTimeZoneID(cal: POINTER(c_void_p), result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_getTimeZoneDisplayName(cal: POINTER(c_void_p), type: win32more.Globalization.UCalendarDisplayNameType, locale: win32more.Foundation.PSTR, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_inDaylightTime(cal: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def ucal_setGregorianChange(cal: POINTER(c_void_p), date: Double, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_getGregorianChange(cal: POINTER(c_void_p), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def ucal_getAttribute(cal: POINTER(c_void_p), attr: win32more.Globalization.UCalendarAttribute) -> Int32: ...
@cfunctype('icu.dll')
def ucal_setAttribute(cal: POINTER(c_void_p), attr: win32more.Globalization.UCalendarAttribute, newValue: Int32) -> Void: ...
@cfunctype('icu.dll')
def ucal_getAvailable(localeIndex: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucal_countAvailable() -> Int32: ...
@cfunctype('icu.dll')
def ucal_getMillis(cal: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def ucal_setMillis(cal: POINTER(c_void_p), dateTime: Double, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_setDate(cal: POINTER(c_void_p), year: Int32, month: Int32, date: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_setDateTime(cal: POINTER(c_void_p), year: Int32, month: Int32, date: Int32, hour: Int32, minute: Int32, second: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_equivalentTo(cal1: POINTER(c_void_p), cal2: POINTER(c_void_p)) -> SByte: ...
@cfunctype('icu.dll')
def ucal_add(cal: POINTER(c_void_p), field: win32more.Globalization.UCalendarDateFields, amount: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_roll(cal: POINTER(c_void_p), field: win32more.Globalization.UCalendarDateFields, amount: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucal_get(cal: POINTER(c_void_p), field: win32more.Globalization.UCalendarDateFields, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_set(cal: POINTER(c_void_p), field: win32more.Globalization.UCalendarDateFields, value: Int32) -> Void: ...
@cfunctype('icu.dll')
def ucal_isSet(cal: POINTER(c_void_p), field: win32more.Globalization.UCalendarDateFields) -> SByte: ...
@cfunctype('icu.dll')
def ucal_clearField(cal: POINTER(c_void_p), field: win32more.Globalization.UCalendarDateFields) -> Void: ...
@cfunctype('icu.dll')
def ucal_clear(calendar: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def ucal_getLimit(cal: POINTER(c_void_p), field: win32more.Globalization.UCalendarDateFields, type: win32more.Globalization.UCalendarLimitType, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_getLocaleByType(cal: POINTER(c_void_p), type: win32more.Globalization.ULocDataLocaleType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucal_getTZDataVersion(status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucal_getCanonicalTimeZoneID(id: POINTER(UInt16), len: Int32, result: POINTER(UInt16), resultCapacity: Int32, isSystemID: POINTER(SByte), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_getType(cal: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucal_getKeywordValuesForLocale(key: win32more.Foundation.PSTR, locale: win32more.Foundation.PSTR, commonlyUsed: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucal_getDayOfWeekType(cal: POINTER(c_void_p), dayOfWeek: win32more.Globalization.UCalendarDaysOfWeek, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UCalendarWeekdayType: ...
@cfunctype('icu.dll')
def ucal_getWeekendTransition(cal: POINTER(c_void_p), dayOfWeek: win32more.Globalization.UCalendarDaysOfWeek, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_isWeekend(cal: POINTER(c_void_p), date: Double, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def ucal_getFieldDifference(cal: POINTER(c_void_p), target: Double, field: win32more.Globalization.UCalendarDateFields, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_getTimeZoneTransitionDate(cal: POINTER(c_void_p), type: win32more.Globalization.UTimeZoneTransitionType, transition: POINTER(Double), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def ucal_getWindowsTimeZoneID(id: POINTER(UInt16), len: Int32, winid: POINTER(UInt16), winidCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucal_getTimeZoneIDForWindowsID(winid: POINTER(UInt16), len: Int32, region: win32more.Foundation.PSTR, id: POINTER(UInt16), idCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_open(loc: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCollator_head): ...
@cfunctype('icu.dll')
def ucol_openRules(rules: POINTER(UInt16), rulesLength: Int32, normalizationMode: win32more.Globalization.UColAttributeValue, strength: win32more.Globalization.UColAttributeValue, parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCollator_head): ...
@cfunctype('icu.dll')
def ucol_getContractionsAndExpansions(coll: POINTER(win32more.Globalization.UCollator_head), contractions: POINTER(win32more.Globalization.USet_head), expansions: POINTER(win32more.Globalization.USet_head), addPrefixes: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucol_close(coll: POINTER(win32more.Globalization.UCollator_head)) -> Void: ...
@cfunctype('icu.dll')
def ucol_strcoll(coll: POINTER(win32more.Globalization.UCollator_head), source: POINTER(UInt16), sourceLength: Int32, target: POINTER(UInt16), targetLength: Int32) -> win32more.Globalization.UCollationResult: ...
@cfunctype('icu.dll')
def ucol_strcollUTF8(coll: POINTER(win32more.Globalization.UCollator_head), source: win32more.Foundation.PSTR, sourceLength: Int32, target: win32more.Foundation.PSTR, targetLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UCollationResult: ...
@cfunctype('icu.dll')
def ucol_greater(coll: POINTER(win32more.Globalization.UCollator_head), source: POINTER(UInt16), sourceLength: Int32, target: POINTER(UInt16), targetLength: Int32) -> SByte: ...
@cfunctype('icu.dll')
def ucol_greaterOrEqual(coll: POINTER(win32more.Globalization.UCollator_head), source: POINTER(UInt16), sourceLength: Int32, target: POINTER(UInt16), targetLength: Int32) -> SByte: ...
@cfunctype('icu.dll')
def ucol_equal(coll: POINTER(win32more.Globalization.UCollator_head), source: POINTER(UInt16), sourceLength: Int32, target: POINTER(UInt16), targetLength: Int32) -> SByte: ...
@cfunctype('icu.dll')
def ucol_strcollIter(coll: POINTER(win32more.Globalization.UCollator_head), sIter: POINTER(win32more.Globalization.UCharIterator_head), tIter: POINTER(win32more.Globalization.UCharIterator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UCollationResult: ...
@cfunctype('icu.dll')
def ucol_getStrength(coll: POINTER(win32more.Globalization.UCollator_head)) -> win32more.Globalization.UColAttributeValue: ...
@cfunctype('icu.dll')
def ucol_setStrength(coll: POINTER(win32more.Globalization.UCollator_head), strength: win32more.Globalization.UColAttributeValue) -> Void: ...
@cfunctype('icu.dll')
def ucol_getReorderCodes(coll: POINTER(win32more.Globalization.UCollator_head), dest: POINTER(Int32), destCapacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_setReorderCodes(coll: POINTER(win32more.Globalization.UCollator_head), reorderCodes: POINTER(Int32), reorderCodesLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucol_getEquivalentReorderCodes(reorderCode: Int32, dest: POINTER(Int32), destCapacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_getDisplayName(objLoc: win32more.Foundation.PSTR, dispLoc: win32more.Foundation.PSTR, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_getAvailable(localeIndex: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucol_countAvailable() -> Int32: ...
@cfunctype('icu.dll')
def ucol_openAvailableLocales(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucol_getKeywords(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucol_getKeywordValues(keyword: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucol_getKeywordValuesForLocale(key: win32more.Foundation.PSTR, locale: win32more.Foundation.PSTR, commonlyUsed: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucol_getFunctionalEquivalent(result: win32more.Foundation.PSTR, resultCapacity: Int32, keyword: win32more.Foundation.PSTR, locale: win32more.Foundation.PSTR, isAvailable: POINTER(SByte), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_getRules(coll: POINTER(win32more.Globalization.UCollator_head), length: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ucol_getSortKey(coll: POINTER(win32more.Globalization.UCollator_head), source: POINTER(UInt16), sourceLength: Int32, result: c_char_p_no, resultLength: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucol_nextSortKeyPart(coll: POINTER(win32more.Globalization.UCollator_head), iter: POINTER(win32more.Globalization.UCharIterator_head), state: POINTER(UInt32), dest: c_char_p_no, count: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_getBound(source: c_char_p_no, sourceLength: Int32, boundType: win32more.Globalization.UColBoundMode, noOfLevels: UInt32, result: c_char_p_no, resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_getVersion(coll: POINTER(win32more.Globalization.UCollator_head), info: c_char_p_no) -> Void: ...
@cfunctype('icu.dll')
def ucol_getUCAVersion(coll: POINTER(win32more.Globalization.UCollator_head), info: c_char_p_no) -> Void: ...
@cfunctype('icu.dll')
def ucol_mergeSortkeys(src1: c_char_p_no, src1Length: Int32, src2: c_char_p_no, src2Length: Int32, dest: c_char_p_no, destCapacity: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucol_setAttribute(coll: POINTER(win32more.Globalization.UCollator_head), attr: win32more.Globalization.UColAttribute, value: win32more.Globalization.UColAttributeValue, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucol_getAttribute(coll: POINTER(win32more.Globalization.UCollator_head), attr: win32more.Globalization.UColAttribute, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UColAttributeValue: ...
@cfunctype('icu.dll')
def ucol_setMaxVariable(coll: POINTER(win32more.Globalization.UCollator_head), group: win32more.Globalization.UColReorderCode, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucol_getMaxVariable(coll: POINTER(win32more.Globalization.UCollator_head)) -> win32more.Globalization.UColReorderCode: ...
@cfunctype('icu.dll')
def ucol_getVariableTop(coll: POINTER(win32more.Globalization.UCollator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> UInt32: ...
@cfunctype('icu.dll')
def ucol_safeClone(coll: POINTER(win32more.Globalization.UCollator_head), stackBuffer: c_void_p, pBufferSize: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCollator_head): ...
@cfunctype('icu.dll')
def ucol_getRulesEx(coll: POINTER(win32more.Globalization.UCollator_head), delta: win32more.Globalization.UColRuleOption, buffer: POINTER(UInt16), bufferLen: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucol_getLocaleByType(coll: POINTER(win32more.Globalization.UCollator_head), type: win32more.Globalization.ULocDataLocaleType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucol_getTailoredSet(coll: POINTER(win32more.Globalization.UCollator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def ucol_cloneBinary(coll: POINTER(win32more.Globalization.UCollator_head), buffer: c_char_p_no, capacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_openBinary(bin: c_char_p_no, length: Int32, base: POINTER(win32more.Globalization.UCollator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCollator_head): ...
@cfunctype('icu.dll')
def ucol_openElements(coll: POINTER(win32more.Globalization.UCollator_head), text: POINTER(UInt16), textLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCollationElements_head): ...
@cfunctype('icu.dll')
def ucol_keyHashCode(key: c_char_p_no, length: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucol_closeElements(elems: POINTER(win32more.Globalization.UCollationElements_head)) -> Void: ...
@cfunctype('icu.dll')
def ucol_reset(elems: POINTER(win32more.Globalization.UCollationElements_head)) -> Void: ...
@cfunctype('icu.dll')
def ucol_next(elems: POINTER(win32more.Globalization.UCollationElements_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_previous(elems: POINTER(win32more.Globalization.UCollationElements_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_getMaxExpansion(elems: POINTER(win32more.Globalization.UCollationElements_head), order: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucol_setText(elems: POINTER(win32more.Globalization.UCollationElements_head), text: POINTER(UInt16), textLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucol_getOffset(elems: POINTER(win32more.Globalization.UCollationElements_head)) -> Int32: ...
@cfunctype('icu.dll')
def ucol_setOffset(elems: POINTER(win32more.Globalization.UCollationElements_head), offset: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucol_primaryOrder(order: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucol_secondaryOrder(order: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucol_tertiaryOrder(order: Int32) -> Int32: ...
@cfunctype('icu.dll')
def ucsdet_open(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCharsetDetector_head): ...
@cfunctype('icu.dll')
def ucsdet_close(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head)) -> Void: ...
@cfunctype('icu.dll')
def ucsdet_setText(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head), textIn: win32more.Foundation.PSTR, len: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucsdet_setDeclaredEncoding(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head), encoding: win32more.Foundation.PSTR, length: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucsdet_detect(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UCharsetMatch_head): ...
@cfunctype('icu.dll')
def ucsdet_detectAll(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head), matchesFound: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(POINTER(win32more.Globalization.UCharsetMatch_head)): ...
@cfunctype('icu.dll')
def ucsdet_getName(ucsm: POINTER(win32more.Globalization.UCharsetMatch_head), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucsdet_getConfidence(ucsm: POINTER(win32more.Globalization.UCharsetMatch_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucsdet_getLanguage(ucsm: POINTER(win32more.Globalization.UCharsetMatch_head), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucsdet_getUChars(ucsm: POINTER(win32more.Globalization.UCharsetMatch_head), buf: POINTER(UInt16), cap: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucsdet_getAllDetectableCharsets(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def ucsdet_isInputFilterEnabled(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head)) -> SByte: ...
@cfunctype('icu.dll')
def ucsdet_enableInputFilter(ucsd: POINTER(win32more.Globalization.UCharsetDetector_head), filter: SByte) -> SByte: ...
@cfunctype('icu.dll')
def ufieldpositer_open(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFieldPositionIterator_head): ...
@cfunctype('icu.dll')
def ufieldpositer_close(fpositer: POINTER(win32more.Globalization.UFieldPositionIterator_head)) -> Void: ...
@cfunctype('icu.dll')
def ufieldpositer_next(fpositer: POINTER(win32more.Globalization.UFieldPositionIterator_head), beginIndex: POINTER(Int32), endIndex: POINTER(Int32)) -> Int32: ...
@cfunctype('icu.dll')
def ufmt_open(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def ufmt_close(fmt: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def ufmt_getType(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UFormattableType: ...
@cfunctype('icu.dll')
def ufmt_isNumeric(fmt: POINTER(c_void_p)) -> SByte: ...
@cfunctype('icu.dll')
def ufmt_getDate(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def ufmt_getDouble(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def ufmt_getLong(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ufmt_getInt64(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def ufmt_getObject(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> c_void_p: ...
@cfunctype('icu.dll')
def ufmt_getUChars(fmt: POINTER(c_void_p), len: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ufmt_getArrayLength(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ufmt_getArrayItemByIndex(fmt: POINTER(c_void_p), n: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def ufmt_getDecNumChars(fmt: POINTER(c_void_p), len: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def ucfpos_open(ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UConstrainedFieldPosition_head): ...
@cfunctype('icu.dll')
def ucfpos_reset(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucfpos_close(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head)) -> Void: ...
@cfunctype('icu.dll')
def ucfpos_constrainCategory(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), category: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucfpos_constrainField(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), category: Int32, field: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucfpos_getCategory(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucfpos_getField(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ucfpos_getIndexes(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), pStart: POINTER(Int32), pLimit: POINTER(Int32), ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucfpos_getInt64IterationContext(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def ucfpos_setInt64IterationContext(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), context: Int64, ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ucfpos_matchesField(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), category: Int32, field: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def ucfpos_setState(ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), category: Int32, field: Int32, start: Int32, limit: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ufmtval_getString(ufmtval: POINTER(win32more.Globalization.UFormattedValue_head), pLength: POINTER(Int32), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def ufmtval_nextPosition(ufmtval: POINTER(win32more.Globalization.UFormattedValue_head), ucfpos: POINTER(win32more.Globalization.UConstrainedFieldPosition_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def udtitvfmt_open(locale: win32more.Foundation.PSTR, skeleton: POINTER(UInt16), skeletonLength: Int32, tzID: POINTER(UInt16), tzIDLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UDateIntervalFormat_head): ...
@cfunctype('icu.dll')
def udtitvfmt_close(formatter: POINTER(win32more.Globalization.UDateIntervalFormat_head)) -> Void: ...
@cfunctype('icu.dll')
def udtitvfmt_openResult(ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedDateInterval_head): ...
@cfunctype('icu.dll')
def udtitvfmt_resultAsValue(uresult: POINTER(win32more.Globalization.UFormattedDateInterval_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedValue_head): ...
@cfunctype('icu.dll')
def udtitvfmt_closeResult(uresult: POINTER(win32more.Globalization.UFormattedDateInterval_head)) -> Void: ...
@cfunctype('icu.dll')
def udtitvfmt_format(formatter: POINTER(win32more.Globalization.UDateIntervalFormat_head), fromDate: Double, toDate: Double, result: POINTER(UInt16), resultCapacity: Int32, position: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ugender_getInstance(locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UGenderInfo_head): ...
@cfunctype('icu.dll')
def ugender_getListGender(genderInfo: POINTER(win32more.Globalization.UGenderInfo_head), genders: POINTER(win32more.Globalization.UGender), size: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UGender: ...
@cfunctype('icu.dll')
def ulistfmt_open(locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UListFormatter_head): ...
@cfunctype('icu.dll')
def ulistfmt_openForType(locale: win32more.Foundation.PSTR, type: win32more.Globalization.UListFormatterType, width: win32more.Globalization.UListFormatterWidth, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UListFormatter_head): ...
@cfunctype('icu.dll')
def ulistfmt_close(listfmt: POINTER(win32more.Globalization.UListFormatter_head)) -> Void: ...
@cfunctype('icu.dll')
def ulistfmt_openResult(ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedList_head): ...
@cfunctype('icu.dll')
def ulistfmt_resultAsValue(uresult: POINTER(win32more.Globalization.UFormattedList_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedValue_head): ...
@cfunctype('icu.dll')
def ulistfmt_closeResult(uresult: POINTER(win32more.Globalization.UFormattedList_head)) -> Void: ...
@cfunctype('icu.dll')
def ulistfmt_format(listfmt: POINTER(win32more.Globalization.UListFormatter_head), strings: POINTER(POINTER(UInt16)), stringLengths: POINTER(Int32), stringCount: Int32, result: POINTER(UInt16), resultCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ulistfmt_formatStringsToResult(listfmt: POINTER(win32more.Globalization.UListFormatter_head), strings: POINTER(POINTER(UInt16)), stringLengths: POINTER(Int32), stringCount: Int32, uresult: POINTER(win32more.Globalization.UFormattedList_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ulocdata_open(localeID: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.ULocaleData_head): ...
@cfunctype('icu.dll')
def ulocdata_close(uld: POINTER(win32more.Globalization.ULocaleData_head)) -> Void: ...
@cfunctype('icu.dll')
def ulocdata_setNoSubstitute(uld: POINTER(win32more.Globalization.ULocaleData_head), setting: SByte) -> Void: ...
@cfunctype('icu.dll')
def ulocdata_getNoSubstitute(uld: POINTER(win32more.Globalization.ULocaleData_head)) -> SByte: ...
@cfunctype('icu.dll')
def ulocdata_getExemplarSet(uld: POINTER(win32more.Globalization.ULocaleData_head), fillIn: POINTER(win32more.Globalization.USet_head), options: UInt32, extype: win32more.Globalization.ULocaleDataExemplarSetType, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def ulocdata_getDelimiter(uld: POINTER(win32more.Globalization.ULocaleData_head), type: win32more.Globalization.ULocaleDataDelimiterType, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ulocdata_getMeasurementSystem(localeID: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UMeasurementSystem: ...
@cfunctype('icu.dll')
def ulocdata_getPaperSize(localeID: win32more.Foundation.PSTR, height: POINTER(Int32), width: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ulocdata_getCLDRVersion(versionArray: c_char_p_no, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ulocdata_getLocaleDisplayPattern(uld: POINTER(win32more.Globalization.ULocaleData_head), pattern: POINTER(UInt16), patternCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ulocdata_getLocaleSeparator(uld: POINTER(win32more.Globalization.ULocaleData_head), separator: POINTER(UInt16), separatorCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_formatMessage(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_vformatMessage(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, result: POINTER(UInt16), resultLength: Int32, ap: POINTER(SByte), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_parseMessage(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, source: POINTER(UInt16), sourceLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def u_vparseMessage(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, source: POINTER(UInt16), sourceLength: Int32, ap: POINTER(SByte), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def u_formatMessageWithError(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, result: POINTER(UInt16), resultLength: Int32, parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_vformatMessageWithError(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, result: POINTER(UInt16), resultLength: Int32, parseError: POINTER(win32more.Globalization.UParseError_head), ap: POINTER(SByte), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def u_parseMessageWithError(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, source: POINTER(UInt16), sourceLength: Int32, parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def u_vparseMessageWithError(locale: win32more.Foundation.PSTR, pattern: POINTER(UInt16), patternLength: Int32, source: POINTER(UInt16), sourceLength: Int32, ap: POINTER(SByte), parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def umsg_open(pattern: POINTER(UInt16), patternLength: Int32, locale: win32more.Foundation.PSTR, parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def umsg_close(format: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def umsg_clone(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> c_void_p: ...
@cfunctype('icu.dll')
def umsg_setLocale(fmt: POINTER(c_void_p), locale: win32more.Foundation.PSTR) -> Void: ...
@cfunctype('icu.dll')
def umsg_getLocale(fmt: POINTER(c_void_p)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def umsg_applyPattern(fmt: POINTER(c_void_p), pattern: POINTER(UInt16), patternLength: Int32, parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def umsg_toPattern(fmt: POINTER(c_void_p), result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def umsg_format(fmt: POINTER(c_void_p), result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def umsg_vformat(fmt: POINTER(c_void_p), result: POINTER(UInt16), resultLength: Int32, ap: POINTER(SByte), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def umsg_parse(fmt: POINTER(c_void_p), source: POINTER(UInt16), sourceLength: Int32, count: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def umsg_vparse(fmt: POINTER(c_void_p), source: POINTER(UInt16), sourceLength: Int32, count: POINTER(Int32), ap: POINTER(SByte), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def umsg_autoQuoteApostrophe(pattern: POINTER(UInt16), patternLength: Int32, dest: POINTER(UInt16), destCapacity: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_open(style: win32more.Globalization.UNumberFormatStyle, pattern: POINTER(UInt16), patternLength: Int32, locale: win32more.Foundation.PSTR, parseErr: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def unum_close(fmt: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def unum_clone(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def unum_format(fmt: POINTER(c_void_p), number: Int32, result: POINTER(UInt16), resultLength: Int32, pos: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_formatInt64(fmt: POINTER(c_void_p), number: Int64, result: POINTER(UInt16), resultLength: Int32, pos: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_formatDouble(fmt: POINTER(c_void_p), number: Double, result: POINTER(UInt16), resultLength: Int32, pos: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_formatDoubleForFields(format: POINTER(c_void_p), number: Double, result: POINTER(UInt16), resultLength: Int32, fpositer: POINTER(win32more.Globalization.UFieldPositionIterator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_formatDecimal(fmt: POINTER(c_void_p), number: win32more.Foundation.PSTR, length: Int32, result: POINTER(UInt16), resultLength: Int32, pos: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_formatDoubleCurrency(fmt: POINTER(c_void_p), number: Double, currency: POINTER(UInt16), result: POINTER(UInt16), resultLength: Int32, pos: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_formatUFormattable(fmt: POINTER(c_void_p), number: POINTER(c_void_p), result: POINTER(UInt16), resultLength: Int32, pos: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_parse(fmt: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_parseInt64(fmt: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def unum_parseDouble(fmt: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def unum_parseDecimal(fmt: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), outBuf: win32more.Foundation.PSTR, outBufLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_parseDoubleCurrency(fmt: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), currency: POINTER(UInt16), status: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def unum_parseToUFormattable(fmt: POINTER(c_void_p), result: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def unum_applyPattern(format: POINTER(c_void_p), localized: SByte, pattern: POINTER(UInt16), patternLength: Int32, parseError: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unum_getAvailable(localeIndex: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def unum_countAvailable() -> Int32: ...
@cfunctype('icu.dll')
def unum_getAttribute(fmt: POINTER(c_void_p), attr: win32more.Globalization.UNumberFormatAttribute) -> Int32: ...
@cfunctype('icu.dll')
def unum_setAttribute(fmt: POINTER(c_void_p), attr: win32more.Globalization.UNumberFormatAttribute, newValue: Int32) -> Void: ...
@cfunctype('icu.dll')
def unum_getDoubleAttribute(fmt: POINTER(c_void_p), attr: win32more.Globalization.UNumberFormatAttribute) -> Double: ...
@cfunctype('icu.dll')
def unum_setDoubleAttribute(fmt: POINTER(c_void_p), attr: win32more.Globalization.UNumberFormatAttribute, newValue: Double) -> Void: ...
@cfunctype('icu.dll')
def unum_getTextAttribute(fmt: POINTER(c_void_p), tag: win32more.Globalization.UNumberFormatTextAttribute, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_setTextAttribute(fmt: POINTER(c_void_p), tag: win32more.Globalization.UNumberFormatTextAttribute, newValue: POINTER(UInt16), newValueLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unum_toPattern(fmt: POINTER(c_void_p), isPatternLocalized: SByte, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_getSymbol(fmt: POINTER(c_void_p), symbol: win32more.Globalization.UNumberFormatSymbol, buffer: POINTER(UInt16), size: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unum_setSymbol(fmt: POINTER(c_void_p), symbol: win32more.Globalization.UNumberFormatSymbol, value: POINTER(UInt16), length: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unum_getLocaleByType(fmt: POINTER(c_void_p), type: win32more.Globalization.ULocDataLocaleType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def unum_setContext(fmt: POINTER(c_void_p), value: win32more.Globalization.UDisplayContext, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unum_getContext(fmt: POINTER(c_void_p), type: win32more.Globalization.UDisplayContextType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UDisplayContext: ...
@cfunctype('icu.dll')
def udat_toCalendarDateField(field: win32more.Globalization.UDateFormatField) -> win32more.Globalization.UCalendarDateFields: ...
@cfunctype('icu.dll')
def udat_open(timeStyle: win32more.Globalization.UDateFormatStyle, dateStyle: win32more.Globalization.UDateFormatStyle, locale: win32more.Foundation.PSTR, tzID: POINTER(UInt16), tzIDLength: Int32, pattern: POINTER(UInt16), patternLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udat_close(format: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def udat_getBooleanAttribute(fmt: POINTER(c_void_p), attr: win32more.Globalization.UDateFormatBooleanAttribute, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def udat_setBooleanAttribute(fmt: POINTER(c_void_p), attr: win32more.Globalization.UDateFormatBooleanAttribute, newValue: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def udat_clone(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udat_format(format: POINTER(c_void_p), dateToFormat: Double, result: POINTER(UInt16), resultLength: Int32, position: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udat_formatCalendar(format: POINTER(c_void_p), calendar: POINTER(c_void_p), result: POINTER(UInt16), capacity: Int32, position: POINTER(win32more.Globalization.UFieldPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udat_formatForFields(format: POINTER(c_void_p), dateToFormat: Double, result: POINTER(UInt16), resultLength: Int32, fpositer: POINTER(win32more.Globalization.UFieldPositionIterator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udat_formatCalendarForFields(format: POINTER(c_void_p), calendar: POINTER(c_void_p), result: POINTER(UInt16), capacity: Int32, fpositer: POINTER(win32more.Globalization.UFieldPositionIterator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udat_parse(format: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def udat_parseCalendar(format: POINTER(c_void_p), calendar: POINTER(c_void_p), text: POINTER(UInt16), textLength: Int32, parsePos: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def udat_isLenient(fmt: POINTER(c_void_p)) -> SByte: ...
@cfunctype('icu.dll')
def udat_setLenient(fmt: POINTER(c_void_p), isLenient: SByte) -> Void: ...
@cfunctype('icu.dll')
def udat_getCalendar(fmt: POINTER(c_void_p)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udat_setCalendar(fmt: POINTER(c_void_p), calendarToSet: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def udat_getNumberFormat(fmt: POINTER(c_void_p)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udat_getNumberFormatForField(fmt: POINTER(c_void_p), field: UInt16) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udat_adoptNumberFormatForFields(fmt: POINTER(c_void_p), fields: POINTER(UInt16), numberFormatToSet: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def udat_setNumberFormat(fmt: POINTER(c_void_p), numberFormatToSet: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def udat_adoptNumberFormat(fmt: POINTER(c_void_p), numberFormatToAdopt: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def udat_getAvailable(localeIndex: Int32) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def udat_countAvailable() -> Int32: ...
@cfunctype('icu.dll')
def udat_get2DigitYearStart(fmt: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Double: ...
@cfunctype('icu.dll')
def udat_set2DigitYearStart(fmt: POINTER(c_void_p), d: Double, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def udat_toPattern(fmt: POINTER(c_void_p), localized: SByte, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udat_applyPattern(format: POINTER(c_void_p), localized: SByte, pattern: POINTER(UInt16), patternLength: Int32) -> Void: ...
@cfunctype('icu.dll')
def udat_getSymbols(fmt: POINTER(c_void_p), type: win32more.Globalization.UDateFormatSymbolType, symbolIndex: Int32, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udat_countSymbols(fmt: POINTER(c_void_p), type: win32more.Globalization.UDateFormatSymbolType) -> Int32: ...
@cfunctype('icu.dll')
def udat_setSymbols(format: POINTER(c_void_p), type: win32more.Globalization.UDateFormatSymbolType, symbolIndex: Int32, value: POINTER(UInt16), valueLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def udat_getLocaleByType(fmt: POINTER(c_void_p), type: win32more.Globalization.ULocDataLocaleType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def udat_setContext(fmt: POINTER(c_void_p), value: win32more.Globalization.UDisplayContext, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def udat_getContext(fmt: POINTER(c_void_p), type: win32more.Globalization.UDisplayContextType, status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UDisplayContext: ...
@cfunctype('icu.dll')
def udatpg_open(locale: win32more.Foundation.PSTR, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udatpg_openEmpty(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udatpg_close(dtpg: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def udatpg_clone(dtpg: POINTER(c_void_p), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def udatpg_getBestPattern(dtpg: POINTER(c_void_p), skeleton: POINTER(UInt16), length: Int32, bestPattern: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udatpg_getBestPatternWithOptions(dtpg: POINTER(c_void_p), skeleton: POINTER(UInt16), length: Int32, options: win32more.Globalization.UDateTimePatternMatchOptions, bestPattern: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udatpg_getSkeleton(unusedDtpg: POINTER(c_void_p), pattern: POINTER(UInt16), length: Int32, skeleton: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udatpg_getBaseSkeleton(unusedDtpg: POINTER(c_void_p), pattern: POINTER(UInt16), length: Int32, baseSkeleton: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udatpg_addPattern(dtpg: POINTER(c_void_p), pattern: POINTER(UInt16), patternLength: Int32, override: SByte, conflictingPattern: POINTER(UInt16), capacity: Int32, pLength: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.UDateTimePatternConflict: ...
@cfunctype('icu.dll')
def udatpg_setAppendItemFormat(dtpg: POINTER(c_void_p), field: win32more.Globalization.UDateTimePatternField, value: POINTER(UInt16), length: Int32) -> Void: ...
@cfunctype('icu.dll')
def udatpg_getAppendItemFormat(dtpg: POINTER(c_void_p), field: win32more.Globalization.UDateTimePatternField, pLength: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def udatpg_setAppendItemName(dtpg: POINTER(c_void_p), field: win32more.Globalization.UDateTimePatternField, value: POINTER(UInt16), length: Int32) -> Void: ...
@cfunctype('icu.dll')
def udatpg_getAppendItemName(dtpg: POINTER(c_void_p), field: win32more.Globalization.UDateTimePatternField, pLength: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def udatpg_getFieldDisplayName(dtpg: POINTER(c_void_p), field: win32more.Globalization.UDateTimePatternField, width: win32more.Globalization.UDateTimePGDisplayWidth, fieldName: POINTER(UInt16), capacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udatpg_setDateTimeFormat(dtpg: POINTER(c_void_p), dtFormat: POINTER(UInt16), length: Int32) -> Void: ...
@cfunctype('icu.dll')
def udatpg_getDateTimeFormat(dtpg: POINTER(c_void_p), pLength: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def udatpg_setDecimal(dtpg: POINTER(c_void_p), decimal: POINTER(UInt16), length: Int32) -> Void: ...
@cfunctype('icu.dll')
def udatpg_getDecimal(dtpg: POINTER(c_void_p), pLength: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def udatpg_replaceFieldTypes(dtpg: POINTER(c_void_p), pattern: POINTER(UInt16), patternLength: Int32, skeleton: POINTER(UInt16), skeletonLength: Int32, dest: POINTER(UInt16), destCapacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udatpg_replaceFieldTypesWithOptions(dtpg: POINTER(c_void_p), pattern: POINTER(UInt16), patternLength: Int32, skeleton: POINTER(UInt16), skeletonLength: Int32, options: win32more.Globalization.UDateTimePatternMatchOptions, dest: POINTER(UInt16), destCapacity: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def udatpg_openSkeletons(dtpg: POINTER(c_void_p), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def udatpg_openBaseSkeletons(dtpg: POINTER(c_void_p), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def udatpg_getPatternForSkeleton(dtpg: POINTER(c_void_p), skeleton: POINTER(UInt16), skeletonLength: Int32, pLength: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def unumf_openForSkeletonAndLocale(skeleton: POINTER(UInt16), skeletonLen: Int32, locale: win32more.Foundation.PSTR, ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNumberFormatter_head): ...
@cfunctype('icu.dll')
def unumf_openForSkeletonAndLocaleWithError(skeleton: POINTER(UInt16), skeletonLen: Int32, locale: win32more.Foundation.PSTR, perror: POINTER(win32more.Globalization.UParseError_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNumberFormatter_head): ...
@cfunctype('icu.dll')
def unumf_openResult(ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedNumber_head): ...
@cfunctype('icu.dll')
def unumf_formatInt(uformatter: POINTER(win32more.Globalization.UNumberFormatter_head), value: Int64, uresult: POINTER(win32more.Globalization.UFormattedNumber_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unumf_formatDouble(uformatter: POINTER(win32more.Globalization.UNumberFormatter_head), value: Double, uresult: POINTER(win32more.Globalization.UFormattedNumber_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unumf_formatDecimal(uformatter: POINTER(win32more.Globalization.UNumberFormatter_head), value: win32more.Foundation.PSTR, valueLen: Int32, uresult: POINTER(win32more.Globalization.UFormattedNumber_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unumf_resultAsValue(uresult: POINTER(win32more.Globalization.UFormattedNumber_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedValue_head): ...
@cfunctype('icu.dll')
def unumf_resultToString(uresult: POINTER(win32more.Globalization.UFormattedNumber_head), buffer: POINTER(UInt16), bufferCapacity: Int32, ec: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def unumf_resultNextFieldPosition(uresult: POINTER(win32more.Globalization.UFormattedNumber_head), ufpos: POINTER(win32more.Globalization.UFieldPosition_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def unumf_resultGetAllFieldPositions(uresult: POINTER(win32more.Globalization.UFormattedNumber_head), ufpositer: POINTER(win32more.Globalization.UFieldPositionIterator_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def unumf_close(uformatter: POINTER(win32more.Globalization.UNumberFormatter_head)) -> Void: ...
@cfunctype('icu.dll')
def unumf_closeResult(uresult: POINTER(win32more.Globalization.UFormattedNumber_head)) -> Void: ...
@cfunctype('icu.dll')
def unumsys_open(locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNumberingSystem_head): ...
@cfunctype('icu.dll')
def unumsys_openByName(name: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UNumberingSystem_head): ...
@cfunctype('icu.dll')
def unumsys_close(unumsys: POINTER(win32more.Globalization.UNumberingSystem_head)) -> Void: ...
@cfunctype('icu.dll')
def unumsys_openAvailableNames(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def unumsys_getName(unumsys: POINTER(win32more.Globalization.UNumberingSystem_head)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def unumsys_isAlgorithmic(unumsys: POINTER(win32more.Globalization.UNumberingSystem_head)) -> SByte: ...
@cfunctype('icu.dll')
def unumsys_getRadix(unumsys: POINTER(win32more.Globalization.UNumberingSystem_head)) -> Int32: ...
@cfunctype('icu.dll')
def unumsys_getDescription(unumsys: POINTER(win32more.Globalization.UNumberingSystem_head), result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uplrules_open(locale: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UPluralRules_head): ...
@cfunctype('icu.dll')
def uplrules_openForType(locale: win32more.Foundation.PSTR, type: win32more.Globalization.UPluralType, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UPluralRules_head): ...
@cfunctype('icu.dll')
def uplrules_close(uplrules: POINTER(win32more.Globalization.UPluralRules_head)) -> Void: ...
@cfunctype('icu.dll')
def uplrules_select(uplrules: POINTER(win32more.Globalization.UPluralRules_head), number: Double, keyword: POINTER(UInt16), capacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uplrules_selectFormatted(uplrules: POINTER(win32more.Globalization.UPluralRules_head), number: POINTER(win32more.Globalization.UFormattedNumber_head), keyword: POINTER(UInt16), capacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uplrules_getKeywords(uplrules: POINTER(win32more.Globalization.UPluralRules_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uregex_open(pattern: POINTER(UInt16), patternLength: Int32, flags: UInt32, pe: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.URegularExpression_head): ...
@cfunctype('icu.dll')
def uregex_openUText(pattern: POINTER(win32more.Globalization.UText_head), flags: UInt32, pe: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.URegularExpression_head): ...
@cfunctype('icu.dll')
def uregex_openC(pattern: win32more.Foundation.PSTR, flags: UInt32, pe: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.URegularExpression_head): ...
@cfunctype('icu.dll')
def uregex_close(regexp: POINTER(win32more.Globalization.URegularExpression_head)) -> Void: ...
@cfunctype('icu.dll')
def uregex_clone(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.URegularExpression_head): ...
@cfunctype('icu.dll')
def uregex_pattern(regexp: POINTER(win32more.Globalization.URegularExpression_head), patLength: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def uregex_patternUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def uregex_flags(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_setText(regexp: POINTER(win32more.Globalization.URegularExpression_head), text: POINTER(UInt16), textLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_setUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), text: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_getText(regexp: POINTER(win32more.Globalization.URegularExpression_head), textLength: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def uregex_getUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), dest: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def uregex_refreshUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), text: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_matches(regexp: POINTER(win32more.Globalization.URegularExpression_head), startIndex: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_matches64(regexp: POINTER(win32more.Globalization.URegularExpression_head), startIndex: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_lookingAt(regexp: POINTER(win32more.Globalization.URegularExpression_head), startIndex: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_lookingAt64(regexp: POINTER(win32more.Globalization.URegularExpression_head), startIndex: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_find(regexp: POINTER(win32more.Globalization.URegularExpression_head), startIndex: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_find64(regexp: POINTER(win32more.Globalization.URegularExpression_head), startIndex: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_findNext(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_groupCount(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_groupNumberFromName(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupName: POINTER(UInt16), nameLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_groupNumberFromCName(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupName: win32more.Foundation.PSTR, nameLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_group(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupNum: Int32, dest: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_groupUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupNum: Int32, dest: POINTER(win32more.Globalization.UText_head), groupLength: POINTER(Int64), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def uregex_start(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupNum: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_start64(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupNum: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def uregex_end(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupNum: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_end64(regexp: POINTER(win32more.Globalization.URegularExpression_head), groupNum: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def uregex_reset(regexp: POINTER(win32more.Globalization.URegularExpression_head), index: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_reset64(regexp: POINTER(win32more.Globalization.URegularExpression_head), index: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_setRegion(regexp: POINTER(win32more.Globalization.URegularExpression_head), regionStart: Int32, regionLimit: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_setRegion64(regexp: POINTER(win32more.Globalization.URegularExpression_head), regionStart: Int64, regionLimit: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_setRegionAndStart(regexp: POINTER(win32more.Globalization.URegularExpression_head), regionStart: Int64, regionLimit: Int64, startIndex: Int64, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_regionStart(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_regionStart64(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def uregex_regionEnd(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_regionEnd64(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def uregex_hasTransparentBounds(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_useTransparentBounds(regexp: POINTER(win32more.Globalization.URegularExpression_head), b: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_hasAnchoringBounds(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_useAnchoringBounds(regexp: POINTER(win32more.Globalization.URegularExpression_head), b: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_hitEnd(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_requireEnd(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> SByte: ...
@cfunctype('icu.dll')
def uregex_replaceAll(regexp: POINTER(win32more.Globalization.URegularExpression_head), replacementText: POINTER(UInt16), replacementLength: Int32, destBuf: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_replaceAllUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), replacement: POINTER(win32more.Globalization.UText_head), dest: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def uregex_replaceFirst(regexp: POINTER(win32more.Globalization.URegularExpression_head), replacementText: POINTER(UInt16), replacementLength: Int32, destBuf: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_replaceFirstUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), replacement: POINTER(win32more.Globalization.UText_head), dest: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def uregex_appendReplacement(regexp: POINTER(win32more.Globalization.URegularExpression_head), replacementText: POINTER(UInt16), replacementLength: Int32, destBuf: POINTER(POINTER(UInt16)), destCapacity: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_appendReplacementUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), replacementText: POINTER(win32more.Globalization.UText_head), dest: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_appendTail(regexp: POINTER(win32more.Globalization.URegularExpression_head), destBuf: POINTER(POINTER(UInt16)), destCapacity: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_appendTailUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), dest: POINTER(win32more.Globalization.UText_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype('icu.dll')
def uregex_split(regexp: POINTER(win32more.Globalization.URegularExpression_head), destBuf: POINTER(UInt16), destCapacity: Int32, requiredCapacity: POINTER(Int32), destFields: POINTER(POINTER(UInt16)), destFieldsCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_splitUText(regexp: POINTER(win32more.Globalization.URegularExpression_head), destFields: POINTER(POINTER(win32more.Globalization.UText_head)), destFieldsCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_setTimeLimit(regexp: POINTER(win32more.Globalization.URegularExpression_head), limit: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_getTimeLimit(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_setStackLimit(regexp: POINTER(win32more.Globalization.URegularExpression_head), limit: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_getStackLimit(regexp: POINTER(win32more.Globalization.URegularExpression_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uregex_setMatchCallback(regexp: POINTER(win32more.Globalization.URegularExpression_head), callback: win32more.Globalization.URegexMatchCallback, context: c_void_p, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_getMatchCallback(regexp: POINTER(win32more.Globalization.URegularExpression_head), callback: POINTER(win32more.Globalization.URegexMatchCallback), context: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_setFindProgressCallback(regexp: POINTER(win32more.Globalization.URegularExpression_head), callback: win32more.Globalization.URegexFindProgressCallback, context: c_void_p, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregex_getFindProgressCallback(regexp: POINTER(win32more.Globalization.URegularExpression_head), callback: POINTER(win32more.Globalization.URegexFindProgressCallback), context: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uregion_getRegionFromCode(regionCode: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.URegion_head): ...
@cfunctype('icu.dll')
def uregion_getRegionFromNumericCode(code: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.URegion_head): ...
@cfunctype('icu.dll')
def uregion_getAvailable(type: win32more.Globalization.URegionType, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uregion_areEqual(uregion: POINTER(win32more.Globalization.URegion_head), otherRegion: POINTER(win32more.Globalization.URegion_head)) -> SByte: ...
@cfunctype('icu.dll')
def uregion_getContainingRegion(uregion: POINTER(win32more.Globalization.URegion_head)) -> POINTER(win32more.Globalization.URegion_head): ...
@cfunctype('icu.dll')
def uregion_getContainingRegionOfType(uregion: POINTER(win32more.Globalization.URegion_head), type: win32more.Globalization.URegionType) -> POINTER(win32more.Globalization.URegion_head): ...
@cfunctype('icu.dll')
def uregion_getContainedRegions(uregion: POINTER(win32more.Globalization.URegion_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uregion_getContainedRegionsOfType(uregion: POINTER(win32more.Globalization.URegion_head), type: win32more.Globalization.URegionType, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uregion_contains(uregion: POINTER(win32more.Globalization.URegion_head), otherRegion: POINTER(win32more.Globalization.URegion_head)) -> SByte: ...
@cfunctype('icu.dll')
def uregion_getPreferredValues(uregion: POINTER(win32more.Globalization.URegion_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def uregion_getRegionCode(uregion: POINTER(win32more.Globalization.URegion_head)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uregion_getNumericCode(uregion: POINTER(win32more.Globalization.URegion_head)) -> Int32: ...
@cfunctype('icu.dll')
def uregion_getType(uregion: POINTER(win32more.Globalization.URegion_head)) -> win32more.Globalization.URegionType: ...
@cfunctype('icu.dll')
def ureldatefmt_open(locale: win32more.Foundation.PSTR, nfToAdopt: POINTER(c_void_p), width: win32more.Globalization.UDateRelativeDateTimeFormatterStyle, capitalizationContext: win32more.Globalization.UDisplayContext, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.URelativeDateTimeFormatter_head): ...
@cfunctype('icu.dll')
def ureldatefmt_close(reldatefmt: POINTER(win32more.Globalization.URelativeDateTimeFormatter_head)) -> Void: ...
@cfunctype('icu.dll')
def ureldatefmt_openResult(ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedRelativeDateTime_head): ...
@cfunctype('icu.dll')
def ureldatefmt_resultAsValue(ufrdt: POINTER(win32more.Globalization.UFormattedRelativeDateTime_head), ec: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UFormattedValue_head): ...
@cfunctype('icu.dll')
def ureldatefmt_closeResult(ufrdt: POINTER(win32more.Globalization.UFormattedRelativeDateTime_head)) -> Void: ...
@cfunctype('icu.dll')
def ureldatefmt_formatNumeric(reldatefmt: POINTER(win32more.Globalization.URelativeDateTimeFormatter_head), offset: Double, unit: win32more.Globalization.URelativeDateTimeUnit, result: POINTER(UInt16), resultCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ureldatefmt_formatNumericToResult(reldatefmt: POINTER(win32more.Globalization.URelativeDateTimeFormatter_head), offset: Double, unit: win32more.Globalization.URelativeDateTimeUnit, result: POINTER(win32more.Globalization.UFormattedRelativeDateTime_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ureldatefmt_format(reldatefmt: POINTER(win32more.Globalization.URelativeDateTimeFormatter_head), offset: Double, unit: win32more.Globalization.URelativeDateTimeUnit, result: POINTER(UInt16), resultCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def ureldatefmt_formatToResult(reldatefmt: POINTER(win32more.Globalization.URelativeDateTimeFormatter_head), offset: Double, unit: win32more.Globalization.URelativeDateTimeUnit, result: POINTER(win32more.Globalization.UFormattedRelativeDateTime_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def ureldatefmt_combineDateAndTime(reldatefmt: POINTER(win32more.Globalization.URelativeDateTimeFormatter_head), relativeDateString: POINTER(UInt16), relativeDateStringLen: Int32, timeString: POINTER(UInt16), timeStringLen: Int32, result: POINTER(UInt16), resultCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_open(pattern: POINTER(UInt16), patternlength: Int32, text: POINTER(UInt16), textlength: Int32, locale: win32more.Foundation.PSTR, breakiter: POINTER(win32more.Globalization.UBreakIterator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UStringSearch_head): ...
@cfunctype('icu.dll')
def usearch_openFromCollator(pattern: POINTER(UInt16), patternlength: Int32, text: POINTER(UInt16), textlength: Int32, collator: POINTER(win32more.Globalization.UCollator_head), breakiter: POINTER(win32more.Globalization.UBreakIterator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UStringSearch_head): ...
@cfunctype('icu.dll')
def usearch_close(searchiter: POINTER(win32more.Globalization.UStringSearch_head)) -> Void: ...
@cfunctype('icu.dll')
def usearch_setOffset(strsrch: POINTER(win32more.Globalization.UStringSearch_head), position: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def usearch_getOffset(strsrch: POINTER(win32more.Globalization.UStringSearch_head)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_setAttribute(strsrch: POINTER(win32more.Globalization.UStringSearch_head), attribute: win32more.Globalization.USearchAttribute, value: win32more.Globalization.USearchAttributeValue, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def usearch_getAttribute(strsrch: POINTER(win32more.Globalization.UStringSearch_head), attribute: win32more.Globalization.USearchAttribute) -> win32more.Globalization.USearchAttributeValue: ...
@cfunctype('icu.dll')
def usearch_getMatchedStart(strsrch: POINTER(win32more.Globalization.UStringSearch_head)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_getMatchedLength(strsrch: POINTER(win32more.Globalization.UStringSearch_head)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_getMatchedText(strsrch: POINTER(win32more.Globalization.UStringSearch_head), result: POINTER(UInt16), resultCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_setBreakIterator(strsrch: POINTER(win32more.Globalization.UStringSearch_head), breakiter: POINTER(win32more.Globalization.UBreakIterator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def usearch_getBreakIterator(strsrch: POINTER(win32more.Globalization.UStringSearch_head)) -> POINTER(win32more.Globalization.UBreakIterator_head): ...
@cfunctype('icu.dll')
def usearch_setText(strsrch: POINTER(win32more.Globalization.UStringSearch_head), text: POINTER(UInt16), textlength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def usearch_getText(strsrch: POINTER(win32more.Globalization.UStringSearch_head), length: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def usearch_getCollator(strsrch: POINTER(win32more.Globalization.UStringSearch_head)) -> POINTER(win32more.Globalization.UCollator_head): ...
@cfunctype('icu.dll')
def usearch_setCollator(strsrch: POINTER(win32more.Globalization.UStringSearch_head), collator: POINTER(win32more.Globalization.UCollator_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def usearch_setPattern(strsrch: POINTER(win32more.Globalization.UStringSearch_head), pattern: POINTER(UInt16), patternlength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def usearch_getPattern(strsrch: POINTER(win32more.Globalization.UStringSearch_head), length: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def usearch_first(strsrch: POINTER(win32more.Globalization.UStringSearch_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_following(strsrch: POINTER(win32more.Globalization.UStringSearch_head), position: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_last(strsrch: POINTER(win32more.Globalization.UStringSearch_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_preceding(strsrch: POINTER(win32more.Globalization.UStringSearch_head), position: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_next(strsrch: POINTER(win32more.Globalization.UStringSearch_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_previous(strsrch: POINTER(win32more.Globalization.UStringSearch_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def usearch_reset(strsrch: POINTER(win32more.Globalization.UStringSearch_head)) -> Void: ...
@cfunctype('icu.dll')
def uspoof_open(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USpoofChecker_head): ...
@cfunctype('icu.dll')
def uspoof_openFromSerialized(data: c_void_p, length: Int32, pActualLength: POINTER(Int32), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USpoofChecker_head): ...
@cfunctype('icu.dll')
def uspoof_openFromSource(confusables: win32more.Foundation.PSTR, confusablesLen: Int32, confusablesWholeScript: win32more.Foundation.PSTR, confusablesWholeScriptLen: Int32, errType: POINTER(Int32), pe: POINTER(win32more.Globalization.UParseError_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USpoofChecker_head): ...
@cfunctype('icu.dll')
def uspoof_close(sc: POINTER(win32more.Globalization.USpoofChecker_head)) -> Void: ...
@cfunctype('icu.dll')
def uspoof_clone(sc: POINTER(win32more.Globalization.USpoofChecker_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USpoofChecker_head): ...
@cfunctype('icu.dll')
def uspoof_setChecks(sc: POINTER(win32more.Globalization.USpoofChecker_head), checks: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uspoof_getChecks(sc: POINTER(win32more.Globalization.USpoofChecker_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_setRestrictionLevel(sc: POINTER(win32more.Globalization.USpoofChecker_head), restrictionLevel: win32more.Globalization.URestrictionLevel) -> Void: ...
@cfunctype('icu.dll')
def uspoof_getRestrictionLevel(sc: POINTER(win32more.Globalization.USpoofChecker_head)) -> win32more.Globalization.URestrictionLevel: ...
@cfunctype('icu.dll')
def uspoof_setAllowedLocales(sc: POINTER(win32more.Globalization.USpoofChecker_head), localesList: win32more.Foundation.PSTR, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uspoof_getAllowedLocales(sc: POINTER(win32more.Globalization.USpoofChecker_head), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Foundation.PSTR: ...
@cfunctype('icu.dll')
def uspoof_setAllowedChars(sc: POINTER(win32more.Globalization.USpoofChecker_head), chars: POINTER(win32more.Globalization.USet_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def uspoof_getAllowedChars(sc: POINTER(win32more.Globalization.USpoofChecker_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uspoof_check(sc: POINTER(win32more.Globalization.USpoofChecker_head), id: POINTER(UInt16), length: Int32, position: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_checkUTF8(sc: POINTER(win32more.Globalization.USpoofChecker_head), id: win32more.Foundation.PSTR, length: Int32, position: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_check2(sc: POINTER(win32more.Globalization.USpoofChecker_head), id: POINTER(UInt16), length: Int32, checkResult: POINTER(win32more.Globalization.USpoofCheckResult_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_check2UTF8(sc: POINTER(win32more.Globalization.USpoofChecker_head), id: win32more.Foundation.PSTR, length: Int32, checkResult: POINTER(win32more.Globalization.USpoofCheckResult_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_openCheckResult(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USpoofCheckResult_head): ...
@cfunctype('icu.dll')
def uspoof_closeCheckResult(checkResult: POINTER(win32more.Globalization.USpoofCheckResult_head)) -> Void: ...
@cfunctype('icu.dll')
def uspoof_getCheckResultChecks(checkResult: POINTER(win32more.Globalization.USpoofCheckResult_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_getCheckResultRestrictionLevel(checkResult: POINTER(win32more.Globalization.USpoofCheckResult_head), status: POINTER(win32more.Globalization.UErrorCode)) -> win32more.Globalization.URestrictionLevel: ...
@cfunctype('icu.dll')
def uspoof_getCheckResultNumerics(checkResult: POINTER(win32more.Globalization.USpoofCheckResult_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uspoof_areConfusable(sc: POINTER(win32more.Globalization.USpoofChecker_head), id1: POINTER(UInt16), length1: Int32, id2: POINTER(UInt16), length2: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_areConfusableUTF8(sc: POINTER(win32more.Globalization.USpoofChecker_head), id1: win32more.Foundation.PSTR, length1: Int32, id2: win32more.Foundation.PSTR, length2: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_getSkeleton(sc: POINTER(win32more.Globalization.USpoofChecker_head), type: UInt32, id: POINTER(UInt16), length: Int32, dest: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_getSkeletonUTF8(sc: POINTER(win32more.Globalization.USpoofChecker_head), type: UInt32, id: win32more.Foundation.PSTR, length: Int32, dest: win32more.Foundation.PSTR, destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def uspoof_getInclusionSet(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uspoof_getRecommendedSet(status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@cfunctype('icu.dll')
def uspoof_serialize(sc: POINTER(win32more.Globalization.USpoofChecker_head), data: c_void_p, capacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def utmscale_getTimeScaleValue(timeScale: win32more.Globalization.UDateTimeScale, value: win32more.Globalization.UTimeScaleValue, status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def utmscale_fromInt64(otherTime: Int64, timeScale: win32more.Globalization.UDateTimeScale, status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def utmscale_toInt64(universalTime: Int64, timeScale: win32more.Globalization.UDateTimeScale, status: POINTER(win32more.Globalization.UErrorCode)) -> Int64: ...
@cfunctype('icu.dll')
def utrans_openU(id: POINTER(UInt16), idLength: Int32, dir: win32more.Globalization.UTransDirection, rules: POINTER(UInt16), rulesLength: Int32, parseError: POINTER(win32more.Globalization.UParseError_head), pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def utrans_openInverse(trans: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def utrans_clone(trans: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(c_void_p): ...
@cfunctype('icu.dll')
def utrans_close(trans: POINTER(c_void_p)) -> Void: ...
@cfunctype('icu.dll')
def utrans_getUnicodeID(trans: POINTER(c_void_p), resultLength: POINTER(Int32)) -> POINTER(UInt16): ...
@cfunctype('icu.dll')
def utrans_register(adoptedTrans: POINTER(c_void_p), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def utrans_unregisterID(id: POINTER(UInt16), idLength: Int32) -> Void: ...
@cfunctype('icu.dll')
def utrans_setFilter(trans: POINTER(c_void_p), filterPattern: POINTER(UInt16), filterPatternLen: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def utrans_countAvailableIDs() -> Int32: ...
@cfunctype('icu.dll')
def utrans_openIDs(pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UEnumeration_head): ...
@cfunctype('icu.dll')
def utrans_trans(trans: POINTER(c_void_p), rep: POINTER(c_void_p), repFunc: POINTER(win32more.Globalization.UReplaceableCallbacks_head), start: Int32, limit: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def utrans_transIncremental(trans: POINTER(c_void_p), rep: POINTER(c_void_p), repFunc: POINTER(win32more.Globalization.UReplaceableCallbacks_head), pos: POINTER(win32more.Globalization.UTransPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def utrans_transUChars(trans: POINTER(c_void_p), text: POINTER(UInt16), textLength: POINTER(Int32), textCapacity: Int32, start: Int32, limit: POINTER(Int32), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def utrans_transIncrementalUChars(trans: POINTER(c_void_p), text: POINTER(UInt16), textLength: POINTER(Int32), textCapacity: Int32, pos: POINTER(win32more.Globalization.UTransPosition_head), status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype('icu.dll')
def utrans_toRules(trans: POINTER(c_void_p), escapeUnprintable: SByte, result: POINTER(UInt16), resultLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
@cfunctype('icu.dll')
def utrans_getSourceSet(trans: POINTER(c_void_p), ignoreFilter: SByte, fillIn: POINTER(win32more.Globalization.USet_head), status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.USet_head): ...
@winfunctype('bcp47mrm.dll')
def GetDistanceOfClosestLanguageInList(pszLanguage: win32more.Foundation.PWSTR, pszLanguagesList: win32more.Foundation.PWSTR, wchListDelimiter: Char, pClosestDistance: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
@winfunctype('bcp47mrm.dll')
def IsWellFormedTag(pszTag: win32more.Foundation.PWSTR) -> Byte: ...
@winfunctype('KERNEL32.dll')
def FindStringOrdinal(dwFindStringOrdinalFlags: UInt32, lpStringSource: win32more.Foundation.PWSTR, cchSource: Int32, lpStringValue: win32more.Foundation.PWSTR, cchValue: Int32, bIgnoreCase: win32more.Foundation.BOOL) -> Int32: ...
@winfunctype('KERNEL32.dll')
def lstrcmpA(lpString1: win32more.Foundation.PSTR, lpString2: win32more.Foundation.PSTR) -> Int32: ...
@winfunctype('KERNEL32.dll')
def lstrcmpW(lpString1: win32more.Foundation.PWSTR, lpString2: win32more.Foundation.PWSTR) -> Int32: ...
@winfunctype('KERNEL32.dll')
def lstrcmpiA(lpString1: win32more.Foundation.PSTR, lpString2: win32more.Foundation.PSTR) -> Int32: ...
@winfunctype('KERNEL32.dll')
def lstrcmpiW(lpString1: win32more.Foundation.PWSTR, lpString2: win32more.Foundation.PWSTR) -> Int32: ...
@winfunctype('KERNEL32.dll')
def lstrcpynA(lpString1: win32more.Foundation.PSTR, lpString2: win32more.Foundation.PSTR, iMaxLength: Int32) -> win32more.Foundation.PSTR: ...
@winfunctype('KERNEL32.dll')
def lstrcpynW(lpString1: win32more.Foundation.PWSTR, lpString2: win32more.Foundation.PWSTR, iMaxLength: Int32) -> win32more.Foundation.PWSTR: ...
@winfunctype('KERNEL32.dll')
def lstrcpyA(lpString1: win32more.Foundation.PSTR, lpString2: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@winfunctype('KERNEL32.dll')
def lstrcpyW(lpString1: win32more.Foundation.PWSTR, lpString2: win32more.Foundation.PWSTR) -> win32more.Foundation.PWSTR: ...
@winfunctype('KERNEL32.dll')
def lstrcatA(lpString1: win32more.Foundation.PSTR, lpString2: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@winfunctype('KERNEL32.dll')
def lstrcatW(lpString1: win32more.Foundation.PWSTR, lpString2: win32more.Foundation.PWSTR) -> win32more.Foundation.PWSTR: ...
@winfunctype('KERNEL32.dll')
def lstrlenA(lpString: win32more.Foundation.PSTR) -> Int32: ...
@winfunctype('KERNEL32.dll')
def lstrlenW(lpString: win32more.Foundation.PWSTR) -> Int32: ...
@winfunctype('ADVAPI32.dll')
def IsTextUnicode(lpv: c_void_p, iSize: Int32, lpiResult: POINTER(win32more.Globalization.IS_TEXT_UNICODE_RESULT)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def CALINFO_ENUMPROCA(param0: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def CALINFO_ENUMPROCEXA(param0: win32more.Foundation.PSTR, param1: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def CALINFO_ENUMPROCEXEX(param0: win32more.Foundation.PWSTR, param1: UInt32, param2: win32more.Foundation.PWSTR, param3: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def CALINFO_ENUMPROCEXW(param0: win32more.Foundation.PWSTR, param1: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def CALINFO_ENUMPROCW(param0: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
class CHARSETINFO(Structure):
    ciCharset: UInt32
    ciACP: UInt32
    fs: win32more.Globalization.FONTSIGNATURE
CMLangConvertCharset = Guid('d66d6f99-cdaa-11d0-b8-22-00-c0-4f-c9-b3-1f')
CMLangString = Guid('c04d65cf-b70d-11d0-b1-88-00-aa-00-38-c9-69')
CMultiLanguage = Guid('275c23e2-3747-11d0-9f-ea-00-aa-00-3f-86-46')
@winfunctype_pointer
def CODEPAGE_ENUMPROCA(param0: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def CODEPAGE_ENUMPROCW(param0: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
COMPARE_STRING_FLAGS = UInt32
LINGUISTIC_IGNORECASE: COMPARE_STRING_FLAGS = 16
LINGUISTIC_IGNOREDIACRITIC: COMPARE_STRING_FLAGS = 32
NORM_IGNORECASE: COMPARE_STRING_FLAGS = 1
NORM_IGNOREKANATYPE: COMPARE_STRING_FLAGS = 65536
NORM_IGNORENONSPACE: COMPARE_STRING_FLAGS = 2
NORM_IGNORESYMBOLS: COMPARE_STRING_FLAGS = 4
NORM_IGNOREWIDTH: COMPARE_STRING_FLAGS = 131072
NORM_LINGUISTIC_CASING: COMPARE_STRING_FLAGS = 134217728
SORT_DIGITSASNUMBERS: COMPARE_STRING_FLAGS = 8
SORT_STRINGSORT: COMPARE_STRING_FLAGS = 4096
CORRECTIVE_ACTION = Int32
CORRECTIVE_ACTION_NONE: CORRECTIVE_ACTION = 0
CORRECTIVE_ACTION_GET_SUGGESTIONS: CORRECTIVE_ACTION = 1
CORRECTIVE_ACTION_REPLACE: CORRECTIVE_ACTION = 2
CORRECTIVE_ACTION_DELETE: CORRECTIVE_ACTION = 3
class CPINFO(Structure):
    MaxCharSize: UInt32
    DefaultChar: Byte * 2
    LeadByte: Byte * 12
class CPINFOEXA(Structure):
    MaxCharSize: UInt32
    DefaultChar: Byte * 2
    LeadByte: Byte * 12
    UnicodeDefaultChar: Char
    CodePage: UInt32
    CodePageName: win32more.Foundation.CHAR * 260
class CPINFOEXW(Structure):
    MaxCharSize: UInt32
    DefaultChar: Byte * 2
    LeadByte: Byte * 12
    UnicodeDefaultChar: Char
    CodePage: UInt32
    CodePageName: Char * 260
class CURRENCYFMTA(Structure):
    NumDigits: UInt32
    LeadingZero: UInt32
    Grouping: UInt32
    lpDecimalSep: win32more.Foundation.PSTR
    lpThousandSep: win32more.Foundation.PSTR
    NegativeOrder: UInt32
    PositiveOrder: UInt32
    lpCurrencySymbol: win32more.Foundation.PSTR
class CURRENCYFMTW(Structure):
    NumDigits: UInt32
    LeadingZero: UInt32
    Grouping: UInt32
    lpDecimalSep: win32more.Foundation.PWSTR
    lpThousandSep: win32more.Foundation.PWSTR
    NegativeOrder: UInt32
    PositiveOrder: UInt32
    lpCurrencySymbol: win32more.Foundation.PWSTR
@winfunctype_pointer
def DATEFMT_ENUMPROCA(param0: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def DATEFMT_ENUMPROCEXA(param0: win32more.Foundation.PSTR, param1: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def DATEFMT_ENUMPROCEXEX(param0: win32more.Foundation.PWSTR, param1: UInt32, param2: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def DATEFMT_ENUMPROCEXW(param0: win32more.Foundation.PWSTR, param1: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def DATEFMT_ENUMPROCW(param0: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
class DetectEncodingInfo(Structure):
    nLangID: UInt32
    nCodePage: UInt32
    nDocPercent: Int32
    nConfidence: Int32
class ENUMTEXTMETRICA(Structure):
    etmNewTextMetricEx: win32more.Globalization.NEWTEXTMETRICEXA
    etmAxesList: win32more.Graphics.Gdi.AXESLISTA
class ENUMTEXTMETRICW(Structure):
    etmNewTextMetricEx: win32more.Globalization.NEWTEXTMETRICEXW
    etmAxesList: win32more.Graphics.Gdi.AXESLISTW
ENUM_DATE_FORMATS_FLAGS = UInt32
DATE_SHORTDATE: ENUM_DATE_FORMATS_FLAGS = 1
DATE_LONGDATE: ENUM_DATE_FORMATS_FLAGS = 2
DATE_YEARMONTH: ENUM_DATE_FORMATS_FLAGS = 8
DATE_MONTHDAY: ENUM_DATE_FORMATS_FLAGS = 128
DATE_AUTOLAYOUT: ENUM_DATE_FORMATS_FLAGS = 64
DATE_LTRREADING: ENUM_DATE_FORMATS_FLAGS = 16
DATE_RTLREADING: ENUM_DATE_FORMATS_FLAGS = 32
DATE_USE_ALT_CALENDAR: ENUM_DATE_FORMATS_FLAGS = 4
ENUM_SYSTEM_CODE_PAGES_FLAGS = UInt32
CP_INSTALLED: ENUM_SYSTEM_CODE_PAGES_FLAGS = 1
CP_SUPPORTED: ENUM_SYSTEM_CODE_PAGES_FLAGS = 2
ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS = UInt32
LGRPID_INSTALLED: ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS = 1
LGRPID_SUPPORTED: ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS = 2
class FILEMUIINFO(Structure):
    dwSize: UInt32
    dwVersion: UInt32
    dwFileType: UInt32
    pChecksum: Byte * 16
    pServiceChecksum: Byte * 16
    dwLanguageNameOffset: UInt32
    dwTypeIDMainSize: UInt32
    dwTypeIDMainOffset: UInt32
    dwTypeNameMainOffset: UInt32
    dwTypeIDMUISize: UInt32
    dwTypeIDMUIOffset: UInt32
    dwTypeNameMUIOffset: UInt32
    abBuffer: Byte * 8
FOLD_STRING_MAP_FLAGS = UInt32
MAP_COMPOSITE: FOLD_STRING_MAP_FLAGS = 64
MAP_EXPAND_LIGATURES: FOLD_STRING_MAP_FLAGS = 8192
MAP_FOLDCZONE: FOLD_STRING_MAP_FLAGS = 16
MAP_FOLDDIGITS: FOLD_STRING_MAP_FLAGS = 128
MAP_PRECOMPOSED: FOLD_STRING_MAP_FLAGS = 32
class FONTSIGNATURE(Structure):
    fsUsb: UInt32 * 4
    fsCsb: UInt32 * 2
@winfunctype_pointer
def GEO_ENUMNAMEPROC(param0: win32more.Foundation.PWSTR, param1: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def GEO_ENUMPROC(param0: Int32) -> win32more.Foundation.BOOL: ...
class GOFFSET(Structure):
    du: Int32
    dv: Int32
HIMC = IntPtr
HIMCC = IntPtr
HSAVEDUILANGUAGES = IntPtr
class IComprehensiveSpellCheckProvider(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('0c58f8de-8e94-479e-97-17-70-c4-2c-4a-d2-c3')
    @commethod(3)
    def ComprehensiveCheck(text: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.IEnumSpellingError_head)) -> win32more.Foundation.HRESULT: ...
class IEnumCodePage(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('275c23e3-3747-11d0-9f-ea-00-aa-00-3f-86-46')
    @commethod(3)
    def Clone(ppEnum: POINTER(win32more.Globalization.IEnumCodePage_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Next(celt: UInt32, rgelt: POINTER(win32more.Globalization.MIMECPINFO_head), pceltFetched: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Reset() -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Skip(celt: UInt32) -> win32more.Foundation.HRESULT: ...
class IEnumRfc1766(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('3dc39d1d-c030-11d0-b8-1b-00-c0-4f-c9-b3-1f')
    @commethod(3)
    def Clone(ppEnum: POINTER(win32more.Globalization.IEnumRfc1766_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Next(celt: UInt32, rgelt: POINTER(win32more.Globalization.RFC1766INFO_head), pceltFetched: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Reset() -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Skip(celt: UInt32) -> win32more.Foundation.HRESULT: ...
class IEnumScript(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('ae5f1430-388b-11d2-83-80-00-c0-4f-8f-5d-a1')
    @commethod(3)
    def Clone(ppEnum: POINTER(win32more.Globalization.IEnumScript_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Next(celt: UInt32, rgelt: POINTER(win32more.Globalization.SCRIPTINFO_head), pceltFetched: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Reset() -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Skip(celt: UInt32) -> win32more.Foundation.HRESULT: ...
class IEnumSpellingError(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('803e3bd4-2828-4410-82-90-41-8d-1d-73-c7-62')
    @commethod(3)
    def Next(value: POINTER(win32more.Globalization.ISpellingError_head)) -> win32more.Foundation.HRESULT: ...
class IMLangCodePages(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('359f3443-bd4a-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(3)
    def GetCharCodePages(chSrc: Char, pdwCodePages: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetStrCodePages(pszSrc: win32more.Foundation.PWSTR, cchSrc: Int32, dwPriorityCodePages: UInt32, pdwCodePages: POINTER(UInt32), pcchCodePages: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def CodePageToCodePages(uCodePage: UInt32, pdwCodePages: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def CodePagesToCodePage(dwCodePages: UInt32, uDefaultCodePage: UInt32, puCodePage: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IMLangConvertCharset(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('d66d6f98-cdaa-11d0-b8-22-00-c0-4f-c9-b3-1f')
    @commethod(3)
    def Initialize(uiSrcCodePage: UInt32, uiDstCodePage: UInt32, dwProperty: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetSourceCodePage(puiSrcCodePage: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetDestinationCodePage(puiDstCodePage: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetProperty(pdwProperty: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def DoConversion(pSrcStr: c_char_p_no, pcSrcSize: POINTER(UInt32), pDstStr: c_char_p_no, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def DoConversionToUnicode(pSrcStr: win32more.Foundation.PSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PWSTR, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def DoConversionFromUnicode(pSrcStr: win32more.Foundation.PWSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PSTR, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IMLangFontLink(c_void_p):
    extends: win32more.Globalization.IMLangCodePages
    Guid = Guid('359f3441-bd4a-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(7)
    def GetFontCodePages(hDC: win32more.Graphics.Gdi.HDC, hFont: win32more.Graphics.Gdi.HFONT, pdwCodePages: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def MapFont(hDC: win32more.Graphics.Gdi.HDC, dwCodePages: UInt32, hSrcFont: win32more.Graphics.Gdi.HFONT, phDestFont: POINTER(win32more.Graphics.Gdi.HFONT)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def ReleaseFont(hFont: win32more.Graphics.Gdi.HFONT) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def ResetFontMapping() -> win32more.Foundation.HRESULT: ...
class IMLangFontLink2(c_void_p):
    extends: win32more.Globalization.IMLangCodePages
    Guid = Guid('dccfc162-2b38-11d2-b7-ec-00-c0-4f-8f-5d-9a')
    @commethod(7)
    def GetFontCodePages(hDC: win32more.Graphics.Gdi.HDC, hFont: win32more.Graphics.Gdi.HFONT, pdwCodePages: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def ReleaseFont(hFont: win32more.Graphics.Gdi.HFONT) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def ResetFontMapping() -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def MapFont(hDC: win32more.Graphics.Gdi.HDC, dwCodePages: UInt32, chSrc: Char, pFont: POINTER(win32more.Graphics.Gdi.HFONT)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def GetFontUnicodeRanges(hDC: win32more.Graphics.Gdi.HDC, puiRanges: POINTER(UInt32), pUranges: POINTER(win32more.Globalization.UNICODERANGE_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def GetScriptFontInfo(sid: Byte, dwFlags: UInt32, puiFonts: POINTER(UInt32), pScriptFont: POINTER(win32more.Globalization.SCRIPTFONTINFO_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def CodePageToScriptID(uiCodePage: UInt32, pSid: c_char_p_no) -> win32more.Foundation.HRESULT: ...
class IMLangLineBreakConsole(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('f5be2ee1-bfd7-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(3)
    def BreakLineML(pSrcMLStr: win32more.Globalization.IMLangString_head, lSrcPos: Int32, lSrcLen: Int32, cMinColumns: Int32, cMaxColumns: Int32, plLineLen: POINTER(Int32), plSkipLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def BreakLineW(locale: UInt32, pszSrc: win32more.Foundation.PWSTR, cchSrc: Int32, cMaxColumns: Int32, pcchLine: POINTER(Int32), pcchSkip: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def BreakLineA(locale: UInt32, uCodePage: UInt32, pszSrc: win32more.Foundation.PSTR, cchSrc: Int32, cMaxColumns: Int32, pcchLine: POINTER(Int32), pcchSkip: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IMLangString(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('c04d65ce-b70d-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(3)
    def Sync(fNoAccess: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetLength(plLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def SetMLStr(lDestPos: Int32, lDestLen: Int32, pSrcMLStr: win32more.System.Com.IUnknown_head, lSrcPos: Int32, lSrcLen: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetMLStr(lSrcPos: Int32, lSrcLen: Int32, pUnkOuter: win32more.System.Com.IUnknown_head, dwClsContext: UInt32, piid: POINTER(Guid), ppDestMLStr: POINTER(win32more.System.Com.IUnknown_head), plDestPos: POINTER(Int32), plDestLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IMLangStringAStr(c_void_p):
    extends: win32more.Globalization.IMLangString
    Guid = Guid('c04d65d2-b70d-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(7)
    def SetAStr(lDestPos: Int32, lDestLen: Int32, uCodePage: UInt32, pszSrc: win32more.Foundation.PSTR, cchSrc: Int32, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def SetStrBufA(lDestPos: Int32, lDestLen: Int32, uCodePage: UInt32, pSrcBuf: win32more.Globalization.IMLangStringBufA_head, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetAStr(lSrcPos: Int32, lSrcLen: Int32, uCodePageIn: UInt32, puCodePageOut: POINTER(UInt32), pszDest: win32more.Foundation.PSTR, cchDest: Int32, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetStrBufA(lSrcPos: Int32, lSrcMaxLen: Int32, puDestCodePage: POINTER(UInt32), ppDestBuf: POINTER(win32more.Globalization.IMLangStringBufA_head), plDestLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def LockAStr(lSrcPos: Int32, lSrcLen: Int32, lFlags: Int32, uCodePageIn: UInt32, cchRequest: Int32, puCodePageOut: POINTER(UInt32), ppszDest: POINTER(win32more.Foundation.PSTR), pcchDest: POINTER(Int32), plDestLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def UnlockAStr(pszSrc: win32more.Foundation.PSTR, cchSrc: Int32, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def SetLocale(lDestPos: Int32, lDestLen: Int32, locale: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetLocale(lSrcPos: Int32, lSrcMaxLen: Int32, plocale: POINTER(UInt32), plLocalePos: POINTER(Int32), plLocaleLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IMLangStringBufA(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('d24acd23-ba72-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(3)
    def GetStatus(plFlags: POINTER(Int32), pcchBuf: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def LockBuf(cchOffset: Int32, cchMaxLock: Int32, ppszBuf: POINTER(POINTER(win32more.Foundation.CHAR)), pcchBuf: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def UnlockBuf(pszBuf: win32more.Foundation.PSTR, cchOffset: Int32, cchWrite: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Insert(cchOffset: Int32, cchMaxInsert: Int32, pcchActual: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def Delete(cchOffset: Int32, cchDelete: Int32) -> win32more.Foundation.HRESULT: ...
class IMLangStringBufW(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('d24acd21-ba72-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(3)
    def GetStatus(plFlags: POINTER(Int32), pcchBuf: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def LockBuf(cchOffset: Int32, cchMaxLock: Int32, ppszBuf: POINTER(POINTER(UInt16)), pcchBuf: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def UnlockBuf(pszBuf: win32more.Foundation.PWSTR, cchOffset: Int32, cchWrite: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Insert(cchOffset: Int32, cchMaxInsert: Int32, pcchActual: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def Delete(cchOffset: Int32, cchDelete: Int32) -> win32more.Foundation.HRESULT: ...
class IMLangStringWStr(c_void_p):
    extends: win32more.Globalization.IMLangString
    Guid = Guid('c04d65d0-b70d-11d0-b1-88-00-aa-00-38-c9-69')
    @commethod(7)
    def SetWStr(lDestPos: Int32, lDestLen: Int32, pszSrc: win32more.Foundation.PWSTR, cchSrc: Int32, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def SetStrBufW(lDestPos: Int32, lDestLen: Int32, pSrcBuf: win32more.Globalization.IMLangStringBufW_head, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetWStr(lSrcPos: Int32, lSrcLen: Int32, pszDest: win32more.Foundation.PWSTR, cchDest: Int32, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetStrBufW(lSrcPos: Int32, lSrcMaxLen: Int32, ppDestBuf: POINTER(win32more.Globalization.IMLangStringBufW_head), plDestLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def LockWStr(lSrcPos: Int32, lSrcLen: Int32, lFlags: Int32, cchRequest: Int32, ppszDest: POINTER(win32more.Foundation.PWSTR), pcchDest: POINTER(Int32), plDestLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def UnlockWStr(pszSrc: win32more.Foundation.PWSTR, cchSrc: Int32, pcchActual: POINTER(Int32), plActualLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def SetLocale(lDestPos: Int32, lDestLen: Int32, locale: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetLocale(lSrcPos: Int32, lSrcMaxLen: Int32, plocale: POINTER(UInt32), plLocalePos: POINTER(Int32), plLocaleLen: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IMultiLanguage(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('275c23e1-3747-11d0-9f-ea-00-aa-00-3f-86-46')
    @commethod(3)
    def GetNumberOfCodePageInfo(pcCodePage: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetCodePageInfo(uiCodePage: UInt32, pCodePageInfo: POINTER(win32more.Globalization.MIMECPINFO_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetFamilyCodePage(uiCodePage: UInt32, puiFamilyCodePage: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def EnumCodePages(grfFlags: UInt32, ppEnumCodePage: POINTER(win32more.Globalization.IEnumCodePage_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetCharsetInfo(Charset: win32more.Foundation.BSTR, pCharsetInfo: POINTER(win32more.Globalization.MIMECSETINFO_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def IsConvertible(dwSrcEncoding: UInt32, dwDstEncoding: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def ConvertString(pdwMode: POINTER(UInt32), dwSrcEncoding: UInt32, dwDstEncoding: UInt32, pSrcStr: c_char_p_no, pcSrcSize: POINTER(UInt32), pDstStr: c_char_p_no, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def ConvertStringToUnicode(pdwMode: POINTER(UInt32), dwEncoding: UInt32, pSrcStr: win32more.Foundation.PSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PWSTR, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def ConvertStringFromUnicode(pdwMode: POINTER(UInt32), dwEncoding: UInt32, pSrcStr: win32more.Foundation.PWSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PSTR, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def ConvertStringReset() -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def GetRfc1766FromLcid(Locale: UInt32, pbstrRfc1766: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetLcidFromRfc1766(pLocale: POINTER(UInt32), bstrRfc1766: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def EnumRfc1766(ppEnumRfc1766: POINTER(win32more.Globalization.IEnumRfc1766_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def GetRfc1766Info(Locale: UInt32, pRfc1766Info: POINTER(win32more.Globalization.RFC1766INFO_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def CreateConvertCharset(uiSrcCodePage: UInt32, uiDstCodePage: UInt32, dwProperty: UInt32, ppMLangConvertCharset: POINTER(win32more.Globalization.IMLangConvertCharset_head)) -> win32more.Foundation.HRESULT: ...
class IMultiLanguage2(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('dccfc164-2b38-11d2-b7-ec-00-c0-4f-8f-5d-9a')
    @commethod(3)
    def GetNumberOfCodePageInfo(pcCodePage: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetCodePageInfo(uiCodePage: UInt32, LangId: UInt16, pCodePageInfo: POINTER(win32more.Globalization.MIMECPINFO_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetFamilyCodePage(uiCodePage: UInt32, puiFamilyCodePage: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def EnumCodePages(grfFlags: UInt32, LangId: UInt16, ppEnumCodePage: POINTER(win32more.Globalization.IEnumCodePage_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetCharsetInfo(Charset: win32more.Foundation.BSTR, pCharsetInfo: POINTER(win32more.Globalization.MIMECSETINFO_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def IsConvertible(dwSrcEncoding: UInt32, dwDstEncoding: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def ConvertString(pdwMode: POINTER(UInt32), dwSrcEncoding: UInt32, dwDstEncoding: UInt32, pSrcStr: c_char_p_no, pcSrcSize: POINTER(UInt32), pDstStr: c_char_p_no, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def ConvertStringToUnicode(pdwMode: POINTER(UInt32), dwEncoding: UInt32, pSrcStr: win32more.Foundation.PSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PWSTR, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def ConvertStringFromUnicode(pdwMode: POINTER(UInt32), dwEncoding: UInt32, pSrcStr: win32more.Foundation.PWSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PSTR, pcDstSize: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def ConvertStringReset() -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def GetRfc1766FromLcid(Locale: UInt32, pbstrRfc1766: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetLcidFromRfc1766(pLocale: POINTER(UInt32), bstrRfc1766: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def EnumRfc1766(LangId: UInt16, ppEnumRfc1766: POINTER(win32more.Globalization.IEnumRfc1766_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def GetRfc1766Info(Locale: UInt32, LangId: UInt16, pRfc1766Info: POINTER(win32more.Globalization.RFC1766INFO_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def CreateConvertCharset(uiSrcCodePage: UInt32, uiDstCodePage: UInt32, dwProperty: UInt32, ppMLangConvertCharset: POINTER(win32more.Globalization.IMLangConvertCharset_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def ConvertStringInIStream(pdwMode: POINTER(UInt32), dwFlag: UInt32, lpFallBack: win32more.Foundation.PWSTR, dwSrcEncoding: UInt32, dwDstEncoding: UInt32, pstmIn: win32more.System.Com.IStream_head, pstmOut: win32more.System.Com.IStream_head) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def ConvertStringToUnicodeEx(pdwMode: POINTER(UInt32), dwEncoding: UInt32, pSrcStr: win32more.Foundation.PSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PWSTR, pcDstSize: POINTER(UInt32), dwFlag: UInt32, lpFallBack: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def ConvertStringFromUnicodeEx(pdwMode: POINTER(UInt32), dwEncoding: UInt32, pSrcStr: win32more.Foundation.PWSTR, pcSrcSize: POINTER(UInt32), pDstStr: win32more.Foundation.PSTR, pcDstSize: POINTER(UInt32), dwFlag: UInt32, lpFallBack: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def DetectCodepageInIStream(dwFlag: UInt32, dwPrefWinCodePage: UInt32, pstmIn: win32more.System.Com.IStream_head, lpEncoding: POINTER(win32more.Globalization.DetectEncodingInfo_head), pnScores: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def DetectInputCodepage(dwFlag: UInt32, dwPrefWinCodePage: UInt32, pSrcStr: win32more.Foundation.PSTR, pcSrcSize: POINTER(Int32), lpEncoding: POINTER(win32more.Globalization.DetectEncodingInfo_head), pnScores: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def ValidateCodePage(uiCodePage: UInt32, hwnd: win32more.Foundation.HWND) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def GetCodePageDescription(uiCodePage: UInt32, lcid: UInt32, lpWideCharStr: win32more.Foundation.PWSTR, cchWideChar: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def IsCodePageInstallable(uiCodePage: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def SetMimeDBSource(dwSource: win32more.Globalization.MIMECONTF) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def GetNumberOfScripts(pnScripts: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(28)
    def EnumScripts(dwFlags: UInt32, LangId: UInt16, ppEnumScript: POINTER(win32more.Globalization.IEnumScript_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def ValidateCodePageEx(uiCodePage: UInt32, hwnd: win32more.Foundation.HWND, dwfIODControl: UInt32) -> win32more.Foundation.HRESULT: ...
class IMultiLanguage3(c_void_p):
    extends: win32more.Globalization.IMultiLanguage2
    Guid = Guid('4e5868ab-b157-4623-9a-cc-6a-1d-9c-ae-be-04')
    @commethod(30)
    def DetectOutboundCodePage(dwFlags: UInt32, lpWideCharStr: win32more.Foundation.PWSTR, cchWideChar: UInt32, puiPreferredCodePages: POINTER(UInt32), nPreferredCodePages: UInt32, puiDetectedCodePages: POINTER(UInt32), pnDetectedCodePages: POINTER(UInt32), lpSpecialChar: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def DetectOutboundCodePageInIStream(dwFlags: UInt32, pStrIn: win32more.System.Com.IStream_head, puiPreferredCodePages: POINTER(UInt32), nPreferredCodePages: UInt32, puiDetectedCodePages: POINTER(UInt32), pnDetectedCodePages: POINTER(UInt32), lpSpecialChar: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
class IOptionDescription(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('432e5f85-35cf-4606-a8-01-6f-70-27-7e-1d-7a')
    @commethod(3)
    def get_Id(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def get_Heading(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def get_Description(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def get_Labels(value: POINTER(win32more.System.Com.IEnumString_head)) -> win32more.Foundation.HRESULT: ...
IS_TEXT_UNICODE_RESULT = UInt32
IS_TEXT_UNICODE_ASCII16: IS_TEXT_UNICODE_RESULT = 1
IS_TEXT_UNICODE_REVERSE_ASCII16: IS_TEXT_UNICODE_RESULT = 16
IS_TEXT_UNICODE_STATISTICS: IS_TEXT_UNICODE_RESULT = 2
IS_TEXT_UNICODE_REVERSE_STATISTICS: IS_TEXT_UNICODE_RESULT = 32
IS_TEXT_UNICODE_CONTROLS: IS_TEXT_UNICODE_RESULT = 4
IS_TEXT_UNICODE_REVERSE_CONTROLS: IS_TEXT_UNICODE_RESULT = 64
IS_TEXT_UNICODE_SIGNATURE: IS_TEXT_UNICODE_RESULT = 8
IS_TEXT_UNICODE_REVERSE_SIGNATURE: IS_TEXT_UNICODE_RESULT = 128
IS_TEXT_UNICODE_ILLEGAL_CHARS: IS_TEXT_UNICODE_RESULT = 256
IS_TEXT_UNICODE_ODD_LENGTH: IS_TEXT_UNICODE_RESULT = 512
IS_TEXT_UNICODE_NULL_BYTES: IS_TEXT_UNICODE_RESULT = 4096
IS_TEXT_UNICODE_UNICODE_MASK: IS_TEXT_UNICODE_RESULT = 15
IS_TEXT_UNICODE_REVERSE_MASK: IS_TEXT_UNICODE_RESULT = 240
IS_TEXT_UNICODE_NOT_UNICODE_MASK: IS_TEXT_UNICODE_RESULT = 3840
IS_TEXT_UNICODE_NOT_ASCII_MASK: IS_TEXT_UNICODE_RESULT = 61440
IS_VALID_LOCALE_FLAGS = UInt32
LCID_INSTALLED: IS_VALID_LOCALE_FLAGS = 1
LCID_SUPPORTED: IS_VALID_LOCALE_FLAGS = 2
class ISpellCheckProvider(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('73e976e0-8ed4-4eb1-80-d7-1b-e0-a1-6b-0c-38')
    @commethod(3)
    def get_LanguageTag(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Check(text: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.IEnumSpellingError_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Suggest(word: win32more.Foundation.PWSTR, value: POINTER(win32more.System.Com.IEnumString_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetOptionValue(optionId: win32more.Foundation.PWSTR, value: c_char_p_no) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def SetOptionValue(optionId: win32more.Foundation.PWSTR, value: Byte) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_OptionIds(value: POINTER(win32more.System.Com.IEnumString_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_Id(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_LocalizedName(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def GetOptionDescription(optionId: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.IOptionDescription_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def InitializeWordlist(wordlistType: win32more.Globalization.WORDLIST_TYPE, words: win32more.System.Com.IEnumString_head) -> win32more.Foundation.HRESULT: ...
class ISpellCheckProviderFactory(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('9f671e11-77d6-4c92-ae-fb-61-52-15-e3-a4-be')
    @commethod(3)
    def get_SupportedLanguages(value: POINTER(win32more.System.Com.IEnumString_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def IsSupported(languageTag: win32more.Foundation.PWSTR, value: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def CreateSpellCheckProvider(languageTag: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.ISpellCheckProvider_head)) -> win32more.Foundation.HRESULT: ...
class ISpellChecker(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('b6fd0b71-e2bc-4653-8d-05-f1-97-e4-12-77-0b')
    @commethod(3)
    def get_LanguageTag(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Check(text: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.IEnumSpellingError_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Suggest(word: win32more.Foundation.PWSTR, value: POINTER(win32more.System.Com.IEnumString_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Add(word: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def Ignore(word: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def AutoCorrect(from_: win32more.Foundation.PWSTR, to: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetOptionValue(optionId: win32more.Foundation.PWSTR, value: c_char_p_no) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_OptionIds(value: POINTER(win32more.System.Com.IEnumString_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_Id(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_LocalizedName(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def add_SpellCheckerChanged(handler: win32more.Globalization.ISpellCheckerChangedEventHandler_head, eventCookie: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def remove_SpellCheckerChanged(eventCookie: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def GetOptionDescription(optionId: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.IOptionDescription_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def ComprehensiveCheck(text: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.IEnumSpellingError_head)) -> win32more.Foundation.HRESULT: ...
class ISpellChecker2(c_void_p):
    extends: win32more.Globalization.ISpellChecker
    Guid = Guid('e7ed1c71-87f7-4378-a8-40-c9-20-0d-ac-ee-47')
    @commethod(17)
    def Remove(word: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
class ISpellCheckerChangedEventHandler(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('0b83a5b0-792f-4eab-97-99-ac-f5-2c-5e-d0-8a')
    @commethod(3)
    def Invoke(sender: win32more.Globalization.ISpellChecker_head) -> win32more.Foundation.HRESULT: ...
class ISpellCheckerFactory(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('8e018a9d-2415-4677-bf-08-79-4e-a6-1f-94-bb')
    @commethod(3)
    def get_SupportedLanguages(value: POINTER(win32more.System.Com.IEnumString_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def IsSupported(languageTag: win32more.Foundation.PWSTR, value: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def CreateSpellChecker(languageTag: win32more.Foundation.PWSTR, value: POINTER(win32more.Globalization.ISpellChecker_head)) -> win32more.Foundation.HRESULT: ...
class ISpellingError(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('b7c82d61-fbe8-4b47-9b-27-6c-0d-2e-0d-e0-a3')
    @commethod(3)
    def get_StartIndex(value: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def get_Length(value: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def get_CorrectiveAction(value: POINTER(win32more.Globalization.CORRECTIVE_ACTION)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def get_Replacement(value: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
class IUserDictionariesRegistrar(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('aa176b85-0e12-4844-8e-1a-ee-f1-da-77-f5-86')
    @commethod(3)
    def RegisterUserDictionary(dictionaryPath: win32more.Foundation.PWSTR, languageTag: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def UnregisterUserDictionary(dictionaryPath: win32more.Foundation.PWSTR, languageTag: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def LANGGROUPLOCALE_ENUMPROCA(param0: UInt32, param1: UInt32, param2: win32more.Foundation.PSTR, param3: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LANGGROUPLOCALE_ENUMPROCW(param0: UInt32, param1: UInt32, param2: win32more.Foundation.PWSTR, param3: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LANGUAGEGROUP_ENUMPROCA(param0: UInt32, param1: win32more.Foundation.PSTR, param2: win32more.Foundation.PSTR, param3: UInt32, param4: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LANGUAGEGROUP_ENUMPROCW(param0: UInt32, param1: win32more.Foundation.PWSTR, param2: win32more.Foundation.PWSTR, param3: UInt32, param4: IntPtr) -> win32more.Foundation.BOOL: ...
class LOCALESIGNATURE(Structure):
    lsUsb: UInt32 * 4
    lsCsbDefault: UInt32 * 2
    lsCsbSupported: UInt32 * 2
@winfunctype_pointer
def LOCALE_ENUMPROCA(param0: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LOCALE_ENUMPROCEX(param0: win32more.Foundation.PWSTR, param1: UInt32, param2: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LOCALE_ENUMPROCW(param0: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
class MAPPING_DATA_RANGE(Structure):
    dwStartIndex: UInt32
    dwEndIndex: UInt32
    pszDescription: win32more.Foundation.PWSTR
    dwDescriptionLength: UInt32
    pData: c_void_p
    dwDataSize: UInt32
    pszContentType: win32more.Foundation.PWSTR
    prgActionIds: POINTER(win32more.Foundation.PWSTR)
    dwActionsCount: UInt32
    prgActionDisplayNames: POINTER(win32more.Foundation.PWSTR)
class MAPPING_ENUM_OPTIONS(Structure):
    Size: UIntPtr
    pszCategory: win32more.Foundation.PWSTR
    pszInputLanguage: win32more.Foundation.PWSTR
    pszOutputLanguage: win32more.Foundation.PWSTR
    pszInputScript: win32more.Foundation.PWSTR
    pszOutputScript: win32more.Foundation.PWSTR
    pszInputContentType: win32more.Foundation.PWSTR
    pszOutputContentType: win32more.Foundation.PWSTR
    pGuid: POINTER(Guid)
    _bitfield: UInt32
class MAPPING_OPTIONS(Structure):
    Size: UIntPtr
    pszInputLanguage: win32more.Foundation.PWSTR
    pszOutputLanguage: win32more.Foundation.PWSTR
    pszInputScript: win32more.Foundation.PWSTR
    pszOutputScript: win32more.Foundation.PWSTR
    pszInputContentType: win32more.Foundation.PWSTR
    pszOutputContentType: win32more.Foundation.PWSTR
    pszUILanguage: win32more.Foundation.PWSTR
    pfnRecognizeCallback: win32more.Globalization.PFN_MAPPINGCALLBACKPROC
    pRecognizeCallerData: c_void_p
    dwRecognizeCallerDataSize: UInt32
    pfnActionCallback: win32more.Globalization.PFN_MAPPINGCALLBACKPROC
    pActionCallerData: c_void_p
    dwActionCallerDataSize: UInt32
    dwServiceFlag: UInt32
    _bitfield: UInt32
class MAPPING_PROPERTY_BAG(Structure):
    Size: UIntPtr
    prgResultRanges: POINTER(win32more.Globalization.MAPPING_DATA_RANGE_head)
    dwRangesCount: UInt32
    pServiceData: c_void_p
    dwServiceDataSize: UInt32
    pCallerData: c_void_p
    dwCallerDataSize: UInt32
    pContext: c_void_p
class MAPPING_SERVICE_INFO(Structure):
    Size: UIntPtr
    pszCopyright: win32more.Foundation.PWSTR
    wMajorVersion: UInt16
    wMinorVersion: UInt16
    wBuildVersion: UInt16
    wStepVersion: UInt16
    dwInputContentTypesCount: UInt32
    prgInputContentTypes: POINTER(win32more.Foundation.PWSTR)
    dwOutputContentTypesCount: UInt32
    prgOutputContentTypes: POINTER(win32more.Foundation.PWSTR)
    dwInputLanguagesCount: UInt32
    prgInputLanguages: POINTER(win32more.Foundation.PWSTR)
    dwOutputLanguagesCount: UInt32
    prgOutputLanguages: POINTER(win32more.Foundation.PWSTR)
    dwInputScriptsCount: UInt32
    prgInputScripts: POINTER(win32more.Foundation.PWSTR)
    dwOutputScriptsCount: UInt32
    prgOutputScripts: POINTER(win32more.Foundation.PWSTR)
    guid: Guid
    pszCategory: win32more.Foundation.PWSTR
    pszDescription: win32more.Foundation.PWSTR
    dwPrivateDataSize: UInt32
    pPrivateData: c_void_p
    pContext: c_void_p
    _bitfield: UInt32
MIMECONTF = Int32
MIMECONTF_MAILNEWS: MIMECONTF = 1
MIMECONTF_BROWSER: MIMECONTF = 2
MIMECONTF_MINIMAL: MIMECONTF = 4
MIMECONTF_IMPORT: MIMECONTF = 8
MIMECONTF_SAVABLE_MAILNEWS: MIMECONTF = 256
MIMECONTF_SAVABLE_BROWSER: MIMECONTF = 512
MIMECONTF_EXPORT: MIMECONTF = 1024
MIMECONTF_PRIVCONVERTER: MIMECONTF = 65536
MIMECONTF_VALID: MIMECONTF = 131072
MIMECONTF_VALID_NLS: MIMECONTF = 262144
MIMECONTF_MIME_IE4: MIMECONTF = 268435456
MIMECONTF_MIME_LATEST: MIMECONTF = 536870912
MIMECONTF_MIME_REGISTRY: MIMECONTF = 1073741824
class MIMECPINFO(Structure):
    dwFlags: UInt32
    uiCodePage: UInt32
    uiFamilyCodePage: UInt32
    wszDescription: Char * 64
    wszWebCharset: Char * 50
    wszHeaderCharset: Char * 50
    wszBodyCharset: Char * 50
    wszFixedWidthFont: Char * 32
    wszProportionalFont: Char * 32
    bGDICharset: Byte
class MIMECSETINFO(Structure):
    uiCodePage: UInt32
    uiInternetEncoding: UInt32
    wszCharset: Char * 50
MLCONVCHAR = Int32
MLCONVCHARF_AUTODETECT: MLCONVCHAR = 1
MLCONVCHARF_ENTITIZE: MLCONVCHAR = 2
MLCONVCHARF_NCR_ENTITIZE: MLCONVCHAR = 2
MLCONVCHARF_NAME_ENTITIZE: MLCONVCHAR = 4
MLCONVCHARF_USEDEFCHAR: MLCONVCHAR = 8
MLCONVCHARF_NOBESTFITCHARS: MLCONVCHAR = 16
MLCONVCHARF_DETECTJPN: MLCONVCHAR = 32
MLCP = Int32
MLDETECTF_MAILNEWS: MLCP = 1
MLDETECTF_BROWSER: MLCP = 2
MLDETECTF_VALID: MLCP = 4
MLDETECTF_VALID_NLS: MLCP = 8
MLDETECTF_PRESERVE_ORDER: MLCP = 16
MLDETECTF_PREFERRED_ONLY: MLCP = 32
MLDETECTF_FILTER_SPECIALCHAR: MLCP = 64
MLDETECTF_EURO_UTF8: MLCP = 128
MLDETECTCP = Int32
MLDETECTCP_NONE: MLDETECTCP = 0
MLDETECTCP_7BIT: MLDETECTCP = 1
MLDETECTCP_8BIT: MLDETECTCP = 2
MLDETECTCP_DBCS: MLDETECTCP = 4
MLDETECTCP_HTML: MLDETECTCP = 8
MLDETECTCP_NUMBER: MLDETECTCP = 16
MLSTR_FLAGS = Int32
MLSTR_READ: MLSTR_FLAGS = 1
MLSTR_WRITE: MLSTR_FLAGS = 2
MULTI_BYTE_TO_WIDE_CHAR_FLAGS = UInt32
MB_COMPOSITE: MULTI_BYTE_TO_WIDE_CHAR_FLAGS = 2
MB_ERR_INVALID_CHARS: MULTI_BYTE_TO_WIDE_CHAR_FLAGS = 8
MB_PRECOMPOSED: MULTI_BYTE_TO_WIDE_CHAR_FLAGS = 1
MB_USEGLYPHCHARS: MULTI_BYTE_TO_WIDE_CHAR_FLAGS = 4
class NEWTEXTMETRICEXA(Structure):
    ntmTm: win32more.Graphics.Gdi.NEWTEXTMETRICA
    ntmFontSig: win32more.Globalization.FONTSIGNATURE
class NEWTEXTMETRICEXW(Structure):
    ntmTm: win32more.Graphics.Gdi.NEWTEXTMETRICW
    ntmFontSig: win32more.Globalization.FONTSIGNATURE
class NLSVERSIONINFO(Structure):
    dwNLSVersionInfoSize: UInt32
    dwNLSVersion: UInt32
    dwDefinedVersion: UInt32
    dwEffectiveId: UInt32
    guidCustomVersion: Guid
class NLSVERSIONINFOEX(Structure):
    dwNLSVersionInfoSize: UInt32
    dwNLSVersion: UInt32
    dwDefinedVersion: UInt32
    dwEffectiveId: UInt32
    guidCustomVersion: Guid
NORM_FORM = Int32
NORM_FORM_NormalizationOther: NORM_FORM = 0
NORM_FORM_NormalizationC: NORM_FORM = 1
NORM_FORM_NormalizationD: NORM_FORM = 2
NORM_FORM_NormalizationKC: NORM_FORM = 5
NORM_FORM_NormalizationKD: NORM_FORM = 6
class NUMBERFMTA(Structure):
    NumDigits: UInt32
    LeadingZero: UInt32
    Grouping: UInt32
    lpDecimalSep: win32more.Foundation.PSTR
    lpThousandSep: win32more.Foundation.PSTR
    NegativeOrder: UInt32
class NUMBERFMTW(Structure):
    NumDigits: UInt32
    LeadingZero: UInt32
    Grouping: UInt32
    lpDecimalSep: win32more.Foundation.PWSTR
    lpThousandSep: win32more.Foundation.PWSTR
    NegativeOrder: UInt32
class OPENTYPE_FEATURE_RECORD(Structure):
    tagFeature: UInt32
    lParameter: Int32
@winfunctype_pointer
def PFN_MAPPINGCALLBACKPROC(pBag: POINTER(win32more.Globalization.MAPPING_PROPERTY_BAG_head), data: c_void_p, dwDataSize: UInt32, Result: win32more.Foundation.HRESULT) -> Void: ...
class RFC1766INFO(Structure):
    lcid: UInt32
    wszRfc1766: Char * 6
    wszLocaleName: Char * 32
SCRIPTCONTF = Int32
SCRIPTCONTF_sidDefault: SCRIPTCONTF = 0
SCRIPTCONTF_sidMerge: SCRIPTCONTF = 1
SCRIPTCONTF_sidAsciiSym: SCRIPTCONTF = 2
SCRIPTCONTF_sidAsciiLatin: SCRIPTCONTF = 3
SCRIPTCONTF_sidLatin: SCRIPTCONTF = 4
SCRIPTCONTF_sidGreek: SCRIPTCONTF = 5
SCRIPTCONTF_sidCyrillic: SCRIPTCONTF = 6
SCRIPTCONTF_sidArmenian: SCRIPTCONTF = 7
SCRIPTCONTF_sidHebrew: SCRIPTCONTF = 8
SCRIPTCONTF_sidArabic: SCRIPTCONTF = 9
SCRIPTCONTF_sidDevanagari: SCRIPTCONTF = 10
SCRIPTCONTF_sidBengali: SCRIPTCONTF = 11
SCRIPTCONTF_sidGurmukhi: SCRIPTCONTF = 12
SCRIPTCONTF_sidGujarati: SCRIPTCONTF = 13
SCRIPTCONTF_sidOriya: SCRIPTCONTF = 14
SCRIPTCONTF_sidTamil: SCRIPTCONTF = 15
SCRIPTCONTF_sidTelugu: SCRIPTCONTF = 16
SCRIPTCONTF_sidKannada: SCRIPTCONTF = 17
SCRIPTCONTF_sidMalayalam: SCRIPTCONTF = 18
SCRIPTCONTF_sidThai: SCRIPTCONTF = 19
SCRIPTCONTF_sidLao: SCRIPTCONTF = 20
SCRIPTCONTF_sidTibetan: SCRIPTCONTF = 21
SCRIPTCONTF_sidGeorgian: SCRIPTCONTF = 22
SCRIPTCONTF_sidHangul: SCRIPTCONTF = 23
SCRIPTCONTF_sidKana: SCRIPTCONTF = 24
SCRIPTCONTF_sidBopomofo: SCRIPTCONTF = 25
SCRIPTCONTF_sidHan: SCRIPTCONTF = 26
SCRIPTCONTF_sidEthiopic: SCRIPTCONTF = 27
SCRIPTCONTF_sidCanSyllabic: SCRIPTCONTF = 28
SCRIPTCONTF_sidCherokee: SCRIPTCONTF = 29
SCRIPTCONTF_sidYi: SCRIPTCONTF = 30
SCRIPTCONTF_sidBraille: SCRIPTCONTF = 31
SCRIPTCONTF_sidRunic: SCRIPTCONTF = 32
SCRIPTCONTF_sidOgham: SCRIPTCONTF = 33
SCRIPTCONTF_sidSinhala: SCRIPTCONTF = 34
SCRIPTCONTF_sidSyriac: SCRIPTCONTF = 35
SCRIPTCONTF_sidBurmese: SCRIPTCONTF = 36
SCRIPTCONTF_sidKhmer: SCRIPTCONTF = 37
SCRIPTCONTF_sidThaana: SCRIPTCONTF = 38
SCRIPTCONTF_sidMongolian: SCRIPTCONTF = 39
SCRIPTCONTF_sidUserDefined: SCRIPTCONTF = 40
SCRIPTCONTF_sidLim: SCRIPTCONTF = 41
SCRIPTCONTF_sidFEFirst: SCRIPTCONTF = 23
SCRIPTCONTF_sidFELast: SCRIPTCONTF = 26
SCRIPTFONTCONTF = Int32
SCRIPTCONTF_FIXED_FONT: SCRIPTFONTCONTF = 1
SCRIPTCONTF_PROPORTIONAL_FONT: SCRIPTFONTCONTF = 2
SCRIPTCONTF_SCRIPT_USER: SCRIPTFONTCONTF = 65536
SCRIPTCONTF_SCRIPT_HIDE: SCRIPTFONTCONTF = 131072
SCRIPTCONTF_SCRIPT_SYSTEM: SCRIPTFONTCONTF = 262144
class SCRIPTFONTINFO(Structure):
    scripts: Int64
    wszFont: Char * 32
class SCRIPTINFO(Structure):
    ScriptId: Byte
    uiCodePage: UInt32
    wszDescription: Char * 48
    wszFixedWidthFont: Char * 32
    wszProportionalFont: Char * 32
class SCRIPT_ANALYSIS(Structure):
    _bitfield: UInt16
    s: win32more.Globalization.SCRIPT_STATE
class SCRIPT_CHARPROP(Structure):
    _bitfield: UInt16
class SCRIPT_CONTROL(Structure):
    _bitfield: UInt32
class SCRIPT_DIGITSUBSTITUTE(Structure):
    _bitfield1: UInt32
    _bitfield2: UInt32
    dwReserved: UInt32
class SCRIPT_FONTPROPERTIES(Structure):
    cBytes: Int32
    wgBlank: UInt16
    wgDefault: UInt16
    wgInvalid: UInt16
    wgKashida: UInt16
    iKashidaWidth: Int32
class SCRIPT_GLYPHPROP(Structure):
    sva: win32more.Globalization.SCRIPT_VISATTR
    reserved: UInt16
SCRIPT_IS_COMPLEX_FLAGS = UInt32
SIC_ASCIIDIGIT: SCRIPT_IS_COMPLEX_FLAGS = 2
SIC_COMPLEX: SCRIPT_IS_COMPLEX_FLAGS = 1
SIC_NEUTRAL: SCRIPT_IS_COMPLEX_FLAGS = 4
class SCRIPT_ITEM(Structure):
    iCharPos: Int32
    a: win32more.Globalization.SCRIPT_ANALYSIS
SCRIPT_JUSTIFY = Int32
SCRIPT_JUSTIFY_NONE: SCRIPT_JUSTIFY = 0
SCRIPT_JUSTIFY_ARABIC_BLANK: SCRIPT_JUSTIFY = 1
SCRIPT_JUSTIFY_CHARACTER: SCRIPT_JUSTIFY = 2
SCRIPT_JUSTIFY_RESERVED1: SCRIPT_JUSTIFY = 3
SCRIPT_JUSTIFY_BLANK: SCRIPT_JUSTIFY = 4
SCRIPT_JUSTIFY_RESERVED2: SCRIPT_JUSTIFY = 5
SCRIPT_JUSTIFY_RESERVED3: SCRIPT_JUSTIFY = 6
SCRIPT_JUSTIFY_ARABIC_NORMAL: SCRIPT_JUSTIFY = 7
SCRIPT_JUSTIFY_ARABIC_KASHIDA: SCRIPT_JUSTIFY = 8
SCRIPT_JUSTIFY_ARABIC_ALEF: SCRIPT_JUSTIFY = 9
SCRIPT_JUSTIFY_ARABIC_HA: SCRIPT_JUSTIFY = 10
SCRIPT_JUSTIFY_ARABIC_RA: SCRIPT_JUSTIFY = 11
SCRIPT_JUSTIFY_ARABIC_BA: SCRIPT_JUSTIFY = 12
SCRIPT_JUSTIFY_ARABIC_BARA: SCRIPT_JUSTIFY = 13
SCRIPT_JUSTIFY_ARABIC_SEEN: SCRIPT_JUSTIFY = 14
SCRIPT_JUSTIFY_ARABIC_SEEN_M: SCRIPT_JUSTIFY = 15
class SCRIPT_LOGATTR(Structure):
    _bitfield: Byte
class SCRIPT_PROPERTIES(Structure):
    _bitfield1: UInt32
    _bitfield2: UInt32
class SCRIPT_STATE(Structure):
    _bitfield: UInt16
class SCRIPT_TABDEF(Structure):
    cTabStops: Int32
    iScale: Int32
    pTabStops: POINTER(Int32)
    iTabOrigin: Int32
class SCRIPT_VISATTR(Structure):
    _bitfield: UInt16
SYSGEOCLASS = Int32
GEOCLASS_NATION: SYSGEOCLASS = 16
GEOCLASS_REGION: SYSGEOCLASS = 14
GEOCLASS_ALL: SYSGEOCLASS = 0
SYSGEOTYPE = Int32
GEO_NATION: SYSGEOTYPE = 1
GEO_LATITUDE: SYSGEOTYPE = 2
GEO_LONGITUDE: SYSGEOTYPE = 3
GEO_ISO2: SYSGEOTYPE = 4
GEO_ISO3: SYSGEOTYPE = 5
GEO_RFC1766: SYSGEOTYPE = 6
GEO_LCID: SYSGEOTYPE = 7
GEO_FRIENDLYNAME: SYSGEOTYPE = 8
GEO_OFFICIALNAME: SYSGEOTYPE = 9
GEO_TIMEZONES: SYSGEOTYPE = 10
GEO_OFFICIALLANGUAGES: SYSGEOTYPE = 11
GEO_ISO_UN_NUMBER: SYSGEOTYPE = 12
GEO_PARENT: SYSGEOTYPE = 13
GEO_DIALINGCODE: SYSGEOTYPE = 14
GEO_CURRENCYCODE: SYSGEOTYPE = 15
GEO_CURRENCYSYMBOL: SYSGEOTYPE = 16
GEO_NAME: SYSGEOTYPE = 17
GEO_ID: SYSGEOTYPE = 18
SYSNLS_FUNCTION = Int32
COMPARE_STRING: SYSNLS_FUNCTION = 1
SpellCheckerFactory = Guid('7ab36653-1796-484b-bd-fa-e7-4f-1d-b7-c1-dc')
class TEXTRANGE_PROPERTIES(Structure):
    potfRecords: POINTER(win32more.Globalization.OPENTYPE_FEATURE_RECORD_head)
    cotfRecords: Int32
@winfunctype_pointer
def TIMEFMT_ENUMPROCA(param0: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def TIMEFMT_ENUMPROCEX(param0: win32more.Foundation.PWSTR, param1: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def TIMEFMT_ENUMPROCW(param0: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
TIME_FORMAT_FLAGS = UInt32
TIME_NOMINUTESORSECONDS: TIME_FORMAT_FLAGS = 1
TIME_NOSECONDS: TIME_FORMAT_FLAGS = 2
TIME_NOTIMEMARKER: TIME_FORMAT_FLAGS = 4
TIME_FORCE24HOURFORMAT: TIME_FORMAT_FLAGS = 8
TRANSLATE_CHARSET_INFO_FLAGS = UInt32
TCI_SRCCHARSET: TRANSLATE_CHARSET_INFO_FLAGS = 1
TCI_SRCCODEPAGE: TRANSLATE_CHARSET_INFO_FLAGS = 2
TCI_SRCFONTSIG: TRANSLATE_CHARSET_INFO_FLAGS = 3
TCI_SRCLOCALE: TRANSLATE_CHARSET_INFO_FLAGS = 4096
UAcceptResult = Int32
ULOC_ACCEPT_FAILED: UAcceptResult = 0
ULOC_ACCEPT_VALID: UAcceptResult = 1
ULOC_ACCEPT_FALLBACK: UAcceptResult = 2
UAlphabeticIndexLabelType = Int32
U_ALPHAINDEX_NORMAL: UAlphabeticIndexLabelType = 0
U_ALPHAINDEX_UNDERFLOW: UAlphabeticIndexLabelType = 1
U_ALPHAINDEX_INFLOW: UAlphabeticIndexLabelType = 2
U_ALPHAINDEX_OVERFLOW: UAlphabeticIndexLabelType = 3
class UBiDi(Structure):
    pass
@cfunctype_pointer
def UBiDiClassCallback(context: c_void_p, c: Int32) -> win32more.Globalization.UCharDirection: ...
UBiDiDirection = Int32
UBIDI_LTR: UBiDiDirection = 0
UBIDI_RTL: UBiDiDirection = 1
UBIDI_MIXED: UBiDiDirection = 2
UBIDI_NEUTRAL: UBiDiDirection = 3
UBiDiMirroring = Int32
UBIDI_MIRRORING_OFF: UBiDiMirroring = 0
UBIDI_MIRRORING_ON: UBiDiMirroring = 1
UBiDiOrder = Int32
UBIDI_LOGICAL: UBiDiOrder = 0
UBIDI_VISUAL: UBiDiOrder = 1
UBiDiReorderingMode = Int32
UBIDI_REORDER_DEFAULT: UBiDiReorderingMode = 0
UBIDI_REORDER_NUMBERS_SPECIAL: UBiDiReorderingMode = 1
UBIDI_REORDER_GROUP_NUMBERS_WITH_R: UBiDiReorderingMode = 2
UBIDI_REORDER_RUNS_ONLY: UBiDiReorderingMode = 3
UBIDI_REORDER_INVERSE_NUMBERS_AS_L: UBiDiReorderingMode = 4
UBIDI_REORDER_INVERSE_LIKE_DIRECT: UBiDiReorderingMode = 5
UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL: UBiDiReorderingMode = 6
UBiDiReorderingOption = Int32
UBIDI_OPTION_DEFAULT: UBiDiReorderingOption = 0
UBIDI_OPTION_INSERT_MARKS: UBiDiReorderingOption = 1
UBIDI_OPTION_REMOVE_CONTROLS: UBiDiReorderingOption = 2
UBIDI_OPTION_STREAMING: UBiDiReorderingOption = 4
class UBiDiTransform(Structure):
    pass
UBidiPairedBracketType = Int32
U_BPT_NONE: UBidiPairedBracketType = 0
U_BPT_OPEN: UBidiPairedBracketType = 1
U_BPT_CLOSE: UBidiPairedBracketType = 2
UBlockCode = Int32
UBLOCK_NO_BLOCK: UBlockCode = 0
UBLOCK_BASIC_LATIN: UBlockCode = 1
UBLOCK_LATIN_1_SUPPLEMENT: UBlockCode = 2
UBLOCK_LATIN_EXTENDED_A: UBlockCode = 3
UBLOCK_LATIN_EXTENDED_B: UBlockCode = 4
UBLOCK_IPA_EXTENSIONS: UBlockCode = 5
UBLOCK_SPACING_MODIFIER_LETTERS: UBlockCode = 6
UBLOCK_COMBINING_DIACRITICAL_MARKS: UBlockCode = 7
UBLOCK_GREEK: UBlockCode = 8
UBLOCK_CYRILLIC: UBlockCode = 9
UBLOCK_ARMENIAN: UBlockCode = 10
UBLOCK_HEBREW: UBlockCode = 11
UBLOCK_ARABIC: UBlockCode = 12
UBLOCK_SYRIAC: UBlockCode = 13
UBLOCK_THAANA: UBlockCode = 14
UBLOCK_DEVANAGARI: UBlockCode = 15
UBLOCK_BENGALI: UBlockCode = 16
UBLOCK_GURMUKHI: UBlockCode = 17
UBLOCK_GUJARATI: UBlockCode = 18
UBLOCK_ORIYA: UBlockCode = 19
UBLOCK_TAMIL: UBlockCode = 20
UBLOCK_TELUGU: UBlockCode = 21
UBLOCK_KANNADA: UBlockCode = 22
UBLOCK_MALAYALAM: UBlockCode = 23
UBLOCK_SINHALA: UBlockCode = 24
UBLOCK_THAI: UBlockCode = 25
UBLOCK_LAO: UBlockCode = 26
UBLOCK_TIBETAN: UBlockCode = 27
UBLOCK_MYANMAR: UBlockCode = 28
UBLOCK_GEORGIAN: UBlockCode = 29
UBLOCK_HANGUL_JAMO: UBlockCode = 30
UBLOCK_ETHIOPIC: UBlockCode = 31
UBLOCK_CHEROKEE: UBlockCode = 32
UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS: UBlockCode = 33
UBLOCK_OGHAM: UBlockCode = 34
UBLOCK_RUNIC: UBlockCode = 35
UBLOCK_KHMER: UBlockCode = 36
UBLOCK_MONGOLIAN: UBlockCode = 37
UBLOCK_LATIN_EXTENDED_ADDITIONAL: UBlockCode = 38
UBLOCK_GREEK_EXTENDED: UBlockCode = 39
UBLOCK_GENERAL_PUNCTUATION: UBlockCode = 40
UBLOCK_SUPERSCRIPTS_AND_SUBSCRIPTS: UBlockCode = 41
UBLOCK_CURRENCY_SYMBOLS: UBlockCode = 42
UBLOCK_COMBINING_MARKS_FOR_SYMBOLS: UBlockCode = 43
UBLOCK_LETTERLIKE_SYMBOLS: UBlockCode = 44
UBLOCK_NUMBER_FORMS: UBlockCode = 45
UBLOCK_ARROWS: UBlockCode = 46
UBLOCK_MATHEMATICAL_OPERATORS: UBlockCode = 47
UBLOCK_MISCELLANEOUS_TECHNICAL: UBlockCode = 48
UBLOCK_CONTROL_PICTURES: UBlockCode = 49
UBLOCK_OPTICAL_CHARACTER_RECOGNITION: UBlockCode = 50
UBLOCK_ENCLOSED_ALPHANUMERICS: UBlockCode = 51
UBLOCK_BOX_DRAWING: UBlockCode = 52
UBLOCK_BLOCK_ELEMENTS: UBlockCode = 53
UBLOCK_GEOMETRIC_SHAPES: UBlockCode = 54
UBLOCK_MISCELLANEOUS_SYMBOLS: UBlockCode = 55
UBLOCK_DINGBATS: UBlockCode = 56
UBLOCK_BRAILLE_PATTERNS: UBlockCode = 57
UBLOCK_CJK_RADICALS_SUPPLEMENT: UBlockCode = 58
UBLOCK_KANGXI_RADICALS: UBlockCode = 59
UBLOCK_IDEOGRAPHIC_DESCRIPTION_CHARACTERS: UBlockCode = 60
UBLOCK_CJK_SYMBOLS_AND_PUNCTUATION: UBlockCode = 61
UBLOCK_HIRAGANA: UBlockCode = 62
UBLOCK_KATAKANA: UBlockCode = 63
UBLOCK_BOPOMOFO: UBlockCode = 64
UBLOCK_HANGUL_COMPATIBILITY_JAMO: UBlockCode = 65
UBLOCK_KANBUN: UBlockCode = 66
UBLOCK_BOPOMOFO_EXTENDED: UBlockCode = 67
UBLOCK_ENCLOSED_CJK_LETTERS_AND_MONTHS: UBlockCode = 68
UBLOCK_CJK_COMPATIBILITY: UBlockCode = 69
UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A: UBlockCode = 70
UBLOCK_CJK_UNIFIED_IDEOGRAPHS: UBlockCode = 71
UBLOCK_YI_SYLLABLES: UBlockCode = 72
UBLOCK_YI_RADICALS: UBlockCode = 73
UBLOCK_HANGUL_SYLLABLES: UBlockCode = 74
UBLOCK_HIGH_SURROGATES: UBlockCode = 75
UBLOCK_HIGH_PRIVATE_USE_SURROGATES: UBlockCode = 76
UBLOCK_LOW_SURROGATES: UBlockCode = 77
UBLOCK_PRIVATE_USE_AREA: UBlockCode = 78
UBLOCK_PRIVATE_USE: UBlockCode = 78
UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS: UBlockCode = 79
UBLOCK_ALPHABETIC_PRESENTATION_FORMS: UBlockCode = 80
UBLOCK_ARABIC_PRESENTATION_FORMS_A: UBlockCode = 81
UBLOCK_COMBINING_HALF_MARKS: UBlockCode = 82
UBLOCK_CJK_COMPATIBILITY_FORMS: UBlockCode = 83
UBLOCK_SMALL_FORM_VARIANTS: UBlockCode = 84
UBLOCK_ARABIC_PRESENTATION_FORMS_B: UBlockCode = 85
UBLOCK_SPECIALS: UBlockCode = 86
UBLOCK_HALFWIDTH_AND_FULLWIDTH_FORMS: UBlockCode = 87
UBLOCK_OLD_ITALIC: UBlockCode = 88
UBLOCK_GOTHIC: UBlockCode = 89
UBLOCK_DESERET: UBlockCode = 90
UBLOCK_BYZANTINE_MUSICAL_SYMBOLS: UBlockCode = 91
UBLOCK_MUSICAL_SYMBOLS: UBlockCode = 92
UBLOCK_MATHEMATICAL_ALPHANUMERIC_SYMBOLS: UBlockCode = 93
UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B: UBlockCode = 94
UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT: UBlockCode = 95
UBLOCK_TAGS: UBlockCode = 96
UBLOCK_CYRILLIC_SUPPLEMENT: UBlockCode = 97
UBLOCK_CYRILLIC_SUPPLEMENTARY: UBlockCode = 97
UBLOCK_TAGALOG: UBlockCode = 98
UBLOCK_HANUNOO: UBlockCode = 99
UBLOCK_BUHID: UBlockCode = 100
UBLOCK_TAGBANWA: UBlockCode = 101
UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A: UBlockCode = 102
UBLOCK_SUPPLEMENTAL_ARROWS_A: UBlockCode = 103
UBLOCK_SUPPLEMENTAL_ARROWS_B: UBlockCode = 104
UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B: UBlockCode = 105
UBLOCK_SUPPLEMENTAL_MATHEMATICAL_OPERATORS: UBlockCode = 106
UBLOCK_KATAKANA_PHONETIC_EXTENSIONS: UBlockCode = 107
UBLOCK_VARIATION_SELECTORS: UBlockCode = 108
UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_A: UBlockCode = 109
UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_B: UBlockCode = 110
UBLOCK_LIMBU: UBlockCode = 111
UBLOCK_TAI_LE: UBlockCode = 112
UBLOCK_KHMER_SYMBOLS: UBlockCode = 113
UBLOCK_PHONETIC_EXTENSIONS: UBlockCode = 114
UBLOCK_MISCELLANEOUS_SYMBOLS_AND_ARROWS: UBlockCode = 115
UBLOCK_YIJING_HEXAGRAM_SYMBOLS: UBlockCode = 116
UBLOCK_LINEAR_B_SYLLABARY: UBlockCode = 117
UBLOCK_LINEAR_B_IDEOGRAMS: UBlockCode = 118
UBLOCK_AEGEAN_NUMBERS: UBlockCode = 119
UBLOCK_UGARITIC: UBlockCode = 120
UBLOCK_SHAVIAN: UBlockCode = 121
UBLOCK_OSMANYA: UBlockCode = 122
UBLOCK_CYPRIOT_SYLLABARY: UBlockCode = 123
UBLOCK_TAI_XUAN_JING_SYMBOLS: UBlockCode = 124
UBLOCK_VARIATION_SELECTORS_SUPPLEMENT: UBlockCode = 125
UBLOCK_ANCIENT_GREEK_MUSICAL_NOTATION: UBlockCode = 126
UBLOCK_ANCIENT_GREEK_NUMBERS: UBlockCode = 127
UBLOCK_ARABIC_SUPPLEMENT: UBlockCode = 128
UBLOCK_BUGINESE: UBlockCode = 129
UBLOCK_CJK_STROKES: UBlockCode = 130
UBLOCK_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT: UBlockCode = 131
UBLOCK_COPTIC: UBlockCode = 132
UBLOCK_ETHIOPIC_EXTENDED: UBlockCode = 133
UBLOCK_ETHIOPIC_SUPPLEMENT: UBlockCode = 134
UBLOCK_GEORGIAN_SUPPLEMENT: UBlockCode = 135
UBLOCK_GLAGOLITIC: UBlockCode = 136
UBLOCK_KHAROSHTHI: UBlockCode = 137
UBLOCK_MODIFIER_TONE_LETTERS: UBlockCode = 138
UBLOCK_NEW_TAI_LUE: UBlockCode = 139
UBLOCK_OLD_PERSIAN: UBlockCode = 140
UBLOCK_PHONETIC_EXTENSIONS_SUPPLEMENT: UBlockCode = 141
UBLOCK_SUPPLEMENTAL_PUNCTUATION: UBlockCode = 142
UBLOCK_SYLOTI_NAGRI: UBlockCode = 143
UBLOCK_TIFINAGH: UBlockCode = 144
UBLOCK_VERTICAL_FORMS: UBlockCode = 145
UBLOCK_NKO: UBlockCode = 146
UBLOCK_BALINESE: UBlockCode = 147
UBLOCK_LATIN_EXTENDED_C: UBlockCode = 148
UBLOCK_LATIN_EXTENDED_D: UBlockCode = 149
UBLOCK_PHAGS_PA: UBlockCode = 150
UBLOCK_PHOENICIAN: UBlockCode = 151
UBLOCK_CUNEIFORM: UBlockCode = 152
UBLOCK_CUNEIFORM_NUMBERS_AND_PUNCTUATION: UBlockCode = 153
UBLOCK_COUNTING_ROD_NUMERALS: UBlockCode = 154
UBLOCK_SUNDANESE: UBlockCode = 155
UBLOCK_LEPCHA: UBlockCode = 156
UBLOCK_OL_CHIKI: UBlockCode = 157
UBLOCK_CYRILLIC_EXTENDED_A: UBlockCode = 158
UBLOCK_VAI: UBlockCode = 159
UBLOCK_CYRILLIC_EXTENDED_B: UBlockCode = 160
UBLOCK_SAURASHTRA: UBlockCode = 161
UBLOCK_KAYAH_LI: UBlockCode = 162
UBLOCK_REJANG: UBlockCode = 163
UBLOCK_CHAM: UBlockCode = 164
UBLOCK_ANCIENT_SYMBOLS: UBlockCode = 165
UBLOCK_PHAISTOS_DISC: UBlockCode = 166
UBLOCK_LYCIAN: UBlockCode = 167
UBLOCK_CARIAN: UBlockCode = 168
UBLOCK_LYDIAN: UBlockCode = 169
UBLOCK_MAHJONG_TILES: UBlockCode = 170
UBLOCK_DOMINO_TILES: UBlockCode = 171
UBLOCK_SAMARITAN: UBlockCode = 172
UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED: UBlockCode = 173
UBLOCK_TAI_THAM: UBlockCode = 174
UBLOCK_VEDIC_EXTENSIONS: UBlockCode = 175
UBLOCK_LISU: UBlockCode = 176
UBLOCK_BAMUM: UBlockCode = 177
UBLOCK_COMMON_INDIC_NUMBER_FORMS: UBlockCode = 178
UBLOCK_DEVANAGARI_EXTENDED: UBlockCode = 179
UBLOCK_HANGUL_JAMO_EXTENDED_A: UBlockCode = 180
UBLOCK_JAVANESE: UBlockCode = 181
UBLOCK_MYANMAR_EXTENDED_A: UBlockCode = 182
UBLOCK_TAI_VIET: UBlockCode = 183
UBLOCK_MEETEI_MAYEK: UBlockCode = 184
UBLOCK_HANGUL_JAMO_EXTENDED_B: UBlockCode = 185
UBLOCK_IMPERIAL_ARAMAIC: UBlockCode = 186
UBLOCK_OLD_SOUTH_ARABIAN: UBlockCode = 187
UBLOCK_AVESTAN: UBlockCode = 188
UBLOCK_INSCRIPTIONAL_PARTHIAN: UBlockCode = 189
UBLOCK_INSCRIPTIONAL_PAHLAVI: UBlockCode = 190
UBLOCK_OLD_TURKIC: UBlockCode = 191
UBLOCK_RUMI_NUMERAL_SYMBOLS: UBlockCode = 192
UBLOCK_KAITHI: UBlockCode = 193
UBLOCK_EGYPTIAN_HIEROGLYPHS: UBlockCode = 194
UBLOCK_ENCLOSED_ALPHANUMERIC_SUPPLEMENT: UBlockCode = 195
UBLOCK_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT: UBlockCode = 196
UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C: UBlockCode = 197
UBLOCK_MANDAIC: UBlockCode = 198
UBLOCK_BATAK: UBlockCode = 199
UBLOCK_ETHIOPIC_EXTENDED_A: UBlockCode = 200
UBLOCK_BRAHMI: UBlockCode = 201
UBLOCK_BAMUM_SUPPLEMENT: UBlockCode = 202
UBLOCK_KANA_SUPPLEMENT: UBlockCode = 203
UBLOCK_PLAYING_CARDS: UBlockCode = 204
UBLOCK_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS: UBlockCode = 205
UBLOCK_EMOTICONS: UBlockCode = 206
UBLOCK_TRANSPORT_AND_MAP_SYMBOLS: UBlockCode = 207
UBLOCK_ALCHEMICAL_SYMBOLS: UBlockCode = 208
UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D: UBlockCode = 209
UBLOCK_ARABIC_EXTENDED_A: UBlockCode = 210
UBLOCK_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS: UBlockCode = 211
UBLOCK_CHAKMA: UBlockCode = 212
UBLOCK_MEETEI_MAYEK_EXTENSIONS: UBlockCode = 213
UBLOCK_MEROITIC_CURSIVE: UBlockCode = 214
UBLOCK_MEROITIC_HIEROGLYPHS: UBlockCode = 215
UBLOCK_MIAO: UBlockCode = 216
UBLOCK_SHARADA: UBlockCode = 217
UBLOCK_SORA_SOMPENG: UBlockCode = 218
UBLOCK_SUNDANESE_SUPPLEMENT: UBlockCode = 219
UBLOCK_TAKRI: UBlockCode = 220
UBLOCK_BASSA_VAH: UBlockCode = 221
UBLOCK_CAUCASIAN_ALBANIAN: UBlockCode = 222
UBLOCK_COPTIC_EPACT_NUMBERS: UBlockCode = 223
UBLOCK_COMBINING_DIACRITICAL_MARKS_EXTENDED: UBlockCode = 224
UBLOCK_DUPLOYAN: UBlockCode = 225
UBLOCK_ELBASAN: UBlockCode = 226
UBLOCK_GEOMETRIC_SHAPES_EXTENDED: UBlockCode = 227
UBLOCK_GRANTHA: UBlockCode = 228
UBLOCK_KHOJKI: UBlockCode = 229
UBLOCK_KHUDAWADI: UBlockCode = 230
UBLOCK_LATIN_EXTENDED_E: UBlockCode = 231
UBLOCK_LINEAR_A: UBlockCode = 232
UBLOCK_MAHAJANI: UBlockCode = 233
UBLOCK_MANICHAEAN: UBlockCode = 234
UBLOCK_MENDE_KIKAKUI: UBlockCode = 235
UBLOCK_MODI: UBlockCode = 236
UBLOCK_MRO: UBlockCode = 237
UBLOCK_MYANMAR_EXTENDED_B: UBlockCode = 238
UBLOCK_NABATAEAN: UBlockCode = 239
UBLOCK_OLD_NORTH_ARABIAN: UBlockCode = 240
UBLOCK_OLD_PERMIC: UBlockCode = 241
UBLOCK_ORNAMENTAL_DINGBATS: UBlockCode = 242
UBLOCK_PAHAWH_HMONG: UBlockCode = 243
UBLOCK_PALMYRENE: UBlockCode = 244
UBLOCK_PAU_CIN_HAU: UBlockCode = 245
UBLOCK_PSALTER_PAHLAVI: UBlockCode = 246
UBLOCK_SHORTHAND_FORMAT_CONTROLS: UBlockCode = 247
UBLOCK_SIDDHAM: UBlockCode = 248
UBLOCK_SINHALA_ARCHAIC_NUMBERS: UBlockCode = 249
UBLOCK_SUPPLEMENTAL_ARROWS_C: UBlockCode = 250
UBLOCK_TIRHUTA: UBlockCode = 251
UBLOCK_WARANG_CITI: UBlockCode = 252
UBLOCK_AHOM: UBlockCode = 253
UBLOCK_ANATOLIAN_HIEROGLYPHS: UBlockCode = 254
UBLOCK_CHEROKEE_SUPPLEMENT: UBlockCode = 255
UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E: UBlockCode = 256
UBLOCK_EARLY_DYNASTIC_CUNEIFORM: UBlockCode = 257
UBLOCK_HATRAN: UBlockCode = 258
UBLOCK_MULTANI: UBlockCode = 259
UBLOCK_OLD_HUNGARIAN: UBlockCode = 260
UBLOCK_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS: UBlockCode = 261
UBLOCK_SUTTON_SIGNWRITING: UBlockCode = 262
UBLOCK_ADLAM: UBlockCode = 263
UBLOCK_BHAIKSUKI: UBlockCode = 264
UBLOCK_CYRILLIC_EXTENDED_C: UBlockCode = 265
UBLOCK_GLAGOLITIC_SUPPLEMENT: UBlockCode = 266
UBLOCK_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION: UBlockCode = 267
UBLOCK_MARCHEN: UBlockCode = 268
UBLOCK_MONGOLIAN_SUPPLEMENT: UBlockCode = 269
UBLOCK_NEWA: UBlockCode = 270
UBLOCK_OSAGE: UBlockCode = 271
UBLOCK_TANGUT: UBlockCode = 272
UBLOCK_TANGUT_COMPONENTS: UBlockCode = 273
UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F: UBlockCode = 274
UBLOCK_KANA_EXTENDED_A: UBlockCode = 275
UBLOCK_MASARAM_GONDI: UBlockCode = 276
UBLOCK_NUSHU: UBlockCode = 277
UBLOCK_SOYOMBO: UBlockCode = 278
UBLOCK_SYRIAC_SUPPLEMENT: UBlockCode = 279
UBLOCK_ZANABAZAR_SQUARE: UBlockCode = 280
UBLOCK_CHESS_SYMBOLS: UBlockCode = 281
UBLOCK_DOGRA: UBlockCode = 282
UBLOCK_GEORGIAN_EXTENDED: UBlockCode = 283
UBLOCK_GUNJALA_GONDI: UBlockCode = 284
UBLOCK_HANIFI_ROHINGYA: UBlockCode = 285
UBLOCK_INDIC_SIYAQ_NUMBERS: UBlockCode = 286
UBLOCK_MAKASAR: UBlockCode = 287
UBLOCK_MAYAN_NUMERALS: UBlockCode = 288
UBLOCK_MEDEFAIDRIN: UBlockCode = 289
UBLOCK_OLD_SOGDIAN: UBlockCode = 290
UBLOCK_SOGDIAN: UBlockCode = 291
UBLOCK_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS: UBlockCode = 292
UBLOCK_ELYMAIC: UBlockCode = 293
UBLOCK_NANDINAGARI: UBlockCode = 294
UBLOCK_NYIAKENG_PUACHUE_HMONG: UBlockCode = 295
UBLOCK_OTTOMAN_SIYAQ_NUMBERS: UBlockCode = 296
UBLOCK_SMALL_KANA_EXTENSION: UBlockCode = 297
UBLOCK_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A: UBlockCode = 298
UBLOCK_TAMIL_SUPPLEMENT: UBlockCode = 299
UBLOCK_WANCHO: UBlockCode = 300
UBLOCK_CHORASMIAN: UBlockCode = 301
UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G: UBlockCode = 302
UBLOCK_DIVES_AKURU: UBlockCode = 303
UBLOCK_KHITAN_SMALL_SCRIPT: UBlockCode = 304
UBLOCK_LISU_SUPPLEMENT: UBlockCode = 305
UBLOCK_SYMBOLS_FOR_LEGACY_COMPUTING: UBlockCode = 306
UBLOCK_TANGUT_SUPPLEMENT: UBlockCode = 307
UBLOCK_YEZIDI: UBlockCode = 308
UBLOCK_INVALID_CODE: UBlockCode = -1
class UBreakIterator(Structure):
    pass
UBreakIteratorType = Int32
UBRK_CHARACTER: UBreakIteratorType = 0
UBRK_WORD: UBreakIteratorType = 1
UBRK_LINE: UBreakIteratorType = 2
UBRK_SENTENCE: UBreakIteratorType = 3
class UCPMap(Structure):
    pass
UCPMapRangeOption = Int32
UCPMAP_RANGE_NORMAL: UCPMapRangeOption = 0
UCPMAP_RANGE_FIXED_LEAD_SURROGATES: UCPMapRangeOption = 1
UCPMAP_RANGE_FIXED_ALL_SURROGATES: UCPMapRangeOption = 2
@cfunctype_pointer
def UCPMapValueFilter(context: c_void_p, value: UInt32) -> UInt32: ...
class UCPTrie(Structure):
    index: POINTER(UInt16)
    data: win32more.Globalization.UCPTrieData
    indexLength: Int32
    dataLength: Int32
    highStart: Int32
    shifted12HighStart: UInt16
    type: SByte
    valueWidth: SByte
    reserved32: UInt32
    reserved16: UInt16
    index3NullOffset: UInt16
    dataNullOffset: Int32
    nullValue: UInt32
class UCPTrieData(Union):
    ptr0: c_void_p
    ptr16: POINTER(UInt16)
    ptr32: POINTER(UInt32)
    ptr8: c_char_p_no
UCPTrieType = Int32
UCPTRIE_TYPE_ANY: UCPTrieType = -1
UCPTRIE_TYPE_FAST: UCPTrieType = 0
UCPTRIE_TYPE_SMALL: UCPTrieType = 1
UCPTrieValueWidth = Int32
UCPTRIE_VALUE_BITS_ANY: UCPTrieValueWidth = -1
UCPTRIE_VALUE_BITS_16: UCPTrieValueWidth = 0
UCPTRIE_VALUE_BITS_32: UCPTrieValueWidth = 1
UCPTRIE_VALUE_BITS_8: UCPTrieValueWidth = 2
UCalendarAMPMs = Int32
UCAL_AM: UCalendarAMPMs = 0
UCAL_PM: UCalendarAMPMs = 1
UCalendarAttribute = Int32
UCAL_LENIENT: UCalendarAttribute = 0
UCAL_FIRST_DAY_OF_WEEK: UCalendarAttribute = 1
UCAL_MINIMAL_DAYS_IN_FIRST_WEEK: UCalendarAttribute = 2
UCAL_REPEATED_WALL_TIME: UCalendarAttribute = 3
UCAL_SKIPPED_WALL_TIME: UCalendarAttribute = 4
UCalendarDateFields = Int32
UCAL_ERA: UCalendarDateFields = 0
UCAL_YEAR: UCalendarDateFields = 1
UCAL_MONTH: UCalendarDateFields = 2
UCAL_WEEK_OF_YEAR: UCalendarDateFields = 3
UCAL_WEEK_OF_MONTH: UCalendarDateFields = 4
UCAL_DATE: UCalendarDateFields = 5
UCAL_DAY_OF_YEAR: UCalendarDateFields = 6
UCAL_DAY_OF_WEEK: UCalendarDateFields = 7
UCAL_DAY_OF_WEEK_IN_MONTH: UCalendarDateFields = 8
UCAL_AM_PM: UCalendarDateFields = 9
UCAL_HOUR: UCalendarDateFields = 10
UCAL_HOUR_OF_DAY: UCalendarDateFields = 11
UCAL_MINUTE: UCalendarDateFields = 12
UCAL_SECOND: UCalendarDateFields = 13
UCAL_MILLISECOND: UCalendarDateFields = 14
UCAL_ZONE_OFFSET: UCalendarDateFields = 15
UCAL_DST_OFFSET: UCalendarDateFields = 16
UCAL_YEAR_WOY: UCalendarDateFields = 17
UCAL_DOW_LOCAL: UCalendarDateFields = 18
UCAL_EXTENDED_YEAR: UCalendarDateFields = 19
UCAL_JULIAN_DAY: UCalendarDateFields = 20
UCAL_MILLISECONDS_IN_DAY: UCalendarDateFields = 21
UCAL_IS_LEAP_MONTH: UCalendarDateFields = 22
UCAL_FIELD_COUNT: UCalendarDateFields = 23
UCAL_DAY_OF_MONTH: UCalendarDateFields = 5
UCalendarDaysOfWeek = Int32
UCAL_SUNDAY: UCalendarDaysOfWeek = 1
UCAL_MONDAY: UCalendarDaysOfWeek = 2
UCAL_TUESDAY: UCalendarDaysOfWeek = 3
UCAL_WEDNESDAY: UCalendarDaysOfWeek = 4
UCAL_THURSDAY: UCalendarDaysOfWeek = 5
UCAL_FRIDAY: UCalendarDaysOfWeek = 6
UCAL_SATURDAY: UCalendarDaysOfWeek = 7
UCalendarDisplayNameType = Int32
UCAL_STANDARD: UCalendarDisplayNameType = 0
UCAL_SHORT_STANDARD: UCalendarDisplayNameType = 1
UCAL_DST: UCalendarDisplayNameType = 2
UCAL_SHORT_DST: UCalendarDisplayNameType = 3
UCalendarLimitType = Int32
UCAL_MINIMUM: UCalendarLimitType = 0
UCAL_MAXIMUM: UCalendarLimitType = 1
UCAL_GREATEST_MINIMUM: UCalendarLimitType = 2
UCAL_LEAST_MAXIMUM: UCalendarLimitType = 3
UCAL_ACTUAL_MINIMUM: UCalendarLimitType = 4
UCAL_ACTUAL_MAXIMUM: UCalendarLimitType = 5
UCalendarMonths = Int32
UCAL_JANUARY: UCalendarMonths = 0
UCAL_FEBRUARY: UCalendarMonths = 1
UCAL_MARCH: UCalendarMonths = 2
UCAL_APRIL: UCalendarMonths = 3
UCAL_MAY: UCalendarMonths = 4
UCAL_JUNE: UCalendarMonths = 5
UCAL_JULY: UCalendarMonths = 6
UCAL_AUGUST: UCalendarMonths = 7
UCAL_SEPTEMBER: UCalendarMonths = 8
UCAL_OCTOBER: UCalendarMonths = 9
UCAL_NOVEMBER: UCalendarMonths = 10
UCAL_DECEMBER: UCalendarMonths = 11
UCAL_UNDECIMBER: UCalendarMonths = 12
UCalendarType = Int32
UCAL_TRADITIONAL: UCalendarType = 0
UCAL_DEFAULT: UCalendarType = 0
UCAL_GREGORIAN: UCalendarType = 1
UCalendarWallTimeOption = Int32
UCAL_WALLTIME_LAST: UCalendarWallTimeOption = 0
UCAL_WALLTIME_FIRST: UCalendarWallTimeOption = 1
UCAL_WALLTIME_NEXT_VALID: UCalendarWallTimeOption = 2
UCalendarWeekdayType = Int32
UCAL_WEEKDAY: UCalendarWeekdayType = 0
UCAL_WEEKEND: UCalendarWeekdayType = 1
UCAL_WEEKEND_ONSET: UCalendarWeekdayType = 2
UCAL_WEEKEND_CEASE: UCalendarWeekdayType = 3
class UCaseMap(Structure):
    pass
UCharCategory = Int32
U_UNASSIGNED: UCharCategory = 0
U_GENERAL_OTHER_TYPES: UCharCategory = 0
U_UPPERCASE_LETTER: UCharCategory = 1
U_LOWERCASE_LETTER: UCharCategory = 2
U_TITLECASE_LETTER: UCharCategory = 3
U_MODIFIER_LETTER: UCharCategory = 4
U_OTHER_LETTER: UCharCategory = 5
U_NON_SPACING_MARK: UCharCategory = 6
U_ENCLOSING_MARK: UCharCategory = 7
U_COMBINING_SPACING_MARK: UCharCategory = 8
U_DECIMAL_DIGIT_NUMBER: UCharCategory = 9
U_LETTER_NUMBER: UCharCategory = 10
U_OTHER_NUMBER: UCharCategory = 11
U_SPACE_SEPARATOR: UCharCategory = 12
U_LINE_SEPARATOR: UCharCategory = 13
U_PARAGRAPH_SEPARATOR: UCharCategory = 14
U_CONTROL_CHAR: UCharCategory = 15
U_FORMAT_CHAR: UCharCategory = 16
U_PRIVATE_USE_CHAR: UCharCategory = 17
U_SURROGATE: UCharCategory = 18
U_DASH_PUNCTUATION: UCharCategory = 19
U_START_PUNCTUATION: UCharCategory = 20
U_END_PUNCTUATION: UCharCategory = 21
U_CONNECTOR_PUNCTUATION: UCharCategory = 22
U_OTHER_PUNCTUATION: UCharCategory = 23
U_MATH_SYMBOL: UCharCategory = 24
U_CURRENCY_SYMBOL: UCharCategory = 25
U_MODIFIER_SYMBOL: UCharCategory = 26
U_OTHER_SYMBOL: UCharCategory = 27
U_INITIAL_PUNCTUATION: UCharCategory = 28
U_FINAL_PUNCTUATION: UCharCategory = 29
U_CHAR_CATEGORY_COUNT: UCharCategory = 30
UCharDirection = Int32
U_LEFT_TO_RIGHT: UCharDirection = 0
U_RIGHT_TO_LEFT: UCharDirection = 1
U_EUROPEAN_NUMBER: UCharDirection = 2
U_EUROPEAN_NUMBER_SEPARATOR: UCharDirection = 3
U_EUROPEAN_NUMBER_TERMINATOR: UCharDirection = 4
U_ARABIC_NUMBER: UCharDirection = 5
U_COMMON_NUMBER_SEPARATOR: UCharDirection = 6
U_BLOCK_SEPARATOR: UCharDirection = 7
U_SEGMENT_SEPARATOR: UCharDirection = 8
U_WHITE_SPACE_NEUTRAL: UCharDirection = 9
U_OTHER_NEUTRAL: UCharDirection = 10
U_LEFT_TO_RIGHT_EMBEDDING: UCharDirection = 11
U_LEFT_TO_RIGHT_OVERRIDE: UCharDirection = 12
U_RIGHT_TO_LEFT_ARABIC: UCharDirection = 13
U_RIGHT_TO_LEFT_EMBEDDING: UCharDirection = 14
U_RIGHT_TO_LEFT_OVERRIDE: UCharDirection = 15
U_POP_DIRECTIONAL_FORMAT: UCharDirection = 16
U_DIR_NON_SPACING_MARK: UCharDirection = 17
U_BOUNDARY_NEUTRAL: UCharDirection = 18
U_FIRST_STRONG_ISOLATE: UCharDirection = 19
U_LEFT_TO_RIGHT_ISOLATE: UCharDirection = 20
U_RIGHT_TO_LEFT_ISOLATE: UCharDirection = 21
U_POP_DIRECTIONAL_ISOLATE: UCharDirection = 22
@cfunctype_pointer
def UCharEnumTypeRange(context: c_void_p, start: Int32, limit: Int32, type: win32more.Globalization.UCharCategory) -> SByte: ...
class UCharIterator(Structure):
    context: c_void_p
    length: Int32
    start: Int32
    index: Int32
    limit: Int32
    reservedField: Int32
    getIndex: win32more.Globalization.UCharIteratorGetIndex
    move: win32more.Globalization.UCharIteratorMove
    hasNext: win32more.Globalization.UCharIteratorHasNext
    hasPrevious: win32more.Globalization.UCharIteratorHasPrevious
    current: win32more.Globalization.UCharIteratorCurrent
    next: win32more.Globalization.UCharIteratorNext
    previous: win32more.Globalization.UCharIteratorPrevious
    reservedFn: win32more.Globalization.UCharIteratorReserved
    getState: win32more.Globalization.UCharIteratorGetState
    setState: win32more.Globalization.UCharIteratorSetState
@cfunctype_pointer
def UCharIteratorCurrent(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> Int32: ...
@cfunctype_pointer
def UCharIteratorGetIndex(iter: POINTER(win32more.Globalization.UCharIterator_head), origin: win32more.Globalization.UCharIteratorOrigin) -> Int32: ...
@cfunctype_pointer
def UCharIteratorGetState(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> UInt32: ...
@cfunctype_pointer
def UCharIteratorHasNext(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> SByte: ...
@cfunctype_pointer
def UCharIteratorHasPrevious(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> SByte: ...
@cfunctype_pointer
def UCharIteratorMove(iter: POINTER(win32more.Globalization.UCharIterator_head), delta: Int32, origin: win32more.Globalization.UCharIteratorOrigin) -> Int32: ...
@cfunctype_pointer
def UCharIteratorNext(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> Int32: ...
UCharIteratorOrigin = Int32
UITER_START: UCharIteratorOrigin = 0
UITER_CURRENT: UCharIteratorOrigin = 1
UITER_LIMIT: UCharIteratorOrigin = 2
UITER_ZERO: UCharIteratorOrigin = 3
UITER_LENGTH: UCharIteratorOrigin = 4
@cfunctype_pointer
def UCharIteratorPrevious(iter: POINTER(win32more.Globalization.UCharIterator_head)) -> Int32: ...
@cfunctype_pointer
def UCharIteratorReserved(iter: POINTER(win32more.Globalization.UCharIterator_head), something: Int32) -> Int32: ...
@cfunctype_pointer
def UCharIteratorSetState(iter: POINTER(win32more.Globalization.UCharIterator_head), state: UInt32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
UCharNameChoice = Int32
U_UNICODE_CHAR_NAME: UCharNameChoice = 0
U_EXTENDED_CHAR_NAME: UCharNameChoice = 2
U_CHAR_NAME_ALIAS: UCharNameChoice = 3
class UCharsetDetector(Structure):
    pass
class UCharsetMatch(Structure):
    pass
UColAttribute = Int32
UCOL_FRENCH_COLLATION: UColAttribute = 0
UCOL_ALTERNATE_HANDLING: UColAttribute = 1
UCOL_CASE_FIRST: UColAttribute = 2
UCOL_CASE_LEVEL: UColAttribute = 3
UCOL_NORMALIZATION_MODE: UColAttribute = 4
UCOL_DECOMPOSITION_MODE: UColAttribute = 4
UCOL_STRENGTH: UColAttribute = 5
UCOL_NUMERIC_COLLATION: UColAttribute = 7
UCOL_ATTRIBUTE_COUNT: UColAttribute = 8
UColAttributeValue = Int32
UCOL_DEFAULT: UColAttributeValue = -1
UCOL_PRIMARY: UColAttributeValue = 0
UCOL_SECONDARY: UColAttributeValue = 1
UCOL_TERTIARY: UColAttributeValue = 2
UCOL_DEFAULT_STRENGTH: UColAttributeValue = 2
UCOL_CE_STRENGTH_LIMIT: UColAttributeValue = 3
UCOL_QUATERNARY: UColAttributeValue = 3
UCOL_IDENTICAL: UColAttributeValue = 15
UCOL_STRENGTH_LIMIT: UColAttributeValue = 16
UCOL_OFF: UColAttributeValue = 16
UCOL_ON: UColAttributeValue = 17
UCOL_SHIFTED: UColAttributeValue = 20
UCOL_NON_IGNORABLE: UColAttributeValue = 21
UCOL_LOWER_FIRST: UColAttributeValue = 24
UCOL_UPPER_FIRST: UColAttributeValue = 25
UColBoundMode = Int32
UCOL_BOUND_LOWER: UColBoundMode = 0
UCOL_BOUND_UPPER: UColBoundMode = 1
UCOL_BOUND_UPPER_LONG: UColBoundMode = 2
UColReorderCode = Int32
UCOL_REORDER_CODE_DEFAULT: UColReorderCode = -1
UCOL_REORDER_CODE_NONE: UColReorderCode = 103
UCOL_REORDER_CODE_OTHERS: UColReorderCode = 103
UCOL_REORDER_CODE_SPACE: UColReorderCode = 4096
UCOL_REORDER_CODE_FIRST: UColReorderCode = 4096
UCOL_REORDER_CODE_PUNCTUATION: UColReorderCode = 4097
UCOL_REORDER_CODE_SYMBOL: UColReorderCode = 4098
UCOL_REORDER_CODE_CURRENCY: UColReorderCode = 4099
UCOL_REORDER_CODE_DIGIT: UColReorderCode = 4100
UColRuleOption = Int32
UCOL_TAILORING_ONLY: UColRuleOption = 0
UCOL_FULL_RULES: UColRuleOption = 1
class UCollationElements(Structure):
    pass
UCollationResult = Int32
UCOL_EQUAL: UCollationResult = 0
UCOL_GREATER: UCollationResult = 1
UCOL_LESS: UCollationResult = -1
class UCollator(Structure):
    pass
class UConstrainedFieldPosition(Structure):
    pass
class UConverter(Structure):
    pass
UConverterCallbackReason = Int32
UCNV_UNASSIGNED: UConverterCallbackReason = 0
UCNV_ILLEGAL: UConverterCallbackReason = 1
UCNV_IRREGULAR: UConverterCallbackReason = 2
UCNV_RESET: UConverterCallbackReason = 3
UCNV_CLOSE: UConverterCallbackReason = 4
UCNV_CLONE: UConverterCallbackReason = 5
@cfunctype_pointer
def UConverterFromUCallback(context: c_void_p, args: POINTER(win32more.Globalization.UConverterFromUnicodeArgs_head), codeUnits: POINTER(UInt16), length: Int32, codePoint: Int32, reason: win32more.Globalization.UConverterCallbackReason, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
class UConverterFromUnicodeArgs(Structure):
    size: UInt16
    flush: SByte
    converter: POINTER(win32more.Globalization.UConverter_head)
    source: POINTER(UInt16)
    sourceLimit: POINTER(UInt16)
    target: win32more.Foundation.PSTR
    targetLimit: win32more.Foundation.PSTR
    offsets: POINTER(Int32)
UConverterPlatform = Int32
UCNV_UNKNOWN: UConverterPlatform = -1
UCNV_IBM: UConverterPlatform = 0
class UConverterSelector(Structure):
    pass
@cfunctype_pointer
def UConverterToUCallback(context: c_void_p, args: POINTER(win32more.Globalization.UConverterToUnicodeArgs_head), codeUnits: win32more.Foundation.PSTR, length: Int32, reason: win32more.Globalization.UConverterCallbackReason, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
class UConverterToUnicodeArgs(Structure):
    size: UInt16
    flush: SByte
    converter: POINTER(win32more.Globalization.UConverter_head)
    source: win32more.Foundation.PSTR
    sourceLimit: win32more.Foundation.PSTR
    target: POINTER(UInt16)
    targetLimit: POINTER(UInt16)
    offsets: POINTER(Int32)
UConverterType = Int32
UCNV_UNSUPPORTED_CONVERTER: UConverterType = -1
UCNV_SBCS: UConverterType = 0
UCNV_DBCS: UConverterType = 1
UCNV_MBCS: UConverterType = 2
UCNV_LATIN_1: UConverterType = 3
UCNV_UTF8: UConverterType = 4
UCNV_UTF16_BigEndian: UConverterType = 5
UCNV_UTF16_LittleEndian: UConverterType = 6
UCNV_UTF32_BigEndian: UConverterType = 7
UCNV_UTF32_LittleEndian: UConverterType = 8
UCNV_EBCDIC_STATEFUL: UConverterType = 9
UCNV_ISO_2022: UConverterType = 10
UCNV_LMBCS_1: UConverterType = 11
UCNV_LMBCS_2: UConverterType = 12
UCNV_LMBCS_3: UConverterType = 13
UCNV_LMBCS_4: UConverterType = 14
UCNV_LMBCS_5: UConverterType = 15
UCNV_LMBCS_6: UConverterType = 16
UCNV_LMBCS_8: UConverterType = 17
UCNV_LMBCS_11: UConverterType = 18
UCNV_LMBCS_16: UConverterType = 19
UCNV_LMBCS_17: UConverterType = 20
UCNV_LMBCS_18: UConverterType = 21
UCNV_LMBCS_19: UConverterType = 22
UCNV_LMBCS_LAST: UConverterType = 22
UCNV_HZ: UConverterType = 23
UCNV_SCSU: UConverterType = 24
UCNV_ISCII: UConverterType = 25
UCNV_US_ASCII: UConverterType = 26
UCNV_UTF7: UConverterType = 27
UCNV_BOCU1: UConverterType = 28
UCNV_UTF16: UConverterType = 29
UCNV_UTF32: UConverterType = 30
UCNV_CESU8: UConverterType = 31
UCNV_IMAP_MAILBOX: UConverterType = 32
UCNV_COMPOUND_TEXT: UConverterType = 33
UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES: UConverterType = 34
UConverterUnicodeSet = Int32
UCNV_ROUNDTRIP_SET: UConverterUnicodeSet = 0
UCNV_ROUNDTRIP_AND_FALLBACK_SET: UConverterUnicodeSet = 1
UCurrCurrencyType = Int32
UCURR_ALL: UCurrCurrencyType = 2147483647
UCURR_COMMON: UCurrCurrencyType = 1
UCURR_UNCOMMON: UCurrCurrencyType = 2
UCURR_DEPRECATED: UCurrCurrencyType = 4
UCURR_NON_DEPRECATED: UCurrCurrencyType = 8
UCurrNameStyle = Int32
UCURR_SYMBOL_NAME: UCurrNameStyle = 0
UCURR_LONG_NAME: UCurrNameStyle = 1
UCURR_NARROW_SYMBOL_NAME: UCurrNameStyle = 2
UCurrencySpacing = Int32
UNUM_CURRENCY_MATCH: UCurrencySpacing = 0
UNUM_CURRENCY_SURROUNDING_MATCH: UCurrencySpacing = 1
UNUM_CURRENCY_INSERT: UCurrencySpacing = 2
UNUM_CURRENCY_SPACING_COUNT: UCurrencySpacing = 3
UCurrencyUsage = Int32
UCURR_USAGE_STANDARD: UCurrencyUsage = 0
UCURR_USAGE_CASH: UCurrencyUsage = 1
UDateAbsoluteUnit = Int32
UDAT_ABSOLUTE_SUNDAY: UDateAbsoluteUnit = 0
UDAT_ABSOLUTE_MONDAY: UDateAbsoluteUnit = 1
UDAT_ABSOLUTE_TUESDAY: UDateAbsoluteUnit = 2
UDAT_ABSOLUTE_WEDNESDAY: UDateAbsoluteUnit = 3
UDAT_ABSOLUTE_THURSDAY: UDateAbsoluteUnit = 4
UDAT_ABSOLUTE_FRIDAY: UDateAbsoluteUnit = 5
UDAT_ABSOLUTE_SATURDAY: UDateAbsoluteUnit = 6
UDAT_ABSOLUTE_DAY: UDateAbsoluteUnit = 7
UDAT_ABSOLUTE_WEEK: UDateAbsoluteUnit = 8
UDAT_ABSOLUTE_MONTH: UDateAbsoluteUnit = 9
UDAT_ABSOLUTE_YEAR: UDateAbsoluteUnit = 10
UDAT_ABSOLUTE_NOW: UDateAbsoluteUnit = 11
UDAT_ABSOLUTE_UNIT_COUNT: UDateAbsoluteUnit = 12
UDateDirection = Int32
UDAT_DIRECTION_LAST_2: UDateDirection = 0
UDAT_DIRECTION_LAST: UDateDirection = 1
UDAT_DIRECTION_THIS: UDateDirection = 2
UDAT_DIRECTION_NEXT: UDateDirection = 3
UDAT_DIRECTION_NEXT_2: UDateDirection = 4
UDAT_DIRECTION_PLAIN: UDateDirection = 5
UDAT_DIRECTION_COUNT: UDateDirection = 6
UDateFormatBooleanAttribute = Int32
UDAT_PARSE_ALLOW_WHITESPACE: UDateFormatBooleanAttribute = 0
UDAT_PARSE_ALLOW_NUMERIC: UDateFormatBooleanAttribute = 1
UDAT_PARSE_PARTIAL_LITERAL_MATCH: UDateFormatBooleanAttribute = 2
UDAT_PARSE_MULTIPLE_PATTERNS_FOR_MATCH: UDateFormatBooleanAttribute = 3
UDAT_BOOLEAN_ATTRIBUTE_COUNT: UDateFormatBooleanAttribute = 4
UDateFormatField = Int32
UDAT_ERA_FIELD: UDateFormatField = 0
UDAT_YEAR_FIELD: UDateFormatField = 1
UDAT_MONTH_FIELD: UDateFormatField = 2
UDAT_DATE_FIELD: UDateFormatField = 3
UDAT_HOUR_OF_DAY1_FIELD: UDateFormatField = 4
UDAT_HOUR_OF_DAY0_FIELD: UDateFormatField = 5
UDAT_MINUTE_FIELD: UDateFormatField = 6
UDAT_SECOND_FIELD: UDateFormatField = 7
UDAT_FRACTIONAL_SECOND_FIELD: UDateFormatField = 8
UDAT_DAY_OF_WEEK_FIELD: UDateFormatField = 9
UDAT_DAY_OF_YEAR_FIELD: UDateFormatField = 10
UDAT_DAY_OF_WEEK_IN_MONTH_FIELD: UDateFormatField = 11
UDAT_WEEK_OF_YEAR_FIELD: UDateFormatField = 12
UDAT_WEEK_OF_MONTH_FIELD: UDateFormatField = 13
UDAT_AM_PM_FIELD: UDateFormatField = 14
UDAT_HOUR1_FIELD: UDateFormatField = 15
UDAT_HOUR0_FIELD: UDateFormatField = 16
UDAT_TIMEZONE_FIELD: UDateFormatField = 17
UDAT_YEAR_WOY_FIELD: UDateFormatField = 18
UDAT_DOW_LOCAL_FIELD: UDateFormatField = 19
UDAT_EXTENDED_YEAR_FIELD: UDateFormatField = 20
UDAT_JULIAN_DAY_FIELD: UDateFormatField = 21
UDAT_MILLISECONDS_IN_DAY_FIELD: UDateFormatField = 22
UDAT_TIMEZONE_RFC_FIELD: UDateFormatField = 23
UDAT_TIMEZONE_GENERIC_FIELD: UDateFormatField = 24
UDAT_STANDALONE_DAY_FIELD: UDateFormatField = 25
UDAT_STANDALONE_MONTH_FIELD: UDateFormatField = 26
UDAT_QUARTER_FIELD: UDateFormatField = 27
UDAT_STANDALONE_QUARTER_FIELD: UDateFormatField = 28
UDAT_TIMEZONE_SPECIAL_FIELD: UDateFormatField = 29
UDAT_YEAR_NAME_FIELD: UDateFormatField = 30
UDAT_TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD: UDateFormatField = 31
UDAT_TIMEZONE_ISO_FIELD: UDateFormatField = 32
UDAT_TIMEZONE_ISO_LOCAL_FIELD: UDateFormatField = 33
UDAT_AM_PM_MIDNIGHT_NOON_FIELD: UDateFormatField = 35
UDAT_FLEXIBLE_DAY_PERIOD_FIELD: UDateFormatField = 36
UDateFormatStyle = Int32
UDAT_FULL: UDateFormatStyle = 0
UDAT_LONG: UDateFormatStyle = 1
UDAT_MEDIUM: UDateFormatStyle = 2
UDAT_SHORT: UDateFormatStyle = 3
UDAT_DEFAULT: UDateFormatStyle = 2
UDAT_RELATIVE: UDateFormatStyle = 128
UDAT_FULL_RELATIVE: UDateFormatStyle = 128
UDAT_LONG_RELATIVE: UDateFormatStyle = 129
UDAT_MEDIUM_RELATIVE: UDateFormatStyle = 130
UDAT_SHORT_RELATIVE: UDateFormatStyle = 131
UDAT_NONE: UDateFormatStyle = -1
UDAT_PATTERN: UDateFormatStyle = -2
UDateFormatSymbolType = Int32
UDAT_ERAS: UDateFormatSymbolType = 0
UDAT_MONTHS: UDateFormatSymbolType = 1
UDAT_SHORT_MONTHS: UDateFormatSymbolType = 2
UDAT_WEEKDAYS: UDateFormatSymbolType = 3
UDAT_SHORT_WEEKDAYS: UDateFormatSymbolType = 4
UDAT_AM_PMS: UDateFormatSymbolType = 5
UDAT_LOCALIZED_CHARS: UDateFormatSymbolType = 6
UDAT_ERA_NAMES: UDateFormatSymbolType = 7
UDAT_NARROW_MONTHS: UDateFormatSymbolType = 8
UDAT_NARROW_WEEKDAYS: UDateFormatSymbolType = 9
UDAT_STANDALONE_MONTHS: UDateFormatSymbolType = 10
UDAT_STANDALONE_SHORT_MONTHS: UDateFormatSymbolType = 11
UDAT_STANDALONE_NARROW_MONTHS: UDateFormatSymbolType = 12
UDAT_STANDALONE_WEEKDAYS: UDateFormatSymbolType = 13
UDAT_STANDALONE_SHORT_WEEKDAYS: UDateFormatSymbolType = 14
UDAT_STANDALONE_NARROW_WEEKDAYS: UDateFormatSymbolType = 15
UDAT_QUARTERS: UDateFormatSymbolType = 16
UDAT_SHORT_QUARTERS: UDateFormatSymbolType = 17
UDAT_STANDALONE_QUARTERS: UDateFormatSymbolType = 18
UDAT_STANDALONE_SHORT_QUARTERS: UDateFormatSymbolType = 19
UDAT_SHORTER_WEEKDAYS: UDateFormatSymbolType = 20
UDAT_STANDALONE_SHORTER_WEEKDAYS: UDateFormatSymbolType = 21
UDAT_CYCLIC_YEARS_WIDE: UDateFormatSymbolType = 22
UDAT_CYCLIC_YEARS_ABBREVIATED: UDateFormatSymbolType = 23
UDAT_CYCLIC_YEARS_NARROW: UDateFormatSymbolType = 24
UDAT_ZODIAC_NAMES_WIDE: UDateFormatSymbolType = 25
UDAT_ZODIAC_NAMES_ABBREVIATED: UDateFormatSymbolType = 26
UDAT_ZODIAC_NAMES_NARROW: UDateFormatSymbolType = 27
class UDateFormatSymbols(Structure):
    pass
class UDateIntervalFormat(Structure):
    pass
UDateRelativeDateTimeFormatterStyle = Int32
UDAT_STYLE_LONG: UDateRelativeDateTimeFormatterStyle = 0
UDAT_STYLE_SHORT: UDateRelativeDateTimeFormatterStyle = 1
UDAT_STYLE_NARROW: UDateRelativeDateTimeFormatterStyle = 2
UDateRelativeUnit = Int32
UDAT_RELATIVE_SECONDS: UDateRelativeUnit = 0
UDAT_RELATIVE_MINUTES: UDateRelativeUnit = 1
UDAT_RELATIVE_HOURS: UDateRelativeUnit = 2
UDAT_RELATIVE_DAYS: UDateRelativeUnit = 3
UDAT_RELATIVE_WEEKS: UDateRelativeUnit = 4
UDAT_RELATIVE_MONTHS: UDateRelativeUnit = 5
UDAT_RELATIVE_YEARS: UDateRelativeUnit = 6
UDAT_RELATIVE_UNIT_COUNT: UDateRelativeUnit = 7
UDateTimePGDisplayWidth = Int32
UDATPG_WIDE: UDateTimePGDisplayWidth = 0
UDATPG_ABBREVIATED: UDateTimePGDisplayWidth = 1
UDATPG_NARROW: UDateTimePGDisplayWidth = 2
UDateTimePatternConflict = Int32
UDATPG_NO_CONFLICT: UDateTimePatternConflict = 0
UDATPG_BASE_CONFLICT: UDateTimePatternConflict = 1
UDATPG_CONFLICT: UDateTimePatternConflict = 2
UDateTimePatternField = Int32
UDATPG_ERA_FIELD: UDateTimePatternField = 0
UDATPG_YEAR_FIELD: UDateTimePatternField = 1
UDATPG_QUARTER_FIELD: UDateTimePatternField = 2
UDATPG_MONTH_FIELD: UDateTimePatternField = 3
UDATPG_WEEK_OF_YEAR_FIELD: UDateTimePatternField = 4
UDATPG_WEEK_OF_MONTH_FIELD: UDateTimePatternField = 5
UDATPG_WEEKDAY_FIELD: UDateTimePatternField = 6
UDATPG_DAY_OF_YEAR_FIELD: UDateTimePatternField = 7
UDATPG_DAY_OF_WEEK_IN_MONTH_FIELD: UDateTimePatternField = 8
UDATPG_DAY_FIELD: UDateTimePatternField = 9
UDATPG_DAYPERIOD_FIELD: UDateTimePatternField = 10
UDATPG_HOUR_FIELD: UDateTimePatternField = 11
UDATPG_MINUTE_FIELD: UDateTimePatternField = 12
UDATPG_SECOND_FIELD: UDateTimePatternField = 13
UDATPG_FRACTIONAL_SECOND_FIELD: UDateTimePatternField = 14
UDATPG_ZONE_FIELD: UDateTimePatternField = 15
UDATPG_FIELD_COUNT: UDateTimePatternField = 16
UDateTimePatternMatchOptions = Int32
UDATPG_MATCH_NO_OPTIONS: UDateTimePatternMatchOptions = 0
UDATPG_MATCH_HOUR_FIELD_LENGTH: UDateTimePatternMatchOptions = 2048
UDATPG_MATCH_ALL_FIELDS_LENGTH: UDateTimePatternMatchOptions = 65535
UDateTimeScale = Int32
UDTS_JAVA_TIME: UDateTimeScale = 0
UDTS_UNIX_TIME: UDateTimeScale = 1
UDTS_ICU4C_TIME: UDateTimeScale = 2
UDTS_WINDOWS_FILE_TIME: UDateTimeScale = 3
UDTS_DOTNET_DATE_TIME: UDateTimeScale = 4
UDTS_MAC_OLD_TIME: UDateTimeScale = 5
UDTS_MAC_TIME: UDateTimeScale = 6
UDTS_EXCEL_TIME: UDateTimeScale = 7
UDTS_DB2_TIME: UDateTimeScale = 8
UDTS_UNIX_MICROSECONDS_TIME: UDateTimeScale = 9
UDecompositionType = Int32
U_DT_NONE: UDecompositionType = 0
U_DT_CANONICAL: UDecompositionType = 1
U_DT_COMPAT: UDecompositionType = 2
U_DT_CIRCLE: UDecompositionType = 3
U_DT_FINAL: UDecompositionType = 4
U_DT_FONT: UDecompositionType = 5
U_DT_FRACTION: UDecompositionType = 6
U_DT_INITIAL: UDecompositionType = 7
U_DT_ISOLATED: UDecompositionType = 8
U_DT_MEDIAL: UDecompositionType = 9
U_DT_NARROW: UDecompositionType = 10
U_DT_NOBREAK: UDecompositionType = 11
U_DT_SMALL: UDecompositionType = 12
U_DT_SQUARE: UDecompositionType = 13
U_DT_SUB: UDecompositionType = 14
U_DT_SUPER: UDecompositionType = 15
U_DT_VERTICAL: UDecompositionType = 16
U_DT_WIDE: UDecompositionType = 17
UDialectHandling = Int32
ULDN_STANDARD_NAMES: UDialectHandling = 0
ULDN_DIALECT_NAMES: UDialectHandling = 1
UDisplayContext = Int32
UDISPCTX_STANDARD_NAMES: UDisplayContext = 0
UDISPCTX_DIALECT_NAMES: UDisplayContext = 1
UDISPCTX_CAPITALIZATION_NONE: UDisplayContext = 256
UDISPCTX_CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE: UDisplayContext = 257
UDISPCTX_CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE: UDisplayContext = 258
UDISPCTX_CAPITALIZATION_FOR_UI_LIST_OR_MENU: UDisplayContext = 259
UDISPCTX_CAPITALIZATION_FOR_STANDALONE: UDisplayContext = 260
UDISPCTX_LENGTH_FULL: UDisplayContext = 512
UDISPCTX_LENGTH_SHORT: UDisplayContext = 513
UDISPCTX_SUBSTITUTE: UDisplayContext = 768
UDISPCTX_NO_SUBSTITUTE: UDisplayContext = 769
UDisplayContextType = Int32
UDISPCTX_TYPE_DIALECT_HANDLING: UDisplayContextType = 0
UDISPCTX_TYPE_CAPITALIZATION: UDisplayContextType = 1
UDISPCTX_TYPE_DISPLAY_LENGTH: UDisplayContextType = 2
UDISPCTX_TYPE_SUBSTITUTE_HANDLING: UDisplayContextType = 3
UEastAsianWidth = Int32
U_EA_NEUTRAL: UEastAsianWidth = 0
U_EA_AMBIGUOUS: UEastAsianWidth = 1
U_EA_HALFWIDTH: UEastAsianWidth = 2
U_EA_FULLWIDTH: UEastAsianWidth = 3
U_EA_NARROW: UEastAsianWidth = 4
U_EA_WIDE: UEastAsianWidth = 5
@cfunctype_pointer
def UEnumCharNamesFn(context: c_void_p, code: Int32, nameChoice: win32more.Globalization.UCharNameChoice, name: win32more.Foundation.PSTR, length: Int32) -> SByte: ...
class UEnumeration(Structure):
    pass
UErrorCode = Int32
U_USING_FALLBACK_WARNING: UErrorCode = -128
U_ERROR_WARNING_START: UErrorCode = -128
U_USING_DEFAULT_WARNING: UErrorCode = -127
U_SAFECLONE_ALLOCATED_WARNING: UErrorCode = -126
U_STATE_OLD_WARNING: UErrorCode = -125
U_STRING_NOT_TERMINATED_WARNING: UErrorCode = -124
U_SORT_KEY_TOO_SHORT_WARNING: UErrorCode = -123
U_AMBIGUOUS_ALIAS_WARNING: UErrorCode = -122
U_DIFFERENT_UCA_VERSION: UErrorCode = -121
U_PLUGIN_CHANGED_LEVEL_WARNING: UErrorCode = -120
U_ZERO_ERROR: UErrorCode = 0
U_ILLEGAL_ARGUMENT_ERROR: UErrorCode = 1
U_MISSING_RESOURCE_ERROR: UErrorCode = 2
U_INVALID_FORMAT_ERROR: UErrorCode = 3
U_FILE_ACCESS_ERROR: UErrorCode = 4
U_INTERNAL_PROGRAM_ERROR: UErrorCode = 5
U_MESSAGE_PARSE_ERROR: UErrorCode = 6
U_MEMORY_ALLOCATION_ERROR: UErrorCode = 7
U_INDEX_OUTOFBOUNDS_ERROR: UErrorCode = 8
U_PARSE_ERROR: UErrorCode = 9
U_INVALID_CHAR_FOUND: UErrorCode = 10
U_TRUNCATED_CHAR_FOUND: UErrorCode = 11
U_ILLEGAL_CHAR_FOUND: UErrorCode = 12
U_INVALID_TABLE_FORMAT: UErrorCode = 13
U_INVALID_TABLE_FILE: UErrorCode = 14
U_BUFFER_OVERFLOW_ERROR: UErrorCode = 15
U_UNSUPPORTED_ERROR: UErrorCode = 16
U_RESOURCE_TYPE_MISMATCH: UErrorCode = 17
U_ILLEGAL_ESCAPE_SEQUENCE: UErrorCode = 18
U_UNSUPPORTED_ESCAPE_SEQUENCE: UErrorCode = 19
U_NO_SPACE_AVAILABLE: UErrorCode = 20
U_CE_NOT_FOUND_ERROR: UErrorCode = 21
U_PRIMARY_TOO_LONG_ERROR: UErrorCode = 22
U_STATE_TOO_OLD_ERROR: UErrorCode = 23
U_TOO_MANY_ALIASES_ERROR: UErrorCode = 24
U_ENUM_OUT_OF_SYNC_ERROR: UErrorCode = 25
U_INVARIANT_CONVERSION_ERROR: UErrorCode = 26
U_INVALID_STATE_ERROR: UErrorCode = 27
U_COLLATOR_VERSION_MISMATCH: UErrorCode = 28
U_USELESS_COLLATOR_ERROR: UErrorCode = 29
U_NO_WRITE_PERMISSION: UErrorCode = 30
U_BAD_VARIABLE_DEFINITION: UErrorCode = 65536
U_PARSE_ERROR_START: UErrorCode = 65536
U_MALFORMED_RULE: UErrorCode = 65537
U_MALFORMED_SET: UErrorCode = 65538
U_MALFORMED_SYMBOL_REFERENCE: UErrorCode = 65539
U_MALFORMED_UNICODE_ESCAPE: UErrorCode = 65540
U_MALFORMED_VARIABLE_DEFINITION: UErrorCode = 65541
U_MALFORMED_VARIABLE_REFERENCE: UErrorCode = 65542
U_MISMATCHED_SEGMENT_DELIMITERS: UErrorCode = 65543
U_MISPLACED_ANCHOR_START: UErrorCode = 65544
U_MISPLACED_CURSOR_OFFSET: UErrorCode = 65545
U_MISPLACED_QUANTIFIER: UErrorCode = 65546
U_MISSING_OPERATOR: UErrorCode = 65547
U_MISSING_SEGMENT_CLOSE: UErrorCode = 65548
U_MULTIPLE_ANTE_CONTEXTS: UErrorCode = 65549
U_MULTIPLE_CURSORS: UErrorCode = 65550
U_MULTIPLE_POST_CONTEXTS: UErrorCode = 65551
U_TRAILING_BACKSLASH: UErrorCode = 65552
U_UNDEFINED_SEGMENT_REFERENCE: UErrorCode = 65553
U_UNDEFINED_VARIABLE: UErrorCode = 65554
U_UNQUOTED_SPECIAL: UErrorCode = 65555
U_UNTERMINATED_QUOTE: UErrorCode = 65556
U_RULE_MASK_ERROR: UErrorCode = 65557
U_MISPLACED_COMPOUND_FILTER: UErrorCode = 65558
U_MULTIPLE_COMPOUND_FILTERS: UErrorCode = 65559
U_INVALID_RBT_SYNTAX: UErrorCode = 65560
U_INVALID_PROPERTY_PATTERN: UErrorCode = 65561
U_MALFORMED_PRAGMA: UErrorCode = 65562
U_UNCLOSED_SEGMENT: UErrorCode = 65563
U_ILLEGAL_CHAR_IN_SEGMENT: UErrorCode = 65564
U_VARIABLE_RANGE_EXHAUSTED: UErrorCode = 65565
U_VARIABLE_RANGE_OVERLAP: UErrorCode = 65566
U_ILLEGAL_CHARACTER: UErrorCode = 65567
U_INTERNAL_TRANSLITERATOR_ERROR: UErrorCode = 65568
U_INVALID_ID: UErrorCode = 65569
U_INVALID_FUNCTION: UErrorCode = 65570
U_UNEXPECTED_TOKEN: UErrorCode = 65792
U_FMT_PARSE_ERROR_START: UErrorCode = 65792
U_MULTIPLE_DECIMAL_SEPARATORS: UErrorCode = 65793
U_MULTIPLE_DECIMAL_SEPERATORS: UErrorCode = 65793
U_MULTIPLE_EXPONENTIAL_SYMBOLS: UErrorCode = 65794
U_MALFORMED_EXPONENTIAL_PATTERN: UErrorCode = 65795
U_MULTIPLE_PERCENT_SYMBOLS: UErrorCode = 65796
U_MULTIPLE_PERMILL_SYMBOLS: UErrorCode = 65797
U_MULTIPLE_PAD_SPECIFIERS: UErrorCode = 65798
U_PATTERN_SYNTAX_ERROR: UErrorCode = 65799
U_ILLEGAL_PAD_POSITION: UErrorCode = 65800
U_UNMATCHED_BRACES: UErrorCode = 65801
U_UNSUPPORTED_PROPERTY: UErrorCode = 65802
U_UNSUPPORTED_ATTRIBUTE: UErrorCode = 65803
U_ARGUMENT_TYPE_MISMATCH: UErrorCode = 65804
U_DUPLICATE_KEYWORD: UErrorCode = 65805
U_UNDEFINED_KEYWORD: UErrorCode = 65806
U_DEFAULT_KEYWORD_MISSING: UErrorCode = 65807
U_DECIMAL_NUMBER_SYNTAX_ERROR: UErrorCode = 65808
U_FORMAT_INEXACT_ERROR: UErrorCode = 65809
U_NUMBER_ARG_OUTOFBOUNDS_ERROR: UErrorCode = 65810
U_NUMBER_SKELETON_SYNTAX_ERROR: UErrorCode = 65811
U_BRK_INTERNAL_ERROR: UErrorCode = 66048
U_BRK_ERROR_START: UErrorCode = 66048
U_BRK_HEX_DIGITS_EXPECTED: UErrorCode = 66049
U_BRK_SEMICOLON_EXPECTED: UErrorCode = 66050
U_BRK_RULE_SYNTAX: UErrorCode = 66051
U_BRK_UNCLOSED_SET: UErrorCode = 66052
U_BRK_ASSIGN_ERROR: UErrorCode = 66053
U_BRK_VARIABLE_REDFINITION: UErrorCode = 66054
U_BRK_MISMATCHED_PAREN: UErrorCode = 66055
U_BRK_NEW_LINE_IN_QUOTED_STRING: UErrorCode = 66056
U_BRK_UNDEFINED_VARIABLE: UErrorCode = 66057
U_BRK_INIT_ERROR: UErrorCode = 66058
U_BRK_RULE_EMPTY_SET: UErrorCode = 66059
U_BRK_UNRECOGNIZED_OPTION: UErrorCode = 66060
U_BRK_MALFORMED_RULE_TAG: UErrorCode = 66061
U_REGEX_INTERNAL_ERROR: UErrorCode = 66304
U_REGEX_ERROR_START: UErrorCode = 66304
U_REGEX_RULE_SYNTAX: UErrorCode = 66305
U_REGEX_INVALID_STATE: UErrorCode = 66306
U_REGEX_BAD_ESCAPE_SEQUENCE: UErrorCode = 66307
U_REGEX_PROPERTY_SYNTAX: UErrorCode = 66308
U_REGEX_UNIMPLEMENTED: UErrorCode = 66309
U_REGEX_MISMATCHED_PAREN: UErrorCode = 66310
U_REGEX_NUMBER_TOO_BIG: UErrorCode = 66311
U_REGEX_BAD_INTERVAL: UErrorCode = 66312
U_REGEX_MAX_LT_MIN: UErrorCode = 66313
U_REGEX_INVALID_BACK_REF: UErrorCode = 66314
U_REGEX_INVALID_FLAG: UErrorCode = 66315
U_REGEX_LOOK_BEHIND_LIMIT: UErrorCode = 66316
U_REGEX_SET_CONTAINS_STRING: UErrorCode = 66317
U_REGEX_MISSING_CLOSE_BRACKET: UErrorCode = 66319
U_REGEX_INVALID_RANGE: UErrorCode = 66320
U_REGEX_STACK_OVERFLOW: UErrorCode = 66321
U_REGEX_TIME_OUT: UErrorCode = 66322
U_REGEX_STOPPED_BY_CALLER: UErrorCode = 66323
U_REGEX_PATTERN_TOO_BIG: UErrorCode = 66324
U_REGEX_INVALID_CAPTURE_GROUP_NAME: UErrorCode = 66325
U_IDNA_PROHIBITED_ERROR: UErrorCode = 66560
U_IDNA_ERROR_START: UErrorCode = 66560
U_IDNA_UNASSIGNED_ERROR: UErrorCode = 66561
U_IDNA_CHECK_BIDI_ERROR: UErrorCode = 66562
U_IDNA_STD3_ASCII_RULES_ERROR: UErrorCode = 66563
U_IDNA_ACE_PREFIX_ERROR: UErrorCode = 66564
U_IDNA_VERIFICATION_ERROR: UErrorCode = 66565
U_IDNA_LABEL_TOO_LONG_ERROR: UErrorCode = 66566
U_IDNA_ZERO_LENGTH_LABEL_ERROR: UErrorCode = 66567
U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR: UErrorCode = 66568
U_STRINGPREP_PROHIBITED_ERROR: UErrorCode = 66560
U_STRINGPREP_UNASSIGNED_ERROR: UErrorCode = 66561
U_STRINGPREP_CHECK_BIDI_ERROR: UErrorCode = 66562
U_PLUGIN_ERROR_START: UErrorCode = 66816
U_PLUGIN_TOO_HIGH: UErrorCode = 66816
U_PLUGIN_DIDNT_SET_LEVEL: UErrorCode = 66817
UFieldCategory = Int32
UFIELD_CATEGORY_UNDEFINED: UFieldCategory = 0
UFIELD_CATEGORY_DATE: UFieldCategory = 1
UFIELD_CATEGORY_NUMBER: UFieldCategory = 2
UFIELD_CATEGORY_LIST: UFieldCategory = 3
UFIELD_CATEGORY_RELATIVE_DATETIME: UFieldCategory = 4
UFIELD_CATEGORY_DATE_INTERVAL: UFieldCategory = 5
UFIELD_CATEGORY_LIST_SPAN: UFieldCategory = 4099
UFIELD_CATEGORY_DATE_INTERVAL_SPAN: UFieldCategory = 4101
class UFieldPosition(Structure):
    field: Int32
    beginIndex: Int32
    endIndex: Int32
class UFieldPositionIterator(Structure):
    pass
UFormattableType = Int32
UFMT_DATE: UFormattableType = 0
UFMT_DOUBLE: UFormattableType = 1
UFMT_LONG: UFormattableType = 2
UFMT_STRING: UFormattableType = 3
UFMT_ARRAY: UFormattableType = 4
UFMT_INT64: UFormattableType = 5
UFMT_OBJECT: UFormattableType = 6
class UFormattedDateInterval(Structure):
    pass
class UFormattedList(Structure):
    pass
class UFormattedNumber(Structure):
    pass
class UFormattedNumberRange(Structure):
    pass
class UFormattedRelativeDateTime(Structure):
    pass
class UFormattedValue(Structure):
    pass
UGender = Int32
UGENDER_MALE: UGender = 0
UGENDER_FEMALE: UGender = 1
UGENDER_OTHER: UGender = 2
class UGenderInfo(Structure):
    pass
UGraphemeClusterBreak = Int32
U_GCB_OTHER: UGraphemeClusterBreak = 0
U_GCB_CONTROL: UGraphemeClusterBreak = 1
U_GCB_CR: UGraphemeClusterBreak = 2
U_GCB_EXTEND: UGraphemeClusterBreak = 3
U_GCB_L: UGraphemeClusterBreak = 4
U_GCB_LF: UGraphemeClusterBreak = 5
U_GCB_LV: UGraphemeClusterBreak = 6
U_GCB_LVT: UGraphemeClusterBreak = 7
U_GCB_T: UGraphemeClusterBreak = 8
U_GCB_V: UGraphemeClusterBreak = 9
U_GCB_SPACING_MARK: UGraphemeClusterBreak = 10
U_GCB_PREPEND: UGraphemeClusterBreak = 11
U_GCB_REGIONAL_INDICATOR: UGraphemeClusterBreak = 12
U_GCB_E_BASE: UGraphemeClusterBreak = 13
U_GCB_E_BASE_GAZ: UGraphemeClusterBreak = 14
U_GCB_E_MODIFIER: UGraphemeClusterBreak = 15
U_GCB_GLUE_AFTER_ZWJ: UGraphemeClusterBreak = 16
U_GCB_ZWJ: UGraphemeClusterBreak = 17
UHangulSyllableType = Int32
U_HST_NOT_APPLICABLE: UHangulSyllableType = 0
U_HST_LEADING_JAMO: UHangulSyllableType = 1
U_HST_VOWEL_JAMO: UHangulSyllableType = 2
U_HST_TRAILING_JAMO: UHangulSyllableType = 3
U_HST_LV_SYLLABLE: UHangulSyllableType = 4
U_HST_LVT_SYLLABLE: UHangulSyllableType = 5
class UHashtable(Structure):
    pass
class UIDNA(Structure):
    pass
class UIDNAInfo(Structure):
    size: Int16
    isTransitionalDifferent: SByte
    reservedB3: SByte
    errors: UInt32
    reservedI2: Int32
    reservedI3: Int32
@winfunctype_pointer
def UILANGUAGE_ENUMPROCA(param0: win32more.Foundation.PSTR, param1: IntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def UILANGUAGE_ENUMPROCW(param0: win32more.Foundation.PWSTR, param1: IntPtr) -> win32more.Foundation.BOOL: ...
UIndicPositionalCategory = Int32
U_INPC_NA: UIndicPositionalCategory = 0
U_INPC_BOTTOM: UIndicPositionalCategory = 1
U_INPC_BOTTOM_AND_LEFT: UIndicPositionalCategory = 2
U_INPC_BOTTOM_AND_RIGHT: UIndicPositionalCategory = 3
U_INPC_LEFT: UIndicPositionalCategory = 4
U_INPC_LEFT_AND_RIGHT: UIndicPositionalCategory = 5
U_INPC_OVERSTRUCK: UIndicPositionalCategory = 6
U_INPC_RIGHT: UIndicPositionalCategory = 7
U_INPC_TOP: UIndicPositionalCategory = 8
U_INPC_TOP_AND_BOTTOM: UIndicPositionalCategory = 9
U_INPC_TOP_AND_BOTTOM_AND_RIGHT: UIndicPositionalCategory = 10
U_INPC_TOP_AND_LEFT: UIndicPositionalCategory = 11
U_INPC_TOP_AND_LEFT_AND_RIGHT: UIndicPositionalCategory = 12
U_INPC_TOP_AND_RIGHT: UIndicPositionalCategory = 13
U_INPC_VISUAL_ORDER_LEFT: UIndicPositionalCategory = 14
U_INPC_TOP_AND_BOTTOM_AND_LEFT: UIndicPositionalCategory = 15
UIndicSyllabicCategory = Int32
U_INSC_OTHER: UIndicSyllabicCategory = 0
U_INSC_AVAGRAHA: UIndicSyllabicCategory = 1
U_INSC_BINDU: UIndicSyllabicCategory = 2
U_INSC_BRAHMI_JOINING_NUMBER: UIndicSyllabicCategory = 3
U_INSC_CANTILLATION_MARK: UIndicSyllabicCategory = 4
U_INSC_CONSONANT: UIndicSyllabicCategory = 5
U_INSC_CONSONANT_DEAD: UIndicSyllabicCategory = 6
U_INSC_CONSONANT_FINAL: UIndicSyllabicCategory = 7
U_INSC_CONSONANT_HEAD_LETTER: UIndicSyllabicCategory = 8
U_INSC_CONSONANT_INITIAL_POSTFIXED: UIndicSyllabicCategory = 9
U_INSC_CONSONANT_KILLER: UIndicSyllabicCategory = 10
U_INSC_CONSONANT_MEDIAL: UIndicSyllabicCategory = 11
U_INSC_CONSONANT_PLACEHOLDER: UIndicSyllabicCategory = 12
U_INSC_CONSONANT_PRECEDING_REPHA: UIndicSyllabicCategory = 13
U_INSC_CONSONANT_PREFIXED: UIndicSyllabicCategory = 14
U_INSC_CONSONANT_SUBJOINED: UIndicSyllabicCategory = 15
U_INSC_CONSONANT_SUCCEEDING_REPHA: UIndicSyllabicCategory = 16
U_INSC_CONSONANT_WITH_STACKER: UIndicSyllabicCategory = 17
U_INSC_GEMINATION_MARK: UIndicSyllabicCategory = 18
U_INSC_INVISIBLE_STACKER: UIndicSyllabicCategory = 19
U_INSC_JOINER: UIndicSyllabicCategory = 20
U_INSC_MODIFYING_LETTER: UIndicSyllabicCategory = 21
U_INSC_NON_JOINER: UIndicSyllabicCategory = 22
U_INSC_NUKTA: UIndicSyllabicCategory = 23
U_INSC_NUMBER: UIndicSyllabicCategory = 24
U_INSC_NUMBER_JOINER: UIndicSyllabicCategory = 25
U_INSC_PURE_KILLER: UIndicSyllabicCategory = 26
U_INSC_REGISTER_SHIFTER: UIndicSyllabicCategory = 27
U_INSC_SYLLABLE_MODIFIER: UIndicSyllabicCategory = 28
U_INSC_TONE_LETTER: UIndicSyllabicCategory = 29
U_INSC_TONE_MARK: UIndicSyllabicCategory = 30
U_INSC_VIRAMA: UIndicSyllabicCategory = 31
U_INSC_VISARGA: UIndicSyllabicCategory = 32
U_INSC_VOWEL: UIndicSyllabicCategory = 33
U_INSC_VOWEL_DEPENDENT: UIndicSyllabicCategory = 34
U_INSC_VOWEL_INDEPENDENT: UIndicSyllabicCategory = 35
UJoiningGroup = Int32
U_JG_NO_JOINING_GROUP: UJoiningGroup = 0
U_JG_AIN: UJoiningGroup = 1
U_JG_ALAPH: UJoiningGroup = 2
U_JG_ALEF: UJoiningGroup = 3
U_JG_BEH: UJoiningGroup = 4
U_JG_BETH: UJoiningGroup = 5
U_JG_DAL: UJoiningGroup = 6
U_JG_DALATH_RISH: UJoiningGroup = 7
U_JG_E: UJoiningGroup = 8
U_JG_FEH: UJoiningGroup = 9
U_JG_FINAL_SEMKATH: UJoiningGroup = 10
U_JG_GAF: UJoiningGroup = 11
U_JG_GAMAL: UJoiningGroup = 12
U_JG_HAH: UJoiningGroup = 13
U_JG_TEH_MARBUTA_GOAL: UJoiningGroup = 14
U_JG_HAMZA_ON_HEH_GOAL: UJoiningGroup = 14
U_JG_HE: UJoiningGroup = 15
U_JG_HEH: UJoiningGroup = 16
U_JG_HEH_GOAL: UJoiningGroup = 17
U_JG_HETH: UJoiningGroup = 18
U_JG_KAF: UJoiningGroup = 19
U_JG_KAPH: UJoiningGroup = 20
U_JG_KNOTTED_HEH: UJoiningGroup = 21
U_JG_LAM: UJoiningGroup = 22
U_JG_LAMADH: UJoiningGroup = 23
U_JG_MEEM: UJoiningGroup = 24
U_JG_MIM: UJoiningGroup = 25
U_JG_NOON: UJoiningGroup = 26
U_JG_NUN: UJoiningGroup = 27
U_JG_PE: UJoiningGroup = 28
U_JG_QAF: UJoiningGroup = 29
U_JG_QAPH: UJoiningGroup = 30
U_JG_REH: UJoiningGroup = 31
U_JG_REVERSED_PE: UJoiningGroup = 32
U_JG_SAD: UJoiningGroup = 33
U_JG_SADHE: UJoiningGroup = 34
U_JG_SEEN: UJoiningGroup = 35
U_JG_SEMKATH: UJoiningGroup = 36
U_JG_SHIN: UJoiningGroup = 37
U_JG_SWASH_KAF: UJoiningGroup = 38
U_JG_SYRIAC_WAW: UJoiningGroup = 39
U_JG_TAH: UJoiningGroup = 40
U_JG_TAW: UJoiningGroup = 41
U_JG_TEH_MARBUTA: UJoiningGroup = 42
U_JG_TETH: UJoiningGroup = 43
U_JG_WAW: UJoiningGroup = 44
U_JG_YEH: UJoiningGroup = 45
U_JG_YEH_BARREE: UJoiningGroup = 46
U_JG_YEH_WITH_TAIL: UJoiningGroup = 47
U_JG_YUDH: UJoiningGroup = 48
U_JG_YUDH_HE: UJoiningGroup = 49
U_JG_ZAIN: UJoiningGroup = 50
U_JG_FE: UJoiningGroup = 51
U_JG_KHAPH: UJoiningGroup = 52
U_JG_ZHAIN: UJoiningGroup = 53
U_JG_BURUSHASKI_YEH_BARREE: UJoiningGroup = 54
U_JG_FARSI_YEH: UJoiningGroup = 55
U_JG_NYA: UJoiningGroup = 56
U_JG_ROHINGYA_YEH: UJoiningGroup = 57
U_JG_MANICHAEAN_ALEPH: UJoiningGroup = 58
U_JG_MANICHAEAN_AYIN: UJoiningGroup = 59
U_JG_MANICHAEAN_BETH: UJoiningGroup = 60
U_JG_MANICHAEAN_DALETH: UJoiningGroup = 61
U_JG_MANICHAEAN_DHAMEDH: UJoiningGroup = 62
U_JG_MANICHAEAN_FIVE: UJoiningGroup = 63
U_JG_MANICHAEAN_GIMEL: UJoiningGroup = 64
U_JG_MANICHAEAN_HETH: UJoiningGroup = 65
U_JG_MANICHAEAN_HUNDRED: UJoiningGroup = 66
U_JG_MANICHAEAN_KAPH: UJoiningGroup = 67
U_JG_MANICHAEAN_LAMEDH: UJoiningGroup = 68
U_JG_MANICHAEAN_MEM: UJoiningGroup = 69
U_JG_MANICHAEAN_NUN: UJoiningGroup = 70
U_JG_MANICHAEAN_ONE: UJoiningGroup = 71
U_JG_MANICHAEAN_PE: UJoiningGroup = 72
U_JG_MANICHAEAN_QOPH: UJoiningGroup = 73
U_JG_MANICHAEAN_RESH: UJoiningGroup = 74
U_JG_MANICHAEAN_SADHE: UJoiningGroup = 75
U_JG_MANICHAEAN_SAMEKH: UJoiningGroup = 76
U_JG_MANICHAEAN_TAW: UJoiningGroup = 77
U_JG_MANICHAEAN_TEN: UJoiningGroup = 78
U_JG_MANICHAEAN_TETH: UJoiningGroup = 79
U_JG_MANICHAEAN_THAMEDH: UJoiningGroup = 80
U_JG_MANICHAEAN_TWENTY: UJoiningGroup = 81
U_JG_MANICHAEAN_WAW: UJoiningGroup = 82
U_JG_MANICHAEAN_YODH: UJoiningGroup = 83
U_JG_MANICHAEAN_ZAYIN: UJoiningGroup = 84
U_JG_STRAIGHT_WAW: UJoiningGroup = 85
U_JG_AFRICAN_FEH: UJoiningGroup = 86
U_JG_AFRICAN_NOON: UJoiningGroup = 87
U_JG_AFRICAN_QAF: UJoiningGroup = 88
U_JG_MALAYALAM_BHA: UJoiningGroup = 89
U_JG_MALAYALAM_JA: UJoiningGroup = 90
U_JG_MALAYALAM_LLA: UJoiningGroup = 91
U_JG_MALAYALAM_LLLA: UJoiningGroup = 92
U_JG_MALAYALAM_NGA: UJoiningGroup = 93
U_JG_MALAYALAM_NNA: UJoiningGroup = 94
U_JG_MALAYALAM_NNNA: UJoiningGroup = 95
U_JG_MALAYALAM_NYA: UJoiningGroup = 96
U_JG_MALAYALAM_RA: UJoiningGroup = 97
U_JG_MALAYALAM_SSA: UJoiningGroup = 98
U_JG_MALAYALAM_TTA: UJoiningGroup = 99
U_JG_HANIFI_ROHINGYA_KINNA_YA: UJoiningGroup = 100
U_JG_HANIFI_ROHINGYA_PA: UJoiningGroup = 101
UJoiningType = Int32
U_JT_NON_JOINING: UJoiningType = 0
U_JT_JOIN_CAUSING: UJoiningType = 1
U_JT_DUAL_JOINING: UJoiningType = 2
U_JT_LEFT_JOINING: UJoiningType = 3
U_JT_RIGHT_JOINING: UJoiningType = 4
U_JT_TRANSPARENT: UJoiningType = 5
ULayoutType = Int32
ULOC_LAYOUT_LTR: ULayoutType = 0
ULOC_LAYOUT_RTL: ULayoutType = 1
ULOC_LAYOUT_TTB: ULayoutType = 2
ULOC_LAYOUT_BTT: ULayoutType = 3
ULOC_LAYOUT_UNKNOWN: ULayoutType = 4
ULineBreak = Int32
U_LB_UNKNOWN: ULineBreak = 0
U_LB_AMBIGUOUS: ULineBreak = 1
U_LB_ALPHABETIC: ULineBreak = 2
U_LB_BREAK_BOTH: ULineBreak = 3
U_LB_BREAK_AFTER: ULineBreak = 4
U_LB_BREAK_BEFORE: ULineBreak = 5
U_LB_MANDATORY_BREAK: ULineBreak = 6
U_LB_CONTINGENT_BREAK: ULineBreak = 7
U_LB_CLOSE_PUNCTUATION: ULineBreak = 8
U_LB_COMBINING_MARK: ULineBreak = 9
U_LB_CARRIAGE_RETURN: ULineBreak = 10
U_LB_EXCLAMATION: ULineBreak = 11
U_LB_GLUE: ULineBreak = 12
U_LB_HYPHEN: ULineBreak = 13
U_LB_IDEOGRAPHIC: ULineBreak = 14
U_LB_INSEPARABLE: ULineBreak = 15
U_LB_INSEPERABLE: ULineBreak = 15
U_LB_INFIX_NUMERIC: ULineBreak = 16
U_LB_LINE_FEED: ULineBreak = 17
U_LB_NONSTARTER: ULineBreak = 18
U_LB_NUMERIC: ULineBreak = 19
U_LB_OPEN_PUNCTUATION: ULineBreak = 20
U_LB_POSTFIX_NUMERIC: ULineBreak = 21
U_LB_PREFIX_NUMERIC: ULineBreak = 22
U_LB_QUOTATION: ULineBreak = 23
U_LB_COMPLEX_CONTEXT: ULineBreak = 24
U_LB_SURROGATE: ULineBreak = 25
U_LB_SPACE: ULineBreak = 26
U_LB_BREAK_SYMBOLS: ULineBreak = 27
U_LB_ZWSPACE: ULineBreak = 28
U_LB_NEXT_LINE: ULineBreak = 29
U_LB_WORD_JOINER: ULineBreak = 30
U_LB_H2: ULineBreak = 31
U_LB_H3: ULineBreak = 32
U_LB_JL: ULineBreak = 33
U_LB_JT: ULineBreak = 34
U_LB_JV: ULineBreak = 35
U_LB_CLOSE_PARENTHESIS: ULineBreak = 36
U_LB_CONDITIONAL_JAPANESE_STARTER: ULineBreak = 37
U_LB_HEBREW_LETTER: ULineBreak = 38
U_LB_REGIONAL_INDICATOR: ULineBreak = 39
U_LB_E_BASE: ULineBreak = 40
U_LB_E_MODIFIER: ULineBreak = 41
U_LB_ZWJ: ULineBreak = 42
ULineBreakTag = Int32
UBRK_LINE_SOFT: ULineBreakTag = 0
UBRK_LINE_SOFT_LIMIT: ULineBreakTag = 100
UBRK_LINE_HARD: ULineBreakTag = 100
UBRK_LINE_HARD_LIMIT: ULineBreakTag = 200
class UListFormatter(Structure):
    pass
UListFormatterField = Int32
ULISTFMT_LITERAL_FIELD: UListFormatterField = 0
ULISTFMT_ELEMENT_FIELD: UListFormatterField = 1
UListFormatterType = Int32
ULISTFMT_TYPE_AND: UListFormatterType = 0
ULISTFMT_TYPE_OR: UListFormatterType = 1
ULISTFMT_TYPE_UNITS: UListFormatterType = 2
UListFormatterWidth = Int32
ULISTFMT_WIDTH_WIDE: UListFormatterWidth = 0
ULISTFMT_WIDTH_SHORT: UListFormatterWidth = 1
ULISTFMT_WIDTH_NARROW: UListFormatterWidth = 2
ULocAvailableType = Int32
ULOC_AVAILABLE_DEFAULT: ULocAvailableType = 0
ULOC_AVAILABLE_ONLY_LEGACY_ALIASES: ULocAvailableType = 1
ULOC_AVAILABLE_WITH_LEGACY_ALIASES: ULocAvailableType = 2
ULocDataLocaleType = Int32
ULOC_ACTUAL_LOCALE: ULocDataLocaleType = 0
ULOC_VALID_LOCALE: ULocDataLocaleType = 1
class ULocaleData(Structure):
    pass
ULocaleDataDelimiterType = Int32
ULOCDATA_QUOTATION_START: ULocaleDataDelimiterType = 0
ULOCDATA_QUOTATION_END: ULocaleDataDelimiterType = 1
ULOCDATA_ALT_QUOTATION_START: ULocaleDataDelimiterType = 2
ULOCDATA_ALT_QUOTATION_END: ULocaleDataDelimiterType = 3
ULocaleDataExemplarSetType = Int32
ULOCDATA_ES_STANDARD: ULocaleDataExemplarSetType = 0
ULOCDATA_ES_AUXILIARY: ULocaleDataExemplarSetType = 1
ULOCDATA_ES_INDEX: ULocaleDataExemplarSetType = 2
ULOCDATA_ES_PUNCTUATION: ULocaleDataExemplarSetType = 3
class ULocaleDisplayNames(Structure):
    pass
UMeasureFormatWidth = Int32
UMEASFMT_WIDTH_WIDE: UMeasureFormatWidth = 0
UMEASFMT_WIDTH_SHORT: UMeasureFormatWidth = 1
UMEASFMT_WIDTH_NARROW: UMeasureFormatWidth = 2
UMEASFMT_WIDTH_NUMERIC: UMeasureFormatWidth = 3
UMEASFMT_WIDTH_COUNT: UMeasureFormatWidth = 4
UMeasurementSystem = Int32
UMS_SI: UMeasurementSystem = 0
UMS_US: UMeasurementSystem = 1
UMS_UK: UMeasurementSystem = 2
@cfunctype_pointer
def UMemAllocFn(context: c_void_p, size: UIntPtr) -> c_void_p: ...
@cfunctype_pointer
def UMemFreeFn(context: c_void_p, mem: c_void_p) -> Void: ...
@cfunctype_pointer
def UMemReallocFn(context: c_void_p, mem: c_void_p, size: UIntPtr) -> c_void_p: ...
UMessagePatternApostropheMode = Int32
UMSGPAT_APOS_DOUBLE_OPTIONAL: UMessagePatternApostropheMode = 0
UMSGPAT_APOS_DOUBLE_REQUIRED: UMessagePatternApostropheMode = 1
UMessagePatternArgType = Int32
UMSGPAT_ARG_TYPE_NONE: UMessagePatternArgType = 0
UMSGPAT_ARG_TYPE_SIMPLE: UMessagePatternArgType = 1
UMSGPAT_ARG_TYPE_CHOICE: UMessagePatternArgType = 2
UMSGPAT_ARG_TYPE_PLURAL: UMessagePatternArgType = 3
UMSGPAT_ARG_TYPE_SELECT: UMessagePatternArgType = 4
UMSGPAT_ARG_TYPE_SELECTORDINAL: UMessagePatternArgType = 5
UMessagePatternPartType = Int32
UMSGPAT_PART_TYPE_MSG_START: UMessagePatternPartType = 0
UMSGPAT_PART_TYPE_MSG_LIMIT: UMessagePatternPartType = 1
UMSGPAT_PART_TYPE_SKIP_SYNTAX: UMessagePatternPartType = 2
UMSGPAT_PART_TYPE_INSERT_CHAR: UMessagePatternPartType = 3
UMSGPAT_PART_TYPE_REPLACE_NUMBER: UMessagePatternPartType = 4
UMSGPAT_PART_TYPE_ARG_START: UMessagePatternPartType = 5
UMSGPAT_PART_TYPE_ARG_LIMIT: UMessagePatternPartType = 6
UMSGPAT_PART_TYPE_ARG_NUMBER: UMessagePatternPartType = 7
UMSGPAT_PART_TYPE_ARG_NAME: UMessagePatternPartType = 8
UMSGPAT_PART_TYPE_ARG_TYPE: UMessagePatternPartType = 9
UMSGPAT_PART_TYPE_ARG_STYLE: UMessagePatternPartType = 10
UMSGPAT_PART_TYPE_ARG_SELECTOR: UMessagePatternPartType = 11
UMSGPAT_PART_TYPE_ARG_INT: UMessagePatternPartType = 12
UMSGPAT_PART_TYPE_ARG_DOUBLE: UMessagePatternPartType = 13
class UMutableCPTrie(Structure):
    pass
@cfunctype_pointer
def UNESCAPE_CHAR_AT(offset: Int32, context: c_void_p) -> UInt16: ...
class UNICODERANGE(Structure):
    wcFrom: Char
    wcTo: Char
UNormalization2Mode = Int32
UNORM2_COMPOSE: UNormalization2Mode = 0
UNORM2_DECOMPOSE: UNormalization2Mode = 1
UNORM2_FCD: UNormalization2Mode = 2
UNORM2_COMPOSE_CONTIGUOUS: UNormalization2Mode = 3
UNormalizationCheckResult = Int32
UNORM_NO: UNormalizationCheckResult = 0
UNORM_YES: UNormalizationCheckResult = 1
UNORM_MAYBE: UNormalizationCheckResult = 2
UNormalizationMode = Int32
UNORM_NONE: UNormalizationMode = 1
UNORM_NFD: UNormalizationMode = 2
UNORM_NFKD: UNormalizationMode = 3
UNORM_NFC: UNormalizationMode = 4
UNORM_DEFAULT: UNormalizationMode = 4
UNORM_NFKC: UNormalizationMode = 5
UNORM_FCD: UNormalizationMode = 6
UNORM_MODE_COUNT: UNormalizationMode = 7
class UNormalizer2(Structure):
    pass
UNumberCompactStyle = Int32
UNUM_SHORT: UNumberCompactStyle = 0
UNUM_LONG: UNumberCompactStyle = 1
UNumberDecimalSeparatorDisplay = Int32
UNUM_DECIMAL_SEPARATOR_AUTO: UNumberDecimalSeparatorDisplay = 0
UNUM_DECIMAL_SEPARATOR_ALWAYS: UNumberDecimalSeparatorDisplay = 1
UNUM_DECIMAL_SEPARATOR_COUNT: UNumberDecimalSeparatorDisplay = 2
UNumberFormatAttribute = Int32
UNUM_PARSE_INT_ONLY: UNumberFormatAttribute = 0
UNUM_GROUPING_USED: UNumberFormatAttribute = 1
UNUM_DECIMAL_ALWAYS_SHOWN: UNumberFormatAttribute = 2
UNUM_MAX_INTEGER_DIGITS: UNumberFormatAttribute = 3
UNUM_MIN_INTEGER_DIGITS: UNumberFormatAttribute = 4
UNUM_INTEGER_DIGITS: UNumberFormatAttribute = 5
UNUM_MAX_FRACTION_DIGITS: UNumberFormatAttribute = 6
UNUM_MIN_FRACTION_DIGITS: UNumberFormatAttribute = 7
UNUM_FRACTION_DIGITS: UNumberFormatAttribute = 8
UNUM_MULTIPLIER: UNumberFormatAttribute = 9
UNUM_GROUPING_SIZE: UNumberFormatAttribute = 10
UNUM_ROUNDING_MODE: UNumberFormatAttribute = 11
UNUM_ROUNDING_INCREMENT: UNumberFormatAttribute = 12
UNUM_FORMAT_WIDTH: UNumberFormatAttribute = 13
UNUM_PADDING_POSITION: UNumberFormatAttribute = 14
UNUM_SECONDARY_GROUPING_SIZE: UNumberFormatAttribute = 15
UNUM_SIGNIFICANT_DIGITS_USED: UNumberFormatAttribute = 16
UNUM_MIN_SIGNIFICANT_DIGITS: UNumberFormatAttribute = 17
UNUM_MAX_SIGNIFICANT_DIGITS: UNumberFormatAttribute = 18
UNUM_LENIENT_PARSE: UNumberFormatAttribute = 19
UNUM_PARSE_ALL_INPUT: UNumberFormatAttribute = 20
UNUM_SCALE: UNumberFormatAttribute = 21
UNUM_MINIMUM_GROUPING_DIGITS: UNumberFormatAttribute = 22
UNUM_CURRENCY_USAGE: UNumberFormatAttribute = 23
UNUM_FORMAT_FAIL_IF_MORE_THAN_MAX_DIGITS: UNumberFormatAttribute = 4096
UNUM_PARSE_NO_EXPONENT: UNumberFormatAttribute = 4097
UNUM_PARSE_DECIMAL_MARK_REQUIRED: UNumberFormatAttribute = 4098
UNUM_PARSE_CASE_SENSITIVE: UNumberFormatAttribute = 4099
UNUM_SIGN_ALWAYS_SHOWN: UNumberFormatAttribute = 4100
UNumberFormatAttributeValue = Int32
UNUM_FORMAT_ATTRIBUTE_VALUE_HIDDEN: UNumberFormatAttributeValue = 0
UNumberFormatFields = Int32
UNUM_INTEGER_FIELD: UNumberFormatFields = 0
UNUM_FRACTION_FIELD: UNumberFormatFields = 1
UNUM_DECIMAL_SEPARATOR_FIELD: UNumberFormatFields = 2
UNUM_EXPONENT_SYMBOL_FIELD: UNumberFormatFields = 3
UNUM_EXPONENT_SIGN_FIELD: UNumberFormatFields = 4
UNUM_EXPONENT_FIELD: UNumberFormatFields = 5
UNUM_GROUPING_SEPARATOR_FIELD: UNumberFormatFields = 6
UNUM_CURRENCY_FIELD: UNumberFormatFields = 7
UNUM_PERCENT_FIELD: UNumberFormatFields = 8
UNUM_PERMILL_FIELD: UNumberFormatFields = 9
UNUM_SIGN_FIELD: UNumberFormatFields = 10
UNUM_MEASURE_UNIT_FIELD: UNumberFormatFields = 11
UNUM_COMPACT_FIELD: UNumberFormatFields = 12
UNumberFormatPadPosition = Int32
UNUM_PAD_BEFORE_PREFIX: UNumberFormatPadPosition = 0
UNUM_PAD_AFTER_PREFIX: UNumberFormatPadPosition = 1
UNUM_PAD_BEFORE_SUFFIX: UNumberFormatPadPosition = 2
UNUM_PAD_AFTER_SUFFIX: UNumberFormatPadPosition = 3
UNumberFormatRoundingMode = Int32
UNUM_ROUND_CEILING: UNumberFormatRoundingMode = 0
UNUM_ROUND_FLOOR: UNumberFormatRoundingMode = 1
UNUM_ROUND_DOWN: UNumberFormatRoundingMode = 2
UNUM_ROUND_UP: UNumberFormatRoundingMode = 3
UNUM_ROUND_HALFEVEN: UNumberFormatRoundingMode = 4
UNUM_ROUND_HALFDOWN: UNumberFormatRoundingMode = 5
UNUM_ROUND_HALFUP: UNumberFormatRoundingMode = 6
UNUM_ROUND_UNNECESSARY: UNumberFormatRoundingMode = 7
UNumberFormatStyle = Int32
UNUM_PATTERN_DECIMAL: UNumberFormatStyle = 0
UNUM_DECIMAL: UNumberFormatStyle = 1
UNUM_CURRENCY: UNumberFormatStyle = 2
UNUM_PERCENT: UNumberFormatStyle = 3
UNUM_SCIENTIFIC: UNumberFormatStyle = 4
UNUM_SPELLOUT: UNumberFormatStyle = 5
UNUM_ORDINAL: UNumberFormatStyle = 6
UNUM_DURATION: UNumberFormatStyle = 7
UNUM_NUMBERING_SYSTEM: UNumberFormatStyle = 8
UNUM_PATTERN_RULEBASED: UNumberFormatStyle = 9
UNUM_CURRENCY_ISO: UNumberFormatStyle = 10
UNUM_CURRENCY_PLURAL: UNumberFormatStyle = 11
UNUM_CURRENCY_ACCOUNTING: UNumberFormatStyle = 12
UNUM_CASH_CURRENCY: UNumberFormatStyle = 13
UNUM_DECIMAL_COMPACT_SHORT: UNumberFormatStyle = 14
UNUM_DECIMAL_COMPACT_LONG: UNumberFormatStyle = 15
UNUM_CURRENCY_STANDARD: UNumberFormatStyle = 16
UNUM_DEFAULT: UNumberFormatStyle = 1
UNUM_IGNORE: UNumberFormatStyle = 0
UNumberFormatSymbol = Int32
UNUM_DECIMAL_SEPARATOR_SYMBOL: UNumberFormatSymbol = 0
UNUM_GROUPING_SEPARATOR_SYMBOL: UNumberFormatSymbol = 1
UNUM_PATTERN_SEPARATOR_SYMBOL: UNumberFormatSymbol = 2
UNUM_PERCENT_SYMBOL: UNumberFormatSymbol = 3
UNUM_ZERO_DIGIT_SYMBOL: UNumberFormatSymbol = 4
UNUM_DIGIT_SYMBOL: UNumberFormatSymbol = 5
UNUM_MINUS_SIGN_SYMBOL: UNumberFormatSymbol = 6
UNUM_PLUS_SIGN_SYMBOL: UNumberFormatSymbol = 7
UNUM_CURRENCY_SYMBOL: UNumberFormatSymbol = 8
UNUM_INTL_CURRENCY_SYMBOL: UNumberFormatSymbol = 9
UNUM_MONETARY_SEPARATOR_SYMBOL: UNumberFormatSymbol = 10
UNUM_EXPONENTIAL_SYMBOL: UNumberFormatSymbol = 11
UNUM_PERMILL_SYMBOL: UNumberFormatSymbol = 12
UNUM_PAD_ESCAPE_SYMBOL: UNumberFormatSymbol = 13
UNUM_INFINITY_SYMBOL: UNumberFormatSymbol = 14
UNUM_NAN_SYMBOL: UNumberFormatSymbol = 15
UNUM_SIGNIFICANT_DIGIT_SYMBOL: UNumberFormatSymbol = 16
UNUM_MONETARY_GROUPING_SEPARATOR_SYMBOL: UNumberFormatSymbol = 17
UNUM_ONE_DIGIT_SYMBOL: UNumberFormatSymbol = 18
UNUM_TWO_DIGIT_SYMBOL: UNumberFormatSymbol = 19
UNUM_THREE_DIGIT_SYMBOL: UNumberFormatSymbol = 20
UNUM_FOUR_DIGIT_SYMBOL: UNumberFormatSymbol = 21
UNUM_FIVE_DIGIT_SYMBOL: UNumberFormatSymbol = 22
UNUM_SIX_DIGIT_SYMBOL: UNumberFormatSymbol = 23
UNUM_SEVEN_DIGIT_SYMBOL: UNumberFormatSymbol = 24
UNUM_EIGHT_DIGIT_SYMBOL: UNumberFormatSymbol = 25
UNUM_NINE_DIGIT_SYMBOL: UNumberFormatSymbol = 26
UNUM_EXPONENT_MULTIPLICATION_SYMBOL: UNumberFormatSymbol = 27
UNumberFormatTextAttribute = Int32
UNUM_POSITIVE_PREFIX: UNumberFormatTextAttribute = 0
UNUM_POSITIVE_SUFFIX: UNumberFormatTextAttribute = 1
UNUM_NEGATIVE_PREFIX: UNumberFormatTextAttribute = 2
UNUM_NEGATIVE_SUFFIX: UNumberFormatTextAttribute = 3
UNUM_PADDING_CHARACTER: UNumberFormatTextAttribute = 4
UNUM_CURRENCY_CODE: UNumberFormatTextAttribute = 5
UNUM_DEFAULT_RULESET: UNumberFormatTextAttribute = 6
UNUM_PUBLIC_RULESETS: UNumberFormatTextAttribute = 7
class UNumberFormatter(Structure):
    pass
UNumberGroupingStrategy = Int32
UNUM_GROUPING_OFF: UNumberGroupingStrategy = 0
UNUM_GROUPING_MIN2: UNumberGroupingStrategy = 1
UNUM_GROUPING_AUTO: UNumberGroupingStrategy = 2
UNUM_GROUPING_ON_ALIGNED: UNumberGroupingStrategy = 3
UNUM_GROUPING_THOUSANDS: UNumberGroupingStrategy = 4
UNumberRangeCollapse = Int32
UNUM_RANGE_COLLAPSE_AUTO: UNumberRangeCollapse = 0
UNUM_RANGE_COLLAPSE_NONE: UNumberRangeCollapse = 1
UNUM_RANGE_COLLAPSE_UNIT: UNumberRangeCollapse = 2
UNUM_RANGE_COLLAPSE_ALL: UNumberRangeCollapse = 3
UNumberRangeIdentityFallback = Int32
UNUM_IDENTITY_FALLBACK_SINGLE_VALUE: UNumberRangeIdentityFallback = 0
UNUM_IDENTITY_FALLBACK_APPROXIMATELY_OR_SINGLE_VALUE: UNumberRangeIdentityFallback = 1
UNUM_IDENTITY_FALLBACK_APPROXIMATELY: UNumberRangeIdentityFallback = 2
UNUM_IDENTITY_FALLBACK_RANGE: UNumberRangeIdentityFallback = 3
UNumberRangeIdentityResult = Int32
UNUM_IDENTITY_RESULT_EQUAL_BEFORE_ROUNDING: UNumberRangeIdentityResult = 0
UNUM_IDENTITY_RESULT_EQUAL_AFTER_ROUNDING: UNumberRangeIdentityResult = 1
UNUM_IDENTITY_RESULT_NOT_EQUAL: UNumberRangeIdentityResult = 2
UNumberSignDisplay = Int32
UNUM_SIGN_AUTO: UNumberSignDisplay = 0
UNUM_SIGN_ALWAYS: UNumberSignDisplay = 1
UNUM_SIGN_NEVER: UNumberSignDisplay = 2
UNUM_SIGN_ACCOUNTING: UNumberSignDisplay = 3
UNUM_SIGN_ACCOUNTING_ALWAYS: UNumberSignDisplay = 4
UNUM_SIGN_EXCEPT_ZERO: UNumberSignDisplay = 5
UNUM_SIGN_ACCOUNTING_EXCEPT_ZERO: UNumberSignDisplay = 6
UNUM_SIGN_COUNT: UNumberSignDisplay = 7
UNumberUnitWidth = Int32
UNUM_UNIT_WIDTH_NARROW: UNumberUnitWidth = 0
UNUM_UNIT_WIDTH_SHORT: UNumberUnitWidth = 1
UNUM_UNIT_WIDTH_FULL_NAME: UNumberUnitWidth = 2
UNUM_UNIT_WIDTH_ISO_CODE: UNumberUnitWidth = 3
UNUM_UNIT_WIDTH_HIDDEN: UNumberUnitWidth = 4
UNUM_UNIT_WIDTH_COUNT: UNumberUnitWidth = 5
class UNumberingSystem(Structure):
    pass
UNumericType = Int32
U_NT_NONE: UNumericType = 0
U_NT_DECIMAL: UNumericType = 1
U_NT_DIGIT: UNumericType = 2
U_NT_NUMERIC: UNumericType = 3
class UParseError(Structure):
    line: Int32
    offset: Int32
    preContext: UInt16 * 16
    postContext: UInt16 * 16
class UPluralRules(Structure):
    pass
UPluralType = Int32
UPLURAL_TYPE_CARDINAL: UPluralType = 0
UPLURAL_TYPE_ORDINAL: UPluralType = 1
UProperty = Int32
UCHAR_ALPHABETIC: UProperty = 0
UCHAR_BINARY_START: UProperty = 0
UCHAR_ASCII_HEX_DIGIT: UProperty = 1
UCHAR_BIDI_CONTROL: UProperty = 2
UCHAR_BIDI_MIRRORED: UProperty = 3
UCHAR_DASH: UProperty = 4
UCHAR_DEFAULT_IGNORABLE_CODE_POINT: UProperty = 5
UCHAR_DEPRECATED: UProperty = 6
UCHAR_DIACRITIC: UProperty = 7
UCHAR_EXTENDER: UProperty = 8
UCHAR_FULL_COMPOSITION_EXCLUSION: UProperty = 9
UCHAR_GRAPHEME_BASE: UProperty = 10
UCHAR_GRAPHEME_EXTEND: UProperty = 11
UCHAR_GRAPHEME_LINK: UProperty = 12
UCHAR_HEX_DIGIT: UProperty = 13
UCHAR_HYPHEN: UProperty = 14
UCHAR_ID_CONTINUE: UProperty = 15
UCHAR_ID_START: UProperty = 16
UCHAR_IDEOGRAPHIC: UProperty = 17
UCHAR_IDS_BINARY_OPERATOR: UProperty = 18
UCHAR_IDS_TRINARY_OPERATOR: UProperty = 19
UCHAR_JOIN_CONTROL: UProperty = 20
UCHAR_LOGICAL_ORDER_EXCEPTION: UProperty = 21
UCHAR_LOWERCASE: UProperty = 22
UCHAR_MATH: UProperty = 23
UCHAR_NONCHARACTER_CODE_POINT: UProperty = 24
UCHAR_QUOTATION_MARK: UProperty = 25
UCHAR_RADICAL: UProperty = 26
UCHAR_SOFT_DOTTED: UProperty = 27
UCHAR_TERMINAL_PUNCTUATION: UProperty = 28
UCHAR_UNIFIED_IDEOGRAPH: UProperty = 29
UCHAR_UPPERCASE: UProperty = 30
UCHAR_WHITE_SPACE: UProperty = 31
UCHAR_XID_CONTINUE: UProperty = 32
UCHAR_XID_START: UProperty = 33
UCHAR_CASE_SENSITIVE: UProperty = 34
UCHAR_S_TERM: UProperty = 35
UCHAR_VARIATION_SELECTOR: UProperty = 36
UCHAR_NFD_INERT: UProperty = 37
UCHAR_NFKD_INERT: UProperty = 38
UCHAR_NFC_INERT: UProperty = 39
UCHAR_NFKC_INERT: UProperty = 40
UCHAR_SEGMENT_STARTER: UProperty = 41
UCHAR_PATTERN_SYNTAX: UProperty = 42
UCHAR_PATTERN_WHITE_SPACE: UProperty = 43
UCHAR_POSIX_ALNUM: UProperty = 44
UCHAR_POSIX_BLANK: UProperty = 45
UCHAR_POSIX_GRAPH: UProperty = 46
UCHAR_POSIX_PRINT: UProperty = 47
UCHAR_POSIX_XDIGIT: UProperty = 48
UCHAR_CASED: UProperty = 49
UCHAR_CASE_IGNORABLE: UProperty = 50
UCHAR_CHANGES_WHEN_LOWERCASED: UProperty = 51
UCHAR_CHANGES_WHEN_UPPERCASED: UProperty = 52
UCHAR_CHANGES_WHEN_TITLECASED: UProperty = 53
UCHAR_CHANGES_WHEN_CASEFOLDED: UProperty = 54
UCHAR_CHANGES_WHEN_CASEMAPPED: UProperty = 55
UCHAR_CHANGES_WHEN_NFKC_CASEFOLDED: UProperty = 56
UCHAR_EMOJI: UProperty = 57
UCHAR_EMOJI_PRESENTATION: UProperty = 58
UCHAR_EMOJI_MODIFIER: UProperty = 59
UCHAR_EMOJI_MODIFIER_BASE: UProperty = 60
UCHAR_EMOJI_COMPONENT: UProperty = 61
UCHAR_REGIONAL_INDICATOR: UProperty = 62
UCHAR_PREPENDED_CONCATENATION_MARK: UProperty = 63
UCHAR_EXTENDED_PICTOGRAPHIC: UProperty = 64
UCHAR_BIDI_CLASS: UProperty = 4096
UCHAR_INT_START: UProperty = 4096
UCHAR_BLOCK: UProperty = 4097
UCHAR_CANONICAL_COMBINING_CLASS: UProperty = 4098
UCHAR_DECOMPOSITION_TYPE: UProperty = 4099
UCHAR_EAST_ASIAN_WIDTH: UProperty = 4100
UCHAR_GENERAL_CATEGORY: UProperty = 4101
UCHAR_JOINING_GROUP: UProperty = 4102
UCHAR_JOINING_TYPE: UProperty = 4103
UCHAR_LINE_BREAK: UProperty = 4104
UCHAR_NUMERIC_TYPE: UProperty = 4105
UCHAR_SCRIPT: UProperty = 4106
UCHAR_HANGUL_SYLLABLE_TYPE: UProperty = 4107
UCHAR_NFD_QUICK_CHECK: UProperty = 4108
UCHAR_NFKD_QUICK_CHECK: UProperty = 4109
UCHAR_NFC_QUICK_CHECK: UProperty = 4110
UCHAR_NFKC_QUICK_CHECK: UProperty = 4111
UCHAR_LEAD_CANONICAL_COMBINING_CLASS: UProperty = 4112
UCHAR_TRAIL_CANONICAL_COMBINING_CLASS: UProperty = 4113
UCHAR_GRAPHEME_CLUSTER_BREAK: UProperty = 4114
UCHAR_SENTENCE_BREAK: UProperty = 4115
UCHAR_WORD_BREAK: UProperty = 4116
UCHAR_BIDI_PAIRED_BRACKET_TYPE: UProperty = 4117
UCHAR_INDIC_POSITIONAL_CATEGORY: UProperty = 4118
UCHAR_INDIC_SYLLABIC_CATEGORY: UProperty = 4119
UCHAR_VERTICAL_ORIENTATION: UProperty = 4120
UCHAR_GENERAL_CATEGORY_MASK: UProperty = 8192
UCHAR_MASK_START: UProperty = 8192
UCHAR_NUMERIC_VALUE: UProperty = 12288
UCHAR_DOUBLE_START: UProperty = 12288
UCHAR_AGE: UProperty = 16384
UCHAR_STRING_START: UProperty = 16384
UCHAR_BIDI_MIRRORING_GLYPH: UProperty = 16385
UCHAR_CASE_FOLDING: UProperty = 16386
UCHAR_LOWERCASE_MAPPING: UProperty = 16388
UCHAR_NAME: UProperty = 16389
UCHAR_SIMPLE_CASE_FOLDING: UProperty = 16390
UCHAR_SIMPLE_LOWERCASE_MAPPING: UProperty = 16391
UCHAR_SIMPLE_TITLECASE_MAPPING: UProperty = 16392
UCHAR_SIMPLE_UPPERCASE_MAPPING: UProperty = 16393
UCHAR_TITLECASE_MAPPING: UProperty = 16394
UCHAR_UPPERCASE_MAPPING: UProperty = 16396
UCHAR_BIDI_PAIRED_BRACKET: UProperty = 16397
UCHAR_SCRIPT_EXTENSIONS: UProperty = 28672
UCHAR_OTHER_PROPERTY_START: UProperty = 28672
UCHAR_INVALID_CODE: UProperty = -1
UPropertyNameChoice = Int32
U_SHORT_PROPERTY_NAME: UPropertyNameChoice = 0
U_LONG_PROPERTY_NAME: UPropertyNameChoice = 1
@cfunctype_pointer
def URegexFindProgressCallback(context: c_void_p, matchIndex: Int64) -> SByte: ...
@cfunctype_pointer
def URegexMatchCallback(context: c_void_p, steps: Int32) -> SByte: ...
URegexpFlag = Int32
UREGEX_CASE_INSENSITIVE: URegexpFlag = 2
UREGEX_COMMENTS: URegexpFlag = 4
UREGEX_DOTALL: URegexpFlag = 32
UREGEX_LITERAL: URegexpFlag = 16
UREGEX_MULTILINE: URegexpFlag = 8
UREGEX_UNIX_LINES: URegexpFlag = 1
UREGEX_UWORD: URegexpFlag = 256
UREGEX_ERROR_ON_UNKNOWN_ESCAPES: URegexpFlag = 512
class URegion(Structure):
    pass
URegionType = Int32
URGN_UNKNOWN: URegionType = 0
URGN_TERRITORY: URegionType = 1
URGN_WORLD: URegionType = 2
URGN_CONTINENT: URegionType = 3
URGN_SUBCONTINENT: URegionType = 4
URGN_GROUPING: URegionType = 5
URGN_DEPRECATED: URegionType = 6
class URegularExpression(Structure):
    pass
class URelativeDateTimeFormatter(Structure):
    pass
URelativeDateTimeFormatterField = Int32
UDAT_REL_LITERAL_FIELD: URelativeDateTimeFormatterField = 0
UDAT_REL_NUMERIC_FIELD: URelativeDateTimeFormatterField = 1
URelativeDateTimeUnit = Int32
UDAT_REL_UNIT_YEAR: URelativeDateTimeUnit = 0
UDAT_REL_UNIT_QUARTER: URelativeDateTimeUnit = 1
UDAT_REL_UNIT_MONTH: URelativeDateTimeUnit = 2
UDAT_REL_UNIT_WEEK: URelativeDateTimeUnit = 3
UDAT_REL_UNIT_DAY: URelativeDateTimeUnit = 4
UDAT_REL_UNIT_HOUR: URelativeDateTimeUnit = 5
UDAT_REL_UNIT_MINUTE: URelativeDateTimeUnit = 6
UDAT_REL_UNIT_SECOND: URelativeDateTimeUnit = 7
UDAT_REL_UNIT_SUNDAY: URelativeDateTimeUnit = 8
UDAT_REL_UNIT_MONDAY: URelativeDateTimeUnit = 9
UDAT_REL_UNIT_TUESDAY: URelativeDateTimeUnit = 10
UDAT_REL_UNIT_WEDNESDAY: URelativeDateTimeUnit = 11
UDAT_REL_UNIT_THURSDAY: URelativeDateTimeUnit = 12
UDAT_REL_UNIT_FRIDAY: URelativeDateTimeUnit = 13
UDAT_REL_UNIT_SATURDAY: URelativeDateTimeUnit = 14
class UReplaceableCallbacks(Structure):
    length: IntPtr
    charAt: IntPtr
    char32At: IntPtr
    replace: IntPtr
    extract: IntPtr
    copy: IntPtr
UResType = Int32
URES_NONE: UResType = -1
URES_STRING: UResType = 0
URES_BINARY: UResType = 1
URES_TABLE: UResType = 2
URES_ALIAS: UResType = 3
URES_INT: UResType = 7
URES_ARRAY: UResType = 8
URES_INT_VECTOR: UResType = 14
class UResourceBundle(Structure):
    pass
URestrictionLevel = Int32
USPOOF_ASCII: URestrictionLevel = 268435456
USPOOF_SINGLE_SCRIPT_RESTRICTIVE: URestrictionLevel = 536870912
USPOOF_HIGHLY_RESTRICTIVE: URestrictionLevel = 805306368
USPOOF_MODERATELY_RESTRICTIVE: URestrictionLevel = 1073741824
USPOOF_MINIMALLY_RESTRICTIVE: URestrictionLevel = 1342177280
USPOOF_UNRESTRICTIVE: URestrictionLevel = 1610612736
USPOOF_RESTRICTION_LEVEL_MASK: URestrictionLevel = 2130706432
UScriptCode = Int32
USCRIPT_INVALID_CODE: UScriptCode = -1
USCRIPT_COMMON: UScriptCode = 0
USCRIPT_INHERITED: UScriptCode = 1
USCRIPT_ARABIC: UScriptCode = 2
USCRIPT_ARMENIAN: UScriptCode = 3
USCRIPT_BENGALI: UScriptCode = 4
USCRIPT_BOPOMOFO: UScriptCode = 5
USCRIPT_CHEROKEE: UScriptCode = 6
USCRIPT_COPTIC: UScriptCode = 7
USCRIPT_CYRILLIC: UScriptCode = 8
USCRIPT_DESERET: UScriptCode = 9
USCRIPT_DEVANAGARI: UScriptCode = 10
USCRIPT_ETHIOPIC: UScriptCode = 11
USCRIPT_GEORGIAN: UScriptCode = 12
USCRIPT_GOTHIC: UScriptCode = 13
USCRIPT_GREEK: UScriptCode = 14
USCRIPT_GUJARATI: UScriptCode = 15
USCRIPT_GURMUKHI: UScriptCode = 16
USCRIPT_HAN: UScriptCode = 17
USCRIPT_HANGUL: UScriptCode = 18
USCRIPT_HEBREW: UScriptCode = 19
USCRIPT_HIRAGANA: UScriptCode = 20
USCRIPT_KANNADA: UScriptCode = 21
USCRIPT_KATAKANA: UScriptCode = 22
USCRIPT_KHMER: UScriptCode = 23
USCRIPT_LAO: UScriptCode = 24
USCRIPT_LATIN: UScriptCode = 25
USCRIPT_MALAYALAM: UScriptCode = 26
USCRIPT_MONGOLIAN: UScriptCode = 27
USCRIPT_MYANMAR: UScriptCode = 28
USCRIPT_OGHAM: UScriptCode = 29
USCRIPT_OLD_ITALIC: UScriptCode = 30
USCRIPT_ORIYA: UScriptCode = 31
USCRIPT_RUNIC: UScriptCode = 32
USCRIPT_SINHALA: UScriptCode = 33
USCRIPT_SYRIAC: UScriptCode = 34
USCRIPT_TAMIL: UScriptCode = 35
USCRIPT_TELUGU: UScriptCode = 36
USCRIPT_THAANA: UScriptCode = 37
USCRIPT_THAI: UScriptCode = 38
USCRIPT_TIBETAN: UScriptCode = 39
USCRIPT_CANADIAN_ABORIGINAL: UScriptCode = 40
USCRIPT_UCAS: UScriptCode = 40
USCRIPT_YI: UScriptCode = 41
USCRIPT_TAGALOG: UScriptCode = 42
USCRIPT_HANUNOO: UScriptCode = 43
USCRIPT_BUHID: UScriptCode = 44
USCRIPT_TAGBANWA: UScriptCode = 45
USCRIPT_BRAILLE: UScriptCode = 46
USCRIPT_CYPRIOT: UScriptCode = 47
USCRIPT_LIMBU: UScriptCode = 48
USCRIPT_LINEAR_B: UScriptCode = 49
USCRIPT_OSMANYA: UScriptCode = 50
USCRIPT_SHAVIAN: UScriptCode = 51
USCRIPT_TAI_LE: UScriptCode = 52
USCRIPT_UGARITIC: UScriptCode = 53
USCRIPT_KATAKANA_OR_HIRAGANA: UScriptCode = 54
USCRIPT_BUGINESE: UScriptCode = 55
USCRIPT_GLAGOLITIC: UScriptCode = 56
USCRIPT_KHAROSHTHI: UScriptCode = 57
USCRIPT_SYLOTI_NAGRI: UScriptCode = 58
USCRIPT_NEW_TAI_LUE: UScriptCode = 59
USCRIPT_TIFINAGH: UScriptCode = 60
USCRIPT_OLD_PERSIAN: UScriptCode = 61
USCRIPT_BALINESE: UScriptCode = 62
USCRIPT_BATAK: UScriptCode = 63
USCRIPT_BLISSYMBOLS: UScriptCode = 64
USCRIPT_BRAHMI: UScriptCode = 65
USCRIPT_CHAM: UScriptCode = 66
USCRIPT_CIRTH: UScriptCode = 67
USCRIPT_OLD_CHURCH_SLAVONIC_CYRILLIC: UScriptCode = 68
USCRIPT_DEMOTIC_EGYPTIAN: UScriptCode = 69
USCRIPT_HIERATIC_EGYPTIAN: UScriptCode = 70
USCRIPT_EGYPTIAN_HIEROGLYPHS: UScriptCode = 71
USCRIPT_KHUTSURI: UScriptCode = 72
USCRIPT_SIMPLIFIED_HAN: UScriptCode = 73
USCRIPT_TRADITIONAL_HAN: UScriptCode = 74
USCRIPT_PAHAWH_HMONG: UScriptCode = 75
USCRIPT_OLD_HUNGARIAN: UScriptCode = 76
USCRIPT_HARAPPAN_INDUS: UScriptCode = 77
USCRIPT_JAVANESE: UScriptCode = 78
USCRIPT_KAYAH_LI: UScriptCode = 79
USCRIPT_LATIN_FRAKTUR: UScriptCode = 80
USCRIPT_LATIN_GAELIC: UScriptCode = 81
USCRIPT_LEPCHA: UScriptCode = 82
USCRIPT_LINEAR_A: UScriptCode = 83
USCRIPT_MANDAIC: UScriptCode = 84
USCRIPT_MANDAEAN: UScriptCode = 84
USCRIPT_MAYAN_HIEROGLYPHS: UScriptCode = 85
USCRIPT_MEROITIC_HIEROGLYPHS: UScriptCode = 86
USCRIPT_MEROITIC: UScriptCode = 86
USCRIPT_NKO: UScriptCode = 87
USCRIPT_ORKHON: UScriptCode = 88
USCRIPT_OLD_PERMIC: UScriptCode = 89
USCRIPT_PHAGS_PA: UScriptCode = 90
USCRIPT_PHOENICIAN: UScriptCode = 91
USCRIPT_MIAO: UScriptCode = 92
USCRIPT_PHONETIC_POLLARD: UScriptCode = 92
USCRIPT_RONGORONGO: UScriptCode = 93
USCRIPT_SARATI: UScriptCode = 94
USCRIPT_ESTRANGELO_SYRIAC: UScriptCode = 95
USCRIPT_WESTERN_SYRIAC: UScriptCode = 96
USCRIPT_EASTERN_SYRIAC: UScriptCode = 97
USCRIPT_TENGWAR: UScriptCode = 98
USCRIPT_VAI: UScriptCode = 99
USCRIPT_VISIBLE_SPEECH: UScriptCode = 100
USCRIPT_CUNEIFORM: UScriptCode = 101
USCRIPT_UNWRITTEN_LANGUAGES: UScriptCode = 102
USCRIPT_UNKNOWN: UScriptCode = 103
USCRIPT_CARIAN: UScriptCode = 104
USCRIPT_JAPANESE: UScriptCode = 105
USCRIPT_LANNA: UScriptCode = 106
USCRIPT_LYCIAN: UScriptCode = 107
USCRIPT_LYDIAN: UScriptCode = 108
USCRIPT_OL_CHIKI: UScriptCode = 109
USCRIPT_REJANG: UScriptCode = 110
USCRIPT_SAURASHTRA: UScriptCode = 111
USCRIPT_SIGN_WRITING: UScriptCode = 112
USCRIPT_SUNDANESE: UScriptCode = 113
USCRIPT_MOON: UScriptCode = 114
USCRIPT_MEITEI_MAYEK: UScriptCode = 115
USCRIPT_IMPERIAL_ARAMAIC: UScriptCode = 116
USCRIPT_AVESTAN: UScriptCode = 117
USCRIPT_CHAKMA: UScriptCode = 118
USCRIPT_KOREAN: UScriptCode = 119
USCRIPT_KAITHI: UScriptCode = 120
USCRIPT_MANICHAEAN: UScriptCode = 121
USCRIPT_INSCRIPTIONAL_PAHLAVI: UScriptCode = 122
USCRIPT_PSALTER_PAHLAVI: UScriptCode = 123
USCRIPT_BOOK_PAHLAVI: UScriptCode = 124
USCRIPT_INSCRIPTIONAL_PARTHIAN: UScriptCode = 125
USCRIPT_SAMARITAN: UScriptCode = 126
USCRIPT_TAI_VIET: UScriptCode = 127
USCRIPT_MATHEMATICAL_NOTATION: UScriptCode = 128
USCRIPT_SYMBOLS: UScriptCode = 129
USCRIPT_BAMUM: UScriptCode = 130
USCRIPT_LISU: UScriptCode = 131
USCRIPT_NAKHI_GEBA: UScriptCode = 132
USCRIPT_OLD_SOUTH_ARABIAN: UScriptCode = 133
USCRIPT_BASSA_VAH: UScriptCode = 134
USCRIPT_DUPLOYAN: UScriptCode = 135
USCRIPT_ELBASAN: UScriptCode = 136
USCRIPT_GRANTHA: UScriptCode = 137
USCRIPT_KPELLE: UScriptCode = 138
USCRIPT_LOMA: UScriptCode = 139
USCRIPT_MENDE: UScriptCode = 140
USCRIPT_MEROITIC_CURSIVE: UScriptCode = 141
USCRIPT_OLD_NORTH_ARABIAN: UScriptCode = 142
USCRIPT_NABATAEAN: UScriptCode = 143
USCRIPT_PALMYRENE: UScriptCode = 144
USCRIPT_KHUDAWADI: UScriptCode = 145
USCRIPT_SINDHI: UScriptCode = 145
USCRIPT_WARANG_CITI: UScriptCode = 146
USCRIPT_AFAKA: UScriptCode = 147
USCRIPT_JURCHEN: UScriptCode = 148
USCRIPT_MRO: UScriptCode = 149
USCRIPT_NUSHU: UScriptCode = 150
USCRIPT_SHARADA: UScriptCode = 151
USCRIPT_SORA_SOMPENG: UScriptCode = 152
USCRIPT_TAKRI: UScriptCode = 153
USCRIPT_TANGUT: UScriptCode = 154
USCRIPT_WOLEAI: UScriptCode = 155
USCRIPT_ANATOLIAN_HIEROGLYPHS: UScriptCode = 156
USCRIPT_KHOJKI: UScriptCode = 157
USCRIPT_TIRHUTA: UScriptCode = 158
USCRIPT_CAUCASIAN_ALBANIAN: UScriptCode = 159
USCRIPT_MAHAJANI: UScriptCode = 160
USCRIPT_AHOM: UScriptCode = 161
USCRIPT_HATRAN: UScriptCode = 162
USCRIPT_MODI: UScriptCode = 163
USCRIPT_MULTANI: UScriptCode = 164
USCRIPT_PAU_CIN_HAU: UScriptCode = 165
USCRIPT_SIDDHAM: UScriptCode = 166
USCRIPT_ADLAM: UScriptCode = 167
USCRIPT_BHAIKSUKI: UScriptCode = 168
USCRIPT_MARCHEN: UScriptCode = 169
USCRIPT_NEWA: UScriptCode = 170
USCRIPT_OSAGE: UScriptCode = 171
USCRIPT_HAN_WITH_BOPOMOFO: UScriptCode = 172
USCRIPT_JAMO: UScriptCode = 173
USCRIPT_SYMBOLS_EMOJI: UScriptCode = 174
USCRIPT_MASARAM_GONDI: UScriptCode = 175
USCRIPT_SOYOMBO: UScriptCode = 176
USCRIPT_ZANABAZAR_SQUARE: UScriptCode = 177
USCRIPT_DOGRA: UScriptCode = 178
USCRIPT_GUNJALA_GONDI: UScriptCode = 179
USCRIPT_MAKASAR: UScriptCode = 180
USCRIPT_MEDEFAIDRIN: UScriptCode = 181
USCRIPT_HANIFI_ROHINGYA: UScriptCode = 182
USCRIPT_SOGDIAN: UScriptCode = 183
USCRIPT_OLD_SOGDIAN: UScriptCode = 184
USCRIPT_ELYMAIC: UScriptCode = 185
USCRIPT_NYIAKENG_PUACHUE_HMONG: UScriptCode = 186
USCRIPT_NANDINAGARI: UScriptCode = 187
USCRIPT_WANCHO: UScriptCode = 188
USCRIPT_CHORASMIAN: UScriptCode = 189
USCRIPT_DIVES_AKURU: UScriptCode = 190
USCRIPT_KHITAN_SMALL_SCRIPT: UScriptCode = 191
USCRIPT_YEZIDI: UScriptCode = 192
UScriptUsage = Int32
USCRIPT_USAGE_NOT_ENCODED: UScriptUsage = 0
USCRIPT_USAGE_UNKNOWN: UScriptUsage = 1
USCRIPT_USAGE_EXCLUDED: UScriptUsage = 2
USCRIPT_USAGE_LIMITED_USE: UScriptUsage = 3
USCRIPT_USAGE_ASPIRATIONAL: UScriptUsage = 4
USCRIPT_USAGE_RECOMMENDED: UScriptUsage = 5
class USearch(Structure):
    pass
USearchAttribute = Int32
USEARCH_OVERLAP: USearchAttribute = 0
USEARCH_ELEMENT_COMPARISON: USearchAttribute = 2
USearchAttributeValue = Int32
USEARCH_DEFAULT: USearchAttributeValue = -1
USEARCH_OFF: USearchAttributeValue = 0
USEARCH_ON: USearchAttributeValue = 1
USEARCH_STANDARD_ELEMENT_COMPARISON: USearchAttributeValue = 2
USEARCH_PATTERN_BASE_WEIGHT_IS_WILDCARD: USearchAttributeValue = 3
USEARCH_ANY_BASE_WEIGHT_IS_WILDCARD: USearchAttributeValue = 4
USentenceBreak = Int32
U_SB_OTHER: USentenceBreak = 0
U_SB_ATERM: USentenceBreak = 1
U_SB_CLOSE: USentenceBreak = 2
U_SB_FORMAT: USentenceBreak = 3
U_SB_LOWER: USentenceBreak = 4
U_SB_NUMERIC: USentenceBreak = 5
U_SB_OLETTER: USentenceBreak = 6
U_SB_SEP: USentenceBreak = 7
U_SB_SP: USentenceBreak = 8
U_SB_STERM: USentenceBreak = 9
U_SB_UPPER: USentenceBreak = 10
U_SB_CR: USentenceBreak = 11
U_SB_EXTEND: USentenceBreak = 12
U_SB_LF: USentenceBreak = 13
U_SB_SCONTINUE: USentenceBreak = 14
USentenceBreakTag = Int32
UBRK_SENTENCE_TERM: USentenceBreakTag = 0
UBRK_SENTENCE_TERM_LIMIT: USentenceBreakTag = 100
UBRK_SENTENCE_SEP: USentenceBreakTag = 100
UBRK_SENTENCE_SEP_LIMIT: USentenceBreakTag = 200
class USerializedSet(Structure):
    array: POINTER(UInt16)
    bmpLength: Int32
    length: Int32
    staticArray: UInt16 * 8
class USet(Structure):
    pass
USetSpanCondition = Int32
USET_SPAN_NOT_CONTAINED: USetSpanCondition = 0
USET_SPAN_CONTAINED: USetSpanCondition = 1
USET_SPAN_SIMPLE: USetSpanCondition = 2
class USpoofCheckResult(Structure):
    pass
class USpoofChecker(Structure):
    pass
USpoofChecks = Int32
USPOOF_SINGLE_SCRIPT_CONFUSABLE: USpoofChecks = 1
USPOOF_MIXED_SCRIPT_CONFUSABLE: USpoofChecks = 2
USPOOF_WHOLE_SCRIPT_CONFUSABLE: USpoofChecks = 4
USPOOF_CONFUSABLE: USpoofChecks = 7
USPOOF_RESTRICTION_LEVEL: USpoofChecks = 16
USPOOF_INVISIBLE: USpoofChecks = 32
USPOOF_CHAR_LIMIT: USpoofChecks = 64
USPOOF_MIXED_NUMBERS: USpoofChecks = 128
USPOOF_HIDDEN_OVERLAY: USpoofChecks = 256
USPOOF_ALL_CHECKS: USpoofChecks = 65535
USPOOF_AUX_INFO: USpoofChecks = 1073741824
@cfunctype_pointer
def UStringCaseMapper(csm: POINTER(win32more.Globalization.UCaseMap_head), dest: POINTER(UInt16), destCapacity: Int32, src: POINTER(UInt16), srcLength: Int32, pErrorCode: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
class UStringPrepProfile(Structure):
    pass
UStringPrepProfileType = Int32
USPREP_RFC3491_NAMEPREP: UStringPrepProfileType = 0
USPREP_RFC3530_NFS4_CS_PREP: UStringPrepProfileType = 1
USPREP_RFC3530_NFS4_CS_PREP_CI: UStringPrepProfileType = 2
USPREP_RFC3530_NFS4_CIS_PREP: UStringPrepProfileType = 3
USPREP_RFC3530_NFS4_MIXED_PREP_PREFIX: UStringPrepProfileType = 4
USPREP_RFC3530_NFS4_MIXED_PREP_SUFFIX: UStringPrepProfileType = 5
USPREP_RFC3722_ISCSI: UStringPrepProfileType = 6
USPREP_RFC3920_NODEPREP: UStringPrepProfileType = 7
USPREP_RFC3920_RESOURCEPREP: UStringPrepProfileType = 8
USPREP_RFC4011_MIB: UStringPrepProfileType = 9
USPREP_RFC4013_SASLPREP: UStringPrepProfileType = 10
USPREP_RFC4505_TRACE: UStringPrepProfileType = 11
USPREP_RFC4518_LDAP: UStringPrepProfileType = 12
USPREP_RFC4518_LDAP_CI: UStringPrepProfileType = 13
class UStringSearch(Structure):
    pass
UStringTrieBuildOption = Int32
USTRINGTRIE_BUILD_FAST: UStringTrieBuildOption = 0
USTRINGTRIE_BUILD_SMALL: UStringTrieBuildOption = 1
UStringTrieResult = Int32
USTRINGTRIE_NO_MATCH: UStringTrieResult = 0
USTRINGTRIE_NO_VALUE: UStringTrieResult = 1
USTRINGTRIE_FINAL_VALUE: UStringTrieResult = 2
USTRINGTRIE_INTERMEDIATE_VALUE: UStringTrieResult = 3
USystemTimeZoneType = Int32
UCAL_ZONE_TYPE_ANY: USystemTimeZoneType = 0
UCAL_ZONE_TYPE_CANONICAL: USystemTimeZoneType = 1
UCAL_ZONE_TYPE_CANONICAL_LOCATION: USystemTimeZoneType = 2
class UText(Structure):
    magic: UInt32
    flags: Int32
    providerProperties: Int32
    sizeOfStruct: Int32
    chunkNativeLimit: Int64
    extraSize: Int32
    nativeIndexingLimit: Int32
    chunkNativeStart: Int64
    chunkOffset: Int32
    chunkLength: Int32
    chunkContents: POINTER(UInt16)
    pFuncs: POINTER(win32more.Globalization.UTextFuncs_head)
    pExtra: c_void_p
    context: c_void_p
    p: c_void_p
    q: c_void_p
    r: c_void_p
    privP: c_void_p
    a: Int64
    b: Int32
    c: Int32
    privA: Int64
    privB: Int32
    privC: Int32
@cfunctype_pointer
def UTextAccess(ut: POINTER(win32more.Globalization.UText_head), nativeIndex: Int64, forward: SByte) -> SByte: ...
@cfunctype_pointer
def UTextClone(dest: POINTER(win32more.Globalization.UText_head), src: POINTER(win32more.Globalization.UText_head), deep: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> POINTER(win32more.Globalization.UText_head): ...
@cfunctype_pointer
def UTextClose(ut: POINTER(win32more.Globalization.UText_head)) -> Void: ...
@cfunctype_pointer
def UTextCopy(ut: POINTER(win32more.Globalization.UText_head), nativeStart: Int64, nativeLimit: Int64, nativeDest: Int64, move: SByte, status: POINTER(win32more.Globalization.UErrorCode)) -> Void: ...
@cfunctype_pointer
def UTextExtract(ut: POINTER(win32more.Globalization.UText_head), nativeStart: Int64, nativeLimit: Int64, dest: POINTER(UInt16), destCapacity: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
class UTextFuncs(Structure):
    tableSize: Int32
    reserved1: Int32
    reserved2: Int32
    reserved3: Int32
    clone: win32more.Globalization.UTextClone
    nativeLength: win32more.Globalization.UTextNativeLength
    access: win32more.Globalization.UTextAccess
    extract: win32more.Globalization.UTextExtract
    replace: win32more.Globalization.UTextReplace
    copy: win32more.Globalization.UTextCopy
    mapOffsetToNative: win32more.Globalization.UTextMapOffsetToNative
    mapNativeIndexToUTF16: win32more.Globalization.UTextMapNativeIndexToUTF16
    close: win32more.Globalization.UTextClose
    spare1: win32more.Globalization.UTextClose
    spare2: win32more.Globalization.UTextClose
    spare3: win32more.Globalization.UTextClose
@cfunctype_pointer
def UTextMapNativeIndexToUTF16(ut: POINTER(win32more.Globalization.UText_head), nativeIndex: Int64) -> Int32: ...
@cfunctype_pointer
def UTextMapOffsetToNative(ut: POINTER(win32more.Globalization.UText_head)) -> Int64: ...
@cfunctype_pointer
def UTextNativeLength(ut: POINTER(win32more.Globalization.UText_head)) -> Int64: ...
@cfunctype_pointer
def UTextReplace(ut: POINTER(win32more.Globalization.UText_head), nativeStart: Int64, nativeLimit: Int64, replacementText: POINTER(UInt16), replacmentLength: Int32, status: POINTER(win32more.Globalization.UErrorCode)) -> Int32: ...
UTimeScaleValue = Int32
UTSV_UNITS_VALUE: UTimeScaleValue = 0
UTSV_EPOCH_OFFSET_VALUE: UTimeScaleValue = 1
UTSV_FROM_MIN_VALUE: UTimeScaleValue = 2
UTSV_FROM_MAX_VALUE: UTimeScaleValue = 3
UTSV_TO_MIN_VALUE: UTimeScaleValue = 4
UTSV_TO_MAX_VALUE: UTimeScaleValue = 5
UTimeZoneFormatGMTOffsetPatternType = Int32
UTZFMT_PAT_POSITIVE_HM: UTimeZoneFormatGMTOffsetPatternType = 0
UTZFMT_PAT_POSITIVE_HMS: UTimeZoneFormatGMTOffsetPatternType = 1
UTZFMT_PAT_NEGATIVE_HM: UTimeZoneFormatGMTOffsetPatternType = 2
UTZFMT_PAT_NEGATIVE_HMS: UTimeZoneFormatGMTOffsetPatternType = 3
UTZFMT_PAT_POSITIVE_H: UTimeZoneFormatGMTOffsetPatternType = 4
UTZFMT_PAT_NEGATIVE_H: UTimeZoneFormatGMTOffsetPatternType = 5
UTZFMT_PAT_COUNT: UTimeZoneFormatGMTOffsetPatternType = 6
UTimeZoneFormatParseOption = Int32
UTZFMT_PARSE_OPTION_NONE: UTimeZoneFormatParseOption = 0
UTZFMT_PARSE_OPTION_ALL_STYLES: UTimeZoneFormatParseOption = 1
UTZFMT_PARSE_OPTION_TZ_DATABASE_ABBREVIATIONS: UTimeZoneFormatParseOption = 2
UTimeZoneFormatStyle = Int32
UTZFMT_STYLE_GENERIC_LOCATION: UTimeZoneFormatStyle = 0
UTZFMT_STYLE_GENERIC_LONG: UTimeZoneFormatStyle = 1
UTZFMT_STYLE_GENERIC_SHORT: UTimeZoneFormatStyle = 2
UTZFMT_STYLE_SPECIFIC_LONG: UTimeZoneFormatStyle = 3
UTZFMT_STYLE_SPECIFIC_SHORT: UTimeZoneFormatStyle = 4
UTZFMT_STYLE_LOCALIZED_GMT: UTimeZoneFormatStyle = 5
UTZFMT_STYLE_LOCALIZED_GMT_SHORT: UTimeZoneFormatStyle = 6
UTZFMT_STYLE_ISO_BASIC_SHORT: UTimeZoneFormatStyle = 7
UTZFMT_STYLE_ISO_BASIC_LOCAL_SHORT: UTimeZoneFormatStyle = 8
UTZFMT_STYLE_ISO_BASIC_FIXED: UTimeZoneFormatStyle = 9
UTZFMT_STYLE_ISO_BASIC_LOCAL_FIXED: UTimeZoneFormatStyle = 10
UTZFMT_STYLE_ISO_BASIC_FULL: UTimeZoneFormatStyle = 11
UTZFMT_STYLE_ISO_BASIC_LOCAL_FULL: UTimeZoneFormatStyle = 12
UTZFMT_STYLE_ISO_EXTENDED_FIXED: UTimeZoneFormatStyle = 13
UTZFMT_STYLE_ISO_EXTENDED_LOCAL_FIXED: UTimeZoneFormatStyle = 14
UTZFMT_STYLE_ISO_EXTENDED_FULL: UTimeZoneFormatStyle = 15
UTZFMT_STYLE_ISO_EXTENDED_LOCAL_FULL: UTimeZoneFormatStyle = 16
UTZFMT_STYLE_ZONE_ID: UTimeZoneFormatStyle = 17
UTZFMT_STYLE_ZONE_ID_SHORT: UTimeZoneFormatStyle = 18
UTZFMT_STYLE_EXEMPLAR_LOCATION: UTimeZoneFormatStyle = 19
UTimeZoneFormatTimeType = Int32
UTZFMT_TIME_TYPE_UNKNOWN: UTimeZoneFormatTimeType = 0
UTZFMT_TIME_TYPE_STANDARD: UTimeZoneFormatTimeType = 1
UTZFMT_TIME_TYPE_DAYLIGHT: UTimeZoneFormatTimeType = 2
UTimeZoneNameType = Int32
UTZNM_UNKNOWN: UTimeZoneNameType = 0
UTZNM_LONG_GENERIC: UTimeZoneNameType = 1
UTZNM_LONG_STANDARD: UTimeZoneNameType = 2
UTZNM_LONG_DAYLIGHT: UTimeZoneNameType = 4
UTZNM_SHORT_GENERIC: UTimeZoneNameType = 8
UTZNM_SHORT_STANDARD: UTimeZoneNameType = 16
UTZNM_SHORT_DAYLIGHT: UTimeZoneNameType = 32
UTZNM_EXEMPLAR_LOCATION: UTimeZoneNameType = 64
UTimeZoneTransitionType = Int32
UCAL_TZ_TRANSITION_NEXT: UTimeZoneTransitionType = 0
UCAL_TZ_TRANSITION_NEXT_INCLUSIVE: UTimeZoneTransitionType = 1
UCAL_TZ_TRANSITION_PREVIOUS: UTimeZoneTransitionType = 2
UCAL_TZ_TRANSITION_PREVIOUS_INCLUSIVE: UTimeZoneTransitionType = 3
@cfunctype_pointer
def UTraceData(context: c_void_p, fnNumber: Int32, level: Int32, fmt: win32more.Foundation.PSTR, args: POINTER(SByte)) -> Void: ...
@cfunctype_pointer
def UTraceEntry(context: c_void_p, fnNumber: Int32) -> Void: ...
@cfunctype_pointer
def UTraceExit(context: c_void_p, fnNumber: Int32, fmt: win32more.Foundation.PSTR, args: POINTER(SByte)) -> Void: ...
UTraceFunctionNumber = Int32
UTRACE_FUNCTION_START: UTraceFunctionNumber = 0
UTRACE_U_INIT: UTraceFunctionNumber = 0
UTRACE_U_CLEANUP: UTraceFunctionNumber = 1
UTRACE_CONVERSION_START: UTraceFunctionNumber = 4096
UTRACE_UCNV_OPEN: UTraceFunctionNumber = 4096
UTRACE_UCNV_OPEN_PACKAGE: UTraceFunctionNumber = 4097
UTRACE_UCNV_OPEN_ALGORITHMIC: UTraceFunctionNumber = 4098
UTRACE_UCNV_CLONE: UTraceFunctionNumber = 4099
UTRACE_UCNV_CLOSE: UTraceFunctionNumber = 4100
UTRACE_UCNV_FLUSH_CACHE: UTraceFunctionNumber = 4101
UTRACE_UCNV_LOAD: UTraceFunctionNumber = 4102
UTRACE_UCNV_UNLOAD: UTraceFunctionNumber = 4103
UTRACE_COLLATION_START: UTraceFunctionNumber = 8192
UTRACE_UCOL_OPEN: UTraceFunctionNumber = 8192
UTRACE_UCOL_CLOSE: UTraceFunctionNumber = 8193
UTRACE_UCOL_STRCOLL: UTraceFunctionNumber = 8194
UTRACE_UCOL_GET_SORTKEY: UTraceFunctionNumber = 8195
UTRACE_UCOL_GETLOCALE: UTraceFunctionNumber = 8196
UTRACE_UCOL_NEXTSORTKEYPART: UTraceFunctionNumber = 8197
UTRACE_UCOL_STRCOLLITER: UTraceFunctionNumber = 8198
UTRACE_UCOL_OPEN_FROM_SHORT_STRING: UTraceFunctionNumber = 8199
UTRACE_UCOL_STRCOLLUTF8: UTraceFunctionNumber = 8200
UTRACE_UDATA_START: UTraceFunctionNumber = 12288
UTRACE_UDATA_RESOURCE: UTraceFunctionNumber = 12288
UTRACE_UDATA_BUNDLE: UTraceFunctionNumber = 12289
UTRACE_UDATA_DATA_FILE: UTraceFunctionNumber = 12290
UTRACE_UDATA_RES_FILE: UTraceFunctionNumber = 12291
UTraceLevel = Int32
UTRACE_OFF: UTraceLevel = -1
UTRACE_ERROR: UTraceLevel = 0
UTRACE_WARNING: UTraceLevel = 3
UTRACE_OPEN_CLOSE: UTraceLevel = 5
UTRACE_INFO: UTraceLevel = 7
UTRACE_VERBOSE: UTraceLevel = 9
UTransDirection = Int32
UTRANS_FORWARD: UTransDirection = 0
UTRANS_REVERSE: UTransDirection = 1
class UTransPosition(Structure):
    contextStart: Int32
    contextLimit: Int32
    start: Int32
    limit: Int32
UVerticalOrientation = Int32
U_VO_ROTATED: UVerticalOrientation = 0
U_VO_TRANSFORMED_ROTATED: UVerticalOrientation = 1
U_VO_TRANSFORMED_UPRIGHT: UVerticalOrientation = 2
U_VO_UPRIGHT: UVerticalOrientation = 3
UWordBreak = Int32
UBRK_WORD_NONE: UWordBreak = 0
UBRK_WORD_NONE_LIMIT: UWordBreak = 100
UBRK_WORD_NUMBER: UWordBreak = 100
UBRK_WORD_NUMBER_LIMIT: UWordBreak = 200
UBRK_WORD_LETTER: UWordBreak = 200
UBRK_WORD_LETTER_LIMIT: UWordBreak = 300
UBRK_WORD_KANA: UWordBreak = 300
UBRK_WORD_KANA_LIMIT: UWordBreak = 400
UBRK_WORD_IDEO: UWordBreak = 400
UBRK_WORD_IDEO_LIMIT: UWordBreak = 500
UWordBreakValues = Int32
U_WB_OTHER: UWordBreakValues = 0
U_WB_ALETTER: UWordBreakValues = 1
U_WB_FORMAT: UWordBreakValues = 2
U_WB_KATAKANA: UWordBreakValues = 3
U_WB_MIDLETTER: UWordBreakValues = 4
U_WB_MIDNUM: UWordBreakValues = 5
U_WB_NUMERIC: UWordBreakValues = 6
U_WB_EXTENDNUMLET: UWordBreakValues = 7
U_WB_CR: UWordBreakValues = 8
U_WB_EXTEND: UWordBreakValues = 9
U_WB_LF: UWordBreakValues = 10
U_WB_MIDNUMLET: UWordBreakValues = 11
U_WB_NEWLINE: UWordBreakValues = 12
U_WB_REGIONAL_INDICATOR: UWordBreakValues = 13
U_WB_HEBREW_LETTER: UWordBreakValues = 14
U_WB_SINGLE_QUOTE: UWordBreakValues = 15
U_WB_DOUBLE_QUOTE: UWordBreakValues = 16
U_WB_E_BASE: UWordBreakValues = 17
U_WB_E_BASE_GAZ: UWordBreakValues = 18
U_WB_E_MODIFIER: UWordBreakValues = 19
U_WB_GLUE_AFTER_ZWJ: UWordBreakValues = 20
U_WB_ZWJ: UWordBreakValues = 21
U_WB_WSEGSPACE: UWordBreakValues = 22
WORDLIST_TYPE = Int32
WORDLIST_TYPE_IGNORE: WORDLIST_TYPE = 0
WORDLIST_TYPE_ADD: WORDLIST_TYPE = 1
WORDLIST_TYPE_EXCLUDE: WORDLIST_TYPE = 2
WORDLIST_TYPE_AUTOCORRECT: WORDLIST_TYPE = 3
make_head(_module, 'CALINFO_ENUMPROCA')
make_head(_module, 'CALINFO_ENUMPROCEXA')
make_head(_module, 'CALINFO_ENUMPROCEXEX')
make_head(_module, 'CALINFO_ENUMPROCEXW')
make_head(_module, 'CALINFO_ENUMPROCW')
make_head(_module, 'CHARSETINFO')
make_head(_module, 'CODEPAGE_ENUMPROCA')
make_head(_module, 'CODEPAGE_ENUMPROCW')
make_head(_module, 'CPINFO')
make_head(_module, 'CPINFOEXA')
make_head(_module, 'CPINFOEXW')
make_head(_module, 'CURRENCYFMTA')
make_head(_module, 'CURRENCYFMTW')
make_head(_module, 'DATEFMT_ENUMPROCA')
make_head(_module, 'DATEFMT_ENUMPROCEXA')
make_head(_module, 'DATEFMT_ENUMPROCEXEX')
make_head(_module, 'DATEFMT_ENUMPROCEXW')
make_head(_module, 'DATEFMT_ENUMPROCW')
make_head(_module, 'DetectEncodingInfo')
make_head(_module, 'ENUMTEXTMETRICA')
make_head(_module, 'ENUMTEXTMETRICW')
make_head(_module, 'FILEMUIINFO')
make_head(_module, 'FONTSIGNATURE')
make_head(_module, 'GEO_ENUMNAMEPROC')
make_head(_module, 'GEO_ENUMPROC')
make_head(_module, 'GOFFSET')
make_head(_module, 'IComprehensiveSpellCheckProvider')
make_head(_module, 'IEnumCodePage')
make_head(_module, 'IEnumRfc1766')
make_head(_module, 'IEnumScript')
make_head(_module, 'IEnumSpellingError')
make_head(_module, 'IMLangCodePages')
make_head(_module, 'IMLangConvertCharset')
make_head(_module, 'IMLangFontLink')
make_head(_module, 'IMLangFontLink2')
make_head(_module, 'IMLangLineBreakConsole')
make_head(_module, 'IMLangString')
make_head(_module, 'IMLangStringAStr')
make_head(_module, 'IMLangStringBufA')
make_head(_module, 'IMLangStringBufW')
make_head(_module, 'IMLangStringWStr')
make_head(_module, 'IMultiLanguage')
make_head(_module, 'IMultiLanguage2')
make_head(_module, 'IMultiLanguage3')
make_head(_module, 'IOptionDescription')
make_head(_module, 'ISpellCheckProvider')
make_head(_module, 'ISpellCheckProviderFactory')
make_head(_module, 'ISpellChecker')
make_head(_module, 'ISpellChecker2')
make_head(_module, 'ISpellCheckerChangedEventHandler')
make_head(_module, 'ISpellCheckerFactory')
make_head(_module, 'ISpellingError')
make_head(_module, 'IUserDictionariesRegistrar')
make_head(_module, 'LANGGROUPLOCALE_ENUMPROCA')
make_head(_module, 'LANGGROUPLOCALE_ENUMPROCW')
make_head(_module, 'LANGUAGEGROUP_ENUMPROCA')
make_head(_module, 'LANGUAGEGROUP_ENUMPROCW')
make_head(_module, 'LOCALESIGNATURE')
make_head(_module, 'LOCALE_ENUMPROCA')
make_head(_module, 'LOCALE_ENUMPROCEX')
make_head(_module, 'LOCALE_ENUMPROCW')
make_head(_module, 'MAPPING_DATA_RANGE')
make_head(_module, 'MAPPING_ENUM_OPTIONS')
make_head(_module, 'MAPPING_OPTIONS')
make_head(_module, 'MAPPING_PROPERTY_BAG')
make_head(_module, 'MAPPING_SERVICE_INFO')
make_head(_module, 'MIMECPINFO')
make_head(_module, 'MIMECSETINFO')
make_head(_module, 'NEWTEXTMETRICEXA')
make_head(_module, 'NEWTEXTMETRICEXW')
make_head(_module, 'NLSVERSIONINFO')
make_head(_module, 'NLSVERSIONINFOEX')
make_head(_module, 'NUMBERFMTA')
make_head(_module, 'NUMBERFMTW')
make_head(_module, 'OPENTYPE_FEATURE_RECORD')
make_head(_module, 'PFN_MAPPINGCALLBACKPROC')
make_head(_module, 'RFC1766INFO')
make_head(_module, 'SCRIPTFONTINFO')
make_head(_module, 'SCRIPTINFO')
make_head(_module, 'SCRIPT_ANALYSIS')
make_head(_module, 'SCRIPT_CHARPROP')
make_head(_module, 'SCRIPT_CONTROL')
make_head(_module, 'SCRIPT_DIGITSUBSTITUTE')
make_head(_module, 'SCRIPT_FONTPROPERTIES')
make_head(_module, 'SCRIPT_GLYPHPROP')
make_head(_module, 'SCRIPT_ITEM')
make_head(_module, 'SCRIPT_LOGATTR')
make_head(_module, 'SCRIPT_PROPERTIES')
make_head(_module, 'SCRIPT_STATE')
make_head(_module, 'SCRIPT_TABDEF')
make_head(_module, 'SCRIPT_VISATTR')
make_head(_module, 'TEXTRANGE_PROPERTIES')
make_head(_module, 'TIMEFMT_ENUMPROCA')
make_head(_module, 'TIMEFMT_ENUMPROCEX')
make_head(_module, 'TIMEFMT_ENUMPROCW')
make_head(_module, 'UBiDi')
make_head(_module, 'UBiDiClassCallback')
make_head(_module, 'UBiDiTransform')
make_head(_module, 'UBreakIterator')
make_head(_module, 'UCPMap')
make_head(_module, 'UCPMapValueFilter')
make_head(_module, 'UCPTrie')
make_head(_module, 'UCPTrieData')
make_head(_module, 'UCaseMap')
make_head(_module, 'UCharEnumTypeRange')
make_head(_module, 'UCharIterator')
make_head(_module, 'UCharIteratorCurrent')
make_head(_module, 'UCharIteratorGetIndex')
make_head(_module, 'UCharIteratorGetState')
make_head(_module, 'UCharIteratorHasNext')
make_head(_module, 'UCharIteratorHasPrevious')
make_head(_module, 'UCharIteratorMove')
make_head(_module, 'UCharIteratorNext')
make_head(_module, 'UCharIteratorPrevious')
make_head(_module, 'UCharIteratorReserved')
make_head(_module, 'UCharIteratorSetState')
make_head(_module, 'UCharsetDetector')
make_head(_module, 'UCharsetMatch')
make_head(_module, 'UCollationElements')
make_head(_module, 'UCollator')
make_head(_module, 'UConstrainedFieldPosition')
make_head(_module, 'UConverter')
make_head(_module, 'UConverterFromUCallback')
make_head(_module, 'UConverterFromUnicodeArgs')
make_head(_module, 'UConverterSelector')
make_head(_module, 'UConverterToUCallback')
make_head(_module, 'UConverterToUnicodeArgs')
make_head(_module, 'UDateFormatSymbols')
make_head(_module, 'UDateIntervalFormat')
make_head(_module, 'UEnumCharNamesFn')
make_head(_module, 'UEnumeration')
make_head(_module, 'UFieldPosition')
make_head(_module, 'UFieldPositionIterator')
make_head(_module, 'UFormattedDateInterval')
make_head(_module, 'UFormattedList')
make_head(_module, 'UFormattedNumber')
make_head(_module, 'UFormattedNumberRange')
make_head(_module, 'UFormattedRelativeDateTime')
make_head(_module, 'UFormattedValue')
make_head(_module, 'UGenderInfo')
make_head(_module, 'UHashtable')
make_head(_module, 'UIDNA')
make_head(_module, 'UIDNAInfo')
make_head(_module, 'UILANGUAGE_ENUMPROCA')
make_head(_module, 'UILANGUAGE_ENUMPROCW')
make_head(_module, 'UListFormatter')
make_head(_module, 'ULocaleData')
make_head(_module, 'ULocaleDisplayNames')
make_head(_module, 'UMemAllocFn')
make_head(_module, 'UMemFreeFn')
make_head(_module, 'UMemReallocFn')
make_head(_module, 'UMutableCPTrie')
make_head(_module, 'UNESCAPE_CHAR_AT')
make_head(_module, 'UNICODERANGE')
make_head(_module, 'UNormalizer2')
make_head(_module, 'UNumberFormatter')
make_head(_module, 'UNumberingSystem')
make_head(_module, 'UParseError')
make_head(_module, 'UPluralRules')
make_head(_module, 'URegexFindProgressCallback')
make_head(_module, 'URegexMatchCallback')
make_head(_module, 'URegion')
make_head(_module, 'URegularExpression')
make_head(_module, 'URelativeDateTimeFormatter')
make_head(_module, 'UReplaceableCallbacks')
make_head(_module, 'UResourceBundle')
make_head(_module, 'USearch')
make_head(_module, 'USerializedSet')
make_head(_module, 'USet')
make_head(_module, 'USpoofCheckResult')
make_head(_module, 'USpoofChecker')
make_head(_module, 'UStringCaseMapper')
make_head(_module, 'UStringPrepProfile')
make_head(_module, 'UStringSearch')
make_head(_module, 'UText')
make_head(_module, 'UTextAccess')
make_head(_module, 'UTextClone')
make_head(_module, 'UTextClose')
make_head(_module, 'UTextCopy')
make_head(_module, 'UTextExtract')
make_head(_module, 'UTextFuncs')
make_head(_module, 'UTextMapNativeIndexToUTF16')
make_head(_module, 'UTextMapOffsetToNative')
make_head(_module, 'UTextNativeLength')
make_head(_module, 'UTextReplace')
make_head(_module, 'UTraceData')
make_head(_module, 'UTraceEntry')
make_head(_module, 'UTraceExit')
make_head(_module, 'UTransPosition')
__all__ = [
    "ALL_SERVICES",
    "ALL_SERVICE_TYPES",
    "C1_ALPHA",
    "C1_BLANK",
    "C1_CNTRL",
    "C1_DEFINED",
    "C1_DIGIT",
    "C1_LOWER",
    "C1_PUNCT",
    "C1_SPACE",
    "C1_UPPER",
    "C1_XDIGIT",
    "C2_ARABICNUMBER",
    "C2_BLOCKSEPARATOR",
    "C2_COMMONSEPARATOR",
    "C2_EUROPENUMBER",
    "C2_EUROPESEPARATOR",
    "C2_EUROPETERMINATOR",
    "C2_LEFTTORIGHT",
    "C2_NOTAPPLICABLE",
    "C2_OTHERNEUTRAL",
    "C2_RIGHTTOLEFT",
    "C2_SEGMENTSEPARATOR",
    "C2_WHITESPACE",
    "C3_ALPHA",
    "C3_DIACRITIC",
    "C3_FULLWIDTH",
    "C3_HALFWIDTH",
    "C3_HIGHSURROGATE",
    "C3_HIRAGANA",
    "C3_IDEOGRAPH",
    "C3_KASHIDA",
    "C3_KATAKANA",
    "C3_LEXICAL",
    "C3_LOWSURROGATE",
    "C3_NONSPACING",
    "C3_NOTAPPLICABLE",
    "C3_SYMBOL",
    "C3_VOWELMARK",
    "CALINFO_ENUMPROCA",
    "CALINFO_ENUMPROCEXA",
    "CALINFO_ENUMPROCEXEX",
    "CALINFO_ENUMPROCEXW",
    "CALINFO_ENUMPROCW",
    "CAL_GREGORIAN",
    "CAL_GREGORIAN_ARABIC",
    "CAL_GREGORIAN_ME_FRENCH",
    "CAL_GREGORIAN_US",
    "CAL_GREGORIAN_XLIT_ENGLISH",
    "CAL_GREGORIAN_XLIT_FRENCH",
    "CAL_HEBREW",
    "CAL_HIJRI",
    "CAL_ICALINTVALUE",
    "CAL_ITWODIGITYEARMAX",
    "CAL_IYEAROFFSETRANGE",
    "CAL_JAPAN",
    "CAL_KOREA",
    "CAL_NOUSEROVERRIDE",
    "CAL_PERSIAN",
    "CAL_RETURN_GENITIVE_NAMES",
    "CAL_RETURN_NUMBER",
    "CAL_SABBREVDAYNAME1",
    "CAL_SABBREVDAYNAME2",
    "CAL_SABBREVDAYNAME3",
    "CAL_SABBREVDAYNAME4",
    "CAL_SABBREVDAYNAME5",
    "CAL_SABBREVDAYNAME6",
    "CAL_SABBREVDAYNAME7",
    "CAL_SABBREVERASTRING",
    "CAL_SABBREVMONTHNAME1",
    "CAL_SABBREVMONTHNAME10",
    "CAL_SABBREVMONTHNAME11",
    "CAL_SABBREVMONTHNAME12",
    "CAL_SABBREVMONTHNAME13",
    "CAL_SABBREVMONTHNAME2",
    "CAL_SABBREVMONTHNAME3",
    "CAL_SABBREVMONTHNAME4",
    "CAL_SABBREVMONTHNAME5",
    "CAL_SABBREVMONTHNAME6",
    "CAL_SABBREVMONTHNAME7",
    "CAL_SABBREVMONTHNAME8",
    "CAL_SABBREVMONTHNAME9",
    "CAL_SCALNAME",
    "CAL_SDAYNAME1",
    "CAL_SDAYNAME2",
    "CAL_SDAYNAME3",
    "CAL_SDAYNAME4",
    "CAL_SDAYNAME5",
    "CAL_SDAYNAME6",
    "CAL_SDAYNAME7",
    "CAL_SENGLISHABBREVERANAME",
    "CAL_SENGLISHERANAME",
    "CAL_SERASTRING",
    "CAL_SJAPANESEERAFIRSTYEAR",
    "CAL_SLONGDATE",
    "CAL_SMONTHDAY",
    "CAL_SMONTHNAME1",
    "CAL_SMONTHNAME10",
    "CAL_SMONTHNAME11",
    "CAL_SMONTHNAME12",
    "CAL_SMONTHNAME13",
    "CAL_SMONTHNAME2",
    "CAL_SMONTHNAME3",
    "CAL_SMONTHNAME4",
    "CAL_SMONTHNAME5",
    "CAL_SMONTHNAME6",
    "CAL_SMONTHNAME7",
    "CAL_SMONTHNAME8",
    "CAL_SMONTHNAME9",
    "CAL_SRELATIVELONGDATE",
    "CAL_SSHORTDATE",
    "CAL_SSHORTESTDAYNAME1",
    "CAL_SSHORTESTDAYNAME2",
    "CAL_SSHORTESTDAYNAME3",
    "CAL_SSHORTESTDAYNAME4",
    "CAL_SSHORTESTDAYNAME5",
    "CAL_SSHORTESTDAYNAME6",
    "CAL_SSHORTESTDAYNAME7",
    "CAL_SYEARMONTH",
    "CAL_TAIWAN",
    "CAL_THAI",
    "CAL_UMALQURA",
    "CAL_USE_CP_ACP",
    "CANITER_SKIP_ZEROES",
    "CHARSETINFO",
    "CMLangConvertCharset",
    "CMLangString",
    "CMultiLanguage",
    "CODEPAGE_ENUMPROCA",
    "CODEPAGE_ENUMPROCW",
    "COMPARE_STRING",
    "COMPARE_STRING_FLAGS",
    "CORRECTIVE_ACTION",
    "CORRECTIVE_ACTION_DELETE",
    "CORRECTIVE_ACTION_GET_SUGGESTIONS",
    "CORRECTIVE_ACTION_NONE",
    "CORRECTIVE_ACTION_REPLACE",
    "CPINFO",
    "CPINFOEXA",
    "CPINFOEXW",
    "CPIOD_FORCE_PROMPT",
    "CPIOD_PEEK",
    "CP_ACP",
    "CP_INSTALLED",
    "CP_MACCP",
    "CP_OEMCP",
    "CP_SUPPORTED",
    "CP_SYMBOL",
    "CP_THREAD_ACP",
    "CP_UTF7",
    "CP_UTF8",
    "CSTR_EQUAL",
    "CSTR_GREATER_THAN",
    "CSTR_LESS_THAN",
    "CTRY_ALBANIA",
    "CTRY_ALGERIA",
    "CTRY_ARGENTINA",
    "CTRY_ARMENIA",
    "CTRY_AUSTRALIA",
    "CTRY_AUSTRIA",
    "CTRY_AZERBAIJAN",
    "CTRY_BAHRAIN",
    "CTRY_BELARUS",
    "CTRY_BELGIUM",
    "CTRY_BELIZE",
    "CTRY_BOLIVIA",
    "CTRY_BRAZIL",
    "CTRY_BRUNEI_DARUSSALAM",
    "CTRY_BULGARIA",
    "CTRY_CANADA",
    "CTRY_CARIBBEAN",
    "CTRY_CHILE",
    "CTRY_COLOMBIA",
    "CTRY_COSTA_RICA",
    "CTRY_CROATIA",
    "CTRY_CZECH",
    "CTRY_DEFAULT",
    "CTRY_DENMARK",
    "CTRY_DOMINICAN_REPUBLIC",
    "CTRY_ECUADOR",
    "CTRY_EGYPT",
    "CTRY_EL_SALVADOR",
    "CTRY_ESTONIA",
    "CTRY_FAEROE_ISLANDS",
    "CTRY_FINLAND",
    "CTRY_FRANCE",
    "CTRY_GEORGIA",
    "CTRY_GERMANY",
    "CTRY_GREECE",
    "CTRY_GUATEMALA",
    "CTRY_HONDURAS",
    "CTRY_HONG_KONG",
    "CTRY_HUNGARY",
    "CTRY_ICELAND",
    "CTRY_INDIA",
    "CTRY_INDONESIA",
    "CTRY_IRAN",
    "CTRY_IRAQ",
    "CTRY_IRELAND",
    "CTRY_ISRAEL",
    "CTRY_ITALY",
    "CTRY_JAMAICA",
    "CTRY_JAPAN",
    "CTRY_JORDAN",
    "CTRY_KAZAKSTAN",
    "CTRY_KENYA",
    "CTRY_KUWAIT",
    "CTRY_KYRGYZSTAN",
    "CTRY_LATVIA",
    "CTRY_LEBANON",
    "CTRY_LIBYA",
    "CTRY_LIECHTENSTEIN",
    "CTRY_LITHUANIA",
    "CTRY_LUXEMBOURG",
    "CTRY_MACAU",
    "CTRY_MACEDONIA",
    "CTRY_MALAYSIA",
    "CTRY_MALDIVES",
    "CTRY_MEXICO",
    "CTRY_MONACO",
    "CTRY_MONGOLIA",
    "CTRY_MOROCCO",
    "CTRY_NETHERLANDS",
    "CTRY_NEW_ZEALAND",
    "CTRY_NICARAGUA",
    "CTRY_NORWAY",
    "CTRY_OMAN",
    "CTRY_PAKISTAN",
    "CTRY_PANAMA",
    "CTRY_PARAGUAY",
    "CTRY_PERU",
    "CTRY_PHILIPPINES",
    "CTRY_POLAND",
    "CTRY_PORTUGAL",
    "CTRY_PRCHINA",
    "CTRY_PUERTO_RICO",
    "CTRY_QATAR",
    "CTRY_ROMANIA",
    "CTRY_RUSSIA",
    "CTRY_SAUDI_ARABIA",
    "CTRY_SERBIA",
    "CTRY_SINGAPORE",
    "CTRY_SLOVAK",
    "CTRY_SLOVENIA",
    "CTRY_SOUTH_AFRICA",
    "CTRY_SOUTH_KOREA",
    "CTRY_SPAIN",
    "CTRY_SWEDEN",
    "CTRY_SWITZERLAND",
    "CTRY_SYRIA",
    "CTRY_TAIWAN",
    "CTRY_TATARSTAN",
    "CTRY_THAILAND",
    "CTRY_TRINIDAD_Y_TOBAGO",
    "CTRY_TUNISIA",
    "CTRY_TURKEY",
    "CTRY_UAE",
    "CTRY_UKRAINE",
    "CTRY_UNITED_KINGDOM",
    "CTRY_UNITED_STATES",
    "CTRY_URUGUAY",
    "CTRY_UZBEKISTAN",
    "CTRY_VENEZUELA",
    "CTRY_VIET_NAM",
    "CTRY_YEMEN",
    "CTRY_ZIMBABWE",
    "CT_CTYPE1",
    "CT_CTYPE2",
    "CT_CTYPE3",
    "CURRENCYFMTA",
    "CURRENCYFMTW",
    "CompareStringA",
    "CompareStringEx",
    "CompareStringOrdinal",
    "CompareStringW",
    "ConvertDefaultLocale",
    "DATEFMT_ENUMPROCA",
    "DATEFMT_ENUMPROCEXA",
    "DATEFMT_ENUMPROCEXEX",
    "DATEFMT_ENUMPROCEXW",
    "DATEFMT_ENUMPROCW",
    "DATE_AUTOLAYOUT",
    "DATE_LONGDATE",
    "DATE_LTRREADING",
    "DATE_MONTHDAY",
    "DATE_RTLREADING",
    "DATE_SHORTDATE",
    "DATE_USE_ALT_CALENDAR",
    "DATE_YEARMONTH",
    "DetectEncodingInfo",
    "ELS_GUID_LANGUAGE_DETECTION",
    "ELS_GUID_SCRIPT_DETECTION",
    "ELS_GUID_TRANSLITERATION_BENGALI_TO_LATIN",
    "ELS_GUID_TRANSLITERATION_CYRILLIC_TO_LATIN",
    "ELS_GUID_TRANSLITERATION_DEVANAGARI_TO_LATIN",
    "ELS_GUID_TRANSLITERATION_HANGUL_DECOMPOSITION",
    "ELS_GUID_TRANSLITERATION_HANS_TO_HANT",
    "ELS_GUID_TRANSLITERATION_HANT_TO_HANS",
    "ELS_GUID_TRANSLITERATION_MALAYALAM_TO_LATIN",
    "ENUMTEXTMETRICA",
    "ENUMTEXTMETRICW",
    "ENUM_ALL_CALENDARS",
    "ENUM_DATE_FORMATS_FLAGS",
    "ENUM_SYSTEM_CODE_PAGES_FLAGS",
    "ENUM_SYSTEM_LANGUAGE_GROUPS_FLAGS",
    "EnumCalendarInfoA",
    "EnumCalendarInfoExA",
    "EnumCalendarInfoExEx",
    "EnumCalendarInfoExW",
    "EnumCalendarInfoW",
    "EnumDateFormatsA",
    "EnumDateFormatsExA",
    "EnumDateFormatsExEx",
    "EnumDateFormatsExW",
    "EnumDateFormatsW",
    "EnumLanguageGroupLocalesA",
    "EnumLanguageGroupLocalesW",
    "EnumSystemCodePagesA",
    "EnumSystemCodePagesW",
    "EnumSystemGeoID",
    "EnumSystemGeoNames",
    "EnumSystemLanguageGroupsA",
    "EnumSystemLanguageGroupsW",
    "EnumSystemLocalesA",
    "EnumSystemLocalesEx",
    "EnumSystemLocalesW",
    "EnumTimeFormatsA",
    "EnumTimeFormatsEx",
    "EnumTimeFormatsW",
    "EnumUILanguagesA",
    "EnumUILanguagesW",
    "FILEMUIINFO",
    "FIND_ENDSWITH",
    "FIND_FROMEND",
    "FIND_FROMSTART",
    "FIND_STARTSWITH",
    "FOLD_STRING_MAP_FLAGS",
    "FONTSIGNATURE",
    "FindNLSString",
    "FindNLSStringEx",
    "FindStringOrdinal",
    "FoldStringA",
    "FoldStringW",
    "GEOCLASS_ALL",
    "GEOCLASS_NATION",
    "GEOCLASS_REGION",
    "GEOID_NOT_AVAILABLE",
    "GEO_CURRENCYCODE",
    "GEO_CURRENCYSYMBOL",
    "GEO_DIALINGCODE",
    "GEO_ENUMNAMEPROC",
    "GEO_ENUMPROC",
    "GEO_FRIENDLYNAME",
    "GEO_ID",
    "GEO_ISO2",
    "GEO_ISO3",
    "GEO_ISO_UN_NUMBER",
    "GEO_LATITUDE",
    "GEO_LCID",
    "GEO_LONGITUDE",
    "GEO_NAME",
    "GEO_NATION",
    "GEO_OFFICIALLANGUAGES",
    "GEO_OFFICIALNAME",
    "GEO_PARENT",
    "GEO_RFC1766",
    "GEO_TIMEZONES",
    "GOFFSET",
    "GSS_ALLOW_INHERITED_COMMON",
    "GetACP",
    "GetCPInfo",
    "GetCPInfoExA",
    "GetCPInfoExW",
    "GetCalendarInfoA",
    "GetCalendarInfoEx",
    "GetCalendarInfoW",
    "GetCurrencyFormatA",
    "GetCurrencyFormatEx",
    "GetCurrencyFormatW",
    "GetDateFormatA",
    "GetDateFormatEx",
    "GetDateFormatW",
    "GetDistanceOfClosestLanguageInList",
    "GetDurationFormat",
    "GetDurationFormatEx",
    "GetFileMUIInfo",
    "GetFileMUIPath",
    "GetGeoInfoA",
    "GetGeoInfoEx",
    "GetGeoInfoW",
    "GetLocaleInfoA",
    "GetLocaleInfoEx",
    "GetLocaleInfoW",
    "GetNLSVersion",
    "GetNLSVersionEx",
    "GetNumberFormatA",
    "GetNumberFormatEx",
    "GetNumberFormatW",
    "GetOEMCP",
    "GetProcessPreferredUILanguages",
    "GetStringScripts",
    "GetStringTypeA",
    "GetStringTypeExA",
    "GetStringTypeExW",
    "GetStringTypeW",
    "GetSystemDefaultLCID",
    "GetSystemDefaultLangID",
    "GetSystemDefaultLocaleName",
    "GetSystemDefaultUILanguage",
    "GetSystemPreferredUILanguages",
    "GetTextCharset",
    "GetTextCharsetInfo",
    "GetThreadLocale",
    "GetThreadPreferredUILanguages",
    "GetThreadUILanguage",
    "GetTimeFormatA",
    "GetTimeFormatEx",
    "GetTimeFormatW",
    "GetUILanguageInfo",
    "GetUserDefaultGeoName",
    "GetUserDefaultLCID",
    "GetUserDefaultLangID",
    "GetUserDefaultLocaleName",
    "GetUserDefaultUILanguage",
    "GetUserGeoID",
    "GetUserPreferredUILanguages",
    "HIGHLEVEL_SERVICE_TYPES",
    "HIGH_SURROGATE_END",
    "HIGH_SURROGATE_START",
    "HIMC",
    "HIMCC",
    "HSAVEDUILANGUAGES",
    "IComprehensiveSpellCheckProvider",
    "IDN_ALLOW_UNASSIGNED",
    "IDN_EMAIL_ADDRESS",
    "IDN_RAW_PUNYCODE",
    "IDN_USE_STD3_ASCII_RULES",
    "IEnumCodePage",
    "IEnumRfc1766",
    "IEnumScript",
    "IEnumSpellingError",
    "IMLangCodePages",
    "IMLangConvertCharset",
    "IMLangFontLink",
    "IMLangFontLink2",
    "IMLangLineBreakConsole",
    "IMLangString",
    "IMLangStringAStr",
    "IMLangStringBufA",
    "IMLangStringBufW",
    "IMLangStringWStr",
    "IMultiLanguage",
    "IMultiLanguage2",
    "IMultiLanguage3",
    "IOptionDescription",
    "IS_TEXT_UNICODE_ASCII16",
    "IS_TEXT_UNICODE_CONTROLS",
    "IS_TEXT_UNICODE_ILLEGAL_CHARS",
    "IS_TEXT_UNICODE_NOT_ASCII_MASK",
    "IS_TEXT_UNICODE_NOT_UNICODE_MASK",
    "IS_TEXT_UNICODE_NULL_BYTES",
    "IS_TEXT_UNICODE_ODD_LENGTH",
    "IS_TEXT_UNICODE_RESULT",
    "IS_TEXT_UNICODE_REVERSE_ASCII16",
    "IS_TEXT_UNICODE_REVERSE_CONTROLS",
    "IS_TEXT_UNICODE_REVERSE_MASK",
    "IS_TEXT_UNICODE_REVERSE_SIGNATURE",
    "IS_TEXT_UNICODE_REVERSE_STATISTICS",
    "IS_TEXT_UNICODE_SIGNATURE",
    "IS_TEXT_UNICODE_STATISTICS",
    "IS_TEXT_UNICODE_UNICODE_MASK",
    "IS_VALID_LOCALE_FLAGS",
    "ISpellCheckProvider",
    "ISpellCheckProviderFactory",
    "ISpellChecker",
    "ISpellChecker2",
    "ISpellCheckerChangedEventHandler",
    "ISpellCheckerFactory",
    "ISpellingError",
    "IUserDictionariesRegistrar",
    "IdnToAscii",
    "IdnToNameprepUnicode",
    "IdnToUnicode",
    "IsDBCSLeadByte",
    "IsDBCSLeadByteEx",
    "IsNLSDefinedString",
    "IsNormalizedString",
    "IsTextUnicode",
    "IsValidCodePage",
    "IsValidLanguageGroup",
    "IsValidLocale",
    "IsValidLocaleName",
    "IsValidNLSVersion",
    "IsWellFormedTag",
    "LANGGROUPLOCALE_ENUMPROCA",
    "LANGGROUPLOCALE_ENUMPROCW",
    "LANGUAGEGROUP_ENUMPROCA",
    "LANGUAGEGROUP_ENUMPROCW",
    "LCIDToLocaleName",
    "LCID_ALTERNATE_SORTS",
    "LCID_INSTALLED",
    "LCID_SUPPORTED",
    "LCMAP_BYTEREV",
    "LCMAP_FULLWIDTH",
    "LCMAP_HALFWIDTH",
    "LCMAP_HASH",
    "LCMAP_HIRAGANA",
    "LCMAP_KATAKANA",
    "LCMAP_LINGUISTIC_CASING",
    "LCMAP_LOWERCASE",
    "LCMAP_SIMPLIFIED_CHINESE",
    "LCMAP_SORTHANDLE",
    "LCMAP_SORTKEY",
    "LCMAP_TITLECASE",
    "LCMAP_TRADITIONAL_CHINESE",
    "LCMAP_UPPERCASE",
    "LCMapStringA",
    "LCMapStringEx",
    "LCMapStringW",
    "LGRPID_ARABIC",
    "LGRPID_ARMENIAN",
    "LGRPID_BALTIC",
    "LGRPID_CENTRAL_EUROPE",
    "LGRPID_CYRILLIC",
    "LGRPID_GEORGIAN",
    "LGRPID_GREEK",
    "LGRPID_HEBREW",
    "LGRPID_INDIC",
    "LGRPID_INSTALLED",
    "LGRPID_JAPANESE",
    "LGRPID_KOREAN",
    "LGRPID_SIMPLIFIED_CHINESE",
    "LGRPID_SUPPORTED",
    "LGRPID_THAI",
    "LGRPID_TRADITIONAL_CHINESE",
    "LGRPID_TURKIC",
    "LGRPID_TURKISH",
    "LGRPID_VIETNAMESE",
    "LGRPID_WESTERN_EUROPE",
    "LINGUISTIC_IGNORECASE",
    "LINGUISTIC_IGNOREDIACRITIC",
    "LOCALESIGNATURE",
    "LOCALE_ALL",
    "LOCALE_ALLOW_NEUTRAL_NAMES",
    "LOCALE_ALTERNATE_SORTS",
    "LOCALE_ENUMPROCA",
    "LOCALE_ENUMPROCEX",
    "LOCALE_ENUMPROCW",
    "LOCALE_FONTSIGNATURE",
    "LOCALE_ICALENDARTYPE",
    "LOCALE_ICENTURY",
    "LOCALE_ICONSTRUCTEDLOCALE",
    "LOCALE_ICOUNTRY",
    "LOCALE_ICURRDIGITS",
    "LOCALE_ICURRENCY",
    "LOCALE_IDATE",
    "LOCALE_IDAYLZERO",
    "LOCALE_IDEFAULTANSICODEPAGE",
    "LOCALE_IDEFAULTCODEPAGE",
    "LOCALE_IDEFAULTCOUNTRY",
    "LOCALE_IDEFAULTEBCDICCODEPAGE",
    "LOCALE_IDEFAULTLANGUAGE",
    "LOCALE_IDEFAULTMACCODEPAGE",
    "LOCALE_IDIALINGCODE",
    "LOCALE_IDIGITS",
    "LOCALE_IDIGITSUBSTITUTION",
    "LOCALE_IFIRSTDAYOFWEEK",
    "LOCALE_IFIRSTWEEKOFYEAR",
    "LOCALE_IGEOID",
    "LOCALE_IINTLCURRDIGITS",
    "LOCALE_ILANGUAGE",
    "LOCALE_ILDATE",
    "LOCALE_ILZERO",
    "LOCALE_IMEASURE",
    "LOCALE_IMONLZERO",
    "LOCALE_INEGATIVEPERCENT",
    "LOCALE_INEGCURR",
    "LOCALE_INEGNUMBER",
    "LOCALE_INEGSEPBYSPACE",
    "LOCALE_INEGSIGNPOSN",
    "LOCALE_INEGSYMPRECEDES",
    "LOCALE_INEUTRAL",
    "LOCALE_IOPTIONALCALENDAR",
    "LOCALE_IPAPERSIZE",
    "LOCALE_IPOSITIVEPERCENT",
    "LOCALE_IPOSSEPBYSPACE",
    "LOCALE_IPOSSIGNPOSN",
    "LOCALE_IPOSSYMPRECEDES",
    "LOCALE_IREADINGLAYOUT",
    "LOCALE_ITIME",
    "LOCALE_ITIMEMARKPOSN",
    "LOCALE_ITLZERO",
    "LOCALE_IUSEUTF8LEGACYACP",
    "LOCALE_IUSEUTF8LEGACYOEMCP",
    "LOCALE_NAME_INVARIANT",
    "LOCALE_NAME_SYSTEM_DEFAULT",
    "LOCALE_NEUTRALDATA",
    "LOCALE_NOUSEROVERRIDE",
    "LOCALE_REPLACEMENT",
    "LOCALE_RETURN_GENITIVE_NAMES",
    "LOCALE_RETURN_NUMBER",
    "LOCALE_S1159",
    "LOCALE_S2359",
    "LOCALE_SABBREVCTRYNAME",
    "LOCALE_SABBREVDAYNAME1",
    "LOCALE_SABBREVDAYNAME2",
    "LOCALE_SABBREVDAYNAME3",
    "LOCALE_SABBREVDAYNAME4",
    "LOCALE_SABBREVDAYNAME5",
    "LOCALE_SABBREVDAYNAME6",
    "LOCALE_SABBREVDAYNAME7",
    "LOCALE_SABBREVLANGNAME",
    "LOCALE_SABBREVMONTHNAME1",
    "LOCALE_SABBREVMONTHNAME10",
    "LOCALE_SABBREVMONTHNAME11",
    "LOCALE_SABBREVMONTHNAME12",
    "LOCALE_SABBREVMONTHNAME13",
    "LOCALE_SABBREVMONTHNAME2",
    "LOCALE_SABBREVMONTHNAME3",
    "LOCALE_SABBREVMONTHNAME4",
    "LOCALE_SABBREVMONTHNAME5",
    "LOCALE_SABBREVMONTHNAME6",
    "LOCALE_SABBREVMONTHNAME7",
    "LOCALE_SABBREVMONTHNAME8",
    "LOCALE_SABBREVMONTHNAME9",
    "LOCALE_SAM",
    "LOCALE_SCONSOLEFALLBACKNAME",
    "LOCALE_SCOUNTRY",
    "LOCALE_SCURRENCY",
    "LOCALE_SDATE",
    "LOCALE_SDAYNAME1",
    "LOCALE_SDAYNAME2",
    "LOCALE_SDAYNAME3",
    "LOCALE_SDAYNAME4",
    "LOCALE_SDAYNAME5",
    "LOCALE_SDAYNAME6",
    "LOCALE_SDAYNAME7",
    "LOCALE_SDECIMAL",
    "LOCALE_SDURATION",
    "LOCALE_SENGCOUNTRY",
    "LOCALE_SENGCURRNAME",
    "LOCALE_SENGLANGUAGE",
    "LOCALE_SENGLISHCOUNTRYNAME",
    "LOCALE_SENGLISHDISPLAYNAME",
    "LOCALE_SENGLISHLANGUAGENAME",
    "LOCALE_SGROUPING",
    "LOCALE_SINTLSYMBOL",
    "LOCALE_SISO3166CTRYNAME",
    "LOCALE_SISO3166CTRYNAME2",
    "LOCALE_SISO639LANGNAME",
    "LOCALE_SISO639LANGNAME2",
    "LOCALE_SKEYBOARDSTOINSTALL",
    "LOCALE_SLANGDISPLAYNAME",
    "LOCALE_SLANGUAGE",
    "LOCALE_SLIST",
    "LOCALE_SLOCALIZEDCOUNTRYNAME",
    "LOCALE_SLOCALIZEDDISPLAYNAME",
    "LOCALE_SLOCALIZEDLANGUAGENAME",
    "LOCALE_SLONGDATE",
    "LOCALE_SMONDECIMALSEP",
    "LOCALE_SMONGROUPING",
    "LOCALE_SMONTHDAY",
    "LOCALE_SMONTHNAME1",
    "LOCALE_SMONTHNAME10",
    "LOCALE_SMONTHNAME11",
    "LOCALE_SMONTHNAME12",
    "LOCALE_SMONTHNAME13",
    "LOCALE_SMONTHNAME2",
    "LOCALE_SMONTHNAME3",
    "LOCALE_SMONTHNAME4",
    "LOCALE_SMONTHNAME5",
    "LOCALE_SMONTHNAME6",
    "LOCALE_SMONTHNAME7",
    "LOCALE_SMONTHNAME8",
    "LOCALE_SMONTHNAME9",
    "LOCALE_SMONTHOUSANDSEP",
    "LOCALE_SNAME",
    "LOCALE_SNAN",
    "LOCALE_SNATIVECOUNTRYNAME",
    "LOCALE_SNATIVECTRYNAME",
    "LOCALE_SNATIVECURRNAME",
    "LOCALE_SNATIVEDIGITS",
    "LOCALE_SNATIVEDISPLAYNAME",
    "LOCALE_SNATIVELANGNAME",
    "LOCALE_SNATIVELANGUAGENAME",
    "LOCALE_SNEGATIVESIGN",
    "LOCALE_SNEGINFINITY",
    "LOCALE_SOPENTYPELANGUAGETAG",
    "LOCALE_SPARENT",
    "LOCALE_SPECIFICDATA",
    "LOCALE_SPERCENT",
    "LOCALE_SPERMILLE",
    "LOCALE_SPM",
    "LOCALE_SPOSINFINITY",
    "LOCALE_SPOSITIVESIGN",
    "LOCALE_SRELATIVELONGDATE",
    "LOCALE_SSCRIPTS",
    "LOCALE_SSHORTDATE",
    "LOCALE_SSHORTESTAM",
    "LOCALE_SSHORTESTDAYNAME1",
    "LOCALE_SSHORTESTDAYNAME2",
    "LOCALE_SSHORTESTDAYNAME3",
    "LOCALE_SSHORTESTDAYNAME4",
    "LOCALE_SSHORTESTDAYNAME5",
    "LOCALE_SSHORTESTDAYNAME6",
    "LOCALE_SSHORTESTDAYNAME7",
    "LOCALE_SSHORTESTPM",
    "LOCALE_SSHORTTIME",
    "LOCALE_SSORTLOCALE",
    "LOCALE_SSORTNAME",
    "LOCALE_STHOUSAND",
    "LOCALE_STIME",
    "LOCALE_STIMEFORMAT",
    "LOCALE_SUPPLEMENTAL",
    "LOCALE_SYEARMONTH",
    "LOCALE_USE_CP_ACP",
    "LOCALE_WINDOWS",
    "LOWLEVEL_SERVICE_TYPES",
    "LOW_SURROGATE_END",
    "LOW_SURROGATE_START",
    "LocaleNameToLCID",
    "MAPPING_DATA_RANGE",
    "MAPPING_ENUM_OPTIONS",
    "MAPPING_OPTIONS",
    "MAPPING_PROPERTY_BAG",
    "MAPPING_SERVICE_INFO",
    "MAP_COMPOSITE",
    "MAP_EXPAND_LIGATURES",
    "MAP_FOLDCZONE",
    "MAP_FOLDDIGITS",
    "MAP_PRECOMPOSED",
    "MAX_DEFAULTCHAR",
    "MAX_LEADBYTES",
    "MAX_LOCALE_NAME",
    "MAX_MIMECP_NAME",
    "MAX_MIMECSET_NAME",
    "MAX_MIMEFACE_NAME",
    "MAX_RFC1766_NAME",
    "MAX_SCRIPT_NAME",
    "MB_COMPOSITE",
    "MB_ERR_INVALID_CHARS",
    "MB_PRECOMPOSED",
    "MB_USEGLYPHCHARS",
    "MIMECONTF",
    "MIMECONTF_BROWSER",
    "MIMECONTF_EXPORT",
    "MIMECONTF_IMPORT",
    "MIMECONTF_MAILNEWS",
    "MIMECONTF_MIME_IE4",
    "MIMECONTF_MIME_LATEST",
    "MIMECONTF_MIME_REGISTRY",
    "MIMECONTF_MINIMAL",
    "MIMECONTF_PRIVCONVERTER",
    "MIMECONTF_SAVABLE_BROWSER",
    "MIMECONTF_SAVABLE_MAILNEWS",
    "MIMECONTF_VALID",
    "MIMECONTF_VALID_NLS",
    "MIMECPINFO",
    "MIMECSETINFO",
    "MIN_SPELLING_NTDDI",
    "MLCONVCHAR",
    "MLCONVCHARF_AUTODETECT",
    "MLCONVCHARF_DETECTJPN",
    "MLCONVCHARF_ENTITIZE",
    "MLCONVCHARF_NAME_ENTITIZE",
    "MLCONVCHARF_NCR_ENTITIZE",
    "MLCONVCHARF_NOBESTFITCHARS",
    "MLCONVCHARF_USEDEFCHAR",
    "MLCP",
    "MLDETECTCP",
    "MLDETECTCP_7BIT",
    "MLDETECTCP_8BIT",
    "MLDETECTCP_DBCS",
    "MLDETECTCP_HTML",
    "MLDETECTCP_NONE",
    "MLDETECTCP_NUMBER",
    "MLDETECTF_BROWSER",
    "MLDETECTF_EURO_UTF8",
    "MLDETECTF_FILTER_SPECIALCHAR",
    "MLDETECTF_MAILNEWS",
    "MLDETECTF_PREFERRED_ONLY",
    "MLDETECTF_PRESERVE_ORDER",
    "MLDETECTF_VALID",
    "MLDETECTF_VALID_NLS",
    "MLSTR_FLAGS",
    "MLSTR_READ",
    "MLSTR_WRITE",
    "MUI_COMPLEX_SCRIPT_FILTER",
    "MUI_CONSOLE_FILTER",
    "MUI_FILEINFO_VERSION",
    "MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN",
    "MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI",
    "MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL",
    "MUI_FORMAT_INF_COMPAT",
    "MUI_FORMAT_REG_COMPAT",
    "MUI_FULL_LANGUAGE",
    "MUI_IMMUTABLE_LOOKUP",
    "MUI_LANGUAGE_EXACT",
    "MUI_LANGUAGE_ID",
    "MUI_LANGUAGE_INSTALLED",
    "MUI_LANGUAGE_LICENSED",
    "MUI_LANGUAGE_NAME",
    "MUI_LANG_NEUTRAL_PE_FILE",
    "MUI_LIP_LANGUAGE",
    "MUI_MACHINE_LANGUAGE_SETTINGS",
    "MUI_MERGE_SYSTEM_FALLBACK",
    "MUI_MERGE_USER_FALLBACK",
    "MUI_NON_LANG_NEUTRAL_FILE",
    "MUI_PARTIAL_LANGUAGE",
    "MUI_QUERY_CHECKSUM",
    "MUI_QUERY_LANGUAGE_NAME",
    "MUI_QUERY_RESOURCE_TYPES",
    "MUI_QUERY_TYPE",
    "MUI_RESET_FILTERS",
    "MUI_SKIP_STRING_CACHE",
    "MUI_THREAD_LANGUAGES",
    "MUI_USER_PREFERRED_UI_LANGUAGES",
    "MUI_USE_INSTALLED_LANGUAGES",
    "MUI_USE_SEARCH_ALL_LANGUAGES",
    "MUI_VERIFY_FILE_EXISTS",
    "MULTI_BYTE_TO_WIDE_CHAR_FLAGS",
    "MappingDoAction",
    "MappingFreePropertyBag",
    "MappingFreeServices",
    "MappingGetServices",
    "MappingRecognizeText",
    "MultiByteToWideChar",
    "NEWTEXTMETRICEXA",
    "NEWTEXTMETRICEXW",
    "NLSVERSIONINFO",
    "NLSVERSIONINFOEX",
    "NLS_CP_CPINFO",
    "NLS_CP_MBTOWC",
    "NLS_CP_WCTOMB",
    "NORM_FORM",
    "NORM_FORM_NormalizationC",
    "NORM_FORM_NormalizationD",
    "NORM_FORM_NormalizationKC",
    "NORM_FORM_NormalizationKD",
    "NORM_FORM_NormalizationOther",
    "NORM_IGNORECASE",
    "NORM_IGNOREKANATYPE",
    "NORM_IGNORENONSPACE",
    "NORM_IGNORESYMBOLS",
    "NORM_IGNOREWIDTH",
    "NORM_LINGUISTIC_CASING",
    "NUMBERFMTA",
    "NUMBERFMTW",
    "NUMSYS_NAME_CAPACITY",
    "NormalizeString",
    "NotifyUILanguageChange",
    "OFFLINE_SERVICES",
    "ONLINE_SERVICES",
    "OPENTYPE_FEATURE_RECORD",
    "PFN_MAPPINGCALLBACKPROC",
    "RFC1766INFO",
    "ResolveLocaleName",
    "RestoreThreadPreferredUILanguages",
    "SCRIPTCONTF",
    "SCRIPTCONTF_FIXED_FONT",
    "SCRIPTCONTF_PROPORTIONAL_FONT",
    "SCRIPTCONTF_SCRIPT_HIDE",
    "SCRIPTCONTF_SCRIPT_SYSTEM",
    "SCRIPTCONTF_SCRIPT_USER",
    "SCRIPTCONTF_sidArabic",
    "SCRIPTCONTF_sidArmenian",
    "SCRIPTCONTF_sidAsciiLatin",
    "SCRIPTCONTF_sidAsciiSym",
    "SCRIPTCONTF_sidBengali",
    "SCRIPTCONTF_sidBopomofo",
    "SCRIPTCONTF_sidBraille",
    "SCRIPTCONTF_sidBurmese",
    "SCRIPTCONTF_sidCanSyllabic",
    "SCRIPTCONTF_sidCherokee",
    "SCRIPTCONTF_sidCyrillic",
    "SCRIPTCONTF_sidDefault",
    "SCRIPTCONTF_sidDevanagari",
    "SCRIPTCONTF_sidEthiopic",
    "SCRIPTCONTF_sidFEFirst",
    "SCRIPTCONTF_sidFELast",
    "SCRIPTCONTF_sidGeorgian",
    "SCRIPTCONTF_sidGreek",
    "SCRIPTCONTF_sidGujarati",
    "SCRIPTCONTF_sidGurmukhi",
    "SCRIPTCONTF_sidHan",
    "SCRIPTCONTF_sidHangul",
    "SCRIPTCONTF_sidHebrew",
    "SCRIPTCONTF_sidKana",
    "SCRIPTCONTF_sidKannada",
    "SCRIPTCONTF_sidKhmer",
    "SCRIPTCONTF_sidLao",
    "SCRIPTCONTF_sidLatin",
    "SCRIPTCONTF_sidLim",
    "SCRIPTCONTF_sidMalayalam",
    "SCRIPTCONTF_sidMerge",
    "SCRIPTCONTF_sidMongolian",
    "SCRIPTCONTF_sidOgham",
    "SCRIPTCONTF_sidOriya",
    "SCRIPTCONTF_sidRunic",
    "SCRIPTCONTF_sidSinhala",
    "SCRIPTCONTF_sidSyriac",
    "SCRIPTCONTF_sidTamil",
    "SCRIPTCONTF_sidTelugu",
    "SCRIPTCONTF_sidThaana",
    "SCRIPTCONTF_sidThai",
    "SCRIPTCONTF_sidTibetan",
    "SCRIPTCONTF_sidUserDefined",
    "SCRIPTCONTF_sidYi",
    "SCRIPTFONTCONTF",
    "SCRIPTFONTINFO",
    "SCRIPTINFO",
    "SCRIPT_ANALYSIS",
    "SCRIPT_CHARPROP",
    "SCRIPT_CONTROL",
    "SCRIPT_DIGITSUBSTITUTE",
    "SCRIPT_DIGITSUBSTITUTE_CONTEXT",
    "SCRIPT_DIGITSUBSTITUTE_NATIONAL",
    "SCRIPT_DIGITSUBSTITUTE_NONE",
    "SCRIPT_DIGITSUBSTITUTE_TRADITIONAL",
    "SCRIPT_FONTPROPERTIES",
    "SCRIPT_GLYPHPROP",
    "SCRIPT_IS_COMPLEX_FLAGS",
    "SCRIPT_ITEM",
    "SCRIPT_JUSTIFY",
    "SCRIPT_JUSTIFY_ARABIC_ALEF",
    "SCRIPT_JUSTIFY_ARABIC_BA",
    "SCRIPT_JUSTIFY_ARABIC_BARA",
    "SCRIPT_JUSTIFY_ARABIC_BLANK",
    "SCRIPT_JUSTIFY_ARABIC_HA",
    "SCRIPT_JUSTIFY_ARABIC_KASHIDA",
    "SCRIPT_JUSTIFY_ARABIC_NORMAL",
    "SCRIPT_JUSTIFY_ARABIC_RA",
    "SCRIPT_JUSTIFY_ARABIC_SEEN",
    "SCRIPT_JUSTIFY_ARABIC_SEEN_M",
    "SCRIPT_JUSTIFY_BLANK",
    "SCRIPT_JUSTIFY_CHARACTER",
    "SCRIPT_JUSTIFY_NONE",
    "SCRIPT_JUSTIFY_RESERVED1",
    "SCRIPT_JUSTIFY_RESERVED2",
    "SCRIPT_JUSTIFY_RESERVED3",
    "SCRIPT_LOGATTR",
    "SCRIPT_PROPERTIES",
    "SCRIPT_STATE",
    "SCRIPT_TABDEF",
    "SCRIPT_TAG_UNKNOWN",
    "SCRIPT_UNDEFINED",
    "SCRIPT_VISATTR",
    "SGCM_RTL",
    "SIC_ASCIIDIGIT",
    "SIC_COMPLEX",
    "SIC_NEUTRAL",
    "SORTING_PARADIGM_ICU",
    "SORTING_PARADIGM_NLS",
    "SORT_DIGITSASNUMBERS",
    "SORT_STRINGSORT",
    "SSA_BREAK",
    "SSA_CLIP",
    "SSA_DONTGLYPH",
    "SSA_DZWG",
    "SSA_FALLBACK",
    "SSA_FIT",
    "SSA_FULLMEASURE",
    "SSA_GCP",
    "SSA_GLYPHS",
    "SSA_HIDEHOTKEY",
    "SSA_HOTKEY",
    "SSA_HOTKEYONLY",
    "SSA_LAYOUTRTL",
    "SSA_LINK",
    "SSA_LPKANSIFALLBACK",
    "SSA_METAFILE",
    "SSA_NOKASHIDA",
    "SSA_PASSWORD",
    "SSA_PIDX",
    "SSA_RTL",
    "SSA_TAB",
    "SYSGEOCLASS",
    "SYSGEOTYPE",
    "SYSNLS_FUNCTION",
    "ScriptApplyDigitSubstitution",
    "ScriptApplyLogicalWidth",
    "ScriptBreak",
    "ScriptCPtoX",
    "ScriptCacheGetHeight",
    "ScriptFreeCache",
    "ScriptGetCMap",
    "ScriptGetFontAlternateGlyphs",
    "ScriptGetFontFeatureTags",
    "ScriptGetFontLanguageTags",
    "ScriptGetFontProperties",
    "ScriptGetFontScriptTags",
    "ScriptGetGlyphABCWidth",
    "ScriptGetLogicalWidths",
    "ScriptGetProperties",
    "ScriptIsComplex",
    "ScriptItemize",
    "ScriptItemizeOpenType",
    "ScriptJustify",
    "ScriptLayout",
    "ScriptPlace",
    "ScriptPlaceOpenType",
    "ScriptPositionSingleGlyph",
    "ScriptRecordDigitSubstitution",
    "ScriptShape",
    "ScriptShapeOpenType",
    "ScriptStringAnalyse",
    "ScriptStringCPtoX",
    "ScriptStringFree",
    "ScriptStringGetLogicalWidths",
    "ScriptStringGetOrder",
    "ScriptStringOut",
    "ScriptStringValidate",
    "ScriptStringXtoCP",
    "ScriptString_pLogAttr",
    "ScriptString_pSize",
    "ScriptString_pcOutChars",
    "ScriptSubstituteSingleGlyph",
    "ScriptTextOut",
    "ScriptXtoCP",
    "SetCalendarInfoA",
    "SetCalendarInfoW",
    "SetLocaleInfoA",
    "SetLocaleInfoW",
    "SetProcessPreferredUILanguages",
    "SetThreadLocale",
    "SetThreadPreferredUILanguages",
    "SetThreadPreferredUILanguages2",
    "SetThreadUILanguage",
    "SetUserGeoID",
    "SetUserGeoName",
    "SpellCheckerFactory",
    "TCI_SRCCHARSET",
    "TCI_SRCCODEPAGE",
    "TCI_SRCFONTSIG",
    "TCI_SRCLOCALE",
    "TEXTRANGE_PROPERTIES",
    "TIMEFMT_ENUMPROCA",
    "TIMEFMT_ENUMPROCEX",
    "TIMEFMT_ENUMPROCW",
    "TIME_FORCE24HOURFORMAT",
    "TIME_FORMAT_FLAGS",
    "TIME_NOMINUTESORSECONDS",
    "TIME_NOSECONDS",
    "TIME_NOTIMEMARKER",
    "TRANSLATE_CHARSET_INFO_FLAGS",
    "TranslateCharsetInfo",
    "U16_MAX_LENGTH",
    "U8_LEAD3_T1_BITS",
    "U8_LEAD4_T1_BITS",
    "U8_MAX_LENGTH",
    "UAcceptResult",
    "UAlphabeticIndexLabelType",
    "UBIDI_DEFAULT_LTR",
    "UBIDI_DEFAULT_RTL",
    "UBIDI_DO_MIRRORING",
    "UBIDI_INSERT_LRM_FOR_NUMERIC",
    "UBIDI_KEEP_BASE_COMBINING",
    "UBIDI_LEVEL_OVERRIDE",
    "UBIDI_LOGICAL",
    "UBIDI_LTR",
    "UBIDI_MAP_NOWHERE",
    "UBIDI_MAX_EXPLICIT_LEVEL",
    "UBIDI_MIRRORING_OFF",
    "UBIDI_MIRRORING_ON",
    "UBIDI_MIXED",
    "UBIDI_NEUTRAL",
    "UBIDI_OPTION_DEFAULT",
    "UBIDI_OPTION_INSERT_MARKS",
    "UBIDI_OPTION_REMOVE_CONTROLS",
    "UBIDI_OPTION_STREAMING",
    "UBIDI_OUTPUT_REVERSE",
    "UBIDI_REMOVE_BIDI_CONTROLS",
    "UBIDI_REORDER_DEFAULT",
    "UBIDI_REORDER_GROUP_NUMBERS_WITH_R",
    "UBIDI_REORDER_INVERSE_FOR_NUMBERS_SPECIAL",
    "UBIDI_REORDER_INVERSE_LIKE_DIRECT",
    "UBIDI_REORDER_INVERSE_NUMBERS_AS_L",
    "UBIDI_REORDER_NUMBERS_SPECIAL",
    "UBIDI_REORDER_RUNS_ONLY",
    "UBIDI_RTL",
    "UBIDI_VISUAL",
    "UBLOCK_ADLAM",
    "UBLOCK_AEGEAN_NUMBERS",
    "UBLOCK_AHOM",
    "UBLOCK_ALCHEMICAL_SYMBOLS",
    "UBLOCK_ALPHABETIC_PRESENTATION_FORMS",
    "UBLOCK_ANATOLIAN_HIEROGLYPHS",
    "UBLOCK_ANCIENT_GREEK_MUSICAL_NOTATION",
    "UBLOCK_ANCIENT_GREEK_NUMBERS",
    "UBLOCK_ANCIENT_SYMBOLS",
    "UBLOCK_ARABIC",
    "UBLOCK_ARABIC_EXTENDED_A",
    "UBLOCK_ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS",
    "UBLOCK_ARABIC_PRESENTATION_FORMS_A",
    "UBLOCK_ARABIC_PRESENTATION_FORMS_B",
    "UBLOCK_ARABIC_SUPPLEMENT",
    "UBLOCK_ARMENIAN",
    "UBLOCK_ARROWS",
    "UBLOCK_AVESTAN",
    "UBLOCK_BALINESE",
    "UBLOCK_BAMUM",
    "UBLOCK_BAMUM_SUPPLEMENT",
    "UBLOCK_BASIC_LATIN",
    "UBLOCK_BASSA_VAH",
    "UBLOCK_BATAK",
    "UBLOCK_BENGALI",
    "UBLOCK_BHAIKSUKI",
    "UBLOCK_BLOCK_ELEMENTS",
    "UBLOCK_BOPOMOFO",
    "UBLOCK_BOPOMOFO_EXTENDED",
    "UBLOCK_BOX_DRAWING",
    "UBLOCK_BRAHMI",
    "UBLOCK_BRAILLE_PATTERNS",
    "UBLOCK_BUGINESE",
    "UBLOCK_BUHID",
    "UBLOCK_BYZANTINE_MUSICAL_SYMBOLS",
    "UBLOCK_CARIAN",
    "UBLOCK_CAUCASIAN_ALBANIAN",
    "UBLOCK_CHAKMA",
    "UBLOCK_CHAM",
    "UBLOCK_CHEROKEE",
    "UBLOCK_CHEROKEE_SUPPLEMENT",
    "UBLOCK_CHESS_SYMBOLS",
    "UBLOCK_CHORASMIAN",
    "UBLOCK_CJK_COMPATIBILITY",
    "UBLOCK_CJK_COMPATIBILITY_FORMS",
    "UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS",
    "UBLOCK_CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT",
    "UBLOCK_CJK_RADICALS_SUPPLEMENT",
    "UBLOCK_CJK_STROKES",
    "UBLOCK_CJK_SYMBOLS_AND_PUNCTUATION",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F",
    "UBLOCK_CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G",
    "UBLOCK_COMBINING_DIACRITICAL_MARKS",
    "UBLOCK_COMBINING_DIACRITICAL_MARKS_EXTENDED",
    "UBLOCK_COMBINING_DIACRITICAL_MARKS_SUPPLEMENT",
    "UBLOCK_COMBINING_HALF_MARKS",
    "UBLOCK_COMBINING_MARKS_FOR_SYMBOLS",
    "UBLOCK_COMMON_INDIC_NUMBER_FORMS",
    "UBLOCK_CONTROL_PICTURES",
    "UBLOCK_COPTIC",
    "UBLOCK_COPTIC_EPACT_NUMBERS",
    "UBLOCK_COUNTING_ROD_NUMERALS",
    "UBLOCK_CUNEIFORM",
    "UBLOCK_CUNEIFORM_NUMBERS_AND_PUNCTUATION",
    "UBLOCK_CURRENCY_SYMBOLS",
    "UBLOCK_CYPRIOT_SYLLABARY",
    "UBLOCK_CYRILLIC",
    "UBLOCK_CYRILLIC_EXTENDED_A",
    "UBLOCK_CYRILLIC_EXTENDED_B",
    "UBLOCK_CYRILLIC_EXTENDED_C",
    "UBLOCK_CYRILLIC_SUPPLEMENT",
    "UBLOCK_CYRILLIC_SUPPLEMENTARY",
    "UBLOCK_DESERET",
    "UBLOCK_DEVANAGARI",
    "UBLOCK_DEVANAGARI_EXTENDED",
    "UBLOCK_DINGBATS",
    "UBLOCK_DIVES_AKURU",
    "UBLOCK_DOGRA",
    "UBLOCK_DOMINO_TILES",
    "UBLOCK_DUPLOYAN",
    "UBLOCK_EARLY_DYNASTIC_CUNEIFORM",
    "UBLOCK_EGYPTIAN_HIEROGLYPHS",
    "UBLOCK_EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS",
    "UBLOCK_ELBASAN",
    "UBLOCK_ELYMAIC",
    "UBLOCK_EMOTICONS",
    "UBLOCK_ENCLOSED_ALPHANUMERICS",
    "UBLOCK_ENCLOSED_ALPHANUMERIC_SUPPLEMENT",
    "UBLOCK_ENCLOSED_CJK_LETTERS_AND_MONTHS",
    "UBLOCK_ENCLOSED_IDEOGRAPHIC_SUPPLEMENT",
    "UBLOCK_ETHIOPIC",
    "UBLOCK_ETHIOPIC_EXTENDED",
    "UBLOCK_ETHIOPIC_EXTENDED_A",
    "UBLOCK_ETHIOPIC_SUPPLEMENT",
    "UBLOCK_GENERAL_PUNCTUATION",
    "UBLOCK_GEOMETRIC_SHAPES",
    "UBLOCK_GEOMETRIC_SHAPES_EXTENDED",
    "UBLOCK_GEORGIAN",
    "UBLOCK_GEORGIAN_EXTENDED",
    "UBLOCK_GEORGIAN_SUPPLEMENT",
    "UBLOCK_GLAGOLITIC",
    "UBLOCK_GLAGOLITIC_SUPPLEMENT",
    "UBLOCK_GOTHIC",
    "UBLOCK_GRANTHA",
    "UBLOCK_GREEK",
    "UBLOCK_GREEK_EXTENDED",
    "UBLOCK_GUJARATI",
    "UBLOCK_GUNJALA_GONDI",
    "UBLOCK_GURMUKHI",
    "UBLOCK_HALFWIDTH_AND_FULLWIDTH_FORMS",
    "UBLOCK_HANGUL_COMPATIBILITY_JAMO",
    "UBLOCK_HANGUL_JAMO",
    "UBLOCK_HANGUL_JAMO_EXTENDED_A",
    "UBLOCK_HANGUL_JAMO_EXTENDED_B",
    "UBLOCK_HANGUL_SYLLABLES",
    "UBLOCK_HANIFI_ROHINGYA",
    "UBLOCK_HANUNOO",
    "UBLOCK_HATRAN",
    "UBLOCK_HEBREW",
    "UBLOCK_HIGH_PRIVATE_USE_SURROGATES",
    "UBLOCK_HIGH_SURROGATES",
    "UBLOCK_HIRAGANA",
    "UBLOCK_IDEOGRAPHIC_DESCRIPTION_CHARACTERS",
    "UBLOCK_IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION",
    "UBLOCK_IMPERIAL_ARAMAIC",
    "UBLOCK_INDIC_SIYAQ_NUMBERS",
    "UBLOCK_INSCRIPTIONAL_PAHLAVI",
    "UBLOCK_INSCRIPTIONAL_PARTHIAN",
    "UBLOCK_INVALID_CODE",
    "UBLOCK_IPA_EXTENSIONS",
    "UBLOCK_JAVANESE",
    "UBLOCK_KAITHI",
    "UBLOCK_KANA_EXTENDED_A",
    "UBLOCK_KANA_SUPPLEMENT",
    "UBLOCK_KANBUN",
    "UBLOCK_KANGXI_RADICALS",
    "UBLOCK_KANNADA",
    "UBLOCK_KATAKANA",
    "UBLOCK_KATAKANA_PHONETIC_EXTENSIONS",
    "UBLOCK_KAYAH_LI",
    "UBLOCK_KHAROSHTHI",
    "UBLOCK_KHITAN_SMALL_SCRIPT",
    "UBLOCK_KHMER",
    "UBLOCK_KHMER_SYMBOLS",
    "UBLOCK_KHOJKI",
    "UBLOCK_KHUDAWADI",
    "UBLOCK_LAO",
    "UBLOCK_LATIN_1_SUPPLEMENT",
    "UBLOCK_LATIN_EXTENDED_A",
    "UBLOCK_LATIN_EXTENDED_ADDITIONAL",
    "UBLOCK_LATIN_EXTENDED_B",
    "UBLOCK_LATIN_EXTENDED_C",
    "UBLOCK_LATIN_EXTENDED_D",
    "UBLOCK_LATIN_EXTENDED_E",
    "UBLOCK_LEPCHA",
    "UBLOCK_LETTERLIKE_SYMBOLS",
    "UBLOCK_LIMBU",
    "UBLOCK_LINEAR_A",
    "UBLOCK_LINEAR_B_IDEOGRAMS",
    "UBLOCK_LINEAR_B_SYLLABARY",
    "UBLOCK_LISU",
    "UBLOCK_LISU_SUPPLEMENT",
    "UBLOCK_LOW_SURROGATES",
    "UBLOCK_LYCIAN",
    "UBLOCK_LYDIAN",
    "UBLOCK_MAHAJANI",
    "UBLOCK_MAHJONG_TILES",
    "UBLOCK_MAKASAR",
    "UBLOCK_MALAYALAM",
    "UBLOCK_MANDAIC",
    "UBLOCK_MANICHAEAN",
    "UBLOCK_MARCHEN",
    "UBLOCK_MASARAM_GONDI",
    "UBLOCK_MATHEMATICAL_ALPHANUMERIC_SYMBOLS",
    "UBLOCK_MATHEMATICAL_OPERATORS",
    "UBLOCK_MAYAN_NUMERALS",
    "UBLOCK_MEDEFAIDRIN",
    "UBLOCK_MEETEI_MAYEK",
    "UBLOCK_MEETEI_MAYEK_EXTENSIONS",
    "UBLOCK_MENDE_KIKAKUI",
    "UBLOCK_MEROITIC_CURSIVE",
    "UBLOCK_MEROITIC_HIEROGLYPHS",
    "UBLOCK_MIAO",
    "UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A",
    "UBLOCK_MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B",
    "UBLOCK_MISCELLANEOUS_SYMBOLS",
    "UBLOCK_MISCELLANEOUS_SYMBOLS_AND_ARROWS",
    "UBLOCK_MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS",
    "UBLOCK_MISCELLANEOUS_TECHNICAL",
    "UBLOCK_MODI",
    "UBLOCK_MODIFIER_TONE_LETTERS",
    "UBLOCK_MONGOLIAN",
    "UBLOCK_MONGOLIAN_SUPPLEMENT",
    "UBLOCK_MRO",
    "UBLOCK_MULTANI",
    "UBLOCK_MUSICAL_SYMBOLS",
    "UBLOCK_MYANMAR",
    "UBLOCK_MYANMAR_EXTENDED_A",
    "UBLOCK_MYANMAR_EXTENDED_B",
    "UBLOCK_NABATAEAN",
    "UBLOCK_NANDINAGARI",
    "UBLOCK_NEWA",
    "UBLOCK_NEW_TAI_LUE",
    "UBLOCK_NKO",
    "UBLOCK_NO_BLOCK",
    "UBLOCK_NUMBER_FORMS",
    "UBLOCK_NUSHU",
    "UBLOCK_NYIAKENG_PUACHUE_HMONG",
    "UBLOCK_OGHAM",
    "UBLOCK_OLD_HUNGARIAN",
    "UBLOCK_OLD_ITALIC",
    "UBLOCK_OLD_NORTH_ARABIAN",
    "UBLOCK_OLD_PERMIC",
    "UBLOCK_OLD_PERSIAN",
    "UBLOCK_OLD_SOGDIAN",
    "UBLOCK_OLD_SOUTH_ARABIAN",
    "UBLOCK_OLD_TURKIC",
    "UBLOCK_OL_CHIKI",
    "UBLOCK_OPTICAL_CHARACTER_RECOGNITION",
    "UBLOCK_ORIYA",
    "UBLOCK_ORNAMENTAL_DINGBATS",
    "UBLOCK_OSAGE",
    "UBLOCK_OSMANYA",
    "UBLOCK_OTTOMAN_SIYAQ_NUMBERS",
    "UBLOCK_PAHAWH_HMONG",
    "UBLOCK_PALMYRENE",
    "UBLOCK_PAU_CIN_HAU",
    "UBLOCK_PHAGS_PA",
    "UBLOCK_PHAISTOS_DISC",
    "UBLOCK_PHOENICIAN",
    "UBLOCK_PHONETIC_EXTENSIONS",
    "UBLOCK_PHONETIC_EXTENSIONS_SUPPLEMENT",
    "UBLOCK_PLAYING_CARDS",
    "UBLOCK_PRIVATE_USE",
    "UBLOCK_PRIVATE_USE_AREA",
    "UBLOCK_PSALTER_PAHLAVI",
    "UBLOCK_REJANG",
    "UBLOCK_RUMI_NUMERAL_SYMBOLS",
    "UBLOCK_RUNIC",
    "UBLOCK_SAMARITAN",
    "UBLOCK_SAURASHTRA",
    "UBLOCK_SHARADA",
    "UBLOCK_SHAVIAN",
    "UBLOCK_SHORTHAND_FORMAT_CONTROLS",
    "UBLOCK_SIDDHAM",
    "UBLOCK_SINHALA",
    "UBLOCK_SINHALA_ARCHAIC_NUMBERS",
    "UBLOCK_SMALL_FORM_VARIANTS",
    "UBLOCK_SMALL_KANA_EXTENSION",
    "UBLOCK_SOGDIAN",
    "UBLOCK_SORA_SOMPENG",
    "UBLOCK_SOYOMBO",
    "UBLOCK_SPACING_MODIFIER_LETTERS",
    "UBLOCK_SPECIALS",
    "UBLOCK_SUNDANESE",
    "UBLOCK_SUNDANESE_SUPPLEMENT",
    "UBLOCK_SUPERSCRIPTS_AND_SUBSCRIPTS",
    "UBLOCK_SUPPLEMENTAL_ARROWS_A",
    "UBLOCK_SUPPLEMENTAL_ARROWS_B",
    "UBLOCK_SUPPLEMENTAL_ARROWS_C",
    "UBLOCK_SUPPLEMENTAL_MATHEMATICAL_OPERATORS",
    "UBLOCK_SUPPLEMENTAL_PUNCTUATION",
    "UBLOCK_SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS",
    "UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_A",
    "UBLOCK_SUPPLEMENTARY_PRIVATE_USE_AREA_B",
    "UBLOCK_SUTTON_SIGNWRITING",
    "UBLOCK_SYLOTI_NAGRI",
    "UBLOCK_SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A",
    "UBLOCK_SYMBOLS_FOR_LEGACY_COMPUTING",
    "UBLOCK_SYRIAC",
    "UBLOCK_SYRIAC_SUPPLEMENT",
    "UBLOCK_TAGALOG",
    "UBLOCK_TAGBANWA",
    "UBLOCK_TAGS",
    "UBLOCK_TAI_LE",
    "UBLOCK_TAI_THAM",
    "UBLOCK_TAI_VIET",
    "UBLOCK_TAI_XUAN_JING_SYMBOLS",
    "UBLOCK_TAKRI",
    "UBLOCK_TAMIL",
    "UBLOCK_TAMIL_SUPPLEMENT",
    "UBLOCK_TANGUT",
    "UBLOCK_TANGUT_COMPONENTS",
    "UBLOCK_TANGUT_SUPPLEMENT",
    "UBLOCK_TELUGU",
    "UBLOCK_THAANA",
    "UBLOCK_THAI",
    "UBLOCK_TIBETAN",
    "UBLOCK_TIFINAGH",
    "UBLOCK_TIRHUTA",
    "UBLOCK_TRANSPORT_AND_MAP_SYMBOLS",
    "UBLOCK_UGARITIC",
    "UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS",
    "UBLOCK_UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED",
    "UBLOCK_VAI",
    "UBLOCK_VARIATION_SELECTORS",
    "UBLOCK_VARIATION_SELECTORS_SUPPLEMENT",
    "UBLOCK_VEDIC_EXTENSIONS",
    "UBLOCK_VERTICAL_FORMS",
    "UBLOCK_WANCHO",
    "UBLOCK_WARANG_CITI",
    "UBLOCK_YEZIDI",
    "UBLOCK_YIJING_HEXAGRAM_SYMBOLS",
    "UBLOCK_YI_RADICALS",
    "UBLOCK_YI_SYLLABLES",
    "UBLOCK_ZANABAZAR_SQUARE",
    "UBRK_CHARACTER",
    "UBRK_LINE",
    "UBRK_LINE_HARD",
    "UBRK_LINE_HARD_LIMIT",
    "UBRK_LINE_SOFT",
    "UBRK_LINE_SOFT_LIMIT",
    "UBRK_SENTENCE",
    "UBRK_SENTENCE_SEP",
    "UBRK_SENTENCE_SEP_LIMIT",
    "UBRK_SENTENCE_TERM",
    "UBRK_SENTENCE_TERM_LIMIT",
    "UBRK_WORD",
    "UBRK_WORD_IDEO",
    "UBRK_WORD_IDEO_LIMIT",
    "UBRK_WORD_KANA",
    "UBRK_WORD_KANA_LIMIT",
    "UBRK_WORD_LETTER",
    "UBRK_WORD_LETTER_LIMIT",
    "UBRK_WORD_NONE",
    "UBRK_WORD_NONE_LIMIT",
    "UBRK_WORD_NUMBER",
    "UBRK_WORD_NUMBER_LIMIT",
    "UBiDi",
    "UBiDiClassCallback",
    "UBiDiDirection",
    "UBiDiMirroring",
    "UBiDiOrder",
    "UBiDiReorderingMode",
    "UBiDiReorderingOption",
    "UBiDiTransform",
    "UBidiPairedBracketType",
    "UBlockCode",
    "UBreakIterator",
    "UBreakIteratorType",
    "UCAL_ACTUAL_MAXIMUM",
    "UCAL_ACTUAL_MINIMUM",
    "UCAL_AM",
    "UCAL_AM_PM",
    "UCAL_APRIL",
    "UCAL_AUGUST",
    "UCAL_DATE",
    "UCAL_DAY_OF_MONTH",
    "UCAL_DAY_OF_WEEK",
    "UCAL_DAY_OF_WEEK_IN_MONTH",
    "UCAL_DAY_OF_YEAR",
    "UCAL_DECEMBER",
    "UCAL_DEFAULT",
    "UCAL_DOW_LOCAL",
    "UCAL_DST",
    "UCAL_DST_OFFSET",
    "UCAL_ERA",
    "UCAL_EXTENDED_YEAR",
    "UCAL_FEBRUARY",
    "UCAL_FIELD_COUNT",
    "UCAL_FIRST_DAY_OF_WEEK",
    "UCAL_FRIDAY",
    "UCAL_GREATEST_MINIMUM",
    "UCAL_GREGORIAN",
    "UCAL_HOUR",
    "UCAL_HOUR_OF_DAY",
    "UCAL_IS_LEAP_MONTH",
    "UCAL_JANUARY",
    "UCAL_JULIAN_DAY",
    "UCAL_JULY",
    "UCAL_JUNE",
    "UCAL_LEAST_MAXIMUM",
    "UCAL_LENIENT",
    "UCAL_MARCH",
    "UCAL_MAXIMUM",
    "UCAL_MAY",
    "UCAL_MILLISECOND",
    "UCAL_MILLISECONDS_IN_DAY",
    "UCAL_MINIMAL_DAYS_IN_FIRST_WEEK",
    "UCAL_MINIMUM",
    "UCAL_MINUTE",
    "UCAL_MONDAY",
    "UCAL_MONTH",
    "UCAL_NOVEMBER",
    "UCAL_OCTOBER",
    "UCAL_PM",
    "UCAL_REPEATED_WALL_TIME",
    "UCAL_SATURDAY",
    "UCAL_SECOND",
    "UCAL_SEPTEMBER",
    "UCAL_SHORT_DST",
    "UCAL_SHORT_STANDARD",
    "UCAL_SKIPPED_WALL_TIME",
    "UCAL_STANDARD",
    "UCAL_SUNDAY",
    "UCAL_THURSDAY",
    "UCAL_TRADITIONAL",
    "UCAL_TUESDAY",
    "UCAL_TZ_TRANSITION_NEXT",
    "UCAL_TZ_TRANSITION_NEXT_INCLUSIVE",
    "UCAL_TZ_TRANSITION_PREVIOUS",
    "UCAL_TZ_TRANSITION_PREVIOUS_INCLUSIVE",
    "UCAL_UNDECIMBER",
    "UCAL_UNKNOWN_ZONE_ID",
    "UCAL_WALLTIME_FIRST",
    "UCAL_WALLTIME_LAST",
    "UCAL_WALLTIME_NEXT_VALID",
    "UCAL_WEDNESDAY",
    "UCAL_WEEKDAY",
    "UCAL_WEEKEND",
    "UCAL_WEEKEND_CEASE",
    "UCAL_WEEKEND_ONSET",
    "UCAL_WEEK_OF_MONTH",
    "UCAL_WEEK_OF_YEAR",
    "UCAL_YEAR",
    "UCAL_YEAR_WOY",
    "UCAL_ZONE_OFFSET",
    "UCAL_ZONE_TYPE_ANY",
    "UCAL_ZONE_TYPE_CANONICAL",
    "UCAL_ZONE_TYPE_CANONICAL_LOCATION",
    "UCHAR_AGE",
    "UCHAR_ALPHABETIC",
    "UCHAR_ASCII_HEX_DIGIT",
    "UCHAR_BIDI_CLASS",
    "UCHAR_BIDI_CONTROL",
    "UCHAR_BIDI_MIRRORED",
    "UCHAR_BIDI_MIRRORING_GLYPH",
    "UCHAR_BIDI_PAIRED_BRACKET",
    "UCHAR_BIDI_PAIRED_BRACKET_TYPE",
    "UCHAR_BINARY_START",
    "UCHAR_BLOCK",
    "UCHAR_CANONICAL_COMBINING_CLASS",
    "UCHAR_CASED",
    "UCHAR_CASE_FOLDING",
    "UCHAR_CASE_IGNORABLE",
    "UCHAR_CASE_SENSITIVE",
    "UCHAR_CHANGES_WHEN_CASEFOLDED",
    "UCHAR_CHANGES_WHEN_CASEMAPPED",
    "UCHAR_CHANGES_WHEN_LOWERCASED",
    "UCHAR_CHANGES_WHEN_NFKC_CASEFOLDED",
    "UCHAR_CHANGES_WHEN_TITLECASED",
    "UCHAR_CHANGES_WHEN_UPPERCASED",
    "UCHAR_DASH",
    "UCHAR_DECOMPOSITION_TYPE",
    "UCHAR_DEFAULT_IGNORABLE_CODE_POINT",
    "UCHAR_DEPRECATED",
    "UCHAR_DIACRITIC",
    "UCHAR_DOUBLE_START",
    "UCHAR_EAST_ASIAN_WIDTH",
    "UCHAR_EMOJI",
    "UCHAR_EMOJI_COMPONENT",
    "UCHAR_EMOJI_MODIFIER",
    "UCHAR_EMOJI_MODIFIER_BASE",
    "UCHAR_EMOJI_PRESENTATION",
    "UCHAR_EXTENDED_PICTOGRAPHIC",
    "UCHAR_EXTENDER",
    "UCHAR_FULL_COMPOSITION_EXCLUSION",
    "UCHAR_GENERAL_CATEGORY",
    "UCHAR_GENERAL_CATEGORY_MASK",
    "UCHAR_GRAPHEME_BASE",
    "UCHAR_GRAPHEME_CLUSTER_BREAK",
    "UCHAR_GRAPHEME_EXTEND",
    "UCHAR_GRAPHEME_LINK",
    "UCHAR_HANGUL_SYLLABLE_TYPE",
    "UCHAR_HEX_DIGIT",
    "UCHAR_HYPHEN",
    "UCHAR_IDEOGRAPHIC",
    "UCHAR_IDS_BINARY_OPERATOR",
    "UCHAR_IDS_TRINARY_OPERATOR",
    "UCHAR_ID_CONTINUE",
    "UCHAR_ID_START",
    "UCHAR_INDIC_POSITIONAL_CATEGORY",
    "UCHAR_INDIC_SYLLABIC_CATEGORY",
    "UCHAR_INT_START",
    "UCHAR_INVALID_CODE",
    "UCHAR_JOINING_GROUP",
    "UCHAR_JOINING_TYPE",
    "UCHAR_JOIN_CONTROL",
    "UCHAR_LEAD_CANONICAL_COMBINING_CLASS",
    "UCHAR_LINE_BREAK",
    "UCHAR_LOGICAL_ORDER_EXCEPTION",
    "UCHAR_LOWERCASE",
    "UCHAR_LOWERCASE_MAPPING",
    "UCHAR_MASK_START",
    "UCHAR_MATH",
    "UCHAR_MAX_VALUE",
    "UCHAR_MIN_VALUE",
    "UCHAR_NAME",
    "UCHAR_NFC_INERT",
    "UCHAR_NFC_QUICK_CHECK",
    "UCHAR_NFD_INERT",
    "UCHAR_NFD_QUICK_CHECK",
    "UCHAR_NFKC_INERT",
    "UCHAR_NFKC_QUICK_CHECK",
    "UCHAR_NFKD_INERT",
    "UCHAR_NFKD_QUICK_CHECK",
    "UCHAR_NONCHARACTER_CODE_POINT",
    "UCHAR_NUMERIC_TYPE",
    "UCHAR_NUMERIC_VALUE",
    "UCHAR_OTHER_PROPERTY_START",
    "UCHAR_PATTERN_SYNTAX",
    "UCHAR_PATTERN_WHITE_SPACE",
    "UCHAR_POSIX_ALNUM",
    "UCHAR_POSIX_BLANK",
    "UCHAR_POSIX_GRAPH",
    "UCHAR_POSIX_PRINT",
    "UCHAR_POSIX_XDIGIT",
    "UCHAR_PREPENDED_CONCATENATION_MARK",
    "UCHAR_QUOTATION_MARK",
    "UCHAR_RADICAL",
    "UCHAR_REGIONAL_INDICATOR",
    "UCHAR_SCRIPT",
    "UCHAR_SCRIPT_EXTENSIONS",
    "UCHAR_SEGMENT_STARTER",
    "UCHAR_SENTENCE_BREAK",
    "UCHAR_SIMPLE_CASE_FOLDING",
    "UCHAR_SIMPLE_LOWERCASE_MAPPING",
    "UCHAR_SIMPLE_TITLECASE_MAPPING",
    "UCHAR_SIMPLE_UPPERCASE_MAPPING",
    "UCHAR_SOFT_DOTTED",
    "UCHAR_STRING_START",
    "UCHAR_S_TERM",
    "UCHAR_TERMINAL_PUNCTUATION",
    "UCHAR_TITLECASE_MAPPING",
    "UCHAR_TRAIL_CANONICAL_COMBINING_CLASS",
    "UCHAR_UNIFIED_IDEOGRAPH",
    "UCHAR_UPPERCASE",
    "UCHAR_UPPERCASE_MAPPING",
    "UCHAR_VARIATION_SELECTOR",
    "UCHAR_VERTICAL_ORIENTATION",
    "UCHAR_WHITE_SPACE",
    "UCHAR_WORD_BREAK",
    "UCHAR_XID_CONTINUE",
    "UCHAR_XID_START",
    "UCLN_NO_AUTO_CLEANUP",
    "UCNV_BOCU1",
    "UCNV_CESU8",
    "UCNV_CLONE",
    "UCNV_CLOSE",
    "UCNV_COMPOUND_TEXT",
    "UCNV_DBCS",
    "UCNV_EBCDIC_STATEFUL",
    "UCNV_ESCAPE_C",
    "UCNV_ESCAPE_CSS2",
    "UCNV_ESCAPE_JAVA",
    "UCNV_ESCAPE_UNICODE",
    "UCNV_ESCAPE_XML_DEC",
    "UCNV_ESCAPE_XML_HEX",
    "UCNV_FROM_U_CALLBACK_ESCAPE",
    "UCNV_FROM_U_CALLBACK_SKIP",
    "UCNV_FROM_U_CALLBACK_STOP",
    "UCNV_FROM_U_CALLBACK_SUBSTITUTE",
    "UCNV_HZ",
    "UCNV_IBM",
    "UCNV_ILLEGAL",
    "UCNV_IMAP_MAILBOX",
    "UCNV_IRREGULAR",
    "UCNV_ISCII",
    "UCNV_ISO_2022",
    "UCNV_LATIN_1",
    "UCNV_LMBCS_1",
    "UCNV_LMBCS_11",
    "UCNV_LMBCS_16",
    "UCNV_LMBCS_17",
    "UCNV_LMBCS_18",
    "UCNV_LMBCS_19",
    "UCNV_LMBCS_2",
    "UCNV_LMBCS_3",
    "UCNV_LMBCS_4",
    "UCNV_LMBCS_5",
    "UCNV_LMBCS_6",
    "UCNV_LMBCS_8",
    "UCNV_LMBCS_LAST",
    "UCNV_LOCALE_OPTION_STRING",
    "UCNV_MAX_CONVERTER_NAME_LENGTH",
    "UCNV_MBCS",
    "UCNV_NUMBER_OF_SUPPORTED_CONVERTER_TYPES",
    "UCNV_OPTION_SEP_STRING",
    "UCNV_RESET",
    "UCNV_ROUNDTRIP_AND_FALLBACK_SET",
    "UCNV_ROUNDTRIP_SET",
    "UCNV_SBCS",
    "UCNV_SCSU",
    "UCNV_SI",
    "UCNV_SKIP_STOP_ON_ILLEGAL",
    "UCNV_SO",
    "UCNV_SUB_STOP_ON_ILLEGAL",
    "UCNV_SWAP_LFNL_OPTION_STRING",
    "UCNV_TO_U_CALLBACK_ESCAPE",
    "UCNV_TO_U_CALLBACK_SKIP",
    "UCNV_TO_U_CALLBACK_STOP",
    "UCNV_TO_U_CALLBACK_SUBSTITUTE",
    "UCNV_UNASSIGNED",
    "UCNV_UNKNOWN",
    "UCNV_UNSUPPORTED_CONVERTER",
    "UCNV_US_ASCII",
    "UCNV_UTF16",
    "UCNV_UTF16_BigEndian",
    "UCNV_UTF16_LittleEndian",
    "UCNV_UTF32",
    "UCNV_UTF32_BigEndian",
    "UCNV_UTF32_LittleEndian",
    "UCNV_UTF7",
    "UCNV_UTF8",
    "UCNV_VALUE_SEP_STRING",
    "UCNV_VERSION_OPTION_STRING",
    "UCOL_ALTERNATE_HANDLING",
    "UCOL_ATTRIBUTE_COUNT",
    "UCOL_BOUND_LOWER",
    "UCOL_BOUND_UPPER",
    "UCOL_BOUND_UPPER_LONG",
    "UCOL_CASE_FIRST",
    "UCOL_CASE_LEVEL",
    "UCOL_CE_STRENGTH_LIMIT",
    "UCOL_DECOMPOSITION_MODE",
    "UCOL_DEFAULT",
    "UCOL_DEFAULT_STRENGTH",
    "UCOL_EQUAL",
    "UCOL_FRENCH_COLLATION",
    "UCOL_FULL_RULES",
    "UCOL_GREATER",
    "UCOL_IDENTICAL",
    "UCOL_LESS",
    "UCOL_LOWER_FIRST",
    "UCOL_NON_IGNORABLE",
    "UCOL_NORMALIZATION_MODE",
    "UCOL_NUMERIC_COLLATION",
    "UCOL_OFF",
    "UCOL_ON",
    "UCOL_PRIMARY",
    "UCOL_QUATERNARY",
    "UCOL_REORDER_CODE_CURRENCY",
    "UCOL_REORDER_CODE_DEFAULT",
    "UCOL_REORDER_CODE_DIGIT",
    "UCOL_REORDER_CODE_FIRST",
    "UCOL_REORDER_CODE_NONE",
    "UCOL_REORDER_CODE_OTHERS",
    "UCOL_REORDER_CODE_PUNCTUATION",
    "UCOL_REORDER_CODE_SPACE",
    "UCOL_REORDER_CODE_SYMBOL",
    "UCOL_SECONDARY",
    "UCOL_SHIFTED",
    "UCOL_STRENGTH",
    "UCOL_STRENGTH_LIMIT",
    "UCOL_TAILORING_ONLY",
    "UCOL_TERTIARY",
    "UCOL_UPPER_FIRST",
    "UCONFIG_ENABLE_PLUGINS",
    "UCONFIG_FORMAT_FASTPATHS_49",
    "UCONFIG_HAVE_PARSEALLINPUT",
    "UCONFIG_NO_BREAK_ITERATION",
    "UCONFIG_NO_COLLATION",
    "UCONFIG_NO_CONVERSION",
    "UCONFIG_NO_FILE_IO",
    "UCONFIG_NO_FILTERED_BREAK_ITERATION",
    "UCONFIG_NO_FORMATTING",
    "UCONFIG_NO_IDNA",
    "UCONFIG_NO_LEGACY_CONVERSION",
    "UCONFIG_NO_NORMALIZATION",
    "UCONFIG_NO_REGULAR_EXPRESSIONS",
    "UCONFIG_NO_SERVICE",
    "UCONFIG_NO_TRANSLITERATION",
    "UCONFIG_ONLY_COLLATION",
    "UCONFIG_ONLY_HTML_CONVERSION",
    "UCPMAP_RANGE_FIXED_ALL_SURROGATES",
    "UCPMAP_RANGE_FIXED_LEAD_SURROGATES",
    "UCPMAP_RANGE_NORMAL",
    "UCPMap",
    "UCPMapRangeOption",
    "UCPMapValueFilter",
    "UCPTRIE_ERROR_VALUE_NEG_DATA_OFFSET",
    "UCPTRIE_FAST_DATA_BLOCK_LENGTH",
    "UCPTRIE_FAST_DATA_MASK",
    "UCPTRIE_FAST_SHIFT",
    "UCPTRIE_HIGH_VALUE_NEG_DATA_OFFSET",
    "UCPTRIE_SMALL_MAX",
    "UCPTRIE_TYPE_ANY",
    "UCPTRIE_TYPE_FAST",
    "UCPTRIE_TYPE_SMALL",
    "UCPTRIE_VALUE_BITS_16",
    "UCPTRIE_VALUE_BITS_32",
    "UCPTRIE_VALUE_BITS_8",
    "UCPTRIE_VALUE_BITS_ANY",
    "UCPTrie",
    "UCPTrieData",
    "UCPTrieType",
    "UCPTrieValueWidth",
    "UCURR_ALL",
    "UCURR_COMMON",
    "UCURR_DEPRECATED",
    "UCURR_LONG_NAME",
    "UCURR_NARROW_SYMBOL_NAME",
    "UCURR_NON_DEPRECATED",
    "UCURR_SYMBOL_NAME",
    "UCURR_UNCOMMON",
    "UCURR_USAGE_CASH",
    "UCURR_USAGE_STANDARD",
    "UCalendarAMPMs",
    "UCalendarAttribute",
    "UCalendarDateFields",
    "UCalendarDaysOfWeek",
    "UCalendarDisplayNameType",
    "UCalendarLimitType",
    "UCalendarMonths",
    "UCalendarType",
    "UCalendarWallTimeOption",
    "UCalendarWeekdayType",
    "UCaseMap",
    "UCharCategory",
    "UCharDirection",
    "UCharEnumTypeRange",
    "UCharIterator",
    "UCharIteratorCurrent",
    "UCharIteratorGetIndex",
    "UCharIteratorGetState",
    "UCharIteratorHasNext",
    "UCharIteratorHasPrevious",
    "UCharIteratorMove",
    "UCharIteratorNext",
    "UCharIteratorOrigin",
    "UCharIteratorPrevious",
    "UCharIteratorReserved",
    "UCharIteratorSetState",
    "UCharNameChoice",
    "UCharsetDetector",
    "UCharsetMatch",
    "UColAttribute",
    "UColAttributeValue",
    "UColBoundMode",
    "UColReorderCode",
    "UColRuleOption",
    "UCollationElements",
    "UCollationResult",
    "UCollator",
    "UConstrainedFieldPosition",
    "UConverter",
    "UConverterCallbackReason",
    "UConverterFromUCallback",
    "UConverterFromUnicodeArgs",
    "UConverterPlatform",
    "UConverterSelector",
    "UConverterToUCallback",
    "UConverterToUnicodeArgs",
    "UConverterType",
    "UConverterUnicodeSet",
    "UCurrCurrencyType",
    "UCurrNameStyle",
    "UCurrencySpacing",
    "UCurrencyUsage",
    "UDATPG_ABBREVIATED",
    "UDATPG_BASE_CONFLICT",
    "UDATPG_CONFLICT",
    "UDATPG_DAYPERIOD_FIELD",
    "UDATPG_DAY_FIELD",
    "UDATPG_DAY_OF_WEEK_IN_MONTH_FIELD",
    "UDATPG_DAY_OF_YEAR_FIELD",
    "UDATPG_ERA_FIELD",
    "UDATPG_FIELD_COUNT",
    "UDATPG_FRACTIONAL_SECOND_FIELD",
    "UDATPG_HOUR_FIELD",
    "UDATPG_MATCH_ALL_FIELDS_LENGTH",
    "UDATPG_MATCH_HOUR_FIELD_LENGTH",
    "UDATPG_MATCH_NO_OPTIONS",
    "UDATPG_MINUTE_FIELD",
    "UDATPG_MONTH_FIELD",
    "UDATPG_NARROW",
    "UDATPG_NO_CONFLICT",
    "UDATPG_QUARTER_FIELD",
    "UDATPG_SECOND_FIELD",
    "UDATPG_WEEKDAY_FIELD",
    "UDATPG_WEEK_OF_MONTH_FIELD",
    "UDATPG_WEEK_OF_YEAR_FIELD",
    "UDATPG_WIDE",
    "UDATPG_YEAR_FIELD",
    "UDATPG_ZONE_FIELD",
    "UDAT_ABBR_GENERIC_TZ",
    "UDAT_ABBR_MONTH",
    "UDAT_ABBR_MONTH_DAY",
    "UDAT_ABBR_MONTH_WEEKDAY_DAY",
    "UDAT_ABBR_QUARTER",
    "UDAT_ABBR_SPECIFIC_TZ",
    "UDAT_ABBR_UTC_TZ",
    "UDAT_ABBR_WEEKDAY",
    "UDAT_ABSOLUTE_DAY",
    "UDAT_ABSOLUTE_FRIDAY",
    "UDAT_ABSOLUTE_MONDAY",
    "UDAT_ABSOLUTE_MONTH",
    "UDAT_ABSOLUTE_NOW",
    "UDAT_ABSOLUTE_SATURDAY",
    "UDAT_ABSOLUTE_SUNDAY",
    "UDAT_ABSOLUTE_THURSDAY",
    "UDAT_ABSOLUTE_TUESDAY",
    "UDAT_ABSOLUTE_UNIT_COUNT",
    "UDAT_ABSOLUTE_WEDNESDAY",
    "UDAT_ABSOLUTE_WEEK",
    "UDAT_ABSOLUTE_YEAR",
    "UDAT_AM_PMS",
    "UDAT_AM_PM_FIELD",
    "UDAT_AM_PM_MIDNIGHT_NOON_FIELD",
    "UDAT_BOOLEAN_ATTRIBUTE_COUNT",
    "UDAT_CYCLIC_YEARS_ABBREVIATED",
    "UDAT_CYCLIC_YEARS_NARROW",
    "UDAT_CYCLIC_YEARS_WIDE",
    "UDAT_DATE_FIELD",
    "UDAT_DAY",
    "UDAT_DAY_OF_WEEK_FIELD",
    "UDAT_DAY_OF_WEEK_IN_MONTH_FIELD",
    "UDAT_DAY_OF_YEAR_FIELD",
    "UDAT_DEFAULT",
    "UDAT_DIRECTION_COUNT",
    "UDAT_DIRECTION_LAST",
    "UDAT_DIRECTION_LAST_2",
    "UDAT_DIRECTION_NEXT",
    "UDAT_DIRECTION_NEXT_2",
    "UDAT_DIRECTION_PLAIN",
    "UDAT_DIRECTION_THIS",
    "UDAT_DOW_LOCAL_FIELD",
    "UDAT_ERAS",
    "UDAT_ERA_FIELD",
    "UDAT_ERA_NAMES",
    "UDAT_EXTENDED_YEAR_FIELD",
    "UDAT_FLEXIBLE_DAY_PERIOD_FIELD",
    "UDAT_FRACTIONAL_SECOND_FIELD",
    "UDAT_FULL",
    "UDAT_FULL_RELATIVE",
    "UDAT_GENERIC_TZ",
    "UDAT_HOUR",
    "UDAT_HOUR0_FIELD",
    "UDAT_HOUR1_FIELD",
    "UDAT_HOUR24",
    "UDAT_HOUR24_MINUTE",
    "UDAT_HOUR24_MINUTE_SECOND",
    "UDAT_HOUR_MINUTE",
    "UDAT_HOUR_MINUTE_SECOND",
    "UDAT_HOUR_OF_DAY0_FIELD",
    "UDAT_HOUR_OF_DAY1_FIELD",
    "UDAT_JULIAN_DAY_FIELD",
    "UDAT_LOCALIZED_CHARS",
    "UDAT_LOCATION_TZ",
    "UDAT_LONG",
    "UDAT_LONG_RELATIVE",
    "UDAT_MEDIUM",
    "UDAT_MEDIUM_RELATIVE",
    "UDAT_MILLISECONDS_IN_DAY_FIELD",
    "UDAT_MINUTE",
    "UDAT_MINUTE_FIELD",
    "UDAT_MINUTE_SECOND",
    "UDAT_MONTH",
    "UDAT_MONTHS",
    "UDAT_MONTH_DAY",
    "UDAT_MONTH_FIELD",
    "UDAT_MONTH_WEEKDAY_DAY",
    "UDAT_NARROW_MONTHS",
    "UDAT_NARROW_WEEKDAYS",
    "UDAT_NONE",
    "UDAT_NUM_MONTH",
    "UDAT_NUM_MONTH_DAY",
    "UDAT_NUM_MONTH_WEEKDAY_DAY",
    "UDAT_PARSE_ALLOW_NUMERIC",
    "UDAT_PARSE_ALLOW_WHITESPACE",
    "UDAT_PARSE_MULTIPLE_PATTERNS_FOR_MATCH",
    "UDAT_PARSE_PARTIAL_LITERAL_MATCH",
    "UDAT_PATTERN",
    "UDAT_QUARTER",
    "UDAT_QUARTERS",
    "UDAT_QUARTER_FIELD",
    "UDAT_RELATIVE",
    "UDAT_RELATIVE_DAYS",
    "UDAT_RELATIVE_HOURS",
    "UDAT_RELATIVE_MINUTES",
    "UDAT_RELATIVE_MONTHS",
    "UDAT_RELATIVE_SECONDS",
    "UDAT_RELATIVE_UNIT_COUNT",
    "UDAT_RELATIVE_WEEKS",
    "UDAT_RELATIVE_YEARS",
    "UDAT_REL_LITERAL_FIELD",
    "UDAT_REL_NUMERIC_FIELD",
    "UDAT_REL_UNIT_DAY",
    "UDAT_REL_UNIT_FRIDAY",
    "UDAT_REL_UNIT_HOUR",
    "UDAT_REL_UNIT_MINUTE",
    "UDAT_REL_UNIT_MONDAY",
    "UDAT_REL_UNIT_MONTH",
    "UDAT_REL_UNIT_QUARTER",
    "UDAT_REL_UNIT_SATURDAY",
    "UDAT_REL_UNIT_SECOND",
    "UDAT_REL_UNIT_SUNDAY",
    "UDAT_REL_UNIT_THURSDAY",
    "UDAT_REL_UNIT_TUESDAY",
    "UDAT_REL_UNIT_WEDNESDAY",
    "UDAT_REL_UNIT_WEEK",
    "UDAT_REL_UNIT_YEAR",
    "UDAT_SECOND",
    "UDAT_SECOND_FIELD",
    "UDAT_SHORT",
    "UDAT_SHORTER_WEEKDAYS",
    "UDAT_SHORT_MONTHS",
    "UDAT_SHORT_QUARTERS",
    "UDAT_SHORT_RELATIVE",
    "UDAT_SHORT_WEEKDAYS",
    "UDAT_SPECIFIC_TZ",
    "UDAT_STANDALONE_DAY_FIELD",
    "UDAT_STANDALONE_MONTHS",
    "UDAT_STANDALONE_MONTH_FIELD",
    "UDAT_STANDALONE_NARROW_MONTHS",
    "UDAT_STANDALONE_NARROW_WEEKDAYS",
    "UDAT_STANDALONE_QUARTERS",
    "UDAT_STANDALONE_QUARTER_FIELD",
    "UDAT_STANDALONE_SHORTER_WEEKDAYS",
    "UDAT_STANDALONE_SHORT_MONTHS",
    "UDAT_STANDALONE_SHORT_QUARTERS",
    "UDAT_STANDALONE_SHORT_WEEKDAYS",
    "UDAT_STANDALONE_WEEKDAYS",
    "UDAT_STYLE_LONG",
    "UDAT_STYLE_NARROW",
    "UDAT_STYLE_SHORT",
    "UDAT_TIMEZONE_FIELD",
    "UDAT_TIMEZONE_GENERIC_FIELD",
    "UDAT_TIMEZONE_ISO_FIELD",
    "UDAT_TIMEZONE_ISO_LOCAL_FIELD",
    "UDAT_TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD",
    "UDAT_TIMEZONE_RFC_FIELD",
    "UDAT_TIMEZONE_SPECIAL_FIELD",
    "UDAT_WEEKDAY",
    "UDAT_WEEKDAYS",
    "UDAT_WEEK_OF_MONTH_FIELD",
    "UDAT_WEEK_OF_YEAR_FIELD",
    "UDAT_YEAR",
    "UDAT_YEAR_ABBR_MONTH",
    "UDAT_YEAR_ABBR_MONTH_DAY",
    "UDAT_YEAR_ABBR_MONTH_WEEKDAY_DAY",
    "UDAT_YEAR_ABBR_QUARTER",
    "UDAT_YEAR_FIELD",
    "UDAT_YEAR_MONTH",
    "UDAT_YEAR_MONTH_DAY",
    "UDAT_YEAR_MONTH_WEEKDAY_DAY",
    "UDAT_YEAR_NAME_FIELD",
    "UDAT_YEAR_NUM_MONTH",
    "UDAT_YEAR_NUM_MONTH_DAY",
    "UDAT_YEAR_NUM_MONTH_WEEKDAY_DAY",
    "UDAT_YEAR_QUARTER",
    "UDAT_YEAR_WOY_FIELD",
    "UDAT_ZODIAC_NAMES_ABBREVIATED",
    "UDAT_ZODIAC_NAMES_NARROW",
    "UDAT_ZODIAC_NAMES_WIDE",
    "UDISPCTX_CAPITALIZATION_FOR_BEGINNING_OF_SENTENCE",
    "UDISPCTX_CAPITALIZATION_FOR_MIDDLE_OF_SENTENCE",
    "UDISPCTX_CAPITALIZATION_FOR_STANDALONE",
    "UDISPCTX_CAPITALIZATION_FOR_UI_LIST_OR_MENU",
    "UDISPCTX_CAPITALIZATION_NONE",
    "UDISPCTX_DIALECT_NAMES",
    "UDISPCTX_LENGTH_FULL",
    "UDISPCTX_LENGTH_SHORT",
    "UDISPCTX_NO_SUBSTITUTE",
    "UDISPCTX_STANDARD_NAMES",
    "UDISPCTX_SUBSTITUTE",
    "UDISPCTX_TYPE_CAPITALIZATION",
    "UDISPCTX_TYPE_DIALECT_HANDLING",
    "UDISPCTX_TYPE_DISPLAY_LENGTH",
    "UDISPCTX_TYPE_SUBSTITUTE_HANDLING",
    "UDTS_DB2_TIME",
    "UDTS_DOTNET_DATE_TIME",
    "UDTS_EXCEL_TIME",
    "UDTS_ICU4C_TIME",
    "UDTS_JAVA_TIME",
    "UDTS_MAC_OLD_TIME",
    "UDTS_MAC_TIME",
    "UDTS_UNIX_MICROSECONDS_TIME",
    "UDTS_UNIX_TIME",
    "UDTS_WINDOWS_FILE_TIME",
    "UDateAbsoluteUnit",
    "UDateDirection",
    "UDateFormatBooleanAttribute",
    "UDateFormatField",
    "UDateFormatStyle",
    "UDateFormatSymbolType",
    "UDateFormatSymbols",
    "UDateIntervalFormat",
    "UDateRelativeDateTimeFormatterStyle",
    "UDateRelativeUnit",
    "UDateTimePGDisplayWidth",
    "UDateTimePatternConflict",
    "UDateTimePatternField",
    "UDateTimePatternMatchOptions",
    "UDateTimeScale",
    "UDecompositionType",
    "UDialectHandling",
    "UDisplayContext",
    "UDisplayContextType",
    "UEastAsianWidth",
    "UEnumCharNamesFn",
    "UEnumeration",
    "UErrorCode",
    "UFIELD_CATEGORY_DATE",
    "UFIELD_CATEGORY_DATE_INTERVAL",
    "UFIELD_CATEGORY_DATE_INTERVAL_SPAN",
    "UFIELD_CATEGORY_LIST",
    "UFIELD_CATEGORY_LIST_SPAN",
    "UFIELD_CATEGORY_NUMBER",
    "UFIELD_CATEGORY_RELATIVE_DATETIME",
    "UFIELD_CATEGORY_UNDEFINED",
    "UFMT_ARRAY",
    "UFMT_DATE",
    "UFMT_DOUBLE",
    "UFMT_INT64",
    "UFMT_LONG",
    "UFMT_OBJECT",
    "UFMT_STRING",
    "UFieldCategory",
    "UFieldPosition",
    "UFieldPositionIterator",
    "UFormattableType",
    "UFormattedDateInterval",
    "UFormattedList",
    "UFormattedNumber",
    "UFormattedNumberRange",
    "UFormattedRelativeDateTime",
    "UFormattedValue",
    "UGENDER_FEMALE",
    "UGENDER_MALE",
    "UGENDER_OTHER",
    "UGender",
    "UGenderInfo",
    "UGraphemeClusterBreak",
    "UHangulSyllableType",
    "UHashtable",
    "UIDNA",
    "UIDNAInfo",
    "UIDNA_CHECK_BIDI",
    "UIDNA_CHECK_CONTEXTJ",
    "UIDNA_CHECK_CONTEXTO",
    "UIDNA_DEFAULT",
    "UIDNA_ERROR_BIDI",
    "UIDNA_ERROR_CONTEXTJ",
    "UIDNA_ERROR_CONTEXTO_DIGITS",
    "UIDNA_ERROR_CONTEXTO_PUNCTUATION",
    "UIDNA_ERROR_DISALLOWED",
    "UIDNA_ERROR_DOMAIN_NAME_TOO_LONG",
    "UIDNA_ERROR_EMPTY_LABEL",
    "UIDNA_ERROR_HYPHEN_3_4",
    "UIDNA_ERROR_INVALID_ACE_LABEL",
    "UIDNA_ERROR_LABEL_HAS_DOT",
    "UIDNA_ERROR_LABEL_TOO_LONG",
    "UIDNA_ERROR_LEADING_COMBINING_MARK",
    "UIDNA_ERROR_LEADING_HYPHEN",
    "UIDNA_ERROR_PUNYCODE",
    "UIDNA_ERROR_TRAILING_HYPHEN",
    "UIDNA_NONTRANSITIONAL_TO_ASCII",
    "UIDNA_NONTRANSITIONAL_TO_UNICODE",
    "UIDNA_USE_STD3_RULES",
    "UILANGUAGE_ENUMPROCA",
    "UILANGUAGE_ENUMPROCW",
    "UITER_CURRENT",
    "UITER_LENGTH",
    "UITER_LIMIT",
    "UITER_START",
    "UITER_UNKNOWN_INDEX",
    "UITER_ZERO",
    "UIndicPositionalCategory",
    "UIndicSyllabicCategory",
    "UJoiningGroup",
    "UJoiningType",
    "ULDN_DIALECT_NAMES",
    "ULDN_STANDARD_NAMES",
    "ULISTFMT_ELEMENT_FIELD",
    "ULISTFMT_LITERAL_FIELD",
    "ULISTFMT_TYPE_AND",
    "ULISTFMT_TYPE_OR",
    "ULISTFMT_TYPE_UNITS",
    "ULISTFMT_WIDTH_NARROW",
    "ULISTFMT_WIDTH_SHORT",
    "ULISTFMT_WIDTH_WIDE",
    "ULOCDATA_ALT_QUOTATION_END",
    "ULOCDATA_ALT_QUOTATION_START",
    "ULOCDATA_ES_AUXILIARY",
    "ULOCDATA_ES_INDEX",
    "ULOCDATA_ES_PUNCTUATION",
    "ULOCDATA_ES_STANDARD",
    "ULOCDATA_QUOTATION_END",
    "ULOCDATA_QUOTATION_START",
    "ULOC_ACCEPT_FAILED",
    "ULOC_ACCEPT_FALLBACK",
    "ULOC_ACCEPT_VALID",
    "ULOC_ACTUAL_LOCALE",
    "ULOC_AVAILABLE_DEFAULT",
    "ULOC_AVAILABLE_ONLY_LEGACY_ALIASES",
    "ULOC_AVAILABLE_WITH_LEGACY_ALIASES",
    "ULOC_CANADA",
    "ULOC_CANADA_FRENCH",
    "ULOC_CHINA",
    "ULOC_CHINESE",
    "ULOC_COUNTRY_CAPACITY",
    "ULOC_ENGLISH",
    "ULOC_FRANCE",
    "ULOC_FRENCH",
    "ULOC_FULLNAME_CAPACITY",
    "ULOC_GERMAN",
    "ULOC_GERMANY",
    "ULOC_ITALIAN",
    "ULOC_ITALY",
    "ULOC_JAPAN",
    "ULOC_JAPANESE",
    "ULOC_KEYWORDS_CAPACITY",
    "ULOC_KEYWORD_AND_VALUES_CAPACITY",
    "ULOC_KEYWORD_ASSIGN_UNICODE",
    "ULOC_KEYWORD_ITEM_SEPARATOR_UNICODE",
    "ULOC_KEYWORD_SEPARATOR_UNICODE",
    "ULOC_KOREA",
    "ULOC_KOREAN",
    "ULOC_LANG_CAPACITY",
    "ULOC_LAYOUT_BTT",
    "ULOC_LAYOUT_LTR",
    "ULOC_LAYOUT_RTL",
    "ULOC_LAYOUT_TTB",
    "ULOC_LAYOUT_UNKNOWN",
    "ULOC_PRC",
    "ULOC_SCRIPT_CAPACITY",
    "ULOC_SIMPLIFIED_CHINESE",
    "ULOC_TAIWAN",
    "ULOC_TRADITIONAL_CHINESE",
    "ULOC_UK",
    "ULOC_US",
    "ULOC_VALID_LOCALE",
    "ULayoutType",
    "ULineBreak",
    "ULineBreakTag",
    "UListFormatter",
    "UListFormatterField",
    "UListFormatterType",
    "UListFormatterWidth",
    "ULocAvailableType",
    "ULocDataLocaleType",
    "ULocaleData",
    "ULocaleDataDelimiterType",
    "ULocaleDataExemplarSetType",
    "ULocaleDisplayNames",
    "UMEASFMT_WIDTH_COUNT",
    "UMEASFMT_WIDTH_NARROW",
    "UMEASFMT_WIDTH_NUMERIC",
    "UMEASFMT_WIDTH_SHORT",
    "UMEASFMT_WIDTH_WIDE",
    "UMSGPAT_APOS_DOUBLE_OPTIONAL",
    "UMSGPAT_APOS_DOUBLE_REQUIRED",
    "UMSGPAT_ARG_NAME_NOT_NUMBER",
    "UMSGPAT_ARG_NAME_NOT_VALID",
    "UMSGPAT_ARG_TYPE_CHOICE",
    "UMSGPAT_ARG_TYPE_NONE",
    "UMSGPAT_ARG_TYPE_PLURAL",
    "UMSGPAT_ARG_TYPE_SELECT",
    "UMSGPAT_ARG_TYPE_SELECTORDINAL",
    "UMSGPAT_ARG_TYPE_SIMPLE",
    "UMSGPAT_PART_TYPE_ARG_DOUBLE",
    "UMSGPAT_PART_TYPE_ARG_INT",
    "UMSGPAT_PART_TYPE_ARG_LIMIT",
    "UMSGPAT_PART_TYPE_ARG_NAME",
    "UMSGPAT_PART_TYPE_ARG_NUMBER",
    "UMSGPAT_PART_TYPE_ARG_SELECTOR",
    "UMSGPAT_PART_TYPE_ARG_START",
    "UMSGPAT_PART_TYPE_ARG_STYLE",
    "UMSGPAT_PART_TYPE_ARG_TYPE",
    "UMSGPAT_PART_TYPE_INSERT_CHAR",
    "UMSGPAT_PART_TYPE_MSG_LIMIT",
    "UMSGPAT_PART_TYPE_MSG_START",
    "UMSGPAT_PART_TYPE_REPLACE_NUMBER",
    "UMSGPAT_PART_TYPE_SKIP_SYNTAX",
    "UMS_SI",
    "UMS_UK",
    "UMS_US",
    "UMeasureFormatWidth",
    "UMeasurementSystem",
    "UMemAllocFn",
    "UMemFreeFn",
    "UMemReallocFn",
    "UMessagePatternApostropheMode",
    "UMessagePatternArgType",
    "UMessagePatternPartType",
    "UMutableCPTrie",
    "UNESCAPE_CHAR_AT",
    "UNICODERANGE",
    "UNISCRIBE_OPENTYPE",
    "UNORM2_COMPOSE",
    "UNORM2_COMPOSE_CONTIGUOUS",
    "UNORM2_DECOMPOSE",
    "UNORM2_FCD",
    "UNORM_DEFAULT",
    "UNORM_FCD",
    "UNORM_INPUT_IS_FCD",
    "UNORM_MAYBE",
    "UNORM_MODE_COUNT",
    "UNORM_NFC",
    "UNORM_NFD",
    "UNORM_NFKC",
    "UNORM_NFKD",
    "UNORM_NO",
    "UNORM_NONE",
    "UNORM_YES",
    "UNUM_CASH_CURRENCY",
    "UNUM_COMPACT_FIELD",
    "UNUM_CURRENCY",
    "UNUM_CURRENCY_ACCOUNTING",
    "UNUM_CURRENCY_CODE",
    "UNUM_CURRENCY_FIELD",
    "UNUM_CURRENCY_INSERT",
    "UNUM_CURRENCY_ISO",
    "UNUM_CURRENCY_MATCH",
    "UNUM_CURRENCY_PLURAL",
    "UNUM_CURRENCY_SPACING_COUNT",
    "UNUM_CURRENCY_STANDARD",
    "UNUM_CURRENCY_SURROUNDING_MATCH",
    "UNUM_CURRENCY_SYMBOL",
    "UNUM_CURRENCY_USAGE",
    "UNUM_DECIMAL",
    "UNUM_DECIMAL_ALWAYS_SHOWN",
    "UNUM_DECIMAL_COMPACT_LONG",
    "UNUM_DECIMAL_COMPACT_SHORT",
    "UNUM_DECIMAL_SEPARATOR_ALWAYS",
    "UNUM_DECIMAL_SEPARATOR_AUTO",
    "UNUM_DECIMAL_SEPARATOR_COUNT",
    "UNUM_DECIMAL_SEPARATOR_FIELD",
    "UNUM_DECIMAL_SEPARATOR_SYMBOL",
    "UNUM_DEFAULT",
    "UNUM_DEFAULT_RULESET",
    "UNUM_DIGIT_SYMBOL",
    "UNUM_DURATION",
    "UNUM_EIGHT_DIGIT_SYMBOL",
    "UNUM_EXPONENTIAL_SYMBOL",
    "UNUM_EXPONENT_FIELD",
    "UNUM_EXPONENT_MULTIPLICATION_SYMBOL",
    "UNUM_EXPONENT_SIGN_FIELD",
    "UNUM_EXPONENT_SYMBOL_FIELD",
    "UNUM_FIVE_DIGIT_SYMBOL",
    "UNUM_FORMAT_ATTRIBUTE_VALUE_HIDDEN",
    "UNUM_FORMAT_FAIL_IF_MORE_THAN_MAX_DIGITS",
    "UNUM_FORMAT_WIDTH",
    "UNUM_FOUR_DIGIT_SYMBOL",
    "UNUM_FRACTION_DIGITS",
    "UNUM_FRACTION_FIELD",
    "UNUM_GROUPING_AUTO",
    "UNUM_GROUPING_MIN2",
    "UNUM_GROUPING_OFF",
    "UNUM_GROUPING_ON_ALIGNED",
    "UNUM_GROUPING_SEPARATOR_FIELD",
    "UNUM_GROUPING_SEPARATOR_SYMBOL",
    "UNUM_GROUPING_SIZE",
    "UNUM_GROUPING_THOUSANDS",
    "UNUM_GROUPING_USED",
    "UNUM_IDENTITY_FALLBACK_APPROXIMATELY",
    "UNUM_IDENTITY_FALLBACK_APPROXIMATELY_OR_SINGLE_VALUE",
    "UNUM_IDENTITY_FALLBACK_RANGE",
    "UNUM_IDENTITY_FALLBACK_SINGLE_VALUE",
    "UNUM_IDENTITY_RESULT_EQUAL_AFTER_ROUNDING",
    "UNUM_IDENTITY_RESULT_EQUAL_BEFORE_ROUNDING",
    "UNUM_IDENTITY_RESULT_NOT_EQUAL",
    "UNUM_IGNORE",
    "UNUM_INFINITY_SYMBOL",
    "UNUM_INTEGER_DIGITS",
    "UNUM_INTEGER_FIELD",
    "UNUM_INTL_CURRENCY_SYMBOL",
    "UNUM_LENIENT_PARSE",
    "UNUM_LONG",
    "UNUM_MAX_FRACTION_DIGITS",
    "UNUM_MAX_INTEGER_DIGITS",
    "UNUM_MAX_SIGNIFICANT_DIGITS",
    "UNUM_MEASURE_UNIT_FIELD",
    "UNUM_MINIMUM_GROUPING_DIGITS",
    "UNUM_MINUS_SIGN_SYMBOL",
    "UNUM_MIN_FRACTION_DIGITS",
    "UNUM_MIN_INTEGER_DIGITS",
    "UNUM_MIN_SIGNIFICANT_DIGITS",
    "UNUM_MONETARY_GROUPING_SEPARATOR_SYMBOL",
    "UNUM_MONETARY_SEPARATOR_SYMBOL",
    "UNUM_MULTIPLIER",
    "UNUM_NAN_SYMBOL",
    "UNUM_NEGATIVE_PREFIX",
    "UNUM_NEGATIVE_SUFFIX",
    "UNUM_NINE_DIGIT_SYMBOL",
    "UNUM_NUMBERING_SYSTEM",
    "UNUM_ONE_DIGIT_SYMBOL",
    "UNUM_ORDINAL",
    "UNUM_PADDING_CHARACTER",
    "UNUM_PADDING_POSITION",
    "UNUM_PAD_AFTER_PREFIX",
    "UNUM_PAD_AFTER_SUFFIX",
    "UNUM_PAD_BEFORE_PREFIX",
    "UNUM_PAD_BEFORE_SUFFIX",
    "UNUM_PAD_ESCAPE_SYMBOL",
    "UNUM_PARSE_ALL_INPUT",
    "UNUM_PARSE_CASE_SENSITIVE",
    "UNUM_PARSE_DECIMAL_MARK_REQUIRED",
    "UNUM_PARSE_INT_ONLY",
    "UNUM_PARSE_NO_EXPONENT",
    "UNUM_PATTERN_DECIMAL",
    "UNUM_PATTERN_RULEBASED",
    "UNUM_PATTERN_SEPARATOR_SYMBOL",
    "UNUM_PERCENT",
    "UNUM_PERCENT_FIELD",
    "UNUM_PERCENT_SYMBOL",
    "UNUM_PERMILL_FIELD",
    "UNUM_PERMILL_SYMBOL",
    "UNUM_PLUS_SIGN_SYMBOL",
    "UNUM_POSITIVE_PREFIX",
    "UNUM_POSITIVE_SUFFIX",
    "UNUM_PUBLIC_RULESETS",
    "UNUM_RANGE_COLLAPSE_ALL",
    "UNUM_RANGE_COLLAPSE_AUTO",
    "UNUM_RANGE_COLLAPSE_NONE",
    "UNUM_RANGE_COLLAPSE_UNIT",
    "UNUM_ROUNDING_INCREMENT",
    "UNUM_ROUNDING_MODE",
    "UNUM_ROUND_CEILING",
    "UNUM_ROUND_DOWN",
    "UNUM_ROUND_FLOOR",
    "UNUM_ROUND_HALFDOWN",
    "UNUM_ROUND_HALFEVEN",
    "UNUM_ROUND_HALFUP",
    "UNUM_ROUND_UNNECESSARY",
    "UNUM_ROUND_UP",
    "UNUM_SCALE",
    "UNUM_SCIENTIFIC",
    "UNUM_SECONDARY_GROUPING_SIZE",
    "UNUM_SEVEN_DIGIT_SYMBOL",
    "UNUM_SHORT",
    "UNUM_SIGNIFICANT_DIGITS_USED",
    "UNUM_SIGNIFICANT_DIGIT_SYMBOL",
    "UNUM_SIGN_ACCOUNTING",
    "UNUM_SIGN_ACCOUNTING_ALWAYS",
    "UNUM_SIGN_ACCOUNTING_EXCEPT_ZERO",
    "UNUM_SIGN_ALWAYS",
    "UNUM_SIGN_ALWAYS_SHOWN",
    "UNUM_SIGN_AUTO",
    "UNUM_SIGN_COUNT",
    "UNUM_SIGN_EXCEPT_ZERO",
    "UNUM_SIGN_FIELD",
    "UNUM_SIGN_NEVER",
    "UNUM_SIX_DIGIT_SYMBOL",
    "UNUM_SPELLOUT",
    "UNUM_THREE_DIGIT_SYMBOL",
    "UNUM_TWO_DIGIT_SYMBOL",
    "UNUM_UNIT_WIDTH_COUNT",
    "UNUM_UNIT_WIDTH_FULL_NAME",
    "UNUM_UNIT_WIDTH_HIDDEN",
    "UNUM_UNIT_WIDTH_ISO_CODE",
    "UNUM_UNIT_WIDTH_NARROW",
    "UNUM_UNIT_WIDTH_SHORT",
    "UNUM_ZERO_DIGIT_SYMBOL",
    "UNormalization2Mode",
    "UNormalizationCheckResult",
    "UNormalizationMode",
    "UNormalizer2",
    "UNumberCompactStyle",
    "UNumberDecimalSeparatorDisplay",
    "UNumberFormatAttribute",
    "UNumberFormatAttributeValue",
    "UNumberFormatFields",
    "UNumberFormatPadPosition",
    "UNumberFormatRoundingMode",
    "UNumberFormatStyle",
    "UNumberFormatSymbol",
    "UNumberFormatTextAttribute",
    "UNumberFormatter",
    "UNumberGroupingStrategy",
    "UNumberRangeCollapse",
    "UNumberRangeIdentityFallback",
    "UNumberRangeIdentityResult",
    "UNumberSignDisplay",
    "UNumberUnitWidth",
    "UNumberingSystem",
    "UNumericType",
    "UPLURAL_TYPE_CARDINAL",
    "UPLURAL_TYPE_ORDINAL",
    "UParseError",
    "UPluralRules",
    "UPluralType",
    "UProperty",
    "UPropertyNameChoice",
    "UREGEX_CASE_INSENSITIVE",
    "UREGEX_COMMENTS",
    "UREGEX_DOTALL",
    "UREGEX_ERROR_ON_UNKNOWN_ESCAPES",
    "UREGEX_LITERAL",
    "UREGEX_MULTILINE",
    "UREGEX_UNIX_LINES",
    "UREGEX_UWORD",
    "URES_ALIAS",
    "URES_ARRAY",
    "URES_BINARY",
    "URES_INT",
    "URES_INT_VECTOR",
    "URES_NONE",
    "URES_STRING",
    "URES_TABLE",
    "URGN_CONTINENT",
    "URGN_DEPRECATED",
    "URGN_GROUPING",
    "URGN_SUBCONTINENT",
    "URGN_TERRITORY",
    "URGN_UNKNOWN",
    "URGN_WORLD",
    "URegexFindProgressCallback",
    "URegexMatchCallback",
    "URegexpFlag",
    "URegion",
    "URegionType",
    "URegularExpression",
    "URelativeDateTimeFormatter",
    "URelativeDateTimeFormatterField",
    "URelativeDateTimeUnit",
    "UReplaceableCallbacks",
    "UResType",
    "UResourceBundle",
    "URestrictionLevel",
    "USCRIPT_ADLAM",
    "USCRIPT_AFAKA",
    "USCRIPT_AHOM",
    "USCRIPT_ANATOLIAN_HIEROGLYPHS",
    "USCRIPT_ARABIC",
    "USCRIPT_ARMENIAN",
    "USCRIPT_AVESTAN",
    "USCRIPT_BALINESE",
    "USCRIPT_BAMUM",
    "USCRIPT_BASSA_VAH",
    "USCRIPT_BATAK",
    "USCRIPT_BENGALI",
    "USCRIPT_BHAIKSUKI",
    "USCRIPT_BLISSYMBOLS",
    "USCRIPT_BOOK_PAHLAVI",
    "USCRIPT_BOPOMOFO",
    "USCRIPT_BRAHMI",
    "USCRIPT_BRAILLE",
    "USCRIPT_BUGINESE",
    "USCRIPT_BUHID",
    "USCRIPT_CANADIAN_ABORIGINAL",
    "USCRIPT_CARIAN",
    "USCRIPT_CAUCASIAN_ALBANIAN",
    "USCRIPT_CHAKMA",
    "USCRIPT_CHAM",
    "USCRIPT_CHEROKEE",
    "USCRIPT_CHORASMIAN",
    "USCRIPT_CIRTH",
    "USCRIPT_COMMON",
    "USCRIPT_COPTIC",
    "USCRIPT_CUNEIFORM",
    "USCRIPT_CYPRIOT",
    "USCRIPT_CYRILLIC",
    "USCRIPT_DEMOTIC_EGYPTIAN",
    "USCRIPT_DESERET",
    "USCRIPT_DEVANAGARI",
    "USCRIPT_DIVES_AKURU",
    "USCRIPT_DOGRA",
    "USCRIPT_DUPLOYAN",
    "USCRIPT_EASTERN_SYRIAC",
    "USCRIPT_EGYPTIAN_HIEROGLYPHS",
    "USCRIPT_ELBASAN",
    "USCRIPT_ELYMAIC",
    "USCRIPT_ESTRANGELO_SYRIAC",
    "USCRIPT_ETHIOPIC",
    "USCRIPT_GEORGIAN",
    "USCRIPT_GLAGOLITIC",
    "USCRIPT_GOTHIC",
    "USCRIPT_GRANTHA",
    "USCRIPT_GREEK",
    "USCRIPT_GUJARATI",
    "USCRIPT_GUNJALA_GONDI",
    "USCRIPT_GURMUKHI",
    "USCRIPT_HAN",
    "USCRIPT_HANGUL",
    "USCRIPT_HANIFI_ROHINGYA",
    "USCRIPT_HANUNOO",
    "USCRIPT_HAN_WITH_BOPOMOFO",
    "USCRIPT_HARAPPAN_INDUS",
    "USCRIPT_HATRAN",
    "USCRIPT_HEBREW",
    "USCRIPT_HIERATIC_EGYPTIAN",
    "USCRIPT_HIRAGANA",
    "USCRIPT_IMPERIAL_ARAMAIC",
    "USCRIPT_INHERITED",
    "USCRIPT_INSCRIPTIONAL_PAHLAVI",
    "USCRIPT_INSCRIPTIONAL_PARTHIAN",
    "USCRIPT_INVALID_CODE",
    "USCRIPT_JAMO",
    "USCRIPT_JAPANESE",
    "USCRIPT_JAVANESE",
    "USCRIPT_JURCHEN",
    "USCRIPT_KAITHI",
    "USCRIPT_KANNADA",
    "USCRIPT_KATAKANA",
    "USCRIPT_KATAKANA_OR_HIRAGANA",
    "USCRIPT_KAYAH_LI",
    "USCRIPT_KHAROSHTHI",
    "USCRIPT_KHITAN_SMALL_SCRIPT",
    "USCRIPT_KHMER",
    "USCRIPT_KHOJKI",
    "USCRIPT_KHUDAWADI",
    "USCRIPT_KHUTSURI",
    "USCRIPT_KOREAN",
    "USCRIPT_KPELLE",
    "USCRIPT_LANNA",
    "USCRIPT_LAO",
    "USCRIPT_LATIN",
    "USCRIPT_LATIN_FRAKTUR",
    "USCRIPT_LATIN_GAELIC",
    "USCRIPT_LEPCHA",
    "USCRIPT_LIMBU",
    "USCRIPT_LINEAR_A",
    "USCRIPT_LINEAR_B",
    "USCRIPT_LISU",
    "USCRIPT_LOMA",
    "USCRIPT_LYCIAN",
    "USCRIPT_LYDIAN",
    "USCRIPT_MAHAJANI",
    "USCRIPT_MAKASAR",
    "USCRIPT_MALAYALAM",
    "USCRIPT_MANDAEAN",
    "USCRIPT_MANDAIC",
    "USCRIPT_MANICHAEAN",
    "USCRIPT_MARCHEN",
    "USCRIPT_MASARAM_GONDI",
    "USCRIPT_MATHEMATICAL_NOTATION",
    "USCRIPT_MAYAN_HIEROGLYPHS",
    "USCRIPT_MEDEFAIDRIN",
    "USCRIPT_MEITEI_MAYEK",
    "USCRIPT_MENDE",
    "USCRIPT_MEROITIC",
    "USCRIPT_MEROITIC_CURSIVE",
    "USCRIPT_MEROITIC_HIEROGLYPHS",
    "USCRIPT_MIAO",
    "USCRIPT_MODI",
    "USCRIPT_MONGOLIAN",
    "USCRIPT_MOON",
    "USCRIPT_MRO",
    "USCRIPT_MULTANI",
    "USCRIPT_MYANMAR",
    "USCRIPT_NABATAEAN",
    "USCRIPT_NAKHI_GEBA",
    "USCRIPT_NANDINAGARI",
    "USCRIPT_NEWA",
    "USCRIPT_NEW_TAI_LUE",
    "USCRIPT_NKO",
    "USCRIPT_NUSHU",
    "USCRIPT_NYIAKENG_PUACHUE_HMONG",
    "USCRIPT_OGHAM",
    "USCRIPT_OLD_CHURCH_SLAVONIC_CYRILLIC",
    "USCRIPT_OLD_HUNGARIAN",
    "USCRIPT_OLD_ITALIC",
    "USCRIPT_OLD_NORTH_ARABIAN",
    "USCRIPT_OLD_PERMIC",
    "USCRIPT_OLD_PERSIAN",
    "USCRIPT_OLD_SOGDIAN",
    "USCRIPT_OLD_SOUTH_ARABIAN",
    "USCRIPT_OL_CHIKI",
    "USCRIPT_ORIYA",
    "USCRIPT_ORKHON",
    "USCRIPT_OSAGE",
    "USCRIPT_OSMANYA",
    "USCRIPT_PAHAWH_HMONG",
    "USCRIPT_PALMYRENE",
    "USCRIPT_PAU_CIN_HAU",
    "USCRIPT_PHAGS_PA",
    "USCRIPT_PHOENICIAN",
    "USCRIPT_PHONETIC_POLLARD",
    "USCRIPT_PSALTER_PAHLAVI",
    "USCRIPT_REJANG",
    "USCRIPT_RONGORONGO",
    "USCRIPT_RUNIC",
    "USCRIPT_SAMARITAN",
    "USCRIPT_SARATI",
    "USCRIPT_SAURASHTRA",
    "USCRIPT_SHARADA",
    "USCRIPT_SHAVIAN",
    "USCRIPT_SIDDHAM",
    "USCRIPT_SIGN_WRITING",
    "USCRIPT_SIMPLIFIED_HAN",
    "USCRIPT_SINDHI",
    "USCRIPT_SINHALA",
    "USCRIPT_SOGDIAN",
    "USCRIPT_SORA_SOMPENG",
    "USCRIPT_SOYOMBO",
    "USCRIPT_SUNDANESE",
    "USCRIPT_SYLOTI_NAGRI",
    "USCRIPT_SYMBOLS",
    "USCRIPT_SYMBOLS_EMOJI",
    "USCRIPT_SYRIAC",
    "USCRIPT_TAGALOG",
    "USCRIPT_TAGBANWA",
    "USCRIPT_TAI_LE",
    "USCRIPT_TAI_VIET",
    "USCRIPT_TAKRI",
    "USCRIPT_TAMIL",
    "USCRIPT_TANGUT",
    "USCRIPT_TELUGU",
    "USCRIPT_TENGWAR",
    "USCRIPT_THAANA",
    "USCRIPT_THAI",
    "USCRIPT_TIBETAN",
    "USCRIPT_TIFINAGH",
    "USCRIPT_TIRHUTA",
    "USCRIPT_TRADITIONAL_HAN",
    "USCRIPT_UCAS",
    "USCRIPT_UGARITIC",
    "USCRIPT_UNKNOWN",
    "USCRIPT_UNWRITTEN_LANGUAGES",
    "USCRIPT_USAGE_ASPIRATIONAL",
    "USCRIPT_USAGE_EXCLUDED",
    "USCRIPT_USAGE_LIMITED_USE",
    "USCRIPT_USAGE_NOT_ENCODED",
    "USCRIPT_USAGE_RECOMMENDED",
    "USCRIPT_USAGE_UNKNOWN",
    "USCRIPT_VAI",
    "USCRIPT_VISIBLE_SPEECH",
    "USCRIPT_WANCHO",
    "USCRIPT_WARANG_CITI",
    "USCRIPT_WESTERN_SYRIAC",
    "USCRIPT_WOLEAI",
    "USCRIPT_YEZIDI",
    "USCRIPT_YI",
    "USCRIPT_ZANABAZAR_SQUARE",
    "USEARCH_ANY_BASE_WEIGHT_IS_WILDCARD",
    "USEARCH_DEFAULT",
    "USEARCH_DONE",
    "USEARCH_ELEMENT_COMPARISON",
    "USEARCH_OFF",
    "USEARCH_ON",
    "USEARCH_OVERLAP",
    "USEARCH_PATTERN_BASE_WEIGHT_IS_WILDCARD",
    "USEARCH_STANDARD_ELEMENT_COMPARISON",
    "USET_ADD_CASE_MAPPINGS",
    "USET_CASE_INSENSITIVE",
    "USET_IGNORE_SPACE",
    "USET_SERIALIZED_STATIC_ARRAY_CAPACITY",
    "USET_SPAN_CONTAINED",
    "USET_SPAN_NOT_CONTAINED",
    "USET_SPAN_SIMPLE",
    "USPOOF_ALL_CHECKS",
    "USPOOF_ASCII",
    "USPOOF_AUX_INFO",
    "USPOOF_CHAR_LIMIT",
    "USPOOF_CONFUSABLE",
    "USPOOF_HIDDEN_OVERLAY",
    "USPOOF_HIGHLY_RESTRICTIVE",
    "USPOOF_INVISIBLE",
    "USPOOF_MINIMALLY_RESTRICTIVE",
    "USPOOF_MIXED_NUMBERS",
    "USPOOF_MIXED_SCRIPT_CONFUSABLE",
    "USPOOF_MODERATELY_RESTRICTIVE",
    "USPOOF_RESTRICTION_LEVEL",
    "USPOOF_RESTRICTION_LEVEL_MASK",
    "USPOOF_SINGLE_SCRIPT_CONFUSABLE",
    "USPOOF_SINGLE_SCRIPT_RESTRICTIVE",
    "USPOOF_UNRESTRICTIVE",
    "USPOOF_WHOLE_SCRIPT_CONFUSABLE",
    "USPREP_ALLOW_UNASSIGNED",
    "USPREP_DEFAULT",
    "USPREP_RFC3491_NAMEPREP",
    "USPREP_RFC3530_NFS4_CIS_PREP",
    "USPREP_RFC3530_NFS4_CS_PREP",
    "USPREP_RFC3530_NFS4_CS_PREP_CI",
    "USPREP_RFC3530_NFS4_MIXED_PREP_PREFIX",
    "USPREP_RFC3530_NFS4_MIXED_PREP_SUFFIX",
    "USPREP_RFC3722_ISCSI",
    "USPREP_RFC3920_NODEPREP",
    "USPREP_RFC3920_RESOURCEPREP",
    "USPREP_RFC4011_MIB",
    "USPREP_RFC4013_SASLPREP",
    "USPREP_RFC4505_TRACE",
    "USPREP_RFC4518_LDAP",
    "USPREP_RFC4518_LDAP_CI",
    "USP_E_SCRIPT_NOT_IN_FONT",
    "USTRINGTRIE_BUILD_FAST",
    "USTRINGTRIE_BUILD_SMALL",
    "USTRINGTRIE_FINAL_VALUE",
    "USTRINGTRIE_INTERMEDIATE_VALUE",
    "USTRINGTRIE_NO_MATCH",
    "USTRINGTRIE_NO_VALUE",
    "UScriptCode",
    "UScriptUsage",
    "USearch",
    "USearchAttribute",
    "USearchAttributeValue",
    "USentenceBreak",
    "USentenceBreakTag",
    "USerializedSet",
    "USet",
    "USetSpanCondition",
    "USpoofCheckResult",
    "USpoofChecker",
    "USpoofChecks",
    "UStringCaseMapper",
    "UStringPrepProfile",
    "UStringPrepProfileType",
    "UStringSearch",
    "UStringTrieBuildOption",
    "UStringTrieResult",
    "USystemTimeZoneType",
    "UTEXT_MAGIC",
    "UTEXT_PROVIDER_HAS_META_DATA",
    "UTEXT_PROVIDER_LENGTH_IS_EXPENSIVE",
    "UTEXT_PROVIDER_OWNS_TEXT",
    "UTEXT_PROVIDER_STABLE_CHUNKS",
    "UTEXT_PROVIDER_WRITABLE",
    "UTF16_MAX_CHAR_LENGTH",
    "UTF32_MAX_CHAR_LENGTH",
    "UTF8_ERROR_VALUE_1",
    "UTF8_ERROR_VALUE_2",
    "UTF8_MAX_CHAR_LENGTH",
    "UTF_ERROR_VALUE",
    "UTF_MAX_CHAR_LENGTH",
    "UTF_SIZE",
    "UTRACE_COLLATION_START",
    "UTRACE_CONVERSION_START",
    "UTRACE_ERROR",
    "UTRACE_FUNCTION_START",
    "UTRACE_INFO",
    "UTRACE_OFF",
    "UTRACE_OPEN_CLOSE",
    "UTRACE_UCNV_CLONE",
    "UTRACE_UCNV_CLOSE",
    "UTRACE_UCNV_FLUSH_CACHE",
    "UTRACE_UCNV_LOAD",
    "UTRACE_UCNV_OPEN",
    "UTRACE_UCNV_OPEN_ALGORITHMIC",
    "UTRACE_UCNV_OPEN_PACKAGE",
    "UTRACE_UCNV_UNLOAD",
    "UTRACE_UCOL_CLOSE",
    "UTRACE_UCOL_GETLOCALE",
    "UTRACE_UCOL_GET_SORTKEY",
    "UTRACE_UCOL_NEXTSORTKEYPART",
    "UTRACE_UCOL_OPEN",
    "UTRACE_UCOL_OPEN_FROM_SHORT_STRING",
    "UTRACE_UCOL_STRCOLL",
    "UTRACE_UCOL_STRCOLLITER",
    "UTRACE_UCOL_STRCOLLUTF8",
    "UTRACE_UDATA_BUNDLE",
    "UTRACE_UDATA_DATA_FILE",
    "UTRACE_UDATA_RESOURCE",
    "UTRACE_UDATA_RES_FILE",
    "UTRACE_UDATA_START",
    "UTRACE_U_CLEANUP",
    "UTRACE_U_INIT",
    "UTRACE_VERBOSE",
    "UTRACE_WARNING",
    "UTRANS_FORWARD",
    "UTRANS_REVERSE",
    "UTSV_EPOCH_OFFSET_VALUE",
    "UTSV_FROM_MAX_VALUE",
    "UTSV_FROM_MIN_VALUE",
    "UTSV_TO_MAX_VALUE",
    "UTSV_TO_MIN_VALUE",
    "UTSV_UNITS_VALUE",
    "UTZFMT_PARSE_OPTION_ALL_STYLES",
    "UTZFMT_PARSE_OPTION_NONE",
    "UTZFMT_PARSE_OPTION_TZ_DATABASE_ABBREVIATIONS",
    "UTZFMT_PAT_COUNT",
    "UTZFMT_PAT_NEGATIVE_H",
    "UTZFMT_PAT_NEGATIVE_HM",
    "UTZFMT_PAT_NEGATIVE_HMS",
    "UTZFMT_PAT_POSITIVE_H",
    "UTZFMT_PAT_POSITIVE_HM",
    "UTZFMT_PAT_POSITIVE_HMS",
    "UTZFMT_STYLE_EXEMPLAR_LOCATION",
    "UTZFMT_STYLE_GENERIC_LOCATION",
    "UTZFMT_STYLE_GENERIC_LONG",
    "UTZFMT_STYLE_GENERIC_SHORT",
    "UTZFMT_STYLE_ISO_BASIC_FIXED",
    "UTZFMT_STYLE_ISO_BASIC_FULL",
    "UTZFMT_STYLE_ISO_BASIC_LOCAL_FIXED",
    "UTZFMT_STYLE_ISO_BASIC_LOCAL_FULL",
    "UTZFMT_STYLE_ISO_BASIC_LOCAL_SHORT",
    "UTZFMT_STYLE_ISO_BASIC_SHORT",
    "UTZFMT_STYLE_ISO_EXTENDED_FIXED",
    "UTZFMT_STYLE_ISO_EXTENDED_FULL",
    "UTZFMT_STYLE_ISO_EXTENDED_LOCAL_FIXED",
    "UTZFMT_STYLE_ISO_EXTENDED_LOCAL_FULL",
    "UTZFMT_STYLE_LOCALIZED_GMT",
    "UTZFMT_STYLE_LOCALIZED_GMT_SHORT",
    "UTZFMT_STYLE_SPECIFIC_LONG",
    "UTZFMT_STYLE_SPECIFIC_SHORT",
    "UTZFMT_STYLE_ZONE_ID",
    "UTZFMT_STYLE_ZONE_ID_SHORT",
    "UTZFMT_TIME_TYPE_DAYLIGHT",
    "UTZFMT_TIME_TYPE_STANDARD",
    "UTZFMT_TIME_TYPE_UNKNOWN",
    "UTZNM_EXEMPLAR_LOCATION",
    "UTZNM_LONG_DAYLIGHT",
    "UTZNM_LONG_GENERIC",
    "UTZNM_LONG_STANDARD",
    "UTZNM_SHORT_DAYLIGHT",
    "UTZNM_SHORT_GENERIC",
    "UTZNM_SHORT_STANDARD",
    "UTZNM_UNKNOWN",
    "UText",
    "UTextAccess",
    "UTextClone",
    "UTextClose",
    "UTextCopy",
    "UTextExtract",
    "UTextFuncs",
    "UTextMapNativeIndexToUTF16",
    "UTextMapOffsetToNative",
    "UTextNativeLength",
    "UTextReplace",
    "UTimeScaleValue",
    "UTimeZoneFormatGMTOffsetPatternType",
    "UTimeZoneFormatParseOption",
    "UTimeZoneFormatStyle",
    "UTimeZoneFormatTimeType",
    "UTimeZoneNameType",
    "UTimeZoneTransitionType",
    "UTraceData",
    "UTraceEntry",
    "UTraceExit",
    "UTraceFunctionNumber",
    "UTraceLevel",
    "UTransDirection",
    "UTransPosition",
    "UVerticalOrientation",
    "UWordBreak",
    "UWordBreakValues",
    "U_ALPHAINDEX_INFLOW",
    "U_ALPHAINDEX_NORMAL",
    "U_ALPHAINDEX_OVERFLOW",
    "U_ALPHAINDEX_UNDERFLOW",
    "U_AMBIGUOUS_ALIAS_WARNING",
    "U_ARABIC_NUMBER",
    "U_ARGUMENT_TYPE_MISMATCH",
    "U_ASCII_FAMILY",
    "U_BAD_VARIABLE_DEFINITION",
    "U_BLOCK_SEPARATOR",
    "U_BOUNDARY_NEUTRAL",
    "U_BPT_CLOSE",
    "U_BPT_NONE",
    "U_BPT_OPEN",
    "U_BRK_ASSIGN_ERROR",
    "U_BRK_ERROR_START",
    "U_BRK_HEX_DIGITS_EXPECTED",
    "U_BRK_INIT_ERROR",
    "U_BRK_INTERNAL_ERROR",
    "U_BRK_MALFORMED_RULE_TAG",
    "U_BRK_MISMATCHED_PAREN",
    "U_BRK_NEW_LINE_IN_QUOTED_STRING",
    "U_BRK_RULE_EMPTY_SET",
    "U_BRK_RULE_SYNTAX",
    "U_BRK_SEMICOLON_EXPECTED",
    "U_BRK_UNCLOSED_SET",
    "U_BRK_UNDEFINED_VARIABLE",
    "U_BRK_UNRECOGNIZED_OPTION",
    "U_BRK_VARIABLE_REDFINITION",
    "U_BUFFER_OVERFLOW_ERROR",
    "U_CE_NOT_FOUND_ERROR",
    "U_CHAR16_IS_TYPEDEF",
    "U_CHARSET_FAMILY",
    "U_CHARSET_IS_UTF8",
    "U_CHAR_CATEGORY_COUNT",
    "U_CHAR_NAME_ALIAS",
    "U_CHECK_DYLOAD",
    "U_COLLATOR_VERSION_MISMATCH",
    "U_COMBINED_IMPLEMENTATION",
    "U_COMBINING_SPACING_MARK",
    "U_COMMON_NUMBER_SEPARATOR",
    "U_COMPARE_CODE_POINT_ORDER",
    "U_COMPARE_IGNORE_CASE",
    "U_CONNECTOR_PUNCTUATION",
    "U_CONTROL_CHAR",
    "U_COPYRIGHT_STRING_LENGTH",
    "U_CPLUSPLUS_VERSION",
    "U_CURRENCY_SYMBOL",
    "U_DASH_PUNCTUATION",
    "U_DEBUG",
    "U_DECIMAL_DIGIT_NUMBER",
    "U_DECIMAL_NUMBER_SYNTAX_ERROR",
    "U_DEFAULT_KEYWORD_MISSING",
    "U_DEFAULT_SHOW_DRAFT",
    "U_DEFINE_FALSE_AND_TRUE",
    "U_DIFFERENT_UCA_VERSION",
    "U_DIR_NON_SPACING_MARK",
    "U_DISABLE_RENAMING",
    "U_DT_CANONICAL",
    "U_DT_CIRCLE",
    "U_DT_COMPAT",
    "U_DT_FINAL",
    "U_DT_FONT",
    "U_DT_FRACTION",
    "U_DT_INITIAL",
    "U_DT_ISOLATED",
    "U_DT_MEDIAL",
    "U_DT_NARROW",
    "U_DT_NOBREAK",
    "U_DT_NONE",
    "U_DT_SMALL",
    "U_DT_SQUARE",
    "U_DT_SUB",
    "U_DT_SUPER",
    "U_DT_VERTICAL",
    "U_DT_WIDE",
    "U_DUPLICATE_KEYWORD",
    "U_EA_AMBIGUOUS",
    "U_EA_FULLWIDTH",
    "U_EA_HALFWIDTH",
    "U_EA_NARROW",
    "U_EA_NEUTRAL",
    "U_EA_WIDE",
    "U_EBCDIC_FAMILY",
    "U_EDITS_NO_RESET",
    "U_ENABLE_DYLOAD",
    "U_ENABLE_TRACING",
    "U_ENCLOSING_MARK",
    "U_END_PUNCTUATION",
    "U_ENUM_OUT_OF_SYNC_ERROR",
    "U_ERROR_WARNING_START",
    "U_EUROPEAN_NUMBER",
    "U_EUROPEAN_NUMBER_SEPARATOR",
    "U_EUROPEAN_NUMBER_TERMINATOR",
    "U_EXTENDED_CHAR_NAME",
    "U_FILE_ACCESS_ERROR",
    "U_FINAL_PUNCTUATION",
    "U_FIRST_STRONG_ISOLATE",
    "U_FMT_PARSE_ERROR_START",
    "U_FOLD_CASE_DEFAULT",
    "U_FOLD_CASE_EXCLUDE_SPECIAL_I",
    "U_FORMAT_CHAR",
    "U_FORMAT_INEXACT_ERROR",
    "U_GCB_CONTROL",
    "U_GCB_CR",
    "U_GCB_EXTEND",
    "U_GCB_E_BASE",
    "U_GCB_E_BASE_GAZ",
    "U_GCB_E_MODIFIER",
    "U_GCB_GLUE_AFTER_ZWJ",
    "U_GCB_L",
    "U_GCB_LF",
    "U_GCB_LV",
    "U_GCB_LVT",
    "U_GCB_OTHER",
    "U_GCB_PREPEND",
    "U_GCB_REGIONAL_INDICATOR",
    "U_GCB_SPACING_MARK",
    "U_GCB_T",
    "U_GCB_V",
    "U_GCB_ZWJ",
    "U_GCC_MAJOR_MINOR",
    "U_GENERAL_OTHER_TYPES",
    "U_HAVE_CHAR16_T",
    "U_HAVE_DEBUG_LOCATION_NEW",
    "U_HAVE_INTTYPES_H",
    "U_HAVE_LIB_SUFFIX",
    "U_HAVE_PLACEMENT_NEW",
    "U_HAVE_RBNF",
    "U_HAVE_RVALUE_REFERENCES",
    "U_HAVE_STDINT_H",
    "U_HAVE_STD_STRING",
    "U_HAVE_WCHAR_H",
    "U_HAVE_WCSCPY",
    "U_HIDE_DEPRECATED_API",
    "U_HIDE_DRAFT_API",
    "U_HIDE_INTERNAL_API",
    "U_HIDE_OBSOLETE_API",
    "U_HIDE_OBSOLETE_UTF_OLD_H",
    "U_HST_LEADING_JAMO",
    "U_HST_LVT_SYLLABLE",
    "U_HST_LV_SYLLABLE",
    "U_HST_NOT_APPLICABLE",
    "U_HST_TRAILING_JAMO",
    "U_HST_VOWEL_JAMO",
    "U_ICUDATA_TYPE_LETTER",
    "U_ICU_DATA_KEY",
    "U_ICU_VERSION_BUNDLE",
    "U_IDNA_ACE_PREFIX_ERROR",
    "U_IDNA_CHECK_BIDI_ERROR",
    "U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR",
    "U_IDNA_ERROR_START",
    "U_IDNA_LABEL_TOO_LONG_ERROR",
    "U_IDNA_PROHIBITED_ERROR",
    "U_IDNA_STD3_ASCII_RULES_ERROR",
    "U_IDNA_UNASSIGNED_ERROR",
    "U_IDNA_VERIFICATION_ERROR",
    "U_IDNA_ZERO_LENGTH_LABEL_ERROR",
    "U_ILLEGAL_ARGUMENT_ERROR",
    "U_ILLEGAL_CHARACTER",
    "U_ILLEGAL_CHAR_FOUND",
    "U_ILLEGAL_CHAR_IN_SEGMENT",
    "U_ILLEGAL_ESCAPE_SEQUENCE",
    "U_ILLEGAL_PAD_POSITION",
    "U_INDEX_OUTOFBOUNDS_ERROR",
    "U_INITIAL_PUNCTUATION",
    "U_INPC_BOTTOM",
    "U_INPC_BOTTOM_AND_LEFT",
    "U_INPC_BOTTOM_AND_RIGHT",
    "U_INPC_LEFT",
    "U_INPC_LEFT_AND_RIGHT",
    "U_INPC_NA",
    "U_INPC_OVERSTRUCK",
    "U_INPC_RIGHT",
    "U_INPC_TOP",
    "U_INPC_TOP_AND_BOTTOM",
    "U_INPC_TOP_AND_BOTTOM_AND_LEFT",
    "U_INPC_TOP_AND_BOTTOM_AND_RIGHT",
    "U_INPC_TOP_AND_LEFT",
    "U_INPC_TOP_AND_LEFT_AND_RIGHT",
    "U_INPC_TOP_AND_RIGHT",
    "U_INPC_VISUAL_ORDER_LEFT",
    "U_INSC_AVAGRAHA",
    "U_INSC_BINDU",
    "U_INSC_BRAHMI_JOINING_NUMBER",
    "U_INSC_CANTILLATION_MARK",
    "U_INSC_CONSONANT",
    "U_INSC_CONSONANT_DEAD",
    "U_INSC_CONSONANT_FINAL",
    "U_INSC_CONSONANT_HEAD_LETTER",
    "U_INSC_CONSONANT_INITIAL_POSTFIXED",
    "U_INSC_CONSONANT_KILLER",
    "U_INSC_CONSONANT_MEDIAL",
    "U_INSC_CONSONANT_PLACEHOLDER",
    "U_INSC_CONSONANT_PRECEDING_REPHA",
    "U_INSC_CONSONANT_PREFIXED",
    "U_INSC_CONSONANT_SUBJOINED",
    "U_INSC_CONSONANT_SUCCEEDING_REPHA",
    "U_INSC_CONSONANT_WITH_STACKER",
    "U_INSC_GEMINATION_MARK",
    "U_INSC_INVISIBLE_STACKER",
    "U_INSC_JOINER",
    "U_INSC_MODIFYING_LETTER",
    "U_INSC_NON_JOINER",
    "U_INSC_NUKTA",
    "U_INSC_NUMBER",
    "U_INSC_NUMBER_JOINER",
    "U_INSC_OTHER",
    "U_INSC_PURE_KILLER",
    "U_INSC_REGISTER_SHIFTER",
    "U_INSC_SYLLABLE_MODIFIER",
    "U_INSC_TONE_LETTER",
    "U_INSC_TONE_MARK",
    "U_INSC_VIRAMA",
    "U_INSC_VISARGA",
    "U_INSC_VOWEL",
    "U_INSC_VOWEL_DEPENDENT",
    "U_INSC_VOWEL_INDEPENDENT",
    "U_INTERNAL_PROGRAM_ERROR",
    "U_INTERNAL_TRANSLITERATOR_ERROR",
    "U_INVALID_CHAR_FOUND",
    "U_INVALID_FORMAT_ERROR",
    "U_INVALID_FUNCTION",
    "U_INVALID_ID",
    "U_INVALID_PROPERTY_PATTERN",
    "U_INVALID_RBT_SYNTAX",
    "U_INVALID_STATE_ERROR",
    "U_INVALID_TABLE_FILE",
    "U_INVALID_TABLE_FORMAT",
    "U_INVARIANT_CONVERSION_ERROR",
    "U_IOSTREAM_SOURCE",
    "U_IS_BIG_ENDIAN",
    "U_JG_AFRICAN_FEH",
    "U_JG_AFRICAN_NOON",
    "U_JG_AFRICAN_QAF",
    "U_JG_AIN",
    "U_JG_ALAPH",
    "U_JG_ALEF",
    "U_JG_BEH",
    "U_JG_BETH",
    "U_JG_BURUSHASKI_YEH_BARREE",
    "U_JG_DAL",
    "U_JG_DALATH_RISH",
    "U_JG_E",
    "U_JG_FARSI_YEH",
    "U_JG_FE",
    "U_JG_FEH",
    "U_JG_FINAL_SEMKATH",
    "U_JG_GAF",
    "U_JG_GAMAL",
    "U_JG_HAH",
    "U_JG_HAMZA_ON_HEH_GOAL",
    "U_JG_HANIFI_ROHINGYA_KINNA_YA",
    "U_JG_HANIFI_ROHINGYA_PA",
    "U_JG_HE",
    "U_JG_HEH",
    "U_JG_HEH_GOAL",
    "U_JG_HETH",
    "U_JG_KAF",
    "U_JG_KAPH",
    "U_JG_KHAPH",
    "U_JG_KNOTTED_HEH",
    "U_JG_LAM",
    "U_JG_LAMADH",
    "U_JG_MALAYALAM_BHA",
    "U_JG_MALAYALAM_JA",
    "U_JG_MALAYALAM_LLA",
    "U_JG_MALAYALAM_LLLA",
    "U_JG_MALAYALAM_NGA",
    "U_JG_MALAYALAM_NNA",
    "U_JG_MALAYALAM_NNNA",
    "U_JG_MALAYALAM_NYA",
    "U_JG_MALAYALAM_RA",
    "U_JG_MALAYALAM_SSA",
    "U_JG_MALAYALAM_TTA",
    "U_JG_MANICHAEAN_ALEPH",
    "U_JG_MANICHAEAN_AYIN",
    "U_JG_MANICHAEAN_BETH",
    "U_JG_MANICHAEAN_DALETH",
    "U_JG_MANICHAEAN_DHAMEDH",
    "U_JG_MANICHAEAN_FIVE",
    "U_JG_MANICHAEAN_GIMEL",
    "U_JG_MANICHAEAN_HETH",
    "U_JG_MANICHAEAN_HUNDRED",
    "U_JG_MANICHAEAN_KAPH",
    "U_JG_MANICHAEAN_LAMEDH",
    "U_JG_MANICHAEAN_MEM",
    "U_JG_MANICHAEAN_NUN",
    "U_JG_MANICHAEAN_ONE",
    "U_JG_MANICHAEAN_PE",
    "U_JG_MANICHAEAN_QOPH",
    "U_JG_MANICHAEAN_RESH",
    "U_JG_MANICHAEAN_SADHE",
    "U_JG_MANICHAEAN_SAMEKH",
    "U_JG_MANICHAEAN_TAW",
    "U_JG_MANICHAEAN_TEN",
    "U_JG_MANICHAEAN_TETH",
    "U_JG_MANICHAEAN_THAMEDH",
    "U_JG_MANICHAEAN_TWENTY",
    "U_JG_MANICHAEAN_WAW",
    "U_JG_MANICHAEAN_YODH",
    "U_JG_MANICHAEAN_ZAYIN",
    "U_JG_MEEM",
    "U_JG_MIM",
    "U_JG_NOON",
    "U_JG_NO_JOINING_GROUP",
    "U_JG_NUN",
    "U_JG_NYA",
    "U_JG_PE",
    "U_JG_QAF",
    "U_JG_QAPH",
    "U_JG_REH",
    "U_JG_REVERSED_PE",
    "U_JG_ROHINGYA_YEH",
    "U_JG_SAD",
    "U_JG_SADHE",
    "U_JG_SEEN",
    "U_JG_SEMKATH",
    "U_JG_SHIN",
    "U_JG_STRAIGHT_WAW",
    "U_JG_SWASH_KAF",
    "U_JG_SYRIAC_WAW",
    "U_JG_TAH",
    "U_JG_TAW",
    "U_JG_TEH_MARBUTA",
    "U_JG_TEH_MARBUTA_GOAL",
    "U_JG_TETH",
    "U_JG_WAW",
    "U_JG_YEH",
    "U_JG_YEH_BARREE",
    "U_JG_YEH_WITH_TAIL",
    "U_JG_YUDH",
    "U_JG_YUDH_HE",
    "U_JG_ZAIN",
    "U_JG_ZHAIN",
    "U_JT_DUAL_JOINING",
    "U_JT_JOIN_CAUSING",
    "U_JT_LEFT_JOINING",
    "U_JT_NON_JOINING",
    "U_JT_RIGHT_JOINING",
    "U_JT_TRANSPARENT",
    "U_LB_ALPHABETIC",
    "U_LB_AMBIGUOUS",
    "U_LB_BREAK_AFTER",
    "U_LB_BREAK_BEFORE",
    "U_LB_BREAK_BOTH",
    "U_LB_BREAK_SYMBOLS",
    "U_LB_CARRIAGE_RETURN",
    "U_LB_CLOSE_PARENTHESIS",
    "U_LB_CLOSE_PUNCTUATION",
    "U_LB_COMBINING_MARK",
    "U_LB_COMPLEX_CONTEXT",
    "U_LB_CONDITIONAL_JAPANESE_STARTER",
    "U_LB_CONTINGENT_BREAK",
    "U_LB_EXCLAMATION",
    "U_LB_E_BASE",
    "U_LB_E_MODIFIER",
    "U_LB_GLUE",
    "U_LB_H2",
    "U_LB_H3",
    "U_LB_HEBREW_LETTER",
    "U_LB_HYPHEN",
    "U_LB_IDEOGRAPHIC",
    "U_LB_INFIX_NUMERIC",
    "U_LB_INSEPARABLE",
    "U_LB_INSEPERABLE",
    "U_LB_JL",
    "U_LB_JT",
    "U_LB_JV",
    "U_LB_LINE_FEED",
    "U_LB_MANDATORY_BREAK",
    "U_LB_NEXT_LINE",
    "U_LB_NONSTARTER",
    "U_LB_NUMERIC",
    "U_LB_OPEN_PUNCTUATION",
    "U_LB_POSTFIX_NUMERIC",
    "U_LB_PREFIX_NUMERIC",
    "U_LB_QUOTATION",
    "U_LB_REGIONAL_INDICATOR",
    "U_LB_SPACE",
    "U_LB_SURROGATE",
    "U_LB_UNKNOWN",
    "U_LB_WORD_JOINER",
    "U_LB_ZWJ",
    "U_LB_ZWSPACE",
    "U_LEFT_TO_RIGHT",
    "U_LEFT_TO_RIGHT_EMBEDDING",
    "U_LEFT_TO_RIGHT_ISOLATE",
    "U_LEFT_TO_RIGHT_OVERRIDE",
    "U_LETTER_NUMBER",
    "U_LIB_SUFFIX_C_NAME_STRING",
    "U_LINE_SEPARATOR",
    "U_LONG_PROPERTY_NAME",
    "U_LOWERCASE_LETTER",
    "U_MALFORMED_EXPONENTIAL_PATTERN",
    "U_MALFORMED_PRAGMA",
    "U_MALFORMED_RULE",
    "U_MALFORMED_SET",
    "U_MALFORMED_SYMBOL_REFERENCE",
    "U_MALFORMED_UNICODE_ESCAPE",
    "U_MALFORMED_VARIABLE_DEFINITION",
    "U_MALFORMED_VARIABLE_REFERENCE",
    "U_MATH_SYMBOL",
    "U_MAX_VERSION_LENGTH",
    "U_MAX_VERSION_STRING_LENGTH",
    "U_MEMORY_ALLOCATION_ERROR",
    "U_MESSAGE_PARSE_ERROR",
    "U_MILLIS_PER_DAY",
    "U_MILLIS_PER_HOUR",
    "U_MILLIS_PER_MINUTE",
    "U_MILLIS_PER_SECOND",
    "U_MISMATCHED_SEGMENT_DELIMITERS",
    "U_MISPLACED_ANCHOR_START",
    "U_MISPLACED_COMPOUND_FILTER",
    "U_MISPLACED_CURSOR_OFFSET",
    "U_MISPLACED_QUANTIFIER",
    "U_MISSING_OPERATOR",
    "U_MISSING_RESOURCE_ERROR",
    "U_MISSING_SEGMENT_CLOSE",
    "U_MODIFIER_LETTER",
    "U_MODIFIER_SYMBOL",
    "U_MULTIPLE_ANTE_CONTEXTS",
    "U_MULTIPLE_COMPOUND_FILTERS",
    "U_MULTIPLE_CURSORS",
    "U_MULTIPLE_DECIMAL_SEPARATORS",
    "U_MULTIPLE_DECIMAL_SEPERATORS",
    "U_MULTIPLE_EXPONENTIAL_SYMBOLS",
    "U_MULTIPLE_PAD_SPECIFIERS",
    "U_MULTIPLE_PERCENT_SYMBOLS",
    "U_MULTIPLE_PERMILL_SYMBOLS",
    "U_MULTIPLE_POST_CONTEXTS",
    "U_NON_SPACING_MARK",
    "U_NO_DEFAULT_INCLUDE_UTF_HEADERS",
    "U_NO_SPACE_AVAILABLE",
    "U_NO_WRITE_PERMISSION",
    "U_NT_DECIMAL",
    "U_NT_DIGIT",
    "U_NT_NONE",
    "U_NT_NUMERIC",
    "U_NUMBER_ARG_OUTOFBOUNDS_ERROR",
    "U_NUMBER_SKELETON_SYNTAX_ERROR",
    "U_OMIT_UNCHANGED_TEXT",
    "U_OTHER_LETTER",
    "U_OTHER_NEUTRAL",
    "U_OTHER_NUMBER",
    "U_OTHER_PUNCTUATION",
    "U_OTHER_SYMBOL",
    "U_OVERRIDE_CXX_ALLOCATION",
    "U_PARAGRAPH_SEPARATOR",
    "U_PARSE_CONTEXT_LEN",
    "U_PARSE_ERROR",
    "U_PARSE_ERROR_START",
    "U_PATTERN_SYNTAX_ERROR",
    "U_PF_AIX",
    "U_PF_ANDROID",
    "U_PF_BROWSER_NATIVE_CLIENT",
    "U_PF_BSD",
    "U_PF_CYGWIN",
    "U_PF_DARWIN",
    "U_PF_EMSCRIPTEN",
    "U_PF_FUCHSIA",
    "U_PF_HPUX",
    "U_PF_IPHONE",
    "U_PF_IRIX",
    "U_PF_LINUX",
    "U_PF_MINGW",
    "U_PF_OS390",
    "U_PF_OS400",
    "U_PF_QNX",
    "U_PF_SOLARIS",
    "U_PF_UNKNOWN",
    "U_PF_WINDOWS",
    "U_PLATFORM",
    "U_PLATFORM_HAS_WIN32_API",
    "U_PLATFORM_HAS_WINUWP_API",
    "U_PLATFORM_IMPLEMENTS_POSIX",
    "U_PLATFORM_IS_DARWIN_BASED",
    "U_PLATFORM_IS_LINUX_BASED",
    "U_PLATFORM_USES_ONLY_WIN32_API",
    "U_PLUGIN_CHANGED_LEVEL_WARNING",
    "U_PLUGIN_DIDNT_SET_LEVEL",
    "U_PLUGIN_ERROR_START",
    "U_PLUGIN_TOO_HIGH",
    "U_POP_DIRECTIONAL_FORMAT",
    "U_POP_DIRECTIONAL_ISOLATE",
    "U_PRIMARY_TOO_LONG_ERROR",
    "U_PRIVATE_USE_CHAR",
    "U_REGEX_BAD_ESCAPE_SEQUENCE",
    "U_REGEX_BAD_INTERVAL",
    "U_REGEX_ERROR_START",
    "U_REGEX_INTERNAL_ERROR",
    "U_REGEX_INVALID_BACK_REF",
    "U_REGEX_INVALID_CAPTURE_GROUP_NAME",
    "U_REGEX_INVALID_FLAG",
    "U_REGEX_INVALID_RANGE",
    "U_REGEX_INVALID_STATE",
    "U_REGEX_LOOK_BEHIND_LIMIT",
    "U_REGEX_MAX_LT_MIN",
    "U_REGEX_MISMATCHED_PAREN",
    "U_REGEX_MISSING_CLOSE_BRACKET",
    "U_REGEX_NUMBER_TOO_BIG",
    "U_REGEX_PATTERN_TOO_BIG",
    "U_REGEX_PROPERTY_SYNTAX",
    "U_REGEX_RULE_SYNTAX",
    "U_REGEX_SET_CONTAINS_STRING",
    "U_REGEX_STACK_OVERFLOW",
    "U_REGEX_STOPPED_BY_CALLER",
    "U_REGEX_TIME_OUT",
    "U_REGEX_UNIMPLEMENTED",
    "U_RESOURCE_TYPE_MISMATCH",
    "U_RIGHT_TO_LEFT",
    "U_RIGHT_TO_LEFT_ARABIC",
    "U_RIGHT_TO_LEFT_EMBEDDING",
    "U_RIGHT_TO_LEFT_ISOLATE",
    "U_RIGHT_TO_LEFT_OVERRIDE",
    "U_RULE_MASK_ERROR",
    "U_SAFECLONE_ALLOCATED_WARNING",
    "U_SB_ATERM",
    "U_SB_CLOSE",
    "U_SB_CR",
    "U_SB_EXTEND",
    "U_SB_FORMAT",
    "U_SB_LF",
    "U_SB_LOWER",
    "U_SB_NUMERIC",
    "U_SB_OLETTER",
    "U_SB_OTHER",
    "U_SB_SCONTINUE",
    "U_SB_SEP",
    "U_SB_SP",
    "U_SB_STERM",
    "U_SB_UPPER",
    "U_SEGMENT_SEPARATOR",
    "U_SENTINEL",
    "U_SHAPE_AGGREGATE_TASHKEEL",
    "U_SHAPE_AGGREGATE_TASHKEEL_MASK",
    "U_SHAPE_AGGREGATE_TASHKEEL_NOOP",
    "U_SHAPE_DIGITS_ALEN2AN_INIT_AL",
    "U_SHAPE_DIGITS_ALEN2AN_INIT_LR",
    "U_SHAPE_DIGITS_AN2EN",
    "U_SHAPE_DIGITS_EN2AN",
    "U_SHAPE_DIGITS_MASK",
    "U_SHAPE_DIGITS_NOOP",
    "U_SHAPE_DIGITS_RESERVED",
    "U_SHAPE_DIGIT_TYPE_AN",
    "U_SHAPE_DIGIT_TYPE_AN_EXTENDED",
    "U_SHAPE_DIGIT_TYPE_MASK",
    "U_SHAPE_DIGIT_TYPE_RESERVED",
    "U_SHAPE_LAMALEF_AUTO",
    "U_SHAPE_LAMALEF_BEGIN",
    "U_SHAPE_LAMALEF_END",
    "U_SHAPE_LAMALEF_MASK",
    "U_SHAPE_LAMALEF_NEAR",
    "U_SHAPE_LAMALEF_RESIZE",
    "U_SHAPE_LENGTH_FIXED_SPACES_AT_BEGINNING",
    "U_SHAPE_LENGTH_FIXED_SPACES_AT_END",
    "U_SHAPE_LENGTH_FIXED_SPACES_NEAR",
    "U_SHAPE_LENGTH_GROW_SHRINK",
    "U_SHAPE_LENGTH_MASK",
    "U_SHAPE_LETTERS_MASK",
    "U_SHAPE_LETTERS_NOOP",
    "U_SHAPE_LETTERS_SHAPE",
    "U_SHAPE_LETTERS_SHAPE_TASHKEEL_ISOLATED",
    "U_SHAPE_LETTERS_UNSHAPE",
    "U_SHAPE_PRESERVE_PRESENTATION",
    "U_SHAPE_PRESERVE_PRESENTATION_MASK",
    "U_SHAPE_PRESERVE_PRESENTATION_NOOP",
    "U_SHAPE_SEEN_MASK",
    "U_SHAPE_SEEN_TWOCELL_NEAR",
    "U_SHAPE_SPACES_RELATIVE_TO_TEXT_BEGIN_END",
    "U_SHAPE_SPACES_RELATIVE_TO_TEXT_MASK",
    "U_SHAPE_TAIL_NEW_UNICODE",
    "U_SHAPE_TAIL_TYPE_MASK",
    "U_SHAPE_TASHKEEL_BEGIN",
    "U_SHAPE_TASHKEEL_END",
    "U_SHAPE_TASHKEEL_MASK",
    "U_SHAPE_TASHKEEL_REPLACE_BY_TATWEEL",
    "U_SHAPE_TASHKEEL_RESIZE",
    "U_SHAPE_TEXT_DIRECTION_LOGICAL",
    "U_SHAPE_TEXT_DIRECTION_MASK",
    "U_SHAPE_TEXT_DIRECTION_VISUAL_LTR",
    "U_SHAPE_TEXT_DIRECTION_VISUAL_RTL",
    "U_SHAPE_YEHHAMZA_MASK",
    "U_SHAPE_YEHHAMZA_TWOCELL_NEAR",
    "U_SHORT_PROPERTY_NAME",
    "U_SHOW_CPLUSPLUS_API",
    "U_SIZEOF_UCHAR",
    "U_SIZEOF_WCHAR_T",
    "U_SORT_KEY_TOO_SHORT_WARNING",
    "U_SPACE_SEPARATOR",
    "U_START_PUNCTUATION",
    "U_STATE_OLD_WARNING",
    "U_STATE_TOO_OLD_ERROR",
    "U_STRINGPREP_CHECK_BIDI_ERROR",
    "U_STRINGPREP_PROHIBITED_ERROR",
    "U_STRINGPREP_UNASSIGNED_ERROR",
    "U_STRING_NOT_TERMINATED_WARNING",
    "U_SURROGATE",
    "U_TITLECASE_ADJUST_TO_CASED",
    "U_TITLECASE_LETTER",
    "U_TITLECASE_NO_BREAK_ADJUSTMENT",
    "U_TITLECASE_NO_LOWERCASE",
    "U_TITLECASE_SENTENCES",
    "U_TITLECASE_WHOLE_STRING",
    "U_TOO_MANY_ALIASES_ERROR",
    "U_TRAILING_BACKSLASH",
    "U_TRUNCATED_CHAR_FOUND",
    "U_UNASSIGNED",
    "U_UNCLOSED_SEGMENT",
    "U_UNDEFINED_KEYWORD",
    "U_UNDEFINED_SEGMENT_REFERENCE",
    "U_UNDEFINED_VARIABLE",
    "U_UNEXPECTED_TOKEN",
    "U_UNICODE_CHAR_NAME",
    "U_UNICODE_VERSION",
    "U_UNMATCHED_BRACES",
    "U_UNQUOTED_SPECIAL",
    "U_UNSUPPORTED_ATTRIBUTE",
    "U_UNSUPPORTED_ERROR",
    "U_UNSUPPORTED_ESCAPE_SEQUENCE",
    "U_UNSUPPORTED_PROPERTY",
    "U_UNTERMINATED_QUOTE",
    "U_UPPERCASE_LETTER",
    "U_USELESS_COLLATOR_ERROR",
    "U_USING_DEFAULT_WARNING",
    "U_USING_FALLBACK_WARNING",
    "U_USING_ICU_NAMESPACE",
    "U_VARIABLE_RANGE_EXHAUSTED",
    "U_VARIABLE_RANGE_OVERLAP",
    "U_VO_ROTATED",
    "U_VO_TRANSFORMED_ROTATED",
    "U_VO_TRANSFORMED_UPRIGHT",
    "U_VO_UPRIGHT",
    "U_WB_ALETTER",
    "U_WB_CR",
    "U_WB_DOUBLE_QUOTE",
    "U_WB_EXTEND",
    "U_WB_EXTENDNUMLET",
    "U_WB_E_BASE",
    "U_WB_E_BASE_GAZ",
    "U_WB_E_MODIFIER",
    "U_WB_FORMAT",
    "U_WB_GLUE_AFTER_ZWJ",
    "U_WB_HEBREW_LETTER",
    "U_WB_KATAKANA",
    "U_WB_LF",
    "U_WB_MIDLETTER",
    "U_WB_MIDNUM",
    "U_WB_MIDNUMLET",
    "U_WB_NEWLINE",
    "U_WB_NUMERIC",
    "U_WB_OTHER",
    "U_WB_REGIONAL_INDICATOR",
    "U_WB_SINGLE_QUOTE",
    "U_WB_WSEGSPACE",
    "U_WB_ZWJ",
    "U_WHITE_SPACE_NEUTRAL",
    "U_ZERO_ERROR",
    "VS_ALLOW_LATIN",
    "VerifyScripts",
    "WC_COMPOSITECHECK",
    "WC_DEFAULTCHAR",
    "WC_DISCARDNS",
    "WC_ERR_INVALID_CHARS",
    "WC_NO_BEST_FIT_CHARS",
    "WC_SEPCHARS",
    "WORDLIST_TYPE",
    "WORDLIST_TYPE_ADD",
    "WORDLIST_TYPE_AUTOCORRECT",
    "WORDLIST_TYPE_EXCLUDE",
    "WORDLIST_TYPE_IGNORE",
    "WideCharToMultiByte",
    "lstrcatA",
    "lstrcatW",
    "lstrcmpA",
    "lstrcmpW",
    "lstrcmpiA",
    "lstrcmpiW",
    "lstrcpyA",
    "lstrcpyW",
    "lstrcpynA",
    "lstrcpynW",
    "lstrlenA",
    "lstrlenW",
    "u_UCharsToChars",
    "u_austrcpy",
    "u_austrncpy",
    "u_catclose",
    "u_catgets",
    "u_catopen",
    "u_charAge",
    "u_charDigitValue",
    "u_charDirection",
    "u_charFromName",
    "u_charMirror",
    "u_charName",
    "u_charType",
    "u_charsToUChars",
    "u_cleanup",
    "u_countChar32",
    "u_digit",
    "u_enumCharNames",
    "u_enumCharTypes",
    "u_errorName",
    "u_foldCase",
    "u_forDigit",
    "u_formatMessage",
    "u_formatMessageWithError",
    "u_getBidiPairedBracket",
    "u_getBinaryPropertySet",
    "u_getCombiningClass",
    "u_getDataVersion",
    "u_getFC_NFKC_Closure",
    "u_getIntPropertyMap",
    "u_getIntPropertyMaxValue",
    "u_getIntPropertyMinValue",
    "u_getIntPropertyValue",
    "u_getNumericValue",
    "u_getPropertyEnum",
    "u_getPropertyName",
    "u_getPropertyValueEnum",
    "u_getPropertyValueName",
    "u_getUnicodeVersion",
    "u_getVersion",
    "u_hasBinaryProperty",
    "u_init",
    "u_isIDIgnorable",
    "u_isIDPart",
    "u_isIDStart",
    "u_isISOControl",
    "u_isJavaIDPart",
    "u_isJavaIDStart",
    "u_isJavaSpaceChar",
    "u_isMirrored",
    "u_isUAlphabetic",
    "u_isULowercase",
    "u_isUUppercase",
    "u_isUWhiteSpace",
    "u_isWhitespace",
    "u_isalnum",
    "u_isalpha",
    "u_isbase",
    "u_isblank",
    "u_iscntrl",
    "u_isdefined",
    "u_isdigit",
    "u_isgraph",
    "u_islower",
    "u_isprint",
    "u_ispunct",
    "u_isspace",
    "u_istitle",
    "u_isupper",
    "u_isxdigit",
    "u_memcasecmp",
    "u_memchr",
    "u_memchr32",
    "u_memcmp",
    "u_memcmpCodePointOrder",
    "u_memcpy",
    "u_memmove",
    "u_memrchr",
    "u_memrchr32",
    "u_memset",
    "u_parseMessage",
    "u_parseMessageWithError",
    "u_setMemoryFunctions",
    "u_shapeArabic",
    "u_strCaseCompare",
    "u_strCompare",
    "u_strCompareIter",
    "u_strFindFirst",
    "u_strFindLast",
    "u_strFoldCase",
    "u_strFromJavaModifiedUTF8WithSub",
    "u_strFromUTF32",
    "u_strFromUTF32WithSub",
    "u_strFromUTF8",
    "u_strFromUTF8Lenient",
    "u_strFromUTF8WithSub",
    "u_strFromWCS",
    "u_strHasMoreChar32Than",
    "u_strToJavaModifiedUTF8",
    "u_strToLower",
    "u_strToTitle",
    "u_strToUTF32",
    "u_strToUTF32WithSub",
    "u_strToUTF8",
    "u_strToUTF8WithSub",
    "u_strToUpper",
    "u_strToWCS",
    "u_strcasecmp",
    "u_strcat",
    "u_strchr",
    "u_strchr32",
    "u_strcmp",
    "u_strcmpCodePointOrder",
    "u_strcpy",
    "u_strcspn",
    "u_strlen",
    "u_strncasecmp",
    "u_strncat",
    "u_strncmp",
    "u_strncmpCodePointOrder",
    "u_strncpy",
    "u_strpbrk",
    "u_strrchr",
    "u_strrchr32",
    "u_strrstr",
    "u_strspn",
    "u_strstr",
    "u_strtok_r",
    "u_tolower",
    "u_totitle",
    "u_toupper",
    "u_uastrcpy",
    "u_uastrncpy",
    "u_unescape",
    "u_unescapeAt",
    "u_versionFromString",
    "u_versionFromUString",
    "u_versionToString",
    "u_vformatMessage",
    "u_vformatMessageWithError",
    "u_vparseMessage",
    "u_vparseMessageWithError",
    "ubidi_close",
    "ubidi_countParagraphs",
    "ubidi_countRuns",
    "ubidi_getBaseDirection",
    "ubidi_getClassCallback",
    "ubidi_getCustomizedClass",
    "ubidi_getDirection",
    "ubidi_getLength",
    "ubidi_getLevelAt",
    "ubidi_getLevels",
    "ubidi_getLogicalIndex",
    "ubidi_getLogicalMap",
    "ubidi_getLogicalRun",
    "ubidi_getParaLevel",
    "ubidi_getParagraph",
    "ubidi_getParagraphByIndex",
    "ubidi_getProcessedLength",
    "ubidi_getReorderingMode",
    "ubidi_getReorderingOptions",
    "ubidi_getResultLength",
    "ubidi_getText",
    "ubidi_getVisualIndex",
    "ubidi_getVisualMap",
    "ubidi_getVisualRun",
    "ubidi_invertMap",
    "ubidi_isInverse",
    "ubidi_isOrderParagraphsLTR",
    "ubidi_open",
    "ubidi_openSized",
    "ubidi_orderParagraphsLTR",
    "ubidi_reorderLogical",
    "ubidi_reorderVisual",
    "ubidi_setClassCallback",
    "ubidi_setContext",
    "ubidi_setInverse",
    "ubidi_setLine",
    "ubidi_setPara",
    "ubidi_setReorderingMode",
    "ubidi_setReorderingOptions",
    "ubidi_writeReordered",
    "ubidi_writeReverse",
    "ubiditransform_close",
    "ubiditransform_open",
    "ubiditransform_transform",
    "ublock_getCode",
    "ubrk_close",
    "ubrk_countAvailable",
    "ubrk_current",
    "ubrk_first",
    "ubrk_following",
    "ubrk_getAvailable",
    "ubrk_getBinaryRules",
    "ubrk_getLocaleByType",
    "ubrk_getRuleStatus",
    "ubrk_getRuleStatusVec",
    "ubrk_isBoundary",
    "ubrk_last",
    "ubrk_next",
    "ubrk_open",
    "ubrk_openBinaryRules",
    "ubrk_openRules",
    "ubrk_preceding",
    "ubrk_previous",
    "ubrk_refreshUText",
    "ubrk_safeClone",
    "ubrk_setText",
    "ubrk_setUText",
    "ucal_add",
    "ucal_clear",
    "ucal_clearField",
    "ucal_clone",
    "ucal_close",
    "ucal_countAvailable",
    "ucal_equivalentTo",
    "ucal_get",
    "ucal_getAttribute",
    "ucal_getAvailable",
    "ucal_getCanonicalTimeZoneID",
    "ucal_getDSTSavings",
    "ucal_getDayOfWeekType",
    "ucal_getDefaultTimeZone",
    "ucal_getFieldDifference",
    "ucal_getGregorianChange",
    "ucal_getHostTimeZone",
    "ucal_getKeywordValuesForLocale",
    "ucal_getLimit",
    "ucal_getLocaleByType",
    "ucal_getMillis",
    "ucal_getNow",
    "ucal_getTZDataVersion",
    "ucal_getTimeZoneDisplayName",
    "ucal_getTimeZoneID",
    "ucal_getTimeZoneIDForWindowsID",
    "ucal_getTimeZoneTransitionDate",
    "ucal_getType",
    "ucal_getWeekendTransition",
    "ucal_getWindowsTimeZoneID",
    "ucal_inDaylightTime",
    "ucal_isSet",
    "ucal_isWeekend",
    "ucal_open",
    "ucal_openCountryTimeZones",
    "ucal_openTimeZoneIDEnumeration",
    "ucal_openTimeZones",
    "ucal_roll",
    "ucal_set",
    "ucal_setAttribute",
    "ucal_setDate",
    "ucal_setDateTime",
    "ucal_setDefaultTimeZone",
    "ucal_setGregorianChange",
    "ucal_setMillis",
    "ucal_setTimeZone",
    "ucasemap_close",
    "ucasemap_getBreakIterator",
    "ucasemap_getLocale",
    "ucasemap_getOptions",
    "ucasemap_open",
    "ucasemap_setBreakIterator",
    "ucasemap_setLocale",
    "ucasemap_setOptions",
    "ucasemap_toTitle",
    "ucasemap_utf8FoldCase",
    "ucasemap_utf8ToLower",
    "ucasemap_utf8ToTitle",
    "ucasemap_utf8ToUpper",
    "ucfpos_close",
    "ucfpos_constrainCategory",
    "ucfpos_constrainField",
    "ucfpos_getCategory",
    "ucfpos_getField",
    "ucfpos_getIndexes",
    "ucfpos_getInt64IterationContext",
    "ucfpos_matchesField",
    "ucfpos_open",
    "ucfpos_reset",
    "ucfpos_setInt64IterationContext",
    "ucfpos_setState",
    "ucnv_cbFromUWriteBytes",
    "ucnv_cbFromUWriteSub",
    "ucnv_cbFromUWriteUChars",
    "ucnv_cbToUWriteSub",
    "ucnv_cbToUWriteUChars",
    "ucnv_close",
    "ucnv_compareNames",
    "ucnv_convert",
    "ucnv_convertEx",
    "ucnv_countAliases",
    "ucnv_countAvailable",
    "ucnv_countStandards",
    "ucnv_detectUnicodeSignature",
    "ucnv_fixFileSeparator",
    "ucnv_flushCache",
    "ucnv_fromAlgorithmic",
    "ucnv_fromUChars",
    "ucnv_fromUCountPending",
    "ucnv_fromUnicode",
    "ucnv_getAlias",
    "ucnv_getAliases",
    "ucnv_getAvailableName",
    "ucnv_getCCSID",
    "ucnv_getCanonicalName",
    "ucnv_getDefaultName",
    "ucnv_getDisplayName",
    "ucnv_getFromUCallBack",
    "ucnv_getInvalidChars",
    "ucnv_getInvalidUChars",
    "ucnv_getMaxCharSize",
    "ucnv_getMinCharSize",
    "ucnv_getName",
    "ucnv_getNextUChar",
    "ucnv_getPlatform",
    "ucnv_getStandard",
    "ucnv_getStandardName",
    "ucnv_getStarters",
    "ucnv_getSubstChars",
    "ucnv_getToUCallBack",
    "ucnv_getType",
    "ucnv_getUnicodeSet",
    "ucnv_isAmbiguous",
    "ucnv_isFixedWidth",
    "ucnv_open",
    "ucnv_openAllNames",
    "ucnv_openCCSID",
    "ucnv_openPackage",
    "ucnv_openStandardNames",
    "ucnv_openU",
    "ucnv_reset",
    "ucnv_resetFromUnicode",
    "ucnv_resetToUnicode",
    "ucnv_safeClone",
    "ucnv_setDefaultName",
    "ucnv_setFallback",
    "ucnv_setFromUCallBack",
    "ucnv_setSubstChars",
    "ucnv_setSubstString",
    "ucnv_setToUCallBack",
    "ucnv_toAlgorithmic",
    "ucnv_toUChars",
    "ucnv_toUCountPending",
    "ucnv_toUnicode",
    "ucnv_usesFallback",
    "ucnvsel_close",
    "ucnvsel_open",
    "ucnvsel_openFromSerialized",
    "ucnvsel_selectForString",
    "ucnvsel_selectForUTF8",
    "ucnvsel_serialize",
    "ucol_cloneBinary",
    "ucol_close",
    "ucol_closeElements",
    "ucol_countAvailable",
    "ucol_equal",
    "ucol_getAttribute",
    "ucol_getAvailable",
    "ucol_getBound",
    "ucol_getContractionsAndExpansions",
    "ucol_getDisplayName",
    "ucol_getEquivalentReorderCodes",
    "ucol_getFunctionalEquivalent",
    "ucol_getKeywordValues",
    "ucol_getKeywordValuesForLocale",
    "ucol_getKeywords",
    "ucol_getLocaleByType",
    "ucol_getMaxExpansion",
    "ucol_getMaxVariable",
    "ucol_getOffset",
    "ucol_getReorderCodes",
    "ucol_getRules",
    "ucol_getRulesEx",
    "ucol_getSortKey",
    "ucol_getStrength",
    "ucol_getTailoredSet",
    "ucol_getUCAVersion",
    "ucol_getVariableTop",
    "ucol_getVersion",
    "ucol_greater",
    "ucol_greaterOrEqual",
    "ucol_keyHashCode",
    "ucol_mergeSortkeys",
    "ucol_next",
    "ucol_nextSortKeyPart",
    "ucol_open",
    "ucol_openAvailableLocales",
    "ucol_openBinary",
    "ucol_openElements",
    "ucol_openRules",
    "ucol_previous",
    "ucol_primaryOrder",
    "ucol_reset",
    "ucol_safeClone",
    "ucol_secondaryOrder",
    "ucol_setAttribute",
    "ucol_setMaxVariable",
    "ucol_setOffset",
    "ucol_setReorderCodes",
    "ucol_setStrength",
    "ucol_setText",
    "ucol_strcoll",
    "ucol_strcollIter",
    "ucol_strcollUTF8",
    "ucol_tertiaryOrder",
    "ucpmap_get",
    "ucpmap_getRange",
    "ucptrie_close",
    "ucptrie_get",
    "ucptrie_getRange",
    "ucptrie_getType",
    "ucptrie_getValueWidth",
    "ucptrie_internalSmallIndex",
    "ucptrie_internalSmallU8Index",
    "ucptrie_internalU8PrevIndex",
    "ucptrie_openFromBinary",
    "ucptrie_toBinary",
    "ucsdet_close",
    "ucsdet_detect",
    "ucsdet_detectAll",
    "ucsdet_enableInputFilter",
    "ucsdet_getAllDetectableCharsets",
    "ucsdet_getConfidence",
    "ucsdet_getLanguage",
    "ucsdet_getName",
    "ucsdet_getUChars",
    "ucsdet_isInputFilterEnabled",
    "ucsdet_open",
    "ucsdet_setDeclaredEncoding",
    "ucsdet_setText",
    "ucurr_countCurrencies",
    "ucurr_forLocale",
    "ucurr_forLocaleAndDate",
    "ucurr_getDefaultFractionDigits",
    "ucurr_getDefaultFractionDigitsForUsage",
    "ucurr_getKeywordValuesForLocale",
    "ucurr_getName",
    "ucurr_getNumericCode",
    "ucurr_getPluralName",
    "ucurr_getRoundingIncrement",
    "ucurr_getRoundingIncrementForUsage",
    "ucurr_isAvailable",
    "ucurr_openISOCurrencies",
    "ucurr_register",
    "ucurr_unregister",
    "udat_adoptNumberFormat",
    "udat_adoptNumberFormatForFields",
    "udat_applyPattern",
    "udat_clone",
    "udat_close",
    "udat_countAvailable",
    "udat_countSymbols",
    "udat_format",
    "udat_formatCalendar",
    "udat_formatCalendarForFields",
    "udat_formatForFields",
    "udat_get2DigitYearStart",
    "udat_getAvailable",
    "udat_getBooleanAttribute",
    "udat_getCalendar",
    "udat_getContext",
    "udat_getLocaleByType",
    "udat_getNumberFormat",
    "udat_getNumberFormatForField",
    "udat_getSymbols",
    "udat_isLenient",
    "udat_open",
    "udat_parse",
    "udat_parseCalendar",
    "udat_set2DigitYearStart",
    "udat_setBooleanAttribute",
    "udat_setCalendar",
    "udat_setContext",
    "udat_setLenient",
    "udat_setNumberFormat",
    "udat_setSymbols",
    "udat_toCalendarDateField",
    "udat_toPattern",
    "udatpg_addPattern",
    "udatpg_clone",
    "udatpg_close",
    "udatpg_getAppendItemFormat",
    "udatpg_getAppendItemName",
    "udatpg_getBaseSkeleton",
    "udatpg_getBestPattern",
    "udatpg_getBestPatternWithOptions",
    "udatpg_getDateTimeFormat",
    "udatpg_getDecimal",
    "udatpg_getFieldDisplayName",
    "udatpg_getPatternForSkeleton",
    "udatpg_getSkeleton",
    "udatpg_open",
    "udatpg_openBaseSkeletons",
    "udatpg_openEmpty",
    "udatpg_openSkeletons",
    "udatpg_replaceFieldTypes",
    "udatpg_replaceFieldTypesWithOptions",
    "udatpg_setAppendItemFormat",
    "udatpg_setAppendItemName",
    "udatpg_setDateTimeFormat",
    "udatpg_setDecimal",
    "udtitvfmt_close",
    "udtitvfmt_closeResult",
    "udtitvfmt_format",
    "udtitvfmt_open",
    "udtitvfmt_openResult",
    "udtitvfmt_resultAsValue",
    "uenum_close",
    "uenum_count",
    "uenum_next",
    "uenum_openCharStringsEnumeration",
    "uenum_openUCharStringsEnumeration",
    "uenum_reset",
    "uenum_unext",
    "ufieldpositer_close",
    "ufieldpositer_next",
    "ufieldpositer_open",
    "ufmt_close",
    "ufmt_getArrayItemByIndex",
    "ufmt_getArrayLength",
    "ufmt_getDate",
    "ufmt_getDecNumChars",
    "ufmt_getDouble",
    "ufmt_getInt64",
    "ufmt_getLong",
    "ufmt_getObject",
    "ufmt_getType",
    "ufmt_getUChars",
    "ufmt_isNumeric",
    "ufmt_open",
    "ufmtval_getString",
    "ufmtval_nextPosition",
    "ugender_getInstance",
    "ugender_getListGender",
    "uidna_close",
    "uidna_labelToASCII",
    "uidna_labelToASCII_UTF8",
    "uidna_labelToUnicode",
    "uidna_labelToUnicodeUTF8",
    "uidna_nameToASCII",
    "uidna_nameToASCII_UTF8",
    "uidna_nameToUnicode",
    "uidna_nameToUnicodeUTF8",
    "uidna_openUTS46",
    "uiter_current32",
    "uiter_getState",
    "uiter_next32",
    "uiter_previous32",
    "uiter_setState",
    "uiter_setString",
    "uiter_setUTF16BE",
    "uiter_setUTF8",
    "uldn_close",
    "uldn_getContext",
    "uldn_getDialectHandling",
    "uldn_getLocale",
    "uldn_keyDisplayName",
    "uldn_keyValueDisplayName",
    "uldn_languageDisplayName",
    "uldn_localeDisplayName",
    "uldn_open",
    "uldn_openForContext",
    "uldn_regionDisplayName",
    "uldn_scriptCodeDisplayName",
    "uldn_scriptDisplayName",
    "uldn_variantDisplayName",
    "ulistfmt_close",
    "ulistfmt_closeResult",
    "ulistfmt_format",
    "ulistfmt_formatStringsToResult",
    "ulistfmt_open",
    "ulistfmt_openForType",
    "ulistfmt_openResult",
    "ulistfmt_resultAsValue",
    "uloc_acceptLanguage",
    "uloc_acceptLanguageFromHTTP",
    "uloc_addLikelySubtags",
    "uloc_canonicalize",
    "uloc_countAvailable",
    "uloc_forLanguageTag",
    "uloc_getAvailable",
    "uloc_getBaseName",
    "uloc_getCharacterOrientation",
    "uloc_getCountry",
    "uloc_getDefault",
    "uloc_getDisplayCountry",
    "uloc_getDisplayKeyword",
    "uloc_getDisplayKeywordValue",
    "uloc_getDisplayLanguage",
    "uloc_getDisplayName",
    "uloc_getDisplayScript",
    "uloc_getDisplayVariant",
    "uloc_getISO3Country",
    "uloc_getISO3Language",
    "uloc_getISOCountries",
    "uloc_getISOLanguages",
    "uloc_getKeywordValue",
    "uloc_getLCID",
    "uloc_getLanguage",
    "uloc_getLineOrientation",
    "uloc_getLocaleForLCID",
    "uloc_getName",
    "uloc_getParent",
    "uloc_getScript",
    "uloc_getVariant",
    "uloc_isRightToLeft",
    "uloc_minimizeSubtags",
    "uloc_openAvailableByType",
    "uloc_openKeywords",
    "uloc_setDefault",
    "uloc_setKeywordValue",
    "uloc_toLanguageTag",
    "uloc_toLegacyKey",
    "uloc_toLegacyType",
    "uloc_toUnicodeLocaleKey",
    "uloc_toUnicodeLocaleType",
    "ulocdata_close",
    "ulocdata_getCLDRVersion",
    "ulocdata_getDelimiter",
    "ulocdata_getExemplarSet",
    "ulocdata_getLocaleDisplayPattern",
    "ulocdata_getLocaleSeparator",
    "ulocdata_getMeasurementSystem",
    "ulocdata_getNoSubstitute",
    "ulocdata_getPaperSize",
    "ulocdata_open",
    "ulocdata_setNoSubstitute",
    "umsg_applyPattern",
    "umsg_autoQuoteApostrophe",
    "umsg_clone",
    "umsg_close",
    "umsg_format",
    "umsg_getLocale",
    "umsg_open",
    "umsg_parse",
    "umsg_setLocale",
    "umsg_toPattern",
    "umsg_vformat",
    "umsg_vparse",
    "umutablecptrie_buildImmutable",
    "umutablecptrie_clone",
    "umutablecptrie_close",
    "umutablecptrie_fromUCPMap",
    "umutablecptrie_fromUCPTrie",
    "umutablecptrie_get",
    "umutablecptrie_getRange",
    "umutablecptrie_open",
    "umutablecptrie_set",
    "umutablecptrie_setRange",
    "unorm2_append",
    "unorm2_close",
    "unorm2_composePair",
    "unorm2_getCombiningClass",
    "unorm2_getDecomposition",
    "unorm2_getInstance",
    "unorm2_getNFCInstance",
    "unorm2_getNFDInstance",
    "unorm2_getNFKCCasefoldInstance",
    "unorm2_getNFKCInstance",
    "unorm2_getNFKDInstance",
    "unorm2_getRawDecomposition",
    "unorm2_hasBoundaryAfter",
    "unorm2_hasBoundaryBefore",
    "unorm2_isInert",
    "unorm2_isNormalized",
    "unorm2_normalize",
    "unorm2_normalizeSecondAndAppend",
    "unorm2_openFiltered",
    "unorm2_quickCheck",
    "unorm2_spanQuickCheckYes",
    "unorm_compare",
    "unum_applyPattern",
    "unum_clone",
    "unum_close",
    "unum_countAvailable",
    "unum_format",
    "unum_formatDecimal",
    "unum_formatDouble",
    "unum_formatDoubleCurrency",
    "unum_formatDoubleForFields",
    "unum_formatInt64",
    "unum_formatUFormattable",
    "unum_getAttribute",
    "unum_getAvailable",
    "unum_getContext",
    "unum_getDoubleAttribute",
    "unum_getLocaleByType",
    "unum_getSymbol",
    "unum_getTextAttribute",
    "unum_open",
    "unum_parse",
    "unum_parseDecimal",
    "unum_parseDouble",
    "unum_parseDoubleCurrency",
    "unum_parseInt64",
    "unum_parseToUFormattable",
    "unum_setAttribute",
    "unum_setContext",
    "unum_setDoubleAttribute",
    "unum_setSymbol",
    "unum_setTextAttribute",
    "unum_toPattern",
    "unumf_close",
    "unumf_closeResult",
    "unumf_formatDecimal",
    "unumf_formatDouble",
    "unumf_formatInt",
    "unumf_openForSkeletonAndLocale",
    "unumf_openForSkeletonAndLocaleWithError",
    "unumf_openResult",
    "unumf_resultAsValue",
    "unumf_resultGetAllFieldPositions",
    "unumf_resultNextFieldPosition",
    "unumf_resultToString",
    "unumsys_close",
    "unumsys_getDescription",
    "unumsys_getName",
    "unumsys_getRadix",
    "unumsys_isAlgorithmic",
    "unumsys_open",
    "unumsys_openAvailableNames",
    "unumsys_openByName",
    "uplrules_close",
    "uplrules_getKeywords",
    "uplrules_open",
    "uplrules_openForType",
    "uplrules_select",
    "uplrules_selectFormatted",
    "uregex_appendReplacement",
    "uregex_appendReplacementUText",
    "uregex_appendTail",
    "uregex_appendTailUText",
    "uregex_clone",
    "uregex_close",
    "uregex_end",
    "uregex_end64",
    "uregex_find",
    "uregex_find64",
    "uregex_findNext",
    "uregex_flags",
    "uregex_getFindProgressCallback",
    "uregex_getMatchCallback",
    "uregex_getStackLimit",
    "uregex_getText",
    "uregex_getTimeLimit",
    "uregex_getUText",
    "uregex_group",
    "uregex_groupCount",
    "uregex_groupNumberFromCName",
    "uregex_groupNumberFromName",
    "uregex_groupUText",
    "uregex_hasAnchoringBounds",
    "uregex_hasTransparentBounds",
    "uregex_hitEnd",
    "uregex_lookingAt",
    "uregex_lookingAt64",
    "uregex_matches",
    "uregex_matches64",
    "uregex_open",
    "uregex_openC",
    "uregex_openUText",
    "uregex_pattern",
    "uregex_patternUText",
    "uregex_refreshUText",
    "uregex_regionEnd",
    "uregex_regionEnd64",
    "uregex_regionStart",
    "uregex_regionStart64",
    "uregex_replaceAll",
    "uregex_replaceAllUText",
    "uregex_replaceFirst",
    "uregex_replaceFirstUText",
    "uregex_requireEnd",
    "uregex_reset",
    "uregex_reset64",
    "uregex_setFindProgressCallback",
    "uregex_setMatchCallback",
    "uregex_setRegion",
    "uregex_setRegion64",
    "uregex_setRegionAndStart",
    "uregex_setStackLimit",
    "uregex_setText",
    "uregex_setTimeLimit",
    "uregex_setUText",
    "uregex_split",
    "uregex_splitUText",
    "uregex_start",
    "uregex_start64",
    "uregex_useAnchoringBounds",
    "uregex_useTransparentBounds",
    "uregion_areEqual",
    "uregion_contains",
    "uregion_getAvailable",
    "uregion_getContainedRegions",
    "uregion_getContainedRegionsOfType",
    "uregion_getContainingRegion",
    "uregion_getContainingRegionOfType",
    "uregion_getNumericCode",
    "uregion_getPreferredValues",
    "uregion_getRegionCode",
    "uregion_getRegionFromCode",
    "uregion_getRegionFromNumericCode",
    "uregion_getType",
    "ureldatefmt_close",
    "ureldatefmt_closeResult",
    "ureldatefmt_combineDateAndTime",
    "ureldatefmt_format",
    "ureldatefmt_formatNumeric",
    "ureldatefmt_formatNumericToResult",
    "ureldatefmt_formatToResult",
    "ureldatefmt_open",
    "ureldatefmt_openResult",
    "ureldatefmt_resultAsValue",
    "ures_close",
    "ures_getBinary",
    "ures_getByIndex",
    "ures_getByKey",
    "ures_getInt",
    "ures_getIntVector",
    "ures_getKey",
    "ures_getLocaleByType",
    "ures_getNextResource",
    "ures_getNextString",
    "ures_getSize",
    "ures_getString",
    "ures_getStringByIndex",
    "ures_getStringByKey",
    "ures_getType",
    "ures_getUInt",
    "ures_getUTF8String",
    "ures_getUTF8StringByIndex",
    "ures_getUTF8StringByKey",
    "ures_getVersion",
    "ures_hasNext",
    "ures_open",
    "ures_openAvailableLocales",
    "ures_openDirect",
    "ures_openU",
    "ures_resetIterator",
    "uscript_breaksBetweenLetters",
    "uscript_getCode",
    "uscript_getName",
    "uscript_getSampleString",
    "uscript_getScript",
    "uscript_getScriptExtensions",
    "uscript_getShortName",
    "uscript_getUsage",
    "uscript_hasScript",
    "uscript_isCased",
    "uscript_isRightToLeft",
    "usearch_close",
    "usearch_first",
    "usearch_following",
    "usearch_getAttribute",
    "usearch_getBreakIterator",
    "usearch_getCollator",
    "usearch_getMatchedLength",
    "usearch_getMatchedStart",
    "usearch_getMatchedText",
    "usearch_getOffset",
    "usearch_getPattern",
    "usearch_getText",
    "usearch_last",
    "usearch_next",
    "usearch_open",
    "usearch_openFromCollator",
    "usearch_preceding",
    "usearch_previous",
    "usearch_reset",
    "usearch_setAttribute",
    "usearch_setBreakIterator",
    "usearch_setCollator",
    "usearch_setOffset",
    "usearch_setPattern",
    "usearch_setText",
    "uset_add",
    "uset_addAll",
    "uset_addAllCodePoints",
    "uset_addRange",
    "uset_addString",
    "uset_applyIntPropertyValue",
    "uset_applyPattern",
    "uset_applyPropertyAlias",
    "uset_charAt",
    "uset_clear",
    "uset_clone",
    "uset_cloneAsThawed",
    "uset_close",
    "uset_closeOver",
    "uset_compact",
    "uset_complement",
    "uset_complementAll",
    "uset_contains",
    "uset_containsAll",
    "uset_containsAllCodePoints",
    "uset_containsNone",
    "uset_containsRange",
    "uset_containsSome",
    "uset_containsString",
    "uset_equals",
    "uset_freeze",
    "uset_getItem",
    "uset_getItemCount",
    "uset_getSerializedRange",
    "uset_getSerializedRangeCount",
    "uset_getSerializedSet",
    "uset_indexOf",
    "uset_isEmpty",
    "uset_isFrozen",
    "uset_open",
    "uset_openEmpty",
    "uset_openPattern",
    "uset_openPatternOptions",
    "uset_remove",
    "uset_removeAll",
    "uset_removeAllStrings",
    "uset_removeRange",
    "uset_removeString",
    "uset_resemblesPattern",
    "uset_retain",
    "uset_retainAll",
    "uset_serialize",
    "uset_serializedContains",
    "uset_set",
    "uset_setSerializedToOne",
    "uset_size",
    "uset_span",
    "uset_spanBack",
    "uset_spanBackUTF8",
    "uset_spanUTF8",
    "uset_toPattern",
    "uspoof_areConfusable",
    "uspoof_areConfusableUTF8",
    "uspoof_check",
    "uspoof_check2",
    "uspoof_check2UTF8",
    "uspoof_checkUTF8",
    "uspoof_clone",
    "uspoof_close",
    "uspoof_closeCheckResult",
    "uspoof_getAllowedChars",
    "uspoof_getAllowedLocales",
    "uspoof_getCheckResultChecks",
    "uspoof_getCheckResultNumerics",
    "uspoof_getCheckResultRestrictionLevel",
    "uspoof_getChecks",
    "uspoof_getInclusionSet",
    "uspoof_getRecommendedSet",
    "uspoof_getRestrictionLevel",
    "uspoof_getSkeleton",
    "uspoof_getSkeletonUTF8",
    "uspoof_open",
    "uspoof_openCheckResult",
    "uspoof_openFromSerialized",
    "uspoof_openFromSource",
    "uspoof_serialize",
    "uspoof_setAllowedChars",
    "uspoof_setAllowedLocales",
    "uspoof_setChecks",
    "uspoof_setRestrictionLevel",
    "usprep_close",
    "usprep_open",
    "usprep_openByType",
    "usprep_prepare",
    "utext_char32At",
    "utext_clone",
    "utext_close",
    "utext_copy",
    "utext_current32",
    "utext_equals",
    "utext_extract",
    "utext_freeze",
    "utext_getNativeIndex",
    "utext_getPreviousNativeIndex",
    "utext_hasMetaData",
    "utext_isLengthExpensive",
    "utext_isWritable",
    "utext_moveIndex32",
    "utext_nativeLength",
    "utext_next32",
    "utext_next32From",
    "utext_openUChars",
    "utext_openUTF8",
    "utext_previous32",
    "utext_previous32From",
    "utext_replace",
    "utext_setNativeIndex",
    "utext_setup",
    "utf8_appendCharSafeBody",
    "utf8_back1SafeBody",
    "utf8_nextCharSafeBody",
    "utf8_prevCharSafeBody",
    "utmscale_fromInt64",
    "utmscale_getTimeScaleValue",
    "utmscale_toInt64",
    "utrace_format",
    "utrace_functionName",
    "utrace_getFunctions",
    "utrace_getLevel",
    "utrace_setFunctions",
    "utrace_setLevel",
    "utrace_vformat",
    "utrans_clone",
    "utrans_close",
    "utrans_countAvailableIDs",
    "utrans_getSourceSet",
    "utrans_getUnicodeID",
    "utrans_openIDs",
    "utrans_openInverse",
    "utrans_openU",
    "utrans_register",
    "utrans_setFilter",
    "utrans_toRules",
    "utrans_trans",
    "utrans_transIncremental",
    "utrans_transIncrementalUChars",
    "utrans_transUChars",
    "utrans_unregisterID",
]
_arch_optional = [
]
