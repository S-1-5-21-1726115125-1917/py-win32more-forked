from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, COMMETHOD, SUCCEEDED, FAILED
import win32more.Foundation
import win32more.NetworkManagement.WindowsFilteringPlatform
import win32more.Security
import win32more.System.Rpc
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        f = globals()[f'_define_{name}']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, f())
    return getattr(_module, name)
def __dir__():
    return __all__
FWPM_NET_EVENT_KEYWORD_INBOUND_MCAST = 1
FWPM_NET_EVENT_KEYWORD_INBOUND_BCAST = 2
FWPM_NET_EVENT_KEYWORD_CAPABILITY_DROP = 4
FWPM_NET_EVENT_KEYWORD_CAPABILITY_ALLOW = 8
FWPM_NET_EVENT_KEYWORD_CLASSIFY_ALLOW = 16
FWPM_NET_EVENT_KEYWORD_PORT_SCANNING_DROP = 32
FWPM_ENGINE_OPTION_PACKET_QUEUE_NONE = 0
FWPM_ENGINE_OPTION_PACKET_QUEUE_INBOUND = 1
FWPM_ENGINE_OPTION_PACKET_QUEUE_FORWARD = 2
FWPM_ENGINE_OPTION_PACKET_BATCH_INBOUND = 4
FWPM_SESSION_FLAG_DYNAMIC = 1
FWPM_SESSION_FLAG_RESERVED = 268435456
FWPM_PROVIDER_FLAG_PERSISTENT = 1
FWPM_PROVIDER_FLAG_DISABLED = 16
FWPM_PROVIDER_CONTEXT_FLAG_PERSISTENT = 1
FWPM_PROVIDER_CONTEXT_FLAG_DOWNLEVEL = 2
FWPM_SUBLAYER_FLAG_PERSISTENT = 1
FWPM_LAYER_FLAG_KERNEL = 1
FWPM_LAYER_FLAG_BUILTIN = 2
FWPM_LAYER_FLAG_CLASSIFY_MOSTLY = 4
FWPM_LAYER_FLAG_BUFFERED = 8
FWPM_CALLOUT_FLAG_PERSISTENT = 65536
FWPM_CALLOUT_FLAG_USES_PROVIDER_CONTEXT = 131072
FWPM_CALLOUT_FLAG_REGISTERED = 262144
FWPM_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT = 128
FWPM_FILTER_FLAG_SYSTEMOS_ONLY = 256
FWPM_FILTER_FLAG_GAMEOS_ONLY = 512
FWPM_FILTER_FLAG_SILENT_MODE = 1024
FWPM_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE = 2048
FWPM_FILTER_FLAG_RESERVED0 = 4096
FWPM_FILTER_FLAG_RESERVED1 = 8192
FWPM_NET_EVENT_FLAG_IP_PROTOCOL_SET = 1
FWPM_NET_EVENT_FLAG_LOCAL_ADDR_SET = 2
FWPM_NET_EVENT_FLAG_REMOTE_ADDR_SET = 4
FWPM_NET_EVENT_FLAG_LOCAL_PORT_SET = 8
FWPM_NET_EVENT_FLAG_REMOTE_PORT_SET = 16
FWPM_NET_EVENT_FLAG_APP_ID_SET = 32
FWPM_NET_EVENT_FLAG_USER_ID_SET = 64
FWPM_NET_EVENT_FLAG_SCOPE_ID_SET = 128
FWPM_NET_EVENT_FLAG_IP_VERSION_SET = 256
FWPM_NET_EVENT_FLAG_REAUTH_REASON_SET = 512
FWPM_NET_EVENT_FLAG_PACKAGE_ID_SET = 1024
FWPM_NET_EVENT_FLAG_ENTERPRISE_ID_SET = 2048
FWPM_NET_EVENT_FLAG_POLICY_FLAGS_SET = 4096
FWPM_NET_EVENT_FLAG_EFFECTIVE_NAME_SET = 8192
IKEEXT_CERT_HASH_LEN = 20
FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_BENIGN = 1
FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_MULTIPLE = 2
FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_MULTIPLE = 1
FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_BENIGN = 2
FWPM_CONNECTION_ENUM_FLAG_QUERY_BYTES_TRANSFERRED = 1
FWPS_FILTER_FLAG_CLEAR_ACTION_RIGHT = 1
FWPS_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED = 2
FWPS_FILTER_FLAG_OR_CONDITIONS = 4
FWPS_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT = 8
FWPS_FILTER_FLAG_SILENT_MODE = 16
FWPS_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE = 32
FWPS_FILTER_FLAG_RESERVED0 = 64
FWPS_FILTER_FLAG_RESERVED1 = 128
FWPS_INCOMING_FLAG_CACHE_SAFE = 1
FWPS_INCOMING_FLAG_ENFORCE_QUERY = 2
FWPS_INCOMING_FLAG_ABSORB = 4
FWPS_INCOMING_FLAG_CONNECTION_FAILING_INDICATION = 8
FWPS_INCOMING_FLAG_MID_STREAM_INSPECTION = 16
FWPS_INCOMING_FLAG_RECLASSIFY = 32
FWPS_INCOMING_FLAG_IS_LOOSE_SOURCE_FLOW = 64
FWPS_INCOMING_FLAG_IS_LOCAL_ONLY_FLOW = 128
FWPS_L2_INCOMING_FLAG_IS_RAW_IPV4_FRAMING = 1
FWPS_L2_INCOMING_FLAG_IS_RAW_IPV6_FRAMING = 2
FWPS_L2_INCOMING_FLAG_RECLASSIFY_MULTI_DESTINATION = 8
FWPS_INCOMING_FLAG_RESERVED0 = 256
FWPS_RIGHT_ACTION_WRITE = 1
FWPS_CLASSIFY_OUT_FLAG_ABSORB = 1
FWPS_CLASSIFY_OUT_FLAG_BUFFER_LIMIT_REACHED = 2
FWPS_CLASSIFY_OUT_FLAG_NO_MORE_DATA = 4
FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_CHECK = 8
FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_POSSIBLE = 16
FWPS_ALE_ENDPOINT_FLAG_IPSEC_SECURED = 1
FWP_BYTEMAP_ARRAY64_SIZE = 8
FWP_BYTE_ARRAY6_SIZE = 6
FWP_V6_ADDR_SIZE = 16
FWP_ACTRL_MATCH_FILTER = 1
FWP_OPTION_VALUE_ALLOW_MULTICAST_STATE = 0
FWP_OPTION_VALUE_DENY_MULTICAST_STATE = 1
FWP_OPTION_VALUE_ALLOW_GLOBAL_MULTICAST_STATE = 2
FWP_OPTION_VALUE_DISABLE_LOOSE_SOURCE = 0
FWP_OPTION_VALUE_ENABLE_LOOSE_SOURCE = 1
FWP_OPTION_VALUE_DISABLE_LOCAL_ONLY_MAPPING = 0
FWP_OPTION_VALUE_ENABLE_LOCAL_ONLY_MAPPING = 1
FWP_ACTION_FLAG_TERMINATING = 4096
FWP_ACTION_FLAG_NON_TERMINATING = 8192
FWP_ACTION_FLAG_CALLOUT = 16384
FWP_ACTION_NONE = 7
FWP_ACTION_NONE_NO_MATCH = 8
FWP_CONDITION_FLAG_IS_LOOPBACK = 1
FWP_CONDITION_FLAG_IS_IPSEC_SECURED = 2
FWP_CONDITION_FLAG_IS_REAUTHORIZE = 4
FWP_CONDITION_FLAG_IS_WILDCARD_BIND = 8
FWP_CONDITION_FLAG_IS_RAW_ENDPOINT = 16
FWP_CONDITION_FLAG_IS_FRAGMENT = 32
FWP_CONDITION_FLAG_IS_FRAGMENT_GROUP = 64
FWP_CONDITION_FLAG_IS_IPSEC_NATT_RECLASSIFY = 128
FWP_CONDITION_FLAG_REQUIRES_ALE_CLASSIFY = 256
FWP_CONDITION_FLAG_IS_IMPLICIT_BIND = 512
FWP_CONDITION_FLAG_IS_REASSEMBLED = 1024
FWP_CONDITION_FLAG_IS_NAME_APP_SPECIFIED = 16384
FWP_CONDITION_FLAG_IS_PROMISCUOUS = 32768
FWP_CONDITION_FLAG_IS_AUTH_FW = 65536
FWP_CONDITION_FLAG_IS_RECLASSIFY = 131072
FWP_CONDITION_FLAG_IS_OUTBOUND_PASS_THRU = 262144
FWP_CONDITION_FLAG_IS_INBOUND_PASS_THRU = 524288
FWP_CONDITION_FLAG_IS_CONNECTION_REDIRECTED = 1048576
FWP_CONDITION_FLAG_IS_PROXY_CONNECTION = 2097152
FWP_CONDITION_FLAG_IS_APPCONTAINER_LOOPBACK = 4194304
FWP_CONDITION_FLAG_IS_NON_APPCONTAINER_LOOPBACK = 8388608
FWP_CONDITION_FLAG_IS_RESERVED = 16777216
FWP_CONDITION_FLAG_IS_HONORING_POLICY_AUTHORIZE = 33554432
FWP_CONDITION_REAUTHORIZE_REASON_POLICY_CHANGE = 1
FWP_CONDITION_REAUTHORIZE_REASON_NEW_ARRIVAL_INTERFACE = 2
FWP_CONDITION_REAUTHORIZE_REASON_NEW_NEXTHOP_INTERFACE = 4
FWP_CONDITION_REAUTHORIZE_REASON_PROFILE_CROSSING = 8
FWP_CONDITION_REAUTHORIZE_REASON_CLASSIFY_COMPLETION = 16
FWP_CONDITION_REAUTHORIZE_REASON_IPSEC_PROPERTIES_CHANGED = 32
FWP_CONDITION_REAUTHORIZE_REASON_MID_STREAM_INSPECTION = 64
FWP_CONDITION_REAUTHORIZE_REASON_SOCKET_PROPERTY_CHANGED = 128
FWP_CONDITION_REAUTHORIZE_REASON_NEW_INBOUND_MCAST_BCAST_PACKET = 256
FWP_CONDITION_REAUTHORIZE_REASON_EDP_POLICY_CHANGED = 512
FWP_CONDITION_REAUTHORIZE_REASON_PROXY_HANDLE_CHANGED = 16384
FWP_CONDITION_REAUTHORIZE_REASON_CHECK_OFFLOAD = 65536
FWP_CONDITION_SOCKET_PROPERTY_FLAG_IS_SYSTEM_PORT_RPC = 1
FWP_CONDITION_SOCKET_PROPERTY_FLAG_ALLOW_EDGE_TRAFFIC = 2
FWP_CONDITION_SOCKET_PROPERTY_FLAG_DENY_EDGE_TRAFFIC = 4
FWP_CONDITION_L2_IS_NATIVE_ETHERNET = 1
FWP_CONDITION_L2_IS_WIFI = 2
FWP_CONDITION_L2_IS_MOBILE_BROADBAND = 4
FWP_CONDITION_L2_IS_WIFI_DIRECT_DATA = 8
FWP_CONDITION_L2_IS_VM2VM = 16
FWP_CONDITION_L2_IS_MALFORMED_PACKET = 32
FWP_CONDITION_L2_IS_IP_FRAGMENT_GROUP = 64
FWP_CONDITION_L2_IF_CONNECTOR_PRESENT = 128
FWP_FILTER_ENUM_FLAG_BEST_TERMINATING_MATCH = 1
FWP_FILTER_ENUM_FLAG_SORTED = 2
FWP_FILTER_ENUM_FLAG_BOOTTIME_ONLY = 4
FWP_FILTER_ENUM_FLAG_INCLUDE_BOOTTIME = 8
FWP_FILTER_ENUM_FLAG_INCLUDE_DISABLED = 16
FWP_FILTER_ENUM_FLAG_RESERVED1 = 32
FWP_CALLOUT_FLAG_CONDITIONAL_ON_FLOW = 1
FWP_CALLOUT_FLAG_ALLOW_OFFLOAD = 2
FWP_CALLOUT_FLAG_ENABLE_COMMIT_ADD_NOTIFY = 4
FWP_CALLOUT_FLAG_ALLOW_MID_STREAM_INSPECTION = 8
FWP_CALLOUT_FLAG_ALLOW_RECLASSIFY = 16
FWP_CALLOUT_FLAG_RESERVED1 = 32
FWP_CALLOUT_FLAG_ALLOW_RSC = 64
FWP_CALLOUT_FLAG_ALLOW_L2_BATCH_CLASSIFY = 128
FWP_CALLOUT_FLAG_ALLOW_USO = 256
FWP_CALLOUT_FLAG_ALLOW_URO = 512
FWP_CALLOUT_FLAG_RESERVED2 = 1024
IKEEXT_CERT_AUTH_FLAG_DISABLE_CRL_CHECK = 2
IKEEXT_CERT_AUTH_FLAG_DISABLE_REQUEST_PAYLOAD = 64
IKEEXT_KERB_AUTH_FORCE_PROXY_ON_INITIATOR = 4
IKEEXT_NTLM_V2_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS = 1
IKEEXT_POLICY_FLAG_MOBIKE_NOT_SUPPORTED = 16
IKEEXT_POLICY_FLAG_SITE_TO_SITE = 32
IKEEXT_POLICY_FLAG_IMS_VPN = 64
IKEEXT_POLICY_ENABLE_IKEV2_FRAGMENTATION = 128
IKEEXT_POLICY_SUPPORT_LOW_POWER_MODE = 256
IKEEXT_CERT_CREDENTIAL_FLAG_NAP_CERT = 1
IPSEC_AUTH_CONFIG_HMAC_MD5_96 = 0
IPSEC_AUTH_CONFIG_HMAC_SHA_1_96 = 1
IPSEC_AUTH_CONFIG_HMAC_SHA_256_128 = 2
IPSEC_AUTH_CONFIG_GCM_AES_128 = 3
IPSEC_AUTH_CONFIG_GCM_AES_192 = 4
IPSEC_AUTH_CONFIG_GCM_AES_256 = 5
IPSEC_AUTH_CONFIG_MAX = 6
IPSEC_CIPHER_CONFIG_CBC_DES = 1
IPSEC_CIPHER_CONFIG_CBC_3DES = 2
IPSEC_CIPHER_CONFIG_CBC_AES_128 = 3
IPSEC_CIPHER_CONFIG_CBC_AES_192 = 4
IPSEC_CIPHER_CONFIG_CBC_AES_256 = 5
IPSEC_CIPHER_CONFIG_GCM_AES_128 = 6
IPSEC_CIPHER_CONFIG_GCM_AES_192 = 7
IPSEC_CIPHER_CONFIG_GCM_AES_256 = 8
IPSEC_CIPHER_CONFIG_MAX = 9
IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_NOTIFY_KEY = 16384
IPSEC_POLICY_FLAG_RESERVED1 = 32768
IPSEC_POLICY_FLAG_SITE_TO_SITE_TUNNEL = 65536
IPSEC_KEYING_POLICY_FLAG_TERMINATING_MATCH = 1
IPSEC_SA_BUNDLE_FLAG_NLB = 16
IPSEC_SA_BUNDLE_FLAG_NO_MACHINE_LUID_VERIFY = 32
IPSEC_SA_BUNDLE_FLAG_NO_IMPERSONATION_LUID_VERIFY = 64
IPSEC_SA_BUNDLE_FLAG_NO_EXPLICIT_CRED_MATCH = 128
IPSEC_SA_BUNDLE_FLAG_FORCE_INBOUND_CONNECTIONS = 32768
IPSEC_SA_BUNDLE_FLAG_FORCE_OUTBOUND_CONNECTIONS = 65536
IPSEC_SA_BUNDLE_FLAG_FORWARD_PATH_INITIATOR = 131072
IPSEC_SA_BUNDLE_FLAG_ENABLE_OPTIONAL_ASYMMETRIC_IDLE = 262144
IPSEC_SA_BUNDLE_FLAG_USING_DICTATED_KEYS = 524288
IPSEC_SA_BUNDLE_FLAG_LOCALLY_DICTATED_KEYS = 1048576
IPSEC_SA_BUNDLE_FLAG_SA_OFFLOADED = 2097152
IPSEC_SA_BUNDLE_FLAG_IP_IN_IP_PKT = 4194304
IPSEC_SA_BUNDLE_FLAG_LOW_POWER_MODE_SUPPORT = 8388608
IPSEC_DOSP_DSCP_DISABLE_VALUE = 255
IPSEC_DOSP_RATE_LIMIT_DISABLE_VALUE = 0
IPSEC_KEY_MANAGER_FLAG_DICTATE_KEY = 1
def _define_FWPM_LAYER_INBOUND_IPPACKET_V4():
    return Guid('c86fd1bf-21cd-497e-a0-bb-17-42-5c-88-5c-58')
def _define_FWPM_LAYER_INBOUND_IPPACKET_V4_DISCARD():
    return Guid('b5a230d0-a8c0-44f2-91-6e-99-1b-53-de-d1-f7')
def _define_FWPM_LAYER_INBOUND_IPPACKET_V6():
    return Guid('f52032cb-991c-46e7-97-1d-26-01-45-9a-91-ca')
def _define_FWPM_LAYER_INBOUND_IPPACKET_V6_DISCARD():
    return Guid('bb24c279-93b4-47a2-83-ad-ae-16-98-b5-08-85')
def _define_FWPM_LAYER_OUTBOUND_IPPACKET_V4():
    return Guid('1e5c9fae-8a84-4135-a3-31-95-0b-54-22-9e-cd')
def _define_FWPM_LAYER_OUTBOUND_IPPACKET_V4_DISCARD():
    return Guid('08e4bcb5-b647-48f3-95-3c-e5-dd-bd-03-93-7e')
def _define_FWPM_LAYER_OUTBOUND_IPPACKET_V6():
    return Guid('a3b3ab6b-3564-488c-91-17-f3-4e-82-14-27-63')
def _define_FWPM_LAYER_OUTBOUND_IPPACKET_V6_DISCARD():
    return Guid('9513d7c4-a934-49dc-91-a7-6c-cb-80-cc-02-e3')
def _define_FWPM_LAYER_IPFORWARD_V4():
    return Guid('a82acc24-4ee1-4ee1-b4-65-fd-1d-25-cb-10-a4')
def _define_FWPM_LAYER_IPFORWARD_V4_DISCARD():
    return Guid('9e9ea773-2fae-4210-8f-17-34-12-9e-f3-69-eb')
def _define_FWPM_LAYER_IPFORWARD_V6():
    return Guid('7b964818-19c7-493a-b7-1f-83-2c-36-84-d2-8c')
def _define_FWPM_LAYER_IPFORWARD_V6_DISCARD():
    return Guid('31524a5d-1dfe-472f-bb-93-51-8e-e9-45-d8-a2')
def _define_FWPM_LAYER_INBOUND_TRANSPORT_V4():
    return Guid('5926dfc8-e3cf-4426-a2-83-dc-39-3f-5d-0f-9d')
def _define_FWPM_LAYER_INBOUND_TRANSPORT_V4_DISCARD():
    return Guid('ac4a9833-f69d-4648-b2-61-6d-c8-48-35-ef-39')
def _define_FWPM_LAYER_INBOUND_TRANSPORT_V6():
    return Guid('634a869f-fc23-4b90-b0-c1-bf-62-0a-36-ae-6f')
def _define_FWPM_LAYER_INBOUND_TRANSPORT_V6_DISCARD():
    return Guid('2a6ff955-3b2b-49d2-98-48-ad-9d-72-dc-aa-b7')
def _define_FWPM_LAYER_OUTBOUND_TRANSPORT_V4():
    return Guid('09e61aea-d214-46e2-9b-21-b2-6b-0b-2f-28-c8')
def _define_FWPM_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD():
    return Guid('c5f10551-bdb0-43d7-a3-13-50-e2-11-f4-d6-8a')
def _define_FWPM_LAYER_OUTBOUND_TRANSPORT_V6():
    return Guid('e1735bde-013f-4655-b3-51-a4-9e-15-76-2d-f0')
def _define_FWPM_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD():
    return Guid('f433df69-ccbd-482e-b9-b2-57-16-56-58-c3-b3')
def _define_FWPM_LAYER_STREAM_V4():
    return Guid('3b89653c-c170-49e4-b1-cd-e0-ee-ee-e1-9a-3e')
def _define_FWPM_LAYER_STREAM_V4_DISCARD():
    return Guid('25c4c2c2-25ff-4352-82-f9-c5-4a-4a-47-26-dc')
def _define_FWPM_LAYER_STREAM_V6():
    return Guid('47c9137a-7ec4-46b3-b6-e4-48-e9-26-b1-ed-a4')
def _define_FWPM_LAYER_STREAM_V6_DISCARD():
    return Guid('10a59fc7-b628-4c41-9e-b8-cf-37-d5-51-03-cf')
def _define_FWPM_LAYER_DATAGRAM_DATA_V4():
    return Guid('3d08bf4e-45f6-4930-a9-22-41-70-98-e2-00-27')
def _define_FWPM_LAYER_DATAGRAM_DATA_V4_DISCARD():
    return Guid('18e330c6-7248-4e52-aa-ab-47-2e-d6-77-04-fd')
def _define_FWPM_LAYER_DATAGRAM_DATA_V6():
    return Guid('fa45fe2f-3cba-4427-87-fc-57-b9-a4-b1-0d-00')
def _define_FWPM_LAYER_DATAGRAM_DATA_V6_DISCARD():
    return Guid('09d1dfe1-9b86-4a42-be-9d-8c-31-5b-92-a5-d0')
def _define_FWPM_LAYER_INBOUND_ICMP_ERROR_V4():
    return Guid('61499990-3cb6-4e84-b9-50-53-b9-4b-69-64-f3')
def _define_FWPM_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD():
    return Guid('a6b17075-ebaf-4053-a4-e7-21-3c-81-21-ed-e5')
def _define_FWPM_LAYER_INBOUND_ICMP_ERROR_V6():
    return Guid('65f9bdff-3b2d-4e5d-b8-c6-c7-20-65-1f-e8-98')
def _define_FWPM_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD():
    return Guid('a6e7ccc0-08fb-468d-a4-72-97-71-d5-59-5e-09')
def _define_FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4():
    return Guid('41390100-564c-4b32-bc-1d-71-80-48-35-4d-7c')
def _define_FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD():
    return Guid('b3598d36-0561-4588-a6-bf-e9-55-e3-f6-26-4b')
def _define_FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6():
    return Guid('7fb03b60-7b8d-4dfa-ba-dd-98-01-76-fc-4e-12')
def _define_FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD():
    return Guid('65f2e647-8d0c-4f47-b1-9b-33-a4-d3-f1-35-7c')
def _define_FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4():
    return Guid('1247d66d-0b60-4a15-8d-44-71-55-d0-f5-3a-0c')
def _define_FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD():
    return Guid('0b5812a2-c3ff-4eca-b8-8d-c7-9e-20-ac-63-22')
def _define_FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6():
    return Guid('55a650e1-5f0a-4eca-a6-53-88-f5-3b-26-aa-8c')
def _define_FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD():
    return Guid('cbc998bb-c51f-4c1a-bb-4f-97-75-fc-ac-ab-2f')
def _define_FWPM_LAYER_ALE_AUTH_LISTEN_V4():
    return Guid('88bb5dad-76d7-4227-9c-71-df-0a-3e-d7-be-7e')
def _define_FWPM_LAYER_ALE_AUTH_LISTEN_V4_DISCARD():
    return Guid('371dfada-9f26-45fd-b4-eb-c2-9e-b2-12-89-3f')
def _define_FWPM_LAYER_ALE_AUTH_LISTEN_V6():
    return Guid('7ac9de24-17dd-4814-b4-bd-a9-fb-c9-5a-32-1b')
def _define_FWPM_LAYER_ALE_AUTH_LISTEN_V6_DISCARD():
    return Guid('60703b07-63c8-48e9-ad-a3-12-b1-af-40-a6-17')
def _define_FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4():
    return Guid('e1cd9fe7-f4b5-4273-96-c0-59-2e-48-7b-86-50')
def _define_FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD():
    return Guid('9eeaa99b-bd22-4227-91-9f-00-73-c6-33-57-b1')
def _define_FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6():
    return Guid('a3b42c97-9f04-4672-b8-7e-ce-e9-c4-83-25-7f')
def _define_FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD():
    return Guid('89455b97-dbe1-453f-a2-24-13-da-89-5a-f3-96')
def _define_FWPM_LAYER_ALE_AUTH_CONNECT_V4():
    return Guid('c38d57d1-05a7-4c33-90-4f-7f-bc-ee-e6-0e-82')
def _define_FWPM_LAYER_ALE_AUTH_CONNECT_V4_DISCARD():
    return Guid('d632a801-f5ba-4ad6-96-e3-60-70-17-d9-83-6a')
def _define_FWPM_LAYER_ALE_AUTH_CONNECT_V6():
    return Guid('4a72393b-319f-44bc-84-c3-ba-54-dc-b3-b6-b4')
def _define_FWPM_LAYER_ALE_AUTH_CONNECT_V6_DISCARD():
    return Guid('c97bc3b8-c9a3-4e33-86-95-8e-17-aa-d4-de-09')
def _define_FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4():
    return Guid('af80470a-5596-4c13-99-92-53-9e-6f-e5-79-67')
def _define_FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD():
    return Guid('146ae4a9-a1d2-4d43-a3-1a-4c-42-68-2b-8e-4f')
def _define_FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6():
    return Guid('7021d2b3-dfa4-406e-af-eb-6a-fa-f7-e7-0e-fd')
def _define_FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD():
    return Guid('46928636-bbca-4b76-94-1d-0f-a7-f5-d7-d3-72')
def _define_FWPM_LAYER_INBOUND_MAC_FRAME_ETHERNET():
    return Guid('effb7edb-0055-4f9a-a2-31-4f-f8-13-1a-d1-91')
def _define_FWPM_LAYER_OUTBOUND_MAC_FRAME_ETHERNET():
    return Guid('694673bc-d6db-4870-ad-ee-0a-cd-bd-b7-f4-b2')
def _define_FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE():
    return Guid('d4220bd3-62ce-4f08-ae-88-b5-6e-85-26-df-50')
def _define_FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE():
    return Guid('94c44912-9d6f-4ebf-b9-95-05-ab-8a-08-8d-1b')
def _define_FWPM_LAYER_INGRESS_VSWITCH_ETHERNET():
    return Guid('7d98577a-9a87-41ec-97-18-7c-f5-89-c9-f3-2d')
def _define_FWPM_LAYER_EGRESS_VSWITCH_ETHERNET():
    return Guid('86c872b0-76fa-4b79-93-a4-07-50-53-0a-e2-92')
def _define_FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V4():
    return Guid('b2696ff6-774f-4554-9f-7d-3d-a3-94-5f-8e-85')
def _define_FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V6():
    return Guid('5ee314fc-7d8a-47f4-b7-e3-29-1a-36-da-4e-12')
def _define_FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V4():
    return Guid('b92350b6-91f0-46b6-bd-c4-87-1d-fd-4a-7c-98')
def _define_FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V6():
    return Guid('1b2def23-1881-40bd-82-f4-42-54-e6-31-41-cb')
def _define_FWPM_LAYER_INBOUND_TRANSPORT_FAST():
    return Guid('e41d2719-05c7-40f0-89-83-ea-8d-17-bb-c2-f6')
def _define_FWPM_LAYER_OUTBOUND_TRANSPORT_FAST():
    return Guid('13ed4388-a070-4815-99-35-7a-9b-e6-40-8b-78')
def _define_FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST():
    return Guid('853aaa8e-2b78-4d24-a8-04-36-db-08-b2-97-11')
def _define_FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST():
    return Guid('470df946-c962-486f-94-46-82-93-cb-c7-5e-b8')
def _define_FWPM_LAYER_IPSEC_KM_DEMUX_V4():
    return Guid('f02b1526-a459-4a51-b9-e3-75-9d-e5-2b-9d-2c')
def _define_FWPM_LAYER_IPSEC_KM_DEMUX_V6():
    return Guid('2f755cf6-2fd4-4e88-b3-e4-a9-1b-ca-49-52-35')
def _define_FWPM_LAYER_IPSEC_V4():
    return Guid('eda65c74-610d-4bc5-94-8f-3c-4f-89-55-68-67')
def _define_FWPM_LAYER_IPSEC_V6():
    return Guid('13c48442-8d87-4261-9a-29-59-d2-ab-c3-48-b4')
def _define_FWPM_LAYER_IKEEXT_V4():
    return Guid('b14b7bdb-dbbd-473e-be-d4-8b-47-08-d4-f2-70')
def _define_FWPM_LAYER_IKEEXT_V6():
    return Guid('b64786b3-f687-4eb9-89-d2-8e-f3-2a-cd-ab-e2')
def _define_FWPM_LAYER_RPC_UM():
    return Guid('75a89dda-95e4-40f3-ad-c7-76-88-a9-c8-47-e1')
def _define_FWPM_LAYER_RPC_EPMAP():
    return Guid('9247bc61-eb07-47ee-87-2c-bf-d7-8b-fd-16-16')
def _define_FWPM_LAYER_RPC_EP_ADD():
    return Guid('618dffc7-c450-4943-95-db-99-b4-c1-6a-55-d4')
def _define_FWPM_LAYER_RPC_PROXY_CONN():
    return Guid('94a4b50b-ba5c-4f27-90-7a-22-9f-ac-0c-2a-7a')
def _define_FWPM_LAYER_RPC_PROXY_IF():
    return Guid('f8a38615-e12c-41ac-98-df-12-1a-d9-81-aa-de')
def _define_FWPM_LAYER_KM_AUTHORIZATION():
    return Guid('4aa226e9-9020-45fb-95-6a-c0-24-9d-84-11-95')
def _define_FWPM_LAYER_NAME_RESOLUTION_CACHE_V4():
    return Guid('0c2aa681-905b-4ccd-a4-67-4d-d8-11-d0-7b-7b')
def _define_FWPM_LAYER_NAME_RESOLUTION_CACHE_V6():
    return Guid('92d592fa-6b01-434a-9d-ea-d1-e9-6e-a9-7d-a9')
def _define_FWPM_LAYER_ALE_RESOURCE_RELEASE_V4():
    return Guid('74365cce-ccb0-401a-bf-c1-b8-99-34-ad-7e-15')
def _define_FWPM_LAYER_ALE_RESOURCE_RELEASE_V6():
    return Guid('f4e5ce80-edcc-4e13-8a-2f-b9-14-54-bb-05-7b')
def _define_FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V4():
    return Guid('b4766427-e2a2-467a-bd-7e-db-cd-1b-d8-5a-09')
def _define_FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V6():
    return Guid('bb536ccd-4755-4ba9-9f-f7-f9-ed-f8-69-9c-7b')
def _define_FWPM_LAYER_ALE_CONNECT_REDIRECT_V4():
    return Guid('c6e63c8c-b784-4562-aa-7d-0a-67-cf-ca-f9-a3')
def _define_FWPM_LAYER_ALE_CONNECT_REDIRECT_V6():
    return Guid('587e54a7-8046-42ba-a0-aa-b7-16-25-0f-c7-fd')
def _define_FWPM_LAYER_ALE_BIND_REDIRECT_V4():
    return Guid('66978cad-c704-42ac-86-ac-7c-1a-23-1b-d2-53')
def _define_FWPM_LAYER_ALE_BIND_REDIRECT_V6():
    return Guid('bef02c9c-606b-4536-8c-26-1c-2f-c7-b6-31-d4')
def _define_FWPM_LAYER_STREAM_PACKET_V4():
    return Guid('af52d8ec-cb2d-44e5-ad-92-f8-dc-38-d2-eb-29')
def _define_FWPM_LAYER_STREAM_PACKET_V6():
    return Guid('779a8ca3-f099-468f-b5-d4-83-53-5c-46-1c-02')
def _define_FWPM_LAYER_INBOUND_RESERVED2():
    return Guid('f4fb8d55-c076-46d8-a2-c7-6a-4c-72-2c-a4-ed')
def _define_FWPM_SUBLAYER_RPC_AUDIT():
    return Guid('758c84f4-fb48-4de9-9a-eb-3e-d9-55-1a-b1-fd')
def _define_FWPM_SUBLAYER_IPSEC_TUNNEL():
    return Guid('83f299ed-9ff4-4967-af-f4-c3-09-f4-da-b8-27')
def _define_FWPM_SUBLAYER_UNIVERSAL():
    return Guid('eebecc03-ced4-4380-81-9a-27-34-39-7b-2b-74')
def _define_FWPM_SUBLAYER_LIPS():
    return Guid('1b75c0ce-ff60-4711-a7-0f-b4-95-8c-c3-b2-d0')
def _define_FWPM_SUBLAYER_SECURE_SOCKET():
    return Guid('15a66e17-3f3c-4f7b-aa-6c-81-2a-a6-13-dd-82')
def _define_FWPM_SUBLAYER_TCP_CHIMNEY_OFFLOAD():
    return Guid('337608b9-b7d5-4d5f-82-f9-36-18-61-8b-c0-58')
def _define_FWPM_SUBLAYER_INSPECTION():
    return Guid('877519e1-e6a9-41a5-81-b4-8c-4f-11-8e-4a-60')
def _define_FWPM_SUBLAYER_TEREDO():
    return Guid('ba69dc66-5176-4979-9c-89-26-a7-b4-6a-83-27')
def _define_FWPM_SUBLAYER_IPSEC_FORWARD_OUTBOUND_TUNNEL():
    return Guid('a5082e73-8f71-4559-8a-9a-10-1c-ea-04-ef-87')
def _define_FWPM_SUBLAYER_IPSEC_DOSP():
    return Guid('e076d572-5d3d-48ef-80-2b-90-9e-dd-b0-98-bd')
def _define_FWPM_SUBLAYER_TCP_TEMPLATES():
    return Guid('24421dcf-0ac5-4caa-9e-14-50-f6-e3-63-6a-f0')
def _define_FWPM_SUBLAYER_IPSEC_SECURITY_REALM():
    return Guid('37a57701-5884-4964-92-b8-3e-70-46-88-b0-ad')
def _define_FWPM_SUBLAYER_MPSSVC_WSH():
    return Guid('b3cdd441-af90-41ba-a7-45-7c-60-08-ff-23-00')
def _define_FWPM_SUBLAYER_MPSSVC_WF():
    return Guid('b3cdd441-af90-41ba-a7-45-7c-60-08-ff-23-01')
def _define_FWPM_SUBLAYER_MPSSVC_QUARANTINE():
    return Guid('b3cdd441-af90-41ba-a7-45-7c-60-08-ff-23-02')
def _define_FWPM_SUBLAYER_MPSSVC_EDP():
    return Guid('09a47e38-fa97-471b-b1-23-18-bc-d7-e6-50-71')
def _define_FWPM_SUBLAYER_MPSSVC_TENANT_RESTRICTIONS():
    return Guid('1ec6c7e1-fdd9-478a-b5-5f-ff-8b-a1-d2-c1-7d')
def _define_FWPM_CONDITION_INTERFACE_MAC_ADDRESS():
    return Guid('f6e63dce-1f4b-4c6b-b6-ef-11-65-e7-1f-8e-e7')
def _define_FWPM_CONDITION_MAC_LOCAL_ADDRESS():
    return Guid('d999e981-7948-4c83-b7-42-c8-4e-3b-67-8f-8f')
def _define_FWPM_CONDITION_MAC_REMOTE_ADDRESS():
    return Guid('408f2ed4-3a70-4b4d-92-a6-41-5a-c2-0e-2f-12')
def _define_FWPM_CONDITION_ETHER_TYPE():
    return Guid('fd08948d-a219-4d52-bb-98-1a-55-40-ee-7b-4e')
def _define_FWPM_CONDITION_VLAN_ID():
    return Guid('938eab21-3618-4e64-9c-a5-21-41-eb-da-1c-a2')
def _define_FWPM_CONDITION_VSWITCH_TENANT_NETWORK_ID():
    return Guid('dc04843c-79e6-4e44-a0-25-65-b9-bb-0f-9f-94')
def _define_FWPM_CONDITION_NDIS_PORT():
    return Guid('db7bb42b-2dac-4cd4-a5-9a-e0-bd-ce-1e-68-34')
def _define_FWPM_CONDITION_NDIS_MEDIA_TYPE():
    return Guid('cb31cef1-791d-473b-89-d1-61-c5-98-43-04-a0')
def _define_FWPM_CONDITION_NDIS_PHYSICAL_MEDIA_TYPE():
    return Guid('34c79823-c229-44f2-b8-3c-74-02-08-82-ae-77')
def _define_FWPM_CONDITION_L2_FLAGS():
    return Guid('7bc43cbf-37ba-45f1-b7-4a-82-ff-51-8e-eb-10')
def _define_FWPM_CONDITION_MAC_LOCAL_ADDRESS_TYPE():
    return Guid('cc31355c-3073-4ffb-a1-4f-79-41-5c-b1-ea-d1')
def _define_FWPM_CONDITION_MAC_REMOTE_ADDRESS_TYPE():
    return Guid('027fedb4-f1c1-4030-b5-64-ee-77-7f-d8-67-ea')
def _define_FWPM_CONDITION_ALE_PACKAGE_ID():
    return Guid('71bc78fa-f17c-4997-a6-02-6a-bb-26-1f-35-1c')
def _define_FWPM_CONDITION_MAC_SOURCE_ADDRESS():
    return Guid('7b795451-f1f6-4d05-b7-cb-21-77-9d-80-23-36')
def _define_FWPM_CONDITION_MAC_DESTINATION_ADDRESS():
    return Guid('04ea2a93-858c-4027-b6-13-b4-31-80-c7-85-9e')
def _define_FWPM_CONDITION_MAC_SOURCE_ADDRESS_TYPE():
    return Guid('5c1b72e4-299e-4437-a2-98-bc-3f-01-4b-3d-c2')
def _define_FWPM_CONDITION_MAC_DESTINATION_ADDRESS_TYPE():
    return Guid('ae052932-ef42-4e99-b1-29-f3-b3-13-9e-34-f7')
def _define_FWPM_CONDITION_IP_SOURCE_PORT():
    return Guid('a6afef91-3df4-4730-a2-14-f5-42-6a-eb-f8-21')
def _define_FWPM_CONDITION_IP_DESTINATION_PORT():
    return Guid('ce6def45-60fb-4a7b-a3-04-af-30-a1-17-00-0e')
def _define_FWPM_CONDITION_VSWITCH_ID():
    return Guid('c4a414ba-437b-4de6-99-46-d9-9c-1b-95-b3-12')
def _define_FWPM_CONDITION_VSWITCH_NETWORK_TYPE():
    return Guid('11d48b4b-e77a-40b4-91-55-39-2c-90-6c-26-08')
def _define_FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_ID():
    return Guid('7f4ef24b-b2c1-4938-ba-33-a1-ec-be-d5-12-ba')
def _define_FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_ID():
    return Guid('8ed48be4-c926-49f6-a4-f6-ef-30-30-e3-fc-16')
def _define_FWPM_CONDITION_VSWITCH_SOURCE_VM_ID():
    return Guid('9c2a9ec2-9fc6-42bc-bd-d8-40-6d-4d-a0-be-64')
def _define_FWPM_CONDITION_VSWITCH_DESTINATION_VM_ID():
    return Guid('6106aace-4de1-4c84-96-71-36-37-f8-bc-f7-31')
def _define_FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_TYPE():
    return Guid('e6b040a2-edaf-4c36-90-8b-f2-f5-8a-e4-38-07')
def _define_FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_TYPE():
    return Guid('fa9b3f06-2f1a-4c57-9e-68-a7-09-8b-28-db-fe')
def _define_FWPM_CONDITION_ALE_SECURITY_ATTRIBUTE_FQBN_VALUE():
    return Guid('37a57699-5883-4963-92-b8-3e-70-46-88-b0-ad')
def _define_FWPM_CONDITION_IPSEC_SECURITY_REALM_ID():
    return Guid('37a57700-5884-4964-92-b8-3e-70-46-88-b0-ad')
def _define_FWPM_CONDITION_ALE_EFFECTIVE_NAME():
    return Guid('b1277b9a-b781-40fc-96-71-e5-f1-b9-89-f3-4e')
def _define_FWPM_CONDITION_IP_LOCAL_ADDRESS():
    return Guid('d9ee00de-c1ef-4617-bf-e3-ff-d8-f5-a0-89-57')
def _define_FWPM_CONDITION_IP_REMOTE_ADDRESS():
    return Guid('b235ae9a-1d64-49b8-a4-4c-5f-f3-d9-09-50-45')
def _define_FWPM_CONDITION_IP_SOURCE_ADDRESS():
    return Guid('ae96897e-2e94-4bc9-b3-13-b2-7e-e8-0e-57-4d')
def _define_FWPM_CONDITION_IP_DESTINATION_ADDRESS():
    return Guid('2d79133b-b390-45c6-86-99-ac-ac-ea-af-ed-33')
def _define_FWPM_CONDITION_IP_LOCAL_ADDRESS_TYPE():
    return Guid('6ec7f6c4-376b-45d7-9e-9c-d3-37-ce-dc-d2-37')
def _define_FWPM_CONDITION_IP_DESTINATION_ADDRESS_TYPE():
    return Guid('1ec1b7c9-4eea-4f5e-b9-ef-76-be-aa-af-17-ee')
def _define_FWPM_CONDITION_IP_NEXTHOP_ADDRESS():
    return Guid('eabe448a-a711-4d64-85-b7-3f-76-b6-52-99-c7')
def _define_FWPM_CONDITION_IP_LOCAL_INTERFACE():
    return Guid('4cd62a49-59c3-4969-b7-f3-bd-a5-d3-28-90-a4')
def _define_FWPM_CONDITION_IP_ARRIVAL_INTERFACE():
    return Guid('618a9b6d-386b-4136-ad-6e-b5-15-87-cf-b1-cd')
def _define_FWPM_CONDITION_ARRIVAL_INTERFACE_TYPE():
    return Guid('89f990de-e798-4e6d-ab-76-7c-95-58-29-2e-6f')
def _define_FWPM_CONDITION_ARRIVAL_TUNNEL_TYPE():
    return Guid('511166dc-7a8c-4aa7-b5-33-95-ab-59-fb-03-40')
def _define_FWPM_CONDITION_ARRIVAL_INTERFACE_INDEX():
    return Guid('cc088db3-1792-4a71-b0-f9-03-7d-21-cd-82-8b')
def _define_FWPM_CONDITION_NEXTHOP_SUB_INTERFACE_INDEX():
    return Guid('ef8a6122-0577-45a7-9a-af-82-5f-be-b4-fb-95')
def _define_FWPM_CONDITION_IP_NEXTHOP_INTERFACE():
    return Guid('93ae8f5b-7f6f-4719-98-c8-14-e9-74-29-ef-04')
def _define_FWPM_CONDITION_NEXTHOP_INTERFACE_TYPE():
    return Guid('97537c6c-d9a3-4767-a3-81-e9-42-67-5c-d9-20')
def _define_FWPM_CONDITION_NEXTHOP_TUNNEL_TYPE():
    return Guid('72b1a111-987b-4720-99-dd-c7-c5-76-fa-2d-4c')
def _define_FWPM_CONDITION_NEXTHOP_INTERFACE_INDEX():
    return Guid('138e6888-7ab8-4d65-9e-e8-05-91-bc-f6-a4-94')
def _define_FWPM_CONDITION_ORIGINAL_PROFILE_ID():
    return Guid('46ea1551-2255-492b-80-19-aa-be-ee-34-9f-40')
def _define_FWPM_CONDITION_CURRENT_PROFILE_ID():
    return Guid('ab3033c9-c0e3-4759-93-7d-57-58-c6-5d-4a-e3')
def _define_FWPM_CONDITION_LOCAL_INTERFACE_PROFILE_ID():
    return Guid('4ebf7562-9f18-4d06-99-41-a7-a6-25-74-4d-71')
def _define_FWPM_CONDITION_ARRIVAL_INTERFACE_PROFILE_ID():
    return Guid('cdfe6aab-c083-4142-86-79-c0-8f-95-32-9c-61')
def _define_FWPM_CONDITION_NEXTHOP_INTERFACE_PROFILE_ID():
    return Guid('d7ff9a56-cdaa-472b-84-db-d2-39-63-c1-d1-bf')
def _define_FWPM_CONDITION_REAUTHORIZE_REASON():
    return Guid('11205e8c-11ae-457a-8a-44-47-70-26-dd-76-4a')
def _define_FWPM_CONDITION_ORIGINAL_ICMP_TYPE():
    return Guid('076dfdbe-c56c-4f72-ae-8a-2c-fe-7e-5c-82-86')
def _define_FWPM_CONDITION_IP_PHYSICAL_ARRIVAL_INTERFACE():
    return Guid('da50d5c8-fa0d-4c89-b0-32-6e-62-13-6d-1e-96')
def _define_FWPM_CONDITION_IP_PHYSICAL_NEXTHOP_INTERFACE():
    return Guid('f09bd5ce-5150-48be-b0-98-c2-51-52-fb-1f-92')
def _define_FWPM_CONDITION_INTERFACE_QUARANTINE_EPOCH():
    return Guid('cce68d5e-053b-43a8-9a-6f-33-38-4c-28-e4-f6')
def _define_FWPM_CONDITION_INTERFACE_TYPE():
    return Guid('daf8cd14-e09e-4c93-a5-ae-c5-c1-3b-73-ff-ca')
def _define_FWPM_CONDITION_TUNNEL_TYPE():
    return Guid('77a40437-8779-4868-a2-61-f5-a9-02-f1-c0-cd')
def _define_FWPM_CONDITION_IP_FORWARD_INTERFACE():
    return Guid('1076b8a5-6323-4c5e-98-10-e8-d3-fc-9e-61-36')
def _define_FWPM_CONDITION_IP_PROTOCOL():
    return Guid('3971ef2b-623e-4f9a-8c-b1-6e-79-b8-06-b9-a7')
def _define_FWPM_CONDITION_IP_LOCAL_PORT():
    return Guid('0c1ba1af-5765-453f-af-22-a8-f7-91-ac-77-5b')
def _define_FWPM_CONDITION_IP_REMOTE_PORT():
    return Guid('c35a604d-d22b-4e1a-91-b4-68-f6-74-ee-67-4b')
def _define_FWPM_CONDITION_EMBEDDED_LOCAL_ADDRESS_TYPE():
    return Guid('4672a468-8a0a-4202-ab-b4-84-9e-92-e6-68-09')
def _define_FWPM_CONDITION_EMBEDDED_REMOTE_ADDRESS():
    return Guid('77ee4b39-3273-4671-b6-3b-ab-6f-eb-66-ee-b6')
def _define_FWPM_CONDITION_EMBEDDED_PROTOCOL():
    return Guid('07784107-a29e-4c7b-9e-c7-29-c4-4a-fa-fd-bc')
def _define_FWPM_CONDITION_EMBEDDED_LOCAL_PORT():
    return Guid('bfca394d-acdb-484e-b8-e6-2a-ff-79-75-73-45')
def _define_FWPM_CONDITION_EMBEDDED_REMOTE_PORT():
    return Guid('cae4d6a1-2968-40ed-a4-ce-54-71-60-dd-a8-8d')
def _define_FWPM_CONDITION_FLAGS():
    return Guid('632ce23b-5167-435c-86-d7-e9-03-68-4a-a8-0c')
def _define_FWPM_CONDITION_DIRECTION():
    return Guid('8784c146-ca97-44d6-9f-d1-19-fb-18-40-cb-f7')
def _define_FWPM_CONDITION_INTERFACE_INDEX():
    return Guid('667fd755-d695-434a-8a-f5-d3-83-5a-12-59-bc')
def _define_FWPM_CONDITION_SUB_INTERFACE_INDEX():
    return Guid('0cd42473-d621-4be3-ae-8c-72-a3-48-d2-83-e1')
def _define_FWPM_CONDITION_SOURCE_INTERFACE_INDEX():
    return Guid('2311334d-c92d-45bf-94-96-ed-f4-47-82-0e-2d')
def _define_FWPM_CONDITION_SOURCE_SUB_INTERFACE_INDEX():
    return Guid('055edd9d-acd2-4361-8d-ab-f9-52-5d-97-66-2f')
def _define_FWPM_CONDITION_DESTINATION_INTERFACE_INDEX():
    return Guid('35cf6522-4139-45ee-a0-d5-67-b8-09-49-d8-79')
def _define_FWPM_CONDITION_DESTINATION_SUB_INTERFACE_INDEX():
    return Guid('2b7d4399-d4c7-4738-a2-f5-e9-94-b4-3d-a3-88')
def _define_FWPM_CONDITION_ALE_APP_ID():
    return Guid('d78e1e87-8644-4ea5-94-37-d8-09-ec-ef-c9-71')
def _define_FWPM_CONDITION_ALE_ORIGINAL_APP_ID():
    return Guid('0e6cd086-e1fb-4212-84-2f-8a-9f-99-3f-b3-f6')
def _define_FWPM_CONDITION_ALE_USER_ID():
    return Guid('af043a0a-b34d-4f86-97-9c-c9-03-71-af-6e-66')
def _define_FWPM_CONDITION_ALE_REMOTE_USER_ID():
    return Guid('f63073b7-0189-4ab0-95-a4-61-23-cb-fa-b8-62')
def _define_FWPM_CONDITION_ALE_REMOTE_MACHINE_ID():
    return Guid('1aa47f51-7f93-4508-a2-71-81-ab-b0-0c-9c-ab')
def _define_FWPM_CONDITION_ALE_PROMISCUOUS_MODE():
    return Guid('1c974776-7182-46e9-af-d3-b0-29-10-e3-03-34')
def _define_FWPM_CONDITION_ALE_SIO_FIREWALL_SYSTEM_PORT():
    return Guid('b9f4e088-cb98-4efb-a2-c7-ad-07-33-26-43-db')
def _define_FWPM_CONDITION_ALE_REAUTH_REASON():
    return Guid('b482d227-1979-4a98-80-44-18-bb-e6-23-75-42')
def _define_FWPM_CONDITION_ALE_NAP_CONTEXT():
    return Guid('46275a9d-c03f-4d77-b7-84-1c-57-f4-d0-27-53')
def _define_FWPM_CONDITION_KM_AUTH_NAP_CONTEXT():
    return Guid('35d0ea0e-15ca-492b-90-0e-97-fd-46-35-2c-ce')
def _define_FWPM_CONDITION_REMOTE_USER_TOKEN():
    return Guid('9bf0ee66-06c9-41b9-84-da-28-8c-b4-3a-f5-1f')
def _define_FWPM_CONDITION_RPC_IF_UUID():
    return Guid('7c9c7d9f-0075-4d35-a0-d1-83-11-c4-cf-6a-f1')
def _define_FWPM_CONDITION_RPC_IF_VERSION():
    return Guid('eabfd9b7-1262-4a2e-ad-aa-5f-96-f6-fe-32-6d')
def _define_FWPM_CONDITION_RPC_IF_FLAG():
    return Guid('238a8a32-3199-467d-87-1c-27-26-21-ab-38-96')
def _define_FWPM_CONDITION_DCOM_APP_ID():
    return Guid('ff2e7b4d-3112-4770-b6-36-4d-24-ae-3a-6a-f2')
def _define_FWPM_CONDITION_IMAGE_NAME():
    return Guid('d024de4d-deaa-4317-9c-85-e4-0e-f6-e1-40-c3')
def _define_FWPM_CONDITION_RPC_PROTOCOL():
    return Guid('2717bc74-3a35-4ce7-b7-ef-c8-38-fa-bd-ec-45')
def _define_FWPM_CONDITION_RPC_AUTH_TYPE():
    return Guid('daba74ab-0d67-43e7-98-6e-75-b8-4f-82-f5-94')
def _define_FWPM_CONDITION_RPC_AUTH_LEVEL():
    return Guid('e5a0aed5-59ac-46ea-be-05-a5-f0-5e-cf-44-6e')
def _define_FWPM_CONDITION_SEC_ENCRYPT_ALGORITHM():
    return Guid('0d306ef0-e974-4f74-b5-c7-59-1b-0d-a7-d5-62')
def _define_FWPM_CONDITION_SEC_KEY_SIZE():
    return Guid('4772183b-ccf8-4aeb-bc-e1-c6-c6-16-1c-8f-e4')
def _define_FWPM_CONDITION_IP_LOCAL_ADDRESS_V4():
    return Guid('03a629cb-6e52-49f8-9c-41-57-09-63-3c-09-cf')
def _define_FWPM_CONDITION_IP_LOCAL_ADDRESS_V6():
    return Guid('2381be84-7524-45b3-a0-5b-1e-63-7d-9c-7a-6a')
def _define_FWPM_CONDITION_PIPE():
    return Guid('1bd0741d-e3df-4e24-86-34-76-20-46-ee-f6-eb')
def _define_FWPM_CONDITION_IP_REMOTE_ADDRESS_V4():
    return Guid('1febb610-3bcc-45e1-bc-36-2e-06-7e-2c-b1-86')
def _define_FWPM_CONDITION_IP_REMOTE_ADDRESS_V6():
    return Guid('246e1d8c-8bee-4018-9b-98-31-d4-58-2f-33-61')
def _define_FWPM_CONDITION_PROCESS_WITH_RPC_IF_UUID():
    return Guid('e31180a8-bbbd-4d14-a6-5e-71-57-b0-62-33-bb')
def _define_FWPM_CONDITION_RPC_EP_VALUE():
    return Guid('dccea0b9-0886-4360-9c-6a-ab-04-3a-24-fb-a9')
def _define_FWPM_CONDITION_RPC_EP_FLAGS():
    return Guid('218b814a-0a39-49b8-8e-71-c2-0c-39-c7-dd-2e')
def _define_FWPM_CONDITION_CLIENT_TOKEN():
    return Guid('c228fc1e-403a-4478-be-05-c9-ba-a4-c0-5a-ce')
def _define_FWPM_CONDITION_RPC_SERVER_NAME():
    return Guid('b605a225-c3b3-48c7-98-33-7a-ef-a9-52-75-46')
def _define_FWPM_CONDITION_RPC_SERVER_PORT():
    return Guid('8090f645-9ad5-4e3b-9f-9f-80-23-ca-09-79-09')
def _define_FWPM_CONDITION_RPC_PROXY_AUTH_TYPE():
    return Guid('40953fe2-8565-4759-84-88-17-71-b4-b4-b5-db')
def _define_FWPM_CONDITION_CLIENT_CERT_KEY_LENGTH():
    return Guid('a3ec00c7-05f4-4df7-91-f2-5f-60-d9-1f-f4-43')
def _define_FWPM_CONDITION_CLIENT_CERT_OID():
    return Guid('c491ad5e-f882-4283-b9-16-43-6b-10-3f-f4-ad')
def _define_FWPM_CONDITION_NET_EVENT_TYPE():
    return Guid('206e9996-490e-40cf-b8-31-b3-86-41-eb-6f-cb')
def _define_FWPM_CONDITION_PEER_NAME():
    return Guid('9b539082-eb90-4186-a6-cc-de-5b-63-23-50-16')
def _define_FWPM_CONDITION_REMOTE_ID():
    return Guid('f68166fd-0682-4c89-b8-f5-86-43-6c-7e-f9-b7')
def _define_FWPM_CONDITION_AUTHENTICATION_TYPE():
    return Guid('eb458cd5-da7b-4ef9-8d-43-7b-0a-84-03-32-f2')
def _define_FWPM_CONDITION_KM_TYPE():
    return Guid('ff0f5f49-0ceb-481b-86-38-14-79-79-1f-3f-2c')
def _define_FWPM_CONDITION_KM_MODE():
    return Guid('feef4582-ef8f-4f7b-85-8b-90-77-d1-22-de-47')
def _define_FWPM_CONDITION_IPSEC_POLICY_KEY():
    return Guid('ad37dee3-722f-45cc-a4-e3-06-80-48-12-44-52')
def _define_FWPM_CONDITION_QM_MODE():
    return Guid('f64fc6d1-f9cb-43d2-8a-5f-e1-3b-c8-94-f2-65')
def _define_FWPM_CONDITION_COMPARTMENT_ID():
    return Guid('35a791ab-04ac-4ff2-a6-bb-da-6c-fa-c7-18-06')
def _define_FWPM_CONDITION_RESERVED0():
    return Guid('678f4deb-45af-4882-93-fe-19-d4-72-9d-98-34')
def _define_FWPM_CONDITION_RESERVED1():
    return Guid('d818f827-5c69-48eb-bf-80-d8-6b-17-75-5f-97')
def _define_FWPM_CONDITION_RESERVED2():
    return Guid('53d4123d-e15b-4e84-b7-a8-dc-e1-6f-7b-62-d9')
def _define_FWPM_CONDITION_RESERVED3():
    return Guid('7f6e8ca3-6606-4932-97-c7-e1-f2-07-10-af-3b')
def _define_FWPM_CONDITION_RESERVED4():
    return Guid('5f58e642-b937-495e-a9-4b-f6-b0-51-a4-92-50')
def _define_FWPM_CONDITION_RESERVED5():
    return Guid('9ba8f6cd-f77c-43e6-88-47-11-93-9d-c5-db-5a')
def _define_FWPM_CONDITION_RESERVED6():
    return Guid('f13d84bd-59d5-44c4-88-17-5e-cd-ae-18-05-bd')
def _define_FWPM_CONDITION_RESERVED7():
    return Guid('65a0f930-45dd-4983-aa-33-ef-c7-b6-11-af-08')
def _define_FWPM_CONDITION_RESERVED8():
    return Guid('4f424974-0c12-4816-9b-47-9a-54-7d-b3-9a-32')
def _define_FWPM_CONDITION_RESERVED9():
    return Guid('ce78e10f-13ff-4c70-86-43-36-ad-18-79-af-a3')
def _define_FWPM_CONDITION_RESERVED10():
    return Guid('b979e282-d621-4c8c-b1-84-b1-05-a6-1c-36-ce')
def _define_FWPM_CONDITION_RESERVED11():
    return Guid('2d62ee4d-023d-411f-95-82-43-ac-bb-79-59-75')
def _define_FWPM_CONDITION_RESERVED12():
    return Guid('a3677c32-7e35-4ddc-93-da-e8-c3-3f-c9-23-c7')
def _define_FWPM_CONDITION_RESERVED13():
    return Guid('335a3e90-84aa-42f5-9e-6f-59-30-95-36-a4-4c')
def _define_FWPM_CONDITION_RESERVED14():
    return Guid('30e44da2-2f1a-4116-a5-59-f9-07-de-83-60-4a')
def _define_FWPM_CONDITION_RESERVED15():
    return Guid('bab8340f-afe0-43d1-80-d8-5c-a4-56-96-2d-e3')
def _define_FWPM_PROVIDER_IKEEXT():
    return Guid('10ad9216-ccde-456c-8b-16-e9-f0-4e-60-a9-0b')
def _define_FWPM_PROVIDER_IPSEC_DOSP_CONFIG():
    return Guid('3c6c05a9-c05c-4bb9-83-38-23-27-81-4c-e8-bf')
def _define_FWPM_PROVIDER_TCP_CHIMNEY_OFFLOAD():
    return Guid('896aa19e-9a34-4bcb-ae-79-be-b9-12-7c-84-b9')
def _define_FWPM_PROVIDER_TCP_TEMPLATES():
    return Guid('76cfcd30-3394-432d-be-d3-44-1a-e5-0e-63-c3')
def _define_FWPM_PROVIDER_MPSSVC_WSH():
    return Guid('4b153735-1049-4480-aa-b4-d1-b9-bd-c0-37-10')
def _define_FWPM_PROVIDER_MPSSVC_WF():
    return Guid('decc16ca-3f33-4346-be-1e-8f-b4-ae-0f-3d-62')
def _define_FWPM_PROVIDER_MPSSVC_EDP():
    return Guid('a90296f7-46b8-4457-8f-84-b0-5e-05-d3-c6-22')
def _define_FWPM_PROVIDER_MPSSVC_TENANT_RESTRICTIONS():
    return Guid('d0718ff9-44da-4f50-9d-c2-c9-63-a4-24-76-13')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V4():
    return Guid('5132900d-5e84-4b5f-80-e4-01-74-1e-81-ff-10')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V6():
    return Guid('49d3ac92-2a6c-4dcf-95-5f-1c-3b-e0-09-dd-99')
def _define_FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V4():
    return Guid('4b46bf0a-4523-4e57-aa-38-a8-79-87-c9-10-d9')
def _define_FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V6():
    return Guid('38d87722-ad83-4f11-a9-1f-df-0f-b0-77-22-5b')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V4():
    return Guid('191a8a46-0bf8-46cf-b0-45-4b-45-df-a6-a3-24')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V6():
    return Guid('80c342e3-1e53-4d6f-9b-44-03-df-5a-ee-e1-54')
def _define_FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V4():
    return Guid('70a4196c-835b-4fb0-98-e8-07-5f-4d-97-7d-46')
def _define_FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V6():
    return Guid('f1835363-a6a5-4e62-b1-80-23-db-78-9d-8d-a6')
def _define_FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V4():
    return Guid('28829633-c4f0-4e66-87-3f-84-4d-b2-a8-99-c7')
def _define_FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V6():
    return Guid('af50bec2-c686-429a-88-4d-b7-44-43-e7-b0-b4')
def _define_FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V4():
    return Guid('fb532136-15cb-440b-93-7c-17-17-ca-32-0c-40')
def _define_FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V6():
    return Guid('dae640cc-e021-4bee-9e-b6-a4-8b-27-5c-8c-1d')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V4():
    return Guid('7dff309b-ba7d-4aba-91-aa-ae-5c-66-40-c9-44')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V6():
    return Guid('a9a0d6d9-c58c-474e-8a-eb-3c-fe-99-d6-d5-3d')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V4():
    return Guid('3df6e7de-fd20-48f2-9f-26-f8-54-44-4c-ba-79')
def _define_FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V6():
    return Guid('a1e392d3-72ac-47bb-87-a7-01-22-c6-94-34-ab')
def _define_FWPM_CALLOUT_IPSEC_ALE_CONNECT_V4():
    return Guid('6ac141fc-f75d-4203-b9-c8-48-e6-14-9c-27-12')
def _define_FWPM_CALLOUT_IPSEC_ALE_CONNECT_V6():
    return Guid('4c0dda05-e31f-4666-90-b0-b3-df-ad-34-12-9a')
def _define_FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V6():
    return Guid('6d08a342-db9e-4fbe-9e-d2-57-37-4c-e8-9f-79')
def _define_FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V4():
    return Guid('2fcb56ec-cd37-4b4f-b1-08-62-c2-b1-85-0a-0c')
def _define_FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V4_SILENT_DROP():
    return Guid('eda08606-2494-4d78-89-bc-67-83-7c-03-b9-69')
def _define_FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V6_SILENT_DROP():
    return Guid('8693cc74-a075-4156-b4-76-92-86-ee-ce-81-4e')
def _define_FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V4():
    return Guid('f3e10ab3-2c25-4279-ac-36-c3-0f-c1-81-be-c4')
def _define_FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V6():
    return Guid('39e22085-a341-42fc-a2-79-ae-c9-4e-68-9c-56')
def _define_FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V4():
    return Guid('e183ecb2-3a7f-4b54-8a-d9-76-05-0e-d8-80-ca')
def _define_FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V6():
    return Guid('0378cf41-bf98-4603-81-f2-7f-12-58-60-79-f6')
def _define_FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V4():
    return Guid('bc582280-1677-41e9-94-ab-c2-fc-b1-5c-2e-eb')
def _define_FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V6():
    return Guid('98e5373c-b884-490f-b6-5f-2f-6a-4a-57-51-95')
def _define_FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V4():
    return Guid('2d55f008-0c01-4f92-b2-6e-a0-8a-94-56-9b-8d')
def _define_FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V6():
    return Guid('63018537-f281-4dc4-83-d3-8d-ec-18-b7-ad-e2')
def _define_FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4():
    return Guid('288b524d-0566-4e19-b6-12-8f-44-1a-2e-59-49')
def _define_FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V6():
    return Guid('00b84b92-2b5e-4b71-ab-0e-aa-ca-43-e3-87-e6')
def _define_FWPM_CALLOUT_TEREDO_ALE_RESOURCE_ASSIGNMENT_V6():
    return Guid('31b95392-066e-42a2-b7-db-92-f8-ac-dd-56-f9')
def _define_FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V4():
    return Guid('079b1010-f1c5-4fcd-ae-05-da-41-10-7a-bd-0b')
def _define_FWPM_CALLOUT_TEREDO_ALE_LISTEN_V6():
    return Guid('81a434e7-f60c-4378-ba-b8-c6-25-a3-0f-01-97')
def _define_FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V4():
    return Guid('33486ab5-6d5e-4e65-a0-0b-a7-af-ed-0b-a9-a1')
def _define_FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V4():
    return Guid('215a0b39-4b7e-4eda-8c-e4-17-96-79-df-62-24')
def _define_FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V6():
    return Guid('838b37a1-5c12-4d34-8b-38-07-87-28-b2-d2-5c')
def _define_FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V4():
    return Guid('2f23f5d0-40c4-4c41-a2-54-46-d8-db-a8-95-7c')
def _define_FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V6():
    return Guid('b25152f0-991c-4f53-bb-e7-d2-4b-45-fe-63-2c')
def _define_FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V4():
    return Guid('5fbfc31d-a51c-44dc-ac-b6-06-24-a0-30-a7-00')
def _define_FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V6():
    return Guid('5fbfc31d-a51c-44dc-ac-b6-06-24-a0-30-a7-01')
def _define_FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V4():
    return Guid('5fbfc31d-a51c-44dc-ac-b6-06-24-a0-30-a7-02')
def _define_FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V6():
    return Guid('5fbfc31d-a51c-44dc-ac-b6-06-24-a0-30-a7-03')
def _define_FWPM_CALLOUT_HTTP_TEMPLATE_SSL_HANDSHAKE():
    return Guid('b3423249-8d09-4858-92-10-95-c7-fd-a8-e3-0f')
def _define_FWPM_CALLOUT_BUILT_IN_RESERVED_1():
    return Guid('779719a4-e695-47b6-a1-99-79-99-fe-c9-16-3b')
def _define_FWPM_CALLOUT_BUILT_IN_RESERVED_2():
    return Guid('ef9661b6-7c5e-48fd-a1-30-96-67-8c-ea-cc-41')
def _define_FWPM_CALLOUT_BUILT_IN_RESERVED_3():
    return Guid('18729c7a-2f62-4be0-96-6f-97-4b-21-b8-6d-f1')
def _define_FWPM_CALLOUT_BUILT_IN_RESERVED_4():
    return Guid('6c3fb801-daff-40e9-91-e6-f7-ff-7e-52-f7-d9')
def _define_FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_AUTHIP():
    return Guid('b25ea800-0d02-46ed-92-bd-7f-a8-4b-b7-3e-9d')
def _define_FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_IPSEC():
    return Guid('8c2d4144-f8e0-42c0-94-ce-7c-cf-c6-3b-2f-9b')
def _define_FWPM_KEYING_MODULE_IKE():
    return Guid('a9bbf787-82a8-45bb-a4-00-5d-7e-59-52-c7-a9')
def _define_FWPM_KEYING_MODULE_AUTHIP():
    return Guid('11e3dae0-dd26-4590-85-7d-ab-4b-28-d1-a0-95')
def _define_FWPM_KEYING_MODULE_IKEV2():
    return Guid('041792cc-8f07-419d-a3-94-71-69-68-cb-16-47')
FWPM_AUTO_WEIGHT_BITS = 60
FWPM_WEIGHT_RANGE_IPSEC = 0
FWPM_WEIGHT_RANGE_IKE_EXEMPTIONS = 12
FWPM_ACTRL_ADD = 1
FWPM_ACTRL_ADD_LINK = 2
FWPM_ACTRL_BEGIN_READ_TXN = 4
FWPM_ACTRL_BEGIN_WRITE_TXN = 8
FWPM_ACTRL_CLASSIFY = 16
FWPM_ACTRL_ENUM = 32
FWPM_ACTRL_OPEN = 64
FWPM_ACTRL_READ = 128
FWPM_ACTRL_READ_STATS = 256
FWPM_ACTRL_SUBSCRIBE = 512
FWPM_ACTRL_WRITE = 1024
FWPM_TXN_READ_ONLY = 1
FWPM_TUNNEL_FLAG_POINT_TO_POINT = 1
FWPM_TUNNEL_FLAG_ENABLE_VIRTUAL_IF_TUNNELING = 2
FWPM_TUNNEL_FLAG_RESERVED0 = 4
FWPS_METADATA_FIELD_DISCARD_REASON = 1
FWPS_METADATA_FIELD_FLOW_HANDLE = 2
FWPS_METADATA_FIELD_IP_HEADER_SIZE = 4
FWPS_METADATA_FIELD_PROCESS_PATH = 8
FWPS_METADATA_FIELD_TOKEN = 16
FWPS_METADATA_FIELD_PROCESS_ID = 32
FWPS_METADATA_FIELD_SYSTEM_FLAGS = 64
FWPS_METADATA_FIELD_RESERVED = 128
FWPS_METADATA_FIELD_SOURCE_INTERFACE_INDEX = 256
FWPS_METADATA_FIELD_DESTINATION_INTERFACE_INDEX = 512
FWPS_METADATA_FIELD_TRANSPORT_HEADER_SIZE = 1024
FWPS_METADATA_FIELD_COMPARTMENT_ID = 2048
FWPS_METADATA_FIELD_FRAGMENT_DATA = 4096
FWPS_METADATA_FIELD_PATH_MTU = 8192
FWPS_METADATA_FIELD_COMPLETION_HANDLE = 16384
FWPS_METADATA_FIELD_TRANSPORT_ENDPOINT_HANDLE = 32768
FWPS_METADATA_FIELD_TRANSPORT_CONTROL_DATA = 65536
FWPS_METADATA_FIELD_REMOTE_SCOPE_ID = 131072
FWPS_METADATA_FIELD_PACKET_DIRECTION = 262144
FWPS_METADATA_FIELD_PACKET_SYSTEM_CRITICAL = 524288
FWPS_METADATA_FIELD_FORWARD_LAYER_OUTBOUND_PASS_THRU = 1048576
FWPS_METADATA_FIELD_FORWARD_LAYER_INBOUND_PASS_THRU = 2097152
FWPS_METADATA_FIELD_ALE_CLASSIFY_REQUIRED = 4194304
FWPS_METADATA_FIELD_TRANSPORT_HEADER_INCLUDE_HEADER = 8388608
FWPS_METADATA_FIELD_DESTINATION_PREFIX = 16777216
FWPS_METADATA_FIELD_ETHER_FRAME_LENGTH = 33554432
FWPS_METADATA_FIELD_PARENT_ENDPOINT_HANDLE = 67108864
FWPS_METADATA_FIELD_ICMP_ID_AND_SEQUENCE = 134217728
FWPS_METADATA_FIELD_LOCAL_REDIRECT_TARGET_PID = 268435456
FWPS_METADATA_FIELD_ORIGINAL_DESTINATION = 536870912
FWPS_METADATA_FIELD_REDIRECT_RECORD_HANDLE = 1073741824
FWPS_METADATA_FIELD_SUB_PROCESS_TAG = 2147483648
FWPS_L2_METADATA_FIELD_ETHERNET_MAC_HEADER_SIZE = 1
FWPS_L2_METADATA_FIELD_WIFI_OPERATION_MODE = 2
FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_PORT_ID = 4
FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_NIC_INDEX = 8
FWPS_L2_METADATA_FIELD_VSWITCH_PACKET_CONTEXT = 16
FWPS_L2_METADATA_FIELD_VSWITCH_DESTINATION_PORT_ID = 32
FWPS_L2_METADATA_FIELD_RESERVED = 2147483648
def _define_FwpmFreeMemory0():
    try:
        return WINFUNCTYPE(Void,POINTER(c_void_p))(('FwpmFreeMemory0', windll['fwpuclnt.dll']), ((1, 'p'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmEngineOpen0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.System.Rpc.SEC_WINNT_AUTH_IDENTITY_W_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SESSION0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmEngineOpen0', windll['fwpuclnt.dll']), ((1, 'serverName'),(1, 'authnService'),(1, 'authIdentity'),(1, 'session'),(1, 'engineHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmEngineClose0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE)(('FwpmEngineClose0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmEngineGetOption0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_ENGINE_OPTION,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0_head)))(('FwpmEngineGetOption0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'option'),(1, 'value'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmEngineSetOption0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_ENGINE_OPTION,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0_head))(('FwpmEngineSetOption0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'option'),(1, 'newValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmEngineGetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmEngineGetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmEngineSetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmEngineSetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSessionCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SESSION_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmSessionCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSessionEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SESSION0_head))),POINTER(UInt32))(('FwpmSessionEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSessionDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmSessionDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmTransactionBegin0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32)(('FwpmTransactionBegin0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'flags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmTransactionCommit0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE)(('FwpmTransactionCommit0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmTransactionAbort0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE)(('FwpmTransactionAbort0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderAdd0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER0_head),win32more.Security.PSECURITY_DESCRIPTOR)(('FwpmProviderAdd0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'provider'),(1, 'sd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderDeleteByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid))(('FwpmProviderDeleteByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderGetByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER0_head)))(('FwpmProviderGetByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'provider'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmProviderCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER0_head))),POINTER(UInt32))(('FwpmProviderEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmProviderDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderGetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmProviderGetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderSetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmProviderSetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderSubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CHANGE_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmProviderSubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderUnsubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmProviderUnsubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderSubscriptionsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_SUBSCRIPTION0_head))),POINTER(UInt32))(('FwpmProviderSubscriptionsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextAdd0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT0_head),win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt64))(('FwpmProviderContextAdd0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'providerContext'),(1, 'sd'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextAdd1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT1_head),win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt64))(('FwpmProviderContextAdd1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'providerContext'),(1, 'sd'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextAdd2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT2_head),win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt64))(('FwpmProviderContextAdd2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'providerContext'),(1, 'sd'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextAdd3():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT3_head),win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt64))(('FwpmProviderContextAdd3', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'providerContext'),(1, 'sd'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextDeleteById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64)(('FwpmProviderContextDeleteById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextDeleteByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid))(('FwpmProviderContextDeleteByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT0_head)))(('FwpmProviderContextGetById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetById1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT1_head)))(('FwpmProviderContextGetById1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetById2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT2_head)))(('FwpmProviderContextGetById2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetById3():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT3_head)))(('FwpmProviderContextGetById3', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT0_head)))(('FwpmProviderContextGetByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetByKey1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT1_head)))(('FwpmProviderContextGetByKey1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetByKey2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT2_head)))(('FwpmProviderContextGetByKey2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetByKey3():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT3_head)))(('FwpmProviderContextGetByKey3', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'providerContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmProviderContextCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT0_head))),POINTER(UInt32))(('FwpmProviderContextEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextEnum1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT1_head))),POINTER(UInt32))(('FwpmProviderContextEnum1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextEnum2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT2_head))),POINTER(UInt32))(('FwpmProviderContextEnum2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextEnum3():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT3_head))),POINTER(UInt32))(('FwpmProviderContextEnum3', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmProviderContextDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextGetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmProviderContextGetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextSetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmProviderContextSetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextSubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmProviderContextSubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextUnsubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmProviderContextUnsubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmProviderContextSubscriptionsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0_head))),POINTER(UInt32))(('FwpmProviderContextSubscriptionsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerAdd0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER0_head),win32more.Security.PSECURITY_DESCRIPTOR)(('FwpmSubLayerAdd0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subLayer'),(1, 'sd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerDeleteByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid))(('FwpmSubLayerDeleteByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerGetByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER0_head)))(('FwpmSubLayerGetByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'subLayer'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmSubLayerCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER0_head))),POINTER(UInt32))(('FwpmSubLayerEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmSubLayerDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerGetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmSubLayerGetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerSetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmSubLayerSetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerSubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_CHANGE_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmSubLayerSubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerUnsubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmSubLayerUnsubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSubLayerSubscriptionsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_SUBSCRIPTION0_head))),POINTER(UInt32))(('FwpmSubLayerSubscriptionsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmLayerGetById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt16,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER0_head)))(('FwpmLayerGetById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'layer'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmLayerGetByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER0_head)))(('FwpmLayerGetByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'layer'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmLayerCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmLayerCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmLayerEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER0_head))),POINTER(UInt32))(('FwpmLayerEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmLayerDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmLayerDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmLayerGetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmLayerGetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmLayerSetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmLayerSetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutAdd0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT0_head),win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt32))(('FwpmCalloutAdd0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'callout'),(1, 'sd'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutDeleteById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32)(('FwpmCalloutDeleteById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutDeleteByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid))(('FwpmCalloutDeleteByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutGetById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT0_head)))(('FwpmCalloutGetById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'callout'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutGetByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT0_head)))(('FwpmCalloutGetByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'callout'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmCalloutCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT0_head))),POINTER(UInt32))(('FwpmCalloutEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmCalloutDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutGetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmCalloutGetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutSetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmCalloutSetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutSubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_CHANGE_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmCalloutSubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutUnsubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmCalloutUnsubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmCalloutSubscriptionsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_SUBSCRIPTION0_head))),POINTER(UInt32))(('FwpmCalloutSubscriptionsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterAdd0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER0_head),win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt64))(('FwpmFilterAdd0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'filter'),(1, 'sd'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterDeleteById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64)(('FwpmFilterDeleteById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterDeleteByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid))(('FwpmFilterDeleteByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterGetById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER0_head)))(('FwpmFilterGetById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'filter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterGetByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER0_head)))(('FwpmFilterGetByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'filter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmFilterCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER0_head))),POINTER(UInt32))(('FwpmFilterEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmFilterDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterGetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmFilterGetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterSetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmFilterSetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterSubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CHANGE_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmFilterSubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterUnsubscribeChanges0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmFilterUnsubscribeChanges0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'changeHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmFilterSubscriptionsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_SUBSCRIPTION0_head))),POINTER(UInt32))(('FwpmFilterSubscriptionsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmGetAppIdFromFileName0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)))(('FwpmGetAppIdFromFileName0', windll['fwpuclnt.dll']), ((1, 'fileName'),(1, 'appId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmIPsecTunnelAdd0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT0_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT0_head),UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head),win32more.Security.PSECURITY_DESCRIPTOR)(('FwpmIPsecTunnelAdd0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'flags'),(1, 'mainModePolicy'),(1, 'tunnelPolicy'),(1, 'numFilterConditions'),(1, 'filterConditions'),(1, 'sd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmIPsecTunnelAdd1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT1_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT1_head),UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head),POINTER(Guid),win32more.Security.PSECURITY_DESCRIPTOR)(('FwpmIPsecTunnelAdd1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'flags'),(1, 'mainModePolicy'),(1, 'tunnelPolicy'),(1, 'numFilterConditions'),(1, 'filterConditions'),(1, 'keyModKey'),(1, 'sd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmIPsecTunnelAdd2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT2_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT2_head),UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head),POINTER(Guid),win32more.Security.PSECURITY_DESCRIPTOR)(('FwpmIPsecTunnelAdd2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'flags'),(1, 'mainModePolicy'),(1, 'tunnelPolicy'),(1, 'numFilterConditions'),(1, 'filterConditions'),(1, 'keyModKey'),(1, 'sd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmIPsecTunnelAdd3():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT3_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT3_head),UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head),POINTER(Guid),win32more.Security.PSECURITY_DESCRIPTOR)(('FwpmIPsecTunnelAdd3', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'flags'),(1, 'mainModePolicy'),(1, 'tunnelPolicy'),(1, 'numFilterConditions'),(1, 'filterConditions'),(1, 'keyModKey'),(1, 'sd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmIPsecTunnelDeleteByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid))(('FwpmIPsecTunnelDeleteByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'key'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecGetStatistics0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_STATISTICS0_head))(('IPsecGetStatistics0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'ipsecStatistics'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecGetStatistics1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_STATISTICS1_head))(('IPsecGetStatistics1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'ipsecStatistics'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextCreate0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC0_head),POINTER(UInt64),POINTER(UInt64))(('IPsecSaContextCreate0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'outboundTraffic'),(1, 'inboundFilterId'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextCreate1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC1_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_VIRTUAL_IF_TUNNEL_INFO0_head),POINTER(UInt64),POINTER(UInt64))(('IPsecSaContextCreate1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'outboundTraffic'),(1, 'virtualIfTunnelInfo'),(1, 'inboundFilterId'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextDeleteById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64)(('IPsecSaContextDeleteById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextGetById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT0_head)))(('IPsecSaContextGetById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'saContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextGetById1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT1_head)))(('IPsecSaContextGetById1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'saContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextGetSpi0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_GETSPI0_head),POINTER(UInt32))(('IPsecSaContextGetSpi0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'getSpi'),(1, 'inboundSpi'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextGetSpi1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_GETSPI1_head),POINTER(UInt32))(('IPsecSaContextGetSpi1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'getSpi'),(1, 'inboundSpi'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextSetSpi0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_GETSPI1_head),UInt32)(('IPsecSaContextSetSpi0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'getSpi'),(1, 'inboundSpi'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextAddInbound0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE0_head))(('IPsecSaContextAddInbound0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'inboundBundle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextAddOutbound0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE0_head))(('IPsecSaContextAddOutbound0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'outboundBundle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextAddInbound1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE1_head))(('IPsecSaContextAddInbound1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'inboundBundle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextAddOutbound1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE1_head))(('IPsecSaContextAddOutbound1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'outboundBundle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextExpire0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64)(('IPsecSaContextExpire0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextUpdate0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT1_head))(('IPsecSaContextUpdate0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'flags'),(1, 'newValues'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('IPsecSaContextCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT0_head))),POINTER(UInt32))(('IPsecSaContextEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextEnum1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT1_head))),POINTER(UInt32))(('IPsecSaContextEnum1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('IPsecSaContextDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextSubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('IPsecSaContextSubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextUnsubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('IPsecSaContextUnsubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaContextSubscriptionsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_SUBSCRIPTION0_head))),POINTER(UInt32))(('IPsecSaContextSubscriptionsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('IPsecSaCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS0_head))),POINTER(UInt32))(('IPsecSaEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaEnum1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head))),POINTER(UInt32))(('IPsecSaEnum1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('IPsecSaDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaDbGetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('IPsecSaDbGetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecSaDbSetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('IPsecSaDbSetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecDospGetStatistics0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_STATISTICS0_head))(('IPsecDospGetStatistics0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'idpStatistics'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecDospStateCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_STATE_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('IPsecDospStateCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecDospStateEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_STATE0_head))),POINTER(UInt32))(('IPsecDospStateEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecDospStateDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('IPsecDospStateDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecDospGetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('IPsecDospGetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecDospSetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('IPsecDospSetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecKeyManagerAddAndRegister0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER0_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER_CALLBACKS0_head),POINTER(win32more.Foundation.HANDLE))(('IPsecKeyManagerAddAndRegister0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'keyManager'),(1, 'keyManagerCallbacks'),(1, 'keyMgmtHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecKeyManagerUnregisterAndDelete0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('IPsecKeyManagerUnregisterAndDelete0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'keyMgmtHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecKeyManagersGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER0_head))),POINTER(UInt32))(('IPsecKeyManagersGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecKeyManagerGetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,c_void_p,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('IPsecKeyManagerGetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'reserved'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IPsecKeyManagerSetSecurityInfoByKey0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,c_void_p,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('IPsecKeyManagerSetSecurityInfoByKey0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'reserved'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextGetStatistics0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_STATISTICS0_head))(('IkeextGetStatistics0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'ikeextStatistics'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextGetStatistics1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_STATISTICS1_head))(('IkeextGetStatistics1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'ikeextStatistics'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaDeleteById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64)(('IkeextSaDeleteById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaGetById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS0_head)))(('IkeextSaGetById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'sa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaGetById1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS1_head)))(('IkeextSaGetById1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'saLookupContext'),(1, 'sa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaGetById2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(Guid),POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS2_head)))(('IkeextSaGetById2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'saLookupContext'),(1, 'sa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('IkeextSaCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS0_head))),POINTER(UInt32))(('IkeextSaEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaEnum1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS1_head))),POINTER(UInt32))(('IkeextSaEnum1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaEnum2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS2_head))),POINTER(UInt32))(('IkeextSaEnum2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('IkeextSaDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaDbGetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('IkeextSaDbGetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IkeextSaDbSetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('IkeextSaDbSetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmNetEventCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT0_head))),POINTER(UInt32))(('FwpmNetEventEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventEnum1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT1_head))),POINTER(UInt32))(('FwpmNetEventEnum1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventEnum2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT2_head))),POINTER(UInt32))(('FwpmNetEventEnum2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventEnum3():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT3_head))),POINTER(UInt32))(('FwpmNetEventEnum3', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventEnum4():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT4_head))),POINTER(UInt32))(('FwpmNetEventEnum4', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventEnum5():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT5_head))),POINTER(UInt32))(('FwpmNetEventEnum5', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmNetEventDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventsGetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmNetEventsGetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventsSetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmNetEventsSetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventSubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmNetEventSubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventUnsubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmNetEventUnsubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventSubscriptionsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_SUBSCRIPTION0_head))),POINTER(UInt32))(('FwpmNetEventSubscriptionsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'entries'),(1, 'numEntries'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventSubscribe1():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CALLBACK1,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmNetEventSubscribe1', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventSubscribe2():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CALLBACK2,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmNetEventSubscribe2', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventSubscribe3():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CALLBACK3,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmNetEventSubscribe3', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmNetEventSubscribe4():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CALLBACK4,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmNetEventSubscribe4', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmDynamicKeywordSubscribe0():
    try:
        return WINFUNCTYPE(UInt32,UInt32,win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DYNAMIC_KEYWORD_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmDynamicKeywordSubscribe0', windll['fwpuclnt.dll']), ((1, 'flags'),(1, 'callback'),(1, 'context'),(1, 'subscriptionHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmDynamicKeywordUnsubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE)(('FwpmDynamicKeywordUnsubscribe0', windll['fwpuclnt.dll']), ((1, 'subscriptionHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSystemPortsGet0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SYSTEM_PORTS0_head)))(('FwpmSystemPortsGet0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'sysPorts'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSystemPortsSubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,c_void_p,win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SYSTEM_PORTS_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmSystemPortsSubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'reserved'),(1, 'callback'),(1, 'context'),(1, 'sysPortsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmSystemPortsUnsubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmSystemPortsUnsubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'sysPortsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionGetById0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt64,POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION0_head)))(('FwpmConnectionGetById0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'id'),(1, 'connection'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionEnum0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE,UInt32,POINTER(POINTER(POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION0_head))),POINTER(UInt32))(('FwpmConnectionEnum0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),(1, 'numEntriesRequested'),(1, 'entries'),(1, 'numEntriesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionCreateEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION_ENUM_TEMPLATE0_head),POINTER(win32more.Foundation.HANDLE))(('FwpmConnectionCreateEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumTemplate'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionDestroyEnumHandle0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmConnectionDestroyEnumHandle0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'enumHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionGetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmConnectionGetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionSetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmConnectionSetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionSubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmConnectionSubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmConnectionUnsubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmConnectionUnsubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'eventsHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmvSwitchEventSubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_VSWITCH_EVENT_SUBSCRIPTION0_head),win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_VSWITCH_EVENT_CALLBACK0,c_void_p,POINTER(win32more.Foundation.HANDLE))(('FwpmvSwitchEventSubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscription'),(1, 'callback'),(1, 'context'),(1, 'subscriptionHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmvSwitchEventUnsubscribe0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,win32more.Foundation.HANDLE)(('FwpmvSwitchEventUnsubscribe0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'subscriptionHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmvSwitchEventsGetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Foundation.PSID),POINTER(win32more.Foundation.PSID),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(POINTER(win32more.Security.ACL_head)),POINTER(win32more.Security.PSECURITY_DESCRIPTOR))(('FwpmvSwitchEventsGetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),(1, 'securityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FwpmvSwitchEventsSetSecurityInfo0():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,POINTER(win32more.Security.SID_head),POINTER(win32more.Security.SID_head),POINTER(win32more.Security.ACL_head),POINTER(win32more.Security.ACL_head))(('FwpmvSwitchEventsSetSecurityInfo0', windll['fwpuclnt.dll']), ((1, 'engineHandle'),(1, 'securityInfo'),(1, 'sidOwner'),(1, 'sidGroup'),(1, 'dacl'),(1, 'sacl'),))
    except (FileNotFoundError, AttributeError):
        return None
DL_ADDRESS_TYPE = Int32
DL_ADDRESS_TYPE_DlUnicast = 0
DL_ADDRESS_TYPE_DlMulticast = 1
DL_ADDRESS_TYPE_DlBroadcast = 2
FWP_AF = Int32
FWP_AF_INET = 0
FWP_AF_INET6 = 1
FWP_AF_ETHER = 2
FWP_AF_NONE = 3
def _define_FWP_BYTE_ARRAY16_head():
    class FWP_BYTE_ARRAY16(Structure):
        pass
    return FWP_BYTE_ARRAY16
def _define_FWP_BYTE_ARRAY16():
    FWP_BYTE_ARRAY16 = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16_head
    FWP_BYTE_ARRAY16._fields_ = [
        ('byteArray16', Byte * 16),
    ]
    return FWP_BYTE_ARRAY16
def _define_FWP_BYTE_ARRAY6_head():
    class FWP_BYTE_ARRAY6(Structure):
        pass
    return FWP_BYTE_ARRAY6
def _define_FWP_BYTE_ARRAY6():
    FWP_BYTE_ARRAY6 = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY6_head
    FWP_BYTE_ARRAY6._fields_ = [
        ('byteArray6', Byte * 6),
    ]
    return FWP_BYTE_ARRAY6
def _define_FWP_BYTE_BLOB_head():
    class FWP_BYTE_BLOB(Structure):
        pass
    return FWP_BYTE_BLOB
def _define_FWP_BYTE_BLOB():
    FWP_BYTE_BLOB = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head
    FWP_BYTE_BLOB._fields_ = [
        ('size', UInt32),
        ('data', c_char_p_no),
    ]
    return FWP_BYTE_BLOB
FWP_CLASSIFY_OPTION_TYPE = Int32
FWP_CLASSIFY_OPTION_MULTICAST_STATE = 0
FWP_CLASSIFY_OPTION_LOOSE_SOURCE_MAPPING = 1
FWP_CLASSIFY_OPTION_UNICAST_LIFETIME = 2
FWP_CLASSIFY_OPTION_MCAST_BCAST_LIFETIME = 3
FWP_CLASSIFY_OPTION_SECURE_SOCKET_SECURITY_FLAGS = 4
FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_MM_POLICY_KEY = 5
FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_QM_POLICY_KEY = 6
FWP_CLASSIFY_OPTION_LOCAL_ONLY_MAPPING = 7
FWP_CLASSIFY_OPTION_MAX = 8
def _define_FWP_CONDITION_VALUE0_head():
    class FWP_CONDITION_VALUE0(Structure):
        pass
    return FWP_CONDITION_VALUE0
def _define_FWP_CONDITION_VALUE0():
    FWP_CONDITION_VALUE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0_head
    class FWP_CONDITION_VALUE0__Anonymous_e__Union(Union):
        pass
    FWP_CONDITION_VALUE0__Anonymous_e__Union._fields_ = [
        ('uint8', Byte),
        ('uint16', UInt16),
        ('uint32', UInt32),
        ('uint64', POINTER(UInt64)),
        ('int8', SByte),
        ('int16', Int16),
        ('int32', Int32),
        ('int64', POINTER(Int64)),
        ('float32', Single),
        ('double64', POINTER(Double)),
        ('byteArray16', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16_head)),
        ('byteBlob', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('sid', POINTER(win32more.Security.SID_head)),
        ('sd', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('tokenInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_TOKEN_INFORMATION_head)),
        ('tokenAccessInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('unicodeString', win32more.Foundation.PWSTR),
        ('byteArray6', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY6_head)),
        ('v4AddrMask', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V4_ADDR_AND_MASK_head)),
        ('v6AddrMask', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V6_ADDR_AND_MASK_head)),
        ('rangeValue', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_RANGE0_head)),
    ]
    FWP_CONDITION_VALUE0._anonymous_ = [
        'Anonymous',
    ]
    FWP_CONDITION_VALUE0._fields_ = [
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DATA_TYPE),
        ('Anonymous', FWP_CONDITION_VALUE0__Anonymous_e__Union),
    ]
    return FWP_CONDITION_VALUE0
FWP_DATA_TYPE = Int32
FWP_EMPTY = 0
FWP_UINT8 = 1
FWP_UINT16 = 2
FWP_UINT32 = 3
FWP_UINT64 = 4
FWP_INT8 = 5
FWP_INT16 = 6
FWP_INT32 = 7
FWP_INT64 = 8
FWP_FLOAT = 9
FWP_DOUBLE = 10
FWP_BYTE_ARRAY16_TYPE = 11
FWP_BYTE_BLOB_TYPE = 12
FWP_SID = 13
FWP_SECURITY_DESCRIPTOR_TYPE = 14
FWP_TOKEN_INFORMATION_TYPE = 15
FWP_TOKEN_ACCESS_INFORMATION_TYPE = 16
FWP_UNICODE_STRING_TYPE = 17
FWP_BYTE_ARRAY6_TYPE = 18
FWP_SINGLE_DATA_TYPE_MAX = 255
FWP_V4_ADDR_MASK = 256
FWP_V6_ADDR_MASK = 257
FWP_RANGE_TYPE = 258
FWP_DATA_TYPE_MAX = 259
FWP_DIRECTION = Int32
FWP_DIRECTION_OUTBOUND = 0
FWP_DIRECTION_INBOUND = 1
FWP_DIRECTION_MAX = 2
FWP_ETHER_ENCAP_METHOD = Int32
FWP_ETHER_ENCAP_METHOD_ETHER_V2 = 0
FWP_ETHER_ENCAP_METHOD_SNAP = 1
FWP_ETHER_ENCAP_METHOD_SNAP_W_OUI_ZERO = 3
FWP_FILTER_ENUM_TYPE = Int32
FWP_FILTER_ENUM_FULLY_CONTAINED = 0
FWP_FILTER_ENUM_OVERLAPPING = 1
FWP_FILTER_ENUM_TYPE_MAX = 2
FWP_IP_VERSION = Int32
FWP_IP_VERSION_V4 = 0
FWP_IP_VERSION_V6 = 1
FWP_IP_VERSION_NONE = 2
FWP_IP_VERSION_MAX = 3
FWP_MATCH_TYPE = Int32
FWP_MATCH_EQUAL = 0
FWP_MATCH_GREATER = 1
FWP_MATCH_LESS = 2
FWP_MATCH_GREATER_OR_EQUAL = 3
FWP_MATCH_LESS_OR_EQUAL = 4
FWP_MATCH_RANGE = 5
FWP_MATCH_FLAGS_ALL_SET = 6
FWP_MATCH_FLAGS_ANY_SET = 7
FWP_MATCH_FLAGS_NONE_SET = 8
FWP_MATCH_EQUAL_CASE_INSENSITIVE = 9
FWP_MATCH_NOT_EQUAL = 10
FWP_MATCH_PREFIX = 11
FWP_MATCH_NOT_PREFIX = 12
FWP_MATCH_TYPE_MAX = 13
def _define_FWP_RANGE0_head():
    class FWP_RANGE0(Structure):
        pass
    return FWP_RANGE0
def _define_FWP_RANGE0():
    FWP_RANGE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_RANGE0_head
    FWP_RANGE0._fields_ = [
        ('valueLow', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0),
        ('valueHigh', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0),
    ]
    return FWP_RANGE0
def _define_FWP_TOKEN_INFORMATION_head():
    class FWP_TOKEN_INFORMATION(Structure):
        pass
    return FWP_TOKEN_INFORMATION
def _define_FWP_TOKEN_INFORMATION():
    FWP_TOKEN_INFORMATION = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_TOKEN_INFORMATION_head
    FWP_TOKEN_INFORMATION._fields_ = [
        ('sidCount', UInt32),
        ('sids', POINTER(win32more.Security.SID_AND_ATTRIBUTES_head)),
        ('restrictedSidCount', UInt32),
        ('restrictedSids', POINTER(win32more.Security.SID_AND_ATTRIBUTES_head)),
    ]
    return FWP_TOKEN_INFORMATION
def _define_FWP_V4_ADDR_AND_MASK_head():
    class FWP_V4_ADDR_AND_MASK(Structure):
        pass
    return FWP_V4_ADDR_AND_MASK
def _define_FWP_V4_ADDR_AND_MASK():
    FWP_V4_ADDR_AND_MASK = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V4_ADDR_AND_MASK_head
    FWP_V4_ADDR_AND_MASK._fields_ = [
        ('addr', UInt32),
        ('mask', UInt32),
    ]
    return FWP_V4_ADDR_AND_MASK
def _define_FWP_V6_ADDR_AND_MASK_head():
    class FWP_V6_ADDR_AND_MASK(Structure):
        pass
    return FWP_V6_ADDR_AND_MASK
def _define_FWP_V6_ADDR_AND_MASK():
    FWP_V6_ADDR_AND_MASK = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V6_ADDR_AND_MASK_head
    FWP_V6_ADDR_AND_MASK._fields_ = [
        ('addr', Byte * 16),
        ('prefixLength', Byte),
    ]
    return FWP_V6_ADDR_AND_MASK
def _define_FWP_VALUE0_head():
    class FWP_VALUE0(Structure):
        pass
    return FWP_VALUE0
def _define_FWP_VALUE0():
    FWP_VALUE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0_head
    class FWP_VALUE0__Anonymous_e__Union(Union):
        pass
    FWP_VALUE0__Anonymous_e__Union._fields_ = [
        ('uint8', Byte),
        ('uint16', UInt16),
        ('uint32', UInt32),
        ('uint64', POINTER(UInt64)),
        ('int8', SByte),
        ('int16', Int16),
        ('int32', Int32),
        ('int64', POINTER(Int64)),
        ('float32', Single),
        ('double64', POINTER(Double)),
        ('byteArray16', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16_head)),
        ('byteBlob', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('sid', POINTER(win32more.Security.SID_head)),
        ('sd', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('tokenInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_TOKEN_INFORMATION_head)),
        ('tokenAccessInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('unicodeString', win32more.Foundation.PWSTR),
        ('byteArray6', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY6_head)),
    ]
    FWP_VALUE0._anonymous_ = [
        'Anonymous',
    ]
    FWP_VALUE0._fields_ = [
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DATA_TYPE),
        ('Anonymous', FWP_VALUE0__Anonymous_e__Union),
    ]
    return FWP_VALUE0
FWP_VSWITCH_NETWORK_TYPE = Int32
FWP_VSWITCH_NETWORK_TYPE_UNKNOWN = 0
FWP_VSWITCH_NETWORK_TYPE_PRIVATE = 1
FWP_VSWITCH_NETWORK_TYPE_INTERNAL = 2
FWP_VSWITCH_NETWORK_TYPE_EXTERNAL = 3
def _define_FWPM_ACTION0_head():
    class FWPM_ACTION0(Structure):
        pass
    return FWPM_ACTION0
def _define_FWPM_ACTION0():
    FWPM_ACTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_ACTION0_head
    class FWPM_ACTION0__Anonymous_e__Union(Union):
        pass
    FWPM_ACTION0__Anonymous_e__Union._fields_ = [
        ('filterType', Guid),
        ('calloutKey', Guid),
    ]
    FWPM_ACTION0._anonymous_ = [
        'Anonymous',
    ]
    FWPM_ACTION0._fields_ = [
        ('type', UInt32),
        ('Anonymous', FWPM_ACTION0__Anonymous_e__Union),
    ]
    return FWPM_ACTION0
FWPM_APPC_NETWORK_CAPABILITY_TYPE = Int32
FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT = 0
FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT_SERVER = 1
FWPM_APPC_NETWORK_CAPABILITY_INTERNET_PRIVATE_NETWORK = 2
def _define_FWPM_CALLOUT_CHANGE_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_CHANGE0_head))
def _define_FWPM_CALLOUT_CHANGE0_head():
    class FWPM_CALLOUT_CHANGE0(Structure):
        pass
    return FWPM_CALLOUT_CHANGE0
def _define_FWPM_CALLOUT_CHANGE0():
    FWPM_CALLOUT_CHANGE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_CHANGE0_head
    FWPM_CALLOUT_CHANGE0._fields_ = [
        ('changeType', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CHANGE_TYPE),
        ('calloutKey', Guid),
        ('calloutId', UInt32),
    ]
    return FWPM_CALLOUT_CHANGE0
def _define_FWPM_CALLOUT_ENUM_TEMPLATE0_head():
    class FWPM_CALLOUT_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_CALLOUT_ENUM_TEMPLATE0
def _define_FWPM_CALLOUT_ENUM_TEMPLATE0():
    FWPM_CALLOUT_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_ENUM_TEMPLATE0_head
    FWPM_CALLOUT_ENUM_TEMPLATE0._fields_ = [
        ('providerKey', POINTER(Guid)),
        ('layerKey', Guid),
    ]
    return FWPM_CALLOUT_ENUM_TEMPLATE0
def _define_FWPM_CALLOUT_SUBSCRIPTION0_head():
    class FWPM_CALLOUT_SUBSCRIPTION0(Structure):
        pass
    return FWPM_CALLOUT_SUBSCRIPTION0
def _define_FWPM_CALLOUT_SUBSCRIPTION0():
    FWPM_CALLOUT_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_SUBSCRIPTION0_head
    FWPM_CALLOUT_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT_ENUM_TEMPLATE0_head)),
        ('flags', UInt32),
        ('sessionKey', Guid),
    ]
    return FWPM_CALLOUT_SUBSCRIPTION0
def _define_FWPM_CALLOUT0_head():
    class FWPM_CALLOUT0(Structure):
        pass
    return FWPM_CALLOUT0
def _define_FWPM_CALLOUT0():
    FWPM_CALLOUT0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CALLOUT0_head
    FWPM_CALLOUT0._fields_ = [
        ('calloutKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('providerKey', POINTER(Guid)),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('applicableLayer', Guid),
        ('calloutId', UInt32),
    ]
    return FWPM_CALLOUT0
FWPM_CHANGE_TYPE = Int32
FWPM_CHANGE_ADD = 1
FWPM_CHANGE_DELETE = 2
FWPM_CHANGE_TYPE_MAX = 3
def _define_FWPM_CLASSIFY_OPTION0_head():
    class FWPM_CLASSIFY_OPTION0(Structure):
        pass
    return FWPM_CLASSIFY_OPTION0
def _define_FWPM_CLASSIFY_OPTION0():
    FWPM_CLASSIFY_OPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CLASSIFY_OPTION0_head
    FWPM_CLASSIFY_OPTION0._fields_ = [
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CLASSIFY_OPTION_TYPE),
        ('value', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0),
    ]
    return FWPM_CLASSIFY_OPTION0
def _define_FWPM_CLASSIFY_OPTIONS0_head():
    class FWPM_CLASSIFY_OPTIONS0(Structure):
        pass
    return FWPM_CLASSIFY_OPTIONS0
def _define_FWPM_CLASSIFY_OPTIONS0():
    FWPM_CLASSIFY_OPTIONS0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CLASSIFY_OPTIONS0_head
    FWPM_CLASSIFY_OPTIONS0._fields_ = [
        ('numOptions', UInt32),
        ('options', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CLASSIFY_OPTION0_head)),
    ]
    return FWPM_CLASSIFY_OPTIONS0
def _define_FWPM_CONNECTION_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION_EVENT_TYPE,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION0_head))
def _define_FWPM_CONNECTION_ENUM_TEMPLATE0_head():
    class FWPM_CONNECTION_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_CONNECTION_ENUM_TEMPLATE0
def _define_FWPM_CONNECTION_ENUM_TEMPLATE0():
    FWPM_CONNECTION_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION_ENUM_TEMPLATE0_head
    FWPM_CONNECTION_ENUM_TEMPLATE0._fields_ = [
        ('connectionId', UInt64),
        ('flags', UInt32),
    ]
    return FWPM_CONNECTION_ENUM_TEMPLATE0
FWPM_CONNECTION_EVENT_TYPE = Int32
FWPM_CONNECTION_EVENT_ADD = 0
FWPM_CONNECTION_EVENT_DELETE = 1
FWPM_CONNECTION_EVENT_MAX = 2
def _define_FWPM_CONNECTION_SUBSCRIPTION0_head():
    class FWPM_CONNECTION_SUBSCRIPTION0(Structure):
        pass
    return FWPM_CONNECTION_SUBSCRIPTION0
def _define_FWPM_CONNECTION_SUBSCRIPTION0():
    FWPM_CONNECTION_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION_SUBSCRIPTION0_head
    FWPM_CONNECTION_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION_ENUM_TEMPLATE0_head)),
        ('flags', UInt32),
        ('sessionKey', Guid),
    ]
    return FWPM_CONNECTION_SUBSCRIPTION0
def _define_FWPM_CONNECTION0_head():
    class FWPM_CONNECTION0(Structure):
        pass
    return FWPM_CONNECTION0
def _define_FWPM_CONNECTION0():
    FWPM_CONNECTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CONNECTION0_head
    class FWPM_CONNECTION0__Anonymous1_e__Union(Union):
        pass
    FWPM_CONNECTION0__Anonymous1_e__Union._fields_ = [
        ('localV4Address', UInt32),
        ('localV6Address', Byte * 16),
    ]
    class FWPM_CONNECTION0__Anonymous2_e__Union(Union):
        pass
    FWPM_CONNECTION0__Anonymous2_e__Union._fields_ = [
        ('remoteV4Address', UInt32),
        ('remoteV6Address', Byte * 16),
    ]
    FWPM_CONNECTION0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    FWPM_CONNECTION0._fields_ = [
        ('connectionId', UInt64),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', FWPM_CONNECTION0__Anonymous1_e__Union),
        ('Anonymous2', FWPM_CONNECTION0__Anonymous2_e__Union),
        ('providerKey', POINTER(Guid)),
        ('ipsecTrafficModeType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_TYPE),
        ('keyModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('mmCrypto', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0),
        ('mmPeer', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL2),
        ('emPeer', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL2),
        ('bytesTransferredIn', UInt64),
        ('bytesTransferredOut', UInt64),
        ('bytesTransferredTotal', UInt64),
        ('startSysTime', win32more.Foundation.FILETIME),
    ]
    return FWPM_CONNECTION0
def _define_FWPM_DISPLAY_DATA0_head():
    class FWPM_DISPLAY_DATA0(Structure):
        pass
    return FWPM_DISPLAY_DATA0
def _define_FWPM_DISPLAY_DATA0():
    FWPM_DISPLAY_DATA0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0_head
    FWPM_DISPLAY_DATA0._fields_ = [
        ('name', win32more.Foundation.PWSTR),
        ('description', win32more.Foundation.PWSTR),
    ]
    return FWPM_DISPLAY_DATA0
def _define_FWPM_DYNAMIC_KEYWORD_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,c_void_p)
FWPM_ENGINE_OPTION = Int32
FWPM_ENGINE_COLLECT_NET_EVENTS = 0
FWPM_ENGINE_NET_EVENT_MATCH_ANY_KEYWORDS = 1
FWPM_ENGINE_NAME_CACHE = 2
FWPM_ENGINE_MONITOR_IPSEC_CONNECTIONS = 3
FWPM_ENGINE_PACKET_QUEUING = 4
FWPM_ENGINE_TXN_WATCHDOG_TIMEOUT_IN_MSEC = 5
FWPM_ENGINE_OPTION_MAX = 6
FWPM_FIELD_TYPE = Int32
FWPM_FIELD_RAW_DATA = 0
FWPM_FIELD_IP_ADDRESS = 1
FWPM_FIELD_FLAGS = 2
FWPM_FIELD_TYPE_MAX = 3
def _define_FWPM_FIELD0_head():
    class FWPM_FIELD0(Structure):
        pass
    return FWPM_FIELD0
def _define_FWPM_FIELD0():
    FWPM_FIELD0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FIELD0_head
    FWPM_FIELD0._fields_ = [
        ('fieldKey', POINTER(Guid)),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FIELD_TYPE),
        ('dataType', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DATA_TYPE),
    ]
    return FWPM_FIELD0
def _define_FWPM_FILTER_CHANGE_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CHANGE0_head))
def _define_FWPM_FILTER_CHANGE0_head():
    class FWPM_FILTER_CHANGE0(Structure):
        pass
    return FWPM_FILTER_CHANGE0
def _define_FWPM_FILTER_CHANGE0():
    FWPM_FILTER_CHANGE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CHANGE0_head
    FWPM_FILTER_CHANGE0._fields_ = [
        ('changeType', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CHANGE_TYPE),
        ('filterKey', Guid),
        ('filterId', UInt64),
    ]
    return FWPM_FILTER_CHANGE0
def _define_FWPM_FILTER_CONDITION0_head():
    class FWPM_FILTER_CONDITION0(Structure):
        pass
    return FWPM_FILTER_CONDITION0
def _define_FWPM_FILTER_CONDITION0():
    FWPM_FILTER_CONDITION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head
    FWPM_FILTER_CONDITION0._fields_ = [
        ('fieldKey', Guid),
        ('matchType', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_MATCH_TYPE),
        ('conditionValue', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
    ]
    return FWPM_FILTER_CONDITION0
def _define_FWPM_FILTER_ENUM_TEMPLATE0_head():
    class FWPM_FILTER_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_FILTER_ENUM_TEMPLATE0
def _define_FWPM_FILTER_ENUM_TEMPLATE0():
    FWPM_FILTER_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_ENUM_TEMPLATE0_head
    FWPM_FILTER_ENUM_TEMPLATE0._fields_ = [
        ('providerKey', POINTER(Guid)),
        ('layerKey', Guid),
        ('enumType', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_FILTER_ENUM_TYPE),
        ('flags', UInt32),
        ('providerContextTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0_head)),
        ('numFilterConditions', UInt32),
        ('filterCondition', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head)),
        ('actionMask', UInt32),
        ('calloutKey', POINTER(Guid)),
    ]
    return FWPM_FILTER_ENUM_TEMPLATE0
FWPM_FILTER_FLAGS = UInt32
FWPM_FILTER_FLAG_NONE = 0
FWPM_FILTER_FLAG_PERSISTENT = 1
FWPM_FILTER_FLAG_BOOTTIME = 2
FWPM_FILTER_FLAG_HAS_PROVIDER_CONTEXT = 4
FWPM_FILTER_FLAG_CLEAR_ACTION_RIGHT = 8
FWPM_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED = 16
FWPM_FILTER_FLAG_DISABLED = 32
FWPM_FILTER_FLAG_INDEXED = 64
def _define_FWPM_FILTER_SUBSCRIPTION0_head():
    class FWPM_FILTER_SUBSCRIPTION0(Structure):
        pass
    return FWPM_FILTER_SUBSCRIPTION0
def _define_FWPM_FILTER_SUBSCRIPTION0():
    FWPM_FILTER_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_SUBSCRIPTION0_head
    FWPM_FILTER_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_ENUM_TEMPLATE0_head)),
        ('flags', UInt32),
        ('sessionKey', Guid),
    ]
    return FWPM_FILTER_SUBSCRIPTION0
def _define_FWPM_FILTER0_head():
    class FWPM_FILTER0(Structure):
        pass
    return FWPM_FILTER0
def _define_FWPM_FILTER0():
    FWPM_FILTER0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER0_head
    class FWPM_FILTER0__Anonymous_e__Union(Union):
        pass
    FWPM_FILTER0__Anonymous_e__Union._fields_ = [
        ('rawContext', UInt64),
        ('providerContextKey', Guid),
    ]
    FWPM_FILTER0._anonymous_ = [
        'Anonymous',
    ]
    FWPM_FILTER0._fields_ = [
        ('filterKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_FLAGS),
        ('providerKey', POINTER(Guid)),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('layerKey', Guid),
        ('subLayerKey', Guid),
        ('weight', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0),
        ('numFilterConditions', UInt32),
        ('filterCondition', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head)),
        ('action', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_ACTION0),
        ('Anonymous', FWPM_FILTER0__Anonymous_e__Union),
        ('reserved', POINTER(Guid)),
        ('filterId', UInt64),
        ('effectiveWeight', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_VALUE0),
    ]
    return FWPM_FILTER0
def _define_FWPM_LAYER_ENUM_TEMPLATE0_head():
    class FWPM_LAYER_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_LAYER_ENUM_TEMPLATE0
def _define_FWPM_LAYER_ENUM_TEMPLATE0():
    FWPM_LAYER_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER_ENUM_TEMPLATE0_head
    FWPM_LAYER_ENUM_TEMPLATE0._fields_ = [
        ('reserved', UInt64),
    ]
    return FWPM_LAYER_ENUM_TEMPLATE0
def _define_FWPM_LAYER_STATISTICS0_head():
    class FWPM_LAYER_STATISTICS0(Structure):
        pass
    return FWPM_LAYER_STATISTICS0
def _define_FWPM_LAYER_STATISTICS0():
    FWPM_LAYER_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER_STATISTICS0_head
    FWPM_LAYER_STATISTICS0._fields_ = [
        ('layerId', Guid),
        ('classifyPermitCount', UInt32),
        ('classifyBlockCount', UInt32),
        ('classifyVetoCount', UInt32),
        ('numCacheEntries', UInt32),
    ]
    return FWPM_LAYER_STATISTICS0
def _define_FWPM_LAYER0_head():
    class FWPM_LAYER0(Structure):
        pass
    return FWPM_LAYER0
def _define_FWPM_LAYER0():
    FWPM_LAYER0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER0_head
    FWPM_LAYER0._fields_ = [
        ('layerKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('numFields', UInt32),
        ('field', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FIELD0_head)),
        ('defaultSubLayerKey', Guid),
        ('layerId', UInt16),
    ]
    return FWPM_LAYER0
def _define_FWPM_NET_EVENT_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT1_head))
def _define_FWPM_NET_EVENT_CALLBACK1():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT2_head))
def _define_FWPM_NET_EVENT_CALLBACK2():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT3_head))
def _define_FWPM_NET_EVENT_CALLBACK3():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT4_head))
def _define_FWPM_NET_EVENT_CALLBACK4():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT5_head))
def _define_FWPM_NET_EVENT_CAPABILITY_ALLOW0_head():
    class FWPM_NET_EVENT_CAPABILITY_ALLOW0(Structure):
        pass
    return FWPM_NET_EVENT_CAPABILITY_ALLOW0
def _define_FWPM_NET_EVENT_CAPABILITY_ALLOW0():
    FWPM_NET_EVENT_CAPABILITY_ALLOW0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_ALLOW0_head
    FWPM_NET_EVENT_CAPABILITY_ALLOW0._fields_ = [
        ('networkCapabilityId', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_APPC_NETWORK_CAPABILITY_TYPE),
        ('filterId', UInt64),
        ('isLoopback', win32more.Foundation.BOOL),
    ]
    return FWPM_NET_EVENT_CAPABILITY_ALLOW0
def _define_FWPM_NET_EVENT_CAPABILITY_DROP0_head():
    class FWPM_NET_EVENT_CAPABILITY_DROP0(Structure):
        pass
    return FWPM_NET_EVENT_CAPABILITY_DROP0
def _define_FWPM_NET_EVENT_CAPABILITY_DROP0():
    FWPM_NET_EVENT_CAPABILITY_DROP0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_DROP0_head
    FWPM_NET_EVENT_CAPABILITY_DROP0._fields_ = [
        ('networkCapabilityId', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_APPC_NETWORK_CAPABILITY_TYPE),
        ('filterId', UInt64),
        ('isLoopback', win32more.Foundation.BOOL),
    ]
    return FWPM_NET_EVENT_CAPABILITY_DROP0
def _define_FWPM_NET_EVENT_CLASSIFY_ALLOW0_head():
    class FWPM_NET_EVENT_CLASSIFY_ALLOW0(Structure):
        pass
    return FWPM_NET_EVENT_CLASSIFY_ALLOW0
def _define_FWPM_NET_EVENT_CLASSIFY_ALLOW0():
    FWPM_NET_EVENT_CLASSIFY_ALLOW0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_ALLOW0_head
    FWPM_NET_EVENT_CLASSIFY_ALLOW0._fields_ = [
        ('filterId', UInt64),
        ('layerId', UInt16),
        ('reauthReason', UInt32),
        ('originalProfile', UInt32),
        ('currentProfile', UInt32),
        ('msFwpDirection', UInt32),
        ('isLoopback', win32more.Foundation.BOOL),
    ]
    return FWPM_NET_EVENT_CLASSIFY_ALLOW0
def _define_FWPM_NET_EVENT_CLASSIFY_DROP_MAC0_head():
    class FWPM_NET_EVENT_CLASSIFY_DROP_MAC0(Structure):
        pass
    return FWPM_NET_EVENT_CLASSIFY_DROP_MAC0
def _define_FWPM_NET_EVENT_CLASSIFY_DROP_MAC0():
    FWPM_NET_EVENT_CLASSIFY_DROP_MAC0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP_MAC0_head
    FWPM_NET_EVENT_CLASSIFY_DROP_MAC0._fields_ = [
        ('localMacAddr', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY6),
        ('remoteMacAddr', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY6),
        ('mediaType', UInt32),
        ('ifType', UInt32),
        ('etherType', UInt16),
        ('ndisPortNumber', UInt32),
        ('reserved', UInt32),
        ('vlanTag', UInt16),
        ('ifLuid', UInt64),
        ('filterId', UInt64),
        ('layerId', UInt16),
        ('reauthReason', UInt32),
        ('originalProfile', UInt32),
        ('currentProfile', UInt32),
        ('msFwpDirection', UInt32),
        ('isLoopback', win32more.Foundation.BOOL),
        ('vSwitchId', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('vSwitchSourcePort', UInt32),
        ('vSwitchDestinationPort', UInt32),
    ]
    return FWPM_NET_EVENT_CLASSIFY_DROP_MAC0
def _define_FWPM_NET_EVENT_CLASSIFY_DROP0_head():
    class FWPM_NET_EVENT_CLASSIFY_DROP0(Structure):
        pass
    return FWPM_NET_EVENT_CLASSIFY_DROP0
def _define_FWPM_NET_EVENT_CLASSIFY_DROP0():
    FWPM_NET_EVENT_CLASSIFY_DROP0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP0_head
    FWPM_NET_EVENT_CLASSIFY_DROP0._fields_ = [
        ('filterId', UInt64),
        ('layerId', UInt16),
    ]
    return FWPM_NET_EVENT_CLASSIFY_DROP0
def _define_FWPM_NET_EVENT_CLASSIFY_DROP1_head():
    class FWPM_NET_EVENT_CLASSIFY_DROP1(Structure):
        pass
    return FWPM_NET_EVENT_CLASSIFY_DROP1
def _define_FWPM_NET_EVENT_CLASSIFY_DROP1():
    FWPM_NET_EVENT_CLASSIFY_DROP1 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP1_head
    FWPM_NET_EVENT_CLASSIFY_DROP1._fields_ = [
        ('filterId', UInt64),
        ('layerId', UInt16),
        ('reauthReason', UInt32),
        ('originalProfile', UInt32),
        ('currentProfile', UInt32),
        ('msFwpDirection', UInt32),
        ('isLoopback', win32more.Foundation.BOOL),
    ]
    return FWPM_NET_EVENT_CLASSIFY_DROP1
def _define_FWPM_NET_EVENT_CLASSIFY_DROP2_head():
    class FWPM_NET_EVENT_CLASSIFY_DROP2(Structure):
        pass
    return FWPM_NET_EVENT_CLASSIFY_DROP2
def _define_FWPM_NET_EVENT_CLASSIFY_DROP2():
    FWPM_NET_EVENT_CLASSIFY_DROP2 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP2_head
    FWPM_NET_EVENT_CLASSIFY_DROP2._fields_ = [
        ('filterId', UInt64),
        ('layerId', UInt16),
        ('reauthReason', UInt32),
        ('originalProfile', UInt32),
        ('currentProfile', UInt32),
        ('msFwpDirection', UInt32),
        ('isLoopback', win32more.Foundation.BOOL),
        ('vSwitchId', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('vSwitchSourcePort', UInt32),
        ('vSwitchDestinationPort', UInt32),
    ]
    return FWPM_NET_EVENT_CLASSIFY_DROP2
def _define_FWPM_NET_EVENT_ENUM_TEMPLATE0_head():
    class FWPM_NET_EVENT_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_NET_EVENT_ENUM_TEMPLATE0
def _define_FWPM_NET_EVENT_ENUM_TEMPLATE0():
    FWPM_NET_EVENT_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_ENUM_TEMPLATE0_head
    FWPM_NET_EVENT_ENUM_TEMPLATE0._fields_ = [
        ('startTime', win32more.Foundation.FILETIME),
        ('endTime', win32more.Foundation.FILETIME),
        ('numFilterConditions', UInt32),
        ('filterCondition', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER_CONDITION0_head)),
    ]
    return FWPM_NET_EVENT_ENUM_TEMPLATE0
def _define_FWPM_NET_EVENT_HEADER0_head():
    class FWPM_NET_EVENT_HEADER0(Structure):
        pass
    return FWPM_NET_EVENT_HEADER0
def _define_FWPM_NET_EVENT_HEADER0():
    FWPM_NET_EVENT_HEADER0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER0_head
    class FWPM_NET_EVENT_HEADER0__Anonymous1_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER0__Anonymous1_e__Union._fields_ = [
        ('localAddrV4', UInt32),
        ('localAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    class FWPM_NET_EVENT_HEADER0__Anonymous2_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER0__Anonymous2_e__Union._fields_ = [
        ('remoteAddrV4', UInt32),
        ('remoteAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    FWPM_NET_EVENT_HEADER0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    FWPM_NET_EVENT_HEADER0._fields_ = [
        ('timeStamp', win32more.Foundation.FILETIME),
        ('flags', UInt32),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('ipProtocol', Byte),
        ('Anonymous1', FWPM_NET_EVENT_HEADER0__Anonymous1_e__Union),
        ('Anonymous2', FWPM_NET_EVENT_HEADER0__Anonymous2_e__Union),
        ('localPort', UInt16),
        ('remotePort', UInt16),
        ('scopeId', UInt32),
        ('appId', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('userId', POINTER(win32more.Security.SID_head)),
    ]
    return FWPM_NET_EVENT_HEADER0
def _define_FWPM_NET_EVENT_HEADER1_head():
    class FWPM_NET_EVENT_HEADER1(Structure):
        pass
    return FWPM_NET_EVENT_HEADER1
def _define_FWPM_NET_EVENT_HEADER1():
    FWPM_NET_EVENT_HEADER1 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER1_head
    class FWPM_NET_EVENT_HEADER1__Anonymous1_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER1__Anonymous1_e__Union._fields_ = [
        ('localAddrV4', UInt32),
        ('localAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    class FWPM_NET_EVENT_HEADER1__Anonymous2_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER1__Anonymous2_e__Union._fields_ = [
        ('remoteAddrV4', UInt32),
        ('remoteAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    class FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union(Union):
        pass
    class FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct(Structure):
        pass
    class FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct__Anonymous_e__Union(Union):
        pass
    class FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ('reserved2', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY6),
        ('reserved3', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY6),
        ('reserved4', UInt32),
        ('reserved5', UInt32),
        ('reserved6', UInt16),
        ('reserved7', UInt32),
        ('reserved8', UInt32),
        ('reserved9', UInt16),
        ('reserved10', UInt64),
    ]
    FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct__Anonymous_e__Union._fields_ = [
        ('Anonymous', FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct._fields_ = [
        ('reserved1', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_AF),
        ('Anonymous', FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct__Anonymous_e__Union),
    ]
    FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union._fields_ = [
        ('Anonymous', FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union__Anonymous_e__Struct),
    ]
    FWPM_NET_EVENT_HEADER1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    FWPM_NET_EVENT_HEADER1._fields_ = [
        ('timeStamp', win32more.Foundation.FILETIME),
        ('flags', UInt32),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('ipProtocol', Byte),
        ('Anonymous1', FWPM_NET_EVENT_HEADER1__Anonymous1_e__Union),
        ('Anonymous2', FWPM_NET_EVENT_HEADER1__Anonymous2_e__Union),
        ('localPort', UInt16),
        ('remotePort', UInt16),
        ('scopeId', UInt32),
        ('appId', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('userId', POINTER(win32more.Security.SID_head)),
        ('Anonymous3', FWPM_NET_EVENT_HEADER1__Anonymous3_e__Union),
    ]
    return FWPM_NET_EVENT_HEADER1
def _define_FWPM_NET_EVENT_HEADER2_head():
    class FWPM_NET_EVENT_HEADER2(Structure):
        pass
    return FWPM_NET_EVENT_HEADER2
def _define_FWPM_NET_EVENT_HEADER2():
    FWPM_NET_EVENT_HEADER2 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER2_head
    class FWPM_NET_EVENT_HEADER2__Anonymous1_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER2__Anonymous1_e__Union._fields_ = [
        ('localAddrV4', UInt32),
        ('localAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    class FWPM_NET_EVENT_HEADER2__Anonymous2_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER2__Anonymous2_e__Union._fields_ = [
        ('remoteAddrV4', UInt32),
        ('remoteAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    FWPM_NET_EVENT_HEADER2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    FWPM_NET_EVENT_HEADER2._fields_ = [
        ('timeStamp', win32more.Foundation.FILETIME),
        ('flags', UInt32),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('ipProtocol', Byte),
        ('Anonymous1', FWPM_NET_EVENT_HEADER2__Anonymous1_e__Union),
        ('Anonymous2', FWPM_NET_EVENT_HEADER2__Anonymous2_e__Union),
        ('localPort', UInt16),
        ('remotePort', UInt16),
        ('scopeId', UInt32),
        ('appId', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('userId', POINTER(win32more.Security.SID_head)),
        ('addressFamily', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_AF),
        ('packageSid', POINTER(win32more.Security.SID_head)),
    ]
    return FWPM_NET_EVENT_HEADER2
def _define_FWPM_NET_EVENT_HEADER3_head():
    class FWPM_NET_EVENT_HEADER3(Structure):
        pass
    return FWPM_NET_EVENT_HEADER3
def _define_FWPM_NET_EVENT_HEADER3():
    FWPM_NET_EVENT_HEADER3 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER3_head
    class FWPM_NET_EVENT_HEADER3__Anonymous1_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER3__Anonymous1_e__Union._fields_ = [
        ('localAddrV4', UInt32),
        ('localAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    class FWPM_NET_EVENT_HEADER3__Anonymous2_e__Union(Union):
        pass
    FWPM_NET_EVENT_HEADER3__Anonymous2_e__Union._fields_ = [
        ('remoteAddrV4', UInt32),
        ('remoteAddrV6', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
    ]
    FWPM_NET_EVENT_HEADER3._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    FWPM_NET_EVENT_HEADER3._fields_ = [
        ('timeStamp', win32more.Foundation.FILETIME),
        ('flags', UInt32),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('ipProtocol', Byte),
        ('Anonymous1', FWPM_NET_EVENT_HEADER3__Anonymous1_e__Union),
        ('Anonymous2', FWPM_NET_EVENT_HEADER3__Anonymous2_e__Union),
        ('localPort', UInt16),
        ('remotePort', UInt16),
        ('scopeId', UInt32),
        ('appId', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('userId', POINTER(win32more.Security.SID_head)),
        ('addressFamily', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_AF),
        ('packageSid', POINTER(win32more.Security.SID_head)),
        ('enterpriseId', win32more.Foundation.PWSTR),
        ('policyFlags', UInt64),
        ('effectiveName', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return FWPM_NET_EVENT_HEADER3
def _define_FWPM_NET_EVENT_IKEEXT_EM_FAILURE0_head():
    class FWPM_NET_EVENT_IKEEXT_EM_FAILURE0(Structure):
        pass
    return FWPM_NET_EVENT_IKEEXT_EM_FAILURE0
def _define_FWPM_NET_EVENT_IKEEXT_EM_FAILURE0():
    FWPM_NET_EVENT_IKEEXT_EM_FAILURE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE0_head
    FWPM_NET_EVENT_IKEEXT_EM_FAILURE0._fields_ = [
        ('failureErrorCode', UInt32),
        ('failurePoint', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_FAILURE_POINT),
        ('flags', UInt32),
        ('emState', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_SA_STATE),
        ('saRole', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ROLE),
        ('emAuthMethod', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('endCertHash', Byte * 20),
        ('mmId', UInt64),
        ('qmFilterId', UInt64),
    ]
    return FWPM_NET_EVENT_IKEEXT_EM_FAILURE0
def _define_FWPM_NET_EVENT_IKEEXT_EM_FAILURE1_head():
    class FWPM_NET_EVENT_IKEEXT_EM_FAILURE1(Structure):
        pass
    return FWPM_NET_EVENT_IKEEXT_EM_FAILURE1
def _define_FWPM_NET_EVENT_IKEEXT_EM_FAILURE1():
    FWPM_NET_EVENT_IKEEXT_EM_FAILURE1 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE1_head
    FWPM_NET_EVENT_IKEEXT_EM_FAILURE1._fields_ = [
        ('failureErrorCode', UInt32),
        ('failurePoint', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_FAILURE_POINT),
        ('flags', UInt32),
        ('emState', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_SA_STATE),
        ('saRole', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ROLE),
        ('emAuthMethod', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('endCertHash', Byte * 20),
        ('mmId', UInt64),
        ('qmFilterId', UInt64),
        ('localPrincipalNameForAuth', win32more.Foundation.PWSTR),
        ('remotePrincipalNameForAuth', win32more.Foundation.PWSTR),
        ('numLocalPrincipalGroupSids', UInt32),
        ('localPrincipalGroupSids', POINTER(win32more.Foundation.PWSTR)),
        ('numRemotePrincipalGroupSids', UInt32),
        ('remotePrincipalGroupSids', POINTER(win32more.Foundation.PWSTR)),
        ('saTrafficType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_TYPE),
    ]
    return FWPM_NET_EVENT_IKEEXT_EM_FAILURE1
def _define_FWPM_NET_EVENT_IKEEXT_MM_FAILURE0_head():
    class FWPM_NET_EVENT_IKEEXT_MM_FAILURE0(Structure):
        pass
    return FWPM_NET_EVENT_IKEEXT_MM_FAILURE0
def _define_FWPM_NET_EVENT_IKEEXT_MM_FAILURE0():
    FWPM_NET_EVENT_IKEEXT_MM_FAILURE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE0_head
    FWPM_NET_EVENT_IKEEXT_MM_FAILURE0._fields_ = [
        ('failureErrorCode', UInt32),
        ('failurePoint', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_FAILURE_POINT),
        ('flags', UInt32),
        ('keyingModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('mmState', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_MM_SA_STATE),
        ('saRole', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ROLE),
        ('mmAuthMethod', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('endCertHash', Byte * 20),
        ('mmId', UInt64),
        ('mmFilterId', UInt64),
    ]
    return FWPM_NET_EVENT_IKEEXT_MM_FAILURE0
def _define_FWPM_NET_EVENT_IKEEXT_MM_FAILURE1_head():
    class FWPM_NET_EVENT_IKEEXT_MM_FAILURE1(Structure):
        pass
    return FWPM_NET_EVENT_IKEEXT_MM_FAILURE1
def _define_FWPM_NET_EVENT_IKEEXT_MM_FAILURE1():
    FWPM_NET_EVENT_IKEEXT_MM_FAILURE1 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE1_head
    FWPM_NET_EVENT_IKEEXT_MM_FAILURE1._fields_ = [
        ('failureErrorCode', UInt32),
        ('failurePoint', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_FAILURE_POINT),
        ('flags', UInt32),
        ('keyingModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('mmState', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_MM_SA_STATE),
        ('saRole', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ROLE),
        ('mmAuthMethod', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('endCertHash', Byte * 20),
        ('mmId', UInt64),
        ('mmFilterId', UInt64),
        ('localPrincipalNameForAuth', win32more.Foundation.PWSTR),
        ('remotePrincipalNameForAuth', win32more.Foundation.PWSTR),
        ('numLocalPrincipalGroupSids', UInt32),
        ('localPrincipalGroupSids', POINTER(win32more.Foundation.PWSTR)),
        ('numRemotePrincipalGroupSids', UInt32),
        ('remotePrincipalGroupSids', POINTER(win32more.Foundation.PWSTR)),
    ]
    return FWPM_NET_EVENT_IKEEXT_MM_FAILURE1
def _define_FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_head():
    class FWPM_NET_EVENT_IKEEXT_MM_FAILURE2(Structure):
        pass
    return FWPM_NET_EVENT_IKEEXT_MM_FAILURE2
def _define_FWPM_NET_EVENT_IKEEXT_MM_FAILURE2():
    FWPM_NET_EVENT_IKEEXT_MM_FAILURE2 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_head
    FWPM_NET_EVENT_IKEEXT_MM_FAILURE2._fields_ = [
        ('failureErrorCode', UInt32),
        ('failurePoint', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_FAILURE_POINT),
        ('flags', UInt32),
        ('keyingModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('mmState', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_MM_SA_STATE),
        ('saRole', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ROLE),
        ('mmAuthMethod', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('endCertHash', Byte * 20),
        ('mmId', UInt64),
        ('mmFilterId', UInt64),
        ('localPrincipalNameForAuth', win32more.Foundation.PWSTR),
        ('remotePrincipalNameForAuth', win32more.Foundation.PWSTR),
        ('numLocalPrincipalGroupSids', UInt32),
        ('localPrincipalGroupSids', POINTER(win32more.Foundation.PWSTR)),
        ('numRemotePrincipalGroupSids', UInt32),
        ('remotePrincipalGroupSids', POINTER(win32more.Foundation.PWSTR)),
        ('providerContextKey', POINTER(Guid)),
    ]
    return FWPM_NET_EVENT_IKEEXT_MM_FAILURE2
def _define_FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_head():
    class FWPM_NET_EVENT_IKEEXT_QM_FAILURE0(Structure):
        pass
    return FWPM_NET_EVENT_IKEEXT_QM_FAILURE0
def _define_FWPM_NET_EVENT_IKEEXT_QM_FAILURE0():
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_head
    class FWPM_NET_EVENT_IKEEXT_QM_FAILURE0__Anonymous1_e__Union(Union):
        pass
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE0__Anonymous1_e__Union._fields_ = [
        ('localSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
    ]
    class FWPM_NET_EVENT_IKEEXT_QM_FAILURE0__Anonymous2_e__Union(Union):
        pass
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE0__Anonymous2_e__Union._fields_ = [
        ('remoteSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
    ]
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE0._fields_ = [
        ('failureErrorCode', UInt32),
        ('failurePoint', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_FAILURE_POINT),
        ('keyingModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('qmState', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_QM_SA_STATE),
        ('saRole', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ROLE),
        ('saTrafficType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_TYPE),
        ('Anonymous1', FWPM_NET_EVENT_IKEEXT_QM_FAILURE0__Anonymous1_e__Union),
        ('Anonymous2', FWPM_NET_EVENT_IKEEXT_QM_FAILURE0__Anonymous2_e__Union),
        ('qmFilterId', UInt64),
    ]
    return FWPM_NET_EVENT_IKEEXT_QM_FAILURE0
def _define_FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_head():
    class FWPM_NET_EVENT_IKEEXT_QM_FAILURE1(Structure):
        pass
    return FWPM_NET_EVENT_IKEEXT_QM_FAILURE1
def _define_FWPM_NET_EVENT_IKEEXT_QM_FAILURE1():
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE1 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_head
    class FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous1_e__Union(Union):
        pass
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous1_e__Union._fields_ = [
        ('localSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
    ]
    class FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous2_e__Union(Union):
        pass
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous2_e__Union._fields_ = [
        ('remoteSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
    ]
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    FWPM_NET_EVENT_IKEEXT_QM_FAILURE1._fields_ = [
        ('failureErrorCode', UInt32),
        ('failurePoint', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_FAILURE_POINT),
        ('keyingModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('qmState', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_QM_SA_STATE),
        ('saRole', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ROLE),
        ('saTrafficType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_TYPE),
        ('Anonymous1', FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous1_e__Union),
        ('Anonymous2', FWPM_NET_EVENT_IKEEXT_QM_FAILURE1__Anonymous2_e__Union),
        ('qmFilterId', UInt64),
        ('mmSaLuid', UInt64),
        ('mmProviderContextKey', Guid),
    ]
    return FWPM_NET_EVENT_IKEEXT_QM_FAILURE1
def _define_FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head():
    class FWPM_NET_EVENT_IPSEC_DOSP_DROP0(Structure):
        pass
    return FWPM_NET_EVENT_IPSEC_DOSP_DROP0
def _define_FWPM_NET_EVENT_IPSEC_DOSP_DROP0():
    FWPM_NET_EVENT_IPSEC_DOSP_DROP0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head
    class FWPM_NET_EVENT_IPSEC_DOSP_DROP0__Anonymous1_e__Union(Union):
        pass
    FWPM_NET_EVENT_IPSEC_DOSP_DROP0__Anonymous1_e__Union._fields_ = [
        ('publicHostV4Addr', UInt32),
        ('publicHostV6Addr', Byte * 16),
    ]
    class FWPM_NET_EVENT_IPSEC_DOSP_DROP0__Anonymous2_e__Union(Union):
        pass
    FWPM_NET_EVENT_IPSEC_DOSP_DROP0__Anonymous2_e__Union._fields_ = [
        ('internalHostV4Addr', UInt32),
        ('internalHostV6Addr', Byte * 16),
    ]
    FWPM_NET_EVENT_IPSEC_DOSP_DROP0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    FWPM_NET_EVENT_IPSEC_DOSP_DROP0._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', FWPM_NET_EVENT_IPSEC_DOSP_DROP0__Anonymous1_e__Union),
        ('Anonymous2', FWPM_NET_EVENT_IPSEC_DOSP_DROP0__Anonymous2_e__Union),
        ('failureStatus', Int32),
        ('direction', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DIRECTION),
    ]
    return FWPM_NET_EVENT_IPSEC_DOSP_DROP0
def _define_FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head():
    class FWPM_NET_EVENT_IPSEC_KERNEL_DROP0(Structure):
        pass
    return FWPM_NET_EVENT_IPSEC_KERNEL_DROP0
def _define_FWPM_NET_EVENT_IPSEC_KERNEL_DROP0():
    FWPM_NET_EVENT_IPSEC_KERNEL_DROP0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head
    FWPM_NET_EVENT_IPSEC_KERNEL_DROP0._fields_ = [
        ('failureStatus', Int32),
        ('direction', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DIRECTION),
        ('spi', UInt32),
        ('filterId', UInt64),
        ('layerId', UInt16),
    ]
    return FWPM_NET_EVENT_IPSEC_KERNEL_DROP0
def _define_FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_head():
    class FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0(Structure):
        pass
    return FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0
def _define_FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0():
    FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_head
    FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0._fields_ = [
        ('spi', UInt32),
    ]
    return FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0
def _define_FWPM_NET_EVENT_SUBSCRIPTION0_head():
    class FWPM_NET_EVENT_SUBSCRIPTION0(Structure):
        pass
    return FWPM_NET_EVENT_SUBSCRIPTION0
def _define_FWPM_NET_EVENT_SUBSCRIPTION0():
    FWPM_NET_EVENT_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_SUBSCRIPTION0_head
    FWPM_NET_EVENT_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_ENUM_TEMPLATE0_head)),
        ('flags', UInt32),
        ('sessionKey', Guid),
    ]
    return FWPM_NET_EVENT_SUBSCRIPTION0
FWPM_NET_EVENT_TYPE = Int32
FWPM_NET_EVENT_TYPE_IKEEXT_MM_FAILURE = 0
FWPM_NET_EVENT_TYPE_IKEEXT_QM_FAILURE = 1
FWPM_NET_EVENT_TYPE_IKEEXT_EM_FAILURE = 2
FWPM_NET_EVENT_TYPE_CLASSIFY_DROP = 3
FWPM_NET_EVENT_TYPE_IPSEC_KERNEL_DROP = 4
FWPM_NET_EVENT_TYPE_IPSEC_DOSP_DROP = 5
FWPM_NET_EVENT_TYPE_CLASSIFY_ALLOW = 6
FWPM_NET_EVENT_TYPE_CAPABILITY_DROP = 7
FWPM_NET_EVENT_TYPE_CAPABILITY_ALLOW = 8
FWPM_NET_EVENT_TYPE_CLASSIFY_DROP_MAC = 9
FWPM_NET_EVENT_TYPE_LPM_PACKET_ARRIVAL = 10
FWPM_NET_EVENT_TYPE_MAX = 11
def _define_FWPM_NET_EVENT0_head():
    class FWPM_NET_EVENT0(Structure):
        pass
    return FWPM_NET_EVENT0
def _define_FWPM_NET_EVENT0():
    FWPM_NET_EVENT0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT0_head
    class FWPM_NET_EVENT0__Anonymous_e__Union(Union):
        pass
    FWPM_NET_EVENT0__Anonymous_e__Union._fields_ = [
        ('ikeMmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE0_head)),
        ('ikeQmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_head)),
        ('ikeEmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE0_head)),
        ('classifyDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP0_head)),
        ('ipsecDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head)),
        ('idpDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head)),
    ]
    FWPM_NET_EVENT0._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT0._fields_ = [
        ('header', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER0),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_TYPE),
        ('Anonymous', FWPM_NET_EVENT0__Anonymous_e__Union),
    ]
    return FWPM_NET_EVENT0
def _define_FWPM_NET_EVENT1_head():
    class FWPM_NET_EVENT1(Structure):
        pass
    return FWPM_NET_EVENT1
def _define_FWPM_NET_EVENT1():
    FWPM_NET_EVENT1 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT1_head
    class FWPM_NET_EVENT1__Anonymous_e__Union(Union):
        pass
    FWPM_NET_EVENT1__Anonymous_e__Union._fields_ = [
        ('ikeMmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE1_head)),
        ('ikeQmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_head)),
        ('ikeEmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE1_head)),
        ('classifyDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP1_head)),
        ('ipsecDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head)),
        ('idpDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head)),
    ]
    FWPM_NET_EVENT1._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT1._fields_ = [
        ('header', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER1),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_TYPE),
        ('Anonymous', FWPM_NET_EVENT1__Anonymous_e__Union),
    ]
    return FWPM_NET_EVENT1
def _define_FWPM_NET_EVENT2_head():
    class FWPM_NET_EVENT2(Structure):
        pass
    return FWPM_NET_EVENT2
def _define_FWPM_NET_EVENT2():
    FWPM_NET_EVENT2 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT2_head
    class FWPM_NET_EVENT2__Anonymous_e__Union(Union):
        pass
    FWPM_NET_EVENT2__Anonymous_e__Union._fields_ = [
        ('ikeMmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE1_head)),
        ('ikeQmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_head)),
        ('ikeEmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE1_head)),
        ('classifyDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP2_head)),
        ('ipsecDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head)),
        ('idpDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head)),
        ('classifyAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_ALLOW0_head)),
        ('capabilityDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_DROP0_head)),
        ('capabilityAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_ALLOW0_head)),
        ('classifyDropMac', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP_MAC0_head)),
    ]
    FWPM_NET_EVENT2._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT2._fields_ = [
        ('header', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER2),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_TYPE),
        ('Anonymous', FWPM_NET_EVENT2__Anonymous_e__Union),
    ]
    return FWPM_NET_EVENT2
def _define_FWPM_NET_EVENT3_head():
    class FWPM_NET_EVENT3(Structure):
        pass
    return FWPM_NET_EVENT3
def _define_FWPM_NET_EVENT3():
    FWPM_NET_EVENT3 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT3_head
    class FWPM_NET_EVENT3__Anonymous_e__Union(Union):
        pass
    FWPM_NET_EVENT3__Anonymous_e__Union._fields_ = [
        ('ikeMmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE1_head)),
        ('ikeQmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE0_head)),
        ('ikeEmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE1_head)),
        ('classifyDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP2_head)),
        ('ipsecDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head)),
        ('idpDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head)),
        ('classifyAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_ALLOW0_head)),
        ('capabilityDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_DROP0_head)),
        ('capabilityAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_ALLOW0_head)),
        ('classifyDropMac', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP_MAC0_head)),
    ]
    FWPM_NET_EVENT3._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT3._fields_ = [
        ('header', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER3),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_TYPE),
        ('Anonymous', FWPM_NET_EVENT3__Anonymous_e__Union),
    ]
    return FWPM_NET_EVENT3
def _define_FWPM_NET_EVENT4_head():
    class FWPM_NET_EVENT4(Structure):
        pass
    return FWPM_NET_EVENT4
def _define_FWPM_NET_EVENT4():
    FWPM_NET_EVENT4 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT4_head
    class FWPM_NET_EVENT4__Anonymous_e__Union(Union):
        pass
    FWPM_NET_EVENT4__Anonymous_e__Union._fields_ = [
        ('ikeMmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_head)),
        ('ikeQmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_head)),
        ('ikeEmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE1_head)),
        ('classifyDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP2_head)),
        ('ipsecDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head)),
        ('idpDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head)),
        ('classifyAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_ALLOW0_head)),
        ('capabilityDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_DROP0_head)),
        ('capabilityAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_ALLOW0_head)),
        ('classifyDropMac', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP_MAC0_head)),
    ]
    FWPM_NET_EVENT4._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT4._fields_ = [
        ('header', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER3),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_TYPE),
        ('Anonymous', FWPM_NET_EVENT4__Anonymous_e__Union),
    ]
    return FWPM_NET_EVENT4
def _define_FWPM_NET_EVENT5_head():
    class FWPM_NET_EVENT5(Structure):
        pass
    return FWPM_NET_EVENT5
def _define_FWPM_NET_EVENT5():
    FWPM_NET_EVENT5 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT5_head
    class FWPM_NET_EVENT5__Anonymous_e__Union(Union):
        pass
    FWPM_NET_EVENT5__Anonymous_e__Union._fields_ = [
        ('ikeMmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_MM_FAILURE2_head)),
        ('ikeQmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_QM_FAILURE1_head)),
        ('ikeEmFailure', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IKEEXT_EM_FAILURE1_head)),
        ('classifyDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP2_head)),
        ('ipsecDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_KERNEL_DROP0_head)),
        ('idpDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_IPSEC_DOSP_DROP0_head)),
        ('classifyAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_ALLOW0_head)),
        ('capabilityDrop', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_DROP0_head)),
        ('capabilityAllow', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CAPABILITY_ALLOW0_head)),
        ('classifyDropMac', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_CLASSIFY_DROP_MAC0_head)),
        ('lpmPacketArrival', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0_head)),
    ]
    FWPM_NET_EVENT5._anonymous_ = [
        'Anonymous',
    ]
    FWPM_NET_EVENT5._fields_ = [
        ('header', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_HEADER3),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_NET_EVENT_TYPE),
        ('Anonymous', FWPM_NET_EVENT5__Anonymous_e__Union),
    ]
    return FWPM_NET_EVENT5
def _define_FWPM_PROVIDER_CHANGE_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CHANGE0_head))
def _define_FWPM_PROVIDER_CHANGE0_head():
    class FWPM_PROVIDER_CHANGE0(Structure):
        pass
    return FWPM_PROVIDER_CHANGE0
def _define_FWPM_PROVIDER_CHANGE0():
    FWPM_PROVIDER_CHANGE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CHANGE0_head
    FWPM_PROVIDER_CHANGE0._fields_ = [
        ('changeType', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CHANGE_TYPE),
        ('providerKey', Guid),
    ]
    return FWPM_PROVIDER_CHANGE0
def _define_FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_CHANGE0_head))
def _define_FWPM_PROVIDER_CONTEXT_CHANGE0_head():
    class FWPM_PROVIDER_CONTEXT_CHANGE0(Structure):
        pass
    return FWPM_PROVIDER_CONTEXT_CHANGE0
def _define_FWPM_PROVIDER_CONTEXT_CHANGE0():
    FWPM_PROVIDER_CONTEXT_CHANGE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_CHANGE0_head
    FWPM_PROVIDER_CONTEXT_CHANGE0._fields_ = [
        ('changeType', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CHANGE_TYPE),
        ('providerContextKey', Guid),
        ('providerContextId', UInt64),
    ]
    return FWPM_PROVIDER_CONTEXT_CHANGE0
def _define_FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0_head():
    class FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0
def _define_FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0():
    FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0_head
    FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0._fields_ = [
        ('providerKey', POINTER(Guid)),
        ('providerContextType', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_TYPE),
    ]
    return FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0
def _define_FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0_head():
    class FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0(Structure):
        pass
    return FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0
def _define_FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0():
    FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0_head
    FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBSCRIPTION_FLAGS),
        ('sessionKey', Guid),
    ]
    return FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0
FWPM_PROVIDER_CONTEXT_TYPE = Int32
FWPM_IPSEC_KEYING_CONTEXT = 0
FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT = 1
FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT = 2
FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT = 3
FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT = 4
FWPM_IPSEC_IKE_MM_CONTEXT = 5
FWPM_IPSEC_AUTHIP_MM_CONTEXT = 6
FWPM_CLASSIFY_OPTIONS_CONTEXT = 7
FWPM_GENERAL_CONTEXT = 8
FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT = 9
FWPM_IPSEC_IKEV2_MM_CONTEXT = 10
FWPM_IPSEC_DOSP_CONTEXT = 11
FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT = 12
FWPM_PROVIDER_CONTEXT_TYPE_MAX = 13
def _define_FWPM_PROVIDER_CONTEXT0_head():
    class FWPM_PROVIDER_CONTEXT0(Structure):
        pass
    return FWPM_PROVIDER_CONTEXT0
def _define_FWPM_PROVIDER_CONTEXT0():
    FWPM_PROVIDER_CONTEXT0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT0_head
    class FWPM_PROVIDER_CONTEXT0__Anonymous_e__Union(Union):
        pass
    FWPM_PROVIDER_CONTEXT0__Anonymous_e__Union._fields_ = [
        ('keyingPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYING_POLICY0_head)),
        ('ikeQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY0_head)),
        ('ikeQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY0_head)),
        ('authipQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY0_head)),
        ('authipQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY0_head)),
        ('ikeMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY0_head)),
        ('authIpMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY0_head)),
        ('dataBuffer', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('classifyOptions', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CLASSIFY_OPTIONS0_head)),
    ]
    FWPM_PROVIDER_CONTEXT0._anonymous_ = [
        'Anonymous',
    ]
    FWPM_PROVIDER_CONTEXT0._fields_ = [
        ('providerContextKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('providerKey', POINTER(Guid)),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_TYPE),
        ('Anonymous', FWPM_PROVIDER_CONTEXT0__Anonymous_e__Union),
        ('providerContextId', UInt64),
    ]
    return FWPM_PROVIDER_CONTEXT0
def _define_FWPM_PROVIDER_CONTEXT1_head():
    class FWPM_PROVIDER_CONTEXT1(Structure):
        pass
    return FWPM_PROVIDER_CONTEXT1
def _define_FWPM_PROVIDER_CONTEXT1():
    FWPM_PROVIDER_CONTEXT1 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT1_head
    class FWPM_PROVIDER_CONTEXT1__Anonymous_e__Union(Union):
        pass
    FWPM_PROVIDER_CONTEXT1__Anonymous_e__Union._fields_ = [
        ('keyingPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYING_POLICY0_head)),
        ('ikeQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY1_head)),
        ('ikeQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY1_head)),
        ('authipQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY1_head)),
        ('authipQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY1_head)),
        ('ikeMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY1_head)),
        ('authIpMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY1_head)),
        ('dataBuffer', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('classifyOptions', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CLASSIFY_OPTIONS0_head)),
        ('ikeV2QmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY1_head)),
        ('ikeV2MmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY1_head)),
        ('idpOptions', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_OPTIONS0_head)),
    ]
    FWPM_PROVIDER_CONTEXT1._anonymous_ = [
        'Anonymous',
    ]
    FWPM_PROVIDER_CONTEXT1._fields_ = [
        ('providerContextKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('providerKey', POINTER(Guid)),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_TYPE),
        ('Anonymous', FWPM_PROVIDER_CONTEXT1__Anonymous_e__Union),
        ('providerContextId', UInt64),
    ]
    return FWPM_PROVIDER_CONTEXT1
def _define_FWPM_PROVIDER_CONTEXT2_head():
    class FWPM_PROVIDER_CONTEXT2(Structure):
        pass
    return FWPM_PROVIDER_CONTEXT2
def _define_FWPM_PROVIDER_CONTEXT2():
    FWPM_PROVIDER_CONTEXT2 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT2_head
    class FWPM_PROVIDER_CONTEXT2__Anonymous_e__Union(Union):
        pass
    FWPM_PROVIDER_CONTEXT2__Anonymous_e__Union._fields_ = [
        ('keyingPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYING_POLICY1_head)),
        ('ikeQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY2_head)),
        ('ikeQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY2_head)),
        ('authipQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY2_head)),
        ('authipQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY2_head)),
        ('ikeMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY2_head)),
        ('authIpMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY2_head)),
        ('dataBuffer', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('classifyOptions', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CLASSIFY_OPTIONS0_head)),
        ('ikeV2QmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY2_head)),
        ('ikeV2QmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY2_head)),
        ('ikeV2MmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY2_head)),
        ('idpOptions', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_OPTIONS0_head)),
    ]
    FWPM_PROVIDER_CONTEXT2._anonymous_ = [
        'Anonymous',
    ]
    FWPM_PROVIDER_CONTEXT2._fields_ = [
        ('providerContextKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('providerKey', POINTER(Guid)),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_TYPE),
        ('Anonymous', FWPM_PROVIDER_CONTEXT2__Anonymous_e__Union),
        ('providerContextId', UInt64),
    ]
    return FWPM_PROVIDER_CONTEXT2
def _define_FWPM_PROVIDER_CONTEXT3_head():
    class FWPM_PROVIDER_CONTEXT3(Structure):
        pass
    return FWPM_PROVIDER_CONTEXT3
def _define_FWPM_PROVIDER_CONTEXT3():
    FWPM_PROVIDER_CONTEXT3 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT3_head
    class FWPM_PROVIDER_CONTEXT3__Anonymous_e__Union(Union):
        pass
    FWPM_PROVIDER_CONTEXT3__Anonymous_e__Union._fields_ = [
        ('keyingPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYING_POLICY1_head)),
        ('ikeQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY2_head)),
        ('ikeQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY3_head)),
        ('authipQmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY2_head)),
        ('authipQmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY3_head)),
        ('ikeMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY2_head)),
        ('authIpMmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY2_head)),
        ('dataBuffer', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB_head)),
        ('classifyOptions', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CLASSIFY_OPTIONS0_head)),
        ('ikeV2QmTunnelPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY3_head)),
        ('ikeV2QmTransportPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY2_head)),
        ('ikeV2MmPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY2_head)),
        ('idpOptions', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_OPTIONS0_head)),
    ]
    FWPM_PROVIDER_CONTEXT3._anonymous_ = [
        'Anonymous',
    ]
    FWPM_PROVIDER_CONTEXT3._fields_ = [
        ('providerContextKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('providerKey', POINTER(Guid)),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_CONTEXT_TYPE),
        ('Anonymous', FWPM_PROVIDER_CONTEXT3__Anonymous_e__Union),
        ('providerContextId', UInt64),
    ]
    return FWPM_PROVIDER_CONTEXT3
def _define_FWPM_PROVIDER_ENUM_TEMPLATE0_head():
    class FWPM_PROVIDER_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_PROVIDER_ENUM_TEMPLATE0
def _define_FWPM_PROVIDER_ENUM_TEMPLATE0():
    FWPM_PROVIDER_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_ENUM_TEMPLATE0_head
    FWPM_PROVIDER_ENUM_TEMPLATE0._fields_ = [
        ('reserved', UInt64),
    ]
    return FWPM_PROVIDER_ENUM_TEMPLATE0
def _define_FWPM_PROVIDER_SUBSCRIPTION0_head():
    class FWPM_PROVIDER_SUBSCRIPTION0(Structure):
        pass
    return FWPM_PROVIDER_SUBSCRIPTION0
def _define_FWPM_PROVIDER_SUBSCRIPTION0():
    FWPM_PROVIDER_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_SUBSCRIPTION0_head
    FWPM_PROVIDER_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER_ENUM_TEMPLATE0_head)),
        ('flags', UInt32),
        ('sessionKey', Guid),
    ]
    return FWPM_PROVIDER_SUBSCRIPTION0
def _define_FWPM_PROVIDER0_head():
    class FWPM_PROVIDER0(Structure):
        pass
    return FWPM_PROVIDER0
def _define_FWPM_PROVIDER0():
    FWPM_PROVIDER0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_PROVIDER0_head
    FWPM_PROVIDER0._fields_ = [
        ('providerKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('serviceName', win32more.Foundation.PWSTR),
    ]
    return FWPM_PROVIDER0
FWPM_SERVICE_STATE = Int32
FWPM_SERVICE_STOPPED = 0
FWPM_SERVICE_START_PENDING = 1
FWPM_SERVICE_STOP_PENDING = 2
FWPM_SERVICE_RUNNING = 3
FWPM_SERVICE_STATE_MAX = 4
def _define_FWPM_SESSION_ENUM_TEMPLATE0_head():
    class FWPM_SESSION_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_SESSION_ENUM_TEMPLATE0
def _define_FWPM_SESSION_ENUM_TEMPLATE0():
    FWPM_SESSION_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SESSION_ENUM_TEMPLATE0_head
    FWPM_SESSION_ENUM_TEMPLATE0._fields_ = [
        ('reserved', UInt64),
    ]
    return FWPM_SESSION_ENUM_TEMPLATE0
def _define_FWPM_SESSION0_head():
    class FWPM_SESSION0(Structure):
        pass
    return FWPM_SESSION0
def _define_FWPM_SESSION0():
    FWPM_SESSION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SESSION0_head
    FWPM_SESSION0._fields_ = [
        ('sessionKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('txnWaitTimeoutInMSec', UInt32),
        ('processId', UInt32),
        ('sid', POINTER(win32more.Security.SID_head)),
        ('username', win32more.Foundation.PWSTR),
        ('kernelMode', win32more.Foundation.BOOL),
    ]
    return FWPM_SESSION0
def _define_FWPM_STATISTICS0_head():
    class FWPM_STATISTICS0(Structure):
        pass
    return FWPM_STATISTICS0
def _define_FWPM_STATISTICS0():
    FWPM_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_STATISTICS0_head
    FWPM_STATISTICS0._fields_ = [
        ('numLayerStatistics', UInt32),
        ('layerStatistics', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_LAYER_STATISTICS0_head)),
        ('inboundAllowedConnectionsV4', UInt32),
        ('inboundBlockedConnectionsV4', UInt32),
        ('outboundAllowedConnectionsV4', UInt32),
        ('outboundBlockedConnectionsV4', UInt32),
        ('inboundAllowedConnectionsV6', UInt32),
        ('inboundBlockedConnectionsV6', UInt32),
        ('outboundAllowedConnectionsV6', UInt32),
        ('outboundBlockedConnectionsV6', UInt32),
        ('inboundActiveConnectionsV4', UInt32),
        ('outboundActiveConnectionsV4', UInt32),
        ('inboundActiveConnectionsV6', UInt32),
        ('outboundActiveConnectionsV6', UInt32),
        ('reauthDirInbound', UInt64),
        ('reauthDirOutbound', UInt64),
        ('reauthFamilyV4', UInt64),
        ('reauthFamilyV6', UInt64),
        ('reauthProtoOther', UInt64),
        ('reauthProtoIPv4', UInt64),
        ('reauthProtoIPv6', UInt64),
        ('reauthProtoICMP', UInt64),
        ('reauthProtoICMP6', UInt64),
        ('reauthProtoUDP', UInt64),
        ('reauthProtoTCP', UInt64),
        ('reauthReasonPolicyChange', UInt64),
        ('reauthReasonNewArrivalInterface', UInt64),
        ('reauthReasonNewNextHopInterface', UInt64),
        ('reauthReasonProfileCrossing', UInt64),
        ('reauthReasonClassifyCompletion', UInt64),
        ('reauthReasonIPSecPropertiesChanged', UInt64),
        ('reauthReasonMidStreamInspection', UInt64),
        ('reauthReasonSocketPropertyChanged', UInt64),
        ('reauthReasonNewInboundMCastBCastPacket', UInt64),
        ('reauthReasonEDPPolicyChanged', UInt64),
        ('reauthReasonProxyHandleChanged', UInt64),
    ]
    return FWPM_STATISTICS0
def _define_FWPM_SUBLAYER_CHANGE_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_CHANGE0_head))
def _define_FWPM_SUBLAYER_CHANGE0_head():
    class FWPM_SUBLAYER_CHANGE0(Structure):
        pass
    return FWPM_SUBLAYER_CHANGE0
def _define_FWPM_SUBLAYER_CHANGE0():
    FWPM_SUBLAYER_CHANGE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_CHANGE0_head
    FWPM_SUBLAYER_CHANGE0._fields_ = [
        ('changeType', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_CHANGE_TYPE),
        ('subLayerKey', Guid),
    ]
    return FWPM_SUBLAYER_CHANGE0
def _define_FWPM_SUBLAYER_ENUM_TEMPLATE0_head():
    class FWPM_SUBLAYER_ENUM_TEMPLATE0(Structure):
        pass
    return FWPM_SUBLAYER_ENUM_TEMPLATE0
def _define_FWPM_SUBLAYER_ENUM_TEMPLATE0():
    FWPM_SUBLAYER_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_ENUM_TEMPLATE0_head
    FWPM_SUBLAYER_ENUM_TEMPLATE0._fields_ = [
        ('providerKey', POINTER(Guid)),
    ]
    return FWPM_SUBLAYER_ENUM_TEMPLATE0
def _define_FWPM_SUBLAYER_SUBSCRIPTION0_head():
    class FWPM_SUBLAYER_SUBSCRIPTION0(Structure):
        pass
    return FWPM_SUBLAYER_SUBSCRIPTION0
def _define_FWPM_SUBLAYER_SUBSCRIPTION0():
    FWPM_SUBLAYER_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_SUBSCRIPTION0_head
    FWPM_SUBLAYER_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER_ENUM_TEMPLATE0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBSCRIPTION_FLAGS),
        ('sessionKey', Guid),
    ]
    return FWPM_SUBLAYER_SUBSCRIPTION0
def _define_FWPM_SUBLAYER0_head():
    class FWPM_SUBLAYER0(Structure):
        pass
    return FWPM_SUBLAYER0
def _define_FWPM_SUBLAYER0():
    FWPM_SUBLAYER0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SUBLAYER0_head
    FWPM_SUBLAYER0._fields_ = [
        ('subLayerKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('providerKey', POINTER(Guid)),
        ('providerData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('weight', UInt16),
    ]
    return FWPM_SUBLAYER0
FWPM_SUBSCRIPTION_FLAGS = UInt32
FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_ADD = 1
FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_DELETE = 2
FWPM_SYSTEM_PORT_TYPE = Int32
FWPM_SYSTEM_PORT_RPC_EPMAP = 0
FWPM_SYSTEM_PORT_TEREDO = 1
FWPM_SYSTEM_PORT_IPHTTPS_IN = 2
FWPM_SYSTEM_PORT_IPHTTPS_OUT = 3
FWPM_SYSTEM_PORT_TYPE_MAX = 4
def _define_FWPM_SYSTEM_PORTS_BY_TYPE0_head():
    class FWPM_SYSTEM_PORTS_BY_TYPE0(Structure):
        pass
    return FWPM_SYSTEM_PORTS_BY_TYPE0
def _define_FWPM_SYSTEM_PORTS_BY_TYPE0():
    FWPM_SYSTEM_PORTS_BY_TYPE0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SYSTEM_PORTS_BY_TYPE0_head
    FWPM_SYSTEM_PORTS_BY_TYPE0._fields_ = [
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SYSTEM_PORT_TYPE),
        ('numPorts', UInt32),
        ('ports', POINTER(UInt16)),
    ]
    return FWPM_SYSTEM_PORTS_BY_TYPE0
def _define_FWPM_SYSTEM_PORTS_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SYSTEM_PORTS0_head))
def _define_FWPM_SYSTEM_PORTS0_head():
    class FWPM_SYSTEM_PORTS0(Structure):
        pass
    return FWPM_SYSTEM_PORTS0
def _define_FWPM_SYSTEM_PORTS0():
    FWPM_SYSTEM_PORTS0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SYSTEM_PORTS0_head
    FWPM_SYSTEM_PORTS0._fields_ = [
        ('numTypes', UInt32),
        ('types', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_SYSTEM_PORTS_BY_TYPE0_head)),
    ]
    return FWPM_SYSTEM_PORTS0
def _define_FWPM_VSWITCH_EVENT_CALLBACK0():
    return WINFUNCTYPE(UInt32,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_VSWITCH_EVENT0_head))
def _define_FWPM_VSWITCH_EVENT_SUBSCRIPTION0_head():
    class FWPM_VSWITCH_EVENT_SUBSCRIPTION0(Structure):
        pass
    return FWPM_VSWITCH_EVENT_SUBSCRIPTION0
def _define_FWPM_VSWITCH_EVENT_SUBSCRIPTION0():
    FWPM_VSWITCH_EVENT_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_VSWITCH_EVENT_SUBSCRIPTION0_head
    FWPM_VSWITCH_EVENT_SUBSCRIPTION0._fields_ = [
        ('flags', UInt32),
        ('sessionKey', Guid),
    ]
    return FWPM_VSWITCH_EVENT_SUBSCRIPTION0
FWPM_VSWITCH_EVENT_TYPE = Int32
FWPM_VSWITCH_EVENT_FILTER_ADD_TO_INCOMPLETE_LAYER = 0
FWPM_VSWITCH_EVENT_FILTER_ENGINE_NOT_IN_REQUIRED_POSITION = 1
FWPM_VSWITCH_EVENT_ENABLED_FOR_INSPECTION = 2
FWPM_VSWITCH_EVENT_DISABLED_FOR_INSPECTION = 3
FWPM_VSWITCH_EVENT_FILTER_ENGINE_REORDER = 4
FWPM_VSWITCH_EVENT_MAX = 5
def _define_FWPM_VSWITCH_EVENT0_head():
    class FWPM_VSWITCH_EVENT0(Structure):
        pass
    return FWPM_VSWITCH_EVENT0
def _define_FWPM_VSWITCH_EVENT0():
    FWPM_VSWITCH_EVENT0 = win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_VSWITCH_EVENT0_head
    class FWPM_VSWITCH_EVENT0__Anonymous_e__Union(Union):
        pass
    class FWPM_VSWITCH_EVENT0__Anonymous_e__Union__positionInfo_e__Struct(Structure):
        pass
    FWPM_VSWITCH_EVENT0__Anonymous_e__Union__positionInfo_e__Struct._fields_ = [
        ('numvSwitchFilterExtensions', UInt32),
        ('vSwitchFilterExtensions', POINTER(win32more.Foundation.PWSTR)),
    ]
    class FWPM_VSWITCH_EVENT0__Anonymous_e__Union__reorderInfo_e__Struct(Structure):
        pass
    FWPM_VSWITCH_EVENT0__Anonymous_e__Union__reorderInfo_e__Struct._fields_ = [
        ('inRequiredPosition', win32more.Foundation.BOOL),
        ('numvSwitchFilterExtensions', UInt32),
        ('vSwitchFilterExtensions', POINTER(win32more.Foundation.PWSTR)),
    ]
    FWPM_VSWITCH_EVENT0__Anonymous_e__Union._fields_ = [
        ('positionInfo', FWPM_VSWITCH_EVENT0__Anonymous_e__Union__positionInfo_e__Struct),
        ('reorderInfo', FWPM_VSWITCH_EVENT0__Anonymous_e__Union__reorderInfo_e__Struct),
    ]
    FWPM_VSWITCH_EVENT0._anonymous_ = [
        'Anonymous',
    ]
    FWPM_VSWITCH_EVENT0._fields_ = [
        ('eventType', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_VSWITCH_EVENT_TYPE),
        ('vSwitchId', win32more.Foundation.PWSTR),
        ('Anonymous', FWPM_VSWITCH_EVENT0__Anonymous_e__Union),
    ]
    return FWPM_VSWITCH_EVENT0
IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE = Int32
IKEEXT_IMPERSONATION_NONE = 0
IKEEXT_IMPERSONATION_SOCKET_PRINCIPAL = 1
IKEEXT_IMPERSONATION_MAX = 2
IKEEXT_AUTHENTICATION_METHOD_TYPE = Int32
IKEEXT_PRESHARED_KEY = 0
IKEEXT_CERTIFICATE = 1
IKEEXT_KERBEROS = 2
IKEEXT_ANONYMOUS = 3
IKEEXT_SSL = 4
IKEEXT_NTLM_V2 = 5
IKEEXT_IPV6_CGA = 6
IKEEXT_CERTIFICATE_ECDSA_P256 = 7
IKEEXT_CERTIFICATE_ECDSA_P384 = 8
IKEEXT_SSL_ECDSA_P256 = 9
IKEEXT_SSL_ECDSA_P384 = 10
IKEEXT_EAP = 11
IKEEXT_RESERVED = 12
IKEEXT_AUTHENTICATION_METHOD_TYPE_MAX = 13
def _define_IKEEXT_AUTHENTICATION_METHOD0_head():
    class IKEEXT_AUTHENTICATION_METHOD0(Structure):
        pass
    return IKEEXT_AUTHENTICATION_METHOD0
def _define_IKEEXT_AUTHENTICATION_METHOD0():
    IKEEXT_AUTHENTICATION_METHOD0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD0_head
    class IKEEXT_AUTHENTICATION_METHOD0__Anonymous_e__Union(Union):
        pass
    IKEEXT_AUTHENTICATION_METHOD0__Anonymous_e__Union._fields_ = [
        ('presharedKeyAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION0),
        ('certificateAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION0),
        ('kerberosAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KERBEROS_AUTHENTICATION0),
        ('ntlmV2Authentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NTLM_V2_AUTHENTICATION0),
        ('sslAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION0),
        ('cgaAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IPV6_CGA_AUTHENTICATION0),
    ]
    IKEEXT_AUTHENTICATION_METHOD0._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_AUTHENTICATION_METHOD0._fields_ = [
        ('authenticationMethodType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('Anonymous', IKEEXT_AUTHENTICATION_METHOD0__Anonymous_e__Union),
    ]
    return IKEEXT_AUTHENTICATION_METHOD0
def _define_IKEEXT_AUTHENTICATION_METHOD1_head():
    class IKEEXT_AUTHENTICATION_METHOD1(Structure):
        pass
    return IKEEXT_AUTHENTICATION_METHOD1
def _define_IKEEXT_AUTHENTICATION_METHOD1():
    IKEEXT_AUTHENTICATION_METHOD1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD1_head
    class IKEEXT_AUTHENTICATION_METHOD1__Anonymous_e__Union(Union):
        pass
    IKEEXT_AUTHENTICATION_METHOD1__Anonymous_e__Union._fields_ = [
        ('presharedKeyAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION1),
        ('certificateAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION1),
        ('kerberosAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KERBEROS_AUTHENTICATION0),
        ('ntlmV2Authentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NTLM_V2_AUTHENTICATION0),
        ('sslAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION1),
        ('cgaAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IPV6_CGA_AUTHENTICATION0),
        ('eapAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EAP_AUTHENTICATION0),
    ]
    IKEEXT_AUTHENTICATION_METHOD1._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_AUTHENTICATION_METHOD1._fields_ = [
        ('authenticationMethodType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('Anonymous', IKEEXT_AUTHENTICATION_METHOD1__Anonymous_e__Union),
    ]
    return IKEEXT_AUTHENTICATION_METHOD1
def _define_IKEEXT_AUTHENTICATION_METHOD2_head():
    class IKEEXT_AUTHENTICATION_METHOD2(Structure):
        pass
    return IKEEXT_AUTHENTICATION_METHOD2
def _define_IKEEXT_AUTHENTICATION_METHOD2():
    IKEEXT_AUTHENTICATION_METHOD2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD2_head
    class IKEEXT_AUTHENTICATION_METHOD2__Anonymous_e__Union(Union):
        pass
    IKEEXT_AUTHENTICATION_METHOD2__Anonymous_e__Union._fields_ = [
        ('presharedKeyAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION1),
        ('certificateAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION2),
        ('kerberosAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KERBEROS_AUTHENTICATION1),
        ('reservedAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_RESERVED_AUTHENTICATION0),
        ('ntlmV2Authentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NTLM_V2_AUTHENTICATION0),
        ('sslAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION2),
        ('cgaAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IPV6_CGA_AUTHENTICATION0),
        ('eapAuthentication', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EAP_AUTHENTICATION0),
    ]
    IKEEXT_AUTHENTICATION_METHOD2._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_AUTHENTICATION_METHOD2._fields_ = [
        ('authenticationMethodType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('Anonymous', IKEEXT_AUTHENTICATION_METHOD2__Anonymous_e__Union),
    ]
    return IKEEXT_AUTHENTICATION_METHOD2
IKEEXT_CERT_AUTH = UInt32
IKEEXT_CERT_AUTH_FLAG_SSL_ONE_WAY = 1
IKEEXT_CERT_AUTH_ENABLE_CRL_CHECK_STRONG = 4
IKEEXT_CERT_AUTH_DISABLE_SSL_CERT_VALIDATION = 8
IKEEXT_CERT_AUTH_ALLOW_HTTP_CERT_LOOKUP = 16
IKEEXT_CERT_AUTH_URL_CONTAINS_BUNDLE = 32
IKEEXT_CERT_CONFIG_TYPE = Int32
IKEEXT_CERT_CONFIG_EXPLICIT_TRUST_LIST = 0
IKEEXT_CERT_CONFIG_ENTERPRISE_STORE = 1
IKEEXT_CERT_CONFIG_TRUSTED_ROOT_STORE = 2
IKEEXT_CERT_CONFIG_UNSPECIFIED = 3
IKEEXT_CERT_CONFIG_TYPE_MAX = 4
IKEEXT_CERT_CRITERIA_NAME_TYPE = Int32
IKEEXT_CERT_CRITERIA_DNS = 0
IKEEXT_CERT_CRITERIA_UPN = 1
IKEEXT_CERT_CRITERIA_RFC822 = 2
IKEEXT_CERT_CRITERIA_CN = 3
IKEEXT_CERT_CRITERIA_OU = 4
IKEEXT_CERT_CRITERIA_O = 5
IKEEXT_CERT_CRITERIA_DC = 6
IKEEXT_CERT_CRITERIA_NAME_TYPE_MAX = 7
def _define_IKEEXT_CERT_EKUS0_head():
    class IKEEXT_CERT_EKUS0(Structure):
        pass
    return IKEEXT_CERT_EKUS0
def _define_IKEEXT_CERT_EKUS0():
    IKEEXT_CERT_EKUS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_EKUS0_head
    IKEEXT_CERT_EKUS0._fields_ = [
        ('numEku', UInt32),
        ('eku', POINTER(win32more.Foundation.PSTR)),
    ]
    return IKEEXT_CERT_EKUS0
IKEEXT_CERT_FLAGS = UInt32
IKEEXT_CERT_FLAG_ENABLE_ACCOUNT_MAPPING = 1
IKEEXT_CERT_FLAG_DISABLE_REQUEST_PAYLOAD = 2
IKEEXT_CERT_FLAG_USE_NAP_CERTIFICATE = 4
IKEEXT_CERT_FLAG_INTERMEDIATE_CA = 8
IKEEXT_CERT_FLAG_IGNORE_INIT_CERT_MAP_FAILURE = 16
IKEEXT_CERT_FLAG_PREFER_NAP_CERTIFICATE_OUTBOUND = 32
IKEEXT_CERT_FLAG_SELECT_NAP_CERTIFICATE = 64
IKEEXT_CERT_FLAG_VERIFY_NAP_CERTIFICATE = 128
IKEEXT_CERT_FLAG_FOLLOW_RENEWAL_CERTIFICATE = 256
def _define_IKEEXT_CERT_NAME0_head():
    class IKEEXT_CERT_NAME0(Structure):
        pass
    return IKEEXT_CERT_NAME0
def _define_IKEEXT_CERT_NAME0():
    IKEEXT_CERT_NAME0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_NAME0_head
    IKEEXT_CERT_NAME0._fields_ = [
        ('nameType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_CRITERIA_NAME_TYPE),
        ('certName', win32more.Foundation.PWSTR),
    ]
    return IKEEXT_CERT_NAME0
def _define_IKEEXT_CERT_ROOT_CONFIG0_head():
    class IKEEXT_CERT_ROOT_CONFIG0(Structure):
        pass
    return IKEEXT_CERT_ROOT_CONFIG0
def _define_IKEEXT_CERT_ROOT_CONFIG0():
    IKEEXT_CERT_ROOT_CONFIG0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head
    IKEEXT_CERT_ROOT_CONFIG0._fields_ = [
        ('certData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_FLAGS),
    ]
    return IKEEXT_CERT_ROOT_CONFIG0
def _define_IKEEXT_CERTIFICATE_AUTHENTICATION0_head():
    class IKEEXT_CERTIFICATE_AUTHENTICATION0(Structure):
        pass
    return IKEEXT_CERTIFICATE_AUTHENTICATION0
def _define_IKEEXT_CERTIFICATE_AUTHENTICATION0():
    IKEEXT_CERTIFICATE_AUTHENTICATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION0_head
    class IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous1_e__Union(Union):
        pass
    class IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous1_e__Union__Anonymous_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous1_e__Union__Anonymous_e__Struct._fields_ = [
        ('inboundRootArraySize', UInt32),
        ('inboundRootArray', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous1_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous1_e__Union._fields_ = [
        ('Anonymous', IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous1_e__Union__Anonymous_e__Struct),
        ('inboundEnterpriseStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
        ('inboundTrustedRootStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    class IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous2_e__Union(Union):
        pass
    class IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous2_e__Union__Anonymous_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous2_e__Union__Anonymous_e__Struct._fields_ = [
        ('outboundRootArraySize', UInt32),
        ('outboundRootArray', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous2_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous2_e__Union._fields_ = [
        ('Anonymous', IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous2_e__Union__Anonymous_e__Struct),
        ('outboundEnterpriseStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
        ('outboundTrustedRootStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION0._fields_ = [
        ('inboundConfigType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_CONFIG_TYPE),
        ('Anonymous1', IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous1_e__Union),
        ('outboundConfigType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_CONFIG_TYPE),
        ('Anonymous2', IKEEXT_CERTIFICATE_AUTHENTICATION0__Anonymous2_e__Union),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_AUTH),
    ]
    return IKEEXT_CERTIFICATE_AUTHENTICATION0
def _define_IKEEXT_CERTIFICATE_AUTHENTICATION1_head():
    class IKEEXT_CERTIFICATE_AUTHENTICATION1(Structure):
        pass
    return IKEEXT_CERTIFICATE_AUTHENTICATION1
def _define_IKEEXT_CERTIFICATE_AUTHENTICATION1():
    IKEEXT_CERTIFICATE_AUTHENTICATION1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION1_head
    class IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous1_e__Union(Union):
        pass
    class IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous1_e__Union__Anonymous_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous1_e__Union__Anonymous_e__Struct._fields_ = [
        ('inboundRootArraySize', UInt32),
        ('inboundRootArray', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous1_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous1_e__Union._fields_ = [
        ('Anonymous', IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous1_e__Union__Anonymous_e__Struct),
        ('inboundEnterpriseStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
        ('inboundTrustedRootStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    class IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous2_e__Union(Union):
        pass
    class IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous2_e__Union__Anonymous_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous2_e__Union__Anonymous_e__Struct._fields_ = [
        ('outboundRootArraySize', UInt32),
        ('outboundRootArray', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous2_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous2_e__Union._fields_ = [
        ('Anonymous', IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous2_e__Union__Anonymous_e__Struct),
        ('outboundEnterpriseStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
        ('outboundTrustedRootStoreConfig', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_ROOT_CONFIG0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION1._fields_ = [
        ('inboundConfigType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_CONFIG_TYPE),
        ('Anonymous1', IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous1_e__Union),
        ('outboundConfigType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_CONFIG_TYPE),
        ('Anonymous2', IKEEXT_CERTIFICATE_AUTHENTICATION1__Anonymous2_e__Union),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_AUTH),
        ('localCertLocationUrl', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IKEEXT_CERTIFICATE_AUTHENTICATION1
def _define_IKEEXT_CERTIFICATE_AUTHENTICATION2_head():
    class IKEEXT_CERTIFICATE_AUTHENTICATION2(Structure):
        pass
    return IKEEXT_CERTIFICATE_AUTHENTICATION2
def _define_IKEEXT_CERTIFICATE_AUTHENTICATION2():
    IKEEXT_CERTIFICATE_AUTHENTICATION2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_AUTHENTICATION2_head
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union(Union):
        pass
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous1_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous1_e__Struct._fields_ = [
        ('inboundRootArraySize', UInt32),
        ('inboundRootCriteria', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CRITERIA0_head)),
    ]
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous2_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous2_e__Struct._fields_ = [
        ('inboundEnterpriseStoreArraySize', UInt32),
        ('inboundEnterpriseStoreCriteria', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CRITERIA0_head)),
    ]
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous3_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous3_e__Struct._fields_ = [
        ('inboundRootStoreArraySize', UInt32),
        ('inboundTrustedRootStoreCriteria', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CRITERIA0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union._fields_ = [
        ('Anonymous1', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous1_e__Struct),
        ('Anonymous2', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous2_e__Struct),
        ('Anonymous3', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union__Anonymous3_e__Struct),
    ]
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union(Union):
        pass
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous1_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous1_e__Struct._fields_ = [
        ('outboundRootArraySize', UInt32),
        ('outboundRootCriteria', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CRITERIA0_head)),
    ]
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous2_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous2_e__Struct._fields_ = [
        ('outboundEnterpriseStoreArraySize', UInt32),
        ('outboundEnterpriseStoreCriteria', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CRITERIA0_head)),
    ]
    class IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous3_e__Struct(Structure):
        pass
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous3_e__Struct._fields_ = [
        ('outboundRootStoreArraySize', UInt32),
        ('outboundTrustedRootStoreCriteria', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CRITERIA0_head)),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union._fields_ = [
        ('Anonymous1', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous1_e__Struct),
        ('Anonymous2', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous2_e__Struct),
        ('Anonymous3', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union__Anonymous3_e__Struct),
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IKEEXT_CERTIFICATE_AUTHENTICATION2._fields_ = [
        ('inboundConfigType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_CONFIG_TYPE),
        ('Anonymous1', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous1_e__Union),
        ('outboundConfigType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_CONFIG_TYPE),
        ('Anonymous2', IKEEXT_CERTIFICATE_AUTHENTICATION2__Anonymous2_e__Union),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_AUTH),
        ('localCertLocationUrl', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IKEEXT_CERTIFICATE_AUTHENTICATION2
def _define_IKEEXT_CERTIFICATE_CREDENTIAL0_head():
    class IKEEXT_CERTIFICATE_CREDENTIAL0(Structure):
        pass
    return IKEEXT_CERTIFICATE_CREDENTIAL0
def _define_IKEEXT_CERTIFICATE_CREDENTIAL0():
    IKEEXT_CERTIFICATE_CREDENTIAL0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CREDENTIAL0_head
    IKEEXT_CERTIFICATE_CREDENTIAL0._fields_ = [
        ('subjectName', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('certHash', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('flags', UInt32),
    ]
    return IKEEXT_CERTIFICATE_CREDENTIAL0
def _define_IKEEXT_CERTIFICATE_CREDENTIAL1_head():
    class IKEEXT_CERTIFICATE_CREDENTIAL1(Structure):
        pass
    return IKEEXT_CERTIFICATE_CREDENTIAL1
def _define_IKEEXT_CERTIFICATE_CREDENTIAL1():
    IKEEXT_CERTIFICATE_CREDENTIAL1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CREDENTIAL1_head
    IKEEXT_CERTIFICATE_CREDENTIAL1._fields_ = [
        ('subjectName', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('certHash', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('flags', UInt32),
        ('certificate', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IKEEXT_CERTIFICATE_CREDENTIAL1
def _define_IKEEXT_CERTIFICATE_CRITERIA0_head():
    class IKEEXT_CERTIFICATE_CRITERIA0(Structure):
        pass
    return IKEEXT_CERTIFICATE_CRITERIA0
def _define_IKEEXT_CERTIFICATE_CRITERIA0():
    IKEEXT_CERTIFICATE_CRITERIA0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CRITERIA0_head
    IKEEXT_CERTIFICATE_CRITERIA0._fields_ = [
        ('certData', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('certHash', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('eku', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_EKUS0_head)),
        ('name', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERT_NAME0_head)),
        ('flags', UInt32),
    ]
    return IKEEXT_CERTIFICATE_CRITERIA0
def _define_IKEEXT_CIPHER_ALGORITHM0_head():
    class IKEEXT_CIPHER_ALGORITHM0(Structure):
        pass
    return IKEEXT_CIPHER_ALGORITHM0
def _define_IKEEXT_CIPHER_ALGORITHM0():
    IKEEXT_CIPHER_ALGORITHM0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CIPHER_ALGORITHM0_head
    IKEEXT_CIPHER_ALGORITHM0._fields_ = [
        ('algoIdentifier', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CIPHER_TYPE),
        ('keyLen', UInt32),
        ('rounds', UInt32),
    ]
    return IKEEXT_CIPHER_ALGORITHM0
IKEEXT_CIPHER_TYPE = Int32
IKEEXT_CIPHER_DES = 0
IKEEXT_CIPHER_3DES = 1
IKEEXT_CIPHER_AES_128 = 2
IKEEXT_CIPHER_AES_192 = 3
IKEEXT_CIPHER_AES_256 = 4
IKEEXT_CIPHER_AES_GCM_128_16ICV = 5
IKEEXT_CIPHER_AES_GCM_256_16ICV = 6
IKEEXT_CIPHER_TYPE_MAX = 7
def _define_IKEEXT_COMMON_STATISTICS0_head():
    class IKEEXT_COMMON_STATISTICS0(Structure):
        pass
    return IKEEXT_COMMON_STATISTICS0
def _define_IKEEXT_COMMON_STATISTICS0():
    IKEEXT_COMMON_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COMMON_STATISTICS0_head
    IKEEXT_COMMON_STATISTICS0._fields_ = [
        ('v4Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0),
        ('v6Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0),
        ('totalPacketsReceived', UInt32),
        ('totalInvalidPacketsReceived', UInt32),
        ('currentQueuedWorkitems', UInt32),
    ]
    return IKEEXT_COMMON_STATISTICS0
def _define_IKEEXT_COMMON_STATISTICS1_head():
    class IKEEXT_COMMON_STATISTICS1(Structure):
        pass
    return IKEEXT_COMMON_STATISTICS1
def _define_IKEEXT_COMMON_STATISTICS1():
    IKEEXT_COMMON_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COMMON_STATISTICS1_head
    IKEEXT_COMMON_STATISTICS1._fields_ = [
        ('v4Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1),
        ('v6Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1),
        ('totalPacketsReceived', UInt32),
        ('totalInvalidPacketsReceived', UInt32),
        ('currentQueuedWorkitems', UInt32),
    ]
    return IKEEXT_COMMON_STATISTICS1
def _define_IKEEXT_COOKIE_PAIR0_head():
    class IKEEXT_COOKIE_PAIR0(Structure):
        pass
    return IKEEXT_COOKIE_PAIR0
def _define_IKEEXT_COOKIE_PAIR0():
    IKEEXT_COOKIE_PAIR0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COOKIE_PAIR0_head
    IKEEXT_COOKIE_PAIR0._fields_ = [
        ('initiator', UInt64),
        ('responder', UInt64),
    ]
    return IKEEXT_COOKIE_PAIR0
def _define_IKEEXT_CREDENTIAL_PAIR0_head():
    class IKEEXT_CREDENTIAL_PAIR0(Structure):
        pass
    return IKEEXT_CREDENTIAL_PAIR0
def _define_IKEEXT_CREDENTIAL_PAIR0():
    IKEEXT_CREDENTIAL_PAIR0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL_PAIR0_head
    IKEEXT_CREDENTIAL_PAIR0._fields_ = [
        ('localCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL0),
        ('peerCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL0),
    ]
    return IKEEXT_CREDENTIAL_PAIR0
def _define_IKEEXT_CREDENTIAL_PAIR1_head():
    class IKEEXT_CREDENTIAL_PAIR1(Structure):
        pass
    return IKEEXT_CREDENTIAL_PAIR1
def _define_IKEEXT_CREDENTIAL_PAIR1():
    IKEEXT_CREDENTIAL_PAIR1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL_PAIR1_head
    IKEEXT_CREDENTIAL_PAIR1._fields_ = [
        ('localCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL1),
        ('peerCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL1),
    ]
    return IKEEXT_CREDENTIAL_PAIR1
def _define_IKEEXT_CREDENTIAL_PAIR2_head():
    class IKEEXT_CREDENTIAL_PAIR2(Structure):
        pass
    return IKEEXT_CREDENTIAL_PAIR2
def _define_IKEEXT_CREDENTIAL_PAIR2():
    IKEEXT_CREDENTIAL_PAIR2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL_PAIR2_head
    IKEEXT_CREDENTIAL_PAIR2._fields_ = [
        ('localCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL2),
        ('peerCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL2),
    ]
    return IKEEXT_CREDENTIAL_PAIR2
def _define_IKEEXT_CREDENTIAL0_head():
    class IKEEXT_CREDENTIAL0(Structure):
        pass
    return IKEEXT_CREDENTIAL0
def _define_IKEEXT_CREDENTIAL0():
    IKEEXT_CREDENTIAL0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL0_head
    class IKEEXT_CREDENTIAL0__Anonymous_e__Union(Union):
        pass
    IKEEXT_CREDENTIAL0__Anonymous_e__Union._fields_ = [
        ('presharedKey', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION0_head)),
        ('certificate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CREDENTIAL0_head)),
        ('name', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NAME_CREDENTIAL0_head)),
    ]
    IKEEXT_CREDENTIAL0._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_CREDENTIAL0._fields_ = [
        ('authenticationMethodType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('impersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
        ('Anonymous', IKEEXT_CREDENTIAL0__Anonymous_e__Union),
    ]
    return IKEEXT_CREDENTIAL0
def _define_IKEEXT_CREDENTIAL1_head():
    class IKEEXT_CREDENTIAL1(Structure):
        pass
    return IKEEXT_CREDENTIAL1
def _define_IKEEXT_CREDENTIAL1():
    IKEEXT_CREDENTIAL1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL1_head
    class IKEEXT_CREDENTIAL1__Anonymous_e__Union(Union):
        pass
    IKEEXT_CREDENTIAL1__Anonymous_e__Union._fields_ = [
        ('presharedKey', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION1_head)),
        ('certificate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CREDENTIAL1_head)),
        ('name', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NAME_CREDENTIAL0_head)),
    ]
    IKEEXT_CREDENTIAL1._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_CREDENTIAL1._fields_ = [
        ('authenticationMethodType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('impersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
        ('Anonymous', IKEEXT_CREDENTIAL1__Anonymous_e__Union),
    ]
    return IKEEXT_CREDENTIAL1
def _define_IKEEXT_CREDENTIAL2_head():
    class IKEEXT_CREDENTIAL2(Structure):
        pass
    return IKEEXT_CREDENTIAL2
def _define_IKEEXT_CREDENTIAL2():
    IKEEXT_CREDENTIAL2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL2_head
    class IKEEXT_CREDENTIAL2__Anonymous_e__Union(Union):
        pass
    IKEEXT_CREDENTIAL2__Anonymous_e__Union._fields_ = [
        ('presharedKey', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION1_head)),
        ('certificate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CERTIFICATE_CREDENTIAL1_head)),
        ('name', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NAME_CREDENTIAL0_head)),
    ]
    IKEEXT_CREDENTIAL2._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_CREDENTIAL2._fields_ = [
        ('authenticationMethodType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD_TYPE),
        ('impersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
        ('Anonymous', IKEEXT_CREDENTIAL2__Anonymous_e__Union),
    ]
    return IKEEXT_CREDENTIAL2
def _define_IKEEXT_CREDENTIALS0_head():
    class IKEEXT_CREDENTIALS0(Structure):
        pass
    return IKEEXT_CREDENTIALS0
def _define_IKEEXT_CREDENTIALS0():
    IKEEXT_CREDENTIALS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIALS0_head
    IKEEXT_CREDENTIALS0._fields_ = [
        ('numCredentials', UInt32),
        ('credentials', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL_PAIR0_head)),
    ]
    return IKEEXT_CREDENTIALS0
def _define_IKEEXT_CREDENTIALS1_head():
    class IKEEXT_CREDENTIALS1(Structure):
        pass
    return IKEEXT_CREDENTIALS1
def _define_IKEEXT_CREDENTIALS1():
    IKEEXT_CREDENTIALS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIALS1_head
    IKEEXT_CREDENTIALS1._fields_ = [
        ('numCredentials', UInt32),
        ('credentials', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL_PAIR1_head)),
    ]
    return IKEEXT_CREDENTIALS1
def _define_IKEEXT_CREDENTIALS2_head():
    class IKEEXT_CREDENTIALS2(Structure):
        pass
    return IKEEXT_CREDENTIALS2
def _define_IKEEXT_CREDENTIALS2():
    IKEEXT_CREDENTIALS2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIALS2_head
    IKEEXT_CREDENTIALS2._fields_ = [
        ('numCredentials', UInt32),
        ('credentials', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIAL_PAIR2_head)),
    ]
    return IKEEXT_CREDENTIALS2
IKEEXT_DH_GROUP = Int32
IKEEXT_DH_GROUP_NONE = 0
IKEEXT_DH_GROUP_1 = 1
IKEEXT_DH_GROUP_2 = 2
IKEEXT_DH_GROUP_14 = 3
IKEEXT_DH_GROUP_2048 = 3
IKEEXT_DH_ECP_256 = 4
IKEEXT_DH_ECP_384 = 5
IKEEXT_DH_GROUP_24 = 6
IKEEXT_DH_GROUP_MAX = 7
IKEEXT_EAP_AUTHENTICATION_FLAGS = UInt32
IKEEXT_EAP_FLAG_LOCAL_AUTH_ONLY = 1
IKEEXT_EAP_FLAG_REMOTE_AUTH_ONLY = 2
def _define_IKEEXT_EAP_AUTHENTICATION0_head():
    class IKEEXT_EAP_AUTHENTICATION0(Structure):
        pass
    return IKEEXT_EAP_AUTHENTICATION0
def _define_IKEEXT_EAP_AUTHENTICATION0():
    IKEEXT_EAP_AUTHENTICATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EAP_AUTHENTICATION0_head
    IKEEXT_EAP_AUTHENTICATION0._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EAP_AUTHENTICATION_FLAGS),
    ]
    return IKEEXT_EAP_AUTHENTICATION0
def _define_IKEEXT_EM_POLICY0_head():
    class IKEEXT_EM_POLICY0(Structure):
        pass
    return IKEEXT_EM_POLICY0
def _define_IKEEXT_EM_POLICY0():
    IKEEXT_EM_POLICY0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY0_head
    IKEEXT_EM_POLICY0._fields_ = [
        ('numAuthenticationMethods', UInt32),
        ('authenticationMethods', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD0_head)),
        ('initiatorImpersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
    ]
    return IKEEXT_EM_POLICY0
def _define_IKEEXT_EM_POLICY1_head():
    class IKEEXT_EM_POLICY1(Structure):
        pass
    return IKEEXT_EM_POLICY1
def _define_IKEEXT_EM_POLICY1():
    IKEEXT_EM_POLICY1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY1_head
    IKEEXT_EM_POLICY1._fields_ = [
        ('numAuthenticationMethods', UInt32),
        ('authenticationMethods', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD1_head)),
        ('initiatorImpersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
    ]
    return IKEEXT_EM_POLICY1
def _define_IKEEXT_EM_POLICY2_head():
    class IKEEXT_EM_POLICY2(Structure):
        pass
    return IKEEXT_EM_POLICY2
def _define_IKEEXT_EM_POLICY2():
    IKEEXT_EM_POLICY2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY2_head
    IKEEXT_EM_POLICY2._fields_ = [
        ('numAuthenticationMethods', UInt32),
        ('authenticationMethods', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD2_head)),
        ('initiatorImpersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
    ]
    return IKEEXT_EM_POLICY2
IKEEXT_EM_SA_STATE = Int32
IKEEXT_EM_SA_STATE_NONE = 0
IKEEXT_EM_SA_STATE_SENT_ATTS = 1
IKEEXT_EM_SA_STATE_SSPI_SENT = 2
IKEEXT_EM_SA_STATE_AUTH_COMPLETE = 3
IKEEXT_EM_SA_STATE_FINAL = 4
IKEEXT_EM_SA_STATE_COMPLETE = 5
IKEEXT_EM_SA_STATE_MAX = 6
def _define_IKEEXT_INTEGRITY_ALGORITHM0_head():
    class IKEEXT_INTEGRITY_ALGORITHM0(Structure):
        pass
    return IKEEXT_INTEGRITY_ALGORITHM0
def _define_IKEEXT_INTEGRITY_ALGORITHM0():
    IKEEXT_INTEGRITY_ALGORITHM0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_INTEGRITY_ALGORITHM0_head
    IKEEXT_INTEGRITY_ALGORITHM0._fields_ = [
        ('algoIdentifier', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_INTEGRITY_TYPE),
    ]
    return IKEEXT_INTEGRITY_ALGORITHM0
IKEEXT_INTEGRITY_TYPE = Int32
IKEEXT_INTEGRITY_MD5 = 0
IKEEXT_INTEGRITY_SHA1 = 1
IKEEXT_INTEGRITY_SHA_256 = 2
IKEEXT_INTEGRITY_SHA_384 = 3
IKEEXT_INTEGRITY_TYPE_MAX = 4
def _define_IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0_head():
    class IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0(Structure):
        pass
    return IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0
def _define_IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0():
    IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0_head
    IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0._fields_ = [
        ('totalSocketReceiveFailures', UInt32),
        ('totalSocketSendFailures', UInt32),
    ]
    return IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0
def _define_IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1_head():
    class IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1(Structure):
        pass
    return IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1
def _define_IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1():
    IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1_head
    IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1._fields_ = [
        ('totalSocketReceiveFailures', UInt32),
        ('totalSocketSendFailures', UInt32),
    ]
    return IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1
def _define_IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0_head():
    class IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0(Structure):
        pass
    return IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0
def _define_IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0():
    IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0_head
    IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0._fields_ = [
        ('currentActiveMainModes', UInt32),
        ('totalMainModesStarted', UInt32),
        ('totalSuccessfulMainModes', UInt32),
        ('totalFailedMainModes', UInt32),
        ('totalResponderMainModes', UInt32),
        ('currentNewResponderMainModes', UInt32),
        ('currentActiveQuickModes', UInt32),
        ('totalQuickModesStarted', UInt32),
        ('totalSuccessfulQuickModes', UInt32),
        ('totalFailedQuickModes', UInt32),
        ('totalAcquires', UInt32),
        ('totalReinitAcquires', UInt32),
        ('currentActiveExtendedModes', UInt32),
        ('totalExtendedModesStarted', UInt32),
        ('totalSuccessfulExtendedModes', UInt32),
        ('totalFailedExtendedModes', UInt32),
        ('totalImpersonationExtendedModes', UInt32),
        ('totalImpersonationMainModes', UInt32),
    ]
    return IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0
def _define_IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1_head():
    class IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1(Structure):
        pass
    return IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1
def _define_IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1():
    IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1_head
    IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1._fields_ = [
        ('currentActiveMainModes', UInt32),
        ('totalMainModesStarted', UInt32),
        ('totalSuccessfulMainModes', UInt32),
        ('totalFailedMainModes', UInt32),
        ('totalResponderMainModes', UInt32),
        ('currentNewResponderMainModes', UInt32),
        ('currentActiveQuickModes', UInt32),
        ('totalQuickModesStarted', UInt32),
        ('totalSuccessfulQuickModes', UInt32),
        ('totalFailedQuickModes', UInt32),
        ('totalAcquires', UInt32),
        ('totalReinitAcquires', UInt32),
        ('currentActiveExtendedModes', UInt32),
        ('totalExtendedModesStarted', UInt32),
        ('totalSuccessfulExtendedModes', UInt32),
        ('totalFailedExtendedModes', UInt32),
        ('totalImpersonationExtendedModes', UInt32),
        ('totalImpersonationMainModes', UInt32),
    ]
    return IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1
def _define_IKEEXT_IPV6_CGA_AUTHENTICATION0_head():
    class IKEEXT_IPV6_CGA_AUTHENTICATION0(Structure):
        pass
    return IKEEXT_IPV6_CGA_AUTHENTICATION0
def _define_IKEEXT_IPV6_CGA_AUTHENTICATION0():
    IKEEXT_IPV6_CGA_AUTHENTICATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IPV6_CGA_AUTHENTICATION0_head
    IKEEXT_IPV6_CGA_AUTHENTICATION0._fields_ = [
        ('keyContainerName', win32more.Foundation.PWSTR),
        ('cspName', win32more.Foundation.PWSTR),
        ('cspType', UInt32),
        ('cgaModifier', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16),
        ('cgaCollisionCount', Byte),
    ]
    return IKEEXT_IPV6_CGA_AUTHENTICATION0
IKEEXT_KERBEROS_AUTHENTICATION_FLAGS = UInt32
IKEEXT_KERB_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION = 1
IKEEXT_KERB_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS = 2
def _define_IKEEXT_KERBEROS_AUTHENTICATION0_head():
    class IKEEXT_KERBEROS_AUTHENTICATION0(Structure):
        pass
    return IKEEXT_KERBEROS_AUTHENTICATION0
def _define_IKEEXT_KERBEROS_AUTHENTICATION0():
    IKEEXT_KERBEROS_AUTHENTICATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KERBEROS_AUTHENTICATION0_head
    IKEEXT_KERBEROS_AUTHENTICATION0._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KERBEROS_AUTHENTICATION_FLAGS),
    ]
    return IKEEXT_KERBEROS_AUTHENTICATION0
def _define_IKEEXT_KERBEROS_AUTHENTICATION1_head():
    class IKEEXT_KERBEROS_AUTHENTICATION1(Structure):
        pass
    return IKEEXT_KERBEROS_AUTHENTICATION1
def _define_IKEEXT_KERBEROS_AUTHENTICATION1():
    IKEEXT_KERBEROS_AUTHENTICATION1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KERBEROS_AUTHENTICATION1_head
    IKEEXT_KERBEROS_AUTHENTICATION1._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KERBEROS_AUTHENTICATION_FLAGS),
        ('proxyServer', win32more.Foundation.PWSTR),
    ]
    return IKEEXT_KERBEROS_AUTHENTICATION1
IKEEXT_KEY_MODULE_TYPE = Int32
IKEEXT_KEY_MODULE_IKE = 0
IKEEXT_KEY_MODULE_AUTHIP = 1
IKEEXT_KEY_MODULE_IKEV2 = 2
IKEEXT_KEY_MODULE_MAX = 3
def _define_IKEEXT_KEYMODULE_STATISTICS0_head():
    class IKEEXT_KEYMODULE_STATISTICS0(Structure):
        pass
    return IKEEXT_KEYMODULE_STATISTICS0
def _define_IKEEXT_KEYMODULE_STATISTICS0():
    IKEEXT_KEYMODULE_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEYMODULE_STATISTICS0_head
    IKEEXT_KEYMODULE_STATISTICS0._fields_ = [
        ('v4Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0),
        ('v6Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0),
        ('errorFrequencyTable', UInt32 * 97),
        ('mainModeNegotiationTime', UInt32),
        ('quickModeNegotiationTime', UInt32),
        ('extendedModeNegotiationTime', UInt32),
    ]
    return IKEEXT_KEYMODULE_STATISTICS0
def _define_IKEEXT_KEYMODULE_STATISTICS1_head():
    class IKEEXT_KEYMODULE_STATISTICS1(Structure):
        pass
    return IKEEXT_KEYMODULE_STATISTICS1
def _define_IKEEXT_KEYMODULE_STATISTICS1():
    IKEEXT_KEYMODULE_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEYMODULE_STATISTICS1_head
    IKEEXT_KEYMODULE_STATISTICS1._fields_ = [
        ('v4Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1),
        ('v6Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1),
        ('errorFrequencyTable', UInt32 * 97),
        ('mainModeNegotiationTime', UInt32),
        ('quickModeNegotiationTime', UInt32),
        ('extendedModeNegotiationTime', UInt32),
    ]
    return IKEEXT_KEYMODULE_STATISTICS1
IKEEXT_MM_SA_STATE = Int32
IKEEXT_MM_SA_STATE_NONE = 0
IKEEXT_MM_SA_STATE_SA_SENT = 1
IKEEXT_MM_SA_STATE_SSPI_SENT = 2
IKEEXT_MM_SA_STATE_FINAL = 3
IKEEXT_MM_SA_STATE_FINAL_SENT = 4
IKEEXT_MM_SA_STATE_COMPLETE = 5
IKEEXT_MM_SA_STATE_MAX = 6
def _define_IKEEXT_NAME_CREDENTIAL0_head():
    class IKEEXT_NAME_CREDENTIAL0(Structure):
        pass
    return IKEEXT_NAME_CREDENTIAL0
def _define_IKEEXT_NAME_CREDENTIAL0():
    IKEEXT_NAME_CREDENTIAL0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NAME_CREDENTIAL0_head
    IKEEXT_NAME_CREDENTIAL0._fields_ = [
        ('principalName', win32more.Foundation.PWSTR),
    ]
    return IKEEXT_NAME_CREDENTIAL0
def _define_IKEEXT_NTLM_V2_AUTHENTICATION0_head():
    class IKEEXT_NTLM_V2_AUTHENTICATION0(Structure):
        pass
    return IKEEXT_NTLM_V2_AUTHENTICATION0
def _define_IKEEXT_NTLM_V2_AUTHENTICATION0():
    IKEEXT_NTLM_V2_AUTHENTICATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_NTLM_V2_AUTHENTICATION0_head
    IKEEXT_NTLM_V2_AUTHENTICATION0._fields_ = [
        ('flags', UInt32),
    ]
    return IKEEXT_NTLM_V2_AUTHENTICATION0
IKEEXT_POLICY_FLAG = UInt32
IKEEXT_POLICY_FLAG_DISABLE_DIAGNOSTICS = 1
IKEEXT_POLICY_FLAG_NO_MACHINE_LUID_VERIFY = 2
IKEEXT_POLICY_FLAG_NO_IMPERSONATION_LUID_VERIFY = 4
IKEEXT_POLICY_FLAG_ENABLE_OPTIONAL_DH = 8
def _define_IKEEXT_POLICY0_head():
    class IKEEXT_POLICY0(Structure):
        pass
    return IKEEXT_POLICY0
def _define_IKEEXT_POLICY0():
    IKEEXT_POLICY0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY0_head
    IKEEXT_POLICY0._fields_ = [
        ('softExpirationTime', UInt32),
        ('numAuthenticationMethods', UInt32),
        ('authenticationMethods', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD0_head)),
        ('initiatorImpersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
        ('numIkeProposals', UInt32),
        ('ikeProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY_FLAG),
        ('maxDynamicFilters', UInt32),
    ]
    return IKEEXT_POLICY0
def _define_IKEEXT_POLICY1_head():
    class IKEEXT_POLICY1(Structure):
        pass
    return IKEEXT_POLICY1
def _define_IKEEXT_POLICY1():
    IKEEXT_POLICY1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY1_head
    IKEEXT_POLICY1._fields_ = [
        ('softExpirationTime', UInt32),
        ('numAuthenticationMethods', UInt32),
        ('authenticationMethods', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD1_head)),
        ('initiatorImpersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
        ('numIkeProposals', UInt32),
        ('ikeProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY_FLAG),
        ('maxDynamicFilters', UInt32),
        ('retransmitDurationSecs', UInt32),
    ]
    return IKEEXT_POLICY1
def _define_IKEEXT_POLICY2_head():
    class IKEEXT_POLICY2(Structure):
        pass
    return IKEEXT_POLICY2
def _define_IKEEXT_POLICY2():
    IKEEXT_POLICY2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY2_head
    IKEEXT_POLICY2._fields_ = [
        ('softExpirationTime', UInt32),
        ('numAuthenticationMethods', UInt32),
        ('authenticationMethods', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_METHOD2_head)),
        ('initiatorImpersonationType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE),
        ('numIkeProposals', UInt32),
        ('ikeProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_POLICY_FLAG),
        ('maxDynamicFilters', UInt32),
        ('retransmitDurationSecs', UInt32),
    ]
    return IKEEXT_POLICY2
IKEEXT_PRESHARED_KEY_AUTHENTICATION_FLAGS = UInt32
IKEEXT_PSK_FLAG_LOCAL_AUTH_ONLY = 1
IKEEXT_PSK_FLAG_REMOTE_AUTH_ONLY = 2
def _define_IKEEXT_PRESHARED_KEY_AUTHENTICATION0_head():
    class IKEEXT_PRESHARED_KEY_AUTHENTICATION0(Structure):
        pass
    return IKEEXT_PRESHARED_KEY_AUTHENTICATION0
def _define_IKEEXT_PRESHARED_KEY_AUTHENTICATION0():
    IKEEXT_PRESHARED_KEY_AUTHENTICATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION0_head
    IKEEXT_PRESHARED_KEY_AUTHENTICATION0._fields_ = [
        ('presharedKey', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IKEEXT_PRESHARED_KEY_AUTHENTICATION0
def _define_IKEEXT_PRESHARED_KEY_AUTHENTICATION1_head():
    class IKEEXT_PRESHARED_KEY_AUTHENTICATION1(Structure):
        pass
    return IKEEXT_PRESHARED_KEY_AUTHENTICATION1
def _define_IKEEXT_PRESHARED_KEY_AUTHENTICATION1():
    IKEEXT_PRESHARED_KEY_AUTHENTICATION1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION1_head
    IKEEXT_PRESHARED_KEY_AUTHENTICATION1._fields_ = [
        ('presharedKey', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PRESHARED_KEY_AUTHENTICATION_FLAGS),
    ]
    return IKEEXT_PRESHARED_KEY_AUTHENTICATION1
def _define_IKEEXT_PROPOSAL0_head():
    class IKEEXT_PROPOSAL0(Structure):
        pass
    return IKEEXT_PROPOSAL0
def _define_IKEEXT_PROPOSAL0():
    IKEEXT_PROPOSAL0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0_head
    IKEEXT_PROPOSAL0._fields_ = [
        ('cipherAlgorithm', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CIPHER_ALGORITHM0),
        ('integrityAlgorithm', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_INTEGRITY_ALGORITHM0),
        ('maxLifetimeSeconds', UInt32),
        ('dhGroup', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_DH_GROUP),
        ('quickModeLimit', UInt32),
    ]
    return IKEEXT_PROPOSAL0
IKEEXT_QM_SA_STATE = Int32
IKEEXT_QM_SA_STATE_NONE = 0
IKEEXT_QM_SA_STATE_INITIAL = 1
IKEEXT_QM_SA_STATE_FINAL = 2
IKEEXT_QM_SA_STATE_COMPLETE = 3
IKEEXT_QM_SA_STATE_MAX = 4
IKEEXT_RESERVED_AUTHENTICATION_FLAGS = UInt32
IKEEXT_RESERVED_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION = 1
def _define_IKEEXT_RESERVED_AUTHENTICATION0_head():
    class IKEEXT_RESERVED_AUTHENTICATION0(Structure):
        pass
    return IKEEXT_RESERVED_AUTHENTICATION0
def _define_IKEEXT_RESERVED_AUTHENTICATION0():
    IKEEXT_RESERVED_AUTHENTICATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_RESERVED_AUTHENTICATION0_head
    IKEEXT_RESERVED_AUTHENTICATION0._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_RESERVED_AUTHENTICATION_FLAGS),
    ]
    return IKEEXT_RESERVED_AUTHENTICATION0
def _define_IKEEXT_SA_DETAILS0_head():
    class IKEEXT_SA_DETAILS0(Structure):
        pass
    return IKEEXT_SA_DETAILS0
def _define_IKEEXT_SA_DETAILS0():
    IKEEXT_SA_DETAILS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS0_head
    class IKEEXT_SA_DETAILS0__Anonymous_e__Union(Union):
        pass
    IKEEXT_SA_DETAILS0__Anonymous_e__Union._fields_ = [
        ('v4UdpEncapsulation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head)),
    ]
    IKEEXT_SA_DETAILS0._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_SA_DETAILS0._fields_ = [
        ('saId', UInt64),
        ('keyModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IKEEXT_SA_DETAILS0__Anonymous_e__Union),
        ('ikeTraffic', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_TRAFFIC0),
        ('ikeProposal', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0),
        ('cookiePair', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COOKIE_PAIR0),
        ('ikeCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIALS0),
        ('ikePolicyKey', Guid),
        ('virtualIfTunnelId', UInt64),
    ]
    return IKEEXT_SA_DETAILS0
def _define_IKEEXT_SA_DETAILS1_head():
    class IKEEXT_SA_DETAILS1(Structure):
        pass
    return IKEEXT_SA_DETAILS1
def _define_IKEEXT_SA_DETAILS1():
    IKEEXT_SA_DETAILS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS1_head
    class IKEEXT_SA_DETAILS1__Anonymous_e__Union(Union):
        pass
    IKEEXT_SA_DETAILS1__Anonymous_e__Union._fields_ = [
        ('v4UdpEncapsulation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head)),
    ]
    IKEEXT_SA_DETAILS1._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_SA_DETAILS1._fields_ = [
        ('saId', UInt64),
        ('keyModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IKEEXT_SA_DETAILS1__Anonymous_e__Union),
        ('ikeTraffic', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_TRAFFIC0),
        ('ikeProposal', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0),
        ('cookiePair', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COOKIE_PAIR0),
        ('ikeCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIALS1),
        ('ikePolicyKey', Guid),
        ('virtualIfTunnelId', UInt64),
        ('correlationKey', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IKEEXT_SA_DETAILS1
def _define_IKEEXT_SA_DETAILS2_head():
    class IKEEXT_SA_DETAILS2(Structure):
        pass
    return IKEEXT_SA_DETAILS2
def _define_IKEEXT_SA_DETAILS2():
    IKEEXT_SA_DETAILS2 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_DETAILS2_head
    class IKEEXT_SA_DETAILS2__Anonymous_e__Union(Union):
        pass
    IKEEXT_SA_DETAILS2__Anonymous_e__Union._fields_ = [
        ('v4UdpEncapsulation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head)),
    ]
    IKEEXT_SA_DETAILS2._anonymous_ = [
        'Anonymous',
    ]
    IKEEXT_SA_DETAILS2._fields_ = [
        ('saId', UInt64),
        ('keyModuleType', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEY_MODULE_TYPE),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IKEEXT_SA_DETAILS2__Anonymous_e__Union),
        ('ikeTraffic', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_TRAFFIC0),
        ('ikeProposal', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_PROPOSAL0),
        ('cookiePair', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COOKIE_PAIR0),
        ('ikeCredentials', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_CREDENTIALS2),
        ('ikePolicyKey', Guid),
        ('virtualIfTunnelId', UInt64),
        ('correlationKey', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IKEEXT_SA_DETAILS2
def _define_IKEEXT_SA_ENUM_TEMPLATE0_head():
    class IKEEXT_SA_ENUM_TEMPLATE0(Structure):
        pass
    return IKEEXT_SA_ENUM_TEMPLATE0
def _define_IKEEXT_SA_ENUM_TEMPLATE0():
    IKEEXT_SA_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_SA_ENUM_TEMPLATE0_head
    IKEEXT_SA_ENUM_TEMPLATE0._fields_ = [
        ('localSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
        ('remoteSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
        ('localMainModeCertHash', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IKEEXT_SA_ENUM_TEMPLATE0
IKEEXT_SA_ROLE = Int32
IKEEXT_SA_ROLE_INITIATOR = 0
IKEEXT_SA_ROLE_RESPONDER = 1
IKEEXT_SA_ROLE_MAX = 2
def _define_IKEEXT_STATISTICS0_head():
    class IKEEXT_STATISTICS0(Structure):
        pass
    return IKEEXT_STATISTICS0
def _define_IKEEXT_STATISTICS0():
    IKEEXT_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_STATISTICS0_head
    IKEEXT_STATISTICS0._fields_ = [
        ('ikeStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEYMODULE_STATISTICS0),
        ('authipStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEYMODULE_STATISTICS0),
        ('commonStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COMMON_STATISTICS0),
    ]
    return IKEEXT_STATISTICS0
def _define_IKEEXT_STATISTICS1_head():
    class IKEEXT_STATISTICS1(Structure):
        pass
    return IKEEXT_STATISTICS1
def _define_IKEEXT_STATISTICS1():
    IKEEXT_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_STATISTICS1_head
    IKEEXT_STATISTICS1._fields_ = [
        ('ikeStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEYMODULE_STATISTICS1),
        ('authipStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEYMODULE_STATISTICS1),
        ('ikeV2Statistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_KEYMODULE_STATISTICS1),
        ('commonStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_COMMON_STATISTICS1),
    ]
    return IKEEXT_STATISTICS1
def _define_IKEEXT_TRAFFIC0_head():
    class IKEEXT_TRAFFIC0(Structure):
        pass
    return IKEEXT_TRAFFIC0
def _define_IKEEXT_TRAFFIC0():
    IKEEXT_TRAFFIC0 = win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_TRAFFIC0_head
    class IKEEXT_TRAFFIC0__Anonymous1_e__Union(Union):
        pass
    IKEEXT_TRAFFIC0__Anonymous1_e__Union._fields_ = [
        ('localV4Address', UInt32),
        ('localV6Address', Byte * 16),
    ]
    class IKEEXT_TRAFFIC0__Anonymous2_e__Union(Union):
        pass
    IKEEXT_TRAFFIC0__Anonymous2_e__Union._fields_ = [
        ('remoteV4Address', UInt32),
        ('remoteV6Address', Byte * 16),
    ]
    IKEEXT_TRAFFIC0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IKEEXT_TRAFFIC0._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', IKEEXT_TRAFFIC0__Anonymous1_e__Union),
        ('Anonymous2', IKEEXT_TRAFFIC0__Anonymous2_e__Union),
        ('authIpFilterId', UInt64),
    ]
    return IKEEXT_TRAFFIC0
def _define_IPSEC_ADDRESS_INFO0_head():
    class IPSEC_ADDRESS_INFO0(Structure):
        pass
    return IPSEC_ADDRESS_INFO0
def _define_IPSEC_ADDRESS_INFO0():
    IPSEC_ADDRESS_INFO0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_ADDRESS_INFO0_head
    IPSEC_ADDRESS_INFO0._fields_ = [
        ('numV4Addresses', UInt32),
        ('v4Addresses', POINTER(UInt32)),
        ('numV6Addresses', UInt32),
        ('v6Addresses', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_ARRAY16_head)),
    ]
    return IPSEC_ADDRESS_INFO0
def _define_IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0_head():
    class IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0(Structure):
        pass
    return IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0
def _define_IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0():
    IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0_head
    IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0._fields_ = [
        ('invalidSpisOnInbound', UInt32),
        ('decryptionFailuresOnInbound', UInt32),
        ('authenticationFailuresOnInbound', UInt32),
        ('udpEspValidationFailuresOnInbound', UInt32),
        ('replayCheckFailuresOnInbound', UInt32),
        ('invalidClearTextInbound', UInt32),
        ('saNotInitializedOnInbound', UInt32),
        ('receiveOverIncorrectSaInbound', UInt32),
        ('secureReceivesNotMatchingFilters', UInt32),
    ]
    return IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0
def _define_IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1_head():
    class IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1(Structure):
        pass
    return IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1
def _define_IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1():
    IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1_head
    IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1._fields_ = [
        ('invalidSpisOnInbound', UInt32),
        ('decryptionFailuresOnInbound', UInt32),
        ('authenticationFailuresOnInbound', UInt32),
        ('udpEspValidationFailuresOnInbound', UInt32),
        ('replayCheckFailuresOnInbound', UInt32),
        ('invalidClearTextInbound', UInt32),
        ('saNotInitializedOnInbound', UInt32),
        ('receiveOverIncorrectSaInbound', UInt32),
        ('secureReceivesNotMatchingFilters', UInt32),
        ('totalDropPacketsInbound', UInt32),
    ]
    return IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1
def _define_IPSEC_AGGREGATE_SA_STATISTICS0_head():
    class IPSEC_AGGREGATE_SA_STATISTICS0(Structure):
        pass
    return IPSEC_AGGREGATE_SA_STATISTICS0
def _define_IPSEC_AGGREGATE_SA_STATISTICS0():
    IPSEC_AGGREGATE_SA_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AGGREGATE_SA_STATISTICS0_head
    IPSEC_AGGREGATE_SA_STATISTICS0._fields_ = [
        ('activeSas', UInt32),
        ('pendingSaNegotiations', UInt32),
        ('totalSasAdded', UInt32),
        ('totalSasDeleted', UInt32),
        ('successfulRekeys', UInt32),
        ('activeTunnels', UInt32),
        ('offloadedSas', UInt32),
    ]
    return IPSEC_AGGREGATE_SA_STATISTICS0
def _define_IPSEC_AH_DROP_PACKET_STATISTICS0_head():
    class IPSEC_AH_DROP_PACKET_STATISTICS0(Structure):
        pass
    return IPSEC_AH_DROP_PACKET_STATISTICS0
def _define_IPSEC_AH_DROP_PACKET_STATISTICS0():
    IPSEC_AH_DROP_PACKET_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AH_DROP_PACKET_STATISTICS0_head
    IPSEC_AH_DROP_PACKET_STATISTICS0._fields_ = [
        ('invalidSpisOnInbound', UInt32),
        ('authenticationFailuresOnInbound', UInt32),
        ('replayCheckFailuresOnInbound', UInt32),
        ('saNotInitializedOnInbound', UInt32),
    ]
    return IPSEC_AH_DROP_PACKET_STATISTICS0
def _define_IPSEC_AUTH_AND_CIPHER_TRANSFORM0_head():
    class IPSEC_AUTH_AND_CIPHER_TRANSFORM0(Structure):
        pass
    return IPSEC_AUTH_AND_CIPHER_TRANSFORM0
def _define_IPSEC_AUTH_AND_CIPHER_TRANSFORM0():
    IPSEC_AUTH_AND_CIPHER_TRANSFORM0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_AND_CIPHER_TRANSFORM0_head
    IPSEC_AUTH_AND_CIPHER_TRANSFORM0._fields_ = [
        ('authTransform', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM0),
        ('cipherTransform', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_CIPHER_TRANSFORM0),
    ]
    return IPSEC_AUTH_AND_CIPHER_TRANSFORM0
def _define_IPSEC_AUTH_TRANSFORM_ID0_head():
    class IPSEC_AUTH_TRANSFORM_ID0(Structure):
        pass
    return IPSEC_AUTH_TRANSFORM_ID0
def _define_IPSEC_AUTH_TRANSFORM_ID0():
    IPSEC_AUTH_TRANSFORM_ID0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM_ID0_head
    IPSEC_AUTH_TRANSFORM_ID0._fields_ = [
        ('authType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TYPE),
        ('authConfig', Byte),
    ]
    return IPSEC_AUTH_TRANSFORM_ID0
def _define_IPSEC_AUTH_TRANSFORM0_head():
    class IPSEC_AUTH_TRANSFORM0(Structure):
        pass
    return IPSEC_AUTH_TRANSFORM0
def _define_IPSEC_AUTH_TRANSFORM0():
    IPSEC_AUTH_TRANSFORM0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM0_head
    IPSEC_AUTH_TRANSFORM0._fields_ = [
        ('authTransformId', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM_ID0),
        ('cryptoModuleId', POINTER(Guid)),
    ]
    return IPSEC_AUTH_TRANSFORM0
IPSEC_AUTH_TYPE = Int32
IPSEC_AUTH_MD5 = 0
IPSEC_AUTH_SHA_1 = 1
IPSEC_AUTH_SHA_256 = 2
IPSEC_AUTH_AES_128 = 3
IPSEC_AUTH_AES_192 = 4
IPSEC_AUTH_AES_256 = 5
IPSEC_AUTH_MAX = 6
def _define_IPSEC_CIPHER_TRANSFORM_ID0_head():
    class IPSEC_CIPHER_TRANSFORM_ID0(Structure):
        pass
    return IPSEC_CIPHER_TRANSFORM_ID0
def _define_IPSEC_CIPHER_TRANSFORM_ID0():
    IPSEC_CIPHER_TRANSFORM_ID0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_CIPHER_TRANSFORM_ID0_head
    IPSEC_CIPHER_TRANSFORM_ID0._fields_ = [
        ('cipherType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_CIPHER_TYPE),
        ('cipherConfig', Byte),
    ]
    return IPSEC_CIPHER_TRANSFORM_ID0
def _define_IPSEC_CIPHER_TRANSFORM0_head():
    class IPSEC_CIPHER_TRANSFORM0(Structure):
        pass
    return IPSEC_CIPHER_TRANSFORM0
def _define_IPSEC_CIPHER_TRANSFORM0():
    IPSEC_CIPHER_TRANSFORM0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_CIPHER_TRANSFORM0_head
    IPSEC_CIPHER_TRANSFORM0._fields_ = [
        ('cipherTransformId', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_CIPHER_TRANSFORM_ID0),
        ('cryptoModuleId', POINTER(Guid)),
    ]
    return IPSEC_CIPHER_TRANSFORM0
IPSEC_CIPHER_TYPE = Int32
IPSEC_CIPHER_TYPE_DES = 1
IPSEC_CIPHER_TYPE_3DES = 2
IPSEC_CIPHER_TYPE_AES_128 = 3
IPSEC_CIPHER_TYPE_AES_192 = 4
IPSEC_CIPHER_TYPE_AES_256 = 5
IPSEC_CIPHER_TYPE_MAX = 6
IPSEC_DOSP_FLAGS = UInt32
IPSEC_DOSP_FLAG_ENABLE_IKEV1 = 1
IPSEC_DOSP_FLAG_ENABLE_IKEV2 = 2
IPSEC_DOSP_FLAG_DISABLE_AUTHIP = 4
IPSEC_DOSP_FLAG_DISABLE_DEFAULT_BLOCK = 8
IPSEC_DOSP_FLAG_FILTER_BLOCK = 16
IPSEC_DOSP_FLAG_FILTER_EXEMPT = 32
def _define_IPSEC_DOSP_OPTIONS0_head():
    class IPSEC_DOSP_OPTIONS0(Structure):
        pass
    return IPSEC_DOSP_OPTIONS0
def _define_IPSEC_DOSP_OPTIONS0():
    IPSEC_DOSP_OPTIONS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_OPTIONS0_head
    IPSEC_DOSP_OPTIONS0._fields_ = [
        ('stateIdleTimeoutSeconds', UInt32),
        ('perIPRateLimitQueueIdleTimeoutSeconds', UInt32),
        ('ipV6IPsecUnauthDscp', Byte),
        ('ipV6IPsecUnauthRateLimitBytesPerSec', UInt32),
        ('ipV6IPsecUnauthPerIPRateLimitBytesPerSec', UInt32),
        ('ipV6IPsecAuthDscp', Byte),
        ('ipV6IPsecAuthRateLimitBytesPerSec', UInt32),
        ('icmpV6Dscp', Byte),
        ('icmpV6RateLimitBytesPerSec', UInt32),
        ('ipV6FilterExemptDscp', Byte),
        ('ipV6FilterExemptRateLimitBytesPerSec', UInt32),
        ('defBlockExemptDscp', Byte),
        ('defBlockExemptRateLimitBytesPerSec', UInt32),
        ('maxStateEntries', UInt32),
        ('maxPerIPRateLimitQueues', UInt32),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_FLAGS),
        ('numPublicIFLuids', UInt32),
        ('publicIFLuids', POINTER(UInt64)),
        ('numInternalIFLuids', UInt32),
        ('internalIFLuids', POINTER(UInt64)),
        ('publicV6AddrMask', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V6_ADDR_AND_MASK),
        ('internalV6AddrMask', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V6_ADDR_AND_MASK),
    ]
    return IPSEC_DOSP_OPTIONS0
def _define_IPSEC_DOSP_STATE_ENUM_TEMPLATE0_head():
    class IPSEC_DOSP_STATE_ENUM_TEMPLATE0(Structure):
        pass
    return IPSEC_DOSP_STATE_ENUM_TEMPLATE0
def _define_IPSEC_DOSP_STATE_ENUM_TEMPLATE0():
    IPSEC_DOSP_STATE_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_STATE_ENUM_TEMPLATE0_head
    IPSEC_DOSP_STATE_ENUM_TEMPLATE0._fields_ = [
        ('publicV6AddrMask', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V6_ADDR_AND_MASK),
        ('internalV6AddrMask', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_V6_ADDR_AND_MASK),
    ]
    return IPSEC_DOSP_STATE_ENUM_TEMPLATE0
def _define_IPSEC_DOSP_STATE0_head():
    class IPSEC_DOSP_STATE0(Structure):
        pass
    return IPSEC_DOSP_STATE0
def _define_IPSEC_DOSP_STATE0():
    IPSEC_DOSP_STATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_STATE0_head
    IPSEC_DOSP_STATE0._fields_ = [
        ('publicHostV6Addr', Byte * 16),
        ('internalHostV6Addr', Byte * 16),
        ('totalInboundIPv6IPsecAuthPackets', UInt64),
        ('totalOutboundIPv6IPsecAuthPackets', UInt64),
        ('durationSecs', UInt32),
    ]
    return IPSEC_DOSP_STATE0
def _define_IPSEC_DOSP_STATISTICS0_head():
    class IPSEC_DOSP_STATISTICS0(Structure):
        pass
    return IPSEC_DOSP_STATISTICS0
def _define_IPSEC_DOSP_STATISTICS0():
    IPSEC_DOSP_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_DOSP_STATISTICS0_head
    IPSEC_DOSP_STATISTICS0._fields_ = [
        ('totalStateEntriesCreated', UInt64),
        ('currentStateEntries', UInt64),
        ('totalInboundAllowedIPv6IPsecUnauthPkts', UInt64),
        ('totalInboundRatelimitDiscardedIPv6IPsecUnauthPkts', UInt64),
        ('totalInboundPerIPRatelimitDiscardedIPv6IPsecUnauthPkts', UInt64),
        ('totalInboundOtherDiscardedIPv6IPsecUnauthPkts', UInt64),
        ('totalInboundAllowedIPv6IPsecAuthPkts', UInt64),
        ('totalInboundRatelimitDiscardedIPv6IPsecAuthPkts', UInt64),
        ('totalInboundOtherDiscardedIPv6IPsecAuthPkts', UInt64),
        ('totalInboundAllowedICMPv6Pkts', UInt64),
        ('totalInboundRatelimitDiscardedICMPv6Pkts', UInt64),
        ('totalInboundAllowedIPv6FilterExemptPkts', UInt64),
        ('totalInboundRatelimitDiscardedIPv6FilterExemptPkts', UInt64),
        ('totalInboundDiscardedIPv6FilterBlockPkts', UInt64),
        ('totalInboundAllowedDefBlockExemptPkts', UInt64),
        ('totalInboundRatelimitDiscardedDefBlockExemptPkts', UInt64),
        ('totalInboundDiscardedDefBlockPkts', UInt64),
        ('currentInboundIPv6IPsecUnauthPerIPRateLimitQueues', UInt64),
    ]
    return IPSEC_DOSP_STATISTICS0
def _define_IPSEC_ESP_DROP_PACKET_STATISTICS0_head():
    class IPSEC_ESP_DROP_PACKET_STATISTICS0(Structure):
        pass
    return IPSEC_ESP_DROP_PACKET_STATISTICS0
def _define_IPSEC_ESP_DROP_PACKET_STATISTICS0():
    IPSEC_ESP_DROP_PACKET_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_ESP_DROP_PACKET_STATISTICS0_head
    IPSEC_ESP_DROP_PACKET_STATISTICS0._fields_ = [
        ('invalidSpisOnInbound', UInt32),
        ('decryptionFailuresOnInbound', UInt32),
        ('authenticationFailuresOnInbound', UInt32),
        ('replayCheckFailuresOnInbound', UInt32),
        ('saNotInitializedOnInbound', UInt32),
    ]
    return IPSEC_ESP_DROP_PACKET_STATISTICS0
IPSEC_FAILURE_POINT = Int32
IPSEC_FAILURE_NONE = 0
IPSEC_FAILURE_ME = 1
IPSEC_FAILURE_PEER = 2
IPSEC_FAILURE_POINT_MAX = 3
def _define_IPSEC_GETSPI0_head():
    class IPSEC_GETSPI0(Structure):
        pass
    return IPSEC_GETSPI0
def _define_IPSEC_GETSPI0():
    IPSEC_GETSPI0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_GETSPI0_head
    class IPSEC_GETSPI0__Anonymous_e__Union(Union):
        pass
    IPSEC_GETSPI0__Anonymous_e__Union._fields_ = [
        ('inboundUdpEncapsulation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head)),
    ]
    IPSEC_GETSPI0._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_GETSPI0._fields_ = [
        ('inboundIpsecTraffic', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC0),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IPSEC_GETSPI0__Anonymous_e__Union),
        ('rngCryptoModuleID', POINTER(Guid)),
    ]
    return IPSEC_GETSPI0
def _define_IPSEC_GETSPI1_head():
    class IPSEC_GETSPI1(Structure):
        pass
    return IPSEC_GETSPI1
def _define_IPSEC_GETSPI1():
    IPSEC_GETSPI1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_GETSPI1_head
    class IPSEC_GETSPI1__Anonymous_e__Union(Union):
        pass
    IPSEC_GETSPI1__Anonymous_e__Union._fields_ = [
        ('inboundUdpEncapsulation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head)),
    ]
    IPSEC_GETSPI1._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_GETSPI1._fields_ = [
        ('inboundIpsecTraffic', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC1),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IPSEC_GETSPI1__Anonymous_e__Union),
        ('rngCryptoModuleID', POINTER(Guid)),
    ]
    return IPSEC_GETSPI1
def _define_IPSEC_ID0_head():
    class IPSEC_ID0(Structure):
        pass
    return IPSEC_ID0
def _define_IPSEC_ID0():
    IPSEC_ID0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_ID0_head
    IPSEC_ID0._fields_ = [
        ('mmTargetName', win32more.Foundation.PWSTR),
        ('emTargetName', win32more.Foundation.PWSTR),
        ('numTokens', UInt32),
        ('tokens', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TOKEN0_head)),
        ('explicitCredentials', UInt64),
        ('logonId', UInt64),
    ]
    return IPSEC_ID0
def _define_IPSEC_KEY_MANAGER_CALLBACKS0_head():
    class IPSEC_KEY_MANAGER_CALLBACKS0(Structure):
        pass
    return IPSEC_KEY_MANAGER_CALLBACKS0
def _define_IPSEC_KEY_MANAGER_CALLBACKS0():
    IPSEC_KEY_MANAGER_CALLBACKS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER_CALLBACKS0_head
    IPSEC_KEY_MANAGER_CALLBACKS0._fields_ = [
        ('reserved', Guid),
        ('flags', UInt32),
        ('keyDictationCheck', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0),
        ('keyDictation', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER_DICTATE_KEY0),
        ('keyNotify', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER_NOTIFY_KEY0),
    ]
    return IPSEC_KEY_MANAGER_CALLBACKS0
def _define_IPSEC_KEY_MANAGER_DICTATE_KEY0():
    return WINFUNCTYPE(UInt32,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head),POINTER(win32more.Foundation.BOOL))
def _define_IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0():
    return WINFUNCTYPE(Void,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_TRAFFIC0_head),POINTER(win32more.Foundation.BOOL),POINTER(UInt32))
def _define_IPSEC_KEY_MANAGER_NOTIFY_KEY0():
    return WINFUNCTYPE(Void,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head),POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head))
def _define_IPSEC_KEY_MANAGER0_head():
    class IPSEC_KEY_MANAGER0(Structure):
        pass
    return IPSEC_KEY_MANAGER0
def _define_IPSEC_KEY_MANAGER0():
    IPSEC_KEY_MANAGER0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEY_MANAGER0_head
    IPSEC_KEY_MANAGER0._fields_ = [
        ('keyManagerKey', Guid),
        ('displayData', win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_DISPLAY_DATA0),
        ('flags', UInt32),
        ('keyDictationTimeoutHint', Byte),
    ]
    return IPSEC_KEY_MANAGER0
def _define_IPSEC_KEYING_POLICY0_head():
    class IPSEC_KEYING_POLICY0(Structure):
        pass
    return IPSEC_KEYING_POLICY0
def _define_IPSEC_KEYING_POLICY0():
    IPSEC_KEYING_POLICY0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYING_POLICY0_head
    IPSEC_KEYING_POLICY0._fields_ = [
        ('numKeyMods', UInt32),
        ('keyModKeys', POINTER(Guid)),
    ]
    return IPSEC_KEYING_POLICY0
def _define_IPSEC_KEYING_POLICY1_head():
    class IPSEC_KEYING_POLICY1(Structure):
        pass
    return IPSEC_KEYING_POLICY1
def _define_IPSEC_KEYING_POLICY1():
    IPSEC_KEYING_POLICY1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYING_POLICY1_head
    IPSEC_KEYING_POLICY1._fields_ = [
        ('numKeyMods', UInt32),
        ('keyModKeys', POINTER(Guid)),
        ('flags', UInt32),
    ]
    return IPSEC_KEYING_POLICY1
def _define_IPSEC_KEYMODULE_STATE0_head():
    class IPSEC_KEYMODULE_STATE0(Structure):
        pass
    return IPSEC_KEYMODULE_STATE0
def _define_IPSEC_KEYMODULE_STATE0():
    IPSEC_KEYMODULE_STATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYMODULE_STATE0_head
    IPSEC_KEYMODULE_STATE0._fields_ = [
        ('keyModuleKey', Guid),
        ('stateBlob', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IPSEC_KEYMODULE_STATE0
IPSEC_PFS_GROUP = Int32
IPSEC_PFS_NONE = 0
IPSEC_PFS_1 = 1
IPSEC_PFS_2 = 2
IPSEC_PFS_2048 = 3
IPSEC_PFS_14 = 3
IPSEC_PFS_ECP_256 = 4
IPSEC_PFS_ECP_384 = 5
IPSEC_PFS_MM = 6
IPSEC_PFS_24 = 7
IPSEC_PFS_MAX = 8
IPSEC_POLICY_FLAG = UInt32
IPSEC_POLICY_FLAG_ND_SECURE = 2
IPSEC_POLICY_FLAG_ND_BOUNDARY = 4
IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_PEER_BEHIND_NAT = 16
IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_GENERAL_NAT_TRAVERSAL = 32
IPSEC_POLICY_FLAG_DONT_NEGOTIATE_SECOND_LIFETIME = 64
IPSEC_POLICY_FLAG_DONT_NEGOTIATE_BYTE_LIFETIME = 128
IPSEC_POLICY_FLAG_CLEAR_DF_ON_TUNNEL = 8
IPSEC_POLICY_FLAG_ENABLE_V6_IN_V4_TUNNELING = 256
IPSEC_POLICY_FLAG_ENABLE_SERVER_ADDR_ASSIGNMENT = 512
IPSEC_POLICY_FLAG_TUNNEL_ALLOW_OUTBOUND_CLEAR_CONNECTION = 1024
IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ALREADY_SECURE_CONNECTION = 2048
IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ICMPV6 = 4096
IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_DICTATE_KEY = 8192
def _define_IPSEC_PROPOSAL0_head():
    class IPSEC_PROPOSAL0(Structure):
        pass
    return IPSEC_PROPOSAL0
def _define_IPSEC_PROPOSAL0():
    IPSEC_PROPOSAL0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head
    IPSEC_PROPOSAL0._fields_ = [
        ('lifetime', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_LIFETIME0),
        ('numSaTransforms', UInt32),
        ('saTransforms', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_TRANSFORM0_head)),
        ('pfsGroup', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PFS_GROUP),
    ]
    return IPSEC_PROPOSAL0
def _define_IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0_head():
    class IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0(Structure):
        pass
    return IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0
def _define_IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0():
    IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0_head
    IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0._fields_ = [
        ('saCipherInformation', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CIPHER_INFORMATION0),
        ('saAuthInformation', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_AUTH_INFORMATION0),
    ]
    return IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0
def _define_IPSEC_SA_AUTH_INFORMATION0_head():
    class IPSEC_SA_AUTH_INFORMATION0(Structure):
        pass
    return IPSEC_SA_AUTH_INFORMATION0
def _define_IPSEC_SA_AUTH_INFORMATION0():
    IPSEC_SA_AUTH_INFORMATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_AUTH_INFORMATION0_head
    IPSEC_SA_AUTH_INFORMATION0._fields_ = [
        ('authTransform', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM0),
        ('authKey', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IPSEC_SA_AUTH_INFORMATION0
IPSEC_SA_BUNDLE_FLAGS = UInt32
IPSEC_SA_BUNDLE_FLAG_ND_SECURE = 1
IPSEC_SA_BUNDLE_FLAG_ND_BOUNDARY = 2
IPSEC_SA_BUNDLE_FLAG_ND_PEER_NAT_BOUNDARY = 4
IPSEC_SA_BUNDLE_FLAG_GUARANTEE_ENCRYPTION = 8
IPSEC_SA_BUNDLE_FLAG_ALLOW_NULL_TARGET_NAME_MATCH = 512
IPSEC_SA_BUNDLE_FLAG_CLEAR_DF_ON_TUNNEL = 1024
IPSEC_SA_BUNDLE_FLAG_ASSUME_UDP_CONTEXT_OUTBOUND = 2048
IPSEC_SA_BUNDLE_FLAG_ND_PEER_BOUNDARY = 4096
IPSEC_SA_BUNDLE_FLAG_SUPPRESS_DUPLICATE_DELETION = 8192
IPSEC_SA_BUNDLE_FLAG_PEER_SUPPORTS_GUARANTEE_ENCRYPTION = 16384
def _define_IPSEC_SA_BUNDLE0_head():
    class IPSEC_SA_BUNDLE0(Structure):
        pass
    return IPSEC_SA_BUNDLE0
def _define_IPSEC_SA_BUNDLE0():
    IPSEC_SA_BUNDLE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE0_head
    class IPSEC_SA_BUNDLE0__Anonymous_e__Union(Union):
        pass
    IPSEC_SA_BUNDLE0__Anonymous_e__Union._fields_ = [
        ('peerV4PrivateAddress', UInt32),
    ]
    IPSEC_SA_BUNDLE0._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_SA_BUNDLE0._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE_FLAGS),
        ('lifetime', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_LIFETIME0),
        ('idleTimeoutSeconds', UInt32),
        ('ndAllowClearTimeoutSeconds', UInt32),
        ('ipsecId', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_ID0_head)),
        ('napContext', UInt32),
        ('qmSaId', UInt32),
        ('numSAs', UInt32),
        ('saList', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA0_head)),
        ('keyModuleState', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYMODULE_STATE0_head)),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IPSEC_SA_BUNDLE0__Anonymous_e__Union),
        ('mmSaId', UInt64),
        ('pfsGroup', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PFS_GROUP),
    ]
    return IPSEC_SA_BUNDLE0
def _define_IPSEC_SA_BUNDLE1_head():
    class IPSEC_SA_BUNDLE1(Structure):
        pass
    return IPSEC_SA_BUNDLE1
def _define_IPSEC_SA_BUNDLE1():
    IPSEC_SA_BUNDLE1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE1_head
    class IPSEC_SA_BUNDLE1__Anonymous_e__Union(Union):
        pass
    IPSEC_SA_BUNDLE1__Anonymous_e__Union._fields_ = [
        ('peerV4PrivateAddress', UInt32),
    ]
    IPSEC_SA_BUNDLE1._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_SA_BUNDLE1._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE_FLAGS),
        ('lifetime', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_LIFETIME0),
        ('idleTimeoutSeconds', UInt32),
        ('ndAllowClearTimeoutSeconds', UInt32),
        ('ipsecId', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_ID0_head)),
        ('napContext', UInt32),
        ('qmSaId', UInt32),
        ('numSAs', UInt32),
        ('saList', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA0_head)),
        ('keyModuleState', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_KEYMODULE_STATE0_head)),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IPSEC_SA_BUNDLE1__Anonymous_e__Union),
        ('mmSaId', UInt64),
        ('pfsGroup', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PFS_GROUP),
        ('saLookupContext', Guid),
        ('qmFilterId', UInt64),
    ]
    return IPSEC_SA_BUNDLE1
def _define_IPSEC_SA_CIPHER_INFORMATION0_head():
    class IPSEC_SA_CIPHER_INFORMATION0(Structure):
        pass
    return IPSEC_SA_CIPHER_INFORMATION0
def _define_IPSEC_SA_CIPHER_INFORMATION0():
    IPSEC_SA_CIPHER_INFORMATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CIPHER_INFORMATION0_head
    IPSEC_SA_CIPHER_INFORMATION0._fields_ = [
        ('cipherTransform', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_CIPHER_TRANSFORM0),
        ('cipherKey', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_BYTE_BLOB),
    ]
    return IPSEC_SA_CIPHER_INFORMATION0
def _define_IPSEC_SA_CONTEXT_CALLBACK0():
    return WINFUNCTYPE(Void,c_void_p,POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_CHANGE0_head))
def _define_IPSEC_SA_CONTEXT_CHANGE0_head():
    class IPSEC_SA_CONTEXT_CHANGE0(Structure):
        pass
    return IPSEC_SA_CONTEXT_CHANGE0
def _define_IPSEC_SA_CONTEXT_CHANGE0():
    IPSEC_SA_CONTEXT_CHANGE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_CHANGE0_head
    IPSEC_SA_CONTEXT_CHANGE0._fields_ = [
        ('changeType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_EVENT_TYPE0),
        ('saContextId', UInt64),
    ]
    return IPSEC_SA_CONTEXT_CHANGE0
def _define_IPSEC_SA_CONTEXT_ENUM_TEMPLATE0_head():
    class IPSEC_SA_CONTEXT_ENUM_TEMPLATE0(Structure):
        pass
    return IPSEC_SA_CONTEXT_ENUM_TEMPLATE0
def _define_IPSEC_SA_CONTEXT_ENUM_TEMPLATE0():
    IPSEC_SA_CONTEXT_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_ENUM_TEMPLATE0_head
    IPSEC_SA_CONTEXT_ENUM_TEMPLATE0._fields_ = [
        ('localSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
        ('remoteSubNet', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_CONDITION_VALUE0),
    ]
    return IPSEC_SA_CONTEXT_ENUM_TEMPLATE0
IPSEC_SA_CONTEXT_EVENT_TYPE0 = Int32
IPSEC_SA_CONTEXT_EVENT_ADD = 1
IPSEC_SA_CONTEXT_EVENT_DELETE = 2
IPSEC_SA_CONTEXT_EVENT_MAX = 3
def _define_IPSEC_SA_CONTEXT_SUBSCRIPTION0_head():
    class IPSEC_SA_CONTEXT_SUBSCRIPTION0(Structure):
        pass
    return IPSEC_SA_CONTEXT_SUBSCRIPTION0
def _define_IPSEC_SA_CONTEXT_SUBSCRIPTION0():
    IPSEC_SA_CONTEXT_SUBSCRIPTION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_SUBSCRIPTION0_head
    IPSEC_SA_CONTEXT_SUBSCRIPTION0._fields_ = [
        ('enumTemplate', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT_ENUM_TEMPLATE0_head)),
        ('flags', UInt32),
        ('sessionKey', Guid),
    ]
    return IPSEC_SA_CONTEXT_SUBSCRIPTION0
def _define_IPSEC_SA_CONTEXT0_head():
    class IPSEC_SA_CONTEXT0(Structure):
        pass
    return IPSEC_SA_CONTEXT0
def _define_IPSEC_SA_CONTEXT0():
    IPSEC_SA_CONTEXT0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT0_head
    IPSEC_SA_CONTEXT0._fields_ = [
        ('saContextId', UInt64),
        ('inboundSa', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS0_head)),
        ('outboundSa', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS0_head)),
    ]
    return IPSEC_SA_CONTEXT0
def _define_IPSEC_SA_CONTEXT1_head():
    class IPSEC_SA_CONTEXT1(Structure):
        pass
    return IPSEC_SA_CONTEXT1
def _define_IPSEC_SA_CONTEXT1():
    IPSEC_SA_CONTEXT1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CONTEXT1_head
    IPSEC_SA_CONTEXT1._fields_ = [
        ('saContextId', UInt64),
        ('inboundSa', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head)),
        ('outboundSa', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head)),
    ]
    return IPSEC_SA_CONTEXT1
def _define_IPSEC_SA_DETAILS0_head():
    class IPSEC_SA_DETAILS0(Structure):
        pass
    return IPSEC_SA_DETAILS0
def _define_IPSEC_SA_DETAILS0():
    IPSEC_SA_DETAILS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS0_head
    class IPSEC_SA_DETAILS0__Anonymous_e__Union(Union):
        pass
    IPSEC_SA_DETAILS0__Anonymous_e__Union._fields_ = [
        ('udpEncapsulation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head)),
    ]
    IPSEC_SA_DETAILS0._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_SA_DETAILS0._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('saDirection', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DIRECTION),
        ('traffic', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC0),
        ('saBundle', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE0),
        ('Anonymous', IPSEC_SA_DETAILS0__Anonymous_e__Union),
        ('transportFilter', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER0_head)),
    ]
    return IPSEC_SA_DETAILS0
def _define_IPSEC_SA_DETAILS1_head():
    class IPSEC_SA_DETAILS1(Structure):
        pass
    return IPSEC_SA_DETAILS1
def _define_IPSEC_SA_DETAILS1():
    IPSEC_SA_DETAILS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_DETAILS1_head
    class IPSEC_SA_DETAILS1__Anonymous_e__Union(Union):
        pass
    IPSEC_SA_DETAILS1__Anonymous_e__Union._fields_ = [
        ('udpEncapsulation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head)),
    ]
    IPSEC_SA_DETAILS1._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_SA_DETAILS1._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('saDirection', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DIRECTION),
        ('traffic', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC1),
        ('saBundle', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_BUNDLE1),
        ('Anonymous', IPSEC_SA_DETAILS1__Anonymous_e__Union),
        ('transportFilter', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.FWPM_FILTER0_head)),
        ('virtualIfTunnelInfo', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_VIRTUAL_IF_TUNNEL_INFO0),
    ]
    return IPSEC_SA_DETAILS1
def _define_IPSEC_SA_ENUM_TEMPLATE0_head():
    class IPSEC_SA_ENUM_TEMPLATE0(Structure):
        pass
    return IPSEC_SA_ENUM_TEMPLATE0
def _define_IPSEC_SA_ENUM_TEMPLATE0():
    IPSEC_SA_ENUM_TEMPLATE0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_ENUM_TEMPLATE0_head
    IPSEC_SA_ENUM_TEMPLATE0._fields_ = [
        ('saDirection', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_DIRECTION),
    ]
    return IPSEC_SA_ENUM_TEMPLATE0
def _define_IPSEC_SA_IDLE_TIMEOUT0_head():
    class IPSEC_SA_IDLE_TIMEOUT0(Structure):
        pass
    return IPSEC_SA_IDLE_TIMEOUT0
def _define_IPSEC_SA_IDLE_TIMEOUT0():
    IPSEC_SA_IDLE_TIMEOUT0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0_head
    IPSEC_SA_IDLE_TIMEOUT0._fields_ = [
        ('idleTimeoutSeconds', UInt32),
        ('idleTimeoutSecondsFailOver', UInt32),
    ]
    return IPSEC_SA_IDLE_TIMEOUT0
def _define_IPSEC_SA_LIFETIME0_head():
    class IPSEC_SA_LIFETIME0(Structure):
        pass
    return IPSEC_SA_LIFETIME0
def _define_IPSEC_SA_LIFETIME0():
    IPSEC_SA_LIFETIME0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_LIFETIME0_head
    IPSEC_SA_LIFETIME0._fields_ = [
        ('lifetimeSeconds', UInt32),
        ('lifetimeKilobytes', UInt32),
        ('lifetimePackets', UInt32),
    ]
    return IPSEC_SA_LIFETIME0
def _define_IPSEC_SA_TRANSFORM0_head():
    class IPSEC_SA_TRANSFORM0(Structure):
        pass
    return IPSEC_SA_TRANSFORM0
def _define_IPSEC_SA_TRANSFORM0():
    IPSEC_SA_TRANSFORM0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_TRANSFORM0_head
    class IPSEC_SA_TRANSFORM0__Anonymous_e__Union(Union):
        pass
    IPSEC_SA_TRANSFORM0__Anonymous_e__Union._fields_ = [
        ('ahTransform', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM0_head)),
        ('espAuthTransform', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM0_head)),
        ('espCipherTransform', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_CIPHER_TRANSFORM0_head)),
        ('espAuthAndCipherTransform', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_AND_CIPHER_TRANSFORM0_head)),
        ('espAuthFwTransform', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AUTH_TRANSFORM0_head)),
    ]
    IPSEC_SA_TRANSFORM0._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_SA_TRANSFORM0._fields_ = [
        ('ipsecTransformType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSFORM_TYPE),
        ('Anonymous', IPSEC_SA_TRANSFORM0__Anonymous_e__Union),
    ]
    return IPSEC_SA_TRANSFORM0
def _define_IPSEC_SA0_head():
    class IPSEC_SA0(Structure):
        pass
    return IPSEC_SA0
def _define_IPSEC_SA0():
    IPSEC_SA0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA0_head
    class IPSEC_SA0__Anonymous_e__Union(Union):
        pass
    IPSEC_SA0__Anonymous_e__Union._fields_ = [
        ('ahInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_AUTH_INFORMATION0_head)),
        ('espAuthInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_AUTH_INFORMATION0_head)),
        ('espCipherInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_CIPHER_INFORMATION0_head)),
        ('espAuthAndCipherInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0_head)),
        ('espAuthFwInformation', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_AUTH_INFORMATION0_head)),
    ]
    IPSEC_SA0._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_SA0._fields_ = [
        ('spi', UInt32),
        ('saTransformType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSFORM_TYPE),
        ('Anonymous', IPSEC_SA0__Anonymous_e__Union),
    ]
    return IPSEC_SA0
def _define_IPSEC_STATISTICS0_head():
    class IPSEC_STATISTICS0(Structure):
        pass
    return IPSEC_STATISTICS0
def _define_IPSEC_STATISTICS0():
    IPSEC_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_STATISTICS0_head
    IPSEC_STATISTICS0._fields_ = [
        ('aggregateSaStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AGGREGATE_SA_STATISTICS0),
        ('espDropPacketStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_ESP_DROP_PACKET_STATISTICS0),
        ('ahDropPacketStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AH_DROP_PACKET_STATISTICS0),
        ('aggregateDropPacketStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0),
        ('inboundTrafficStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_STATISTICS0),
        ('outboundTrafficStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_STATISTICS0),
    ]
    return IPSEC_STATISTICS0
def _define_IPSEC_STATISTICS1_head():
    class IPSEC_STATISTICS1(Structure):
        pass
    return IPSEC_STATISTICS1
def _define_IPSEC_STATISTICS1():
    IPSEC_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_STATISTICS1_head
    IPSEC_STATISTICS1._fields_ = [
        ('aggregateSaStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AGGREGATE_SA_STATISTICS0),
        ('espDropPacketStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_ESP_DROP_PACKET_STATISTICS0),
        ('ahDropPacketStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AH_DROP_PACKET_STATISTICS0),
        ('aggregateDropPacketStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1),
        ('inboundTrafficStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_STATISTICS1),
        ('outboundTrafficStatistics', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_STATISTICS1),
    ]
    return IPSEC_STATISTICS1
IPSEC_TOKEN_MODE = Int32
IPSEC_TOKEN_MODE_MAIN = 0
IPSEC_TOKEN_MODE_EXTENDED = 1
IPSEC_TOKEN_MODE_MAX = 2
IPSEC_TOKEN_PRINCIPAL = Int32
IPSEC_TOKEN_PRINCIPAL_LOCAL = 0
IPSEC_TOKEN_PRINCIPAL_PEER = 1
IPSEC_TOKEN_PRINCIPAL_MAX = 2
IPSEC_TOKEN_TYPE = Int32
IPSEC_TOKEN_TYPE_MACHINE = 0
IPSEC_TOKEN_TYPE_IMPERSONATION = 1
IPSEC_TOKEN_TYPE_MAX = 2
def _define_IPSEC_TOKEN0_head():
    class IPSEC_TOKEN0(Structure):
        pass
    return IPSEC_TOKEN0
def _define_IPSEC_TOKEN0():
    IPSEC_TOKEN0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TOKEN0_head
    IPSEC_TOKEN0._fields_ = [
        ('type', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TOKEN_TYPE),
        ('principal', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TOKEN_PRINCIPAL),
        ('mode', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TOKEN_MODE),
        ('token', UInt64),
    ]
    return IPSEC_TOKEN0
def _define_IPSEC_TRAFFIC_SELECTOR_POLICY0_head():
    class IPSEC_TRAFFIC_SELECTOR_POLICY0(Structure):
        pass
    return IPSEC_TRAFFIC_SELECTOR_POLICY0
def _define_IPSEC_TRAFFIC_SELECTOR_POLICY0():
    IPSEC_TRAFFIC_SELECTOR_POLICY0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_SELECTOR_POLICY0_head
    IPSEC_TRAFFIC_SELECTOR_POLICY0._fields_ = [
        ('flags', UInt32),
        ('numLocalTrafficSelectors', UInt32),
        ('localTrafficSelectors', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_SELECTOR0_head)),
        ('numRemoteTrafficSelectors', UInt32),
        ('remoteTrafficSelectors', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_SELECTOR0_head)),
    ]
    return IPSEC_TRAFFIC_SELECTOR_POLICY0
def _define_IPSEC_TRAFFIC_SELECTOR0_head():
    class IPSEC_TRAFFIC_SELECTOR0(Structure):
        pass
    return IPSEC_TRAFFIC_SELECTOR0
def _define_IPSEC_TRAFFIC_SELECTOR0():
    IPSEC_TRAFFIC_SELECTOR0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_SELECTOR0_head
    class IPSEC_TRAFFIC_SELECTOR0__Anonymous1_e__Union(Union):
        pass
    IPSEC_TRAFFIC_SELECTOR0__Anonymous1_e__Union._fields_ = [
        ('startV4Address', UInt32),
        ('startV6Address', Byte * 16),
    ]
    class IPSEC_TRAFFIC_SELECTOR0__Anonymous2_e__Union(Union):
        pass
    IPSEC_TRAFFIC_SELECTOR0__Anonymous2_e__Union._fields_ = [
        ('endV4Address', UInt32),
        ('endV6Address', Byte * 16),
    ]
    IPSEC_TRAFFIC_SELECTOR0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IPSEC_TRAFFIC_SELECTOR0._fields_ = [
        ('protocolId', Byte),
        ('portStart', UInt16),
        ('portEnd', UInt16),
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', IPSEC_TRAFFIC_SELECTOR0__Anonymous1_e__Union),
        ('Anonymous2', IPSEC_TRAFFIC_SELECTOR0__Anonymous2_e__Union),
    ]
    return IPSEC_TRAFFIC_SELECTOR0
def _define_IPSEC_TRAFFIC_STATISTICS0_head():
    class IPSEC_TRAFFIC_STATISTICS0(Structure):
        pass
    return IPSEC_TRAFFIC_STATISTICS0
def _define_IPSEC_TRAFFIC_STATISTICS0():
    IPSEC_TRAFFIC_STATISTICS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_STATISTICS0_head
    IPSEC_TRAFFIC_STATISTICS0._fields_ = [
        ('encryptedByteCount', UInt64),
        ('authenticatedAHByteCount', UInt64),
        ('authenticatedESPByteCount', UInt64),
        ('transportByteCount', UInt64),
        ('tunnelByteCount', UInt64),
        ('offloadByteCount', UInt64),
    ]
    return IPSEC_TRAFFIC_STATISTICS0
def _define_IPSEC_TRAFFIC_STATISTICS1_head():
    class IPSEC_TRAFFIC_STATISTICS1(Structure):
        pass
    return IPSEC_TRAFFIC_STATISTICS1
def _define_IPSEC_TRAFFIC_STATISTICS1():
    IPSEC_TRAFFIC_STATISTICS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_STATISTICS1_head
    IPSEC_TRAFFIC_STATISTICS1._fields_ = [
        ('encryptedByteCount', UInt64),
        ('authenticatedAHByteCount', UInt64),
        ('authenticatedESPByteCount', UInt64),
        ('transportByteCount', UInt64),
        ('tunnelByteCount', UInt64),
        ('offloadByteCount', UInt64),
        ('totalSuccessfulPackets', UInt64),
    ]
    return IPSEC_TRAFFIC_STATISTICS1
IPSEC_TRAFFIC_TYPE = Int32
IPSEC_TRAFFIC_TYPE_TRANSPORT = 0
IPSEC_TRAFFIC_TYPE_TUNNEL = 1
IPSEC_TRAFFIC_TYPE_MAX = 2
def _define_IPSEC_TRAFFIC0_head():
    class IPSEC_TRAFFIC0(Structure):
        pass
    return IPSEC_TRAFFIC0
def _define_IPSEC_TRAFFIC0():
    IPSEC_TRAFFIC0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC0_head
    class IPSEC_TRAFFIC0__Anonymous1_e__Union(Union):
        pass
    IPSEC_TRAFFIC0__Anonymous1_e__Union._fields_ = [
        ('localV4Address', UInt32),
        ('localV6Address', Byte * 16),
    ]
    class IPSEC_TRAFFIC0__Anonymous2_e__Union(Union):
        pass
    IPSEC_TRAFFIC0__Anonymous2_e__Union._fields_ = [
        ('remoteV4Address', UInt32),
        ('remoteV6Address', Byte * 16),
    ]
    class IPSEC_TRAFFIC0__Anonymous3_e__Union(Union):
        pass
    IPSEC_TRAFFIC0__Anonymous3_e__Union._fields_ = [
        ('ipsecFilterId', UInt64),
        ('tunnelPolicyId', UInt64),
    ]
    IPSEC_TRAFFIC0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    IPSEC_TRAFFIC0._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', IPSEC_TRAFFIC0__Anonymous1_e__Union),
        ('Anonymous2', IPSEC_TRAFFIC0__Anonymous2_e__Union),
        ('trafficType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_TYPE),
        ('Anonymous3', IPSEC_TRAFFIC0__Anonymous3_e__Union),
        ('remotePort', UInt16),
    ]
    return IPSEC_TRAFFIC0
def _define_IPSEC_TRAFFIC1_head():
    class IPSEC_TRAFFIC1(Structure):
        pass
    return IPSEC_TRAFFIC1
def _define_IPSEC_TRAFFIC1():
    IPSEC_TRAFFIC1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC1_head
    class IPSEC_TRAFFIC1__Anonymous1_e__Union(Union):
        pass
    IPSEC_TRAFFIC1__Anonymous1_e__Union._fields_ = [
        ('localV4Address', UInt32),
        ('localV6Address', Byte * 16),
    ]
    class IPSEC_TRAFFIC1__Anonymous2_e__Union(Union):
        pass
    IPSEC_TRAFFIC1__Anonymous2_e__Union._fields_ = [
        ('remoteV4Address', UInt32),
        ('remoteV6Address', Byte * 16),
    ]
    class IPSEC_TRAFFIC1__Anonymous3_e__Union(Union):
        pass
    IPSEC_TRAFFIC1__Anonymous3_e__Union._fields_ = [
        ('ipsecFilterId', UInt64),
        ('tunnelPolicyId', UInt64),
    ]
    IPSEC_TRAFFIC1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    IPSEC_TRAFFIC1._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', IPSEC_TRAFFIC1__Anonymous1_e__Union),
        ('Anonymous2', IPSEC_TRAFFIC1__Anonymous2_e__Union),
        ('trafficType', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_TYPE),
        ('Anonymous3', IPSEC_TRAFFIC1__Anonymous3_e__Union),
        ('remotePort', UInt16),
        ('localPort', UInt16),
        ('ipProtocol', Byte),
        ('localIfLuid', UInt64),
        ('realIfProfileId', UInt32),
    ]
    return IPSEC_TRAFFIC1
IPSEC_TRANSFORM_TYPE = Int32
IPSEC_TRANSFORM_AH = 1
IPSEC_TRANSFORM_ESP_AUTH = 2
IPSEC_TRANSFORM_ESP_CIPHER = 3
IPSEC_TRANSFORM_ESP_AUTH_AND_CIPHER = 4
IPSEC_TRANSFORM_ESP_AUTH_FW = 5
IPSEC_TRANSFORM_TYPE_MAX = 6
def _define_IPSEC_TRANSPORT_POLICY0_head():
    class IPSEC_TRANSPORT_POLICY0(Structure):
        pass
    return IPSEC_TRANSPORT_POLICY0
def _define_IPSEC_TRANSPORT_POLICY0():
    IPSEC_TRANSPORT_POLICY0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY0_head
    IPSEC_TRANSPORT_POLICY0._fields_ = [
        ('numIpsecProposals', UInt32),
        ('ipsecProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_POLICY_FLAG),
        ('ndAllowClearTimeoutSeconds', UInt32),
        ('saIdleTimeout', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0),
        ('emPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY0_head)),
    ]
    return IPSEC_TRANSPORT_POLICY0
def _define_IPSEC_TRANSPORT_POLICY1_head():
    class IPSEC_TRANSPORT_POLICY1(Structure):
        pass
    return IPSEC_TRANSPORT_POLICY1
def _define_IPSEC_TRANSPORT_POLICY1():
    IPSEC_TRANSPORT_POLICY1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY1_head
    IPSEC_TRANSPORT_POLICY1._fields_ = [
        ('numIpsecProposals', UInt32),
        ('ipsecProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_POLICY_FLAG),
        ('ndAllowClearTimeoutSeconds', UInt32),
        ('saIdleTimeout', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0),
        ('emPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY1_head)),
    ]
    return IPSEC_TRANSPORT_POLICY1
def _define_IPSEC_TRANSPORT_POLICY2_head():
    class IPSEC_TRANSPORT_POLICY2(Structure):
        pass
    return IPSEC_TRANSPORT_POLICY2
def _define_IPSEC_TRANSPORT_POLICY2():
    IPSEC_TRANSPORT_POLICY2 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRANSPORT_POLICY2_head
    IPSEC_TRANSPORT_POLICY2._fields_ = [
        ('numIpsecProposals', UInt32),
        ('ipsecProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head)),
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_POLICY_FLAG),
        ('ndAllowClearTimeoutSeconds', UInt32),
        ('saIdleTimeout', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0),
        ('emPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY2_head)),
    ]
    return IPSEC_TRANSPORT_POLICY2
def _define_IPSEC_TUNNEL_ENDPOINT0_head():
    class IPSEC_TUNNEL_ENDPOINT0(Structure):
        pass
    return IPSEC_TUNNEL_ENDPOINT0
def _define_IPSEC_TUNNEL_ENDPOINT0():
    IPSEC_TUNNEL_ENDPOINT0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINT0_head
    class IPSEC_TUNNEL_ENDPOINT0__Anonymous_e__Union(Union):
        pass
    IPSEC_TUNNEL_ENDPOINT0__Anonymous_e__Union._fields_ = [
        ('v4Address', UInt32),
        ('v6Address', Byte * 16),
    ]
    IPSEC_TUNNEL_ENDPOINT0._anonymous_ = [
        'Anonymous',
    ]
    IPSEC_TUNNEL_ENDPOINT0._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous', IPSEC_TUNNEL_ENDPOINT0__Anonymous_e__Union),
    ]
    return IPSEC_TUNNEL_ENDPOINT0
def _define_IPSEC_TUNNEL_ENDPOINTS0_head():
    class IPSEC_TUNNEL_ENDPOINTS0(Structure):
        pass
    return IPSEC_TUNNEL_ENDPOINTS0
def _define_IPSEC_TUNNEL_ENDPOINTS0():
    IPSEC_TUNNEL_ENDPOINTS0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINTS0_head
    class IPSEC_TUNNEL_ENDPOINTS0__Anonymous1_e__Union(Union):
        pass
    IPSEC_TUNNEL_ENDPOINTS0__Anonymous1_e__Union._fields_ = [
        ('localV4Address', UInt32),
        ('localV6Address', Byte * 16),
    ]
    class IPSEC_TUNNEL_ENDPOINTS0__Anonymous2_e__Union(Union):
        pass
    IPSEC_TUNNEL_ENDPOINTS0__Anonymous2_e__Union._fields_ = [
        ('remoteV4Address', UInt32),
        ('remoteV6Address', Byte * 16),
    ]
    IPSEC_TUNNEL_ENDPOINTS0._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IPSEC_TUNNEL_ENDPOINTS0._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', IPSEC_TUNNEL_ENDPOINTS0__Anonymous1_e__Union),
        ('Anonymous2', IPSEC_TUNNEL_ENDPOINTS0__Anonymous2_e__Union),
    ]
    return IPSEC_TUNNEL_ENDPOINTS0
def _define_IPSEC_TUNNEL_ENDPOINTS1_head():
    class IPSEC_TUNNEL_ENDPOINTS1(Structure):
        pass
    return IPSEC_TUNNEL_ENDPOINTS1
def _define_IPSEC_TUNNEL_ENDPOINTS1():
    IPSEC_TUNNEL_ENDPOINTS1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINTS1_head
    class IPSEC_TUNNEL_ENDPOINTS1__Anonymous1_e__Union(Union):
        pass
    IPSEC_TUNNEL_ENDPOINTS1__Anonymous1_e__Union._fields_ = [
        ('localV4Address', UInt32),
        ('localV6Address', Byte * 16),
    ]
    class IPSEC_TUNNEL_ENDPOINTS1__Anonymous2_e__Union(Union):
        pass
    IPSEC_TUNNEL_ENDPOINTS1__Anonymous2_e__Union._fields_ = [
        ('remoteV4Address', UInt32),
        ('remoteV6Address', Byte * 16),
    ]
    IPSEC_TUNNEL_ENDPOINTS1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IPSEC_TUNNEL_ENDPOINTS1._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', IPSEC_TUNNEL_ENDPOINTS1__Anonymous1_e__Union),
        ('Anonymous2', IPSEC_TUNNEL_ENDPOINTS1__Anonymous2_e__Union),
        ('localIfLuid', UInt64),
    ]
    return IPSEC_TUNNEL_ENDPOINTS1
def _define_IPSEC_TUNNEL_ENDPOINTS2_head():
    class IPSEC_TUNNEL_ENDPOINTS2(Structure):
        pass
    return IPSEC_TUNNEL_ENDPOINTS2
def _define_IPSEC_TUNNEL_ENDPOINTS2():
    IPSEC_TUNNEL_ENDPOINTS2 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINTS2_head
    class IPSEC_TUNNEL_ENDPOINTS2__Anonymous1_e__Union(Union):
        pass
    IPSEC_TUNNEL_ENDPOINTS2__Anonymous1_e__Union._fields_ = [
        ('localV4Address', UInt32),
        ('localV6Address', Byte * 16),
    ]
    class IPSEC_TUNNEL_ENDPOINTS2__Anonymous2_e__Union(Union):
        pass
    IPSEC_TUNNEL_ENDPOINTS2__Anonymous2_e__Union._fields_ = [
        ('remoteV4Address', UInt32),
        ('remoteV6Address', Byte * 16),
    ]
    IPSEC_TUNNEL_ENDPOINTS2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IPSEC_TUNNEL_ENDPOINTS2._fields_ = [
        ('ipVersion', win32more.NetworkManagement.WindowsFilteringPlatform.FWP_IP_VERSION),
        ('Anonymous1', IPSEC_TUNNEL_ENDPOINTS2__Anonymous1_e__Union),
        ('Anonymous2', IPSEC_TUNNEL_ENDPOINTS2__Anonymous2_e__Union),
        ('localIfLuid', UInt64),
        ('remoteFqdn', win32more.Foundation.PWSTR),
        ('numAddresses', UInt32),
        ('remoteAddresses', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINT0_head)),
    ]
    return IPSEC_TUNNEL_ENDPOINTS2
def _define_IPSEC_TUNNEL_POLICY0_head():
    class IPSEC_TUNNEL_POLICY0(Structure):
        pass
    return IPSEC_TUNNEL_POLICY0
def _define_IPSEC_TUNNEL_POLICY0():
    IPSEC_TUNNEL_POLICY0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY0_head
    IPSEC_TUNNEL_POLICY0._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_POLICY_FLAG),
        ('numIpsecProposals', UInt32),
        ('ipsecProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head)),
        ('tunnelEndpoints', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINTS0),
        ('saIdleTimeout', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0),
        ('emPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY0_head)),
    ]
    return IPSEC_TUNNEL_POLICY0
def _define_IPSEC_TUNNEL_POLICY1_head():
    class IPSEC_TUNNEL_POLICY1(Structure):
        pass
    return IPSEC_TUNNEL_POLICY1
def _define_IPSEC_TUNNEL_POLICY1():
    IPSEC_TUNNEL_POLICY1 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY1_head
    IPSEC_TUNNEL_POLICY1._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_POLICY_FLAG),
        ('numIpsecProposals', UInt32),
        ('ipsecProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head)),
        ('tunnelEndpoints', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINTS1),
        ('saIdleTimeout', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0),
        ('emPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY1_head)),
    ]
    return IPSEC_TUNNEL_POLICY1
def _define_IPSEC_TUNNEL_POLICY2_head():
    class IPSEC_TUNNEL_POLICY2(Structure):
        pass
    return IPSEC_TUNNEL_POLICY2
def _define_IPSEC_TUNNEL_POLICY2():
    IPSEC_TUNNEL_POLICY2 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY2_head
    IPSEC_TUNNEL_POLICY2._fields_ = [
        ('flags', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_POLICY_FLAG),
        ('numIpsecProposals', UInt32),
        ('ipsecProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head)),
        ('tunnelEndpoints', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINTS2),
        ('saIdleTimeout', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0),
        ('emPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY2_head)),
        ('fwdPathSaLifetime', UInt32),
    ]
    return IPSEC_TUNNEL_POLICY2
def _define_IPSEC_TUNNEL_POLICY3_head():
    class IPSEC_TUNNEL_POLICY3(Structure):
        pass
    return IPSEC_TUNNEL_POLICY3
def _define_IPSEC_TUNNEL_POLICY3():
    IPSEC_TUNNEL_POLICY3 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_POLICY3_head
    IPSEC_TUNNEL_POLICY3._fields_ = [
        ('flags', UInt32),
        ('numIpsecProposals', UInt32),
        ('ipsecProposals', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_PROPOSAL0_head)),
        ('tunnelEndpoints', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TUNNEL_ENDPOINTS2),
        ('saIdleTimeout', win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_SA_IDLE_TIMEOUT0),
        ('emPolicy', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IKEEXT_EM_POLICY2_head)),
        ('fwdPathSaLifetime', UInt32),
        ('compartmentId', UInt32),
        ('numTrafficSelectorPolicy', UInt32),
        ('trafficSelectorPolicies', POINTER(win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_TRAFFIC_SELECTOR_POLICY0_head)),
    ]
    return IPSEC_TUNNEL_POLICY3
def _define_IPSEC_V4_UDP_ENCAPSULATION0_head():
    class IPSEC_V4_UDP_ENCAPSULATION0(Structure):
        pass
    return IPSEC_V4_UDP_ENCAPSULATION0
def _define_IPSEC_V4_UDP_ENCAPSULATION0():
    IPSEC_V4_UDP_ENCAPSULATION0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_V4_UDP_ENCAPSULATION0_head
    IPSEC_V4_UDP_ENCAPSULATION0._fields_ = [
        ('localUdpEncapPort', UInt16),
        ('remoteUdpEncapPort', UInt16),
    ]
    return IPSEC_V4_UDP_ENCAPSULATION0
def _define_IPSEC_VIRTUAL_IF_TUNNEL_INFO0_head():
    class IPSEC_VIRTUAL_IF_TUNNEL_INFO0(Structure):
        pass
    return IPSEC_VIRTUAL_IF_TUNNEL_INFO0
def _define_IPSEC_VIRTUAL_IF_TUNNEL_INFO0():
    IPSEC_VIRTUAL_IF_TUNNEL_INFO0 = win32more.NetworkManagement.WindowsFilteringPlatform.IPSEC_VIRTUAL_IF_TUNNEL_INFO0_head
    IPSEC_VIRTUAL_IF_TUNNEL_INFO0._fields_ = [
        ('virtualIfTunnelId', UInt64),
        ('trafficSelectorId', UInt64),
    ]
    return IPSEC_VIRTUAL_IF_TUNNEL_INFO0
__all__ = [
    "DL_ADDRESS_TYPE",
    "DL_ADDRESS_TYPE_DlBroadcast",
    "DL_ADDRESS_TYPE_DlMulticast",
    "DL_ADDRESS_TYPE_DlUnicast",
    "FWPM_ACTION0",
    "FWPM_ACTRL_ADD",
    "FWPM_ACTRL_ADD_LINK",
    "FWPM_ACTRL_BEGIN_READ_TXN",
    "FWPM_ACTRL_BEGIN_WRITE_TXN",
    "FWPM_ACTRL_CLASSIFY",
    "FWPM_ACTRL_ENUM",
    "FWPM_ACTRL_OPEN",
    "FWPM_ACTRL_READ",
    "FWPM_ACTRL_READ_STATS",
    "FWPM_ACTRL_SUBSCRIBE",
    "FWPM_ACTRL_WRITE",
    "FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT",
    "FWPM_APPC_NETWORK_CAPABILITY_INTERNET_CLIENT_SERVER",
    "FWPM_APPC_NETWORK_CAPABILITY_INTERNET_PRIVATE_NETWORK",
    "FWPM_APPC_NETWORK_CAPABILITY_TYPE",
    "FWPM_AUTO_WEIGHT_BITS",
    "FWPM_CALLOUT0",
    "FWPM_CALLOUT_BUILT_IN_RESERVED_1",
    "FWPM_CALLOUT_BUILT_IN_RESERVED_2",
    "FWPM_CALLOUT_BUILT_IN_RESERVED_3",
    "FWPM_CALLOUT_BUILT_IN_RESERVED_4",
    "FWPM_CALLOUT_CHANGE0",
    "FWPM_CALLOUT_CHANGE_CALLBACK0",
    "FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V4",
    "FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V4",
    "FWPM_CALLOUT_ENUM_TEMPLATE0",
    "FWPM_CALLOUT_FLAG_PERSISTENT",
    "FWPM_CALLOUT_FLAG_REGISTERED",
    "FWPM_CALLOUT_FLAG_USES_PROVIDER_CONTEXT",
    "FWPM_CALLOUT_HTTP_TEMPLATE_SSL_HANDSHAKE",
    "FWPM_CALLOUT_IPSEC_ALE_CONNECT_V4",
    "FWPM_CALLOUT_IPSEC_ALE_CONNECT_V6",
    "FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V4",
    "FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V6",
    "FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V4",
    "FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V6",
    "FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V4",
    "FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V6",
    "FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V4",
    "FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V6",
    "FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V4",
    "FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V6",
    "FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V4",
    "FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V6",
    "FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V4",
    "FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V6",
    "FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V4",
    "FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V6",
    "FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V4",
    "FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V6",
    "FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V4",
    "FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V6",
    "FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V4",
    "FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V6",
    "FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4",
    "FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V6",
    "FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V4",
    "FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V6",
    "FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V4",
    "FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V6",
    "FWPM_CALLOUT_SUBSCRIPTION0",
    "FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V4",
    "FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V6",
    "FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V4",
    "FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V6",
    "FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V4",
    "FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V6",
    "FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V4",
    "FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V6",
    "FWPM_CALLOUT_TEREDO_ALE_LISTEN_V6",
    "FWPM_CALLOUT_TEREDO_ALE_RESOURCE_ASSIGNMENT_V6",
    "FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V4_SILENT_DROP",
    "FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V6_SILENT_DROP",
    "FWPM_CHANGE_ADD",
    "FWPM_CHANGE_DELETE",
    "FWPM_CHANGE_TYPE",
    "FWPM_CHANGE_TYPE_MAX",
    "FWPM_CLASSIFY_OPTION0",
    "FWPM_CLASSIFY_OPTIONS0",
    "FWPM_CLASSIFY_OPTIONS_CONTEXT",
    "FWPM_CONDITION_ALE_APP_ID",
    "FWPM_CONDITION_ALE_EFFECTIVE_NAME",
    "FWPM_CONDITION_ALE_NAP_CONTEXT",
    "FWPM_CONDITION_ALE_ORIGINAL_APP_ID",
    "FWPM_CONDITION_ALE_PACKAGE_ID",
    "FWPM_CONDITION_ALE_PROMISCUOUS_MODE",
    "FWPM_CONDITION_ALE_REAUTH_REASON",
    "FWPM_CONDITION_ALE_REMOTE_MACHINE_ID",
    "FWPM_CONDITION_ALE_REMOTE_USER_ID",
    "FWPM_CONDITION_ALE_SECURITY_ATTRIBUTE_FQBN_VALUE",
    "FWPM_CONDITION_ALE_SIO_FIREWALL_SYSTEM_PORT",
    "FWPM_CONDITION_ALE_USER_ID",
    "FWPM_CONDITION_ARRIVAL_INTERFACE_INDEX",
    "FWPM_CONDITION_ARRIVAL_INTERFACE_PROFILE_ID",
    "FWPM_CONDITION_ARRIVAL_INTERFACE_TYPE",
    "FWPM_CONDITION_ARRIVAL_TUNNEL_TYPE",
    "FWPM_CONDITION_AUTHENTICATION_TYPE",
    "FWPM_CONDITION_CLIENT_CERT_KEY_LENGTH",
    "FWPM_CONDITION_CLIENT_CERT_OID",
    "FWPM_CONDITION_CLIENT_TOKEN",
    "FWPM_CONDITION_COMPARTMENT_ID",
    "FWPM_CONDITION_CURRENT_PROFILE_ID",
    "FWPM_CONDITION_DCOM_APP_ID",
    "FWPM_CONDITION_DESTINATION_INTERFACE_INDEX",
    "FWPM_CONDITION_DESTINATION_SUB_INTERFACE_INDEX",
    "FWPM_CONDITION_DIRECTION",
    "FWPM_CONDITION_EMBEDDED_LOCAL_ADDRESS_TYPE",
    "FWPM_CONDITION_EMBEDDED_LOCAL_PORT",
    "FWPM_CONDITION_EMBEDDED_PROTOCOL",
    "FWPM_CONDITION_EMBEDDED_REMOTE_ADDRESS",
    "FWPM_CONDITION_EMBEDDED_REMOTE_PORT",
    "FWPM_CONDITION_ETHER_TYPE",
    "FWPM_CONDITION_FLAGS",
    "FWPM_CONDITION_IMAGE_NAME",
    "FWPM_CONDITION_INTERFACE_INDEX",
    "FWPM_CONDITION_INTERFACE_MAC_ADDRESS",
    "FWPM_CONDITION_INTERFACE_QUARANTINE_EPOCH",
    "FWPM_CONDITION_INTERFACE_TYPE",
    "FWPM_CONDITION_IPSEC_POLICY_KEY",
    "FWPM_CONDITION_IPSEC_SECURITY_REALM_ID",
    "FWPM_CONDITION_IP_ARRIVAL_INTERFACE",
    "FWPM_CONDITION_IP_DESTINATION_ADDRESS",
    "FWPM_CONDITION_IP_DESTINATION_ADDRESS_TYPE",
    "FWPM_CONDITION_IP_DESTINATION_PORT",
    "FWPM_CONDITION_IP_FORWARD_INTERFACE",
    "FWPM_CONDITION_IP_LOCAL_ADDRESS",
    "FWPM_CONDITION_IP_LOCAL_ADDRESS_TYPE",
    "FWPM_CONDITION_IP_LOCAL_ADDRESS_V4",
    "FWPM_CONDITION_IP_LOCAL_ADDRESS_V6",
    "FWPM_CONDITION_IP_LOCAL_INTERFACE",
    "FWPM_CONDITION_IP_LOCAL_PORT",
    "FWPM_CONDITION_IP_NEXTHOP_ADDRESS",
    "FWPM_CONDITION_IP_NEXTHOP_INTERFACE",
    "FWPM_CONDITION_IP_PHYSICAL_ARRIVAL_INTERFACE",
    "FWPM_CONDITION_IP_PHYSICAL_NEXTHOP_INTERFACE",
    "FWPM_CONDITION_IP_PROTOCOL",
    "FWPM_CONDITION_IP_REMOTE_ADDRESS",
    "FWPM_CONDITION_IP_REMOTE_ADDRESS_V4",
    "FWPM_CONDITION_IP_REMOTE_ADDRESS_V6",
    "FWPM_CONDITION_IP_REMOTE_PORT",
    "FWPM_CONDITION_IP_SOURCE_ADDRESS",
    "FWPM_CONDITION_IP_SOURCE_PORT",
    "FWPM_CONDITION_KM_AUTH_NAP_CONTEXT",
    "FWPM_CONDITION_KM_MODE",
    "FWPM_CONDITION_KM_TYPE",
    "FWPM_CONDITION_L2_FLAGS",
    "FWPM_CONDITION_LOCAL_INTERFACE_PROFILE_ID",
    "FWPM_CONDITION_MAC_DESTINATION_ADDRESS",
    "FWPM_CONDITION_MAC_DESTINATION_ADDRESS_TYPE",
    "FWPM_CONDITION_MAC_LOCAL_ADDRESS",
    "FWPM_CONDITION_MAC_LOCAL_ADDRESS_TYPE",
    "FWPM_CONDITION_MAC_REMOTE_ADDRESS",
    "FWPM_CONDITION_MAC_REMOTE_ADDRESS_TYPE",
    "FWPM_CONDITION_MAC_SOURCE_ADDRESS",
    "FWPM_CONDITION_MAC_SOURCE_ADDRESS_TYPE",
    "FWPM_CONDITION_NDIS_MEDIA_TYPE",
    "FWPM_CONDITION_NDIS_PHYSICAL_MEDIA_TYPE",
    "FWPM_CONDITION_NDIS_PORT",
    "FWPM_CONDITION_NET_EVENT_TYPE",
    "FWPM_CONDITION_NEXTHOP_INTERFACE_INDEX",
    "FWPM_CONDITION_NEXTHOP_INTERFACE_PROFILE_ID",
    "FWPM_CONDITION_NEXTHOP_INTERFACE_TYPE",
    "FWPM_CONDITION_NEXTHOP_SUB_INTERFACE_INDEX",
    "FWPM_CONDITION_NEXTHOP_TUNNEL_TYPE",
    "FWPM_CONDITION_ORIGINAL_ICMP_TYPE",
    "FWPM_CONDITION_ORIGINAL_PROFILE_ID",
    "FWPM_CONDITION_PEER_NAME",
    "FWPM_CONDITION_PIPE",
    "FWPM_CONDITION_PROCESS_WITH_RPC_IF_UUID",
    "FWPM_CONDITION_QM_MODE",
    "FWPM_CONDITION_REAUTHORIZE_REASON",
    "FWPM_CONDITION_REMOTE_ID",
    "FWPM_CONDITION_REMOTE_USER_TOKEN",
    "FWPM_CONDITION_RESERVED0",
    "FWPM_CONDITION_RESERVED1",
    "FWPM_CONDITION_RESERVED10",
    "FWPM_CONDITION_RESERVED11",
    "FWPM_CONDITION_RESERVED12",
    "FWPM_CONDITION_RESERVED13",
    "FWPM_CONDITION_RESERVED14",
    "FWPM_CONDITION_RESERVED15",
    "FWPM_CONDITION_RESERVED2",
    "FWPM_CONDITION_RESERVED3",
    "FWPM_CONDITION_RESERVED4",
    "FWPM_CONDITION_RESERVED5",
    "FWPM_CONDITION_RESERVED6",
    "FWPM_CONDITION_RESERVED7",
    "FWPM_CONDITION_RESERVED8",
    "FWPM_CONDITION_RESERVED9",
    "FWPM_CONDITION_RPC_AUTH_LEVEL",
    "FWPM_CONDITION_RPC_AUTH_TYPE",
    "FWPM_CONDITION_RPC_EP_FLAGS",
    "FWPM_CONDITION_RPC_EP_VALUE",
    "FWPM_CONDITION_RPC_IF_FLAG",
    "FWPM_CONDITION_RPC_IF_UUID",
    "FWPM_CONDITION_RPC_IF_VERSION",
    "FWPM_CONDITION_RPC_PROTOCOL",
    "FWPM_CONDITION_RPC_PROXY_AUTH_TYPE",
    "FWPM_CONDITION_RPC_SERVER_NAME",
    "FWPM_CONDITION_RPC_SERVER_PORT",
    "FWPM_CONDITION_SEC_ENCRYPT_ALGORITHM",
    "FWPM_CONDITION_SEC_KEY_SIZE",
    "FWPM_CONDITION_SOURCE_INTERFACE_INDEX",
    "FWPM_CONDITION_SOURCE_SUB_INTERFACE_INDEX",
    "FWPM_CONDITION_SUB_INTERFACE_INDEX",
    "FWPM_CONDITION_TUNNEL_TYPE",
    "FWPM_CONDITION_VLAN_ID",
    "FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_ID",
    "FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_TYPE",
    "FWPM_CONDITION_VSWITCH_DESTINATION_VM_ID",
    "FWPM_CONDITION_VSWITCH_ID",
    "FWPM_CONDITION_VSWITCH_NETWORK_TYPE",
    "FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_ID",
    "FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_TYPE",
    "FWPM_CONDITION_VSWITCH_SOURCE_VM_ID",
    "FWPM_CONDITION_VSWITCH_TENANT_NETWORK_ID",
    "FWPM_CONNECTION0",
    "FWPM_CONNECTION_CALLBACK0",
    "FWPM_CONNECTION_ENUM_FLAG_QUERY_BYTES_TRANSFERRED",
    "FWPM_CONNECTION_ENUM_TEMPLATE0",
    "FWPM_CONNECTION_EVENT_ADD",
    "FWPM_CONNECTION_EVENT_DELETE",
    "FWPM_CONNECTION_EVENT_MAX",
    "FWPM_CONNECTION_EVENT_TYPE",
    "FWPM_CONNECTION_SUBSCRIPTION0",
    "FWPM_DISPLAY_DATA0",
    "FWPM_DYNAMIC_KEYWORD_CALLBACK0",
    "FWPM_ENGINE_COLLECT_NET_EVENTS",
    "FWPM_ENGINE_MONITOR_IPSEC_CONNECTIONS",
    "FWPM_ENGINE_NAME_CACHE",
    "FWPM_ENGINE_NET_EVENT_MATCH_ANY_KEYWORDS",
    "FWPM_ENGINE_OPTION",
    "FWPM_ENGINE_OPTION_MAX",
    "FWPM_ENGINE_OPTION_PACKET_BATCH_INBOUND",
    "FWPM_ENGINE_OPTION_PACKET_QUEUE_FORWARD",
    "FWPM_ENGINE_OPTION_PACKET_QUEUE_INBOUND",
    "FWPM_ENGINE_OPTION_PACKET_QUEUE_NONE",
    "FWPM_ENGINE_PACKET_QUEUING",
    "FWPM_ENGINE_TXN_WATCHDOG_TIMEOUT_IN_MSEC",
    "FWPM_FIELD0",
    "FWPM_FIELD_FLAGS",
    "FWPM_FIELD_IP_ADDRESS",
    "FWPM_FIELD_RAW_DATA",
    "FWPM_FIELD_TYPE",
    "FWPM_FIELD_TYPE_MAX",
    "FWPM_FILTER0",
    "FWPM_FILTER_CHANGE0",
    "FWPM_FILTER_CHANGE_CALLBACK0",
    "FWPM_FILTER_CONDITION0",
    "FWPM_FILTER_ENUM_TEMPLATE0",
    "FWPM_FILTER_FLAGS",
    "FWPM_FILTER_FLAG_BOOTTIME",
    "FWPM_FILTER_FLAG_CLEAR_ACTION_RIGHT",
    "FWPM_FILTER_FLAG_DISABLED",
    "FWPM_FILTER_FLAG_GAMEOS_ONLY",
    "FWPM_FILTER_FLAG_HAS_PROVIDER_CONTEXT",
    "FWPM_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT",
    "FWPM_FILTER_FLAG_INDEXED",
    "FWPM_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE",
    "FWPM_FILTER_FLAG_NONE",
    "FWPM_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED",
    "FWPM_FILTER_FLAG_PERSISTENT",
    "FWPM_FILTER_FLAG_RESERVED0",
    "FWPM_FILTER_FLAG_RESERVED1",
    "FWPM_FILTER_FLAG_SILENT_MODE",
    "FWPM_FILTER_FLAG_SYSTEMOS_ONLY",
    "FWPM_FILTER_SUBSCRIPTION0",
    "FWPM_GENERAL_CONTEXT",
    "FWPM_IPSEC_AUTHIP_MM_CONTEXT",
    "FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT",
    "FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT",
    "FWPM_IPSEC_DOSP_CONTEXT",
    "FWPM_IPSEC_IKEV2_MM_CONTEXT",
    "FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT",
    "FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT",
    "FWPM_IPSEC_IKE_MM_CONTEXT",
    "FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT",
    "FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT",
    "FWPM_IPSEC_KEYING_CONTEXT",
    "FWPM_KEYING_MODULE_AUTHIP",
    "FWPM_KEYING_MODULE_IKE",
    "FWPM_KEYING_MODULE_IKEV2",
    "FWPM_LAYER0",
    "FWPM_LAYER_ALE_AUTH_CONNECT_V4",
    "FWPM_LAYER_ALE_AUTH_CONNECT_V4_DISCARD",
    "FWPM_LAYER_ALE_AUTH_CONNECT_V6",
    "FWPM_LAYER_ALE_AUTH_CONNECT_V6_DISCARD",
    "FWPM_LAYER_ALE_AUTH_LISTEN_V4",
    "FWPM_LAYER_ALE_AUTH_LISTEN_V4_DISCARD",
    "FWPM_LAYER_ALE_AUTH_LISTEN_V6",
    "FWPM_LAYER_ALE_AUTH_LISTEN_V6_DISCARD",
    "FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4",
    "FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD",
    "FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6",
    "FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD",
    "FWPM_LAYER_ALE_BIND_REDIRECT_V4",
    "FWPM_LAYER_ALE_BIND_REDIRECT_V6",
    "FWPM_LAYER_ALE_CONNECT_REDIRECT_V4",
    "FWPM_LAYER_ALE_CONNECT_REDIRECT_V6",
    "FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V4",
    "FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V6",
    "FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4",
    "FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD",
    "FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6",
    "FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD",
    "FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4",
    "FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD",
    "FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6",
    "FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD",
    "FWPM_LAYER_ALE_RESOURCE_RELEASE_V4",
    "FWPM_LAYER_ALE_RESOURCE_RELEASE_V6",
    "FWPM_LAYER_DATAGRAM_DATA_V4",
    "FWPM_LAYER_DATAGRAM_DATA_V4_DISCARD",
    "FWPM_LAYER_DATAGRAM_DATA_V6",
    "FWPM_LAYER_DATAGRAM_DATA_V6_DISCARD",
    "FWPM_LAYER_EGRESS_VSWITCH_ETHERNET",
    "FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V4",
    "FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V6",
    "FWPM_LAYER_ENUM_TEMPLATE0",
    "FWPM_LAYER_FLAG_BUFFERED",
    "FWPM_LAYER_FLAG_BUILTIN",
    "FWPM_LAYER_FLAG_CLASSIFY_MOSTLY",
    "FWPM_LAYER_FLAG_KERNEL",
    "FWPM_LAYER_IKEEXT_V4",
    "FWPM_LAYER_IKEEXT_V6",
    "FWPM_LAYER_INBOUND_ICMP_ERROR_V4",
    "FWPM_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD",
    "FWPM_LAYER_INBOUND_ICMP_ERROR_V6",
    "FWPM_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD",
    "FWPM_LAYER_INBOUND_IPPACKET_V4",
    "FWPM_LAYER_INBOUND_IPPACKET_V4_DISCARD",
    "FWPM_LAYER_INBOUND_IPPACKET_V6",
    "FWPM_LAYER_INBOUND_IPPACKET_V6_DISCARD",
    "FWPM_LAYER_INBOUND_MAC_FRAME_ETHERNET",
    "FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE",
    "FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST",
    "FWPM_LAYER_INBOUND_RESERVED2",
    "FWPM_LAYER_INBOUND_TRANSPORT_FAST",
    "FWPM_LAYER_INBOUND_TRANSPORT_V4",
    "FWPM_LAYER_INBOUND_TRANSPORT_V4_DISCARD",
    "FWPM_LAYER_INBOUND_TRANSPORT_V6",
    "FWPM_LAYER_INBOUND_TRANSPORT_V6_DISCARD",
    "FWPM_LAYER_INGRESS_VSWITCH_ETHERNET",
    "FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V4",
    "FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V6",
    "FWPM_LAYER_IPFORWARD_V4",
    "FWPM_LAYER_IPFORWARD_V4_DISCARD",
    "FWPM_LAYER_IPFORWARD_V6",
    "FWPM_LAYER_IPFORWARD_V6_DISCARD",
    "FWPM_LAYER_IPSEC_KM_DEMUX_V4",
    "FWPM_LAYER_IPSEC_KM_DEMUX_V6",
    "FWPM_LAYER_IPSEC_V4",
    "FWPM_LAYER_IPSEC_V6",
    "FWPM_LAYER_KM_AUTHORIZATION",
    "FWPM_LAYER_NAME_RESOLUTION_CACHE_V4",
    "FWPM_LAYER_NAME_RESOLUTION_CACHE_V6",
    "FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4",
    "FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD",
    "FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6",
    "FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD",
    "FWPM_LAYER_OUTBOUND_IPPACKET_V4",
    "FWPM_LAYER_OUTBOUND_IPPACKET_V4_DISCARD",
    "FWPM_LAYER_OUTBOUND_IPPACKET_V6",
    "FWPM_LAYER_OUTBOUND_IPPACKET_V6_DISCARD",
    "FWPM_LAYER_OUTBOUND_MAC_FRAME_ETHERNET",
    "FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE",
    "FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST",
    "FWPM_LAYER_OUTBOUND_TRANSPORT_FAST",
    "FWPM_LAYER_OUTBOUND_TRANSPORT_V4",
    "FWPM_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD",
    "FWPM_LAYER_OUTBOUND_TRANSPORT_V6",
    "FWPM_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD",
    "FWPM_LAYER_RPC_EPMAP",
    "FWPM_LAYER_RPC_EP_ADD",
    "FWPM_LAYER_RPC_PROXY_CONN",
    "FWPM_LAYER_RPC_PROXY_IF",
    "FWPM_LAYER_RPC_UM",
    "FWPM_LAYER_STATISTICS0",
    "FWPM_LAYER_STREAM_PACKET_V4",
    "FWPM_LAYER_STREAM_PACKET_V6",
    "FWPM_LAYER_STREAM_V4",
    "FWPM_LAYER_STREAM_V4_DISCARD",
    "FWPM_LAYER_STREAM_V6",
    "FWPM_LAYER_STREAM_V6_DISCARD",
    "FWPM_NET_EVENT0",
    "FWPM_NET_EVENT1",
    "FWPM_NET_EVENT2",
    "FWPM_NET_EVENT3",
    "FWPM_NET_EVENT4",
    "FWPM_NET_EVENT5",
    "FWPM_NET_EVENT_CALLBACK0",
    "FWPM_NET_EVENT_CALLBACK1",
    "FWPM_NET_EVENT_CALLBACK2",
    "FWPM_NET_EVENT_CALLBACK3",
    "FWPM_NET_EVENT_CALLBACK4",
    "FWPM_NET_EVENT_CAPABILITY_ALLOW0",
    "FWPM_NET_EVENT_CAPABILITY_DROP0",
    "FWPM_NET_EVENT_CLASSIFY_ALLOW0",
    "FWPM_NET_EVENT_CLASSIFY_DROP0",
    "FWPM_NET_EVENT_CLASSIFY_DROP1",
    "FWPM_NET_EVENT_CLASSIFY_DROP2",
    "FWPM_NET_EVENT_CLASSIFY_DROP_MAC0",
    "FWPM_NET_EVENT_ENUM_TEMPLATE0",
    "FWPM_NET_EVENT_FLAG_APP_ID_SET",
    "FWPM_NET_EVENT_FLAG_EFFECTIVE_NAME_SET",
    "FWPM_NET_EVENT_FLAG_ENTERPRISE_ID_SET",
    "FWPM_NET_EVENT_FLAG_IP_PROTOCOL_SET",
    "FWPM_NET_EVENT_FLAG_IP_VERSION_SET",
    "FWPM_NET_EVENT_FLAG_LOCAL_ADDR_SET",
    "FWPM_NET_EVENT_FLAG_LOCAL_PORT_SET",
    "FWPM_NET_EVENT_FLAG_PACKAGE_ID_SET",
    "FWPM_NET_EVENT_FLAG_POLICY_FLAGS_SET",
    "FWPM_NET_EVENT_FLAG_REAUTH_REASON_SET",
    "FWPM_NET_EVENT_FLAG_REMOTE_ADDR_SET",
    "FWPM_NET_EVENT_FLAG_REMOTE_PORT_SET",
    "FWPM_NET_EVENT_FLAG_SCOPE_ID_SET",
    "FWPM_NET_EVENT_FLAG_USER_ID_SET",
    "FWPM_NET_EVENT_HEADER0",
    "FWPM_NET_EVENT_HEADER1",
    "FWPM_NET_EVENT_HEADER2",
    "FWPM_NET_EVENT_HEADER3",
    "FWPM_NET_EVENT_IKEEXT_EM_FAILURE0",
    "FWPM_NET_EVENT_IKEEXT_EM_FAILURE1",
    "FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_BENIGN",
    "FWPM_NET_EVENT_IKEEXT_EM_FAILURE_FLAG_MULTIPLE",
    "FWPM_NET_EVENT_IKEEXT_MM_FAILURE0",
    "FWPM_NET_EVENT_IKEEXT_MM_FAILURE1",
    "FWPM_NET_EVENT_IKEEXT_MM_FAILURE2",
    "FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_BENIGN",
    "FWPM_NET_EVENT_IKEEXT_MM_FAILURE_FLAG_MULTIPLE",
    "FWPM_NET_EVENT_IKEEXT_QM_FAILURE0",
    "FWPM_NET_EVENT_IKEEXT_QM_FAILURE1",
    "FWPM_NET_EVENT_IPSEC_DOSP_DROP0",
    "FWPM_NET_EVENT_IPSEC_KERNEL_DROP0",
    "FWPM_NET_EVENT_KEYWORD_CAPABILITY_ALLOW",
    "FWPM_NET_EVENT_KEYWORD_CAPABILITY_DROP",
    "FWPM_NET_EVENT_KEYWORD_CLASSIFY_ALLOW",
    "FWPM_NET_EVENT_KEYWORD_INBOUND_BCAST",
    "FWPM_NET_EVENT_KEYWORD_INBOUND_MCAST",
    "FWPM_NET_EVENT_KEYWORD_PORT_SCANNING_DROP",
    "FWPM_NET_EVENT_LPM_PACKET_ARRIVAL0",
    "FWPM_NET_EVENT_SUBSCRIPTION0",
    "FWPM_NET_EVENT_TYPE",
    "FWPM_NET_EVENT_TYPE_CAPABILITY_ALLOW",
    "FWPM_NET_EVENT_TYPE_CAPABILITY_DROP",
    "FWPM_NET_EVENT_TYPE_CLASSIFY_ALLOW",
    "FWPM_NET_EVENT_TYPE_CLASSIFY_DROP",
    "FWPM_NET_EVENT_TYPE_CLASSIFY_DROP_MAC",
    "FWPM_NET_EVENT_TYPE_IKEEXT_EM_FAILURE",
    "FWPM_NET_EVENT_TYPE_IKEEXT_MM_FAILURE",
    "FWPM_NET_EVENT_TYPE_IKEEXT_QM_FAILURE",
    "FWPM_NET_EVENT_TYPE_IPSEC_DOSP_DROP",
    "FWPM_NET_EVENT_TYPE_IPSEC_KERNEL_DROP",
    "FWPM_NET_EVENT_TYPE_LPM_PACKET_ARRIVAL",
    "FWPM_NET_EVENT_TYPE_MAX",
    "FWPM_PROVIDER0",
    "FWPM_PROVIDER_CHANGE0",
    "FWPM_PROVIDER_CHANGE_CALLBACK0",
    "FWPM_PROVIDER_CONTEXT0",
    "FWPM_PROVIDER_CONTEXT1",
    "FWPM_PROVIDER_CONTEXT2",
    "FWPM_PROVIDER_CONTEXT3",
    "FWPM_PROVIDER_CONTEXT_CHANGE0",
    "FWPM_PROVIDER_CONTEXT_CHANGE_CALLBACK0",
    "FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0",
    "FWPM_PROVIDER_CONTEXT_FLAG_DOWNLEVEL",
    "FWPM_PROVIDER_CONTEXT_FLAG_PERSISTENT",
    "FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_AUTHIP",
    "FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_IPSEC",
    "FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0",
    "FWPM_PROVIDER_CONTEXT_TYPE",
    "FWPM_PROVIDER_CONTEXT_TYPE_MAX",
    "FWPM_PROVIDER_ENUM_TEMPLATE0",
    "FWPM_PROVIDER_FLAG_DISABLED",
    "FWPM_PROVIDER_FLAG_PERSISTENT",
    "FWPM_PROVIDER_IKEEXT",
    "FWPM_PROVIDER_IPSEC_DOSP_CONFIG",
    "FWPM_PROVIDER_MPSSVC_EDP",
    "FWPM_PROVIDER_MPSSVC_TENANT_RESTRICTIONS",
    "FWPM_PROVIDER_MPSSVC_WF",
    "FWPM_PROVIDER_MPSSVC_WSH",
    "FWPM_PROVIDER_SUBSCRIPTION0",
    "FWPM_PROVIDER_TCP_CHIMNEY_OFFLOAD",
    "FWPM_PROVIDER_TCP_TEMPLATES",
    "FWPM_SERVICE_RUNNING",
    "FWPM_SERVICE_START_PENDING",
    "FWPM_SERVICE_STATE",
    "FWPM_SERVICE_STATE_MAX",
    "FWPM_SERVICE_STOPPED",
    "FWPM_SERVICE_STOP_PENDING",
    "FWPM_SESSION0",
    "FWPM_SESSION_ENUM_TEMPLATE0",
    "FWPM_SESSION_FLAG_DYNAMIC",
    "FWPM_SESSION_FLAG_RESERVED",
    "FWPM_STATISTICS0",
    "FWPM_SUBLAYER0",
    "FWPM_SUBLAYER_CHANGE0",
    "FWPM_SUBLAYER_CHANGE_CALLBACK0",
    "FWPM_SUBLAYER_ENUM_TEMPLATE0",
    "FWPM_SUBLAYER_FLAG_PERSISTENT",
    "FWPM_SUBLAYER_INSPECTION",
    "FWPM_SUBLAYER_IPSEC_DOSP",
    "FWPM_SUBLAYER_IPSEC_FORWARD_OUTBOUND_TUNNEL",
    "FWPM_SUBLAYER_IPSEC_SECURITY_REALM",
    "FWPM_SUBLAYER_IPSEC_TUNNEL",
    "FWPM_SUBLAYER_LIPS",
    "FWPM_SUBLAYER_MPSSVC_EDP",
    "FWPM_SUBLAYER_MPSSVC_QUARANTINE",
    "FWPM_SUBLAYER_MPSSVC_TENANT_RESTRICTIONS",
    "FWPM_SUBLAYER_MPSSVC_WF",
    "FWPM_SUBLAYER_MPSSVC_WSH",
    "FWPM_SUBLAYER_RPC_AUDIT",
    "FWPM_SUBLAYER_SECURE_SOCKET",
    "FWPM_SUBLAYER_SUBSCRIPTION0",
    "FWPM_SUBLAYER_TCP_CHIMNEY_OFFLOAD",
    "FWPM_SUBLAYER_TCP_TEMPLATES",
    "FWPM_SUBLAYER_TEREDO",
    "FWPM_SUBLAYER_UNIVERSAL",
    "FWPM_SUBSCRIPTION_FLAGS",
    "FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_ADD",
    "FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_DELETE",
    "FWPM_SYSTEM_PORTS0",
    "FWPM_SYSTEM_PORTS_BY_TYPE0",
    "FWPM_SYSTEM_PORTS_CALLBACK0",
    "FWPM_SYSTEM_PORT_IPHTTPS_IN",
    "FWPM_SYSTEM_PORT_IPHTTPS_OUT",
    "FWPM_SYSTEM_PORT_RPC_EPMAP",
    "FWPM_SYSTEM_PORT_TEREDO",
    "FWPM_SYSTEM_PORT_TYPE",
    "FWPM_SYSTEM_PORT_TYPE_MAX",
    "FWPM_TUNNEL_FLAG_ENABLE_VIRTUAL_IF_TUNNELING",
    "FWPM_TUNNEL_FLAG_POINT_TO_POINT",
    "FWPM_TUNNEL_FLAG_RESERVED0",
    "FWPM_TXN_READ_ONLY",
    "FWPM_VSWITCH_EVENT0",
    "FWPM_VSWITCH_EVENT_CALLBACK0",
    "FWPM_VSWITCH_EVENT_DISABLED_FOR_INSPECTION",
    "FWPM_VSWITCH_EVENT_ENABLED_FOR_INSPECTION",
    "FWPM_VSWITCH_EVENT_FILTER_ADD_TO_INCOMPLETE_LAYER",
    "FWPM_VSWITCH_EVENT_FILTER_ENGINE_NOT_IN_REQUIRED_POSITION",
    "FWPM_VSWITCH_EVENT_FILTER_ENGINE_REORDER",
    "FWPM_VSWITCH_EVENT_MAX",
    "FWPM_VSWITCH_EVENT_SUBSCRIPTION0",
    "FWPM_VSWITCH_EVENT_TYPE",
    "FWPM_WEIGHT_RANGE_IKE_EXEMPTIONS",
    "FWPM_WEIGHT_RANGE_IPSEC",
    "FWPS_ALE_ENDPOINT_FLAG_IPSEC_SECURED",
    "FWPS_CLASSIFY_OUT_FLAG_ABSORB",
    "FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_CHECK",
    "FWPS_CLASSIFY_OUT_FLAG_ALE_FAST_CACHE_POSSIBLE",
    "FWPS_CLASSIFY_OUT_FLAG_BUFFER_LIMIT_REACHED",
    "FWPS_CLASSIFY_OUT_FLAG_NO_MORE_DATA",
    "FWPS_FILTER_FLAG_CLEAR_ACTION_RIGHT",
    "FWPS_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT",
    "FWPS_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE",
    "FWPS_FILTER_FLAG_OR_CONDITIONS",
    "FWPS_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED",
    "FWPS_FILTER_FLAG_RESERVED0",
    "FWPS_FILTER_FLAG_RESERVED1",
    "FWPS_FILTER_FLAG_SILENT_MODE",
    "FWPS_INCOMING_FLAG_ABSORB",
    "FWPS_INCOMING_FLAG_CACHE_SAFE",
    "FWPS_INCOMING_FLAG_CONNECTION_FAILING_INDICATION",
    "FWPS_INCOMING_FLAG_ENFORCE_QUERY",
    "FWPS_INCOMING_FLAG_IS_LOCAL_ONLY_FLOW",
    "FWPS_INCOMING_FLAG_IS_LOOSE_SOURCE_FLOW",
    "FWPS_INCOMING_FLAG_MID_STREAM_INSPECTION",
    "FWPS_INCOMING_FLAG_RECLASSIFY",
    "FWPS_INCOMING_FLAG_RESERVED0",
    "FWPS_L2_INCOMING_FLAG_IS_RAW_IPV4_FRAMING",
    "FWPS_L2_INCOMING_FLAG_IS_RAW_IPV6_FRAMING",
    "FWPS_L2_INCOMING_FLAG_RECLASSIFY_MULTI_DESTINATION",
    "FWPS_L2_METADATA_FIELD_ETHERNET_MAC_HEADER_SIZE",
    "FWPS_L2_METADATA_FIELD_RESERVED",
    "FWPS_L2_METADATA_FIELD_VSWITCH_DESTINATION_PORT_ID",
    "FWPS_L2_METADATA_FIELD_VSWITCH_PACKET_CONTEXT",
    "FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_NIC_INDEX",
    "FWPS_L2_METADATA_FIELD_VSWITCH_SOURCE_PORT_ID",
    "FWPS_L2_METADATA_FIELD_WIFI_OPERATION_MODE",
    "FWPS_METADATA_FIELD_ALE_CLASSIFY_REQUIRED",
    "FWPS_METADATA_FIELD_COMPARTMENT_ID",
    "FWPS_METADATA_FIELD_COMPLETION_HANDLE",
    "FWPS_METADATA_FIELD_DESTINATION_INTERFACE_INDEX",
    "FWPS_METADATA_FIELD_DESTINATION_PREFIX",
    "FWPS_METADATA_FIELD_DISCARD_REASON",
    "FWPS_METADATA_FIELD_ETHER_FRAME_LENGTH",
    "FWPS_METADATA_FIELD_FLOW_HANDLE",
    "FWPS_METADATA_FIELD_FORWARD_LAYER_INBOUND_PASS_THRU",
    "FWPS_METADATA_FIELD_FORWARD_LAYER_OUTBOUND_PASS_THRU",
    "FWPS_METADATA_FIELD_FRAGMENT_DATA",
    "FWPS_METADATA_FIELD_ICMP_ID_AND_SEQUENCE",
    "FWPS_METADATA_FIELD_IP_HEADER_SIZE",
    "FWPS_METADATA_FIELD_LOCAL_REDIRECT_TARGET_PID",
    "FWPS_METADATA_FIELD_ORIGINAL_DESTINATION",
    "FWPS_METADATA_FIELD_PACKET_DIRECTION",
    "FWPS_METADATA_FIELD_PACKET_SYSTEM_CRITICAL",
    "FWPS_METADATA_FIELD_PARENT_ENDPOINT_HANDLE",
    "FWPS_METADATA_FIELD_PATH_MTU",
    "FWPS_METADATA_FIELD_PROCESS_ID",
    "FWPS_METADATA_FIELD_PROCESS_PATH",
    "FWPS_METADATA_FIELD_REDIRECT_RECORD_HANDLE",
    "FWPS_METADATA_FIELD_REMOTE_SCOPE_ID",
    "FWPS_METADATA_FIELD_RESERVED",
    "FWPS_METADATA_FIELD_SOURCE_INTERFACE_INDEX",
    "FWPS_METADATA_FIELD_SUB_PROCESS_TAG",
    "FWPS_METADATA_FIELD_SYSTEM_FLAGS",
    "FWPS_METADATA_FIELD_TOKEN",
    "FWPS_METADATA_FIELD_TRANSPORT_CONTROL_DATA",
    "FWPS_METADATA_FIELD_TRANSPORT_ENDPOINT_HANDLE",
    "FWPS_METADATA_FIELD_TRANSPORT_HEADER_INCLUDE_HEADER",
    "FWPS_METADATA_FIELD_TRANSPORT_HEADER_SIZE",
    "FWPS_RIGHT_ACTION_WRITE",
    "FWP_ACTION_FLAG_CALLOUT",
    "FWP_ACTION_FLAG_NON_TERMINATING",
    "FWP_ACTION_FLAG_TERMINATING",
    "FWP_ACTION_NONE",
    "FWP_ACTION_NONE_NO_MATCH",
    "FWP_ACTRL_MATCH_FILTER",
    "FWP_AF",
    "FWP_AF_ETHER",
    "FWP_AF_INET",
    "FWP_AF_INET6",
    "FWP_AF_NONE",
    "FWP_BYTEMAP_ARRAY64_SIZE",
    "FWP_BYTE_ARRAY16",
    "FWP_BYTE_ARRAY16_TYPE",
    "FWP_BYTE_ARRAY6",
    "FWP_BYTE_ARRAY6_SIZE",
    "FWP_BYTE_ARRAY6_TYPE",
    "FWP_BYTE_BLOB",
    "FWP_BYTE_BLOB_TYPE",
    "FWP_CALLOUT_FLAG_ALLOW_L2_BATCH_CLASSIFY",
    "FWP_CALLOUT_FLAG_ALLOW_MID_STREAM_INSPECTION",
    "FWP_CALLOUT_FLAG_ALLOW_OFFLOAD",
    "FWP_CALLOUT_FLAG_ALLOW_RECLASSIFY",
    "FWP_CALLOUT_FLAG_ALLOW_RSC",
    "FWP_CALLOUT_FLAG_ALLOW_URO",
    "FWP_CALLOUT_FLAG_ALLOW_USO",
    "FWP_CALLOUT_FLAG_CONDITIONAL_ON_FLOW",
    "FWP_CALLOUT_FLAG_ENABLE_COMMIT_ADD_NOTIFY",
    "FWP_CALLOUT_FLAG_RESERVED1",
    "FWP_CALLOUT_FLAG_RESERVED2",
    "FWP_CLASSIFY_OPTION_LOCAL_ONLY_MAPPING",
    "FWP_CLASSIFY_OPTION_LOOSE_SOURCE_MAPPING",
    "FWP_CLASSIFY_OPTION_MAX",
    "FWP_CLASSIFY_OPTION_MCAST_BCAST_LIFETIME",
    "FWP_CLASSIFY_OPTION_MULTICAST_STATE",
    "FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_MM_POLICY_KEY",
    "FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_QM_POLICY_KEY",
    "FWP_CLASSIFY_OPTION_SECURE_SOCKET_SECURITY_FLAGS",
    "FWP_CLASSIFY_OPTION_TYPE",
    "FWP_CLASSIFY_OPTION_UNICAST_LIFETIME",
    "FWP_CONDITION_FLAG_IS_APPCONTAINER_LOOPBACK",
    "FWP_CONDITION_FLAG_IS_AUTH_FW",
    "FWP_CONDITION_FLAG_IS_CONNECTION_REDIRECTED",
    "FWP_CONDITION_FLAG_IS_FRAGMENT",
    "FWP_CONDITION_FLAG_IS_FRAGMENT_GROUP",
    "FWP_CONDITION_FLAG_IS_HONORING_POLICY_AUTHORIZE",
    "FWP_CONDITION_FLAG_IS_IMPLICIT_BIND",
    "FWP_CONDITION_FLAG_IS_INBOUND_PASS_THRU",
    "FWP_CONDITION_FLAG_IS_IPSEC_NATT_RECLASSIFY",
    "FWP_CONDITION_FLAG_IS_IPSEC_SECURED",
    "FWP_CONDITION_FLAG_IS_LOOPBACK",
    "FWP_CONDITION_FLAG_IS_NAME_APP_SPECIFIED",
    "FWP_CONDITION_FLAG_IS_NON_APPCONTAINER_LOOPBACK",
    "FWP_CONDITION_FLAG_IS_OUTBOUND_PASS_THRU",
    "FWP_CONDITION_FLAG_IS_PROMISCUOUS",
    "FWP_CONDITION_FLAG_IS_PROXY_CONNECTION",
    "FWP_CONDITION_FLAG_IS_RAW_ENDPOINT",
    "FWP_CONDITION_FLAG_IS_REASSEMBLED",
    "FWP_CONDITION_FLAG_IS_REAUTHORIZE",
    "FWP_CONDITION_FLAG_IS_RECLASSIFY",
    "FWP_CONDITION_FLAG_IS_RESERVED",
    "FWP_CONDITION_FLAG_IS_WILDCARD_BIND",
    "FWP_CONDITION_FLAG_REQUIRES_ALE_CLASSIFY",
    "FWP_CONDITION_L2_IF_CONNECTOR_PRESENT",
    "FWP_CONDITION_L2_IS_IP_FRAGMENT_GROUP",
    "FWP_CONDITION_L2_IS_MALFORMED_PACKET",
    "FWP_CONDITION_L2_IS_MOBILE_BROADBAND",
    "FWP_CONDITION_L2_IS_NATIVE_ETHERNET",
    "FWP_CONDITION_L2_IS_VM2VM",
    "FWP_CONDITION_L2_IS_WIFI",
    "FWP_CONDITION_L2_IS_WIFI_DIRECT_DATA",
    "FWP_CONDITION_REAUTHORIZE_REASON_CHECK_OFFLOAD",
    "FWP_CONDITION_REAUTHORIZE_REASON_CLASSIFY_COMPLETION",
    "FWP_CONDITION_REAUTHORIZE_REASON_EDP_POLICY_CHANGED",
    "FWP_CONDITION_REAUTHORIZE_REASON_IPSEC_PROPERTIES_CHANGED",
    "FWP_CONDITION_REAUTHORIZE_REASON_MID_STREAM_INSPECTION",
    "FWP_CONDITION_REAUTHORIZE_REASON_NEW_ARRIVAL_INTERFACE",
    "FWP_CONDITION_REAUTHORIZE_REASON_NEW_INBOUND_MCAST_BCAST_PACKET",
    "FWP_CONDITION_REAUTHORIZE_REASON_NEW_NEXTHOP_INTERFACE",
    "FWP_CONDITION_REAUTHORIZE_REASON_POLICY_CHANGE",
    "FWP_CONDITION_REAUTHORIZE_REASON_PROFILE_CROSSING",
    "FWP_CONDITION_REAUTHORIZE_REASON_PROXY_HANDLE_CHANGED",
    "FWP_CONDITION_REAUTHORIZE_REASON_SOCKET_PROPERTY_CHANGED",
    "FWP_CONDITION_SOCKET_PROPERTY_FLAG_ALLOW_EDGE_TRAFFIC",
    "FWP_CONDITION_SOCKET_PROPERTY_FLAG_DENY_EDGE_TRAFFIC",
    "FWP_CONDITION_SOCKET_PROPERTY_FLAG_IS_SYSTEM_PORT_RPC",
    "FWP_CONDITION_VALUE0",
    "FWP_DATA_TYPE",
    "FWP_DATA_TYPE_MAX",
    "FWP_DIRECTION",
    "FWP_DIRECTION_INBOUND",
    "FWP_DIRECTION_MAX",
    "FWP_DIRECTION_OUTBOUND",
    "FWP_DOUBLE",
    "FWP_EMPTY",
    "FWP_ETHER_ENCAP_METHOD",
    "FWP_ETHER_ENCAP_METHOD_ETHER_V2",
    "FWP_ETHER_ENCAP_METHOD_SNAP",
    "FWP_ETHER_ENCAP_METHOD_SNAP_W_OUI_ZERO",
    "FWP_FILTER_ENUM_FLAG_BEST_TERMINATING_MATCH",
    "FWP_FILTER_ENUM_FLAG_BOOTTIME_ONLY",
    "FWP_FILTER_ENUM_FLAG_INCLUDE_BOOTTIME",
    "FWP_FILTER_ENUM_FLAG_INCLUDE_DISABLED",
    "FWP_FILTER_ENUM_FLAG_RESERVED1",
    "FWP_FILTER_ENUM_FLAG_SORTED",
    "FWP_FILTER_ENUM_FULLY_CONTAINED",
    "FWP_FILTER_ENUM_OVERLAPPING",
    "FWP_FILTER_ENUM_TYPE",
    "FWP_FILTER_ENUM_TYPE_MAX",
    "FWP_FLOAT",
    "FWP_INT16",
    "FWP_INT32",
    "FWP_INT64",
    "FWP_INT8",
    "FWP_IP_VERSION",
    "FWP_IP_VERSION_MAX",
    "FWP_IP_VERSION_NONE",
    "FWP_IP_VERSION_V4",
    "FWP_IP_VERSION_V6",
    "FWP_MATCH_EQUAL",
    "FWP_MATCH_EQUAL_CASE_INSENSITIVE",
    "FWP_MATCH_FLAGS_ALL_SET",
    "FWP_MATCH_FLAGS_ANY_SET",
    "FWP_MATCH_FLAGS_NONE_SET",
    "FWP_MATCH_GREATER",
    "FWP_MATCH_GREATER_OR_EQUAL",
    "FWP_MATCH_LESS",
    "FWP_MATCH_LESS_OR_EQUAL",
    "FWP_MATCH_NOT_EQUAL",
    "FWP_MATCH_NOT_PREFIX",
    "FWP_MATCH_PREFIX",
    "FWP_MATCH_RANGE",
    "FWP_MATCH_TYPE",
    "FWP_MATCH_TYPE_MAX",
    "FWP_OPTION_VALUE_ALLOW_GLOBAL_MULTICAST_STATE",
    "FWP_OPTION_VALUE_ALLOW_MULTICAST_STATE",
    "FWP_OPTION_VALUE_DENY_MULTICAST_STATE",
    "FWP_OPTION_VALUE_DISABLE_LOCAL_ONLY_MAPPING",
    "FWP_OPTION_VALUE_DISABLE_LOOSE_SOURCE",
    "FWP_OPTION_VALUE_ENABLE_LOCAL_ONLY_MAPPING",
    "FWP_OPTION_VALUE_ENABLE_LOOSE_SOURCE",
    "FWP_RANGE0",
    "FWP_RANGE_TYPE",
    "FWP_SECURITY_DESCRIPTOR_TYPE",
    "FWP_SID",
    "FWP_SINGLE_DATA_TYPE_MAX",
    "FWP_TOKEN_ACCESS_INFORMATION_TYPE",
    "FWP_TOKEN_INFORMATION",
    "FWP_TOKEN_INFORMATION_TYPE",
    "FWP_UINT16",
    "FWP_UINT32",
    "FWP_UINT64",
    "FWP_UINT8",
    "FWP_UNICODE_STRING_TYPE",
    "FWP_V4_ADDR_AND_MASK",
    "FWP_V4_ADDR_MASK",
    "FWP_V6_ADDR_AND_MASK",
    "FWP_V6_ADDR_MASK",
    "FWP_V6_ADDR_SIZE",
    "FWP_VALUE0",
    "FWP_VSWITCH_NETWORK_TYPE",
    "FWP_VSWITCH_NETWORK_TYPE_EXTERNAL",
    "FWP_VSWITCH_NETWORK_TYPE_INTERNAL",
    "FWP_VSWITCH_NETWORK_TYPE_PRIVATE",
    "FWP_VSWITCH_NETWORK_TYPE_UNKNOWN",
    "FwpmCalloutAdd0",
    "FwpmCalloutCreateEnumHandle0",
    "FwpmCalloutDeleteById0",
    "FwpmCalloutDeleteByKey0",
    "FwpmCalloutDestroyEnumHandle0",
    "FwpmCalloutEnum0",
    "FwpmCalloutGetById0",
    "FwpmCalloutGetByKey0",
    "FwpmCalloutGetSecurityInfoByKey0",
    "FwpmCalloutSetSecurityInfoByKey0",
    "FwpmCalloutSubscribeChanges0",
    "FwpmCalloutSubscriptionsGet0",
    "FwpmCalloutUnsubscribeChanges0",
    "FwpmConnectionCreateEnumHandle0",
    "FwpmConnectionDestroyEnumHandle0",
    "FwpmConnectionEnum0",
    "FwpmConnectionGetById0",
    "FwpmConnectionGetSecurityInfo0",
    "FwpmConnectionSetSecurityInfo0",
    "FwpmConnectionSubscribe0",
    "FwpmConnectionUnsubscribe0",
    "FwpmDynamicKeywordSubscribe0",
    "FwpmDynamicKeywordUnsubscribe0",
    "FwpmEngineClose0",
    "FwpmEngineGetOption0",
    "FwpmEngineGetSecurityInfo0",
    "FwpmEngineOpen0",
    "FwpmEngineSetOption0",
    "FwpmEngineSetSecurityInfo0",
    "FwpmFilterAdd0",
    "FwpmFilterCreateEnumHandle0",
    "FwpmFilterDeleteById0",
    "FwpmFilterDeleteByKey0",
    "FwpmFilterDestroyEnumHandle0",
    "FwpmFilterEnum0",
    "FwpmFilterGetById0",
    "FwpmFilterGetByKey0",
    "FwpmFilterGetSecurityInfoByKey0",
    "FwpmFilterSetSecurityInfoByKey0",
    "FwpmFilterSubscribeChanges0",
    "FwpmFilterSubscriptionsGet0",
    "FwpmFilterUnsubscribeChanges0",
    "FwpmFreeMemory0",
    "FwpmGetAppIdFromFileName0",
    "FwpmIPsecTunnelAdd0",
    "FwpmIPsecTunnelAdd1",
    "FwpmIPsecTunnelAdd2",
    "FwpmIPsecTunnelAdd3",
    "FwpmIPsecTunnelDeleteByKey0",
    "FwpmLayerCreateEnumHandle0",
    "FwpmLayerDestroyEnumHandle0",
    "FwpmLayerEnum0",
    "FwpmLayerGetById0",
    "FwpmLayerGetByKey0",
    "FwpmLayerGetSecurityInfoByKey0",
    "FwpmLayerSetSecurityInfoByKey0",
    "FwpmNetEventCreateEnumHandle0",
    "FwpmNetEventDestroyEnumHandle0",
    "FwpmNetEventEnum0",
    "FwpmNetEventEnum1",
    "FwpmNetEventEnum2",
    "FwpmNetEventEnum3",
    "FwpmNetEventEnum4",
    "FwpmNetEventEnum5",
    "FwpmNetEventSubscribe0",
    "FwpmNetEventSubscribe1",
    "FwpmNetEventSubscribe2",
    "FwpmNetEventSubscribe3",
    "FwpmNetEventSubscribe4",
    "FwpmNetEventSubscriptionsGet0",
    "FwpmNetEventUnsubscribe0",
    "FwpmNetEventsGetSecurityInfo0",
    "FwpmNetEventsSetSecurityInfo0",
    "FwpmProviderAdd0",
    "FwpmProviderContextAdd0",
    "FwpmProviderContextAdd1",
    "FwpmProviderContextAdd2",
    "FwpmProviderContextAdd3",
    "FwpmProviderContextCreateEnumHandle0",
    "FwpmProviderContextDeleteById0",
    "FwpmProviderContextDeleteByKey0",
    "FwpmProviderContextDestroyEnumHandle0",
    "FwpmProviderContextEnum0",
    "FwpmProviderContextEnum1",
    "FwpmProviderContextEnum2",
    "FwpmProviderContextEnum3",
    "FwpmProviderContextGetById0",
    "FwpmProviderContextGetById1",
    "FwpmProviderContextGetById2",
    "FwpmProviderContextGetById3",
    "FwpmProviderContextGetByKey0",
    "FwpmProviderContextGetByKey1",
    "FwpmProviderContextGetByKey2",
    "FwpmProviderContextGetByKey3",
    "FwpmProviderContextGetSecurityInfoByKey0",
    "FwpmProviderContextSetSecurityInfoByKey0",
    "FwpmProviderContextSubscribeChanges0",
    "FwpmProviderContextSubscriptionsGet0",
    "FwpmProviderContextUnsubscribeChanges0",
    "FwpmProviderCreateEnumHandle0",
    "FwpmProviderDeleteByKey0",
    "FwpmProviderDestroyEnumHandle0",
    "FwpmProviderEnum0",
    "FwpmProviderGetByKey0",
    "FwpmProviderGetSecurityInfoByKey0",
    "FwpmProviderSetSecurityInfoByKey0",
    "FwpmProviderSubscribeChanges0",
    "FwpmProviderSubscriptionsGet0",
    "FwpmProviderUnsubscribeChanges0",
    "FwpmSessionCreateEnumHandle0",
    "FwpmSessionDestroyEnumHandle0",
    "FwpmSessionEnum0",
    "FwpmSubLayerAdd0",
    "FwpmSubLayerCreateEnumHandle0",
    "FwpmSubLayerDeleteByKey0",
    "FwpmSubLayerDestroyEnumHandle0",
    "FwpmSubLayerEnum0",
    "FwpmSubLayerGetByKey0",
    "FwpmSubLayerGetSecurityInfoByKey0",
    "FwpmSubLayerSetSecurityInfoByKey0",
    "FwpmSubLayerSubscribeChanges0",
    "FwpmSubLayerSubscriptionsGet0",
    "FwpmSubLayerUnsubscribeChanges0",
    "FwpmSystemPortsGet0",
    "FwpmSystemPortsSubscribe0",
    "FwpmSystemPortsUnsubscribe0",
    "FwpmTransactionAbort0",
    "FwpmTransactionBegin0",
    "FwpmTransactionCommit0",
    "FwpmvSwitchEventSubscribe0",
    "FwpmvSwitchEventUnsubscribe0",
    "FwpmvSwitchEventsGetSecurityInfo0",
    "FwpmvSwitchEventsSetSecurityInfo0",
    "IKEEXT_ANONYMOUS",
    "IKEEXT_AUTHENTICATION_IMPERSONATION_TYPE",
    "IKEEXT_AUTHENTICATION_METHOD0",
    "IKEEXT_AUTHENTICATION_METHOD1",
    "IKEEXT_AUTHENTICATION_METHOD2",
    "IKEEXT_AUTHENTICATION_METHOD_TYPE",
    "IKEEXT_AUTHENTICATION_METHOD_TYPE_MAX",
    "IKEEXT_CERTIFICATE",
    "IKEEXT_CERTIFICATE_AUTHENTICATION0",
    "IKEEXT_CERTIFICATE_AUTHENTICATION1",
    "IKEEXT_CERTIFICATE_AUTHENTICATION2",
    "IKEEXT_CERTIFICATE_CREDENTIAL0",
    "IKEEXT_CERTIFICATE_CREDENTIAL1",
    "IKEEXT_CERTIFICATE_CRITERIA0",
    "IKEEXT_CERTIFICATE_ECDSA_P256",
    "IKEEXT_CERTIFICATE_ECDSA_P384",
    "IKEEXT_CERT_AUTH",
    "IKEEXT_CERT_AUTH_ALLOW_HTTP_CERT_LOOKUP",
    "IKEEXT_CERT_AUTH_DISABLE_SSL_CERT_VALIDATION",
    "IKEEXT_CERT_AUTH_ENABLE_CRL_CHECK_STRONG",
    "IKEEXT_CERT_AUTH_FLAG_DISABLE_CRL_CHECK",
    "IKEEXT_CERT_AUTH_FLAG_DISABLE_REQUEST_PAYLOAD",
    "IKEEXT_CERT_AUTH_FLAG_SSL_ONE_WAY",
    "IKEEXT_CERT_AUTH_URL_CONTAINS_BUNDLE",
    "IKEEXT_CERT_CONFIG_ENTERPRISE_STORE",
    "IKEEXT_CERT_CONFIG_EXPLICIT_TRUST_LIST",
    "IKEEXT_CERT_CONFIG_TRUSTED_ROOT_STORE",
    "IKEEXT_CERT_CONFIG_TYPE",
    "IKEEXT_CERT_CONFIG_TYPE_MAX",
    "IKEEXT_CERT_CONFIG_UNSPECIFIED",
    "IKEEXT_CERT_CREDENTIAL_FLAG_NAP_CERT",
    "IKEEXT_CERT_CRITERIA_CN",
    "IKEEXT_CERT_CRITERIA_DC",
    "IKEEXT_CERT_CRITERIA_DNS",
    "IKEEXT_CERT_CRITERIA_NAME_TYPE",
    "IKEEXT_CERT_CRITERIA_NAME_TYPE_MAX",
    "IKEEXT_CERT_CRITERIA_O",
    "IKEEXT_CERT_CRITERIA_OU",
    "IKEEXT_CERT_CRITERIA_RFC822",
    "IKEEXT_CERT_CRITERIA_UPN",
    "IKEEXT_CERT_EKUS0",
    "IKEEXT_CERT_FLAGS",
    "IKEEXT_CERT_FLAG_DISABLE_REQUEST_PAYLOAD",
    "IKEEXT_CERT_FLAG_ENABLE_ACCOUNT_MAPPING",
    "IKEEXT_CERT_FLAG_FOLLOW_RENEWAL_CERTIFICATE",
    "IKEEXT_CERT_FLAG_IGNORE_INIT_CERT_MAP_FAILURE",
    "IKEEXT_CERT_FLAG_INTERMEDIATE_CA",
    "IKEEXT_CERT_FLAG_PREFER_NAP_CERTIFICATE_OUTBOUND",
    "IKEEXT_CERT_FLAG_SELECT_NAP_CERTIFICATE",
    "IKEEXT_CERT_FLAG_USE_NAP_CERTIFICATE",
    "IKEEXT_CERT_FLAG_VERIFY_NAP_CERTIFICATE",
    "IKEEXT_CERT_HASH_LEN",
    "IKEEXT_CERT_NAME0",
    "IKEEXT_CERT_ROOT_CONFIG0",
    "IKEEXT_CIPHER_3DES",
    "IKEEXT_CIPHER_AES_128",
    "IKEEXT_CIPHER_AES_192",
    "IKEEXT_CIPHER_AES_256",
    "IKEEXT_CIPHER_AES_GCM_128_16ICV",
    "IKEEXT_CIPHER_AES_GCM_256_16ICV",
    "IKEEXT_CIPHER_ALGORITHM0",
    "IKEEXT_CIPHER_DES",
    "IKEEXT_CIPHER_TYPE",
    "IKEEXT_CIPHER_TYPE_MAX",
    "IKEEXT_COMMON_STATISTICS0",
    "IKEEXT_COMMON_STATISTICS1",
    "IKEEXT_COOKIE_PAIR0",
    "IKEEXT_CREDENTIAL0",
    "IKEEXT_CREDENTIAL1",
    "IKEEXT_CREDENTIAL2",
    "IKEEXT_CREDENTIALS0",
    "IKEEXT_CREDENTIALS1",
    "IKEEXT_CREDENTIALS2",
    "IKEEXT_CREDENTIAL_PAIR0",
    "IKEEXT_CREDENTIAL_PAIR1",
    "IKEEXT_CREDENTIAL_PAIR2",
    "IKEEXT_DH_ECP_256",
    "IKEEXT_DH_ECP_384",
    "IKEEXT_DH_GROUP",
    "IKEEXT_DH_GROUP_1",
    "IKEEXT_DH_GROUP_14",
    "IKEEXT_DH_GROUP_2",
    "IKEEXT_DH_GROUP_2048",
    "IKEEXT_DH_GROUP_24",
    "IKEEXT_DH_GROUP_MAX",
    "IKEEXT_DH_GROUP_NONE",
    "IKEEXT_EAP",
    "IKEEXT_EAP_AUTHENTICATION0",
    "IKEEXT_EAP_AUTHENTICATION_FLAGS",
    "IKEEXT_EAP_FLAG_LOCAL_AUTH_ONLY",
    "IKEEXT_EAP_FLAG_REMOTE_AUTH_ONLY",
    "IKEEXT_EM_POLICY0",
    "IKEEXT_EM_POLICY1",
    "IKEEXT_EM_POLICY2",
    "IKEEXT_EM_SA_STATE",
    "IKEEXT_EM_SA_STATE_AUTH_COMPLETE",
    "IKEEXT_EM_SA_STATE_COMPLETE",
    "IKEEXT_EM_SA_STATE_FINAL",
    "IKEEXT_EM_SA_STATE_MAX",
    "IKEEXT_EM_SA_STATE_NONE",
    "IKEEXT_EM_SA_STATE_SENT_ATTS",
    "IKEEXT_EM_SA_STATE_SSPI_SENT",
    "IKEEXT_IMPERSONATION_MAX",
    "IKEEXT_IMPERSONATION_NONE",
    "IKEEXT_IMPERSONATION_SOCKET_PRINCIPAL",
    "IKEEXT_INTEGRITY_ALGORITHM0",
    "IKEEXT_INTEGRITY_MD5",
    "IKEEXT_INTEGRITY_SHA1",
    "IKEEXT_INTEGRITY_SHA_256",
    "IKEEXT_INTEGRITY_SHA_384",
    "IKEEXT_INTEGRITY_TYPE",
    "IKEEXT_INTEGRITY_TYPE_MAX",
    "IKEEXT_IPV6_CGA",
    "IKEEXT_IPV6_CGA_AUTHENTICATION0",
    "IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS0",
    "IKEEXT_IP_VERSION_SPECIFIC_COMMON_STATISTICS1",
    "IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS0",
    "IKEEXT_IP_VERSION_SPECIFIC_KEYMODULE_STATISTICS1",
    "IKEEXT_KERBEROS",
    "IKEEXT_KERBEROS_AUTHENTICATION0",
    "IKEEXT_KERBEROS_AUTHENTICATION1",
    "IKEEXT_KERBEROS_AUTHENTICATION_FLAGS",
    "IKEEXT_KERB_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION",
    "IKEEXT_KERB_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS",
    "IKEEXT_KERB_AUTH_FORCE_PROXY_ON_INITIATOR",
    "IKEEXT_KEYMODULE_STATISTICS0",
    "IKEEXT_KEYMODULE_STATISTICS1",
    "IKEEXT_KEY_MODULE_AUTHIP",
    "IKEEXT_KEY_MODULE_IKE",
    "IKEEXT_KEY_MODULE_IKEV2",
    "IKEEXT_KEY_MODULE_MAX",
    "IKEEXT_KEY_MODULE_TYPE",
    "IKEEXT_MM_SA_STATE",
    "IKEEXT_MM_SA_STATE_COMPLETE",
    "IKEEXT_MM_SA_STATE_FINAL",
    "IKEEXT_MM_SA_STATE_FINAL_SENT",
    "IKEEXT_MM_SA_STATE_MAX",
    "IKEEXT_MM_SA_STATE_NONE",
    "IKEEXT_MM_SA_STATE_SA_SENT",
    "IKEEXT_MM_SA_STATE_SSPI_SENT",
    "IKEEXT_NAME_CREDENTIAL0",
    "IKEEXT_NTLM_V2",
    "IKEEXT_NTLM_V2_AUTHENTICATION0",
    "IKEEXT_NTLM_V2_AUTH_DONT_ACCEPT_EXPLICIT_CREDENTIALS",
    "IKEEXT_POLICY0",
    "IKEEXT_POLICY1",
    "IKEEXT_POLICY2",
    "IKEEXT_POLICY_ENABLE_IKEV2_FRAGMENTATION",
    "IKEEXT_POLICY_FLAG",
    "IKEEXT_POLICY_FLAG_DISABLE_DIAGNOSTICS",
    "IKEEXT_POLICY_FLAG_ENABLE_OPTIONAL_DH",
    "IKEEXT_POLICY_FLAG_IMS_VPN",
    "IKEEXT_POLICY_FLAG_MOBIKE_NOT_SUPPORTED",
    "IKEEXT_POLICY_FLAG_NO_IMPERSONATION_LUID_VERIFY",
    "IKEEXT_POLICY_FLAG_NO_MACHINE_LUID_VERIFY",
    "IKEEXT_POLICY_FLAG_SITE_TO_SITE",
    "IKEEXT_POLICY_SUPPORT_LOW_POWER_MODE",
    "IKEEXT_PRESHARED_KEY",
    "IKEEXT_PRESHARED_KEY_AUTHENTICATION0",
    "IKEEXT_PRESHARED_KEY_AUTHENTICATION1",
    "IKEEXT_PRESHARED_KEY_AUTHENTICATION_FLAGS",
    "IKEEXT_PROPOSAL0",
    "IKEEXT_PSK_FLAG_LOCAL_AUTH_ONLY",
    "IKEEXT_PSK_FLAG_REMOTE_AUTH_ONLY",
    "IKEEXT_QM_SA_STATE",
    "IKEEXT_QM_SA_STATE_COMPLETE",
    "IKEEXT_QM_SA_STATE_FINAL",
    "IKEEXT_QM_SA_STATE_INITIAL",
    "IKEEXT_QM_SA_STATE_MAX",
    "IKEEXT_QM_SA_STATE_NONE",
    "IKEEXT_RESERVED",
    "IKEEXT_RESERVED_AUTHENTICATION0",
    "IKEEXT_RESERVED_AUTHENTICATION_FLAGS",
    "IKEEXT_RESERVED_AUTH_DISABLE_INITIATOR_TOKEN_GENERATION",
    "IKEEXT_SA_DETAILS0",
    "IKEEXT_SA_DETAILS1",
    "IKEEXT_SA_DETAILS2",
    "IKEEXT_SA_ENUM_TEMPLATE0",
    "IKEEXT_SA_ROLE",
    "IKEEXT_SA_ROLE_INITIATOR",
    "IKEEXT_SA_ROLE_MAX",
    "IKEEXT_SA_ROLE_RESPONDER",
    "IKEEXT_SSL",
    "IKEEXT_SSL_ECDSA_P256",
    "IKEEXT_SSL_ECDSA_P384",
    "IKEEXT_STATISTICS0",
    "IKEEXT_STATISTICS1",
    "IKEEXT_TRAFFIC0",
    "IPSEC_ADDRESS_INFO0",
    "IPSEC_AGGREGATE_DROP_PACKET_STATISTICS0",
    "IPSEC_AGGREGATE_DROP_PACKET_STATISTICS1",
    "IPSEC_AGGREGATE_SA_STATISTICS0",
    "IPSEC_AH_DROP_PACKET_STATISTICS0",
    "IPSEC_AUTH_AES_128",
    "IPSEC_AUTH_AES_192",
    "IPSEC_AUTH_AES_256",
    "IPSEC_AUTH_AND_CIPHER_TRANSFORM0",
    "IPSEC_AUTH_CONFIG_GCM_AES_128",
    "IPSEC_AUTH_CONFIG_GCM_AES_192",
    "IPSEC_AUTH_CONFIG_GCM_AES_256",
    "IPSEC_AUTH_CONFIG_HMAC_MD5_96",
    "IPSEC_AUTH_CONFIG_HMAC_SHA_1_96",
    "IPSEC_AUTH_CONFIG_HMAC_SHA_256_128",
    "IPSEC_AUTH_CONFIG_MAX",
    "IPSEC_AUTH_MAX",
    "IPSEC_AUTH_MD5",
    "IPSEC_AUTH_SHA_1",
    "IPSEC_AUTH_SHA_256",
    "IPSEC_AUTH_TRANSFORM0",
    "IPSEC_AUTH_TRANSFORM_ID0",
    "IPSEC_AUTH_TYPE",
    "IPSEC_CIPHER_CONFIG_CBC_3DES",
    "IPSEC_CIPHER_CONFIG_CBC_AES_128",
    "IPSEC_CIPHER_CONFIG_CBC_AES_192",
    "IPSEC_CIPHER_CONFIG_CBC_AES_256",
    "IPSEC_CIPHER_CONFIG_CBC_DES",
    "IPSEC_CIPHER_CONFIG_GCM_AES_128",
    "IPSEC_CIPHER_CONFIG_GCM_AES_192",
    "IPSEC_CIPHER_CONFIG_GCM_AES_256",
    "IPSEC_CIPHER_CONFIG_MAX",
    "IPSEC_CIPHER_TRANSFORM0",
    "IPSEC_CIPHER_TRANSFORM_ID0",
    "IPSEC_CIPHER_TYPE",
    "IPSEC_CIPHER_TYPE_3DES",
    "IPSEC_CIPHER_TYPE_AES_128",
    "IPSEC_CIPHER_TYPE_AES_192",
    "IPSEC_CIPHER_TYPE_AES_256",
    "IPSEC_CIPHER_TYPE_DES",
    "IPSEC_CIPHER_TYPE_MAX",
    "IPSEC_DOSP_DSCP_DISABLE_VALUE",
    "IPSEC_DOSP_FLAGS",
    "IPSEC_DOSP_FLAG_DISABLE_AUTHIP",
    "IPSEC_DOSP_FLAG_DISABLE_DEFAULT_BLOCK",
    "IPSEC_DOSP_FLAG_ENABLE_IKEV1",
    "IPSEC_DOSP_FLAG_ENABLE_IKEV2",
    "IPSEC_DOSP_FLAG_FILTER_BLOCK",
    "IPSEC_DOSP_FLAG_FILTER_EXEMPT",
    "IPSEC_DOSP_OPTIONS0",
    "IPSEC_DOSP_RATE_LIMIT_DISABLE_VALUE",
    "IPSEC_DOSP_STATE0",
    "IPSEC_DOSP_STATE_ENUM_TEMPLATE0",
    "IPSEC_DOSP_STATISTICS0",
    "IPSEC_ESP_DROP_PACKET_STATISTICS0",
    "IPSEC_FAILURE_ME",
    "IPSEC_FAILURE_NONE",
    "IPSEC_FAILURE_PEER",
    "IPSEC_FAILURE_POINT",
    "IPSEC_FAILURE_POINT_MAX",
    "IPSEC_GETSPI0",
    "IPSEC_GETSPI1",
    "IPSEC_ID0",
    "IPSEC_KEYING_POLICY0",
    "IPSEC_KEYING_POLICY1",
    "IPSEC_KEYING_POLICY_FLAG_TERMINATING_MATCH",
    "IPSEC_KEYMODULE_STATE0",
    "IPSEC_KEY_MANAGER0",
    "IPSEC_KEY_MANAGER_CALLBACKS0",
    "IPSEC_KEY_MANAGER_DICTATE_KEY0",
    "IPSEC_KEY_MANAGER_FLAG_DICTATE_KEY",
    "IPSEC_KEY_MANAGER_KEY_DICTATION_CHECK0",
    "IPSEC_KEY_MANAGER_NOTIFY_KEY0",
    "IPSEC_PFS_1",
    "IPSEC_PFS_14",
    "IPSEC_PFS_2",
    "IPSEC_PFS_2048",
    "IPSEC_PFS_24",
    "IPSEC_PFS_ECP_256",
    "IPSEC_PFS_ECP_384",
    "IPSEC_PFS_GROUP",
    "IPSEC_PFS_MAX",
    "IPSEC_PFS_MM",
    "IPSEC_PFS_NONE",
    "IPSEC_POLICY_FLAG",
    "IPSEC_POLICY_FLAG_CLEAR_DF_ON_TUNNEL",
    "IPSEC_POLICY_FLAG_DONT_NEGOTIATE_BYTE_LIFETIME",
    "IPSEC_POLICY_FLAG_DONT_NEGOTIATE_SECOND_LIFETIME",
    "IPSEC_POLICY_FLAG_ENABLE_SERVER_ADDR_ASSIGNMENT",
    "IPSEC_POLICY_FLAG_ENABLE_V6_IN_V4_TUNNELING",
    "IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_DICTATE_KEY",
    "IPSEC_POLICY_FLAG_KEY_MANAGER_ALLOW_NOTIFY_KEY",
    "IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_GENERAL_NAT_TRAVERSAL",
    "IPSEC_POLICY_FLAG_NAT_ENCAP_ALLOW_PEER_BEHIND_NAT",
    "IPSEC_POLICY_FLAG_ND_BOUNDARY",
    "IPSEC_POLICY_FLAG_ND_SECURE",
    "IPSEC_POLICY_FLAG_RESERVED1",
    "IPSEC_POLICY_FLAG_SITE_TO_SITE_TUNNEL",
    "IPSEC_POLICY_FLAG_TUNNEL_ALLOW_OUTBOUND_CLEAR_CONNECTION",
    "IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ALREADY_SECURE_CONNECTION",
    "IPSEC_POLICY_FLAG_TUNNEL_BYPASS_ICMPV6",
    "IPSEC_PROPOSAL0",
    "IPSEC_SA0",
    "IPSEC_SA_AUTH_AND_CIPHER_INFORMATION0",
    "IPSEC_SA_AUTH_INFORMATION0",
    "IPSEC_SA_BUNDLE0",
    "IPSEC_SA_BUNDLE1",
    "IPSEC_SA_BUNDLE_FLAGS",
    "IPSEC_SA_BUNDLE_FLAG_ALLOW_NULL_TARGET_NAME_MATCH",
    "IPSEC_SA_BUNDLE_FLAG_ASSUME_UDP_CONTEXT_OUTBOUND",
    "IPSEC_SA_BUNDLE_FLAG_CLEAR_DF_ON_TUNNEL",
    "IPSEC_SA_BUNDLE_FLAG_ENABLE_OPTIONAL_ASYMMETRIC_IDLE",
    "IPSEC_SA_BUNDLE_FLAG_FORCE_INBOUND_CONNECTIONS",
    "IPSEC_SA_BUNDLE_FLAG_FORCE_OUTBOUND_CONNECTIONS",
    "IPSEC_SA_BUNDLE_FLAG_FORWARD_PATH_INITIATOR",
    "IPSEC_SA_BUNDLE_FLAG_GUARANTEE_ENCRYPTION",
    "IPSEC_SA_BUNDLE_FLAG_IP_IN_IP_PKT",
    "IPSEC_SA_BUNDLE_FLAG_LOCALLY_DICTATED_KEYS",
    "IPSEC_SA_BUNDLE_FLAG_LOW_POWER_MODE_SUPPORT",
    "IPSEC_SA_BUNDLE_FLAG_ND_BOUNDARY",
    "IPSEC_SA_BUNDLE_FLAG_ND_PEER_BOUNDARY",
    "IPSEC_SA_BUNDLE_FLAG_ND_PEER_NAT_BOUNDARY",
    "IPSEC_SA_BUNDLE_FLAG_ND_SECURE",
    "IPSEC_SA_BUNDLE_FLAG_NLB",
    "IPSEC_SA_BUNDLE_FLAG_NO_EXPLICIT_CRED_MATCH",
    "IPSEC_SA_BUNDLE_FLAG_NO_IMPERSONATION_LUID_VERIFY",
    "IPSEC_SA_BUNDLE_FLAG_NO_MACHINE_LUID_VERIFY",
    "IPSEC_SA_BUNDLE_FLAG_PEER_SUPPORTS_GUARANTEE_ENCRYPTION",
    "IPSEC_SA_BUNDLE_FLAG_SA_OFFLOADED",
    "IPSEC_SA_BUNDLE_FLAG_SUPPRESS_DUPLICATE_DELETION",
    "IPSEC_SA_BUNDLE_FLAG_USING_DICTATED_KEYS",
    "IPSEC_SA_CIPHER_INFORMATION0",
    "IPSEC_SA_CONTEXT0",
    "IPSEC_SA_CONTEXT1",
    "IPSEC_SA_CONTEXT_CALLBACK0",
    "IPSEC_SA_CONTEXT_CHANGE0",
    "IPSEC_SA_CONTEXT_ENUM_TEMPLATE0",
    "IPSEC_SA_CONTEXT_EVENT_ADD",
    "IPSEC_SA_CONTEXT_EVENT_DELETE",
    "IPSEC_SA_CONTEXT_EVENT_MAX",
    "IPSEC_SA_CONTEXT_EVENT_TYPE0",
    "IPSEC_SA_CONTEXT_SUBSCRIPTION0",
    "IPSEC_SA_DETAILS0",
    "IPSEC_SA_DETAILS1",
    "IPSEC_SA_ENUM_TEMPLATE0",
    "IPSEC_SA_IDLE_TIMEOUT0",
    "IPSEC_SA_LIFETIME0",
    "IPSEC_SA_TRANSFORM0",
    "IPSEC_STATISTICS0",
    "IPSEC_STATISTICS1",
    "IPSEC_TOKEN0",
    "IPSEC_TOKEN_MODE",
    "IPSEC_TOKEN_MODE_EXTENDED",
    "IPSEC_TOKEN_MODE_MAIN",
    "IPSEC_TOKEN_MODE_MAX",
    "IPSEC_TOKEN_PRINCIPAL",
    "IPSEC_TOKEN_PRINCIPAL_LOCAL",
    "IPSEC_TOKEN_PRINCIPAL_MAX",
    "IPSEC_TOKEN_PRINCIPAL_PEER",
    "IPSEC_TOKEN_TYPE",
    "IPSEC_TOKEN_TYPE_IMPERSONATION",
    "IPSEC_TOKEN_TYPE_MACHINE",
    "IPSEC_TOKEN_TYPE_MAX",
    "IPSEC_TRAFFIC0",
    "IPSEC_TRAFFIC1",
    "IPSEC_TRAFFIC_SELECTOR0",
    "IPSEC_TRAFFIC_SELECTOR_POLICY0",
    "IPSEC_TRAFFIC_STATISTICS0",
    "IPSEC_TRAFFIC_STATISTICS1",
    "IPSEC_TRAFFIC_TYPE",
    "IPSEC_TRAFFIC_TYPE_MAX",
    "IPSEC_TRAFFIC_TYPE_TRANSPORT",
    "IPSEC_TRAFFIC_TYPE_TUNNEL",
    "IPSEC_TRANSFORM_AH",
    "IPSEC_TRANSFORM_ESP_AUTH",
    "IPSEC_TRANSFORM_ESP_AUTH_AND_CIPHER",
    "IPSEC_TRANSFORM_ESP_AUTH_FW",
    "IPSEC_TRANSFORM_ESP_CIPHER",
    "IPSEC_TRANSFORM_TYPE",
    "IPSEC_TRANSFORM_TYPE_MAX",
    "IPSEC_TRANSPORT_POLICY0",
    "IPSEC_TRANSPORT_POLICY1",
    "IPSEC_TRANSPORT_POLICY2",
    "IPSEC_TUNNEL_ENDPOINT0",
    "IPSEC_TUNNEL_ENDPOINTS0",
    "IPSEC_TUNNEL_ENDPOINTS1",
    "IPSEC_TUNNEL_ENDPOINTS2",
    "IPSEC_TUNNEL_POLICY0",
    "IPSEC_TUNNEL_POLICY1",
    "IPSEC_TUNNEL_POLICY2",
    "IPSEC_TUNNEL_POLICY3",
    "IPSEC_V4_UDP_ENCAPSULATION0",
    "IPSEC_VIRTUAL_IF_TUNNEL_INFO0",
    "IPsecDospGetSecurityInfo0",
    "IPsecDospGetStatistics0",
    "IPsecDospSetSecurityInfo0",
    "IPsecDospStateCreateEnumHandle0",
    "IPsecDospStateDestroyEnumHandle0",
    "IPsecDospStateEnum0",
    "IPsecGetStatistics0",
    "IPsecGetStatistics1",
    "IPsecKeyManagerAddAndRegister0",
    "IPsecKeyManagerGetSecurityInfoByKey0",
    "IPsecKeyManagerSetSecurityInfoByKey0",
    "IPsecKeyManagerUnregisterAndDelete0",
    "IPsecKeyManagersGet0",
    "IPsecSaContextAddInbound0",
    "IPsecSaContextAddInbound1",
    "IPsecSaContextAddOutbound0",
    "IPsecSaContextAddOutbound1",
    "IPsecSaContextCreate0",
    "IPsecSaContextCreate1",
    "IPsecSaContextCreateEnumHandle0",
    "IPsecSaContextDeleteById0",
    "IPsecSaContextDestroyEnumHandle0",
    "IPsecSaContextEnum0",
    "IPsecSaContextEnum1",
    "IPsecSaContextExpire0",
    "IPsecSaContextGetById0",
    "IPsecSaContextGetById1",
    "IPsecSaContextGetSpi0",
    "IPsecSaContextGetSpi1",
    "IPsecSaContextSetSpi0",
    "IPsecSaContextSubscribe0",
    "IPsecSaContextSubscriptionsGet0",
    "IPsecSaContextUnsubscribe0",
    "IPsecSaContextUpdate0",
    "IPsecSaCreateEnumHandle0",
    "IPsecSaDbGetSecurityInfo0",
    "IPsecSaDbSetSecurityInfo0",
    "IPsecSaDestroyEnumHandle0",
    "IPsecSaEnum0",
    "IPsecSaEnum1",
    "IkeextGetStatistics0",
    "IkeextGetStatistics1",
    "IkeextSaCreateEnumHandle0",
    "IkeextSaDbGetSecurityInfo0",
    "IkeextSaDbSetSecurityInfo0",
    "IkeextSaDeleteById0",
    "IkeextSaDestroyEnumHandle0",
    "IkeextSaEnum0",
    "IkeextSaEnum1",
    "IkeextSaEnum2",
    "IkeextSaGetById0",
    "IkeextSaGetById1",
    "IkeextSaGetById2",
]
