from __future__ import annotations
from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import ARCH, MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head
import win32more.Foundation
import win32more.Security
import win32more.Security.Cryptography
import win32more.System.Com
import win32more.System.Registry
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        if name in _arch_optional:
            return None
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
def __dir__():
    return __all__
CERT_COMPARE_SHIFT: Int32 = 16
BCRYPT_OBJECT_ALIGNMENT: UInt32 = 16
BCRYPT_KDF_HASH: String = 'HASH'
BCRYPT_KDF_HMAC: String = 'HMAC'
BCRYPT_KDF_TLS_PRF: String = 'TLS_PRF'
BCRYPT_KDF_SP80056A_CONCAT: String = 'SP800_56A_CONCAT'
BCRYPT_KDF_RAW_SECRET: String = 'TRUNCATE'
BCRYPT_KDF_HKDF: String = 'HKDF'
KDF_HASH_ALGORITHM: UInt32 = 0
KDF_SECRET_PREPEND: UInt32 = 1
KDF_SECRET_APPEND: UInt32 = 2
KDF_HMAC_KEY: UInt32 = 3
KDF_TLS_PRF_LABEL: UInt32 = 4
KDF_TLS_PRF_SEED: UInt32 = 5
KDF_SECRET_HANDLE: UInt32 = 6
KDF_TLS_PRF_PROTOCOL: UInt32 = 7
KDF_ALGORITHMID: UInt32 = 8
KDF_PARTYUINFO: UInt32 = 9
KDF_PARTYVINFO: UInt32 = 10
KDF_SUPPPUBINFO: UInt32 = 11
KDF_SUPPPRIVINFO: UInt32 = 12
KDF_LABEL: UInt32 = 13
KDF_CONTEXT: UInt32 = 14
KDF_SALT: UInt32 = 15
KDF_ITERATION_COUNT: UInt32 = 16
KDF_GENERIC_PARAMETER: UInt32 = 17
KDF_KEYBITLENGTH: UInt32 = 18
KDF_HKDF_SALT: UInt32 = 19
KDF_HKDF_INFO: UInt32 = 20
KDF_USE_SECRET_AS_HMAC_KEY_FLAG: UInt32 = 1
BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION: UInt32 = 1
BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG: UInt32 = 1
BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG: UInt32 = 2
BCRYPT_OPAQUE_KEY_BLOB: String = 'OpaqueKeyBlob'
BCRYPT_KEY_DATA_BLOB: String = 'KeyDataBlob'
BCRYPT_AES_WRAP_KEY_BLOB: String = 'Rfc3565KeyWrapBlob'
BCRYPT_OBJECT_LENGTH: String = 'ObjectLength'
BCRYPT_ALGORITHM_NAME: String = 'AlgorithmName'
BCRYPT_PROVIDER_HANDLE: String = 'ProviderHandle'
BCRYPT_CHAINING_MODE: String = 'ChainingMode'
BCRYPT_BLOCK_LENGTH: String = 'BlockLength'
BCRYPT_KEY_LENGTH: String = 'KeyLength'
BCRYPT_KEY_OBJECT_LENGTH: String = 'KeyObjectLength'
BCRYPT_KEY_STRENGTH: String = 'KeyStrength'
BCRYPT_KEY_LENGTHS: String = 'KeyLengths'
BCRYPT_BLOCK_SIZE_LIST: String = 'BlockSizeList'
BCRYPT_EFFECTIVE_KEY_LENGTH: String = 'EffectiveKeyLength'
BCRYPT_HASH_LENGTH: String = 'HashDigestLength'
BCRYPT_HASH_OID_LIST: String = 'HashOIDList'
BCRYPT_PADDING_SCHEMES: String = 'PaddingSchemes'
BCRYPT_SIGNATURE_LENGTH: String = 'SignatureLength'
BCRYPT_HASH_BLOCK_LENGTH: String = 'HashBlockLength'
BCRYPT_AUTH_TAG_LENGTH: String = 'AuthTagLength'
BCRYPT_PRIMITIVE_TYPE: String = 'PrimitiveType'
BCRYPT_IS_KEYED_HASH: String = 'IsKeyedHash'
BCRYPT_IS_REUSABLE_HASH: String = 'IsReusableHash'
BCRYPT_MESSAGE_BLOCK_LENGTH: String = 'MessageBlockLength'
BCRYPT_PUBLIC_KEY_LENGTH: String = 'PublicKeyLength'
BCRYPT_PCP_PLATFORM_TYPE_PROPERTY: String = 'PCP_PLATFORM_TYPE'
BCRYPT_PCP_PROVIDER_VERSION_PROPERTY: String = 'PCP_PROVIDER_VERSION'
BCRYPT_MULTI_OBJECT_LENGTH: String = 'MultiObjectLength'
BCRYPT_IS_IFX_TPM_WEAK_KEY: String = 'IsIfxTpmWeakKey'
BCRYPT_HKDF_HASH_ALGORITHM: String = 'HkdfHashAlgorithm'
BCRYPT_HKDF_SALT_AND_FINALIZE: String = 'HkdfSaltAndFinalize'
BCRYPT_HKDF_PRK_AND_FINALIZE: String = 'HkdfPrkAndFinalize'
BCRYPT_INITIALIZATION_VECTOR: String = 'IV'
BCRYPT_CHAIN_MODE_NA: String = 'ChainingModeN/A'
BCRYPT_CHAIN_MODE_CBC: String = 'ChainingModeCBC'
BCRYPT_CHAIN_MODE_ECB: String = 'ChainingModeECB'
BCRYPT_CHAIN_MODE_CFB: String = 'ChainingModeCFB'
BCRYPT_CHAIN_MODE_CCM: String = 'ChainingModeCCM'
BCRYPT_CHAIN_MODE_GCM: String = 'ChainingModeGCM'
BCRYPT_SUPPORTED_PAD_ROUTER: UInt32 = 1
BCRYPT_SUPPORTED_PAD_PKCS1_ENC: UInt32 = 2
BCRYPT_SUPPORTED_PAD_PKCS1_SIG: UInt32 = 4
BCRYPT_SUPPORTED_PAD_OAEP: UInt32 = 8
BCRYPT_SUPPORTED_PAD_PSS: UInt32 = 16
BCRYPT_BLOCK_PADDING: UInt32 = 1
BCRYPT_GENERATE_IV: UInt32 = 32
BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID: UInt32 = 16
BCRYPTBUFFER_VERSION: UInt32 = 0
BCRYPT_PUBLIC_KEY_BLOB: String = 'PUBLICBLOB'
BCRYPT_PRIVATE_KEY_BLOB: String = 'PRIVATEBLOB'
BCRYPT_RSAPUBLIC_BLOB: String = 'RSAPUBLICBLOB'
BCRYPT_RSAPRIVATE_BLOB: String = 'RSAPRIVATEBLOB'
LEGACY_RSAPUBLIC_BLOB: String = 'CAPIPUBLICBLOB'
LEGACY_RSAPRIVATE_BLOB: String = 'CAPIPRIVATEBLOB'
BCRYPT_RSAFULLPRIVATE_BLOB: String = 'RSAFULLPRIVATEBLOB'
BCRYPT_GLOBAL_PARAMETERS: String = 'SecretAgreementParam'
BCRYPT_PRIVATE_KEY: String = 'PrivKeyVal'
BCRYPT_ECCPUBLIC_BLOB: String = 'ECCPUBLICBLOB'
BCRYPT_ECCPRIVATE_BLOB: String = 'ECCPRIVATEBLOB'
BCRYPT_ECCFULLPUBLIC_BLOB: String = 'ECCFULLPUBLICBLOB'
BCRYPT_ECCFULLPRIVATE_BLOB: String = 'ECCFULLPRIVATEBLOB'
SSL_ECCPUBLIC_BLOB: String = 'SSLECCPUBLICBLOB'
BCRYPT_ECDH_PUBLIC_P256_MAGIC: UInt32 = 827016005
BCRYPT_ECDH_PRIVATE_P256_MAGIC: UInt32 = 843793221
BCRYPT_ECDH_PUBLIC_P384_MAGIC: UInt32 = 860570437
BCRYPT_ECDH_PRIVATE_P384_MAGIC: UInt32 = 877347653
BCRYPT_ECDH_PUBLIC_P521_MAGIC: UInt32 = 894124869
BCRYPT_ECDH_PRIVATE_P521_MAGIC: UInt32 = 910902085
BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC: UInt32 = 1347109701
BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC: UInt32 = 1447772997
BCRYPT_ECDSA_PUBLIC_P256_MAGIC: UInt32 = 827540293
BCRYPT_ECDSA_PRIVATE_P256_MAGIC: UInt32 = 844317509
BCRYPT_ECDSA_PUBLIC_P384_MAGIC: UInt32 = 861094725
BCRYPT_ECDSA_PRIVATE_P384_MAGIC: UInt32 = 877871941
BCRYPT_ECDSA_PUBLIC_P521_MAGIC: UInt32 = 894649157
BCRYPT_ECDSA_PRIVATE_P521_MAGIC: UInt32 = 911426373
BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC: UInt32 = 1346650949
BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC: UInt32 = 1447314245
BCRYPT_ECC_FULLKEY_BLOB_V1: UInt32 = 1
BCRYPT_DH_PUBLIC_BLOB: String = 'DHPUBLICBLOB'
BCRYPT_DH_PRIVATE_BLOB: String = 'DHPRIVATEBLOB'
LEGACY_DH_PUBLIC_BLOB: String = 'CAPIDHPUBLICBLOB'
LEGACY_DH_PRIVATE_BLOB: String = 'CAPIDHPRIVATEBLOB'
BCRYPT_DH_PARAMETERS: String = 'DHParameters'
BCRYPT_DH_PARAMETERS_MAGIC: UInt32 = 1297107012
BCRYPT_DSA_PUBLIC_BLOB: String = 'DSAPUBLICBLOB'
BCRYPT_DSA_PRIVATE_BLOB: String = 'DSAPRIVATEBLOB'
LEGACY_DSA_PUBLIC_BLOB: String = 'CAPIDSAPUBLICBLOB'
LEGACY_DSA_PRIVATE_BLOB: String = 'CAPIDSAPRIVATEBLOB'
LEGACY_DSA_V2_PUBLIC_BLOB: String = 'V2CAPIDSAPUBLICBLOB'
LEGACY_DSA_V2_PRIVATE_BLOB: String = 'V2CAPIDSAPRIVATEBLOB'
BCRYPT_DSA_PUBLIC_MAGIC_V2: UInt32 = 843206724
BCRYPT_DSA_PRIVATE_MAGIC_V2: UInt32 = 844517444
BCRYPT_KEY_DATA_BLOB_MAGIC: UInt32 = 1296188491
BCRYPT_KEY_DATA_BLOB_VERSION1: UInt32 = 1
BCRYPT_DSA_PARAMETERS: String = 'DSAParameters'
BCRYPT_DSA_PARAMETERS_MAGIC: UInt32 = 1297109828
BCRYPT_DSA_PARAMETERS_MAGIC_V2: UInt32 = 843927620
BCRYPT_ECC_PARAMETERS: String = 'ECCParameters'
BCRYPT_ECC_CURVE_NAME: String = 'ECCCurveName'
BCRYPT_ECC_CURVE_NAME_LIST: String = 'ECCCurveNameList'
BCRYPT_ECC_PARAMETERS_MAGIC: UInt32 = 1346585413
BCRYPT_ECC_CURVE_BRAINPOOLP160R1: String = 'brainpoolP160r1'
BCRYPT_ECC_CURVE_BRAINPOOLP160T1: String = 'brainpoolP160t1'
BCRYPT_ECC_CURVE_BRAINPOOLP192R1: String = 'brainpoolP192r1'
BCRYPT_ECC_CURVE_BRAINPOOLP192T1: String = 'brainpoolP192t1'
BCRYPT_ECC_CURVE_BRAINPOOLP224R1: String = 'brainpoolP224r1'
BCRYPT_ECC_CURVE_BRAINPOOLP224T1: String = 'brainpoolP224t1'
BCRYPT_ECC_CURVE_BRAINPOOLP256R1: String = 'brainpoolP256r1'
BCRYPT_ECC_CURVE_BRAINPOOLP256T1: String = 'brainpoolP256t1'
BCRYPT_ECC_CURVE_BRAINPOOLP320R1: String = 'brainpoolP320r1'
BCRYPT_ECC_CURVE_BRAINPOOLP320T1: String = 'brainpoolP320t1'
BCRYPT_ECC_CURVE_BRAINPOOLP384R1: String = 'brainpoolP384r1'
BCRYPT_ECC_CURVE_BRAINPOOLP384T1: String = 'brainpoolP384t1'
BCRYPT_ECC_CURVE_BRAINPOOLP512R1: String = 'brainpoolP512r1'
BCRYPT_ECC_CURVE_BRAINPOOLP512T1: String = 'brainpoolP512t1'
BCRYPT_ECC_CURVE_25519: String = 'curve25519'
BCRYPT_ECC_CURVE_EC192WAPI: String = 'ec192wapi'
BCRYPT_ECC_CURVE_NISTP192: String = 'nistP192'
BCRYPT_ECC_CURVE_NISTP224: String = 'nistP224'
BCRYPT_ECC_CURVE_NISTP256: String = 'nistP256'
BCRYPT_ECC_CURVE_NISTP384: String = 'nistP384'
BCRYPT_ECC_CURVE_NISTP521: String = 'nistP521'
BCRYPT_ECC_CURVE_NUMSP256T1: String = 'numsP256t1'
BCRYPT_ECC_CURVE_NUMSP384T1: String = 'numsP384t1'
BCRYPT_ECC_CURVE_NUMSP512T1: String = 'numsP512t1'
BCRYPT_ECC_CURVE_SECP160K1: String = 'secP160k1'
BCRYPT_ECC_CURVE_SECP160R1: String = 'secP160r1'
BCRYPT_ECC_CURVE_SECP160R2: String = 'secP160r2'
BCRYPT_ECC_CURVE_SECP192K1: String = 'secP192k1'
BCRYPT_ECC_CURVE_SECP192R1: String = 'secP192r1'
BCRYPT_ECC_CURVE_SECP224K1: String = 'secP224k1'
BCRYPT_ECC_CURVE_SECP224R1: String = 'secP224r1'
BCRYPT_ECC_CURVE_SECP256K1: String = 'secP256k1'
BCRYPT_ECC_CURVE_SECP256R1: String = 'secP256r1'
BCRYPT_ECC_CURVE_SECP384R1: String = 'secP384r1'
BCRYPT_ECC_CURVE_SECP521R1: String = 'secP521r1'
BCRYPT_ECC_CURVE_WTLS7: String = 'wtls7'
BCRYPT_ECC_CURVE_WTLS9: String = 'wtls9'
BCRYPT_ECC_CURVE_WTLS12: String = 'wtls12'
BCRYPT_ECC_CURVE_X962P192V1: String = 'x962P192v1'
BCRYPT_ECC_CURVE_X962P192V2: String = 'x962P192v2'
BCRYPT_ECC_CURVE_X962P192V3: String = 'x962P192v3'
BCRYPT_ECC_CURVE_X962P239V1: String = 'x962P239v1'
BCRYPT_ECC_CURVE_X962P239V2: String = 'x962P239v2'
BCRYPT_ECC_CURVE_X962P239V3: String = 'x962P239v3'
BCRYPT_ECC_CURVE_X962P256V1: String = 'x962P256v1'
MS_PRIMITIVE_PROVIDER: String = 'Microsoft Primitive Provider'
MS_PLATFORM_CRYPTO_PROVIDER: String = 'Microsoft Platform Crypto Provider'
BCRYPT_RSA_ALGORITHM: String = 'RSA'
BCRYPT_RSA_SIGN_ALGORITHM: String = 'RSA_SIGN'
BCRYPT_DH_ALGORITHM: String = 'DH'
BCRYPT_DSA_ALGORITHM: String = 'DSA'
BCRYPT_RC2_ALGORITHM: String = 'RC2'
BCRYPT_RC4_ALGORITHM: String = 'RC4'
BCRYPT_AES_ALGORITHM: String = 'AES'
BCRYPT_DES_ALGORITHM: String = 'DES'
BCRYPT_DESX_ALGORITHM: String = 'DESX'
BCRYPT_3DES_ALGORITHM: String = '3DES'
BCRYPT_3DES_112_ALGORITHM: String = '3DES_112'
BCRYPT_MD2_ALGORITHM: String = 'MD2'
BCRYPT_MD4_ALGORITHM: String = 'MD4'
BCRYPT_MD5_ALGORITHM: String = 'MD5'
BCRYPT_SHA1_ALGORITHM: String = 'SHA1'
BCRYPT_SHA256_ALGORITHM: String = 'SHA256'
BCRYPT_SHA384_ALGORITHM: String = 'SHA384'
BCRYPT_SHA512_ALGORITHM: String = 'SHA512'
BCRYPT_AES_GMAC_ALGORITHM: String = 'AES-GMAC'
BCRYPT_AES_CMAC_ALGORITHM: String = 'AES-CMAC'
BCRYPT_ECDSA_P256_ALGORITHM: String = 'ECDSA_P256'
BCRYPT_ECDSA_P384_ALGORITHM: String = 'ECDSA_P384'
BCRYPT_ECDSA_P521_ALGORITHM: String = 'ECDSA_P521'
BCRYPT_ECDH_P256_ALGORITHM: String = 'ECDH_P256'
BCRYPT_ECDH_P384_ALGORITHM: String = 'ECDH_P384'
BCRYPT_ECDH_P521_ALGORITHM: String = 'ECDH_P521'
BCRYPT_RNG_ALGORITHM: String = 'RNG'
BCRYPT_RNG_FIPS186_DSA_ALGORITHM: String = 'FIPS186DSARNG'
BCRYPT_RNG_DUAL_EC_ALGORITHM: String = 'DUALECRNG'
BCRYPT_SP800108_CTR_HMAC_ALGORITHM: String = 'SP800_108_CTR_HMAC'
BCRYPT_SP80056A_CONCAT_ALGORITHM: String = 'SP800_56A_CONCAT'
BCRYPT_PBKDF2_ALGORITHM: String = 'PBKDF2'
BCRYPT_CAPI_KDF_ALGORITHM: String = 'CAPI_KDF'
BCRYPT_TLS1_1_KDF_ALGORITHM: String = 'TLS1_1_KDF'
BCRYPT_TLS1_2_KDF_ALGORITHM: String = 'TLS1_2_KDF'
BCRYPT_ECDSA_ALGORITHM: String = 'ECDSA'
BCRYPT_ECDH_ALGORITHM: String = 'ECDH'
BCRYPT_XTS_AES_ALGORITHM: String = 'XTS-AES'
BCRYPT_HKDF_ALGORITHM: String = 'HKDF'
BCRYPT_CHACHA20_POLY1305_ALGORITHM: String = 'CHACHA20_POLY1305'
BCRYPT_KEY_DERIVATION_INTERFACE: UInt32 = 7
BCRYPT_MD2_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 1
BCRYPT_MD4_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 17
BCRYPT_MD5_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 33
BCRYPT_SHA1_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 49
BCRYPT_SHA256_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 65
BCRYPT_SHA384_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 81
BCRYPT_SHA512_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 97
BCRYPT_RC4_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 113
BCRYPT_RNG_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 129
BCRYPT_HMAC_MD5_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 145
BCRYPT_HMAC_SHA1_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 161
BCRYPT_HMAC_SHA256_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 177
BCRYPT_HMAC_SHA384_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 193
BCRYPT_HMAC_SHA512_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 209
BCRYPT_RSA_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 225
BCRYPT_ECDSA_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 241
BCRYPT_AES_CMAC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 257
BCRYPT_AES_GMAC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 273
BCRYPT_HMAC_MD2_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 289
BCRYPT_HMAC_MD4_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 305
BCRYPT_3DES_CBC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 321
BCRYPT_3DES_ECB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 337
BCRYPT_3DES_CFB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 353
BCRYPT_3DES_112_CBC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 369
BCRYPT_3DES_112_ECB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 385
BCRYPT_3DES_112_CFB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 401
BCRYPT_AES_CBC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 417
BCRYPT_AES_ECB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 433
BCRYPT_AES_CFB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 449
BCRYPT_AES_CCM_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 465
BCRYPT_AES_GCM_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 481
BCRYPT_DES_CBC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 497
BCRYPT_DES_ECB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 513
BCRYPT_DES_CFB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 529
BCRYPT_DESX_CBC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 545
BCRYPT_DESX_ECB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 561
BCRYPT_DESX_CFB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 577
BCRYPT_RC2_CBC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 593
BCRYPT_RC2_ECB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 609
BCRYPT_RC2_CFB_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 625
BCRYPT_DH_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 641
BCRYPT_ECDH_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 657
BCRYPT_ECDH_P256_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 673
BCRYPT_ECDH_P384_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 689
BCRYPT_ECDH_P521_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 705
BCRYPT_DSA_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 721
BCRYPT_ECDSA_P256_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 737
BCRYPT_ECDSA_P384_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 753
BCRYPT_ECDSA_P521_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 769
BCRYPT_RSA_SIGN_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 785
BCRYPT_CAPI_KDF_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 801
BCRYPT_PBKDF2_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 817
BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 833
BCRYPT_SP80056A_CONCAT_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 849
BCRYPT_TLS1_1_KDF_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 865
BCRYPT_TLS1_2_KDF_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 881
BCRYPT_XTS_AES_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 897
BCRYPT_HKDF_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 913
BCRYPT_CHACHA20_POLY1305_ALG_HANDLE: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE = 929
BCRYPT_CAPI_AES_FLAG: UInt32 = 16
BCRYPT_MULTI_FLAG: UInt32 = 64
BCRYPT_TLS_CBC_HMAC_VERIFY_FLAG: UInt32 = 4
BCRYPT_BUFFERS_LOCKED_FLAG: UInt32 = 64
BCRYPT_EXTENDED_KEYSIZE: UInt32 = 128
BCRYPT_ENABLE_INCOMPATIBLE_FIPS_CHECKS: UInt32 = 256
BCRYPT_KEY_DERIVATION_OPERATION: UInt32 = 64
BCRYPT_PUBLIC_KEY_FLAG: UInt32 = 1
BCRYPT_PRIVATE_KEY_FLAG: UInt32 = 2
BCRYPT_NO_KEY_VALIDATION: UInt32 = 8
BCRYPT_KEY_VALIDATION_RANGE: UInt32 = 16
BCRYPT_KEY_VALIDATION_RANGE_AND_ORDER: UInt32 = 24
BCRYPT_KEY_VALIDATION_REGENERATE: UInt32 = 32
BCRYPT_RNG_USE_ENTROPY_IN_BUFFER: UInt32 = 1
BCRYPT_USE_SYSTEM_PREFERRED_RNG: UInt32 = 2
BCRYPT_HASH_INTERFACE_MAJORVERSION_2: UInt32 = 2
CRYPT_OVERWRITE: UInt32 = 1
CRYPT_PRIORITY_TOP: UInt32 = 0
CRYPT_PRIORITY_BOTTOM: UInt32 = 4294967295
CRYPT_DEFAULT_CONTEXT: String = 'Default'
wszXMLNS_DIGSIG: String = 'http://www.w3.org/2000/09/xmldsig#'
wszXMLNS_DIGSIG_SignatureProperties: String = 'http://www.w3.org/2000/09/xmldsig#SignatureProperties'
wszXMLNS_DIGSIG_Id: String = 'Id'
wszURI_XMLNS_DIGSIG_BASE64: String = 'http://www.w3.org/2000/09/xmldsig#base64'
wszURI_XMLNS_DIGSIG_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#sha1'
wszURI_XMLNS_DIGSIG_SHA256: String = 'http://www.w3.org/2001/04/xmlenc#sha256'
wszURI_XMLNS_DIGSIG_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#sha384'
wszURI_XMLNS_DIGSIG_SHA512: String = 'http://www.w3.org/2001/04/xmlenc#sha512'
wszURI_XMLNS_DIGSIG_RSA_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
wszURI_XMLNS_DIGSIG_DSA_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
wszURI_XMLNS_DIGSIG_RSA_SHA256: String = 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
wszURI_XMLNS_DIGSIG_RSA_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
wszURI_XMLNS_DIGSIG_RSA_SHA512: String = 'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
wszURI_XMLNS_DIGSIG_ECDSA_SHA1: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1'
wszURI_XMLNS_DIGSIG_ECDSA_SHA256: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256'
wszURI_XMLNS_DIGSIG_ECDSA_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384'
wszURI_XMLNS_DIGSIG_ECDSA_SHA512: String = 'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512'
wszURI_XMLNS_DIGSIG_HMAC_SHA1: String = 'http://www.w3.org/2000/09/xmldsig#hmac-sha1'
wszURI_XMLNS_DIGSIG_HMAC_SHA256: String = 'http://www.w3.org/2001/04/xmldsig-more#hmac-sha256'
wszURI_XMLNS_DIGSIG_HMAC_SHA384: String = 'http://www.w3.org/2001/04/xmldsig-more#hmac-sha384'
wszURI_XMLNS_DIGSIG_HMAC_SHA512: String = 'http://www.w3.org/2001/04/xmldsig-more#hmac-sha512'
wszURI_CANONICALIZATION_C14N: String = 'http://www.w3.org/TR/2001/REC-xml-c14n-20010315'
wszURI_CANONICALIZATION_C14NC: String = 'http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments'
wszURI_CANONICALIZATION_EXSLUSIVE_C14N: String = 'http://www.w3.org/2001/10/xml-exc-c14n#'
wszURI_CANONICALIZATION_EXSLUSIVE_C14NC: String = 'http://www.w3.org/2001/10/xml-exc-c14n#WithComments'
wszURI_TRANSFORM_XPATH: String = 'http://www.w3.org/TR/1999/REC-xpath-19991116'
wszURI_XMLNS_TRANSFORM_BASE64: String = 'http://www.w3.org/2000/09/xmldsig#base64'
wszURI_XMLNS_TRANSFORM_ENVELOPED: String = 'http://www.w3.org/2000/09/xmldsig#enveloped-signature'
CRYPT_XML_BLOB_MAX: UInt32 = 2147483640
CRYPT_XML_ID_MAX: UInt32 = 256
CRYPT_XML_SIGNATURES_MAX: UInt32 = 16
CRYPT_XML_TRANSFORM_MAX: UInt32 = 16
CRYPT_XML_SIGNATURE_VALUE_MAX: UInt32 = 2048
CRYPT_XML_DIGEST_VALUE_MAX: UInt32 = 128
CRYPT_XML_OBJECTS_MAX: UInt32 = 256
CRYPT_XML_REFERENCES_MAX: UInt32 = 32760
CRYPT_XML_E_BASE: win32more.Foundation.HRESULT = -2146885376
CRYPT_XML_E_LARGE: win32more.Foundation.HRESULT = -2146885375
CRYPT_XML_E_TOO_MANY_TRANSFORMS: win32more.Foundation.HRESULT = -2146885374
CRYPT_XML_E_ENCODING: win32more.Foundation.HRESULT = -2146885373
CRYPT_XML_E_ALGORITHM: win32more.Foundation.HRESULT = -2146885372
CRYPT_XML_E_TRANSFORM: win32more.Foundation.HRESULT = -2146885371
CRYPT_XML_E_HANDLE: win32more.Foundation.HRESULT = -2146885370
CRYPT_XML_E_OPERATION: win32more.Foundation.HRESULT = -2146885369
CRYPT_XML_E_UNRESOLVED_REFERENCE: win32more.Foundation.HRESULT = -2146885368
CRYPT_XML_E_INVALID_DIGEST: win32more.Foundation.HRESULT = -2146885367
CRYPT_XML_E_INVALID_SIGNATURE: win32more.Foundation.HRESULT = -2146885366
CRYPT_XML_E_HASH_FAILED: win32more.Foundation.HRESULT = -2146885365
CRYPT_XML_E_SIGN_FAILED: win32more.Foundation.HRESULT = -2146885364
CRYPT_XML_E_VERIFY_FAILED: win32more.Foundation.HRESULT = -2146885363
CRYPT_XML_E_TOO_MANY_SIGNATURES: win32more.Foundation.HRESULT = -2146885362
CRYPT_XML_E_INVALID_KEYVALUE: win32more.Foundation.HRESULT = -2146885361
CRYPT_XML_E_UNEXPECTED_XML: win32more.Foundation.HRESULT = -2146885360
CRYPT_XML_E_SIGNER: win32more.Foundation.HRESULT = -2146885359
CRYPT_XML_E_NON_UNIQUE_ID: win32more.Foundation.HRESULT = -2146885358
CRYPT_XML_E_LAST: win32more.Foundation.HRESULT = -2146885358
CRYPT_XML_FLAG_ALWAYS_RETURN_ENCODED_OBJECT: UInt32 = 1073741824
CRYPT_XML_FLAG_ENFORCE_ID_NCNAME_FORMAT: UInt32 = 536870912
CRYPT_XML_FLAG_ENFORCE_ID_NAME_FORMAT: UInt32 = 134217728
CRYPT_XML_FLAG_ECDSA_DSIG11: UInt32 = 67108864
CRYPT_XML_STATUS_NO_ERROR: UInt32 = 0
CRYPT_XML_FLAG_ADD_OBJECT_CREATE_COPY: UInt32 = 1
CRYPT_XML_FLAG_CREATE_REFERENCE_AS_OBJECT: UInt32 = 1
CRYPT_XML_DIGEST_REFERENCE_DATA_TRANSFORMED: UInt32 = 1
CRYPT_XML_ALGORITHM_INFO_FIND_BY_URI: UInt32 = 1
CRYPT_XML_ALGORITHM_INFO_FIND_BY_NAME: UInt32 = 2
CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_ALGID: UInt32 = 3
CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_SIGN_ALGID: UInt32 = 4
szFORCE_KEY_PROTECTION: String = 'ForceKeyProtection'
dwFORCE_KEY_PROTECTION_DISABLED: UInt32 = 0
dwFORCE_KEY_PROTECTION_USER_SELECT: UInt32 = 1
dwFORCE_KEY_PROTECTION_HIGH: UInt32 = 2
CRYPTPROTECT_PROMPT_ON_UNPROTECT: UInt32 = 1
CRYPTPROTECT_PROMPT_ON_PROTECT: UInt32 = 2
CRYPTPROTECT_PROMPT_RESERVED: UInt32 = 4
CRYPTPROTECT_PROMPT_STRONG: UInt32 = 8
CRYPTPROTECT_PROMPT_REQUIRE_STRONG: UInt32 = 16
CRYPTPROTECT_UI_FORBIDDEN: UInt32 = 1
CRYPTPROTECT_LOCAL_MACHINE: UInt32 = 4
CRYPTPROTECT_CRED_SYNC: UInt32 = 8
CRYPTPROTECT_AUDIT: UInt32 = 16
CRYPTPROTECT_NO_RECOVERY: UInt32 = 32
CRYPTPROTECT_VERIFY_PROTECTION: UInt32 = 64
CRYPTPROTECT_CRED_REGENERATE: UInt32 = 128
CRYPTPROTECT_FIRST_RESERVED_FLAGVAL: UInt32 = 268435455
CRYPTPROTECT_LAST_RESERVED_FLAGVAL: UInt32 = 4294967295
CRYPTPROTECTMEMORY_BLOCK_SIZE: UInt32 = 16
CRYPTPROTECTMEMORY_SAME_PROCESS: UInt32 = 0
CRYPTPROTECTMEMORY_CROSS_PROCESS: UInt32 = 1
CRYPTPROTECTMEMORY_SAME_LOGON: UInt32 = 2
NCRYPT_MAX_KEY_NAME_LENGTH: UInt32 = 512
NCRYPT_MAX_ALG_ID_LENGTH: UInt32 = 512
MS_KEY_STORAGE_PROVIDER: String = 'Microsoft Software Key Storage Provider'
MS_SMART_CARD_KEY_STORAGE_PROVIDER: String = 'Microsoft Smart Card Key Storage Provider'
MS_PLATFORM_KEY_STORAGE_PROVIDER: String = 'Microsoft Platform Crypto Provider'
MS_NGC_KEY_STORAGE_PROVIDER: String = 'Microsoft Passport Key Storage Provider'
TPM_RSA_SRK_SEAL_KEY: String = 'MICROSOFT_PCP_KSP_RSA_SEAL_KEY_3BD1C4BF-004E-4E2F-8A4D-0BF633DCB074'
NCRYPT_RSA_ALGORITHM: String = 'RSA'
NCRYPT_RSA_SIGN_ALGORITHM: String = 'RSA_SIGN'
NCRYPT_DH_ALGORITHM: String = 'DH'
NCRYPT_DSA_ALGORITHM: String = 'DSA'
NCRYPT_MD2_ALGORITHM: String = 'MD2'
NCRYPT_MD4_ALGORITHM: String = 'MD4'
NCRYPT_MD5_ALGORITHM: String = 'MD5'
NCRYPT_SHA1_ALGORITHM: String = 'SHA1'
NCRYPT_SHA256_ALGORITHM: String = 'SHA256'
NCRYPT_SHA384_ALGORITHM: String = 'SHA384'
NCRYPT_SHA512_ALGORITHM: String = 'SHA512'
NCRYPT_ECDSA_P256_ALGORITHM: String = 'ECDSA_P256'
NCRYPT_ECDSA_P384_ALGORITHM: String = 'ECDSA_P384'
NCRYPT_ECDSA_P521_ALGORITHM: String = 'ECDSA_P521'
NCRYPT_ECDH_P256_ALGORITHM: String = 'ECDH_P256'
NCRYPT_ECDH_P384_ALGORITHM: String = 'ECDH_P384'
NCRYPT_ECDH_P521_ALGORITHM: String = 'ECDH_P521'
NCRYPT_AES_ALGORITHM: String = 'AES'
NCRYPT_RC2_ALGORITHM: String = 'RC2'
NCRYPT_3DES_ALGORITHM: String = '3DES'
NCRYPT_DES_ALGORITHM: String = 'DES'
NCRYPT_DESX_ALGORITHM: String = 'DESX'
NCRYPT_3DES_112_ALGORITHM: String = '3DES_112'
NCRYPT_SP800108_CTR_HMAC_ALGORITHM: String = 'SP800_108_CTR_HMAC'
NCRYPT_SP80056A_CONCAT_ALGORITHM: String = 'SP800_56A_CONCAT'
NCRYPT_PBKDF2_ALGORITHM: String = 'PBKDF2'
NCRYPT_CAPI_KDF_ALGORITHM: String = 'CAPI_KDF'
NCRYPT_ECDSA_ALGORITHM: String = 'ECDSA'
NCRYPT_ECDH_ALGORITHM: String = 'ECDH'
NCRYPT_KEY_STORAGE_ALGORITHM: String = 'KEY_STORAGE'
NCRYPT_HMAC_SHA256_ALGORITHM: String = 'HMAC-SHA256'
NCRYPT_KEY_DERIVATION_INTERFACE: UInt32 = 7
NCRYPT_KEY_PROTECTION_INTERFACE: UInt32 = 65540
NCRYPT_RSA_ALGORITHM_GROUP: String = 'RSA'
NCRYPT_DH_ALGORITHM_GROUP: String = 'DH'
NCRYPT_DSA_ALGORITHM_GROUP: String = 'DSA'
NCRYPT_ECDSA_ALGORITHM_GROUP: String = 'ECDSA'
NCRYPT_ECDH_ALGORITHM_GROUP: String = 'ECDH'
NCRYPT_AES_ALGORITHM_GROUP: String = 'AES'
NCRYPT_RC2_ALGORITHM_GROUP: String = 'RC2'
NCRYPT_DES_ALGORITHM_GROUP: String = 'DES'
NCRYPT_KEY_DERIVATION_GROUP: String = 'KEY_DERIVATION'
NCRYPTBUFFER_VERSION: UInt32 = 0
NCRYPTBUFFER_EMPTY: UInt32 = 0
NCRYPTBUFFER_DATA: UInt32 = 1
NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING: UInt32 = 3
NCRYPTBUFFER_PROTECTION_FLAGS: UInt32 = 4
NCRYPTBUFFER_SSL_CLIENT_RANDOM: UInt32 = 20
NCRYPTBUFFER_SSL_SERVER_RANDOM: UInt32 = 21
NCRYPTBUFFER_SSL_HIGHEST_VERSION: UInt32 = 22
NCRYPTBUFFER_SSL_CLEAR_KEY: UInt32 = 23
NCRYPTBUFFER_SSL_KEY_ARG_DATA: UInt32 = 24
NCRYPTBUFFER_SSL_SESSION_HASH: UInt32 = 25
NCRYPTBUFFER_PKCS_OID: UInt32 = 40
NCRYPTBUFFER_PKCS_ALG_OID: UInt32 = 41
NCRYPTBUFFER_PKCS_ALG_PARAM: UInt32 = 42
NCRYPTBUFFER_PKCS_ALG_ID: UInt32 = 43
NCRYPTBUFFER_PKCS_ATTRS: UInt32 = 44
NCRYPTBUFFER_PKCS_KEY_NAME: UInt32 = 45
NCRYPTBUFFER_PKCS_SECRET: UInt32 = 46
NCRYPTBUFFER_CERT_BLOB: UInt32 = 47
NCRYPTBUFFER_CLAIM_IDBINDING_NONCE: UInt32 = 48
NCRYPTBUFFER_CLAIM_KEYATTESTATION_NONCE: UInt32 = 49
NCRYPTBUFFER_KEY_PROPERTY_FLAGS: UInt32 = 50
NCRYPTBUFFER_ATTESTATIONSTATEMENT_BLOB: UInt32 = 51
NCRYPTBUFFER_ATTESTATION_CLAIM_TYPE: UInt32 = 52
NCRYPTBUFFER_ATTESTATION_CLAIM_CHALLENGE_REQUIRED: UInt32 = 53
NCRYPTBUFFER_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS: UInt32 = 54
NCRYPTBUFFER_ECC_CURVE_NAME: UInt32 = 60
NCRYPTBUFFER_ECC_PARAMETERS: UInt32 = 61
NCRYPTBUFFER_TPM_SEAL_PASSWORD: UInt32 = 70
NCRYPTBUFFER_TPM_SEAL_POLICYINFO: UInt32 = 71
NCRYPTBUFFER_TPM_SEAL_TICKET: UInt32 = 72
NCRYPTBUFFER_TPM_SEAL_NO_DA_PROTECTION: UInt32 = 73
NCRYPTBUFFER_TPM_PLATFORM_CLAIM_PCR_MASK: UInt32 = 80
NCRYPTBUFFER_TPM_PLATFORM_CLAIM_NONCE: UInt32 = 81
NCRYPTBUFFER_TPM_PLATFORM_CLAIM_STATIC_CREATE: UInt32 = 82
NCRYPT_CIPHER_NO_PADDING_FLAG: UInt32 = 0
NCRYPT_CIPHER_BLOCK_PADDING_FLAG: UInt32 = 1
NCRYPT_CIPHER_OTHER_PADDING_FLAG: UInt32 = 2
NCRYPT_PLATFORM_ATTEST_MAGIC: UInt32 = 1146110288
NCRYPT_KEY_ATTEST_MAGIC: UInt32 = 1146110283
NCRYPT_CLAIM_AUTHORITY_ONLY: UInt32 = 1
NCRYPT_CLAIM_SUBJECT_ONLY: UInt32 = 2
NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY: UInt32 = 258
NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT: UInt32 = 3
NCRYPT_CLAIM_VSM_KEY_ATTESTATION_STATEMENT: UInt32 = 4
NCRYPT_CLAIM_UNKNOWN: UInt32 = 4096
NCRYPT_CLAIM_PLATFORM: UInt32 = 65536
NCRYPT_ISOLATED_KEY_FLAG_CREATED_IN_ISOLATION: UInt32 = 1
NCRYPT_ISOLATED_KEY_FLAG_IMPORT_ONLY: UInt32 = 2
NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_V0: UInt32 = 0
NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION: UInt32 = 0
NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_V0: UInt32 = 0
NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION: UInt32 = 0
NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_V0: UInt32 = 0
NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_CURRENT_VERSION: UInt32 = 0
NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_V0: UInt32 = 0
NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION: UInt32 = 0
NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_V0: UInt32 = 0
NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION: UInt32 = 0
NCRYPT_PAD_CIPHER_FLAG: UInt32 = 16
NCRYPT_ATTESTATION_FLAG: UInt32 = 32
NCRYPT_SEALING_FLAG: UInt32 = 256
NCRYPT_DO_NOT_FINALIZE_FLAG: UInt32 = 1024
NCRYPT_EXPORT_LEGACY_FLAG: UInt32 = 2048
NCRYPT_IGNORE_DEVICE_STATE_FLAG: UInt32 = 4096
NCRYPT_TREAT_NIST_AS_GENERIC_ECC_FLAG: UInt32 = 8192
NCRYPT_NO_CACHED_PASSWORD: UInt32 = 16384
NCRYPT_PROTECT_TO_LOCAL_SYSTEM: UInt32 = 32768
NCRYPT_PREFER_VIRTUAL_ISOLATION_FLAG: UInt32 = 65536
NCRYPT_USE_VIRTUAL_ISOLATION_FLAG: UInt32 = 131072
NCRYPT_USE_PER_BOOT_KEY_FLAG: UInt32 = 262144
NCRYPT_KEY_DERIVATION_OPERATION: UInt32 = 64
NCRYPT_AUTHORITY_KEY_FLAG: UInt32 = 256
NCRYPT_NAME_PROPERTY: String = 'Name'
NCRYPT_UNIQUE_NAME_PROPERTY: String = 'Unique Name'
NCRYPT_ALGORITHM_PROPERTY: String = 'Algorithm Name'
NCRYPT_LENGTH_PROPERTY: String = 'Length'
NCRYPT_LENGTHS_PROPERTY: String = 'Lengths'
NCRYPT_BLOCK_LENGTH_PROPERTY: String = 'Block Length'
NCRYPT_PUBLIC_LENGTH_PROPERTY: String = 'PublicKeyLength'
NCRYPT_SIGNATURE_LENGTH_PROPERTY: String = 'SignatureLength'
NCRYPT_CHAINING_MODE_PROPERTY: String = 'Chaining Mode'
NCRYPT_AUTH_TAG_LENGTH: String = 'AuthTagLength'
NCRYPT_UI_POLICY_PROPERTY: String = 'UI Policy'
NCRYPT_EXPORT_POLICY_PROPERTY: String = 'Export Policy'
NCRYPT_WINDOW_HANDLE_PROPERTY: String = 'HWND Handle'
NCRYPT_USE_CONTEXT_PROPERTY: String = 'Use Context'
NCRYPT_IMPL_TYPE_PROPERTY: String = 'Impl Type'
NCRYPT_KEY_USAGE_PROPERTY: String = 'Key Usage'
NCRYPT_KEY_TYPE_PROPERTY: String = 'Key Type'
NCRYPT_VERSION_PROPERTY: String = 'Version'
NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY: String = 'Security Descr Support'
NCRYPT_SECURITY_DESCR_PROPERTY: String = 'Security Descr'
NCRYPT_USE_COUNT_ENABLED_PROPERTY: String = 'Enabled Use Count'
NCRYPT_USE_COUNT_PROPERTY: String = 'Use Count'
NCRYPT_LAST_MODIFIED_PROPERTY: String = 'Modified'
NCRYPT_MAX_NAME_LENGTH_PROPERTY: String = 'Max Name Length'
NCRYPT_ALGORITHM_GROUP_PROPERTY: String = 'Algorithm Group'
NCRYPT_DH_PARAMETERS_PROPERTY: String = 'DHParameters'
NCRYPT_ECC_PARAMETERS_PROPERTY: String = 'ECCParameters'
NCRYPT_ECC_CURVE_NAME_PROPERTY: String = 'ECCCurveName'
NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY: String = 'ECCCurveNameList'
NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY: String = 'Virtual Iso'
NCRYPT_USE_PER_BOOT_KEY_PROPERTY: String = 'Per Boot Key'
NCRYPT_PROVIDER_HANDLE_PROPERTY: String = 'Provider Handle'
NCRYPT_PIN_PROPERTY: String = 'SmartCardPin'
NCRYPT_READER_PROPERTY: String = 'SmartCardReader'
NCRYPT_SMARTCARD_GUID_PROPERTY: String = 'SmartCardGuid'
NCRYPT_CERTIFICATE_PROPERTY: String = 'SmartCardKeyCertificate'
NCRYPT_PIN_PROMPT_PROPERTY: String = 'SmartCardPinPrompt'
NCRYPT_USER_CERTSTORE_PROPERTY: String = 'SmartCardUserCertStore'
NCRYPT_ROOT_CERTSTORE_PROPERTY: String = 'SmartcardRootCertStore'
NCRYPT_SECURE_PIN_PROPERTY: String = 'SmartCardSecurePin'
NCRYPT_ASSOCIATED_ECDH_KEY: String = 'SmartCardAssociatedECDHKey'
NCRYPT_SCARD_PIN_ID: String = 'SmartCardPinId'
NCRYPT_SCARD_PIN_INFO: String = 'SmartCardPinInfo'
NCRYPT_READER_ICON_PROPERTY: String = 'SmartCardReaderIcon'
NCRYPT_KDF_SECRET_VALUE: String = 'KDFKeySecret'
NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY: String = 'SmartCardDismissUITimeoutSeconds'
NCRYPT_PCP_PLATFORM_TYPE_PROPERTY: String = 'PCP_PLATFORM_TYPE'
NCRYPT_PCP_PROVIDER_VERSION_PROPERTY: String = 'PCP_PROVIDER_VERSION'
NCRYPT_PCP_EKPUB_PROPERTY: String = 'PCP_EKPUB'
NCRYPT_PCP_EKCERT_PROPERTY: String = 'PCP_EKCERT'
NCRYPT_PCP_EKNVCERT_PROPERTY: String = 'PCP_EKNVCERT'
NCRYPT_PCP_RSA_EKPUB_PROPERTY: String = 'PCP_RSA_EKPUB'
NCRYPT_PCP_RSA_EKCERT_PROPERTY: String = 'PCP_RSA_EKCERT'
NCRYPT_PCP_RSA_EKNVCERT_PROPERTY: String = 'PCP_RSA_EKNVCERT'
NCRYPT_PCP_ECC_EKPUB_PROPERTY: String = 'PCP_ECC_EKPUB'
NCRYPT_PCP_ECC_EKCERT_PROPERTY: String = 'PCP_ECC_EKCERT'
NCRYPT_PCP_ECC_EKNVCERT_PROPERTY: String = 'PCP_ECC_EKNVCERT'
NCRYPT_PCP_SRKPUB_PROPERTY: String = 'PCP_SRKPUB'
NCRYPT_PCP_PCRTABLE_PROPERTY: String = 'PCP_PCRTABLE'
NCRYPT_PCP_CHANGEPASSWORD_PROPERTY: String = 'PCP_CHANGEPASSWORD'
NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY: String = 'PCP_PASSWORD_REQUIRED'
NCRYPT_PCP_USAGEAUTH_PROPERTY: String = 'PCP_USAGEAUTH'
NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY: String = 'PCP_MIGRATIONPASSWORD'
NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY: String = 'PCP_EXPORT_ALLOWED'
NCRYPT_PCP_STORAGEPARENT_PROPERTY: String = 'PCP_STORAGEPARENT'
NCRYPT_PCP_PROVIDERHANDLE_PROPERTY: String = 'PCP_PROVIDERMHANDLE'
NCRYPT_PCP_PLATFORMHANDLE_PROPERTY: String = 'PCP_PLATFORMHANDLE'
NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRMASK'
NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRDIGESTLIST'
NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRDIGEST'
NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY: String = 'PCP_KEY_USAGE_POLICY'
NCRYPT_PCP_RSA_SCHEME_PROPERTY: String = 'PCP_RSA_SCHEME'
NCRYPT_PCP_TPM12_IDBINDING_PROPERTY: String = 'PCP_TPM12_IDBINDING'
NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY: String = 'PCP_TPM12_IDBINDING_DYNAMIC'
NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY: String = 'PCP_TPM12_IDACTIVATION'
NCRYPT_PCP_KEYATTESTATION_PROPERTY: String = 'PCP_TPM12_KEYATTESTATION'
NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY: String = 'PCP_ALTERNATE_KEY_STORAGE_LOCATION'
NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY: String = 'PCP_PLATFORM_BINDING_PCRALGID'
NCRYPT_PCP_HMAC_AUTH_POLICYREF: String = 'PCP_HMAC_AUTH_POLICYREF'
NCRYPT_PCP_HMAC_AUTH_POLICYINFO: String = 'PCP_HMAC_AUTH_POLICYINFO'
NCRYPT_PCP_HMAC_AUTH_NONCE: String = 'PCP_HMAC_AUTH_NONCE'
NCRYPT_PCP_HMAC_AUTH_SIGNATURE: String = 'PCP_HMAC_AUTH_SIGNATURE'
NCRYPT_PCP_HMAC_AUTH_TICKET: String = 'PCP_HMAC_AUTH_TICKET'
NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY: String = 'PCP_NO_DA_PROTECTION'
NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY: String = 'PCP_TPM_MANUFACTURER_ID'
NCRYPT_PCP_TPM_FW_VERSION_PROPERTY: String = 'PCP_TPM_FW_VERSION'
NCRYPT_PCP_TPM2BNAME_PROPERTY: String = 'PCP_TPM2BNAME'
NCRYPT_PCP_TPM_VERSION_PROPERTY: String = 'PCP_TPM_VERSION'
NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY: String = 'PCP_RAW_POLICYDIGEST'
NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY: String = 'PCP_KEY_CREATIONHASH'
NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY: String = 'PCP_KEY_CREATIONTICKET'
NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY: String = 'PCP_RSA_SCHEME_HASH_ALG'
NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY: String = 'PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED'
NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY: String = 'PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY'
IFX_RSA_KEYGEN_VUL_NOT_AFFECTED: UInt32 = 0
IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_1: UInt32 = 1
IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_2: UInt32 = 2
NCRYPT_PCP_SESSIONID_PROPERTY: String = 'PCP_SESSIONID'
NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY: String = 'PSS Salt Size'
NCRYPT_TPM_PSS_SALT_SIZE_UNKNOWN: UInt32 = 0
NCRYPT_TPM_PSS_SALT_SIZE_MAXIMUM: UInt32 = 1
NCRYPT_TPM_PSS_SALT_SIZE_HASHSIZE: UInt32 = 2
NCRYPT_PCP_INTERMEDIATE_CA_EKCERT_PROPERTY: String = 'PCP_INTERMEDIATE_CA_EKCERT'
NCRYPT_PCP_PCRTABLE_ALGORITHM_PROPERTY: String = 'PCP_PCRTABLE_ALGORITHM'
NCRYPT_PCP_SYMMETRIC_KEYBITS_PROPERTY: String = 'PCP_SYMMETRIC_KEYBITS'
NCRYPT_TPM_PAD_PSS_IGNORE_SALT: UInt32 = 32
NCRYPT_TPM12_PROVIDER: UInt32 = 65536
NCRYPT_PCP_SIGNATURE_KEY: UInt32 = 1
NCRYPT_PCP_ENCRYPTION_KEY: UInt32 = 2
NCRYPT_PCP_STORAGE_KEY: UInt32 = 4
NCRYPT_PCP_IDENTITY_KEY: UInt32 = 8
NCRYPT_PCP_HMACVERIFICATION_KEY: UInt32 = 16
NCRYPT_SCARD_NGC_KEY_NAME: String = 'SmartCardNgcKeyName'
NCRYPT_INITIALIZATION_VECTOR: String = 'IV'
NCRYPT_CHANGEPASSWORD_PROPERTY: String = 'PCP_CHANGEPASSWORD'
NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY: String = 'PCP_ALTERNATE_KEY_STORAGE_LOCATION'
NCRYPT_KEY_ACCESS_POLICY_PROPERTY: String = 'Key Access Policy'
NCRYPT_MAX_PROPERTY_NAME: UInt32 = 64
NCRYPT_MAX_PROPERTY_DATA: UInt32 = 1048576
NCRYPT_ALLOW_EXPORT_FLAG: UInt32 = 1
NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG: UInt32 = 2
NCRYPT_ALLOW_ARCHIVING_FLAG: UInt32 = 4
NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG: UInt32 = 8
NCRYPT_IMPL_HARDWARE_FLAG: UInt32 = 1
NCRYPT_IMPL_SOFTWARE_FLAG: UInt32 = 2
NCRYPT_IMPL_REMOVABLE_FLAG: UInt32 = 8
NCRYPT_IMPL_HARDWARE_RNG_FLAG: UInt32 = 16
NCRYPT_IMPL_VIRTUAL_ISOLATION_FLAG: UInt32 = 32
NCRYPT_ALLOW_DECRYPT_FLAG: UInt32 = 1
NCRYPT_ALLOW_SIGNING_FLAG: UInt32 = 2
NCRYPT_ALLOW_KEY_AGREEMENT_FLAG: UInt32 = 4
NCRYPT_ALLOW_KEY_IMPORT_FLAG: UInt32 = 8
NCRYPT_ALLOW_ALL_USAGES: UInt32 = 16777215
NCRYPT_UI_PROTECT_KEY_FLAG: UInt32 = 1
NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG: UInt32 = 2
NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG: UInt32 = 4
NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG: UInt32 = 8
NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY: String = 'PinCacheFreeApplicationTicket'
NCRYPT_PIN_CACHE_FLAGS_PROPERTY: String = 'PinCacheFlags'
NCRYPT_PIN_CACHE_DISABLE_DPL_FLAG: UInt32 = 1
NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY: String = 'PinCacheApplicationTicket'
NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY: String = 'PinCacheApplicationImage'
NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY: String = 'PinCacheApplicationStatus'
NCRYPT_PIN_CACHE_PIN_PROPERTY: String = 'PinCachePin'
NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY: String = 'PinCacheIsGestureRequired'
NCRYPT_PIN_CACHE_REQUIRE_GESTURE_FLAG: UInt32 = 1
NCRYPT_PIN_CACHE_APPLICATION_TICKET_BYTE_LENGTH: UInt32 = 90
NCRYPT_PIN_CACHE_CLEAR_PROPERTY: String = 'PinCacheClear'
NCRYPT_PIN_CACHE_CLEAR_FOR_CALLING_PROCESS_OPTION: UInt32 = 1
NCRYPT_KEY_ACCESS_POLICY_VERSION: UInt32 = 1
NCRYPT_ALLOW_SILENT_KEY_ACCESS: UInt32 = 1
NCRYPT_CIPHER_KEY_BLOB_MAGIC: UInt32 = 1380470851
NCRYPT_KDF_KEY_BLOB_MAGIC: UInt32 = 826688587
NCRYPT_PROTECTED_KEY_BLOB_MAGIC: UInt32 = 1263817296
NCRYPT_CIPHER_KEY_BLOB: String = 'CipherKeyBlob'
NCRYPT_KDF_KEY_BLOB: String = 'KDFKeyBlob'
NCRYPT_PROTECTED_KEY_BLOB: String = 'ProtectedKeyBlob'
NCRYPT_TPM_LOADABLE_KEY_BLOB: String = 'PcpTpmProtectedKeyBlob'
NCRYPT_TPM_LOADABLE_KEY_BLOB_MAGIC: UInt32 = 1297371211
NCRYPT_PKCS7_ENVELOPE_BLOB: String = 'PKCS7_ENVELOPE'
NCRYPT_PKCS8_PRIVATE_KEY_BLOB: String = 'PKCS8_PRIVATEKEY'
NCRYPT_OPAQUETRANSPORT_BLOB: String = 'OpaqueTransport'
NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB: String = 'ISOLATED_KEY_ENVELOPE'
NCRYPT_DESCR_DELIMITER_OR: String = 'OR'
NCRYPT_DESCR_DELIMITER_AND: String = 'AND'
NCRYPT_DESCR_EQUAL: String = '='
MS_KEY_PROTECTION_PROVIDER: String = 'Microsoft Key Protection Provider'
NCRYPT_KEY_PROTECTION_ALGORITHM_SID: String = 'SID'
NCRYPT_KEY_PROTECTION_ALGORITHM_LOCAL: String = 'LOCAL'
NCRYPT_KEY_PROTECTION_LOCAL_LOGON: String = 'logon'
NCRYPT_KEY_PROTECTION_LOCAL_USER: String = 'user'
NCRYPT_KEY_PROTECTION_LOCAL_MACHINE: String = 'machine'
NCRYPT_KEY_PROTECTION_ALGORITHM_SDDL: String = 'SDDL'
NCRYPT_KEY_PROTECTION_ALGORITHM_WEBCREDENTIALS: String = 'WEBCREDENTIALS'
NCRYPT_KEY_PROTECTION_ALGORITHM_LOCKEDCREDENTIALS: String = 'LOCKEDCREDENTIALS'
NCRYPT_KEY_PROTECTION_ALGORITHM_CERTIFICATE: String = 'CERTIFICATE'
NCRYPT_KEY_PROTECTION_CERT_HASHID: String = 'HashId'
NCRYPT_KEY_PROTECTION_CERT_CERTBLOB: String = 'CertBlob'
NCRYPT_NAMED_DESCRIPTOR_FLAG: UInt32 = 1
NCRYPT_PROTECTION_INFO_TYPE_DESCRIPTOR_STRING: UInt32 = 1
ALG_CLASS_ANY: UInt32 = 0
ALG_CLASS_SIGNATURE: UInt32 = 8192
ALG_CLASS_MSG_ENCRYPT: UInt32 = 16384
ALG_CLASS_DATA_ENCRYPT: UInt32 = 24576
ALG_CLASS_HASH: UInt32 = 32768
ALG_CLASS_KEY_EXCHANGE: UInt32 = 40960
ALG_CLASS_ALL: UInt32 = 57344
ALG_TYPE_ANY: UInt32 = 0
ALG_TYPE_DSS: UInt32 = 512
ALG_TYPE_RSA: UInt32 = 1024
ALG_TYPE_BLOCK: UInt32 = 1536
ALG_TYPE_STREAM: UInt32 = 2048
ALG_TYPE_DH: UInt32 = 2560
ALG_TYPE_SECURECHANNEL: UInt32 = 3072
ALG_TYPE_ECDH: UInt32 = 3584
ALG_TYPE_THIRDPARTY: UInt32 = 4096
ALG_SID_ANY: UInt32 = 0
ALG_SID_THIRDPARTY_ANY: UInt32 = 0
ALG_SID_RSA_ANY: UInt32 = 0
ALG_SID_RSA_PKCS: UInt32 = 1
ALG_SID_RSA_MSATWORK: UInt32 = 2
ALG_SID_RSA_ENTRUST: UInt32 = 3
ALG_SID_RSA_PGP: UInt32 = 4
ALG_SID_DSS_ANY: UInt32 = 0
ALG_SID_DSS_PKCS: UInt32 = 1
ALG_SID_DSS_DMS: UInt32 = 2
ALG_SID_ECDSA: UInt32 = 3
ALG_SID_DES: UInt32 = 1
ALG_SID_3DES: UInt32 = 3
ALG_SID_DESX: UInt32 = 4
ALG_SID_IDEA: UInt32 = 5
ALG_SID_CAST: UInt32 = 6
ALG_SID_SAFERSK64: UInt32 = 7
ALG_SID_SAFERSK128: UInt32 = 8
ALG_SID_3DES_112: UInt32 = 9
ALG_SID_CYLINK_MEK: UInt32 = 12
ALG_SID_RC5: UInt32 = 13
ALG_SID_AES_128: UInt32 = 14
ALG_SID_AES_192: UInt32 = 15
ALG_SID_AES_256: UInt32 = 16
ALG_SID_AES: UInt32 = 17
ALG_SID_SKIPJACK: UInt32 = 10
ALG_SID_TEK: UInt32 = 11
CRYPT_MODE_CBCI: UInt32 = 6
CRYPT_MODE_CFBP: UInt32 = 7
CRYPT_MODE_OFBP: UInt32 = 8
CRYPT_MODE_CBCOFM: UInt32 = 9
CRYPT_MODE_CBCOFMI: UInt32 = 10
ALG_SID_RC2: UInt32 = 2
ALG_SID_RC4: UInt32 = 1
ALG_SID_SEAL: UInt32 = 2
ALG_SID_DH_SANDF: UInt32 = 1
ALG_SID_DH_EPHEM: UInt32 = 2
ALG_SID_AGREED_KEY_ANY: UInt32 = 3
ALG_SID_KEA: UInt32 = 4
ALG_SID_ECDH: UInt32 = 5
ALG_SID_ECDH_EPHEM: UInt32 = 6
ALG_SID_MD2: UInt32 = 1
ALG_SID_MD4: UInt32 = 2
ALG_SID_MD5: UInt32 = 3
ALG_SID_SHA: UInt32 = 4
ALG_SID_SHA1: UInt32 = 4
ALG_SID_MAC: UInt32 = 5
ALG_SID_RIPEMD: UInt32 = 6
ALG_SID_RIPEMD160: UInt32 = 7
ALG_SID_SSL3SHAMD5: UInt32 = 8
ALG_SID_HMAC: UInt32 = 9
ALG_SID_TLS1PRF: UInt32 = 10
ALG_SID_HASH_REPLACE_OWF: UInt32 = 11
ALG_SID_SHA_256: UInt32 = 12
ALG_SID_SHA_384: UInt32 = 13
ALG_SID_SHA_512: UInt32 = 14
ALG_SID_SSL3_MASTER: UInt32 = 1
ALG_SID_SCHANNEL_MASTER_HASH: UInt32 = 2
ALG_SID_SCHANNEL_MAC_KEY: UInt32 = 3
ALG_SID_PCT1_MASTER: UInt32 = 4
ALG_SID_SSL2_MASTER: UInt32 = 5
ALG_SID_TLS1_MASTER: UInt32 = 6
ALG_SID_SCHANNEL_ENC_KEY: UInt32 = 7
ALG_SID_ECMQV: UInt32 = 1
ALG_SID_EXAMPLE: UInt32 = 80
SIGNATURE_RESOURCE_NUMBER: UInt32 = 666
CRYPT_VERIFYCONTEXT: UInt32 = 4026531840
CRYPT_NEWKEYSET: UInt32 = 8
CRYPT_DELETEKEYSET: UInt32 = 16
CRYPT_SILENT: UInt32 = 64
CRYPT_DEFAULT_CONTAINER_OPTIONAL: UInt32 = 128
CRYPT_UPDATE_KEY: UInt32 = 8
CRYPT_USER_PROTECTED_STRONG: UInt32 = 1048576
RSA1024BIT_KEY: UInt32 = 67108864
CRYPT_SERVER: UInt32 = 1024
KEY_LENGTH_MASK: UInt32 = 4294901760
CRYPT_DECRYPT_RSA_NO_PADDING_CHECK: UInt32 = 32
CRYPT_SECRETDIGEST: UInt32 = 1
CRYPT_OWF_REPL_LM_HASH: UInt32 = 1
CRYPT_LITTLE_ENDIAN: UInt32 = 1
CRYPT_NOHASHOID: UInt32 = 1
CRYPT_TYPE2_FORMAT: UInt32 = 2
CRYPT_X931_FORMAT: UInt32 = 4
CRYPT_MACHINE_DEFAULT: UInt32 = 1
CRYPT_USER_DEFAULT: UInt32 = 2
CRYPT_DELETE_DEFAULT: UInt32 = 4
SIMPLEBLOB: UInt32 = 1
PUBLICKEYBLOB: UInt32 = 6
PRIVATEKEYBLOB: UInt32 = 7
PLAINTEXTKEYBLOB: UInt32 = 8
OPAQUEKEYBLOB: UInt32 = 9
PUBLICKEYBLOBEX: UInt32 = 10
SYMMETRICWRAPKEYBLOB: UInt32 = 11
KEYSTATEBLOB: UInt32 = 12
CRYPT_USERDATA: UInt32 = 1
KP_IV: UInt32 = 1
KP_PADDING: UInt32 = 3
KP_MODE: UInt32 = 4
KP_MODE_BITS: UInt32 = 5
KP_P: UInt32 = 11
KP_G: UInt32 = 12
KP_Q: UInt32 = 13
KP_X: UInt32 = 14
KP_Y: UInt32 = 15
KP_RA: UInt32 = 16
KP_RB: UInt32 = 17
KP_INFO: UInt32 = 18
KP_EFFECTIVE_KEYLEN: UInt32 = 19
KP_SCHANNEL_ALG: UInt32 = 20
KP_CLIENT_RANDOM: UInt32 = 21
KP_SERVER_RANDOM: UInt32 = 22
KP_RP: UInt32 = 23
KP_PRECOMP_MD5: UInt32 = 24
KP_PRECOMP_SHA: UInt32 = 25
KP_CLEAR_KEY: UInt32 = 27
KP_PUB_EX_LEN: UInt32 = 28
KP_PUB_EX_VAL: UInt32 = 29
KP_KEYVAL: UInt32 = 30
KP_ADMIN_PIN: UInt32 = 31
KP_KEYEXCHANGE_PIN: UInt32 = 32
KP_SIGNATURE_PIN: UInt32 = 33
KP_PREHASH: UInt32 = 34
KP_ROUNDS: UInt32 = 35
KP_OAEP_PARAMS: UInt32 = 36
KP_CMS_KEY_INFO: UInt32 = 37
KP_CMS_DH_KEY_INFO: UInt32 = 38
KP_PUB_PARAMS: UInt32 = 39
KP_VERIFY_PARAMS: UInt32 = 40
KP_HIGHEST_VERSION: UInt32 = 41
KP_PIN_ID: UInt32 = 43
KP_PIN_INFO: UInt32 = 44
PKCS5_PADDING: UInt32 = 1
RANDOM_PADDING: UInt32 = 2
ZERO_PADDING: UInt32 = 3
CRYPT_MODE_CBC: UInt32 = 1
CRYPT_MODE_ECB: UInt32 = 2
CRYPT_MODE_OFB: UInt32 = 3
CRYPT_MODE_CFB: UInt32 = 4
CRYPT_MODE_CTS: UInt32 = 5
CRYPT_ENCRYPT: UInt32 = 1
CRYPT_DECRYPT: UInt32 = 2
CRYPT_EXPORT: UInt32 = 4
CRYPT_READ: UInt32 = 8
CRYPT_WRITE: UInt32 = 16
CRYPT_MAC: UInt32 = 32
CRYPT_EXPORT_KEY: UInt32 = 64
CRYPT_IMPORT_KEY: UInt32 = 128
CRYPT_ARCHIVE: UInt32 = 256
HP_ALGID: UInt32 = 1
HP_HASHSIZE: UInt32 = 4
HP_TLS1PRF_LABEL: UInt32 = 6
HP_TLS1PRF_SEED: UInt32 = 7
CRYPT_FAILED: UInt32 = 0
CRYPT_SUCCEED: UInt32 = 1
PP_ENUMALGS: UInt32 = 1
PP_ENUMCONTAINERS: UInt32 = 2
PP_IMPTYPE: UInt32 = 3
PP_NAME: UInt32 = 4
PP_VERSION: UInt32 = 5
PP_CONTAINER: UInt32 = 6
PP_CHANGE_PASSWORD: UInt32 = 7
PP_CERTCHAIN: UInt32 = 9
PP_KEY_TYPE_SUBTYPE: UInt32 = 10
PP_PROVTYPE: UInt32 = 16
PP_KEYSTORAGE: UInt32 = 17
PP_APPLI_CERT: UInt32 = 18
PP_SYM_KEYSIZE: UInt32 = 19
PP_SESSION_KEYSIZE: UInt32 = 20
PP_ENUMALGS_EX: UInt32 = 22
PP_ENUMMANDROOTS: UInt32 = 25
PP_ENUMELECTROOTS: UInt32 = 26
PP_KEYSET_TYPE: UInt32 = 27
PP_ADMIN_PIN: UInt32 = 31
PP_SIG_KEYSIZE_INC: UInt32 = 34
PP_KEYX_KEYSIZE_INC: UInt32 = 35
PP_UNIQUE_CONTAINER: UInt32 = 36
PP_SGC_INFO: UInt32 = 37
PP_KEYSPEC: UInt32 = 39
PP_ENUMEX_SIGNING_PROT: UInt32 = 40
PP_CRYPT_COUNT_KEY_USE: UInt32 = 41
PP_SMARTCARD_GUID: UInt32 = 45
PP_SMARTCARD_READER_ICON: UInt32 = 47
CRYPT_FIRST: UInt32 = 1
CRYPT_NEXT: UInt32 = 2
CRYPT_SGC_ENUM: UInt32 = 4
CRYPT_IMPL_HARDWARE: UInt32 = 1
CRYPT_IMPL_SOFTWARE: UInt32 = 2
CRYPT_IMPL_MIXED: UInt32 = 3
CRYPT_IMPL_UNKNOWN: UInt32 = 4
CRYPT_IMPL_REMOVABLE: UInt32 = 8
CRYPT_SEC_DESCR: UInt32 = 1
CRYPT_PSTORE: UInt32 = 2
CRYPT_UI_PROMPT: UInt32 = 4
CRYPT_FLAG_PCT1: UInt32 = 1
CRYPT_FLAG_SSL2: UInt32 = 2
CRYPT_FLAG_SSL3: UInt32 = 4
CRYPT_FLAG_TLS1: UInt32 = 8
CRYPT_FLAG_IPSEC: UInt32 = 16
CRYPT_FLAG_SIGNING: UInt32 = 32
CRYPT_SGC: UInt32 = 1
CRYPT_FASTSGC: UInt32 = 2
PP_CONTEXT_INFO: UInt32 = 11
PP_DISMISS_PIN_UI_SEC: UInt32 = 49
PROV_RSA_FULL: UInt32 = 1
PROV_RSA_SIG: UInt32 = 2
PROV_DSS: UInt32 = 3
PROV_FORTEZZA: UInt32 = 4
PROV_MS_EXCHANGE: UInt32 = 5
PROV_SSL: UInt32 = 6
PROV_RSA_SCHANNEL: UInt32 = 12
PROV_DSS_DH: UInt32 = 13
PROV_EC_ECDSA_SIG: UInt32 = 14
PROV_EC_ECNRA_SIG: UInt32 = 15
PROV_EC_ECDSA_FULL: UInt32 = 16
PROV_EC_ECNRA_FULL: UInt32 = 17
PROV_DH_SCHANNEL: UInt32 = 18
PROV_SPYRUS_LYNKS: UInt32 = 20
PROV_RNG: UInt32 = 21
PROV_INTEL_SEC: UInt32 = 22
PROV_REPLACE_OWF: UInt32 = 23
PROV_RSA_AES: UInt32 = 24
PROV_STT_MER: UInt32 = 7
PROV_STT_ACQ: UInt32 = 8
PROV_STT_BRND: UInt32 = 9
PROV_STT_ROOT: UInt32 = 10
PROV_STT_ISS: UInt32 = 11
MS_DEF_PROV_A: String = 'Microsoft Base Cryptographic Provider v1.0'
MS_DEF_PROV_W: String = 'Microsoft Base Cryptographic Provider v1.0'
MS_DEF_PROV: String = 'Microsoft Base Cryptographic Provider v1.0'
MS_ENHANCED_PROV_A: String = 'Microsoft Enhanced Cryptographic Provider v1.0'
MS_ENHANCED_PROV_W: String = 'Microsoft Enhanced Cryptographic Provider v1.0'
MS_ENHANCED_PROV: String = 'Microsoft Enhanced Cryptographic Provider v1.0'
MS_STRONG_PROV_A: String = 'Microsoft Strong Cryptographic Provider'
MS_STRONG_PROV_W: String = 'Microsoft Strong Cryptographic Provider'
MS_STRONG_PROV: String = 'Microsoft Strong Cryptographic Provider'
MS_DEF_RSA_SIG_PROV_A: String = 'Microsoft RSA Signature Cryptographic Provider'
MS_DEF_RSA_SIG_PROV_W: String = 'Microsoft RSA Signature Cryptographic Provider'
MS_DEF_RSA_SIG_PROV: String = 'Microsoft RSA Signature Cryptographic Provider'
MS_DEF_RSA_SCHANNEL_PROV_A: String = 'Microsoft RSA SChannel Cryptographic Provider'
MS_DEF_RSA_SCHANNEL_PROV_W: String = 'Microsoft RSA SChannel Cryptographic Provider'
MS_DEF_RSA_SCHANNEL_PROV: String = 'Microsoft RSA SChannel Cryptographic Provider'
MS_DEF_DSS_PROV_A: String = 'Microsoft Base DSS Cryptographic Provider'
MS_DEF_DSS_PROV_W: String = 'Microsoft Base DSS Cryptographic Provider'
MS_DEF_DSS_PROV: String = 'Microsoft Base DSS Cryptographic Provider'
MS_DEF_DSS_DH_PROV_A: String = 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider'
MS_DEF_DSS_DH_PROV_W: String = 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider'
MS_DEF_DSS_DH_PROV: String = 'Microsoft Base DSS and Diffie-Hellman Cryptographic Provider'
MS_ENH_DSS_DH_PROV_A: String = 'Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider'
MS_ENH_DSS_DH_PROV_W: String = 'Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider'
MS_ENH_DSS_DH_PROV: String = 'Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider'
MS_DEF_DH_SCHANNEL_PROV_A: String = 'Microsoft DH SChannel Cryptographic Provider'
MS_DEF_DH_SCHANNEL_PROV_W: String = 'Microsoft DH SChannel Cryptographic Provider'
MS_DEF_DH_SCHANNEL_PROV: String = 'Microsoft DH SChannel Cryptographic Provider'
MS_SCARD_PROV_A: String = 'Microsoft Base Smart Card Crypto Provider'
MS_SCARD_PROV_W: String = 'Microsoft Base Smart Card Crypto Provider'
MS_SCARD_PROV: String = 'Microsoft Base Smart Card Crypto Provider'
MS_ENH_RSA_AES_PROV_A: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider'
MS_ENH_RSA_AES_PROV_W: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider'
MS_ENH_RSA_AES_PROV_XP_A: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)'
MS_ENH_RSA_AES_PROV_XP_W: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)'
MS_ENH_RSA_AES_PROV_XP: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)'
MS_ENH_RSA_AES_PROV: String = 'Microsoft Enhanced RSA and AES Cryptographic Provider'
MAXUIDLEN: UInt32 = 64
EXPO_OFFLOAD_REG_VALUE: String = 'ExpoOffload'
EXPO_OFFLOAD_FUNC_NAME: String = 'OffloadModExpo'
szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS: String = 'Software\\Policies\\Microsoft\\Cryptography'
szKEY_CACHE_ENABLED: String = 'CachePrivateKeys'
szKEY_CACHE_SECONDS: String = 'PrivateKeyLifetimeSeconds'
szPRIV_KEY_CACHE_MAX_ITEMS: String = 'PrivKeyCacheMaxItems'
cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT: UInt32 = 20
szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS: String = 'PrivKeyCachePurgeIntervalSeconds'
cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT: UInt32 = 86400
CUR_BLOB_VERSION: UInt32 = 2
SCHANNEL_MAC_KEY: UInt32 = 0
SCHANNEL_ENC_KEY: UInt32 = 1
INTERNATIONAL_USAGE: UInt32 = 1
szOID_RSA: String = '1.2.840.113549'
szOID_PKCS: String = '1.2.840.113549.1'
szOID_RSA_HASH: String = '1.2.840.113549.2'
szOID_RSA_ENCRYPT: String = '1.2.840.113549.3'
szOID_PKCS_1: String = '1.2.840.113549.1.1'
szOID_PKCS_2: String = '1.2.840.113549.1.2'
szOID_PKCS_3: String = '1.2.840.113549.1.3'
szOID_PKCS_4: String = '1.2.840.113549.1.4'
szOID_PKCS_5: String = '1.2.840.113549.1.5'
szOID_PKCS_6: String = '1.2.840.113549.1.6'
szOID_PKCS_7: String = '1.2.840.113549.1.7'
szOID_PKCS_8: String = '1.2.840.113549.1.8'
szOID_PKCS_9: String = '1.2.840.113549.1.9'
szOID_PKCS_10: String = '1.2.840.113549.1.10'
szOID_PKCS_12: String = '1.2.840.113549.1.12'
szOID_RSA_RSA: String = '1.2.840.113549.1.1.1'
szOID_RSA_MD2RSA: String = '1.2.840.113549.1.1.2'
szOID_RSA_MD4RSA: String = '1.2.840.113549.1.1.3'
szOID_RSA_MD5RSA: String = '1.2.840.113549.1.1.4'
szOID_RSA_SHA1RSA: String = '1.2.840.113549.1.1.5'
szOID_RSA_SETOAEP_RSA: String = '1.2.840.113549.1.1.6'
szOID_RSAES_OAEP: String = '1.2.840.113549.1.1.7'
szOID_RSA_MGF1: String = '1.2.840.113549.1.1.8'
szOID_RSA_PSPECIFIED: String = '1.2.840.113549.1.1.9'
szOID_RSA_SSA_PSS: String = '1.2.840.113549.1.1.10'
szOID_RSA_SHA256RSA: String = '1.2.840.113549.1.1.11'
szOID_RSA_SHA384RSA: String = '1.2.840.113549.1.1.12'
szOID_RSA_SHA512RSA: String = '1.2.840.113549.1.1.13'
szOID_RSA_DH: String = '1.2.840.113549.1.3.1'
szOID_RSA_data: String = '1.2.840.113549.1.7.1'
szOID_RSA_signedData: String = '1.2.840.113549.1.7.2'
szOID_RSA_envelopedData: String = '1.2.840.113549.1.7.3'
szOID_RSA_signEnvData: String = '1.2.840.113549.1.7.4'
szOID_RSA_digestedData: String = '1.2.840.113549.1.7.5'
szOID_RSA_hashedData: String = '1.2.840.113549.1.7.5'
szOID_RSA_encryptedData: String = '1.2.840.113549.1.7.6'
szOID_RSA_emailAddr: String = '1.2.840.113549.1.9.1'
szOID_RSA_unstructName: String = '1.2.840.113549.1.9.2'
szOID_RSA_contentType: String = '1.2.840.113549.1.9.3'
szOID_RSA_messageDigest: String = '1.2.840.113549.1.9.4'
szOID_RSA_signingTime: String = '1.2.840.113549.1.9.5'
szOID_RSA_counterSign: String = '1.2.840.113549.1.9.6'
szOID_RSA_challengePwd: String = '1.2.840.113549.1.9.7'
szOID_RSA_unstructAddr: String = '1.2.840.113549.1.9.8'
szOID_RSA_extCertAttrs: String = '1.2.840.113549.1.9.9'
szOID_RSA_certExtensions: String = '1.2.840.113549.1.9.14'
szOID_RSA_SMIMECapabilities: String = '1.2.840.113549.1.9.15'
szOID_RSA_preferSignedData: String = '1.2.840.113549.1.9.15.1'
szOID_TIMESTAMP_TOKEN: String = '1.2.840.113549.1.9.16.1.4'
szOID_RFC3161_counterSign: String = '1.3.6.1.4.1.311.3.3.1'
szOID_RSA_SMIMEalg: String = '1.2.840.113549.1.9.16.3'
szOID_RSA_SMIMEalgESDH: String = '1.2.840.113549.1.9.16.3.5'
szOID_RSA_SMIMEalgCMS3DESwrap: String = '1.2.840.113549.1.9.16.3.6'
szOID_RSA_SMIMEalgCMSRC2wrap: String = '1.2.840.113549.1.9.16.3.7'
szOID_RSA_MD2: String = '1.2.840.113549.2.2'
szOID_RSA_MD4: String = '1.2.840.113549.2.4'
szOID_RSA_MD5: String = '1.2.840.113549.2.5'
szOID_RSA_RC2CBC: String = '1.2.840.113549.3.2'
szOID_RSA_RC4: String = '1.2.840.113549.3.4'
szOID_RSA_DES_EDE3_CBC: String = '1.2.840.113549.3.7'
szOID_RSA_RC5_CBCPad: String = '1.2.840.113549.3.9'
szOID_ANSI_X942: String = '1.2.840.10046'
szOID_ANSI_X942_DH: String = '1.2.840.10046.2.1'
szOID_X957: String = '1.2.840.10040'
szOID_X957_DSA: String = '1.2.840.10040.4.1'
szOID_X957_SHA1DSA: String = '1.2.840.10040.4.3'
szOID_ECC_PUBLIC_KEY: String = '1.2.840.10045.2.1'
szOID_ECC_CURVE_P256: String = '1.2.840.10045.3.1.7'
szOID_ECC_CURVE_P384: String = '1.3.132.0.34'
szOID_ECC_CURVE_P521: String = '1.3.132.0.35'
szOID_ECC_CURVE_BRAINPOOLP160R1: String = '1.3.36.3.3.2.8.1.1.1'
szOID_ECC_CURVE_BRAINPOOLP160T1: String = '1.3.36.3.3.2.8.1.1.2'
szOID_ECC_CURVE_BRAINPOOLP192R1: String = '1.3.36.3.3.2.8.1.1.3'
szOID_ECC_CURVE_BRAINPOOLP192T1: String = '1.3.36.3.3.2.8.1.1.4'
szOID_ECC_CURVE_BRAINPOOLP224R1: String = '1.3.36.3.3.2.8.1.1.5'
szOID_ECC_CURVE_BRAINPOOLP224T1: String = '1.3.36.3.3.2.8.1.1.6'
szOID_ECC_CURVE_BRAINPOOLP256R1: String = '1.3.36.3.3.2.8.1.1.7'
szOID_ECC_CURVE_BRAINPOOLP256T1: String = '1.3.36.3.3.2.8.1.1.8'
szOID_ECC_CURVE_BRAINPOOLP320R1: String = '1.3.36.3.3.2.8.1.1.9'
szOID_ECC_CURVE_BRAINPOOLP320T1: String = '1.3.36.3.3.2.8.1.1.10'
szOID_ECC_CURVE_BRAINPOOLP384R1: String = '1.3.36.3.3.2.8.1.1.11'
szOID_ECC_CURVE_BRAINPOOLP384T1: String = '1.3.36.3.3.2.8.1.1.12'
szOID_ECC_CURVE_BRAINPOOLP512R1: String = '1.3.36.3.3.2.8.1.1.13'
szOID_ECC_CURVE_BRAINPOOLP512T1: String = '1.3.36.3.3.2.8.1.1.14'
szOID_ECC_CURVE_EC192WAPI: String = '1.2.156.11235.1.1.2.1'
szOID_CN_ECDSA_SHA256: String = '1.2.156.11235.1.1.1'
szOID_ECC_CURVE_NISTP192: String = '1.2.840.10045.3.1.1'
szOID_ECC_CURVE_NISTP224: String = '1.3.132.0.33'
szOID_ECC_CURVE_NISTP256: String = '1.2.840.10045.3.1.7'
szOID_ECC_CURVE_NISTP384: String = '1.3.132.0.34'
szOID_ECC_CURVE_NISTP521: String = '1.3.132.0.35'
szOID_ECC_CURVE_SECP160K1: String = '1.3.132.0.9'
szOID_ECC_CURVE_SECP160R1: String = '1.3.132.0.8'
szOID_ECC_CURVE_SECP160R2: String = '1.3.132.0.30'
szOID_ECC_CURVE_SECP192K1: String = '1.3.132.0.31'
szOID_ECC_CURVE_SECP192R1: String = '1.2.840.10045.3.1.1'
szOID_ECC_CURVE_SECP224K1: String = '1.3.132.0.32'
szOID_ECC_CURVE_SECP224R1: String = '1.3.132.0.33'
szOID_ECC_CURVE_SECP256K1: String = '1.3.132.0.10'
szOID_ECC_CURVE_SECP256R1: String = '1.2.840.10045.3.1.7'
szOID_ECC_CURVE_SECP384R1: String = '1.3.132.0.34'
szOID_ECC_CURVE_SECP521R1: String = '1.3.132.0.35'
szOID_ECC_CURVE_WTLS7: String = '1.3.132.0.30'
szOID_ECC_CURVE_WTLS9: String = '2.23.43.1.4.9'
szOID_ECC_CURVE_WTLS12: String = '1.3.132.0.33'
szOID_ECC_CURVE_X962P192V1: String = '1.2.840.10045.3.1.1'
szOID_ECC_CURVE_X962P192V2: String = '1.2.840.10045.3.1.2'
szOID_ECC_CURVE_X962P192V3: String = '1.2.840.10045.3.1.3'
szOID_ECC_CURVE_X962P239V1: String = '1.2.840.10045.3.1.4'
szOID_ECC_CURVE_X962P239V2: String = '1.2.840.10045.3.1.5'
szOID_ECC_CURVE_X962P239V3: String = '1.2.840.10045.3.1.6'
szOID_ECC_CURVE_X962P256V1: String = '1.2.840.10045.3.1.7'
szOID_ECDSA_SHA1: String = '1.2.840.10045.4.1'
szOID_ECDSA_SPECIFIED: String = '1.2.840.10045.4.3'
szOID_ECDSA_SHA256: String = '1.2.840.10045.4.3.2'
szOID_ECDSA_SHA384: String = '1.2.840.10045.4.3.3'
szOID_ECDSA_SHA512: String = '1.2.840.10045.4.3.4'
szOID_NIST_AES128_CBC: String = '2.16.840.1.101.3.4.1.2'
szOID_NIST_AES192_CBC: String = '2.16.840.1.101.3.4.1.22'
szOID_NIST_AES256_CBC: String = '2.16.840.1.101.3.4.1.42'
szOID_NIST_AES128_WRAP: String = '2.16.840.1.101.3.4.1.5'
szOID_NIST_AES192_WRAP: String = '2.16.840.1.101.3.4.1.25'
szOID_NIST_AES256_WRAP: String = '2.16.840.1.101.3.4.1.45'
szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF: String = '1.3.133.16.840.63.0.2'
szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF: String = '1.3.132.1.11.1'
szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF: String = '1.3.132.1.11.2'
szOID_DS: String = '2.5'
szOID_DSALG: String = '2.5.8'
szOID_DSALG_CRPT: String = '2.5.8.1'
szOID_DSALG_HASH: String = '2.5.8.2'
szOID_DSALG_SIGN: String = '2.5.8.3'
szOID_DSALG_RSA: String = '2.5.8.1.1'
szOID_OIW: String = '1.3.14'
szOID_OIWSEC: String = '1.3.14.3.2'
szOID_OIWSEC_md4RSA: String = '1.3.14.3.2.2'
szOID_OIWSEC_md5RSA: String = '1.3.14.3.2.3'
szOID_OIWSEC_md4RSA2: String = '1.3.14.3.2.4'
szOID_OIWSEC_desECB: String = '1.3.14.3.2.6'
szOID_OIWSEC_desCBC: String = '1.3.14.3.2.7'
szOID_OIWSEC_desOFB: String = '1.3.14.3.2.8'
szOID_OIWSEC_desCFB: String = '1.3.14.3.2.9'
szOID_OIWSEC_desMAC: String = '1.3.14.3.2.10'
szOID_OIWSEC_rsaSign: String = '1.3.14.3.2.11'
szOID_OIWSEC_dsa: String = '1.3.14.3.2.12'
szOID_OIWSEC_shaDSA: String = '1.3.14.3.2.13'
szOID_OIWSEC_mdc2RSA: String = '1.3.14.3.2.14'
szOID_OIWSEC_shaRSA: String = '1.3.14.3.2.15'
szOID_OIWSEC_dhCommMod: String = '1.3.14.3.2.16'
szOID_OIWSEC_desEDE: String = '1.3.14.3.2.17'
szOID_OIWSEC_sha: String = '1.3.14.3.2.18'
szOID_OIWSEC_mdc2: String = '1.3.14.3.2.19'
szOID_OIWSEC_dsaComm: String = '1.3.14.3.2.20'
szOID_OIWSEC_dsaCommSHA: String = '1.3.14.3.2.21'
szOID_OIWSEC_rsaXchg: String = '1.3.14.3.2.22'
szOID_OIWSEC_keyHashSeal: String = '1.3.14.3.2.23'
szOID_OIWSEC_md2RSASign: String = '1.3.14.3.2.24'
szOID_OIWSEC_md5RSASign: String = '1.3.14.3.2.25'
szOID_OIWSEC_sha1: String = '1.3.14.3.2.26'
szOID_OIWSEC_dsaSHA1: String = '1.3.14.3.2.27'
szOID_OIWSEC_dsaCommSHA1: String = '1.3.14.3.2.28'
szOID_OIWSEC_sha1RSASign: String = '1.3.14.3.2.29'
szOID_OIWDIR: String = '1.3.14.7.2'
szOID_OIWDIR_CRPT: String = '1.3.14.7.2.1'
szOID_OIWDIR_HASH: String = '1.3.14.7.2.2'
szOID_OIWDIR_SIGN: String = '1.3.14.7.2.3'
szOID_OIWDIR_md2: String = '1.3.14.7.2.2.1'
szOID_OIWDIR_md2RSA: String = '1.3.14.7.2.3.1'
szOID_INFOSEC: String = '2.16.840.1.101.2.1'
szOID_INFOSEC_sdnsSignature: String = '2.16.840.1.101.2.1.1.1'
szOID_INFOSEC_mosaicSignature: String = '2.16.840.1.101.2.1.1.2'
szOID_INFOSEC_sdnsConfidentiality: String = '2.16.840.1.101.2.1.1.3'
szOID_INFOSEC_mosaicConfidentiality: String = '2.16.840.1.101.2.1.1.4'
szOID_INFOSEC_sdnsIntegrity: String = '2.16.840.1.101.2.1.1.5'
szOID_INFOSEC_mosaicIntegrity: String = '2.16.840.1.101.2.1.1.6'
szOID_INFOSEC_sdnsTokenProtection: String = '2.16.840.1.101.2.1.1.7'
szOID_INFOSEC_mosaicTokenProtection: String = '2.16.840.1.101.2.1.1.8'
szOID_INFOSEC_sdnsKeyManagement: String = '2.16.840.1.101.2.1.1.9'
szOID_INFOSEC_mosaicKeyManagement: String = '2.16.840.1.101.2.1.1.10'
szOID_INFOSEC_sdnsKMandSig: String = '2.16.840.1.101.2.1.1.11'
szOID_INFOSEC_mosaicKMandSig: String = '2.16.840.1.101.2.1.1.12'
szOID_INFOSEC_SuiteASignature: String = '2.16.840.1.101.2.1.1.13'
szOID_INFOSEC_SuiteAConfidentiality: String = '2.16.840.1.101.2.1.1.14'
szOID_INFOSEC_SuiteAIntegrity: String = '2.16.840.1.101.2.1.1.15'
szOID_INFOSEC_SuiteATokenProtection: String = '2.16.840.1.101.2.1.1.16'
szOID_INFOSEC_SuiteAKeyManagement: String = '2.16.840.1.101.2.1.1.17'
szOID_INFOSEC_SuiteAKMandSig: String = '2.16.840.1.101.2.1.1.18'
szOID_INFOSEC_mosaicUpdatedSig: String = '2.16.840.1.101.2.1.1.19'
szOID_INFOSEC_mosaicKMandUpdSig: String = '2.16.840.1.101.2.1.1.20'
szOID_INFOSEC_mosaicUpdatedInteg: String = '2.16.840.1.101.2.1.1.21'
szOID_NIST_sha256: String = '2.16.840.1.101.3.4.2.1'
szOID_NIST_sha384: String = '2.16.840.1.101.3.4.2.2'
szOID_NIST_sha512: String = '2.16.840.1.101.3.4.2.3'
szOID_COMMON_NAME: String = '2.5.4.3'
szOID_SUR_NAME: String = '2.5.4.4'
szOID_DEVICE_SERIAL_NUMBER: String = '2.5.4.5'
szOID_COUNTRY_NAME: String = '2.5.4.6'
szOID_LOCALITY_NAME: String = '2.5.4.7'
szOID_STATE_OR_PROVINCE_NAME: String = '2.5.4.8'
szOID_STREET_ADDRESS: String = '2.5.4.9'
szOID_ORGANIZATION_NAME: String = '2.5.4.10'
szOID_ORGANIZATIONAL_UNIT_NAME: String = '2.5.4.11'
szOID_TITLE: String = '2.5.4.12'
szOID_DESCRIPTION: String = '2.5.4.13'
szOID_SEARCH_GUIDE: String = '2.5.4.14'
szOID_BUSINESS_CATEGORY: String = '2.5.4.15'
szOID_POSTAL_ADDRESS: String = '2.5.4.16'
szOID_POSTAL_CODE: String = '2.5.4.17'
szOID_POST_OFFICE_BOX: String = '2.5.4.18'
szOID_PHYSICAL_DELIVERY_OFFICE_NAME: String = '2.5.4.19'
szOID_TELEPHONE_NUMBER: String = '2.5.4.20'
szOID_TELEX_NUMBER: String = '2.5.4.21'
szOID_TELETEXT_TERMINAL_IDENTIFIER: String = '2.5.4.22'
szOID_FACSIMILE_TELEPHONE_NUMBER: String = '2.5.4.23'
szOID_X21_ADDRESS: String = '2.5.4.24'
szOID_INTERNATIONAL_ISDN_NUMBER: String = '2.5.4.25'
szOID_REGISTERED_ADDRESS: String = '2.5.4.26'
szOID_DESTINATION_INDICATOR: String = '2.5.4.27'
szOID_PREFERRED_DELIVERY_METHOD: String = '2.5.4.28'
szOID_PRESENTATION_ADDRESS: String = '2.5.4.29'
szOID_SUPPORTED_APPLICATION_CONTEXT: String = '2.5.4.30'
szOID_MEMBER: String = '2.5.4.31'
szOID_OWNER: String = '2.5.4.32'
szOID_ROLE_OCCUPANT: String = '2.5.4.33'
szOID_SEE_ALSO: String = '2.5.4.34'
szOID_USER_PASSWORD: String = '2.5.4.35'
szOID_USER_CERTIFICATE: String = '2.5.4.36'
szOID_CA_CERTIFICATE: String = '2.5.4.37'
szOID_AUTHORITY_REVOCATION_LIST: String = '2.5.4.38'
szOID_CERTIFICATE_REVOCATION_LIST: String = '2.5.4.39'
szOID_CROSS_CERTIFICATE_PAIR: String = '2.5.4.40'
szOID_GIVEN_NAME: String = '2.5.4.42'
szOID_INITIALS: String = '2.5.4.43'
szOID_DN_QUALIFIER: String = '2.5.4.46'
szOID_DOMAIN_COMPONENT: String = '0.9.2342.19200300.100.1.25'
szOID_PKCS_12_FRIENDLY_NAME_ATTR: String = '1.2.840.113549.1.9.20'
szOID_PKCS_12_LOCAL_KEY_ID: String = '1.2.840.113549.1.9.21'
szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR: String = '1.3.6.1.4.1.311.17.1'
szOID_LOCAL_MACHINE_KEYSET: String = '1.3.6.1.4.1.311.17.2'
szOID_PKCS_12_EXTENDED_ATTRIBUTES: String = '1.3.6.1.4.1.311.17.3'
szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID: String = '1.3.6.1.4.1.311.17.4'
szOID_KEYID_RDN: String = '1.3.6.1.4.1.311.10.7.1'
szOID_EV_RDN_LOCALE: String = '1.3.6.1.4.1.311.60.2.1.1'
szOID_EV_RDN_STATE_OR_PROVINCE: String = '1.3.6.1.4.1.311.60.2.1.2'
szOID_EV_RDN_COUNTRY: String = '1.3.6.1.4.1.311.60.2.1.3'
CERT_RDN_TYPE_MASK: UInt32 = 255
CERT_RDN_FLAGS_MASK: UInt32 = 4278190080
CERT_RDN_ENABLE_T61_UNICODE_FLAG: UInt32 = 2147483648
CERT_RDN_ENABLE_UTF8_UNICODE_FLAG: UInt32 = 536870912
CERT_RDN_FORCE_UTF8_UNICODE_FLAG: UInt32 = 268435456
CERT_RDN_DISABLE_CHECK_TYPE_FLAG: UInt32 = 1073741824
CERT_RDN_DISABLE_IE4_UTF8_FLAG: UInt32 = 16777216
CERT_RDN_ENABLE_PUNYCODE_FLAG: UInt32 = 33554432
CERT_RSA_PUBLIC_KEY_OBJID: String = '1.2.840.113549.1.1.1'
CERT_DEFAULT_OID_PUBLIC_KEY_SIGN: String = '1.2.840.113549.1.1.1'
CERT_DEFAULT_OID_PUBLIC_KEY_XCHG: String = '1.2.840.113549.1.1.1'
CRYPT_ECC_PRIVATE_KEY_INFO_v1: UInt32 = 1
CERT_V1: UInt32 = 0
CERT_V2: UInt32 = 1
CERT_V3: UInt32 = 2
CERT_INFO_VERSION_FLAG: UInt32 = 1
CERT_INFO_SERIAL_NUMBER_FLAG: UInt32 = 2
CERT_INFO_SIGNATURE_ALGORITHM_FLAG: UInt32 = 3
CERT_INFO_ISSUER_FLAG: UInt32 = 4
CERT_INFO_NOT_BEFORE_FLAG: UInt32 = 5
CERT_INFO_NOT_AFTER_FLAG: UInt32 = 6
CERT_INFO_SUBJECT_FLAG: UInt32 = 7
CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG: UInt32 = 8
CERT_INFO_ISSUER_UNIQUE_ID_FLAG: UInt32 = 9
CERT_INFO_SUBJECT_UNIQUE_ID_FLAG: UInt32 = 10
CERT_INFO_EXTENSION_FLAG: UInt32 = 11
CRL_V1: UInt32 = 0
CRL_V2: UInt32 = 1
CERT_BUNDLE_CERTIFICATE: UInt32 = 0
CERT_BUNDLE_CRL: UInt32 = 1
CERT_REQUEST_V1: UInt32 = 0
CERT_KEYGEN_REQUEST_V1: UInt32 = 0
CTL_V1: UInt32 = 0
CERT_ENCODING_TYPE_MASK: UInt32 = 65535
CMSG_ENCODING_TYPE_MASK: UInt32 = 4294901760
CRYPT_ASN_ENCODING: UInt32 = 1
CRYPT_NDR_ENCODING: UInt32 = 2
X509_NDR_ENCODING: UInt32 = 2
PKCS_7_NDR_ENCODING: UInt32 = 131072
CRYPT_FORMAT_STR_MULTI_LINE: UInt32 = 1
CRYPT_FORMAT_STR_NO_HEX: UInt32 = 16
CRYPT_FORMAT_SIMPLE: UInt32 = 1
CRYPT_FORMAT_X509: UInt32 = 2
CRYPT_FORMAT_OID: UInt32 = 4
CRYPT_FORMAT_RDN_SEMICOLON: UInt32 = 256
CRYPT_FORMAT_RDN_CRLF: UInt32 = 512
CRYPT_FORMAT_RDN_UNQUOTE: UInt32 = 1024
CRYPT_FORMAT_RDN_REVERSE: UInt32 = 2048
CRYPT_FORMAT_COMMA: UInt32 = 4096
CRYPT_FORMAT_SEMICOLON: UInt32 = 256
CRYPT_FORMAT_CRLF: UInt32 = 512
CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG: UInt32 = 8
CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG: UInt32 = 268435456
CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG: UInt32 = 65536
CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG: UInt32 = 262144
CRYPT_DECODE_NOCOPY_FLAG: UInt32 = 1
CRYPT_DECODE_TO_BE_SIGNED_FLAG: UInt32 = 2
CRYPT_DECODE_SHARE_OID_STRING_FLAG: UInt32 = 4
CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG: UInt32 = 8
CRYPT_DECODE_ALLOC_FLAG: UInt32 = 32768
CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG: UInt32 = 16777216
CRYPT_DECODE_ENABLE_PUNYCODE_FLAG: UInt32 = 33554432
CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG: UInt32 = 67108864
CRYPT_ENCODE_DECODE_NONE: UInt32 = 0
X509_CERT: win32more.Foundation.PSTR = 1
X509_CERT_TO_BE_SIGNED: win32more.Foundation.PSTR = 2
X509_CERT_CRL_TO_BE_SIGNED: win32more.Foundation.PSTR = 3
X509_CERT_REQUEST_TO_BE_SIGNED: win32more.Foundation.PSTR = 4
X509_EXTENSIONS: win32more.Foundation.PSTR = 5
X509_NAME_VALUE: win32more.Foundation.PSTR = 6
X509_NAME: win32more.Foundation.PSTR = 7
X509_PUBLIC_KEY_INFO: win32more.Foundation.PSTR = 8
X509_AUTHORITY_KEY_ID: win32more.Foundation.PSTR = 9
X509_KEY_ATTRIBUTES: win32more.Foundation.PSTR = 10
X509_KEY_USAGE_RESTRICTION: win32more.Foundation.PSTR = 11
X509_ALTERNATE_NAME: win32more.Foundation.PSTR = 12
X509_BASIC_CONSTRAINTS: win32more.Foundation.PSTR = 13
X509_KEY_USAGE: win32more.Foundation.PSTR = 14
X509_BASIC_CONSTRAINTS2: win32more.Foundation.PSTR = 15
X509_CERT_POLICIES: win32more.Foundation.PSTR = 16
PKCS_UTC_TIME: win32more.Foundation.PSTR = 17
PKCS_TIME_REQUEST: win32more.Foundation.PSTR = 18
RSA_CSP_PUBLICKEYBLOB: win32more.Foundation.PSTR = 19
X509_UNICODE_NAME: win32more.Foundation.PSTR = 20
X509_KEYGEN_REQUEST_TO_BE_SIGNED: win32more.Foundation.PSTR = 21
PKCS_ATTRIBUTE: win32more.Foundation.PSTR = 22
PKCS_CONTENT_INFO_SEQUENCE_OF_ANY: win32more.Foundation.PSTR = 23
X509_UNICODE_NAME_VALUE: win32more.Foundation.PSTR = 24
X509_ANY_STRING: Int32 = 6
X509_UNICODE_ANY_STRING: Int32 = 24
X509_OCTET_STRING: win32more.Foundation.PSTR = 25
X509_BITS: win32more.Foundation.PSTR = 26
X509_INTEGER: win32more.Foundation.PSTR = 27
X509_MULTI_BYTE_INTEGER: win32more.Foundation.PSTR = 28
X509_ENUMERATED: win32more.Foundation.PSTR = 29
X509_CHOICE_OF_TIME: win32more.Foundation.PSTR = 30
X509_AUTHORITY_KEY_ID2: win32more.Foundation.PSTR = 31
X509_AUTHORITY_INFO_ACCESS: win32more.Foundation.PSTR = 32
X509_SUBJECT_INFO_ACCESS: Int32 = 32
X509_CRL_REASON_CODE: Int32 = 29
PKCS_CONTENT_INFO: win32more.Foundation.PSTR = 33
X509_SEQUENCE_OF_ANY: win32more.Foundation.PSTR = 34
X509_CRL_DIST_POINTS: win32more.Foundation.PSTR = 35
X509_ENHANCED_KEY_USAGE: win32more.Foundation.PSTR = 36
PKCS_CTL: win32more.Foundation.PSTR = 37
X509_MULTI_BYTE_UINT: win32more.Foundation.PSTR = 38
X509_DSS_PUBLICKEY: Int32 = 38
X509_DSS_PARAMETERS: win32more.Foundation.PSTR = 39
X509_DSS_SIGNATURE: win32more.Foundation.PSTR = 40
PKCS_RC2_CBC_PARAMETERS: win32more.Foundation.PSTR = 41
PKCS_SMIME_CAPABILITIES: win32more.Foundation.PSTR = 42
X509_QC_STATEMENTS_EXT: win32more.Foundation.PSTR = 42
PKCS_RSA_PRIVATE_KEY: win32more.Foundation.PSTR = 43
PKCS_PRIVATE_KEY_INFO: win32more.Foundation.PSTR = 44
PKCS_ENCRYPTED_PRIVATE_KEY_INFO: win32more.Foundation.PSTR = 45
X509_PKIX_POLICY_QUALIFIER_USERNOTICE: win32more.Foundation.PSTR = 46
X509_DH_PUBLICKEY: Int32 = 38
X509_DH_PARAMETERS: win32more.Foundation.PSTR = 47
PKCS_ATTRIBUTES: win32more.Foundation.PSTR = 48
PKCS_SORTED_CTL: win32more.Foundation.PSTR = 49
X509_ECC_SIGNATURE: win32more.Foundation.PSTR = 47
X942_DH_PARAMETERS: win32more.Foundation.PSTR = 50
X509_BITS_WITHOUT_TRAILING_ZEROES: win32more.Foundation.PSTR = 51
X942_OTHER_INFO: win32more.Foundation.PSTR = 52
X509_CERT_PAIR: win32more.Foundation.PSTR = 53
X509_ISSUING_DIST_POINT: win32more.Foundation.PSTR = 54
X509_NAME_CONSTRAINTS: win32more.Foundation.PSTR = 55
X509_POLICY_MAPPINGS: win32more.Foundation.PSTR = 56
X509_POLICY_CONSTRAINTS: win32more.Foundation.PSTR = 57
X509_CROSS_CERT_DIST_POINTS: win32more.Foundation.PSTR = 58
CMC_DATA: win32more.Foundation.PSTR = 59
CMC_RESPONSE: win32more.Foundation.PSTR = 60
CMC_STATUS: win32more.Foundation.PSTR = 61
CMC_ADD_EXTENSIONS: win32more.Foundation.PSTR = 62
CMC_ADD_ATTRIBUTES: win32more.Foundation.PSTR = 63
X509_CERTIFICATE_TEMPLATE: win32more.Foundation.PSTR = 64
OCSP_SIGNED_REQUEST: win32more.Foundation.PSTR = 65
OCSP_REQUEST: win32more.Foundation.PSTR = 66
OCSP_RESPONSE: win32more.Foundation.PSTR = 67
OCSP_BASIC_SIGNED_RESPONSE: win32more.Foundation.PSTR = 68
OCSP_BASIC_RESPONSE: win32more.Foundation.PSTR = 69
X509_LOGOTYPE_EXT: win32more.Foundation.PSTR = 70
X509_BIOMETRIC_EXT: win32more.Foundation.PSTR = 71
CNG_RSA_PUBLIC_KEY_BLOB: win32more.Foundation.PSTR = 72
X509_OBJECT_IDENTIFIER: win32more.Foundation.PSTR = 73
X509_ALGORITHM_IDENTIFIER: win32more.Foundation.PSTR = 74
PKCS_RSA_SSA_PSS_PARAMETERS: win32more.Foundation.PSTR = 75
PKCS_RSAES_OAEP_PARAMETERS: win32more.Foundation.PSTR = 76
ECC_CMS_SHARED_INFO: win32more.Foundation.PSTR = 77
TIMESTAMP_REQUEST: win32more.Foundation.PSTR = 78
TIMESTAMP_RESPONSE: win32more.Foundation.PSTR = 79
TIMESTAMP_INFO: win32more.Foundation.PSTR = 80
X509_CERT_BUNDLE: win32more.Foundation.PSTR = 81
X509_ECC_PRIVATE_KEY: win32more.Foundation.PSTR = 82
CNG_RSA_PRIVATE_KEY_BLOB: win32more.Foundation.PSTR = 83
X509_SUBJECT_DIR_ATTRS: win32more.Foundation.PSTR = 84
X509_ECC_PARAMETERS: win32more.Foundation.PSTR = 85
PKCS7_SIGNER_INFO: win32more.Foundation.PSTR = 500
CMS_SIGNER_INFO: win32more.Foundation.PSTR = 501
szOID_AUTHORITY_KEY_IDENTIFIER: String = '2.5.29.1'
szOID_KEY_ATTRIBUTES: String = '2.5.29.2'
szOID_CERT_POLICIES_95: String = '2.5.29.3'
szOID_KEY_USAGE_RESTRICTION: String = '2.5.29.4'
szOID_SUBJECT_ALT_NAME: String = '2.5.29.7'
szOID_ISSUER_ALT_NAME: String = '2.5.29.8'
szOID_BASIC_CONSTRAINTS: String = '2.5.29.10'
szOID_KEY_USAGE: String = '2.5.29.15'
szOID_PRIVATEKEY_USAGE_PERIOD: String = '2.5.29.16'
szOID_BASIC_CONSTRAINTS2: String = '2.5.29.19'
szOID_CERT_POLICIES: String = '2.5.29.32'
szOID_ANY_CERT_POLICY: String = '2.5.29.32.0'
szOID_INHIBIT_ANY_POLICY: String = '2.5.29.54'
szOID_AUTHORITY_KEY_IDENTIFIER2: String = '2.5.29.35'
szOID_SUBJECT_KEY_IDENTIFIER: String = '2.5.29.14'
szOID_SUBJECT_ALT_NAME2: String = '2.5.29.17'
szOID_ISSUER_ALT_NAME2: String = '2.5.29.18'
szOID_CRL_REASON_CODE: String = '2.5.29.21'
szOID_REASON_CODE_HOLD: String = '2.5.29.23'
szOID_CRL_DIST_POINTS: String = '2.5.29.31'
szOID_ENHANCED_KEY_USAGE: String = '2.5.29.37'
szOID_ANY_ENHANCED_KEY_USAGE: String = '2.5.29.37.0'
szOID_CRL_NUMBER: String = '2.5.29.20'
szOID_DELTA_CRL_INDICATOR: String = '2.5.29.27'
szOID_ISSUING_DIST_POINT: String = '2.5.29.28'
szOID_FRESHEST_CRL: String = '2.5.29.46'
szOID_NAME_CONSTRAINTS: String = '2.5.29.30'
szOID_POLICY_MAPPINGS: String = '2.5.29.33'
szOID_LEGACY_POLICY_MAPPINGS: String = '2.5.29.5'
szOID_POLICY_CONSTRAINTS: String = '2.5.29.36'
szOID_RENEWAL_CERTIFICATE: String = '1.3.6.1.4.1.311.13.1'
szOID_ENROLLMENT_NAME_VALUE_PAIR: String = '1.3.6.1.4.1.311.13.2.1'
szOID_ENROLLMENT_CSP_PROVIDER: String = '1.3.6.1.4.1.311.13.2.2'
szOID_OS_VERSION: String = '1.3.6.1.4.1.311.13.2.3'
szOID_ENROLLMENT_AGENT: String = '1.3.6.1.4.1.311.20.2.1'
szOID_PKIX: String = '1.3.6.1.5.5.7'
szOID_PKIX_PE: String = '1.3.6.1.5.5.7.1'
szOID_AUTHORITY_INFO_ACCESS: String = '1.3.6.1.5.5.7.1.1'
szOID_SUBJECT_INFO_ACCESS: String = '1.3.6.1.5.5.7.1.11'
szOID_BIOMETRIC_EXT: String = '1.3.6.1.5.5.7.1.2'
szOID_QC_STATEMENTS_EXT: String = '1.3.6.1.5.5.7.1.3'
szOID_LOGOTYPE_EXT: String = '1.3.6.1.5.5.7.1.12'
szOID_TLS_FEATURES_EXT: String = '1.3.6.1.5.5.7.1.24'
szOID_CERT_EXTENSIONS: String = '1.3.6.1.4.1.311.2.1.14'
szOID_NEXT_UPDATE_LOCATION: String = '1.3.6.1.4.1.311.10.2'
szOID_REMOVE_CERTIFICATE: String = '1.3.6.1.4.1.311.10.8.1'
szOID_CROSS_CERT_DIST_POINTS: String = '1.3.6.1.4.1.311.10.9.1'
szOID_CTL: String = '1.3.6.1.4.1.311.10.1'
szOID_SORTED_CTL: String = '1.3.6.1.4.1.311.10.1.1'
szOID_SERIALIZED: String = '1.3.6.1.4.1.311.10.3.3.1'
szOID_NT_PRINCIPAL_NAME: String = '1.3.6.1.4.1.311.20.2.3'
szOID_INTERNATIONALIZED_EMAIL_ADDRESS: String = '1.3.6.1.4.1.311.20.2.4'
szOID_PRODUCT_UPDATE: String = '1.3.6.1.4.1.311.31.1'
szOID_ANY_APPLICATION_POLICY: String = '1.3.6.1.4.1.311.10.12.1'
szOID_AUTO_ENROLL_CTL_USAGE: String = '1.3.6.1.4.1.311.20.1'
szOID_ENROLL_CERTTYPE_EXTENSION: String = '1.3.6.1.4.1.311.20.2'
szOID_CERT_MANIFOLD: String = '1.3.6.1.4.1.311.20.3'
szOID_CERTSRV_CA_VERSION: String = '1.3.6.1.4.1.311.21.1'
szOID_CERTSRV_PREVIOUS_CERT_HASH: String = '1.3.6.1.4.1.311.21.2'
szOID_CRL_VIRTUAL_BASE: String = '1.3.6.1.4.1.311.21.3'
szOID_CRL_NEXT_PUBLISH: String = '1.3.6.1.4.1.311.21.4'
szOID_KP_CA_EXCHANGE: String = '1.3.6.1.4.1.311.21.5'
szOID_KP_PRIVACY_CA: String = '1.3.6.1.4.1.311.21.36'
szOID_KP_KEY_RECOVERY_AGENT: String = '1.3.6.1.4.1.311.21.6'
szOID_CERTIFICATE_TEMPLATE: String = '1.3.6.1.4.1.311.21.7'
szOID_ENTERPRISE_OID_ROOT: String = '1.3.6.1.4.1.311.21.8'
szOID_RDN_DUMMY_SIGNER: String = '1.3.6.1.4.1.311.21.9'
szOID_APPLICATION_CERT_POLICIES: String = '1.3.6.1.4.1.311.21.10'
szOID_APPLICATION_POLICY_MAPPINGS: String = '1.3.6.1.4.1.311.21.11'
szOID_APPLICATION_POLICY_CONSTRAINTS: String = '1.3.6.1.4.1.311.21.12'
szOID_ARCHIVED_KEY_ATTR: String = '1.3.6.1.4.1.311.21.13'
szOID_CRL_SELF_CDP: String = '1.3.6.1.4.1.311.21.14'
szOID_REQUIRE_CERT_CHAIN_POLICY: String = '1.3.6.1.4.1.311.21.15'
szOID_ARCHIVED_KEY_CERT_HASH: String = '1.3.6.1.4.1.311.21.16'
szOID_ISSUED_CERT_HASH: String = '1.3.6.1.4.1.311.21.17'
szOID_DS_EMAIL_REPLICATION: String = '1.3.6.1.4.1.311.21.19'
szOID_REQUEST_CLIENT_INFO: String = '1.3.6.1.4.1.311.21.20'
szOID_ENCRYPTED_KEY_HASH: String = '1.3.6.1.4.1.311.21.21'
szOID_CERTSRV_CROSSCA_VERSION: String = '1.3.6.1.4.1.311.21.22'
szOID_NTDS_REPLICATION: String = '1.3.6.1.4.1.311.25.1'
szOID_SUBJECT_DIR_ATTRS: String = '2.5.29.9'
szOID_PKIX_KP: String = '1.3.6.1.5.5.7.3'
szOID_PKIX_KP_SERVER_AUTH: String = '1.3.6.1.5.5.7.3.1'
szOID_PKIX_KP_CLIENT_AUTH: String = '1.3.6.1.5.5.7.3.2'
szOID_PKIX_KP_CODE_SIGNING: String = '1.3.6.1.5.5.7.3.3'
szOID_PKIX_KP_EMAIL_PROTECTION: String = '1.3.6.1.5.5.7.3.4'
szOID_PKIX_KP_IPSEC_END_SYSTEM: String = '1.3.6.1.5.5.7.3.5'
szOID_PKIX_KP_IPSEC_TUNNEL: String = '1.3.6.1.5.5.7.3.6'
szOID_PKIX_KP_IPSEC_USER: String = '1.3.6.1.5.5.7.3.7'
szOID_PKIX_KP_TIMESTAMP_SIGNING: String = '1.3.6.1.5.5.7.3.8'
szOID_PKIX_KP_OCSP_SIGNING: String = '1.3.6.1.5.5.7.3.9'
szOID_PKIX_OCSP_NOCHECK: String = '1.3.6.1.5.5.7.48.1.5'
szOID_PKIX_OCSP_NONCE: String = '1.3.6.1.5.5.7.48.1.2'
szOID_IPSEC_KP_IKE_INTERMEDIATE: String = '1.3.6.1.5.5.8.2.2'
szOID_PKINIT_KP_KDC: String = '1.3.6.1.5.2.3.5'
szOID_KP_CTL_USAGE_SIGNING: String = '1.3.6.1.4.1.311.10.3.1'
szOID_KP_TIME_STAMP_SIGNING: String = '1.3.6.1.4.1.311.10.3.2'
szOID_SERVER_GATED_CRYPTO: String = '1.3.6.1.4.1.311.10.3.3'
szOID_SGC_NETSCAPE: String = '2.16.840.1.113730.4.1'
szOID_KP_EFS: String = '1.3.6.1.4.1.311.10.3.4'
szOID_EFS_RECOVERY: String = '1.3.6.1.4.1.311.10.3.4.1'
szOID_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.5'
szOID_ATTEST_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.5.1'
szOID_NT5_CRYPTO: String = '1.3.6.1.4.1.311.10.3.6'
szOID_OEM_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.7'
szOID_EMBEDDED_NT_CRYPTO: String = '1.3.6.1.4.1.311.10.3.8'
szOID_ROOT_LIST_SIGNER: String = '1.3.6.1.4.1.311.10.3.9'
szOID_KP_QUALIFIED_SUBORDINATION: String = '1.3.6.1.4.1.311.10.3.10'
szOID_KP_KEY_RECOVERY: String = '1.3.6.1.4.1.311.10.3.11'
szOID_KP_DOCUMENT_SIGNING: String = '1.3.6.1.4.1.311.10.3.12'
szOID_KP_LIFETIME_SIGNING: String = '1.3.6.1.4.1.311.10.3.13'
szOID_KP_MOBILE_DEVICE_SOFTWARE: String = '1.3.6.1.4.1.311.10.3.14'
szOID_KP_SMART_DISPLAY: String = '1.3.6.1.4.1.311.10.3.15'
szOID_KP_CSP_SIGNATURE: String = '1.3.6.1.4.1.311.10.3.16'
szOID_KP_FLIGHT_SIGNING: String = '1.3.6.1.4.1.311.10.3.27'
szOID_PLATFORM_MANIFEST_BINARY_ID: String = '1.3.6.1.4.1.311.10.3.28'
szOID_DRM: String = '1.3.6.1.4.1.311.10.5.1'
szOID_DRM_INDIVIDUALIZATION: String = '1.3.6.1.4.1.311.10.5.2'
szOID_LICENSES: String = '1.3.6.1.4.1.311.10.6.1'
szOID_LICENSE_SERVER: String = '1.3.6.1.4.1.311.10.6.2'
szOID_KP_SMARTCARD_LOGON: String = '1.3.6.1.4.1.311.20.2.2'
szOID_KP_KERNEL_MODE_CODE_SIGNING: String = '1.3.6.1.4.1.311.61.1.1'
szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING: String = '1.3.6.1.4.1.311.61.4.1'
szOID_REVOKED_LIST_SIGNER: String = '1.3.6.1.4.1.311.10.3.19'
szOID_WINDOWS_KITS_SIGNER: String = '1.3.6.1.4.1.311.10.3.20'
szOID_WINDOWS_RT_SIGNER: String = '1.3.6.1.4.1.311.10.3.21'
szOID_PROTECTED_PROCESS_LIGHT_SIGNER: String = '1.3.6.1.4.1.311.10.3.22'
szOID_WINDOWS_TCB_SIGNER: String = '1.3.6.1.4.1.311.10.3.23'
szOID_PROTECTED_PROCESS_SIGNER: String = '1.3.6.1.4.1.311.10.3.24'
szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER: String = '1.3.6.1.4.1.311.10.3.25'
szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER: String = '1.3.6.1.4.1.311.10.3.26'
szOID_DISALLOWED_LIST: String = '1.3.6.1.4.1.311.10.3.30'
szOID_PIN_RULES_SIGNER: String = '1.3.6.1.4.1.311.10.3.31'
szOID_PIN_RULES_CTL: String = '1.3.6.1.4.1.311.10.3.32'
szOID_PIN_RULES_EXT: String = '1.3.6.1.4.1.311.10.3.33'
szOID_PIN_RULES_DOMAIN_NAME: String = '1.3.6.1.4.1.311.10.3.34'
szOID_PIN_RULES_LOG_END_DATE_EXT: String = '1.3.6.1.4.1.311.10.3.35'
szOID_IUM_SIGNING: String = '1.3.6.1.4.1.311.10.3.37'
szOID_EV_WHQL_CRYPTO: String = '1.3.6.1.4.1.311.10.3.39'
szOID_BIOMETRIC_SIGNING: String = '1.3.6.1.4.1.311.10.3.41'
szOID_ENCLAVE_SIGNING: String = '1.3.6.1.4.1.311.10.3.42'
szOID_SYNC_ROOT_CTL_EXT: String = '1.3.6.1.4.1.311.10.3.50'
szOID_HPKP_DOMAIN_NAME_CTL: String = '1.3.6.1.4.1.311.10.3.60'
szOID_HPKP_HEADER_VALUE_CTL: String = '1.3.6.1.4.1.311.10.3.61'
szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING: String = '1.3.6.1.4.1.311.61.5.1'
szOID_WINDOWS_STORE_SIGNER: String = '1.3.6.1.4.1.311.76.3.1'
szOID_DYNAMIC_CODE_GEN_SIGNER: String = '1.3.6.1.4.1.311.76.5.1'
szOID_MICROSOFT_PUBLISHER_SIGNER: String = '1.3.6.1.4.1.311.76.8.1'
szOID_YESNO_TRUST_ATTR: String = '1.3.6.1.4.1.311.10.4.1'
szOID_SITE_PIN_RULES_INDEX_ATTR: String = '1.3.6.1.4.1.311.10.4.2'
szOID_SITE_PIN_RULES_FLAGS_ATTR: String = '1.3.6.1.4.1.311.10.4.3'
SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG: UInt32 = 1
szOID_PKIX_POLICY_QUALIFIER_CPS: String = '1.3.6.1.5.5.7.2.1'
szOID_PKIX_POLICY_QUALIFIER_USERNOTICE: String = '1.3.6.1.5.5.7.2.2'
szOID_ROOT_PROGRAM_FLAGS: String = '1.3.6.1.4.1.311.60.1.1'
CERT_ROOT_PROGRAM_FLAG_OU: UInt32 = 16
CERT_ROOT_PROGRAM_FLAG_ADDRESS: UInt32 = 8
szOID_CERT_POLICIES_95_QUALIFIER1: String = '2.16.840.1.113733.1.7.1.1'
szOID_RDN_TPM_MANUFACTURER: String = '2.23.133.2.1'
szOID_RDN_TPM_MODEL: String = '2.23.133.2.2'
szOID_RDN_TPM_VERSION: String = '2.23.133.2.3'
szOID_RDN_TCG_PLATFORM_MANUFACTURER: String = '2.23.133.2.4'
szOID_RDN_TCG_PLATFORM_MODEL: String = '2.23.133.2.5'
szOID_RDN_TCG_PLATFORM_VERSION: String = '2.23.133.2.6'
szOID_CT_CERT_SCTLIST: String = '1.3.6.1.4.1.11129.2.4.2'
szOID_ENROLL_EK_INFO: String = '1.3.6.1.4.1.311.21.23'
szOID_ENROLL_AIK_INFO: String = '1.3.6.1.4.1.311.21.39'
szOID_ENROLL_ATTESTATION_STATEMENT: String = '1.3.6.1.4.1.311.21.24'
szOID_ENROLL_KSP_NAME: String = '1.3.6.1.4.1.311.21.25'
szOID_ENROLL_EKPUB_CHALLENGE: String = '1.3.6.1.4.1.311.21.26'
szOID_ENROLL_CAXCHGCERT_HASH: String = '1.3.6.1.4.1.311.21.27'
szOID_ENROLL_ATTESTATION_CHALLENGE: String = '1.3.6.1.4.1.311.21.28'
szOID_ENROLL_ENCRYPTION_ALGORITHM: String = '1.3.6.1.4.1.311.21.29'
szOID_KP_TPM_EK_CERTIFICATE: String = '2.23.133.8.1'
szOID_KP_TPM_PLATFORM_CERTIFICATE: String = '2.23.133.8.2'
szOID_KP_TPM_AIK_CERTIFICATE: String = '2.23.133.8.3'
szOID_ENROLL_EKVERIFYKEY: String = '1.3.6.1.4.1.311.21.30'
szOID_ENROLL_EKVERIFYCERT: String = '1.3.6.1.4.1.311.21.31'
szOID_ENROLL_EKVERIFYCREDS: String = '1.3.6.1.4.1.311.21.32'
szOID_ENROLL_SCEP_ERROR: String = '1.3.6.1.4.1.311.21.33'
szOID_ENROLL_SCEP_SERVER_STATE: String = '1.3.6.1.4.1.311.21.34'
szOID_ENROLL_SCEP_CHALLENGE_ANSWER: String = '1.3.6.1.4.1.311.21.35'
szOID_ENROLL_SCEP_CLIENT_REQUEST: String = '1.3.6.1.4.1.311.21.37'
szOID_ENROLL_SCEP_SERVER_MESSAGE: String = '1.3.6.1.4.1.311.21.38'
szOID_ENROLL_SCEP_SERVER_SECRET: String = '1.3.6.1.4.1.311.21.40'
szOID_ENROLL_KEY_AFFINITY: String = '1.3.6.1.4.1.311.21.41'
szOID_ENROLL_SCEP_SIGNER_HASH: String = '1.3.6.1.4.1.311.21.42'
szOID_ENROLL_EK_CA_KEYID: String = '1.3.6.1.4.1.311.21.43'
szOID_ATTR_SUPPORTED_ALGORITHMS: String = '2.5.4.52'
szOID_ATTR_TPM_SPECIFICATION: String = '2.23.133.2.16'
szOID_ATTR_PLATFORM_SPECIFICATION: String = '2.23.133.2.17'
szOID_ATTR_TPM_SECURITY_ASSERTIONS: String = '2.23.133.2.18'
CERT_UNICODE_RDN_ERR_INDEX_MASK: UInt32 = 1023
CERT_UNICODE_RDN_ERR_INDEX_SHIFT: UInt32 = 22
CERT_UNICODE_ATTR_ERR_INDEX_MASK: UInt32 = 63
CERT_UNICODE_ATTR_ERR_INDEX_SHIFT: UInt32 = 16
CERT_UNICODE_VALUE_ERR_INDEX_MASK: UInt32 = 65535
CERT_UNICODE_VALUE_ERR_INDEX_SHIFT: UInt32 = 0
CERT_DIGITAL_SIGNATURE_KEY_USAGE: UInt32 = 128
CERT_NON_REPUDIATION_KEY_USAGE: UInt32 = 64
CERT_KEY_ENCIPHERMENT_KEY_USAGE: UInt32 = 32
CERT_DATA_ENCIPHERMENT_KEY_USAGE: UInt32 = 16
CERT_KEY_AGREEMENT_KEY_USAGE: UInt32 = 8
CERT_KEY_CERT_SIGN_KEY_USAGE: UInt32 = 4
CERT_OFFLINE_CRL_SIGN_KEY_USAGE: UInt32 = 2
CERT_CRL_SIGN_KEY_USAGE: UInt32 = 2
CERT_ENCIPHER_ONLY_KEY_USAGE: UInt32 = 1
CERT_DECIPHER_ONLY_KEY_USAGE: UInt32 = 128
CERT_ALT_NAME_X400_ADDRESS: UInt32 = 4
CERT_ALT_NAME_EDI_PARTY_NAME: UInt32 = 6
CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK: UInt32 = 255
CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT: UInt32 = 16
CERT_ALT_NAME_VALUE_ERR_INDEX_MASK: UInt32 = 65535
CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT: UInt32 = 0
CERT_CA_SUBJECT_FLAG: UInt32 = 128
CERT_END_ENTITY_SUBJECT_FLAG: UInt32 = 64
szOID_PKIX_ACC_DESCR: String = '1.3.6.1.5.5.7.48'
szOID_PKIX_OCSP: String = '1.3.6.1.5.5.7.48.1'
szOID_PKIX_CA_ISSUERS: String = '1.3.6.1.5.5.7.48.2'
szOID_PKIX_TIME_STAMPING: String = '1.3.6.1.5.5.7.48.3'
szOID_PKIX_CA_REPOSITORY: String = '1.3.6.1.5.5.7.48.5'
CRL_REASON_PRIVILEGE_WITHDRAWN: UInt32 = 9
CRL_REASON_AA_COMPROMISE: UInt32 = 10
CRL_DIST_POINT_NO_NAME: UInt32 = 0
CRL_DIST_POINT_FULL_NAME: UInt32 = 1
CRL_DIST_POINT_ISSUER_RDN_NAME: UInt32 = 2
CRL_REASON_UNUSED_FLAG: UInt32 = 128
CRL_REASON_KEY_COMPROMISE_FLAG: UInt32 = 64
CRL_REASON_CA_COMPROMISE_FLAG: UInt32 = 32
CRL_REASON_AFFILIATION_CHANGED_FLAG: UInt32 = 16
CRL_REASON_SUPERSEDED_FLAG: UInt32 = 8
CRL_REASON_CESSATION_OF_OPERATION_FLAG: UInt32 = 4
CRL_REASON_CERTIFICATE_HOLD_FLAG: UInt32 = 2
CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG: UInt32 = 1
CRL_REASON_AA_COMPROMISE_FLAG: UInt32 = 128
CRL_DIST_POINT_ERR_INDEX_MASK: UInt32 = 127
CRL_DIST_POINT_ERR_INDEX_SHIFT: UInt32 = 24
CRL_DIST_POINT_ERR_CRL_ISSUER_BIT: Int32 = -2147483648
CROSS_CERT_DIST_POINT_ERR_INDEX_MASK: UInt32 = 255
CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT: UInt32 = 24
CERT_EXCLUDED_SUBTREE_BIT: Int32 = -2147483648
SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG: UInt32 = 1
CERT_DSS_R_LEN: UInt32 = 20
CERT_DSS_S_LEN: UInt32 = 20
CRYPT_X942_COUNTER_BYTE_LENGTH: UInt32 = 4
CRYPT_X942_KEY_LENGTH_BYTE_LENGTH: UInt32 = 4
CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH: UInt32 = 4
CRYPT_RC2_40BIT_VERSION: UInt32 = 160
CRYPT_RC2_56BIT_VERSION: UInt32 = 52
CRYPT_RC2_64BIT_VERSION: UInt32 = 120
CRYPT_RC2_128BIT_VERSION: UInt32 = 58
szOID_QC_EU_COMPLIANCE: String = '0.4.0.1862.1.1'
szOID_QC_SSCD: String = '0.4.0.1862.1.4'
PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC: UInt32 = 1
szOID_VERISIGN_PRIVATE_6_9: String = '2.16.840.1.113733.1.6.9'
szOID_VERISIGN_ONSITE_JURISDICTION_HASH: String = '2.16.840.1.113733.1.6.11'
szOID_VERISIGN_BITSTRING_6_13: String = '2.16.840.1.113733.1.6.13'
szOID_VERISIGN_ISS_STRONG_CRYPTO: String = '2.16.840.1.113733.1.8.1'
szOIDVerisign_MessageType: String = '2.16.840.1.113733.1.9.2'
szOIDVerisign_PkiStatus: String = '2.16.840.1.113733.1.9.3'
szOIDVerisign_FailInfo: String = '2.16.840.1.113733.1.9.4'
szOIDVerisign_SenderNonce: String = '2.16.840.1.113733.1.9.5'
szOIDVerisign_RecipientNonce: String = '2.16.840.1.113733.1.9.6'
szOIDVerisign_TransactionID: String = '2.16.840.1.113733.1.9.7'
szOID_NETSCAPE: String = '2.16.840.1.113730'
szOID_NETSCAPE_CERT_EXTENSION: String = '2.16.840.1.113730.1'
szOID_NETSCAPE_CERT_TYPE: String = '2.16.840.1.113730.1.1'
szOID_NETSCAPE_BASE_URL: String = '2.16.840.1.113730.1.2'
szOID_NETSCAPE_REVOCATION_URL: String = '2.16.840.1.113730.1.3'
szOID_NETSCAPE_CA_REVOCATION_URL: String = '2.16.840.1.113730.1.4'
szOID_NETSCAPE_CERT_RENEWAL_URL: String = '2.16.840.1.113730.1.7'
szOID_NETSCAPE_CA_POLICY_URL: String = '2.16.840.1.113730.1.8'
szOID_NETSCAPE_SSL_SERVER_NAME: String = '2.16.840.1.113730.1.12'
szOID_NETSCAPE_COMMENT: String = '2.16.840.1.113730.1.13'
szOID_NETSCAPE_DATA_TYPE: String = '2.16.840.1.113730.2'
szOID_NETSCAPE_CERT_SEQUENCE: String = '2.16.840.1.113730.2.5'
NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE: UInt32 = 128
NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE: UInt32 = 64
NETSCAPE_SMIME_CERT_TYPE: UInt32 = 32
NETSCAPE_SIGN_CERT_TYPE: UInt32 = 16
NETSCAPE_SSL_CA_CERT_TYPE: UInt32 = 4
NETSCAPE_SMIME_CA_CERT_TYPE: UInt32 = 2
NETSCAPE_SIGN_CA_CERT_TYPE: UInt32 = 1
szOID_CT_PKI_DATA: String = '1.3.6.1.5.5.7.12.2'
szOID_CT_PKI_RESPONSE: String = '1.3.6.1.5.5.7.12.3'
szOID_PKIX_NO_SIGNATURE: String = '1.3.6.1.5.5.7.6.2'
szOID_CMC: String = '1.3.6.1.5.5.7.7'
szOID_CMC_STATUS_INFO: String = '1.3.6.1.5.5.7.7.1'
szOID_CMC_IDENTIFICATION: String = '1.3.6.1.5.5.7.7.2'
szOID_CMC_IDENTITY_PROOF: String = '1.3.6.1.5.5.7.7.3'
szOID_CMC_DATA_RETURN: String = '1.3.6.1.5.5.7.7.4'
szOID_CMC_TRANSACTION_ID: String = '1.3.6.1.5.5.7.7.5'
szOID_CMC_SENDER_NONCE: String = '1.3.6.1.5.5.7.7.6'
szOID_CMC_RECIPIENT_NONCE: String = '1.3.6.1.5.5.7.7.7'
szOID_CMC_ADD_EXTENSIONS: String = '1.3.6.1.5.5.7.7.8'
szOID_CMC_ENCRYPTED_POP: String = '1.3.6.1.5.5.7.7.9'
szOID_CMC_DECRYPTED_POP: String = '1.3.6.1.5.5.7.7.10'
szOID_CMC_LRA_POP_WITNESS: String = '1.3.6.1.5.5.7.7.11'
szOID_CMC_GET_CERT: String = '1.3.6.1.5.5.7.7.15'
szOID_CMC_GET_CRL: String = '1.3.6.1.5.5.7.7.16'
szOID_CMC_REVOKE_REQUEST: String = '1.3.6.1.5.5.7.7.17'
szOID_CMC_REG_INFO: String = '1.3.6.1.5.5.7.7.18'
szOID_CMC_RESPONSE_INFO: String = '1.3.6.1.5.5.7.7.19'
szOID_CMC_QUERY_PENDING: String = '1.3.6.1.5.5.7.7.21'
szOID_CMC_ID_POP_LINK_RANDOM: String = '1.3.6.1.5.5.7.7.22'
szOID_CMC_ID_POP_LINK_WITNESS: String = '1.3.6.1.5.5.7.7.23'
szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE: String = '1.3.6.1.5.5.7.7.24'
szOID_CMC_ADD_ATTRIBUTES: String = '1.3.6.1.4.1.311.10.10.1'
CMC_TAGGED_CERT_REQUEST_CHOICE: UInt32 = 1
CMC_OTHER_INFO_NO_CHOICE: UInt32 = 0
CMC_OTHER_INFO_FAIL_CHOICE: UInt32 = 1
CMC_OTHER_INFO_PEND_CHOICE: UInt32 = 2
CMC_STATUS_SUCCESS: UInt32 = 0
CMC_STATUS_FAILED: UInt32 = 2
CMC_STATUS_PENDING: UInt32 = 3
CMC_STATUS_NO_SUPPORT: UInt32 = 4
CMC_STATUS_CONFIRM_REQUIRED: UInt32 = 5
CMC_FAIL_BAD_ALG: UInt32 = 0
CMC_FAIL_BAD_MESSAGE_CHECK: UInt32 = 1
CMC_FAIL_BAD_REQUEST: UInt32 = 2
CMC_FAIL_BAD_TIME: UInt32 = 3
CMC_FAIL_BAD_CERT_ID: UInt32 = 4
CMC_FAIL_UNSUPORTED_EXT: UInt32 = 5
CMC_FAIL_MUST_ARCHIVE_KEYS: UInt32 = 6
CMC_FAIL_BAD_IDENTITY: UInt32 = 7
CMC_FAIL_POP_REQUIRED: UInt32 = 8
CMC_FAIL_POP_FAILED: UInt32 = 9
CMC_FAIL_NO_KEY_REUSE: UInt32 = 10
CMC_FAIL_INTERNAL_CA_ERROR: UInt32 = 11
CMC_FAIL_TRY_LATER: UInt32 = 12
szOID_LOYALTY_OTHER_LOGOTYPE: String = '1.3.6.1.5.5.7.20.1'
szOID_BACKGROUND_OTHER_LOGOTYPE: String = '1.3.6.1.5.5.7.20.2'
CERT_BIOMETRIC_PICTURE_TYPE: UInt32 = 0
CERT_BIOMETRIC_SIGNATURE_TYPE: UInt32 = 1
OCSP_REQUEST_V1: UInt32 = 0
OCSP_SUCCESSFUL_RESPONSE: UInt32 = 0
OCSP_MALFORMED_REQUEST_RESPONSE: UInt32 = 1
OCSP_INTERNAL_ERROR_RESPONSE: UInt32 = 2
OCSP_TRY_LATER_RESPONSE: UInt32 = 3
OCSP_SIG_REQUIRED_RESPONSE: UInt32 = 5
OCSP_UNAUTHORIZED_RESPONSE: UInt32 = 6
szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE: String = '1.3.6.1.5.5.7.48.1.1'
OCSP_BASIC_GOOD_CERT_STATUS: UInt32 = 0
OCSP_BASIC_REVOKED_CERT_STATUS: UInt32 = 1
OCSP_BASIC_UNKNOWN_CERT_STATUS: UInt32 = 2
OCSP_BASIC_RESPONSE_V1: UInt32 = 0
OCSP_BASIC_BY_NAME_RESPONDER_ID: UInt32 = 1
OCSP_BASIC_BY_KEY_RESPONDER_ID: UInt32 = 2
CRYPT_OID_ENCODE_OBJECT_FUNC: String = 'CryptDllEncodeObject'
CRYPT_OID_DECODE_OBJECT_FUNC: String = 'CryptDllDecodeObject'
CRYPT_OID_ENCODE_OBJECT_EX_FUNC: String = 'CryptDllEncodeObjectEx'
CRYPT_OID_DECODE_OBJECT_EX_FUNC: String = 'CryptDllDecodeObjectEx'
CRYPT_OID_CREATE_COM_OBJECT_FUNC: String = 'CryptDllCreateCOMObject'
CRYPT_OID_VERIFY_REVOCATION_FUNC: String = 'CertDllVerifyRevocation'
CRYPT_OID_VERIFY_CTL_USAGE_FUNC: String = 'CertDllVerifyCTLUsage'
CRYPT_OID_FORMAT_OBJECT_FUNC: String = 'CryptDllFormatObject'
CRYPT_OID_FIND_OID_INFO_FUNC: String = 'CryptDllFindOIDInfo'
CRYPT_OID_FIND_LOCALIZED_NAME_FUNC: String = 'CryptDllFindLocalizedName'
CRYPT_OID_REGPATH: String = 'Software\\Microsoft\\Cryptography\\OID'
CRYPT_OID_REG_ENCODING_TYPE_PREFIX: String = 'EncodingType '
CRYPT_OID_REG_DLL_VALUE_NAME: String = 'Dll'
CRYPT_OID_REG_FUNC_NAME_VALUE_NAME: String = 'FuncName'
CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A: String = 'FuncName'
CRYPT_OID_REG_FLAGS_VALUE_NAME: String = 'CryptFlags'
CRYPT_DEFAULT_OID: String = 'DEFAULT'
CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG: UInt32 = 1
CRYPT_GET_INSTALLED_OID_FUNC_FLAG: UInt32 = 1
CRYPT_REGISTER_FIRST_INDEX: UInt32 = 0
CRYPT_REGISTER_LAST_INDEX: UInt32 = 4294967295
CRYPT_MATCH_ANY_ENCODING_TYPE: UInt32 = 4294967295
CALG_OID_INFO_CNG_ONLY: UInt32 = 4294967295
CALG_OID_INFO_PARAMETERS: UInt32 = 4294967294
CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoHashParameters'
CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoECCParameters'
CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoMgf1Parameters'
CRYPT_OID_INFO_NO_SIGN_ALGORITHM: String = 'CryptOIDInfoNoSign'
CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoOAEPParameters'
CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoECCWrapParameters'
CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM: String = 'CryptOIDInfoNoParameters'
CRYPT_HASH_ALG_OID_GROUP_ID: UInt32 = 1
CRYPT_ENCRYPT_ALG_OID_GROUP_ID: UInt32 = 2
CRYPT_PUBKEY_ALG_OID_GROUP_ID: UInt32 = 3
CRYPT_SIGN_ALG_OID_GROUP_ID: UInt32 = 4
CRYPT_RDN_ATTR_OID_GROUP_ID: UInt32 = 5
CRYPT_EXT_OR_ATTR_OID_GROUP_ID: UInt32 = 6
CRYPT_ENHKEY_USAGE_OID_GROUP_ID: UInt32 = 7
CRYPT_POLICY_OID_GROUP_ID: UInt32 = 8
CRYPT_TEMPLATE_OID_GROUP_ID: UInt32 = 9
CRYPT_KDF_OID_GROUP_ID: UInt32 = 10
CRYPT_LAST_OID_GROUP_ID: UInt32 = 10
CRYPT_FIRST_ALG_OID_GROUP_ID: UInt32 = 1
CRYPT_LAST_ALG_OID_GROUP_ID: UInt32 = 4
CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG: UInt32 = 1
CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG: UInt32 = 2
CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG: UInt32 = 4
CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG: UInt32 = 2147483648
CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG: UInt32 = 1073741824
CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG: UInt32 = 536870912
CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG: UInt32 = 268435456
CRYPT_OID_INFO_OID_KEY: UInt32 = 1
CRYPT_OID_INFO_NAME_KEY: UInt32 = 2
CRYPT_OID_INFO_ALGID_KEY: UInt32 = 3
CRYPT_OID_INFO_SIGN_KEY: UInt32 = 4
CRYPT_OID_INFO_CNG_ALGID_KEY: UInt32 = 5
CRYPT_OID_INFO_CNG_SIGN_KEY: UInt32 = 6
CRYPT_OID_INFO_OID_KEY_FLAGS_MASK: UInt32 = 4294901760
CRYPT_OID_DISABLE_SEARCH_DS_FLAG: UInt32 = 2147483648
CRYPT_OID_PREFER_CNG_ALGID_FLAG: UInt32 = 1073741824
CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK: UInt32 = 268369920
CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT: UInt32 = 16
CRYPT_INSTALL_OID_INFO_BEFORE_FLAG: UInt32 = 1
CRYPT_LOCALIZED_NAME_ENCODING_TYPE: UInt32 = 0
CRYPT_LOCALIZED_NAME_OID: String = 'LocalizedNames'
CERT_STRONG_SIGN_ECDSA_ALGORITHM: String = 'ECDSA'
CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE: UInt32 = 1
CERT_STRONG_SIGN_OID_INFO_CHOICE: UInt32 = 2
szOID_CERT_STRONG_SIGN_OS_PREFIX: String = '1.3.6.1.4.1.311.72.1.'
szOID_CERT_STRONG_SIGN_OS_1: String = '1.3.6.1.4.1.311.72.1.1'
szOID_CERT_STRONG_SIGN_OS_CURRENT: String = '1.3.6.1.4.1.311.72.1.1'
szOID_CERT_STRONG_KEY_OS_PREFIX: String = '1.3.6.1.4.1.311.72.2.'
szOID_CERT_STRONG_KEY_OS_1: String = '1.3.6.1.4.1.311.72.2.1'
szOID_CERT_STRONG_KEY_OS_CURRENT: String = '1.3.6.1.4.1.311.72.2.1'
szOID_PKCS_7_DATA: String = '1.2.840.113549.1.7.1'
szOID_PKCS_7_SIGNED: String = '1.2.840.113549.1.7.2'
szOID_PKCS_7_ENVELOPED: String = '1.2.840.113549.1.7.3'
szOID_PKCS_7_SIGNEDANDENVELOPED: String = '1.2.840.113549.1.7.4'
szOID_PKCS_7_DIGESTED: String = '1.2.840.113549.1.7.5'
szOID_PKCS_7_ENCRYPTED: String = '1.2.840.113549.1.7.6'
szOID_PKCS_9_CONTENT_TYPE: String = '1.2.840.113549.1.9.3'
szOID_PKCS_9_MESSAGE_DIGEST: String = '1.2.840.113549.1.9.4'
CMSG_ENCRYPTED: UInt32 = 6
CMSG_MAIL_LIST_HANDLE_KEY_CHOICE: UInt32 = 1
CMSG_KEY_TRANS_RECIPIENT: UInt32 = 1
CMSG_KEY_AGREE_RECIPIENT: UInt32 = 2
CMSG_MAIL_LIST_RECIPIENT: UInt32 = 3
CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG: UInt32 = 2147483648
CMSG_RC4_NO_SALT_FLAG: UInt32 = 1073741824
CMSG_INDEFINITE_LENGTH: UInt32 = 4294967295
CMSG_BARE_CONTENT_FLAG: UInt32 = 1
CMSG_LENGTH_ONLY_FLAG: UInt32 = 2
CMSG_DETACHED_FLAG: UInt32 = 4
CMSG_AUTHENTICATED_ATTRIBUTES_FLAG: UInt32 = 8
CMSG_CONTENTS_OCTETS_FLAG: UInt32 = 16
CMSG_MAX_LENGTH_FLAG: UInt32 = 32
CMSG_CMS_ENCAPSULATED_CONTENT_FLAG: UInt32 = 64
CMSG_SIGNED_DATA_NO_SIGN_FLAG: UInt32 = 128
CMSG_CRYPT_RELEASE_CONTEXT_FLAG: UInt32 = 32768
CMSG_TYPE_PARAM: UInt32 = 1
CMSG_CONTENT_PARAM: UInt32 = 2
CMSG_BARE_CONTENT_PARAM: UInt32 = 3
CMSG_INNER_CONTENT_TYPE_PARAM: UInt32 = 4
CMSG_SIGNER_COUNT_PARAM: UInt32 = 5
CMSG_SIGNER_INFO_PARAM: UInt32 = 6
CMSG_SIGNER_CERT_INFO_PARAM: UInt32 = 7
CMSG_SIGNER_HASH_ALGORITHM_PARAM: UInt32 = 8
CMSG_SIGNER_AUTH_ATTR_PARAM: UInt32 = 9
CMSG_SIGNER_UNAUTH_ATTR_PARAM: UInt32 = 10
CMSG_CERT_COUNT_PARAM: UInt32 = 11
CMSG_CERT_PARAM: UInt32 = 12
CMSG_CRL_COUNT_PARAM: UInt32 = 13
CMSG_CRL_PARAM: UInt32 = 14
CMSG_ENVELOPE_ALGORITHM_PARAM: UInt32 = 15
CMSG_RECIPIENT_COUNT_PARAM: UInt32 = 17
CMSG_RECIPIENT_INDEX_PARAM: UInt32 = 18
CMSG_RECIPIENT_INFO_PARAM: UInt32 = 19
CMSG_HASH_ALGORITHM_PARAM: UInt32 = 20
CMSG_HASH_DATA_PARAM: UInt32 = 21
CMSG_COMPUTED_HASH_PARAM: UInt32 = 22
CMSG_ENCRYPT_PARAM: UInt32 = 26
CMSG_ENCRYPTED_DIGEST: UInt32 = 27
CMSG_ENCODED_SIGNER: UInt32 = 28
CMSG_ENCODED_MESSAGE: UInt32 = 29
CMSG_VERSION_PARAM: UInt32 = 30
CMSG_ATTR_CERT_COUNT_PARAM: UInt32 = 31
CMSG_ATTR_CERT_PARAM: UInt32 = 32
CMSG_CMS_RECIPIENT_COUNT_PARAM: UInt32 = 33
CMSG_CMS_RECIPIENT_INDEX_PARAM: UInt32 = 34
CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM: UInt32 = 35
CMSG_CMS_RECIPIENT_INFO_PARAM: UInt32 = 36
CMSG_UNPROTECTED_ATTR_PARAM: UInt32 = 37
CMSG_SIGNER_CERT_ID_PARAM: UInt32 = 38
CMSG_CMS_SIGNER_INFO_PARAM: UInt32 = 39
CMSG_SIGNED_DATA_V1: UInt32 = 1
CMSG_SIGNED_DATA_V3: UInt32 = 3
CMSG_SIGNED_DATA_PKCS_1_5_VERSION: UInt32 = 1
CMSG_SIGNED_DATA_CMS_VERSION: UInt32 = 3
CMSG_SIGNER_INFO_V1: UInt32 = 1
CMSG_SIGNER_INFO_V3: UInt32 = 3
CMSG_SIGNER_INFO_PKCS_1_5_VERSION: UInt32 = 1
CMSG_SIGNER_INFO_CMS_VERSION: UInt32 = 3
CMSG_HASHED_DATA_V0: UInt32 = 0
CMSG_HASHED_DATA_V2: UInt32 = 2
CMSG_HASHED_DATA_PKCS_1_5_VERSION: UInt32 = 0
CMSG_HASHED_DATA_CMS_VERSION: UInt32 = 2
CMSG_ENVELOPED_DATA_V0: UInt32 = 0
CMSG_ENVELOPED_DATA_V2: UInt32 = 2
CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION: UInt32 = 0
CMSG_ENVELOPED_DATA_CMS_VERSION: UInt32 = 2
CMSG_ENVELOPED_RECIPIENT_V0: UInt32 = 0
CMSG_ENVELOPED_RECIPIENT_V2: UInt32 = 2
CMSG_ENVELOPED_RECIPIENT_V3: UInt32 = 3
CMSG_ENVELOPED_RECIPIENT_V4: UInt32 = 4
CMSG_KEY_TRANS_PKCS_1_5_VERSION: UInt32 = 0
CMSG_KEY_TRANS_CMS_VERSION: UInt32 = 2
CMSG_KEY_AGREE_VERSION: UInt32 = 3
CMSG_MAIL_LIST_VERSION: UInt32 = 4
CMSG_CTRL_VERIFY_SIGNATURE: UInt32 = 1
CMSG_CTRL_DECRYPT: UInt32 = 2
CMSG_CTRL_VERIFY_HASH: UInt32 = 5
CMSG_CTRL_ADD_SIGNER: UInt32 = 6
CMSG_CTRL_DEL_SIGNER: UInt32 = 7
CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR: UInt32 = 8
CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR: UInt32 = 9
CMSG_CTRL_ADD_CERT: UInt32 = 10
CMSG_CTRL_DEL_CERT: UInt32 = 11
CMSG_CTRL_ADD_CRL: UInt32 = 12
CMSG_CTRL_DEL_CRL: UInt32 = 13
CMSG_CTRL_ADD_ATTR_CERT: UInt32 = 14
CMSG_CTRL_DEL_ATTR_CERT: UInt32 = 15
CMSG_CTRL_KEY_TRANS_DECRYPT: UInt32 = 16
CMSG_CTRL_KEY_AGREE_DECRYPT: UInt32 = 17
CMSG_CTRL_MAIL_LIST_DECRYPT: UInt32 = 18
CMSG_CTRL_VERIFY_SIGNATURE_EX: UInt32 = 19
CMSG_CTRL_ADD_CMS_SIGNER_INFO: UInt32 = 20
CMSG_CTRL_ENABLE_STRONG_SIGNATURE: UInt32 = 21
CMSG_VERIFY_SIGNER_PUBKEY: UInt32 = 1
CMSG_VERIFY_SIGNER_CERT: UInt32 = 2
CMSG_VERIFY_SIGNER_CHAIN: UInt32 = 3
CMSG_VERIFY_SIGNER_NULL: UInt32 = 4
CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG: UInt32 = 1
CMSG_OID_GEN_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllGenEncryptKey'
CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllExportEncryptKey'
CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllImportEncryptKey'
CMSG_DEFAULT_INSTALLABLE_FUNC_OID: win32more.Foundation.PSTR = 1
CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG: UInt32 = 1
CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 2
CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG: UInt32 = 32768
CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllGenContentEncryptKey'
CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllGenContentEncryptKey'
CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllCNGGenContentEncryptKey'
CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 2
CMSG_OID_EXPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllExportKeyTrans'
CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllExportKeyTrans'
CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllCNGExportKeyTrans'
CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG: UInt32 = 2
CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG: UInt32 = 4
CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG: UInt32 = 8
CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG: UInt32 = 16
CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 32
CMSG_OID_EXPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllExportKeyAgree'
CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllExportKeyAgree'
CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllCNGExportKeyAgree'
CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG: UInt32 = 1
CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG: UInt32 = 2
CMSG_OID_EXPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllExportMailList'
CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllExportMailList'
CMSG_OID_IMPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllImportKeyTrans'
CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllImportKeyTrans'
CMSG_OID_IMPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllImportKeyAgree'
CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllImportKeyAgree'
CMSG_OID_IMPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllImportMailList'
CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC: String = 'CryptMsgDllImportMailList'
CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC: String = 'CryptMsgDllCNGImportKeyTrans'
CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC: String = 'CryptMsgDllCNGImportKeyAgree'
CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC: String = 'CryptMsgDllCNGImportContentEncryptKey'
CERT_KEY_PROV_HANDLE_PROP_ID: UInt32 = 1
CERT_KEY_PROV_INFO_PROP_ID: UInt32 = 2
CERT_SHA1_HASH_PROP_ID: UInt32 = 3
CERT_MD5_HASH_PROP_ID: UInt32 = 4
CERT_HASH_PROP_ID: UInt32 = 3
CERT_KEY_CONTEXT_PROP_ID: UInt32 = 5
CERT_KEY_SPEC_PROP_ID: UInt32 = 6
CERT_IE30_RESERVED_PROP_ID: UInt32 = 7
CERT_PUBKEY_HASH_RESERVED_PROP_ID: UInt32 = 8
CERT_ENHKEY_USAGE_PROP_ID: UInt32 = 9
CERT_CTL_USAGE_PROP_ID: UInt32 = 9
CERT_NEXT_UPDATE_LOCATION_PROP_ID: UInt32 = 10
CERT_FRIENDLY_NAME_PROP_ID: UInt32 = 11
CERT_PVK_FILE_PROP_ID: UInt32 = 12
CERT_DESCRIPTION_PROP_ID: UInt32 = 13
CERT_ACCESS_STATE_PROP_ID: UInt32 = 14
CERT_SIGNATURE_HASH_PROP_ID: UInt32 = 15
CERT_SMART_CARD_DATA_PROP_ID: UInt32 = 16
CERT_EFS_PROP_ID: UInt32 = 17
CERT_FORTEZZA_DATA_PROP_ID: UInt32 = 18
CERT_ARCHIVED_PROP_ID: UInt32 = 19
CERT_KEY_IDENTIFIER_PROP_ID: UInt32 = 20
CERT_AUTO_ENROLL_PROP_ID: UInt32 = 21
CERT_PUBKEY_ALG_PARA_PROP_ID: UInt32 = 22
CERT_CROSS_CERT_DIST_POINTS_PROP_ID: UInt32 = 23
CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID: UInt32 = 24
CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID: UInt32 = 25
CERT_ENROLLMENT_PROP_ID: UInt32 = 26
CERT_DATE_STAMP_PROP_ID: UInt32 = 27
CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID: UInt32 = 28
CERT_SUBJECT_NAME_MD5_HASH_PROP_ID: UInt32 = 29
CERT_EXTENDED_ERROR_INFO_PROP_ID: UInt32 = 30
CERT_RENEWAL_PROP_ID: UInt32 = 64
CERT_ARCHIVED_KEY_HASH_PROP_ID: UInt32 = 65
CERT_AUTO_ENROLL_RETRY_PROP_ID: UInt32 = 66
CERT_AIA_URL_RETRIEVED_PROP_ID: UInt32 = 67
CERT_AUTHORITY_INFO_ACCESS_PROP_ID: UInt32 = 68
CERT_BACKED_UP_PROP_ID: UInt32 = 69
CERT_OCSP_RESPONSE_PROP_ID: UInt32 = 70
CERT_REQUEST_ORIGINATOR_PROP_ID: UInt32 = 71
CERT_SOURCE_LOCATION_PROP_ID: UInt32 = 72
CERT_SOURCE_URL_PROP_ID: UInt32 = 73
CERT_NEW_KEY_PROP_ID: UInt32 = 74
CERT_OCSP_CACHE_PREFIX_PROP_ID: UInt32 = 75
CERT_SMART_CARD_ROOT_INFO_PROP_ID: UInt32 = 76
CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID: UInt32 = 77
CERT_NCRYPT_KEY_HANDLE_PROP_ID: UInt32 = 78
CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID: UInt32 = 79
CERT_SUBJECT_INFO_ACCESS_PROP_ID: UInt32 = 80
CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID: UInt32 = 81
CERT_CA_DISABLE_CRL_PROP_ID: UInt32 = 82
CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID: UInt32 = 83
CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID: UInt32 = 84
CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID: UInt32 = 85
CERT_SUBJECT_DISABLE_CRL_PROP_ID: UInt32 = 86
CERT_CEP_PROP_ID: UInt32 = 87
CERT_SIGN_HASH_CNG_ALG_PROP_ID: UInt32 = 89
CERT_SCARD_PIN_ID_PROP_ID: UInt32 = 90
CERT_SCARD_PIN_INFO_PROP_ID: UInt32 = 91
CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID: UInt32 = 92
CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID: UInt32 = 93
CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID: UInt32 = 94
CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID: UInt32 = 95
CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID: UInt32 = 96
CERT_NO_EXPIRE_NOTIFICATION_PROP_ID: UInt32 = 97
CERT_AUTH_ROOT_SHA256_HASH_PROP_ID: UInt32 = 98
CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID: UInt32 = 99
CERT_HCRYPTPROV_TRANSFER_PROP_ID: UInt32 = 100
CERT_SMART_CARD_READER_PROP_ID: UInt32 = 101
CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID: UInt32 = 102
CERT_KEY_REPAIR_ATTEMPTED_PROP_ID: UInt32 = 103
CERT_DISALLOWED_FILETIME_PROP_ID: UInt32 = 104
CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID: UInt32 = 105
CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID: UInt32 = 106
CERT_SHA256_HASH_PROP_ID: UInt32 = 107
CERT_SCEP_SERVER_CERTS_PROP_ID: UInt32 = 108
CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID: UInt32 = 109
CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID: UInt32 = 110
CERT_SCEP_CA_CERT_PROP_ID: UInt32 = 111
CERT_SCEP_SIGNER_CERT_PROP_ID: UInt32 = 112
CERT_SCEP_NONCE_PROP_ID: UInt32 = 113
CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID: UInt32 = 114
CERT_SCEP_FLAGS_PROP_ID: UInt32 = 115
CERT_SCEP_GUID_PROP_ID: UInt32 = 116
CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID: UInt32 = 117
CERT_ISOLATED_KEY_PROP_ID: UInt32 = 118
CERT_SERIAL_CHAIN_PROP_ID: UInt32 = 119
CERT_KEY_CLASSIFICATION_PROP_ID: UInt32 = 120
CERT_OCSP_MUST_STAPLE_PROP_ID: UInt32 = 121
CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID: UInt32 = 122
CERT_NONCOMPLIANT_ROOT_URL_PROP_ID: UInt32 = 123
CERT_PIN_SHA256_HASH_PROP_ID: UInt32 = 124
CERT_CLR_DELETE_KEY_PROP_ID: UInt32 = 125
CERT_NOT_BEFORE_FILETIME_PROP_ID: UInt32 = 126
CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID: UInt32 = 127
CERT_FIRST_RESERVED_PROP_ID: UInt32 = 128
CERT_LAST_RESERVED_PROP_ID: UInt32 = 32767
CERT_FIRST_USER_PROP_ID: UInt32 = 32768
CERT_LAST_USER_PROP_ID: UInt32 = 65535
szOID_CERT_PROP_ID_PREFIX: String = '1.3.6.1.4.1.311.10.11.'
szOID_CERT_KEY_IDENTIFIER_PROP_ID: String = '1.3.6.1.4.1.311.10.11.20'
szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.28'
szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.29'
szOID_CERT_MD5_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.4'
szOID_CERT_SIGNATURE_HASH_PROP_ID: String = '1.3.6.1.4.1.311.10.11.15'
szOID_DISALLOWED_HASH: String = '1.3.6.1.4.1.311.10.11.15'
szOID_CERT_DISALLOWED_FILETIME_PROP_ID: String = '1.3.6.1.4.1.311.10.11.104'
CERT_ACCESS_STATE_WRITE_PERSIST_FLAG: UInt32 = 1
CERT_ACCESS_STATE_SYSTEM_STORE_FLAG: UInt32 = 2
CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG: UInt32 = 4
CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG: UInt32 = 8
CERT_ACCESS_STATE_SHARED_USER_FLAG: UInt32 = 16
szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION: String = '1.3.6.1.4.1.311.60.3.1'
szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION: String = '1.3.6.1.4.1.311.60.3.2'
szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL: String = '1.3.6.1.4.1.311.60.3.3'
CERT_STORE_PROV_MSG: win32more.Foundation.PSTR = 1
CERT_STORE_PROV_MEMORY: win32more.Foundation.PSTR = 2
CERT_STORE_PROV_FILE: win32more.Foundation.PSTR = 3
CERT_STORE_PROV_REG: win32more.Foundation.PSTR = 4
CERT_STORE_PROV_PKCS7: win32more.Foundation.PSTR = 5
CERT_STORE_PROV_SERIALIZED: win32more.Foundation.PSTR = 6
CERT_STORE_PROV_FILENAME_A: win32more.Foundation.PSTR = 7
CERT_STORE_PROV_FILENAME_W: win32more.Foundation.PSTR = 8
CERT_STORE_PROV_FILENAME: Int32 = 8
CERT_STORE_PROV_SYSTEM_A: win32more.Foundation.PSTR = 9
CERT_STORE_PROV_SYSTEM_W: win32more.Foundation.PSTR = 10
CERT_STORE_PROV_SYSTEM: Int32 = 10
CERT_STORE_PROV_COLLECTION: win32more.Foundation.PSTR = 11
CERT_STORE_PROV_SYSTEM_REGISTRY_A: win32more.Foundation.PSTR = 12
CERT_STORE_PROV_SYSTEM_REGISTRY_W: win32more.Foundation.PSTR = 13
CERT_STORE_PROV_SYSTEM_REGISTRY: Int32 = 13
CERT_STORE_PROV_PHYSICAL_W: win32more.Foundation.PSTR = 14
CERT_STORE_PROV_PHYSICAL: Int32 = 14
CERT_STORE_PROV_SMART_CARD_W: win32more.Foundation.PSTR = 15
CERT_STORE_PROV_SMART_CARD: Int32 = 15
CERT_STORE_PROV_LDAP_W: win32more.Foundation.PSTR = 16
CERT_STORE_PROV_LDAP: Int32 = 16
CERT_STORE_PROV_PKCS12: win32more.Foundation.PSTR = 17
sz_CERT_STORE_PROV_MEMORY: String = 'Memory'
sz_CERT_STORE_PROV_FILENAME_W: String = 'File'
sz_CERT_STORE_PROV_FILENAME: String = 'File'
sz_CERT_STORE_PROV_SYSTEM_W: String = 'System'
sz_CERT_STORE_PROV_SYSTEM: String = 'System'
sz_CERT_STORE_PROV_PKCS7: String = 'PKCS7'
sz_CERT_STORE_PROV_PKCS12: String = 'PKCS12'
sz_CERT_STORE_PROV_SERIALIZED: String = 'Serialized'
sz_CERT_STORE_PROV_COLLECTION: String = 'Collection'
sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W: String = 'SystemRegistry'
sz_CERT_STORE_PROV_SYSTEM_REGISTRY: String = 'SystemRegistry'
sz_CERT_STORE_PROV_PHYSICAL_W: String = 'Physical'
sz_CERT_STORE_PROV_PHYSICAL: String = 'Physical'
sz_CERT_STORE_PROV_SMART_CARD_W: String = 'SmartCard'
sz_CERT_STORE_PROV_SMART_CARD: String = 'SmartCard'
sz_CERT_STORE_PROV_LDAP_W: String = 'Ldap'
sz_CERT_STORE_PROV_LDAP: String = 'Ldap'
CERT_STORE_SIGNATURE_FLAG: UInt32 = 1
CERT_STORE_TIME_VALIDITY_FLAG: UInt32 = 2
CERT_STORE_REVOCATION_FLAG: UInt32 = 4
CERT_STORE_NO_CRL_FLAG: UInt32 = 65536
CERT_STORE_NO_ISSUER_FLAG: UInt32 = 131072
CERT_STORE_BASE_CRL_FLAG: UInt32 = 256
CERT_STORE_DELTA_CRL_FLAG: UInt32 = 512
CERT_STORE_UNSAFE_PHYSICAL_FLAG: UInt32 = 32
CERT_STORE_SHARE_STORE_FLAG: UInt32 = 64
CERT_STORE_MANIFOLD_FLAG: UInt32 = 256
CERT_SYSTEM_STORE_MASK: UInt32 = 4294901760
CERT_SYSTEM_STORE_UNPROTECTED_FLAG: UInt32 = 1073741824
CERT_SYSTEM_STORE_DEFER_READ_FLAG: UInt32 = 536870912
CERT_SYSTEM_STORE_LOCATION_SHIFT: UInt32 = 16
CERT_SYSTEM_STORE_CURRENT_USER_ID: UInt32 = 1
CERT_SYSTEM_STORE_LOCAL_MACHINE_ID: UInt32 = 2
CERT_SYSTEM_STORE_CURRENT_SERVICE_ID: UInt32 = 4
CERT_SYSTEM_STORE_SERVICES_ID: UInt32 = 5
CERT_SYSTEM_STORE_USERS_ID: UInt32 = 6
CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID: UInt32 = 7
CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID: UInt32 = 8
CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID: UInt32 = 9
CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID: UInt32 = 10
CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH: String = 'Software\\Policies\\Microsoft\\SystemCertificates'
CERT_EFSBLOB_VALUE_NAME: String = 'EFSBlob'
CERT_PROT_ROOT_FLAGS_VALUE_NAME: String = 'Flags'
CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG: UInt32 = 1
CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG: UInt32 = 2
CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG: UInt32 = 4
CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG: UInt32 = 8
CERT_PROT_ROOT_ONLY_LM_GPT_FLAG: UInt32 = 8
CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG: UInt32 = 16
CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG: UInt32 = 32
CERT_PROT_ROOT_DISABLE_PEER_TRUST: UInt32 = 65536
CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME: String = 'PeerUsages'
CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A: String = 'PeerUsages'
CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH: String = 'Software\\Microsoft\\SystemCertificates'
CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME: String = 'AuthenticodeFlags'
CERT_TRUST_PUB_ALLOW_TRUST_MASK: UInt32 = 3
CERT_TRUST_PUB_ALLOW_END_USER_TRUST: UInt32 = 0
CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST: UInt32 = 1
CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST: UInt32 = 2
CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG: UInt32 = 256
CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG: UInt32 = 512
CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH: String = 'SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\OC Manager\\Subcomponents'
CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME: String = 'RootAutoUpdate'
CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME: String = 'DisableRootAutoUpdate'
CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME: String = 'EnableDisallowedCertAutoUpdate'
CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME: String = 'DisablePinRulesAutoUpdate'
CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME: String = 'RootDirUrl'
CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME: String = 'SyncFromDirUrl'
CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME: String = 'RootDirUrl'
CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME: String = 'SyncDeltaTime'
CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME: String = 'Flags'
CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG: UInt32 = 1
CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG: UInt32 = 2
CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG: UInt32 = 4
CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME: String = 'LastSyncTime'
CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME: String = 'EncodedCtl'
CERT_AUTH_ROOT_CTL_FILENAME: String = 'authroot.stl'
CERT_AUTH_ROOT_CTL_FILENAME_A: String = 'authroot.stl'
CERT_AUTH_ROOT_CAB_FILENAME: String = 'authrootstl.cab'
CERT_AUTH_ROOT_SEQ_FILENAME: String = 'authrootseq.txt'
CERT_AUTH_ROOT_CERT_EXT: String = '.crt'
CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME: String = 'DisallowedCertSyncDeltaTime'
CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME: String = 'DisallowedCertLastSyncTime'
CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME: String = 'DisallowedCertEncodedCtl'
CERT_DISALLOWED_CERT_CTL_FILENAME: String = 'disallowedcert.stl'
CERT_DISALLOWED_CERT_CTL_FILENAME_A: String = 'disallowedcert.stl'
CERT_DISALLOWED_CERT_CAB_FILENAME: String = 'disallowedcertstl.cab'
CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER: String = 'DisallowedCert_AutoUpdate_1'
CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME: String = 'PinRulesSyncDeltaTime'
CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME: String = 'PinRulesLastSyncTime'
CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME: String = 'PinRulesEncodedCtl'
CERT_PIN_RULES_CTL_FILENAME: String = 'pinrules.stl'
CERT_PIN_RULES_CTL_FILENAME_A: String = 'pinrules.stl'
CERT_PIN_RULES_CAB_FILENAME: String = 'pinrulesstl.cab'
CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER: String = 'PinRules_AutoUpdate_1'
CERT_REGISTRY_STORE_REMOTE_FLAG: UInt32 = 65536
CERT_REGISTRY_STORE_SERIALIZED_FLAG: UInt32 = 131072
CERT_REGISTRY_STORE_CLIENT_GPT_FLAG: UInt32 = 2147483648
CERT_REGISTRY_STORE_LM_GPT_FLAG: UInt32 = 16777216
CERT_REGISTRY_STORE_ROAMING_FLAG: UInt32 = 262144
CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG: UInt32 = 524288
CERT_REGISTRY_STORE_EXTERNAL_FLAG: UInt32 = 1048576
CERT_IE_DIRTY_FLAGS_REGPATH: String = 'Software\\Microsoft\\Cryptography\\IEDirtyFlags'
CERT_FILE_STORE_COMMIT_ENABLE_FLAG: UInt32 = 65536
CERT_LDAP_STORE_SIGN_FLAG: UInt32 = 65536
CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG: UInt32 = 131072
CERT_LDAP_STORE_OPENED_FLAG: UInt32 = 262144
CERT_LDAP_STORE_UNBIND_FLAG: UInt32 = 524288
CRYPT_OID_OPEN_STORE_PROV_FUNC: String = 'CertDllOpenStoreProv'
CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG: UInt32 = 32
CERT_STORE_PROV_SHARED_USER_FLAG: UInt32 = 64
CERT_STORE_PROV_CLOSE_FUNC: UInt32 = 0
CERT_STORE_PROV_READ_CERT_FUNC: UInt32 = 1
CERT_STORE_PROV_WRITE_CERT_FUNC: UInt32 = 2
CERT_STORE_PROV_DELETE_CERT_FUNC: UInt32 = 3
CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC: UInt32 = 4
CERT_STORE_PROV_READ_CRL_FUNC: UInt32 = 5
CERT_STORE_PROV_WRITE_CRL_FUNC: UInt32 = 6
CERT_STORE_PROV_DELETE_CRL_FUNC: UInt32 = 7
CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC: UInt32 = 8
CERT_STORE_PROV_READ_CTL_FUNC: UInt32 = 9
CERT_STORE_PROV_WRITE_CTL_FUNC: UInt32 = 10
CERT_STORE_PROV_DELETE_CTL_FUNC: UInt32 = 11
CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC: UInt32 = 12
CERT_STORE_PROV_CONTROL_FUNC: UInt32 = 13
CERT_STORE_PROV_FIND_CERT_FUNC: UInt32 = 14
CERT_STORE_PROV_FREE_FIND_CERT_FUNC: UInt32 = 15
CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC: UInt32 = 16
CERT_STORE_PROV_FIND_CRL_FUNC: UInt32 = 17
CERT_STORE_PROV_FREE_FIND_CRL_FUNC: UInt32 = 18
CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC: UInt32 = 19
CERT_STORE_PROV_FIND_CTL_FUNC: UInt32 = 20
CERT_STORE_PROV_FREE_FIND_CTL_FUNC: UInt32 = 21
CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC: UInt32 = 22
CERT_STORE_PROV_WRITE_ADD_FLAG: UInt32 = 1
CERT_STORE_SAVE_AS_PKCS12: UInt32 = 3
CERT_CLOSE_STORE_FORCE_FLAG: UInt32 = 1
CERT_CLOSE_STORE_CHECK_FLAG: UInt32 = 2
CERT_COMPARE_MASK: UInt32 = 65535
CERT_COMPARE_ANY: UInt32 = 0
CERT_COMPARE_SHA1_HASH: UInt32 = 1
CERT_COMPARE_NAME: UInt32 = 2
CERT_COMPARE_ATTR: UInt32 = 3
CERT_COMPARE_MD5_HASH: UInt32 = 4
CERT_COMPARE_PROPERTY: UInt32 = 5
CERT_COMPARE_PUBLIC_KEY: UInt32 = 6
CERT_COMPARE_HASH: UInt32 = 1
CERT_COMPARE_NAME_STR_A: UInt32 = 7
CERT_COMPARE_NAME_STR_W: UInt32 = 8
CERT_COMPARE_KEY_SPEC: UInt32 = 9
CERT_COMPARE_ENHKEY_USAGE: UInt32 = 10
CERT_COMPARE_CTL_USAGE: UInt32 = 10
CERT_COMPARE_SUBJECT_CERT: UInt32 = 11
CERT_COMPARE_ISSUER_OF: UInt32 = 12
CERT_COMPARE_EXISTING: UInt32 = 13
CERT_COMPARE_SIGNATURE_HASH: UInt32 = 14
CERT_COMPARE_KEY_IDENTIFIER: UInt32 = 15
CERT_COMPARE_CERT_ID: UInt32 = 16
CERT_COMPARE_CROSS_CERT_DIST_POINTS: UInt32 = 17
CERT_COMPARE_PUBKEY_MD5_HASH: UInt32 = 18
CERT_COMPARE_SUBJECT_INFO_ACCESS: UInt32 = 19
CERT_COMPARE_HASH_STR: UInt32 = 20
CERT_COMPARE_HAS_PRIVATE_KEY: UInt32 = 21
CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG: UInt32 = 2147483648
CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG: UInt32 = 1073741824
CTL_ENTRY_FROM_PROP_CHAIN_FLAG: UInt32 = 1
CRL_FIND_ANY: UInt32 = 0
CRL_FIND_ISSUED_BY: UInt32 = 1
CRL_FIND_EXISTING: UInt32 = 2
CRL_FIND_ISSUED_FOR: UInt32 = 3
CRL_FIND_ISSUED_BY_AKI_FLAG: UInt32 = 1
CRL_FIND_ISSUED_BY_SIGNATURE_FLAG: UInt32 = 2
CRL_FIND_ISSUED_BY_DELTA_FLAG: UInt32 = 4
CRL_FIND_ISSUED_BY_BASE_FLAG: UInt32 = 8
CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG: UInt32 = 16
CERT_STORE_ADD_NEW: UInt32 = 1
CERT_STORE_ADD_USE_EXISTING: UInt32 = 2
CERT_STORE_ADD_REPLACE_EXISTING: UInt32 = 3
CERT_STORE_ADD_ALWAYS: UInt32 = 4
CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES: UInt32 = 5
CERT_STORE_ADD_NEWER: UInt32 = 6
CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES: UInt32 = 7
CERT_STORE_CERTIFICATE_CONTEXT: UInt32 = 1
CERT_STORE_CRL_CONTEXT: UInt32 = 2
CERT_STORE_CTL_CONTEXT: UInt32 = 3
CTL_ANY_SUBJECT_TYPE: UInt32 = 1
CTL_CERT_SUBJECT_TYPE: UInt32 = 2
CTL_FIND_NO_LIST_ID_CBDATA: UInt32 = 4294967295
CERT_STORE_CTRL_RESYNC: UInt32 = 1
CERT_STORE_CTRL_NOTIFY_CHANGE: UInt32 = 2
CERT_STORE_CTRL_COMMIT: UInt32 = 3
CERT_STORE_CTRL_AUTO_RESYNC: UInt32 = 4
CERT_STORE_CTRL_CANCEL_NOTIFY: UInt32 = 5
CERT_STORE_LOCALIZED_NAME_PROP_ID: UInt32 = 4096
CERT_CREATE_CONTEXT_NOCOPY_FLAG: UInt32 = 1
CERT_CREATE_CONTEXT_SORTED_FLAG: UInt32 = 2
CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG: UInt32 = 4
CERT_CREATE_CONTEXT_NO_ENTRY_FLAG: UInt32 = 8
CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG: UInt32 = 1
CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG: UInt32 = 2
CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG: UInt32 = 4
CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG: UInt32 = 8
CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG: UInt32 = 1
CERT_PHYSICAL_STORE_DEFAULT_NAME: String = '.Default'
CERT_PHYSICAL_STORE_GROUP_POLICY_NAME: String = '.GroupPolicy'
CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME: String = '.LocalMachine'
CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME: String = '.UserCertificate'
CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME: String = '.LocalMachineGroupPolicy'
CERT_PHYSICAL_STORE_ENTERPRISE_NAME: String = '.Enterprise'
CERT_PHYSICAL_STORE_AUTH_ROOT_NAME: String = '.AuthRoot'
CERT_PHYSICAL_STORE_SMART_CARD_NAME: String = '.SmartCard'
CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC: String = 'CertDllOpenSystemStoreProv'
CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC: String = 'CertDllRegisterSystemStore'
CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC: String = 'CertDllUnregisterSystemStore'
CRYPT_OID_ENUM_SYSTEM_STORE_FUNC: String = 'CertDllEnumSystemStore'
CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC: String = 'CertDllRegisterPhysicalStore'
CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC: String = 'CertDllUnregisterPhysicalStore'
CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC: String = 'CertDllEnumPhysicalStore'
CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME: String = 'SystemStoreLocation'
CMSG_TRUSTED_SIGNER_FLAG: UInt32 = 1
CMSG_SIGNER_ONLY_FLAG: UInt32 = 2
CMSG_USE_SIGNER_INDEX_FLAG: UInt32 = 4
CMSG_CMS_ENCAPSULATED_CTL_FLAG: UInt32 = 32768
CMSG_ENCODE_SORTED_CTL_FLAG: UInt32 = 1
CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG: UInt32 = 2
CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG: UInt32 = 1
CERT_VERIFY_TRUSTED_SIGNERS_FLAG: UInt32 = 2
CERT_VERIFY_NO_TIME_CHECK_FLAG: UInt32 = 4
CERT_VERIFY_ALLOW_MORE_USAGE_FLAG: UInt32 = 8
CERT_VERIFY_UPDATED_CTL_FLAG: UInt32 = 1
CERT_CONTEXT_REVOCATION_TYPE: UInt32 = 1
CERT_VERIFY_REV_CHAIN_FLAG: UInt32 = 1
CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION: UInt32 = 2
CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG: UInt32 = 4
CERT_VERIFY_REV_SERVER_OCSP_FLAG: UInt32 = 8
CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG: UInt32 = 16
CERT_VERIFY_REV_SERVER_OCSP_WIRE_ONLY_FLAG: UInt32 = 32
CERT_UNICODE_IS_RDN_ATTRS_FLAG: UInt32 = 1
CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG: UInt32 = 2
CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB: UInt32 = 1
CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT: UInt32 = 2
CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL: UInt32 = 3
CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE: UInt32 = 4
CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY: UInt32 = 1
CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT: UInt32 = 2
CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN: UInt32 = 3
CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL: UInt32 = 4
CRYPT_VERIFY_CERT_SIGN_CHECK_WEAK_HASH_FLAG: UInt32 = 8
CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC: String = 'CryptDllExtractEncodedSignatureParameters'
CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC: String = 'CryptDllSignAndEncodeHash'
CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC: String = 'CryptDllVerifyEncodedSignature'
CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC: String = 'CryptDllExportPublicKeyInfoEx'
CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC: String = 'CryptDllExportPublicKeyInfoEx2'
CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC: String = 'CryptDllExportPublicKeyInfoFromBCryptKeyHandle'
CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC: String = 'CryptDllImportPublicKeyInfoEx'
CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC: String = 'CryptDllImportPublicKeyInfoEx2'
CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG: UInt32 = 128
CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK: UInt32 = 458752
CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG: UInt32 = 65536
CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG: UInt32 = 131072
CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG: UInt32 = 262144
CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC: String = 'CryptDllImportPrivateKeyInfoEx'
CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC: String = 'CryptDllExportPrivateKeyInfoEx'
CRYPT_DELETE_KEYSET: UInt32 = 16
CERT_XML_NAME_STR: UInt32 = 4
CERT_NAME_STR_SEMICOLON_FLAG: UInt32 = 1073741824
CERT_NAME_STR_NO_PLUS_FLAG: UInt32 = 536870912
CERT_NAME_STR_NO_QUOTING_FLAG: UInt32 = 268435456
CERT_NAME_STR_CRLF_FLAG: UInt32 = 134217728
CERT_NAME_STR_COMMA_FLAG: UInt32 = 67108864
CERT_NAME_STR_REVERSE_FLAG: UInt32 = 33554432
CERT_NAME_STR_FORWARD_FLAG: UInt32 = 16777216
CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG: UInt32 = 65536
CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG: UInt32 = 131072
CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG: UInt32 = 262144
CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG: UInt32 = 524288
CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG: UInt32 = 1048576
CERT_NAME_STR_ENABLE_PUNYCODE_FLAG: UInt32 = 2097152
CERT_NAME_EMAIL_TYPE: UInt32 = 1
CERT_NAME_RDN_TYPE: UInt32 = 2
CERT_NAME_ATTR_TYPE: UInt32 = 3
CERT_NAME_SIMPLE_DISPLAY_TYPE: UInt32 = 4
CERT_NAME_FRIENDLY_DISPLAY_TYPE: UInt32 = 5
CERT_NAME_DNS_TYPE: UInt32 = 6
CERT_NAME_URL_TYPE: UInt32 = 7
CERT_NAME_UPN_TYPE: UInt32 = 8
CERT_NAME_ISSUER_FLAG: UInt32 = 1
CERT_NAME_DISABLE_IE4_UTF8_FLAG: UInt32 = 65536
CERT_NAME_SEARCH_ALL_NAMES_FLAG: UInt32 = 2
CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG: UInt32 = 1
CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG: UInt32 = 2
CRYPT_MESSAGE_KEYID_SIGNER_FLAG: UInt32 = 4
CRYPT_MESSAGE_SILENT_KEYSET_FLAG: UInt32 = 64
CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG: UInt32 = 4
CREDENTIAL_OID_PASSWORD_CREDENTIALS_A: win32more.Foundation.PSTR = 1
CREDENTIAL_OID_PASSWORD_CREDENTIALS_W: win32more.Foundation.PSTR = 2
CREDENTIAL_OID_PASSWORD_CREDENTIALS: Int32 = 2
SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC: String = 'SchemeDllRetrieveEncodedObject'
SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC: String = 'SchemeDllRetrieveEncodedObjectW'
CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC: String = 'ContextDllCreateObjectContext'
CONTEXT_OID_CERTIFICATE: win32more.Foundation.PSTR = 1
CONTEXT_OID_CRL: win32more.Foundation.PSTR = 2
CONTEXT_OID_CTL: win32more.Foundation.PSTR = 3
CONTEXT_OID_PKCS7: win32more.Foundation.PSTR = 4
CONTEXT_OID_CAPI2_ANY: win32more.Foundation.PSTR = 5
CONTEXT_OID_OCSP_RESP: win32more.Foundation.PSTR = 6
CRYPT_RETRIEVE_MULTIPLE_OBJECTS: UInt32 = 1
CRYPT_CACHE_ONLY_RETRIEVAL: UInt32 = 2
CRYPT_WIRE_ONLY_RETRIEVAL: UInt32 = 4
CRYPT_DONT_CACHE_RESULT: UInt32 = 8
CRYPT_ASYNC_RETRIEVAL: UInt32 = 16
CRYPT_STICKY_CACHE_RETRIEVAL: UInt32 = 4096
CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL: UInt32 = 8192
CRYPT_OFFLINE_CHECK_RETRIEVAL: UInt32 = 16384
CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE: UInt32 = 32768
CRYPT_LDAP_SIGN_RETRIEVAL: UInt32 = 65536
CRYPT_NO_AUTH_RETRIEVAL: UInt32 = 131072
CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL: UInt32 = 262144
CRYPT_AIA_RETRIEVAL: UInt32 = 524288
CRYPT_HTTP_POST_RETRIEVAL: UInt32 = 1048576
CRYPT_PROXY_CACHE_RETRIEVAL: UInt32 = 2097152
CRYPT_NOT_MODIFIED_RETRIEVAL: UInt32 = 4194304
CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL: UInt32 = 8388608
CRYPT_RANDOM_QUERY_STRING_RETRIEVAL: UInt32 = 67108864
CRYPT_ENABLE_FILE_RETRIEVAL: UInt32 = 134217728
CRYPT_CREATE_NEW_FLUSH_ENTRY: UInt32 = 268435456
CRYPT_VERIFY_CONTEXT_SIGNATURE: UInt32 = 32
CRYPT_VERIFY_DATA_HASH: UInt32 = 64
CRYPT_KEEP_TIME_VALID: UInt32 = 128
CRYPT_DONT_VERIFY_SIGNATURE: UInt32 = 256
CRYPT_DONT_CHECK_TIME_VALIDITY: UInt32 = 512
CRYPT_CHECK_FRESHNESS_TIME_VALIDITY: UInt32 = 1024
CRYPT_ACCUMULATIVE_TIMEOUT: UInt32 = 2048
CRYPT_OCSP_ONLY_RETRIEVAL: UInt32 = 16777216
CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL: UInt32 = 33554432
CRYPTNET_URL_CACHE_PRE_FETCH_NONE: UInt32 = 0
CRYPTNET_URL_CACHE_PRE_FETCH_BLOB: UInt32 = 1
CRYPTNET_URL_CACHE_PRE_FETCH_CRL: UInt32 = 2
CRYPTNET_URL_CACHE_PRE_FETCH_OCSP: UInt32 = 3
CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB: UInt32 = 5
CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB: UInt32 = 6
CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB: UInt32 = 7
CRYPTNET_URL_CACHE_DEFAULT_FLUSH: UInt32 = 0
CRYPTNET_URL_CACHE_DISABLE_FLUSH: UInt32 = 4294967295
CRYPTNET_URL_CACHE_RESPONSE_NONE: UInt32 = 0
CRYPTNET_URL_CACHE_RESPONSE_HTTP: UInt32 = 1
CRYPTNET_URL_CACHE_RESPONSE_VALIDATED: UInt32 = 32768
CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH: UInt32 = 4096
CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION: win32more.Foundation.PSTR = 1
CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL: win32more.Foundation.PSTR = 2
URL_OID_GET_OBJECT_URL_FUNC: String = 'UrlDllGetObjectUrl'
URL_OID_CERTIFICATE_ISSUER: win32more.Foundation.PSTR = 1
URL_OID_CERTIFICATE_CRL_DIST_POINT: win32more.Foundation.PSTR = 2
URL_OID_CTL_ISSUER: win32more.Foundation.PSTR = 3
URL_OID_CTL_NEXT_UPDATE: win32more.Foundation.PSTR = 4
URL_OID_CRL_ISSUER: win32more.Foundation.PSTR = 5
URL_OID_CERTIFICATE_FRESHEST_CRL: win32more.Foundation.PSTR = 6
URL_OID_CRL_FRESHEST_CRL: win32more.Foundation.PSTR = 7
URL_OID_CROSS_CERT_DIST_POINT: win32more.Foundation.PSTR = 8
URL_OID_CERTIFICATE_OCSP: win32more.Foundation.PSTR = 9
URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT: win32more.Foundation.PSTR = 10
URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP: win32more.Foundation.PSTR = 11
URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS: win32more.Foundation.PSTR = 12
URL_OID_CERTIFICATE_ONLY_OCSP: win32more.Foundation.PSTR = 13
TIME_VALID_OID_GET_OBJECT_FUNC: String = 'TimeValidDllGetObject'
TIME_VALID_OID_GET_CTL: win32more.Foundation.PSTR = 1
TIME_VALID_OID_GET_CRL: win32more.Foundation.PSTR = 2
TIME_VALID_OID_GET_CRL_FROM_CERT: win32more.Foundation.PSTR = 3
TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT: win32more.Foundation.PSTR = 4
TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL: win32more.Foundation.PSTR = 5
TIME_VALID_OID_FLUSH_OBJECT_FUNC: String = 'TimeValidDllFlushObject'
TIME_VALID_OID_FLUSH_CTL: win32more.Foundation.PSTR = 1
TIME_VALID_OID_FLUSH_CRL: win32more.Foundation.PSTR = 2
TIME_VALID_OID_FLUSH_CRL_FROM_CERT: win32more.Foundation.PSTR = 3
TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT: win32more.Foundation.PSTR = 4
TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL: win32more.Foundation.PSTR = 5
CRYPT_KEYID_MACHINE_FLAG: UInt32 = 32
CRYPT_KEYID_ALLOC_FLAG: UInt32 = 32768
CRYPT_KEYID_DELETE_FLAG: UInt32 = 16
CRYPT_KEYID_SET_NEW_FLAG: UInt32 = 8192
CERT_CHAIN_CONFIG_REGPATH: String = 'Software\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CertDllCreateCertificateChainEngine\\Config'
CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME: String = 'MaxUrlRetrievalByteCount'
CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME: String = 'ChainCacheResyncFiletime'
CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME: String = 'DisableMandatoryBasicConstraints'
CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME: String = 'DisableCANameConstraints'
CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME: String = 'DisableUnsupportedCriticalExtensions'
CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME: String = 'MaxAIAUrlCountInCert'
CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT: UInt32 = 5
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME: String = 'MaxAIAUrlRetrievalCountPerChain'
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT: UInt32 = 3
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME: String = 'MaxAIAUrlRetrievalByteCount'
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT: UInt32 = 100000
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME: String = 'MaxAIAUrlRetrievalCertCount'
CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT: UInt32 = 10
CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME: String = 'OcspValiditySeconds'
CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME: String = 'DisableSerialChain'
CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME: String = 'SerialChainLogFileName'
CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME: String = 'DisableSyncWithSslTime'
CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME: String = 'MaxSslTimeUpdatedEventCount'
CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT: UInt32 = 5
CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE: UInt32 = 4294967295
CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME: String = 'SslHandshakeLogFileName'
CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME: String = 'EnableWeakSignatureFlags'
CERT_CHAIN_ENABLE_MD2_MD4_FLAG: UInt32 = 1
CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG: UInt32 = 2
CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG: UInt32 = 4
CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG: UInt32 = 8
CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME: String = 'MinRsaPubKeyBitLength'
CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT: UInt32 = 1023
CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE: UInt32 = 4294967295
CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME: String = 'WeakRsaPubKeyTime'
CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME: String = 'WeakSignatureLogDir'
CERT_CHAIN_DEFAULT_CONFIG_SUBDIR: String = 'Default'
CERT_CHAIN_WEAK_PREFIX_NAME: String = 'Weak'
CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME: String = 'ThirdParty'
CERT_CHAIN_WEAK_ALL_CONFIG_NAME: String = 'All'
CERT_CHAIN_WEAK_FLAGS_NAME: String = 'Flags'
CERT_CHAIN_WEAK_HYGIENE_NAME: String = 'Hygiene'
CERT_CHAIN_WEAK_AFTER_TIME_NAME: String = 'AfterTime'
CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME: String = 'FileHashAfterTime'
CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME: String = 'TimestampHashAfterTime'
CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME: String = 'MinBitLength'
CERT_CHAIN_WEAK_SHA256_ALLOW_NAME: String = 'Sha256Allow'
CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE: UInt32 = 4294967295
CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG: UInt32 = 2147483648
CERT_CHAIN_DISABLE_ECC_PARA_FLAG: UInt32 = 16
CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG: UInt32 = 65536
CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG: UInt32 = 131072
CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG: UInt32 = 262144
CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG: UInt32 = 1048576
CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG: UInt32 = 2097152
CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG: UInt32 = 4194304
CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG: UInt32 = 8388608
CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG: UInt32 = 16777216
CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG: UInt32 = 33554432
CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG: UInt32 = 67108864
CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG: UInt32 = 134217728
CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG: UInt32 = 268435456
CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG: UInt32 = 536870912
CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG: UInt32 = 1073741824
CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG: UInt32 = 4096
CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG: UInt32 = 8192
CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG: UInt32 = 16384
CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG: UInt32 = 32768
CERT_CHAIN_OPT_IN_WEAK_FLAGS: UInt32 = 262144
CERT_CHAIN_AUTO_CURRENT_USER: UInt32 = 1
CERT_CHAIN_AUTO_LOCAL_MACHINE: UInt32 = 2
CERT_CHAIN_AUTO_IMPERSONATED: UInt32 = 3
CERT_CHAIN_AUTO_PROCESS_INFO: UInt32 = 4
CERT_CHAIN_AUTO_PINRULE_INFO: UInt32 = 5
CERT_CHAIN_AUTO_NETWORK_INFO: UInt32 = 6
CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE: UInt32 = 7
CERT_CHAIN_AUTO_HPKP_RULE_INFO: UInt32 = 8
CERT_CHAIN_AUTO_FLAGS_VALUE_NAME: String = 'AutoFlags'
CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG: UInt32 = 1
CERT_CHAIN_AUTO_LOG_CREATE_FLAG: UInt32 = 2
CERT_CHAIN_AUTO_LOG_FREE_FLAG: UInt32 = 4
CERT_CHAIN_AUTO_LOG_FLUSH_FLAG: UInt32 = 8
CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME: String = 'AutoFlushFirstDeltaSeconds'
CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME: String = 'AutoFlushNextDeltaSeconds'
CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME: String = 'AutoLogFileName'
CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME: String = 'DisableAutoFlushProcessNameList'
CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinValiditySeconds'
CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME: String = 'SrvOcspRespUrlRetrievalTimeoutMilliseconds'
CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMaxBeforeNextUpdateSeconds'
CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinBeforeNextUpdateSeconds'
CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinAfterNextUpdateSeconds'
CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMinSyncCertFileSeconds'
CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT: UInt32 = 5
CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME: String = 'SrvOcspRespMaxSyncCertFileSeconds'
CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME: String = 'CryptnetMaxCachedOcspPerCrlCount'
CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT: UInt32 = 500
CRYPTNET_OCSP_AFTER_CRL_DISABLE: UInt32 = 4294967295
CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME: String = 'CryptnetDefaultFlushExemptSeconds'
CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinMaxAgeSeconds'
CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMaxMaxAgeSeconds'
CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinOcspValidityPeriodSeconds'
CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME: String = 'CryptnetPreFetchAfterPublishPreFetchDivisor'
CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT: UInt32 = 10
CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME: String = 'CryptnetPreFetchBeforeNextUpdatePreFetchDivisor'
CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT: UInt32 = 20
CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinBeforeNextUpdatePreFetchSeconds'
CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME: String = 'CryptnetPreFetchValidityPeriodAfterNextUpdatePreFetchDivisor'
CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT: UInt32 = 10
CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMaxAfterNextUpdatePreFetchPeriodSeconds'
CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchMinAfterNextUpdatePreFetchPeriodSeconds'
CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchAfterCurrentTimePreFetchPeriodSeconds'
CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchTriggerPeriodSeconds'
CRYPTNET_PRE_FETCH_TRIGGER_DISABLE: UInt32 = 4294967295
CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchScanAfterTriggerDelaySeconds'
CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT: UInt32 = 60
CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME: String = 'CryptnetPreFetchRetrievalTimeoutSeconds'
CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME: String = 'ProcessNameList'
CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME: String = 'PreFetchUrlList'
CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME: String = 'DisableInformationEvents'
CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME: String = 'LogFileName'
CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME: String = 'TimeoutSeconds'
CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME: String = 'MaxAgeSeconds'
CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'PublishBeforeNextUpdateSeconds'
CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME: String = 'PublishRandomIntervalSeconds'
CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'MinBeforeNextUpdateSeconds'
CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME: String = 'MinAfterNextUpdateSeconds'
CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME: String = 'ChainUrlRetrievalTimeoutMilliseconds'
CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME: String = 'ChainRevAccumulativeUrlRetrievalTimeoutMilliseconds'
CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME: String = 'EnableInetUnknownAuth'
CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME: String = 'EnableInetLocal'
CERT_RETR_BEHAVIOR_FILE_VALUE_NAME: String = 'AllowFileUrlScheme'
CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME: String = 'DisableLDAPSignAndEncrypt'
CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME: String = 'CryptnetCachedOcspSwitchToCrlCount'
CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT: UInt32 = 50
CRYPTNET_CRL_BEFORE_OCSP_ENABLE: UInt32 = 4294967295
CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME: String = 'DisableAIAUrlRetrieval'
CERT_CHAIN_OPTIONS_VALUE_NAME: String = 'Options'
CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL: UInt32 = 2
CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL: UInt32 = 4
CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME: String = 'CrossCertDownloadIntervalHours'
CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME: String = 'CRLValidityExtensionPeriod'
CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT: UInt32 = 12
CERT_CHAIN_CACHE_END_CERT: UInt32 = 1
CERT_CHAIN_THREAD_STORE_SYNC: UInt32 = 2
CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL: UInt32 = 4
CERT_CHAIN_USE_LOCAL_MACHINE_STORE: UInt32 = 8
CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE: UInt32 = 16
CERT_CHAIN_ENABLE_SHARE_STORE: UInt32 = 32
CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG: UInt32 = 1
CERT_TRUST_NO_ERROR: UInt32 = 0
CERT_TRUST_IS_NOT_TIME_VALID: UInt32 = 1
CERT_TRUST_IS_NOT_TIME_NESTED: UInt32 = 2
CERT_TRUST_IS_REVOKED: UInt32 = 4
CERT_TRUST_IS_NOT_SIGNATURE_VALID: UInt32 = 8
CERT_TRUST_IS_NOT_VALID_FOR_USAGE: UInt32 = 16
CERT_TRUST_IS_UNTRUSTED_ROOT: UInt32 = 32
CERT_TRUST_REVOCATION_STATUS_UNKNOWN: UInt32 = 64
CERT_TRUST_IS_CYCLIC: UInt32 = 128
CERT_TRUST_INVALID_EXTENSION: UInt32 = 256
CERT_TRUST_INVALID_POLICY_CONSTRAINTS: UInt32 = 512
CERT_TRUST_INVALID_BASIC_CONSTRAINTS: UInt32 = 1024
CERT_TRUST_INVALID_NAME_CONSTRAINTS: UInt32 = 2048
CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT: UInt32 = 4096
CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT: UInt32 = 8192
CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT: UInt32 = 16384
CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT: UInt32 = 32768
CERT_TRUST_IS_OFFLINE_REVOCATION: UInt32 = 16777216
CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY: UInt32 = 33554432
CERT_TRUST_IS_EXPLICIT_DISTRUST: UInt32 = 67108864
CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT: UInt32 = 134217728
CERT_TRUST_HAS_WEAK_SIGNATURE: UInt32 = 1048576
CERT_TRUST_HAS_WEAK_HYGIENE: UInt32 = 2097152
CERT_TRUST_IS_PARTIAL_CHAIN: UInt32 = 65536
CERT_TRUST_CTL_IS_NOT_TIME_VALID: UInt32 = 131072
CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID: UInt32 = 262144
CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE: UInt32 = 524288
CERT_TRUST_HAS_EXACT_MATCH_ISSUER: UInt32 = 1
CERT_TRUST_HAS_KEY_MATCH_ISSUER: UInt32 = 2
CERT_TRUST_HAS_NAME_MATCH_ISSUER: UInt32 = 4
CERT_TRUST_IS_SELF_SIGNED: UInt32 = 8
CERT_TRUST_AUTO_UPDATE_CA_REVOCATION: UInt32 = 16
CERT_TRUST_AUTO_UPDATE_END_REVOCATION: UInt32 = 32
CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL: UInt32 = 64
CERT_TRUST_IS_KEY_ROLLOVER: UInt32 = 128
CERT_TRUST_SSL_HANDSHAKE_OCSP: UInt32 = 262144
CERT_TRUST_SSL_TIME_VALID_OCSP: UInt32 = 524288
CERT_TRUST_SSL_RECONNECT_OCSP: UInt32 = 1048576
CERT_TRUST_HAS_PREFERRED_ISSUER: UInt32 = 256
CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY: UInt32 = 512
CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS: UInt32 = 1024
CERT_TRUST_IS_PEER_TRUSTED: UInt32 = 2048
CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED: UInt32 = 4096
CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE: UInt32 = 8192
CERT_TRUST_IS_CA_TRUSTED: UInt32 = 16384
CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE: UInt32 = 32768
CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE: UInt32 = 131072
CERT_TRUST_IS_COMPLEX_CHAIN: UInt32 = 65536
CERT_TRUST_SSL_TIME_VALID: UInt32 = 16777216
CERT_TRUST_NO_TIME_CHECK: UInt32 = 33554432
USAGE_MATCH_TYPE_AND: UInt32 = 0
USAGE_MATCH_TYPE_OR: UInt32 = 1
CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG: UInt32 = 1
CERT_CHAIN_REVOCATION_CHECK_END_CERT: UInt32 = 268435456
CERT_CHAIN_REVOCATION_CHECK_CHAIN: UInt32 = 536870912
CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT: UInt32 = 1073741824
CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY: UInt32 = 2147483648
CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT: UInt32 = 134217728
CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT: UInt32 = 67108864
CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING: UInt32 = 64
CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS: UInt32 = 128
CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE: UInt32 = 256
CERT_CHAIN_TIMESTAMP_TIME: UInt32 = 512
CERT_CHAIN_ENABLE_PEER_TRUST: UInt32 = 1024
CERT_CHAIN_DISABLE_MY_PEER_TRUST: UInt32 = 2048
CERT_CHAIN_DISABLE_MD2_MD4: UInt32 = 4096
CERT_CHAIN_DISABLE_AIA: UInt32 = 8192
CERT_CHAIN_HAS_MOTW: UInt32 = 16384
CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT: UInt32 = 32768
CERT_CHAIN_OPT_IN_WEAK_SIGNATURE: UInt32 = 65536
REVOCATION_OID_CRL_REVOCATION: win32more.Foundation.PSTR = 1
CERT_CHAIN_FIND_BY_ISSUER: UInt32 = 1
CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG: UInt32 = 134217728
CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC: String = 'CertDllVerifyCertificateChainPolicy'
CERT_CHAIN_POLICY_BASE: win32more.Foundation.PSTR = 1
CERT_CHAIN_POLICY_AUTHENTICODE: win32more.Foundation.PSTR = 2
CERT_CHAIN_POLICY_AUTHENTICODE_TS: win32more.Foundation.PSTR = 3
CERT_CHAIN_POLICY_SSL: win32more.Foundation.PSTR = 4
CERT_CHAIN_POLICY_BASIC_CONSTRAINTS: win32more.Foundation.PSTR = 5
CERT_CHAIN_POLICY_NT_AUTH: win32more.Foundation.PSTR = 6
CERT_CHAIN_POLICY_MICROSOFT_ROOT: win32more.Foundation.PSTR = 7
CERT_CHAIN_POLICY_EV: win32more.Foundation.PSTR = 8
CERT_CHAIN_POLICY_SSL_F12: win32more.Foundation.PSTR = 9
CERT_CHAIN_POLICY_SSL_HPKP_HEADER: win32more.Foundation.PSTR = 10
CERT_CHAIN_POLICY_THIRD_PARTY_ROOT: win32more.Foundation.PSTR = 11
CERT_CHAIN_POLICY_SSL_KEY_PIN: win32more.Foundation.PSTR = 12
BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG: UInt32 = 2147483648
BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG: UInt32 = 1073741824
MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG: UInt32 = 65536
MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG: UInt32 = 131072
MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG: UInt32 = 262144
SSL_F12_ERROR_TEXT_LENGTH: UInt32 = 256
CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL: UInt32 = 0
CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL: UInt32 = 1
CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL: UInt32 = 2
CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY: UInt32 = 0
CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY: UInt32 = 1
CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY: UInt32 = 2
SSL_HPKP_PKP_HEADER_INDEX: UInt32 = 0
SSL_HPKP_PKP_RO_HEADER_INDEX: UInt32 = 1
SSL_HPKP_HEADER_COUNT: UInt32 = 2
SSL_KEY_PIN_ERROR_TEXT_LENGTH: UInt32 = 512
CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR: Int32 = -2
CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR: Int32 = -1
CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS: UInt32 = 0
CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING: UInt32 = 1
CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING: UInt32 = 2
CRYPT_STRING_BASE64URI: UInt32 = 13
CRYPT_STRING_ENCODEMASK: UInt32 = 255
CRYPT_STRING_RESERVED100: UInt32 = 256
CRYPT_STRING_RESERVED200: UInt32 = 512
CRYPT_STRING_PERCENTESCAPE: UInt32 = 134217728
CRYPT_STRING_HASHDATA: UInt32 = 268435456
CRYPT_STRING_NOCRLF: UInt32 = 1073741824
CRYPT_STRING_NOCR: UInt32 = 2147483648
szOID_PKCS_12_PbeIds: String = '1.2.840.113549.1.12.1'
szOID_PKCS_12_pbeWithSHA1And128BitRC4: String = '1.2.840.113549.1.12.1.1'
szOID_PKCS_12_pbeWithSHA1And40BitRC4: String = '1.2.840.113549.1.12.1.2'
szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES: String = '1.2.840.113549.1.12.1.3'
szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES: String = '1.2.840.113549.1.12.1.4'
szOID_PKCS_12_pbeWithSHA1And128BitRC2: String = '1.2.840.113549.1.12.1.5'
szOID_PKCS_12_pbeWithSHA1And40BitRC2: String = '1.2.840.113549.1.12.1.6'
szOID_PKCS_5_PBKDF2: String = '1.2.840.113549.1.5.12'
szOID_PKCS_5_PBES2: String = '1.2.840.113549.1.5.13'
PKCS12_IMPORT_SILENT: UInt32 = 64
PKCS12_ONLY_CERTIFICATES: UInt32 = 1024
PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES: UInt32 = 2048
PKCS12_VIRTUAL_ISOLATION_KEY: UInt32 = 65536
PKCS12_IMPORT_RESERVED_MASK: UInt32 = 4294901760
PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE: UInt32 = 0
PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME: String = 'PfxProvider'
PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME: String = 'PfxContainer'
REPORT_NO_PRIVATE_KEY: UInt32 = 1
REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY: UInt32 = 2
EXPORT_PRIVATE_KEYS: UInt32 = 4
PKCS12_PROTECT_TO_DOMAIN_SIDS: UInt32 = 32
PKCS12_EXPORT_SILENT: UInt32 = 64
PKCS12_EXPORT_PBES2_PARAMS: UInt32 = 128
PKCS12_DISABLE_ENCRYPT_CERTIFICATES: UInt32 = 256
PKCS12_ENCRYPT_CERTIFICATES: UInt32 = 512
PKCS12_EXPORT_ECC_CURVE_PARAMETERS: UInt32 = 4096
PKCS12_EXPORT_ECC_CURVE_OID: UInt32 = 8192
PKCS12_EXPORT_RESERVED_MASK: UInt32 = 4294901760
PKCS12_PBKDF2_ID_HMAC_SHA1: String = '1.2.840.113549.2.7'
PKCS12_PBKDF2_ID_HMAC_SHA256: String = '1.2.840.113549.2.9'
PKCS12_PBKDF2_ID_HMAC_SHA384: String = '1.2.840.113549.2.10'
PKCS12_PBKDF2_ID_HMAC_SHA512: String = '1.2.840.113549.2.11'
PKCS12_PBES2_ALG_AES256_SHA256: String = 'AES256-SHA256'
PKCS12_CONFIG_REGPATH: String = 'Software\\Microsoft\\Windows\\CurrentVersion\\PFX'
PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME: String = 'EncryptCertificates'
CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG: UInt32 = 1
CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG: UInt32 = 2
CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG: UInt32 = 1
CERT_RETRIEVE_ISSUER_LOGO: win32more.Foundation.PSTR = 1
CERT_RETRIEVE_SUBJECT_LOGO: win32more.Foundation.PSTR = 2
CERT_RETRIEVE_COMMUNITY_LOGO: win32more.Foundation.PSTR = 3
CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE: win32more.Foundation.PSTR = 1000
CERT_SELECT_MAX_PARA: UInt32 = 500
CERT_SELECT_BY_ISSUER_DISPLAYNAME: UInt32 = 12
CERT_SELECT_BY_FRIENDLYNAME: UInt32 = 13
CERT_SELECT_BY_THUMBPRINT: UInt32 = 14
CERT_SELECT_ALLOW_EXPIRED: UInt32 = 1
CERT_SELECT_TRUSTED_ROOT: UInt32 = 2
CERT_SELECT_DISALLOW_SELFSIGNED: UInt32 = 4
CERT_SELECT_HAS_PRIVATE_KEY: UInt32 = 8
CERT_SELECT_HAS_KEY_FOR_SIGNATURE: UInt32 = 16
CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE: UInt32 = 32
CERT_SELECT_HARDWARE_ONLY: UInt32 = 64
CERT_SELECT_ALLOW_DUPLICATES: UInt32 = 128
CERT_SELECT_IGNORE_AUTOSELECT: UInt32 = 256
TIMESTAMP_FAILURE_BAD_ALG: UInt32 = 0
TIMESTAMP_FAILURE_BAD_REQUEST: UInt32 = 2
TIMESTAMP_FAILURE_BAD_FORMAT: UInt32 = 5
TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE: UInt32 = 14
TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED: UInt32 = 15
TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED: UInt32 = 16
TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE: UInt32 = 17
TIMESTAMP_FAILURE_SYSTEM_FAILURE: UInt32 = 25
TIMESTAMP_DONT_HASH_DATA: UInt32 = 1
TIMESTAMP_VERIFY_CONTEXT_SIGNATURE: UInt32 = 32
TIMESTAMP_NO_AUTH_RETRIEVAL: UInt32 = 131072
CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE: UInt32 = 1
CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE: UInt32 = 32
CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE: UInt32 = 33
CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE: UInt32 = 65535
SSL_OBJECT_LOCATOR_PFX_FUNC: String = 'SslObjectLocatorInitializePfx'
SSL_OBJECT_LOCATOR_ISSUER_LIST_FUNC: String = 'SslObjectLocatorInitializeIssuerList'
SSL_OBJECT_LOCATOR_CERT_VALIDATION_CONFIG_FUNC: String = 'SslObjectLocatorInitializeCertValidationConfig'
CERT_FILE_HASH_USE_TYPE: UInt32 = 1
CERT_TIMESTAMP_HASH_USE_TYPE: UInt32 = 2
RECIPIENTPOLICYV1: UInt32 = 1
RECIPIENTPOLICYV2: UInt32 = 2
E_ICARD_COMMUNICATION: win32more.Foundation.HRESULT = -1073413888
E_ICARD_DATA_ACCESS: win32more.Foundation.HRESULT = -1073413887
E_ICARD_EXPORT: win32more.Foundation.HRESULT = -1073413886
E_ICARD_IDENTITY: win32more.Foundation.HRESULT = -1073413885
E_ICARD_IMPORT: win32more.Foundation.HRESULT = -1073413884
E_ICARD_ARGUMENT: win32more.Foundation.HRESULT = -1073413883
E_ICARD_REQUEST: win32more.Foundation.HRESULT = -1073413882
E_ICARD_INFORMATIONCARD: win32more.Foundation.HRESULT = -1073413881
E_ICARD_STOREKEY: win32more.Foundation.HRESULT = -1073413880
E_ICARD_LOGOVALIDATION: win32more.Foundation.HRESULT = -1073413879
E_ICARD_PASSWORDVALIDATION: win32more.Foundation.HRESULT = -1073413878
E_ICARD_POLICY: win32more.Foundation.HRESULT = -1073413877
E_ICARD_PROCESSDIED: win32more.Foundation.HRESULT = -1073413876
E_ICARD_SERVICEBUSY: win32more.Foundation.HRESULT = -1073413875
E_ICARD_SERVICE: win32more.Foundation.HRESULT = -1073413874
E_ICARD_SHUTTINGDOWN: win32more.Foundation.HRESULT = -1073413873
E_ICARD_TOKENCREATION: win32more.Foundation.HRESULT = -1073413872
E_ICARD_TRUSTEXCHANGE: win32more.Foundation.HRESULT = -1073413871
E_ICARD_UNTRUSTED: win32more.Foundation.HRESULT = -1073413870
E_ICARD_USERCANCELLED: win32more.Foundation.HRESULT = -1073413869
E_ICARD_STORE_IMPORT: win32more.Foundation.HRESULT = -1073413868
E_ICARD_FAIL: win32more.Foundation.HRESULT = -1073413867
E_ICARD_UI_INITIALIZATION: win32more.Foundation.HRESULT = -1073413862
E_ICARD_REFRESH_REQUIRED: win32more.Foundation.HRESULT = -1073413760
E_ICARD_MISSING_APPLIESTO: win32more.Foundation.HRESULT = -1073413759
E_ICARD_INVALID_PROOF_KEY: win32more.Foundation.HRESULT = -1073413758
E_ICARD_UNKNOWN_REFERENCE: win32more.Foundation.HRESULT = -1073413757
E_ICARD_FAILED_REQUIRED_CLAIMS: win32more.Foundation.HRESULT = -1073413756
AUDIT_CARD_WRITTEN: win32more.Foundation.HRESULT = 1074070016
AUDIT_CARD_DELETE: win32more.Foundation.HRESULT = 1074070017
AUDIT_CARD_IMPORT: win32more.Foundation.HRESULT = 1074070018
AUDIT_STORE_IMPORT: win32more.Foundation.HRESULT = 1074070019
AUDIT_STORE_EXPORT: win32more.Foundation.HRESULT = 1074070020
AUDIT_STORE_DELETE: win32more.Foundation.HRESULT = 1074070021
AUDIT_SERVICE_IDLE_STOP: win32more.Foundation.HRESULT = 1074070022
@winfunctype('ADVAPI32.dll')
def CryptAcquireContextA(phProv: POINTER(UIntPtr), szContainer: win32more.Foundation.PSTR, szProvider: win32more.Foundation.PSTR, dwProvType: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptAcquireContextW(phProv: POINTER(UIntPtr), szContainer: win32more.Foundation.PWSTR, szProvider: win32more.Foundation.PWSTR, dwProvType: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptReleaseContext(hProv: UIntPtr, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGenKey(hProv: UIntPtr, Algid: UInt32, dwFlags: win32more.Security.Cryptography.CRYPT_KEY_FLAGS, phKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDeriveKey(hProv: UIntPtr, Algid: UInt32, hBaseData: UIntPtr, dwFlags: UInt32, phKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDestroyKey(hKey: UIntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetKeyParam(hKey: UIntPtr, dwParam: win32more.Security.Cryptography.CRYPT_KEY_PARAM_ID, pbData: c_char_p_no, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetKeyParam(hKey: UIntPtr, dwParam: win32more.Security.Cryptography.CRYPT_KEY_PARAM_ID, pbData: c_char_p_no, pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetHashParam(hHash: UIntPtr, dwParam: win32more.Security.Cryptography.CRYPT_SET_HASH_PARAM, pbData: c_char_p_no, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetHashParam(hHash: UIntPtr, dwParam: UInt32, pbData: c_char_p_no, pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProvParam(hProv: UIntPtr, dwParam: win32more.Security.Cryptography.CRYPT_SET_PROV_PARAM_ID, pbData: c_char_p_no, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetProvParam(hProv: UIntPtr, dwParam: UInt32, pbData: c_char_p_no, pdwDataLen: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGenRandom(hProv: UIntPtr, dwLen: UInt32, pbBuffer: c_char_p_no) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetUserKey(hProv: UIntPtr, dwKeySpec: UInt32, phUserKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptExportKey(hKey: UIntPtr, hExpKey: UIntPtr, dwBlobType: UInt32, dwFlags: win32more.Security.Cryptography.CRYPT_KEY_FLAGS, pbData: c_char_p_no, pdwDataLen: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptImportKey(hProv: UIntPtr, pbData: c_char_p_no, dwDataLen: UInt32, hPubKey: UIntPtr, dwFlags: win32more.Security.Cryptography.CRYPT_KEY_FLAGS, phKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEncrypt(hKey: UIntPtr, hHash: UIntPtr, Final: win32more.Foundation.BOOL, dwFlags: UInt32, pbData: c_char_p_no, pdwDataLen: POINTER(UInt32), dwBufLen: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDecrypt(hKey: UIntPtr, hHash: UIntPtr, Final: win32more.Foundation.BOOL, dwFlags: UInt32, pbData: c_char_p_no, pdwDataLen: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptCreateHash(hProv: UIntPtr, Algid: UInt32, hKey: UIntPtr, dwFlags: UInt32, phHash: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptHashData(hHash: UIntPtr, pbData: c_char_p_no, dwDataLen: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptHashSessionKey(hHash: UIntPtr, hKey: UIntPtr, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDestroyHash(hHash: UIntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSignHashA(hHash: UIntPtr, dwKeySpec: UInt32, szDescription: win32more.Foundation.PSTR, dwFlags: UInt32, pbSignature: c_char_p_no, pdwSigLen: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSignHashW(hHash: UIntPtr, dwKeySpec: UInt32, szDescription: win32more.Foundation.PWSTR, dwFlags: UInt32, pbSignature: c_char_p_no, pdwSigLen: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptVerifySignatureA(hHash: UIntPtr, pbSignature: c_char_p_no, dwSigLen: UInt32, hPubKey: UIntPtr, szDescription: win32more.Foundation.PSTR, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptVerifySignatureW(hHash: UIntPtr, pbSignature: c_char_p_no, dwSigLen: UInt32, hPubKey: UIntPtr, szDescription: win32more.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProviderA(pszProvName: win32more.Foundation.PSTR, dwProvType: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProviderW(pszProvName: win32more.Foundation.PWSTR, dwProvType: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProviderExA(pszProvName: win32more.Foundation.PSTR, dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptSetProviderExW(pszProvName: win32more.Foundation.PWSTR, dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetDefaultProviderA(dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pszProvName: win32more.Foundation.PSTR, pcbProvName: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptGetDefaultProviderW(dwProvType: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pszProvName: win32more.Foundation.PWSTR, pcbProvName: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEnumProviderTypesA(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szTypeName: win32more.Foundation.PSTR, pcbTypeName: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEnumProviderTypesW(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szTypeName: win32more.Foundation.PWSTR, pcbTypeName: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEnumProvidersA(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szProvName: win32more.Foundation.PSTR, pcbProvName: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptEnumProvidersW(dwIndex: UInt32, pdwReserved: POINTER(UInt32), dwFlags: UInt32, pdwProvType: POINTER(UInt32), szProvName: win32more.Foundation.PWSTR, pcbProvName: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptContextAddRef(hProv: UIntPtr, pdwReserved: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDuplicateKey(hKey: UIntPtr, pdwReserved: POINTER(UInt32), dwFlags: UInt32, phKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('ADVAPI32.dll')
def CryptDuplicateHash(hHash: UIntPtr, pdwReserved: POINTER(UInt32), dwFlags: UInt32, phHash: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('bcrypt.dll')
def BCryptOpenAlgorithmProvider(phAlgorithm: POINTER(win32more.Security.Cryptography.BCRYPT_ALG_HANDLE), pszAlgId: win32more.Foundation.PWSTR, pszImplementation: win32more.Foundation.PWSTR, dwFlags: win32more.Security.Cryptography.BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumAlgorithms(dwAlgOperations: win32more.Security.Cryptography.BCRYPT_OPERATION, pAlgCount: POINTER(UInt32), ppAlgList: POINTER(POINTER(win32more.Security.Cryptography.BCRYPT_ALGORITHM_IDENTIFIER_head)), dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumProviders(pszAlgId: win32more.Foundation.PWSTR, pImplCount: POINTER(UInt32), ppImplList: POINTER(POINTER(win32more.Security.Cryptography.BCRYPT_PROVIDER_NAME_head)), dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGetProperty(hObject: win32more.Security.Cryptography.BCRYPT_HANDLE, pszProperty: win32more.Foundation.PWSTR, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSetProperty(hObject: win32more.Security.Cryptography.BCRYPT_HANDLE, pszProperty: win32more.Foundation.PWSTR, pbInput: c_char_p_no, cbInput: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCloseAlgorithmProvider(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptFreeBuffer(pvBuffer: c_void_p) -> Void: ...
@winfunctype('bcrypt.dll')
def BCryptGenerateSymmetricKey(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: c_char_p_no, cbKeyObject: UInt32, pbSecret: c_char_p_no, cbSecret: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGenerateKeyPair(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE), dwLength: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEncrypt(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: c_char_p_no, cbInput: UInt32, pPaddingInfo: c_void_p, pbIV: c_char_p_no, cbIV: UInt32, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDecrypt(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: c_char_p_no, cbInput: UInt32, pPaddingInfo: c_void_p, pbIV: c_char_p_no, cbIV: UInt32, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptExportKey(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, hExportKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Foundation.PWSTR, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptImportKey(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, hImportKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Foundation.PWSTR, phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: c_char_p_no, cbKeyObject: UInt32, pbInput: c_char_p_no, cbInput: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptImportKeyPair(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, hImportKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pszBlobType: win32more.Foundation.PWSTR, phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE), pbInput: c_char_p_no, cbInput: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDuplicateKey(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, phNewKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE), pbKeyObject: c_char_p_no, cbKeyObject: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptFinalizeKeyPair(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDestroyKey(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDestroySecret(hSecret: win32more.Security.Cryptography.BCRYPT_SECRET_HANDLE) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSignHash(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pPaddingInfo: c_void_p, pbInput: c_char_p_no, cbInput: UInt32, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptVerifySignature(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pPaddingInfo: c_void_p, pbHash: c_char_p_no, cbHash: UInt32, pbSignature: c_char_p_no, cbSignature: UInt32, dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSecretAgreement(hPrivKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, hPubKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, phAgreedSecret: POINTER(win32more.Security.Cryptography.BCRYPT_SECRET_HANDLE), dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeriveKey(hSharedSecret: win32more.Security.Cryptography.BCRYPT_SECRET_HANDLE, pwszKDF: win32more.Foundation.PWSTR, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), pbDerivedKey: c_char_p_no, cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptKeyDerivation(hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), pbDerivedKey: c_char_p_no, cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCreateHash(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, phHash: POINTER(win32more.Security.Cryptography.BCRYPT_HASH_HANDLE), pbHashObject: c_char_p_no, cbHashObject: UInt32, pbSecret: c_char_p_no, cbSecret: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptHashData(hHash: win32more.Security.Cryptography.BCRYPT_HASH_HANDLE, pbInput: c_char_p_no, cbInput: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptFinishHash(hHash: win32more.Security.Cryptography.BCRYPT_HASH_HANDLE, pbOutput: c_char_p_no, cbOutput: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCreateMultiHash(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, phHash: POINTER(win32more.Security.Cryptography.BCRYPT_HASH_HANDLE), nHashes: UInt32, pbHashObject: c_char_p_no, cbHashObject: UInt32, pbSecret: c_char_p_no, cbSecret: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptProcessMultiOperations(hObject: win32more.Security.Cryptography.BCRYPT_HANDLE, operationType: win32more.Security.Cryptography.BCRYPT_MULTI_OPERATION_TYPE, pOperations: c_void_p, cbOperations: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDuplicateHash(hHash: win32more.Security.Cryptography.BCRYPT_HASH_HANDLE, phNewHash: POINTER(win32more.Security.Cryptography.BCRYPT_HASH_HANDLE), pbHashObject: c_char_p_no, cbHashObject: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDestroyHash(hHash: win32more.Security.Cryptography.BCRYPT_HASH_HANDLE) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptHash(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, pbSecret: c_char_p_no, cbSecret: UInt32, pbInput: c_char_p_no, cbInput: UInt32, pbOutput: c_char_p_no, cbOutput: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGenRandom(hAlgorithm: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, pbBuffer: c_char_p_no, cbBuffer: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeriveKeyCapi(hHash: win32more.Security.Cryptography.BCRYPT_HASH_HANDLE, hTargetAlg: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, pbDerivedKey: c_char_p_no, cbDerivedKey: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeriveKeyPBKDF2(hPrf: win32more.Security.Cryptography.BCRYPT_ALG_HANDLE, pbPassword: c_char_p_no, cbPassword: UInt32, pbSalt: c_char_p_no, cbSalt: UInt32, cIterations: UInt64, pbDerivedKey: c_char_p_no, cbDerivedKey: UInt32, dwFlags: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryProviderRegistration(pszProvider: win32more.Foundation.PWSTR, dwMode: win32more.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_PROVIDER_REG_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumRegisteredProviders(pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_PROVIDERS_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptCreateContext(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, pConfig: POINTER(win32more.Security.Cryptography.CRYPT_CONTEXT_CONFIG_head)) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptDeleteContext(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumContexts(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_CONTEXTS_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptConfigureContext(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, pConfig: POINTER(win32more.Security.Cryptography.CRYPT_CONTEXT_CONFIG_head)) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryContextConfiguration(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_CONTEXT_CONFIG_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptAddContextFunction(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Foundation.PWSTR, dwPosition: UInt32) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptRemoveContextFunction(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Foundation.PWSTR) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumContextFunctions(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_CONTEXT_FUNCTIONS_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptConfigureContextFunction(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Foundation.PWSTR, pConfig: POINTER(win32more.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_CONFIG_head)) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryContextFunctionConfiguration(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Foundation.PWSTR, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_CONFIG_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptEnumContextFunctionProviders(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Foundation.PWSTR, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_PROVIDERS_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptSetContextFunctionProperty(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Foundation.PWSTR, pszProperty: win32more.Foundation.PWSTR, cbValue: UInt32, pbValue: c_char_p_no) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptQueryContextFunctionProperty(dwTable: win32more.Security.Cryptography.BCRYPT_TABLE, pszContext: win32more.Foundation.PWSTR, dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE, pszFunction: win32more.Foundation.PWSTR, pszProperty: win32more.Foundation.PWSTR, pcbValue: POINTER(UInt32), ppbValue: POINTER(c_char_p_no)) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptRegisterConfigChangeNotify(phEvent: POINTER(win32more.Foundation.HANDLE)) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptUnregisterConfigChangeNotify(hEvent: win32more.Foundation.HANDLE) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptResolveProviders(pszContext: win32more.Foundation.PWSTR, dwInterface: UInt32, pszFunction: win32more.Foundation.PWSTR, pszProvider: win32more.Foundation.PWSTR, dwMode: win32more.Security.Cryptography.BCRYPT_QUERY_PROVIDER_MODE, dwFlags: win32more.Security.Cryptography.BCRYPT_RESOLVE_PROVIDERS_FLAGS, pcbBuffer: POINTER(UInt32), ppBuffer: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_PROVIDER_REFS_head))) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('bcrypt.dll')
def BCryptGetFipsAlgorithmMode(pfEnabled: c_char_p_no) -> win32more.Foundation.NTSTATUS: ...
@winfunctype('ncrypt.dll')
def NCryptOpenStorageProvider(phProvider: POINTER(win32more.Security.Cryptography.NCRYPT_PROV_HANDLE), pszProviderName: win32more.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEnumAlgorithms(hProvider: win32more.Security.Cryptography.NCRYPT_PROV_HANDLE, dwAlgOperations: win32more.Security.Cryptography.NCRYPT_OPERATION, pdwAlgCount: POINTER(UInt32), ppAlgList: POINTER(POINTER(win32more.Security.Cryptography.NCryptAlgorithmName_head)), dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptIsAlgSupported(hProvider: win32more.Security.Cryptography.NCRYPT_PROV_HANDLE, pszAlgId: win32more.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEnumKeys(hProvider: win32more.Security.Cryptography.NCRYPT_PROV_HANDLE, pszScope: win32more.Foundation.PWSTR, ppKeyName: POINTER(POINTER(win32more.Security.Cryptography.NCryptKeyName_head)), ppEnumState: POINTER(c_void_p), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEnumStorageProviders(pdwProviderCount: POINTER(UInt32), ppProviderList: POINTER(POINTER(win32more.Security.Cryptography.NCryptProviderName_head)), dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptFreeBuffer(pvInput: c_void_p) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptOpenKey(hProvider: win32more.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Security.Cryptography.NCRYPT_KEY_HANDLE), pszKeyName: win32more.Foundation.PWSTR, dwLegacyKeySpec: win32more.Security.Cryptography.CERT_KEY_SPEC, dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCreatePersistedKey(hProvider: win32more.Security.Cryptography.NCRYPT_PROV_HANDLE, phKey: POINTER(win32more.Security.Cryptography.NCRYPT_KEY_HANDLE), pszAlgId: win32more.Foundation.PWSTR, pszKeyName: win32more.Foundation.PWSTR, dwLegacyKeySpec: win32more.Security.Cryptography.CERT_KEY_SPEC, dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptGetProperty(hObject: win32more.Security.Cryptography.NCRYPT_HANDLE, pszProperty: win32more.Foundation.PWSTR, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.OBJECT_SECURITY_INFORMATION) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptSetProperty(hObject: win32more.Security.Cryptography.NCRYPT_HANDLE, pszProperty: win32more.Foundation.PWSTR, pbInput: c_char_p_no, cbInput: UInt32, dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptFinalizeKey(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptEncrypt(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: c_char_p_no, cbInput: UInt32, pPaddingInfo: c_void_p, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptDecrypt(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, pbInput: c_char_p_no, cbInput: UInt32, pPaddingInfo: c_void_p, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptImportKey(hProvider: win32more.Security.Cryptography.NCRYPT_PROV_HANDLE, hImportKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Foundation.PWSTR, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), phKey: POINTER(win32more.Security.Cryptography.NCRYPT_KEY_HANDLE), pbData: c_char_p_no, cbData: UInt32, dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptExportKey(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, hExportKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, pszBlobType: win32more.Foundation.PWSTR, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptSignHash(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, pPaddingInfo: c_void_p, pbHashValue: c_char_p_no, cbHashValue: UInt32, pbSignature: c_char_p_no, cbSignature: UInt32, pcbResult: POINTER(UInt32), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptVerifySignature(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, pPaddingInfo: c_void_p, pbHashValue: c_char_p_no, cbHashValue: UInt32, pbSignature: c_char_p_no, cbSignature: UInt32, dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptDeleteKey(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptFreeObject(hObject: win32more.Security.Cryptography.NCRYPT_HANDLE) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptIsKeyHandle(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE) -> win32more.Foundation.BOOL: ...
@winfunctype('ncrypt.dll')
def NCryptTranslateHandle(phProvider: POINTER(win32more.Security.Cryptography.NCRYPT_PROV_HANDLE), phKey: POINTER(win32more.Security.Cryptography.NCRYPT_KEY_HANDLE), hLegacyProv: UIntPtr, hLegacyKey: UIntPtr, dwLegacyKeySpec: win32more.Security.Cryptography.CERT_KEY_SPEC, dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptNotifyChangeKey(hProvider: win32more.Security.Cryptography.NCRYPT_PROV_HANDLE, phEvent: POINTER(win32more.Foundation.HANDLE), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptSecretAgreement(hPrivKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, hPubKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, phAgreedSecret: POINTER(win32more.Security.Cryptography.NCRYPT_SECRET_HANDLE), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptDeriveKey(hSharedSecret: win32more.Security.Cryptography.NCRYPT_SECRET_HANDLE, pwszKDF: win32more.Foundation.PWSTR, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), pbDerivedKey: c_char_p_no, cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptKeyDerivation(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), pbDerivedKey: c_char_p_no, cbDerivedKey: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCreateClaim(hSubjectKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, hAuthorityKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, dwClaimType: UInt32, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), pbClaimBlob: c_char_p_no, cbClaimBlob: UInt32, pcbResult: POINTER(UInt32), dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptVerifyClaim(hSubjectKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, hAuthorityKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, dwClaimType: UInt32, pParameterList: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), pbClaimBlob: c_char_p_no, cbClaimBlob: UInt32, pOutput: POINTER(win32more.Security.Cryptography.BCryptBufferDesc_head), dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPT32.dll')
def CryptFormatObject(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFormatType: UInt32, dwFormatStrType: UInt32, pFormatStruct: c_void_p, lpszStructType: win32more.Foundation.PSTR, pbEncoded: c_char_p_no, cbEncoded: UInt32, pbFormat: c_void_p, pcbFormat: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEncodeObjectEx(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Foundation.PSTR, pvStructInfo: c_void_p, dwFlags: win32more.Security.Cryptography.CRYPT_ENCODE_OBJECT_FLAGS, pEncodePara: POINTER(win32more.Security.Cryptography.CRYPT_ENCODE_PARA_head), pvEncoded: c_void_p, pcbEncoded: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEncodeObject(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Foundation.PSTR, pvStructInfo: c_void_p, pbEncoded: c_char_p_no, pcbEncoded: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecodeObjectEx(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Foundation.PSTR, pbEncoded: c_char_p_no, cbEncoded: UInt32, dwFlags: UInt32, pDecodePara: POINTER(win32more.Security.Cryptography.CRYPT_DECODE_PARA_head), pvStructInfo: c_void_p, pcbStructInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecodeObject(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Foundation.PSTR, pbEncoded: c_char_p_no, cbEncoded: UInt32, dwFlags: UInt32, pvStructInfo: c_void_p, pcbStructInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptInstallOIDFunctionAddress(hModule: win32more.Foundation.HINSTANCE, dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, cFuncEntry: UInt32, rgFuncEntry: POINTER(win32more.Security.Cryptography.CRYPT_OID_FUNC_ENTRY_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptInitOIDFunctionSet(pszFuncName: win32more.Foundation.PSTR, dwFlags: UInt32) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CryptGetOIDFunctionAddress(hFuncSet: c_void_p, dwEncodingType: UInt32, pszOID: win32more.Foundation.PSTR, dwFlags: UInt32, ppvFuncAddr: POINTER(c_void_p), phFuncAddr: POINTER(c_void_p)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetDefaultOIDDllList(hFuncSet: c_void_p, dwEncodingType: UInt32, pwszDllList: win32more.Foundation.PWSTR, pcchDllList: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetDefaultOIDFunctionAddress(hFuncSet: c_void_p, dwEncodingType: UInt32, pwszDll: win32more.Foundation.PWSTR, dwFlags: UInt32, ppvFuncAddr: POINTER(c_void_p), phFuncAddr: POINTER(c_void_p)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFreeOIDFunctionAddress(hFuncAddr: c_void_p, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptRegisterOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, pszOID: win32more.Foundation.PSTR, pwszDll: win32more.Foundation.PWSTR, pszOverrideFuncName: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnregisterOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, pszOID: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptRegisterDefaultOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, dwIndex: UInt32, pwszDll: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnregisterDefaultOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, pwszDll: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSetOIDFunctionValue(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, pszOID: win32more.Foundation.PSTR, pwszValueName: win32more.Foundation.PWSTR, dwValueType: win32more.System.Registry.REG_VALUE_TYPE, pbValueData: c_char_p_no, cbValueData: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetOIDFunctionValue(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, pszOID: win32more.Foundation.PSTR, pwszValueName: win32more.Foundation.PWSTR, pdwValueType: POINTER(UInt32), pbValueData: c_char_p_no, pcbValueData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEnumOIDFunction(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, pszOID: win32more.Foundation.PSTR, dwFlags: UInt32, pvArg: c_void_p, pfnEnumOIDFunc: win32more.Security.Cryptography.PFN_CRYPT_ENUM_OID_FUNC) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFindOIDInfo(dwKeyType: UInt32, pvKey: c_void_p, dwGroupId: UInt32) -> POINTER(win32more.Security.Cryptography.CRYPT_OID_INFO_head): ...
@winfunctype('CRYPT32.dll')
def CryptRegisterOIDInfo(pInfo: POINTER(win32more.Security.Cryptography.CRYPT_OID_INFO_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnregisterOIDInfo(pInfo: POINTER(win32more.Security.Cryptography.CRYPT_OID_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEnumOIDInfo(dwGroupId: UInt32, dwFlags: UInt32, pvArg: c_void_p, pfnEnumOIDInfo: win32more.Security.Cryptography.PFN_CRYPT_ENUM_OID_INFO) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFindLocalizedName(pwszCryptName: win32more.Foundation.PWSTR) -> win32more.Foundation.PWSTR: ...
@winfunctype('CRYPT32.dll')
def CryptMsgOpenToEncode(dwMsgEncodingType: UInt32, dwFlags: UInt32, dwMsgType: win32more.Security.Cryptography.CRYPT_MSG_TYPE, pvMsgEncodeInfo: c_void_p, pszInnerContentObjID: win32more.Foundation.PSTR, pStreamInfo: POINTER(win32more.Security.Cryptography.CMSG_STREAM_INFO_head)) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CryptMsgCalculateEncodedLength(dwMsgEncodingType: UInt32, dwFlags: UInt32, dwMsgType: UInt32, pvMsgEncodeInfo: c_void_p, pszInnerContentObjID: win32more.Foundation.PSTR, cbData: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CryptMsgOpenToDecode(dwMsgEncodingType: UInt32, dwFlags: UInt32, dwMsgType: UInt32, hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, pRecipientInfo: POINTER(win32more.Security.Cryptography.CERT_INFO_head), pStreamInfo: POINTER(win32more.Security.Cryptography.CMSG_STREAM_INFO_head)) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CryptMsgDuplicate(hCryptMsg: c_void_p) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CryptMsgClose(hCryptMsg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgUpdate(hCryptMsg: c_void_p, pbData: c_char_p_no, cbData: UInt32, fFinal: win32more.Foundation.BOOL) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgGetParam(hCryptMsg: c_void_p, dwParamType: UInt32, dwIndex: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgControl(hCryptMsg: c_void_p, dwFlags: UInt32, dwCtrlType: UInt32, pvCtrlPara: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgVerifyCountersignatureEncoded(hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwEncodingType: UInt32, pbSignerInfo: c_char_p_no, cbSignerInfo: UInt32, pbSignerInfoCountersignature: c_char_p_no, cbSignerInfoCountersignature: UInt32, pciCountersigner: POINTER(win32more.Security.Cryptography.CERT_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgVerifyCountersignatureEncodedEx(hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwEncodingType: UInt32, pbSignerInfo: c_char_p_no, cbSignerInfo: UInt32, pbSignerInfoCountersignature: c_char_p_no, cbSignerInfoCountersignature: UInt32, dwSignerType: UInt32, pvSigner: c_void_p, dwFlags: UInt32, pvExtra: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgCountersign(hCryptMsg: c_void_p, dwIndex: UInt32, cCountersigners: UInt32, rgCountersigners: POINTER(win32more.Security.Cryptography.CMSG_SIGNER_ENCODE_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgCountersignEncoded(dwEncodingType: UInt32, pbSignerInfo: c_char_p_no, cbSignerInfo: UInt32, cCountersigners: UInt32, rgCountersigners: POINTER(win32more.Security.Cryptography.CMSG_SIGNER_ENCODE_INFO_head), pbCountersignature: c_char_p_no, pcbCountersignature: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertOpenStore(lpszStoreProvider: win32more.Foundation.PSTR, dwEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwFlags: win32more.Security.Cryptography.CERT_OPEN_STORE_FLAGS, pvPara: c_void_p) -> win32more.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE) -> win32more.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CertSaveStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwSaveAs: win32more.Security.Cryptography.CERT_STORE_SAVE_AS, dwSaveTo: win32more.Security.Cryptography.CERT_STORE_SAVE_TO, pvSaveToPara: c_void_p, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCloseStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetSubjectCertificateFromStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertId: POINTER(win32more.Security.Cryptography.CERT_INFO_head)) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertEnumCertificatesInStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pPrevCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertFindCertificateInStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFindFlags: UInt32, dwFindType: win32more.Security.Cryptography.CERT_FIND_FLAGS, pvFindPara: c_void_p, pPrevCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertGetIssuerCertificateFromStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pSubjectContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pPrevIssuerContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pdwFlags: POINTER(UInt32)) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertVerifySubjectCertificateContext(pSubject: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pIssuer: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pdwFlags: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCertificateContext(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertCreateCertificateContext(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCertEncoded: c_char_p_no, cbCertEncoded: UInt32) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateContext(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCertificateContextProperty(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCertificateContextProperty(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwPropId: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumCertificateContextProperties(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwPropId: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertCreateCTLEntryFromCertificateContextProperties(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), cOptAttr: UInt32, rgOptAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head), dwFlags: UInt32, pvReserved: c_void_p, pCtlEntry: POINTER(win32more.Security.Cryptography.CTL_ENTRY_head), pcbCtlEntry: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCertificateContextPropertiesFromCTLEntry(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pCtlEntry: POINTER(win32more.Security.Cryptography.CTL_ENTRY_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCRLFromStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pIssuerContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pPrevCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), pdwFlags: POINTER(UInt32)) -> POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertEnumCRLsInStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pPrevCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertFindCRLInStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFindFlags: UInt32, dwFindType: UInt32, pvFindPara: c_void_p, pPrevCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCRLContext(pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertCreateCRLContext(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCrlEncoded: c_char_p_no, cbCrlEncoded: UInt32) -> POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertFreeCRLContext(pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCRLContextProperty(pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCRLContextProperty(pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwPropId: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumCRLContextProperties(pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwPropId: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertFindCertificateInCRL(pCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwFlags: UInt32, pvReserved: c_void_p, ppCrlEntry: POINTER(POINTER(win32more.Security.Cryptography.CRL_ENTRY_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsValidCRLForCertificate(pCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pCrl: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCertificateToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCertEncoded: c_char_p_no, cbCertEncoded: UInt32, dwAddDisposition: UInt32, ppCertContext: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCertificateContextToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddSerializedElementToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pbElement: c_char_p_no, cbElement: UInt32, dwAddDisposition: UInt32, dwFlags: UInt32, dwContextTypeFlags: UInt32, pdwContextType: POINTER(UInt32), ppvContext: POINTER(c_void_p)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDeleteCertificateFromStore(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCRLToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCrlEncoded: c_char_p_no, cbCrlEncoded: UInt32, dwAddDisposition: UInt32, ppCrlContext: POINTER(POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCRLContextToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDeleteCRLFromStore(pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSerializeCertificateStoreElement(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: UInt32, pbElement: c_char_p_no, pcbElement: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSerializeCRLStoreElement(pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwFlags: UInt32, pbElement: c_char_p_no, pcbElement: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCTLContext(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertCreateCTLContext(dwMsgAndCertEncodingType: UInt32, pbCtlEncoded: c_char_p_no, cbCtlEncoded: UInt32) -> POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertFreeCTLContext(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetCTLContextProperty(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCTLContextProperty(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwPropId: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumCTLContextProperties(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwPropId: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertEnumCTLsInStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pPrevCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertFindSubjectInCTL(dwEncodingType: UInt32, dwSubjectType: UInt32, pvSubject: c_void_p, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwFlags: UInt32) -> POINTER(win32more.Security.Cryptography.CTL_ENTRY_head): ...
@winfunctype('CRYPT32.dll')
def CertFindCTLInStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwMsgAndCertEncodingType: UInt32, dwFindFlags: UInt32, dwFindType: win32more.Security.Cryptography.CERT_FIND_TYPE, pvFindPara: c_void_p, pPrevCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCTLToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwMsgAndCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbCtlEncoded: c_char_p_no, cbCtlEncoded: UInt32, dwAddDisposition: UInt32, ppCtlContext: POINTER(POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCTLContextToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSerializeCTLStoreElement(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwFlags: UInt32, pbElement: c_char_p_no, pcbElement: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertDeleteCTLFromStore(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCertificateLinkToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCRLLinkToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddCTLLinkToStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwAddDisposition: UInt32, ppStoreContext: POINTER(POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddStoreToCollection(hCollectionStore: win32more.Security.Cryptography.HCERTSTORE, hSiblingStore: win32more.Security.Cryptography.HCERTSTORE, dwUpdateFlags: UInt32, dwPriority: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRemoveStoreFromCollection(hCollectionStore: win32more.Security.Cryptography.HCERTSTORE, hSiblingStore: win32more.Security.Cryptography.HCERTSTORE) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertControlStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwFlags: win32more.Security.Cryptography.CERT_CONTROL_STORE_FLAGS, dwCtrlType: UInt32, pvCtrlPara: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetStoreProperty(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetStoreProperty(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwPropId: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCreateContext(dwContextType: UInt32, dwEncodingType: UInt32, pbEncoded: c_char_p_no, cbEncoded: UInt32, dwFlags: UInt32, pCreatePara: POINTER(win32more.Security.Cryptography.CERT_CREATE_CONTEXT_PARA_head)) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CertRegisterSystemStore(pvSystemStore: c_void_p, dwFlags: UInt32, pStoreInfo: POINTER(win32more.Security.Cryptography.CERT_SYSTEM_STORE_INFO_head), pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRegisterPhysicalStore(pvSystemStore: c_void_p, dwFlags: UInt32, pwszStoreName: win32more.Foundation.PWSTR, pStoreInfo: POINTER(win32more.Security.Cryptography.CERT_PHYSICAL_STORE_INFO_head), pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertUnregisterSystemStore(pvSystemStore: c_void_p, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertUnregisterPhysicalStore(pvSystemStore: c_void_p, dwFlags: UInt32, pwszStoreName: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumSystemStoreLocation(dwFlags: UInt32, pvArg: c_void_p, pfnEnum: win32more.Security.Cryptography.PFN_CERT_ENUM_SYSTEM_STORE_LOCATION) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumSystemStore(dwFlags: UInt32, pvSystemStoreLocationPara: c_void_p, pvArg: c_void_p, pfnEnum: win32more.Security.Cryptography.PFN_CERT_ENUM_SYSTEM_STORE) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumPhysicalStore(pvSystemStore: c_void_p, dwFlags: UInt32, pvArg: c_void_p, pfnEnum: win32more.Security.Cryptography.PFN_CERT_ENUM_PHYSICAL_STORE) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetEnhancedKeyUsage(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: UInt32, pUsage: POINTER(win32more.Security.Cryptography.CTL_USAGE_head), pcbUsage: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSetEnhancedKeyUsage(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pUsage: POINTER(win32more.Security.Cryptography.CTL_USAGE_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEnhancedKeyUsageIdentifier(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pszUsageIdentifier: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRemoveEnhancedKeyUsageIdentifier(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pszUsageIdentifier: win32more.Foundation.PSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetValidUsages(cCerts: UInt32, rghCerts: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), cNumOIDs: POINTER(Int32), rghOIDs: POINTER(win32more.Foundation.PSTR), pcbOIDs: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgGetAndVerifySigner(hCryptMsg: c_void_p, cSignerStore: UInt32, rghSignerStore: POINTER(win32more.Security.Cryptography.HCERTSTORE), dwFlags: UInt32, ppSigner: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), pdwSignerIndex: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgSignCTL(dwMsgEncodingType: UInt32, pbCtlContent: c_char_p_no, cbCtlContent: UInt32, pSignInfo: POINTER(win32more.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO_head), dwFlags: UInt32, pbEncoded: c_char_p_no, pcbEncoded: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMsgEncodeAndSignCTL(dwMsgEncodingType: UInt32, pCtlInfo: POINTER(win32more.Security.Cryptography.CTL_INFO_head), pSignInfo: POINTER(win32more.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO_head), dwFlags: UInt32, pbEncoded: c_char_p_no, pcbEncoded: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFindSubjectInSortedCTL(pSubjectIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwFlags: UInt32, pvReserved: c_void_p, pEncodedAttributes: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertEnumSubjectInSortedCTL(pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), ppvNextSubject: POINTER(c_void_p), pSubjectIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pEncodedAttributes: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyCTLUsage(dwEncodingType: UInt32, dwSubjectType: UInt32, pvSubject: c_void_p, pSubjectUsage: POINTER(win32more.Security.Cryptography.CTL_USAGE_head), dwFlags: UInt32, pVerifyUsagePara: POINTER(win32more.Security.Cryptography.CTL_VERIFY_USAGE_PARA_head), pVerifyUsageStatus: POINTER(win32more.Security.Cryptography.CTL_VERIFY_USAGE_STATUS_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyRevocation(dwEncodingType: UInt32, dwRevType: UInt32, cContext: UInt32, rgpvContext: POINTER(c_void_p), dwFlags: UInt32, pRevPara: POINTER(win32more.Security.Cryptography.CERT_REVOCATION_PARA_head), pRevStatus: POINTER(win32more.Security.Cryptography.CERT_REVOCATION_STATUS_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCompareIntegerBlob(pInt1: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pInt2: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCompareCertificate(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertId1: POINTER(win32more.Security.Cryptography.CERT_INFO_head), pCertId2: POINTER(win32more.Security.Cryptography.CERT_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCompareCertificateName(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertName1: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pCertName2: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsRDNAttrsInCertificateName(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFlags: UInt32, pCertName: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pRDN: POINTER(win32more.Security.Cryptography.CERT_RDN_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertComparePublicKeyInfo(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pPublicKey1: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pPublicKey2: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetPublicKeyLength(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pPublicKey: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head)) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyCertificateSignature(hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbEncoded: c_char_p_no, cbEncoded: UInt32, pPublicKey: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyCertificateSignatureEx(hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwSubjectType: UInt32, pvSubject: c_void_p, dwIssuerType: UInt32, pvIssuer: c_void_p, dwFlags: win32more.Security.Cryptography.CRYPT_VERIFY_CERT_FLAGS, pvExtra: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsStrongHashToSign(pStrongSignPara: POINTER(win32more.Security.Cryptography.CERT_STRONG_SIGN_PARA_head), pwszCNGHashAlgid: win32more.Foundation.PWSTR, pSigningCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashToBeSigned(hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbEncoded: c_char_p_no, cbEncoded: UInt32, pbComputedHash: c_char_p_no, pcbComputedHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashCertificate(hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, Algid: UInt32, dwFlags: UInt32, pbEncoded: c_char_p_no, cbEncoded: UInt32, pbComputedHash: c_char_p_no, pcbComputedHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashCertificate2(pwszCNGHashAlgid: win32more.Foundation.PWSTR, dwFlags: UInt32, pvReserved: c_void_p, pbEncoded: c_char_p_no, cbEncoded: UInt32, pbComputedHash: c_char_p_no, pcbComputedHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignCertificate(hCryptProvOrNCryptKey: win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pbEncodedToBeSigned: c_char_p_no, cbEncodedToBeSigned: UInt32, pSignatureAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pvHashAuxInfo: c_void_p, pbSignature: c_char_p_no, pcbSignature: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignAndEncodeCertificate(hCryptProvOrNCryptKey: win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: win32more.Security.Cryptography.CERT_KEY_SPEC, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, lpszStructType: win32more.Foundation.PSTR, pvStructInfo: c_void_p, pSignatureAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pvHashAuxInfo: c_void_p, pbEncoded: c_char_p_no, pcbEncoded: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyTimeValidity(pTimeToVerify: POINTER(win32more.Foundation.FILETIME_head), pCertInfo: POINTER(win32more.Security.Cryptography.CERT_INFO_head)) -> Int32: ...
@winfunctype('CRYPT32.dll')
def CertVerifyCRLTimeValidity(pTimeToVerify: POINTER(win32more.Foundation.FILETIME_head), pCrlInfo: POINTER(win32more.Security.Cryptography.CRL_INFO_head)) -> Int32: ...
@winfunctype('CRYPT32.dll')
def CertVerifyValidityNesting(pSubjectInfo: POINTER(win32more.Security.Cryptography.CERT_INFO_head), pIssuerInfo: POINTER(win32more.Security.Cryptography.CERT_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertVerifyCRLRevocation(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertId: POINTER(win32more.Security.Cryptography.CERT_INFO_head), cCrlInfo: UInt32, rgpCrlInfo: POINTER(POINTER(win32more.Security.Cryptography.CRL_INFO_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAlgIdToOID(dwAlgId: UInt32) -> win32more.Foundation.PSTR: ...
@winfunctype('CRYPT32.dll')
def CertOIDToAlgId(pszObjId: win32more.Foundation.PSTR) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertFindExtension(pszObjId: win32more.Foundation.PSTR, cExtensions: UInt32, rgExtensions: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)) -> POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head): ...
@winfunctype('CRYPT32.dll')
def CertFindAttribute(pszObjId: win32more.Foundation.PSTR, cAttr: UInt32, rgAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)) -> POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head): ...
@winfunctype('CRYPT32.dll')
def CertFindRDNAttr(pszObjId: win32more.Foundation.PSTR, pName: POINTER(win32more.Security.Cryptography.CERT_NAME_INFO_head)) -> POINTER(win32more.Security.Cryptography.CERT_RDN_ATTR_head): ...
@winfunctype('CRYPT32.dll')
def CertGetIntendedKeyUsage(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pCertInfo: POINTER(win32more.Security.Cryptography.CERT_INFO_head), pbKeyUsage: c_char_p_no, cbKeyUsage: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptInstallDefaultContext(hCryptProv: UIntPtr, dwDefaultType: win32more.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_TYPE, pvDefaultPara: c_void_p, dwFlags: win32more.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_FLAGS, pvReserved: c_void_p, phDefaultContext: POINTER(c_void_p)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUninstallDefaultContext(hDefaultContext: c_void_p, dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPublicKeyInfo(hCryptProvOrNCryptKey: win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pcbInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPublicKeyInfoEx(hCryptProvOrNCryptKey: win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: c_void_p, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pcbInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPublicKeyInfoFromBCryptKeyHandle(hBCryptKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: c_void_p, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pcbInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPublicKeyInfo(hCryptProv: UIntPtr, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), phKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPublicKeyInfoEx(hCryptProv: UIntPtr, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), aiKeyAlg: UInt32, dwFlags: UInt32, pvAuxInfo: c_void_p, phKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPublicKeyInfoEx2(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), dwFlags: win32more.Security.Cryptography.CRYPT_IMPORT_PUBLIC_KEY_FLAGS, pvAuxInfo: c_void_p, phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptAcquireCertificatePrivateKey(pCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: win32more.Security.Cryptography.CRYPT_ACQUIRE_FLAGS, pvParameters: c_void_p, phCryptProvOrNCryptKey: POINTER(win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE), pdwKeySpec: POINTER(win32more.Security.Cryptography.CERT_KEY_SPEC), pfCallerFreeProvOrNCryptKey: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptFindCertificateKeyProvInfo(pCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: win32more.Security.Cryptography.CRYPT_FIND_FLAGS, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptImportPKCS8(sPrivateKeyAndParams: win32more.Security.Cryptography.CRYPT_PKCS8_IMPORT_PARAMS, dwFlags: win32more.Security.Cryptography.CRYPT_KEY_FLAGS, phCryptProv: POINTER(UIntPtr), pvAuxInfo: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptExportPKCS8(hCryptProv: UIntPtr, dwKeySpec: UInt32, pszPrivateKeyObjId: win32more.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: c_void_p, pbPrivateKeyBlob: c_char_p_no, pcbPrivateKeyBlob: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashPublicKeyInfo(hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, Algid: UInt32, dwFlags: UInt32, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pbComputedHash: c_char_p_no, pcbComputedHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertRDNValueToStrA(dwValueType: UInt32, pValue: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), psz: win32more.Foundation.PSTR, csz: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertRDNValueToStrW(dwValueType: UInt32, pValue: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), psz: win32more.Foundation.PWSTR, csz: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertNameToStrA(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pName: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwStrType: win32more.Security.Cryptography.CERT_STRING_TYPE, psz: win32more.Foundation.PSTR, csz: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertNameToStrW(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pName: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwStrType: win32more.Security.Cryptography.CERT_STRING_TYPE, psz: win32more.Foundation.PWSTR, csz: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertStrToNameA(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszX500: win32more.Foundation.PSTR, dwStrType: win32more.Security.Cryptography.CERT_STRING_TYPE, pvReserved: c_void_p, pbEncoded: c_char_p_no, pcbEncoded: POINTER(UInt32), ppszError: POINTER(win32more.Foundation.PSTR)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertStrToNameW(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszX500: win32more.Foundation.PWSTR, dwStrType: win32more.Security.Cryptography.CERT_STRING_TYPE, pvReserved: c_void_p, pbEncoded: c_char_p_no, pcbEncoded: POINTER(UInt32), ppszError: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetNameStringA(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwType: UInt32, dwFlags: UInt32, pvTypePara: c_void_p, pszNameString: win32more.Foundation.PSTR, cchNameString: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CertGetNameStringW(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwType: UInt32, dwFlags: UInt32, pvTypePara: c_void_p, pszNameString: win32more.Foundation.PWSTR, cchNameString: UInt32) -> UInt32: ...
@winfunctype('CRYPT32.dll')
def CryptSignMessage(pSignPara: POINTER(win32more.Security.Cryptography.CRYPT_SIGN_MESSAGE_PARA_head), fDetachedSignature: win32more.Foundation.BOOL, cToBeSigned: UInt32, rgpbToBeSigned: POINTER(c_char_p_no), rgcbToBeSigned: POINTER(UInt32), pbSignedBlob: c_char_p_no, pcbSignedBlob: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyMessageSignature(pVerifyPara: POINTER(win32more.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA_head), dwSignerIndex: UInt32, pbSignedBlob: c_char_p_no, cbSignedBlob: UInt32, pbDecoded: c_char_p_no, pcbDecoded: POINTER(UInt32), ppSignerCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetMessageSignerCount(dwMsgEncodingType: UInt32, pbSignedBlob: c_char_p_no, cbSignedBlob: UInt32) -> Int32: ...
@winfunctype('CRYPT32.dll')
def CryptGetMessageCertificates(dwMsgAndCertEncodingType: UInt32, hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwFlags: UInt32, pbSignedBlob: c_char_p_no, cbSignedBlob: UInt32) -> win32more.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyDetachedMessageSignature(pVerifyPara: POINTER(win32more.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA_head), dwSignerIndex: UInt32, pbDetachedSignBlob: c_char_p_no, cbDetachedSignBlob: UInt32, cToBeSigned: UInt32, rgpbToBeSigned: POINTER(c_char_p_no), rgcbToBeSigned: POINTER(UInt32), ppSignerCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEncryptMessage(pEncryptPara: POINTER(win32more.Security.Cryptography.CRYPT_ENCRYPT_MESSAGE_PARA_head), cRecipientCert: UInt32, rgpRecipientCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), pbToBeEncrypted: c_char_p_no, cbToBeEncrypted: UInt32, pbEncryptedBlob: c_char_p_no, pcbEncryptedBlob: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecryptMessage(pDecryptPara: POINTER(win32more.Security.Cryptography.CRYPT_DECRYPT_MESSAGE_PARA_head), pbEncryptedBlob: c_char_p_no, cbEncryptedBlob: UInt32, pbDecrypted: c_char_p_no, pcbDecrypted: POINTER(UInt32), ppXchgCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignAndEncryptMessage(pSignPara: POINTER(win32more.Security.Cryptography.CRYPT_SIGN_MESSAGE_PARA_head), pEncryptPara: POINTER(win32more.Security.Cryptography.CRYPT_ENCRYPT_MESSAGE_PARA_head), cRecipientCert: UInt32, rgpRecipientCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), pbToBeSignedAndEncrypted: c_char_p_no, cbToBeSignedAndEncrypted: UInt32, pbSignedAndEncryptedBlob: c_char_p_no, pcbSignedAndEncryptedBlob: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecryptAndVerifyMessageSignature(pDecryptPara: POINTER(win32more.Security.Cryptography.CRYPT_DECRYPT_MESSAGE_PARA_head), pVerifyPara: POINTER(win32more.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA_head), dwSignerIndex: UInt32, pbEncryptedBlob: c_char_p_no, cbEncryptedBlob: UInt32, pbDecrypted: c_char_p_no, pcbDecrypted: POINTER(UInt32), ppXchgCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), ppSignerCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptDecodeMessage(dwMsgTypeFlags: UInt32, pDecryptPara: POINTER(win32more.Security.Cryptography.CRYPT_DECRYPT_MESSAGE_PARA_head), pVerifyPara: POINTER(win32more.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA_head), dwSignerIndex: UInt32, pbEncodedBlob: c_char_p_no, cbEncodedBlob: UInt32, dwPrevInnerContentType: UInt32, pdwMsgType: POINTER(UInt32), pdwInnerContentType: POINTER(UInt32), pbDecoded: c_char_p_no, pcbDecoded: POINTER(UInt32), ppXchgCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), ppSignerCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptHashMessage(pHashPara: POINTER(win32more.Security.Cryptography.CRYPT_HASH_MESSAGE_PARA_head), fDetachedHash: win32more.Foundation.BOOL, cToBeHashed: UInt32, rgpbToBeHashed: POINTER(c_char_p_no), rgcbToBeHashed: POINTER(UInt32), pbHashedBlob: c_char_p_no, pcbHashedBlob: POINTER(UInt32), pbComputedHash: c_char_p_no, pcbComputedHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyMessageHash(pHashPara: POINTER(win32more.Security.Cryptography.CRYPT_HASH_MESSAGE_PARA_head), pbHashedBlob: c_char_p_no, cbHashedBlob: UInt32, pbToBeHashed: c_char_p_no, pcbToBeHashed: POINTER(UInt32), pbComputedHash: c_char_p_no, pcbComputedHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyDetachedMessageHash(pHashPara: POINTER(win32more.Security.Cryptography.CRYPT_HASH_MESSAGE_PARA_head), pbDetachedHashBlob: c_char_p_no, cbDetachedHashBlob: UInt32, cToBeHashed: UInt32, rgpbToBeHashed: POINTER(c_char_p_no), rgcbToBeHashed: POINTER(UInt32), pbComputedHash: c_char_p_no, pcbComputedHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSignMessageWithKey(pSignPara: POINTER(win32more.Security.Cryptography.CRYPT_KEY_SIGN_MESSAGE_PARA_head), pbToBeSigned: c_char_p_no, cbToBeSigned: UInt32, pbSignedBlob: c_char_p_no, pcbSignedBlob: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyMessageSignatureWithKey(pVerifyPara: POINTER(win32more.Security.Cryptography.CRYPT_KEY_VERIFY_MESSAGE_PARA_head), pPublicKeyInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pbSignedBlob: c_char_p_no, cbSignedBlob: UInt32, pbDecoded: c_char_p_no, pcbDecoded: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertOpenSystemStoreA(hProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, szSubsystemProtocol: win32more.Foundation.PSTR) -> win32more.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CertOpenSystemStoreW(hProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, szSubsystemProtocol: win32more.Foundation.PWSTR) -> win32more.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCertificateToSystemStoreA(szCertStoreName: win32more.Foundation.PSTR, pbCertEncoded: c_char_p_no, cbCertEncoded: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertAddEncodedCertificateToSystemStoreW(szCertStoreName: win32more.Foundation.PWSTR, pbCertEncoded: c_char_p_no, cbCertEncoded: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('WINTRUST.dll')
def FindCertsByIssuer(pCertChains: POINTER(win32more.Security.Cryptography.CERT_CHAIN_head), pcbCertChains: POINTER(UInt32), pcCertChains: POINTER(UInt32), pbEncodedIssuerName: c_char_p_no, cbEncodedIssuerName: UInt32, pwszPurpose: win32more.Foundation.PWSTR, dwKeySpec: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPT32.dll')
def CryptQueryObject(dwObjectType: win32more.Security.Cryptography.CERT_QUERY_OBJECT_TYPE, pvObject: c_void_p, dwExpectedContentTypeFlags: win32more.Security.Cryptography.CERT_QUERY_CONTENT_TYPE_FLAGS, dwExpectedFormatTypeFlags: win32more.Security.Cryptography.CERT_QUERY_FORMAT_TYPE_FLAGS, dwFlags: UInt32, pdwMsgAndCertEncodingType: POINTER(win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE), pdwContentType: POINTER(win32more.Security.Cryptography.CERT_QUERY_CONTENT_TYPE), pdwFormatType: POINTER(win32more.Security.Cryptography.CERT_QUERY_FORMAT_TYPE), phCertStore: POINTER(win32more.Security.Cryptography.HCERTSTORE), phMsg: POINTER(c_void_p), ppvContext: POINTER(c_void_p)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptMemAlloc(cbSize: UInt32) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CryptMemRealloc(pv: c_void_p, cbSize: UInt32) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CryptMemFree(pv: c_void_p) -> Void: ...
@winfunctype('CRYPT32.dll')
def CryptCreateAsyncHandle(dwFlags: UInt32, phAsync: POINTER(win32more.Security.Cryptography.HCRYPTASYNC)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSetAsyncParam(hAsync: win32more.Security.Cryptography.HCRYPTASYNC, pszParamOid: win32more.Foundation.PSTR, pvParam: c_void_p, pfnFree: win32more.Security.Cryptography.PFN_CRYPT_ASYNC_PARAM_FREE_FUNC) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptGetAsyncParam(hAsync: win32more.Security.Cryptography.HCRYPTASYNC, pszParamOid: win32more.Foundation.PSTR, ppvParam: POINTER(c_void_p), ppfnFree: POINTER(win32more.Security.Cryptography.PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptCloseAsyncHandle(hAsync: win32more.Security.Cryptography.HCRYPTASYNC) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptRetrieveObjectByUrlA(pszUrl: win32more.Foundation.PSTR, pszObjectOid: win32more.Foundation.PSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, ppvObject: POINTER(c_void_p), hAsyncRetrieve: win32more.Security.Cryptography.HCRYPTASYNC, pCredentials: POINTER(win32more.Security.Cryptography.CRYPT_CREDENTIALS_head), pvVerify: c_void_p, pAuxInfo: POINTER(win32more.Security.Cryptography.CRYPT_RETRIEVE_AUX_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptRetrieveObjectByUrlW(pszUrl: win32more.Foundation.PWSTR, pszObjectOid: win32more.Foundation.PSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, ppvObject: POINTER(c_void_p), hAsyncRetrieve: win32more.Security.Cryptography.HCRYPTASYNC, pCredentials: POINTER(win32more.Security.Cryptography.CRYPT_CREDENTIALS_head), pvVerify: c_void_p, pAuxInfo: POINTER(win32more.Security.Cryptography.CRYPT_RETRIEVE_AUX_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptInstallCancelRetrieval(pfnCancel: win32more.Security.Cryptography.PFN_CRYPT_CANCEL_RETRIEVAL, pvArg: c_void_p, dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptUninstallCancelRetrieval(dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPTNET.dll')
def CryptGetObjectUrl(pszUrlOid: win32more.Foundation.PSTR, pvPara: c_void_p, dwFlags: win32more.Security.Cryptography.CRYPT_GET_URL_FLAGS, pUrlArray: POINTER(win32more.Security.Cryptography.CRYPT_URL_ARRAY_head), pcbUrlArray: POINTER(UInt32), pUrlInfo: POINTER(win32more.Security.Cryptography.CRYPT_URL_INFO_head), pcbUrlInfo: POINTER(UInt32), pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCreateSelfSignCertificate(hCryptProvOrNCryptKey: win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, pSubjectIssuerBlob: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwFlags: win32more.Security.Cryptography.CERT_CREATE_SELFSIGN_FLAGS, pKeyProvInfo: POINTER(win32more.Security.Cryptography.CRYPT_KEY_PROV_INFO_head), pSignatureAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pStartTime: POINTER(win32more.Foundation.SYSTEMTIME_head), pEndTime: POINTER(win32more.Foundation.SYSTEMTIME_head), pExtensions: POINTER(win32more.Security.Cryptography.CERT_EXTENSIONS_head)) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CryptGetKeyIdentifierProperty(pKeyIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwPropId: UInt32, dwFlags: UInt32, pwszComputerName: win32more.Foundation.PWSTR, pvReserved: c_void_p, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptSetKeyIdentifierProperty(pKeyIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwPropId: UInt32, dwFlags: UInt32, pwszComputerName: win32more.Foundation.PWSTR, pvReserved: c_void_p, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptEnumKeyIdentifierProperties(pKeyIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwPropId: UInt32, dwFlags: UInt32, pwszComputerName: win32more.Foundation.PWSTR, pvReserved: c_void_p, pvArg: c_void_p, pfnEnum: win32more.Security.Cryptography.PFN_CRYPT_ENUM_KEYID_PROP) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptCreateKeyIdentifierFromCSP(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPubKeyOID: win32more.Foundation.PSTR, pPubKeyStruc: POINTER(win32more.Security.Cryptography.PUBLICKEYSTRUC_head), cbPubKeyStruc: UInt32, dwFlags: UInt32, pvReserved: c_void_p, pbHash: c_char_p_no, pcbHash: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertCreateCertificateChainEngine(pConfig: POINTER(win32more.Security.Cryptography.CERT_CHAIN_ENGINE_CONFIG_head), phChainEngine: POINTER(win32more.Security.Cryptography.HCERTCHAINENGINE)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateChainEngine(hChainEngine: win32more.Security.Cryptography.HCERTCHAINENGINE) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertResyncCertificateChainEngine(hChainEngine: win32more.Security.Cryptography.HCERTCHAINENGINE) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertGetCertificateChain(hChainEngine: win32more.Security.Cryptography.HCERTCHAINENGINE, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pTime: POINTER(win32more.Foundation.FILETIME_head), hAdditionalStore: win32more.Security.Cryptography.HCERTSTORE, pChainPara: POINTER(win32more.Security.Cryptography.CERT_CHAIN_PARA_head), dwFlags: UInt32, pvReserved: c_void_p, ppChainContext: POINTER(POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateChain(pChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head)) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertDuplicateCertificateChain(pChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertFindChainInStore(hCertStore: win32more.Security.Cryptography.HCERTSTORE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, dwFindFlags: win32more.Security.Cryptography.CERT_FIND_CHAIN_IN_STORE_FLAGS, dwFindType: UInt32, pvFindPara: c_void_p, pPrevChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head)) -> POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertVerifyCertificateChainPolicy(pszPolicyOID: win32more.Foundation.PSTR, pChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head), pPolicyPara: POINTER(win32more.Security.Cryptography.CERT_CHAIN_POLICY_PARA_head), pPolicyStatus: POINTER(win32more.Security.Cryptography.CERT_CHAIN_POLICY_STATUS_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptStringToBinaryA(pszString: win32more.Foundation.PSTR, cchString: UInt32, dwFlags: win32more.Security.Cryptography.CRYPT_STRING, pbBinary: c_char_p_no, pcbBinary: POINTER(UInt32), pdwSkip: POINTER(UInt32), pdwFlags: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptStringToBinaryW(pszString: win32more.Foundation.PWSTR, cchString: UInt32, dwFlags: win32more.Security.Cryptography.CRYPT_STRING, pbBinary: c_char_p_no, pcbBinary: POINTER(UInt32), pdwSkip: POINTER(UInt32), pdwFlags: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptBinaryToStringA(pbBinary: c_char_p_no, cbBinary: UInt32, dwFlags: win32more.Security.Cryptography.CRYPT_STRING, pszString: win32more.Foundation.PSTR, pcchString: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptBinaryToStringW(pbBinary: c_char_p_no, cbBinary: UInt32, dwFlags: win32more.Security.Cryptography.CRYPT_STRING, pszString: win32more.Foundation.PWSTR, pcchString: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def PFXImportCertStore(pPFX: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), szPassword: win32more.Foundation.PWSTR, dwFlags: win32more.Security.Cryptography.CRYPT_KEY_FLAGS) -> win32more.Security.Cryptography.HCERTSTORE: ...
@winfunctype('CRYPT32.dll')
def PFXIsPFXBlob(pPFX: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def PFXVerifyPassword(pPFX: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), szPassword: win32more.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def PFXExportCertStoreEx(hStore: win32more.Security.Cryptography.HCERTSTORE, pPFX: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), szPassword: win32more.Foundation.PWSTR, pvPara: c_void_p, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def PFXExportCertStore(hStore: win32more.Security.Cryptography.HCERTSTORE, pPFX: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), szPassword: win32more.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertOpenServerOcspResponse(pChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head), dwFlags: UInt32, pOpenPara: POINTER(win32more.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_head)) -> c_void_p: ...
@winfunctype('CRYPT32.dll')
def CertAddRefServerOcspResponse(hServerOcspResponse: c_void_p) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertCloseServerOcspResponse(hServerOcspResponse: c_void_p, dwFlags: UInt32) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertGetServerOcspResponseContext(hServerOcspResponse: c_void_p, dwFlags: UInt32, pvReserved: c_void_p) -> POINTER(win32more.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT_head): ...
@winfunctype('CRYPT32.dll')
def CertAddRefServerOcspResponseContext(pServerOcspResponseContext: POINTER(win32more.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT_head)) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertFreeServerOcspResponseContext(pServerOcspResponseContext: POINTER(win32more.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT_head)) -> Void: ...
@winfunctype('CRYPT32.dll')
def CertRetrieveLogoOrBiometricInfo(pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), lpszLogoOrBiometricType: win32more.Foundation.PSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, dwFlags: UInt32, pvReserved: c_void_p, ppbData: POINTER(c_char_p_no), pcbData: POINTER(UInt32), ppwszMimeType: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertSelectCertificateChains(pSelectionContext: POINTER(Guid), dwFlags: UInt32, pChainParameters: POINTER(win32more.Security.Cryptography.CERT_SELECT_CHAIN_PARA_head), cCriteria: UInt32, rgpCriteria: POINTER(win32more.Security.Cryptography.CERT_SELECT_CRITERIA_head), hStore: win32more.Security.Cryptography.HCERTSTORE, pcSelection: POINTER(UInt32), pprgpSelection: POINTER(POINTER(POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head)))) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertFreeCertificateChainList(prgpSelection: POINTER(POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head))) -> Void: ...
@winfunctype('CRYPT32.dll')
def CryptRetrieveTimeStamp(wszUrl: win32more.Foundation.PWSTR, dwRetrievalFlags: UInt32, dwTimeout: UInt32, pszHashId: win32more.Foundation.PSTR, pPara: POINTER(win32more.Security.Cryptography.CRYPT_TIMESTAMP_PARA_head), pbData: c_char_p_no, cbData: UInt32, ppTsContext: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_TIMESTAMP_CONTEXT_head)), ppTsSigner: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), phStore: POINTER(win32more.Security.Cryptography.HCERTSTORE)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptVerifyTimeStampSignature(pbTSContentInfo: c_char_p_no, cbTSContentInfo: UInt32, pbData: c_char_p_no, cbData: UInt32, hAdditionalStore: win32more.Security.Cryptography.HCERTSTORE, ppTsContext: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_TIMESTAMP_CONTEXT_head)), ppTsSigner: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)), phStore: POINTER(win32more.Security.Cryptography.HCERTSTORE)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CertIsWeakHash(dwHashUseType: UInt32, pwszCNGHashAlgid: win32more.Foundation.PWSTR, dwChainFlags: UInt32, pSignerChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head), pTimeStamp: POINTER(win32more.Foundation.FILETIME_head), pwszFileName: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptProtectData(pDataIn: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), szDataDescr: win32more.Foundation.PWSTR, pOptionalEntropy: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pvReserved: c_void_p, pPromptStruct: POINTER(win32more.Security.Cryptography.CRYPTPROTECT_PROMPTSTRUCT_head), dwFlags: UInt32, pDataOut: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnprotectData(pDataIn: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), ppszDataDescr: POINTER(win32more.Foundation.PWSTR), pOptionalEntropy: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pvReserved: c_void_p, pPromptStruct: POINTER(win32more.Security.Cryptography.CRYPTPROTECT_PROMPTSTRUCT_head), dwFlags: UInt32, pDataOut: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUpdateProtectedState(pOldSid: win32more.Foundation.PSID, pwszOldPassword: win32more.Foundation.PWSTR, dwFlags: UInt32, pdwSuccessCount: POINTER(UInt32), pdwFailureCount: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptProtectMemory(pDataIn: c_void_p, cbDataIn: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('CRYPT32.dll')
def CryptUnprotectMemory(pDataIn: c_void_p, cbDataIn: UInt32, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('ncrypt.dll')
def NCryptRegisterProtectionDescriptorName(pwszName: win32more.Foundation.PWSTR, pwszDescriptorString: win32more.Foundation.PWSTR, dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptQueryProtectionDescriptorName(pwszName: win32more.Foundation.PWSTR, pwszDescriptorString: win32more.Foundation.PWSTR, pcDescriptorString: POINTER(UIntPtr), dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCreateProtectionDescriptor(pwszDescriptorString: win32more.Foundation.PWSTR, dwFlags: UInt32, phDescriptor: POINTER(win32more.Security.NCRYPT_DESCRIPTOR_HANDLE)) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptCloseProtectionDescriptor(hDescriptor: win32more.Security.NCRYPT_DESCRIPTOR_HANDLE) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptGetProtectionDescriptorInfo(hDescriptor: win32more.Security.NCRYPT_DESCRIPTOR_HANDLE, pMemPara: POINTER(win32more.Security.Cryptography.NCRYPT_ALLOC_PARA_head), dwInfoType: UInt32, ppvInfo: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptProtectSecret(hDescriptor: win32more.Security.NCRYPT_DESCRIPTOR_HANDLE, dwFlags: UInt32, pbData: c_char_p_no, cbData: UInt32, pMemPara: POINTER(win32more.Security.Cryptography.NCRYPT_ALLOC_PARA_head), hWnd: win32more.Foundation.HWND, ppbProtectedBlob: POINTER(c_char_p_no), pcbProtectedBlob: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptUnprotectSecret(phDescriptor: POINTER(win32more.Security.NCRYPT_DESCRIPTOR_HANDLE), dwFlags: win32more.Security.Cryptography.NCRYPT_FLAGS, pbProtectedBlob: c_char_p_no, cbProtectedBlob: UInt32, pMemPara: POINTER(win32more.Security.Cryptography.NCRYPT_ALLOC_PARA_head), hWnd: win32more.Foundation.HWND, ppbData: POINTER(c_char_p_no), pcbData: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamOpenToProtect(hDescriptor: win32more.Security.NCRYPT_DESCRIPTOR_HANDLE, dwFlags: UInt32, hWnd: win32more.Foundation.HWND, pStreamInfo: POINTER(win32more.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO_head), phStream: POINTER(win32more.Security.NCRYPT_STREAM_HANDLE)) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamOpenToUnprotect(pStreamInfo: POINTER(win32more.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO_head), dwFlags: UInt32, hWnd: win32more.Foundation.HWND, phStream: POINTER(win32more.Security.NCRYPT_STREAM_HANDLE)) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamOpenToUnprotectEx(pStreamInfo: POINTER(win32more.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO_EX_head), dwFlags: UInt32, hWnd: win32more.Foundation.HWND, phStream: POINTER(win32more.Security.NCRYPT_STREAM_HANDLE)) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamUpdate(hStream: win32more.Security.NCRYPT_STREAM_HANDLE, pbData: c_char_p_no, cbData: UIntPtr, fFinal: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
@winfunctype('ncrypt.dll')
def NCryptStreamClose(hStream: win32more.Security.NCRYPT_STREAM_HANDLE) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlClose(hCryptXml: c_void_p) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetTransforms(ppConfig: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlOpenToEncode(pConfig: POINTER(win32more.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG_head), dwFlags: win32more.Security.Cryptography.CRYPT_XML_FLAGS, wszId: win32more.Foundation.PWSTR, rgProperty: POINTER(win32more.Security.Cryptography.CRYPT_XML_PROPERTY_head), cProperty: UInt32, pEncoded: POINTER(win32more.Security.Cryptography.CRYPT_XML_BLOB_head), phSignature: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlOpenToDecode(pConfig: POINTER(win32more.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG_head), dwFlags: win32more.Security.Cryptography.CRYPT_XML_FLAGS, rgProperty: POINTER(win32more.Security.Cryptography.CRYPT_XML_PROPERTY_head), cProperty: UInt32, pEncoded: POINTER(win32more.Security.Cryptography.CRYPT_XML_BLOB_head), phCryptXml: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlAddObject(hSignatureOrObject: c_void_p, dwFlags: UInt32, rgProperty: POINTER(win32more.Security.Cryptography.CRYPT_XML_PROPERTY_head), cProperty: UInt32, pEncoded: POINTER(win32more.Security.Cryptography.CRYPT_XML_BLOB_head), ppObject: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_OBJECT_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlCreateReference(hCryptXml: c_void_p, dwFlags: UInt32, wszId: win32more.Foundation.PWSTR, wszURI: win32more.Foundation.PWSTR, wszType: win32more.Foundation.PWSTR, pDigestMethod: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), cTransform: UInt32, rgTransform: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), phReference: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlDigestReference(hReference: c_void_p, dwFlags: UInt32, pDataProviderIn: POINTER(win32more.Security.Cryptography.CRYPT_XML_DATA_PROVIDER_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlSetHMACSecret(hSignature: c_void_p, pbSecret: c_char_p_no, cbSecret: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlSign(hSignature: c_void_p, hKey: win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: win32more.Security.Cryptography.CERT_KEY_SPEC, dwFlags: win32more.Security.Cryptography.CRYPT_XML_FLAGS, dwKeyInfoSpec: win32more.Security.Cryptography.CRYPT_XML_KEYINFO_SPEC, pvKeyInfoSpec: c_void_p, pSignatureMethod: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), pCanonicalization: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlImportPublicKey(dwFlags: win32more.Security.Cryptography.CRYPT_XML_FLAGS, pKeyValue: POINTER(win32more.Security.Cryptography.CRYPT_XML_KEY_VALUE_head), phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlVerifySignature(hSignature: c_void_p, hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, dwFlags: win32more.Security.Cryptography.CRYPT_XML_FLAGS) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetDocContext(hCryptXml: c_void_p, ppStruct: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_DOC_CTXT_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetSignature(hCryptXml: c_void_p, ppStruct: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_SIGNATURE_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetReference(hCryptXml: c_void_p, ppStruct: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_REFERENCE_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetStatus(hCryptXml: c_void_p, pStatus: POINTER(win32more.Security.Cryptography.CRYPT_XML_STATUS_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlEncode(hCryptXml: c_void_p, dwCharset: win32more.Security.Cryptography.CRYPT_XML_CHARSET, rgProperty: POINTER(win32more.Security.Cryptography.CRYPT_XML_PROPERTY_head), cProperty: UInt32, pvCallbackState: c_void_p, pfnWrite: win32more.Security.Cryptography.PFN_CRYPT_XML_WRITE_CALLBACK) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlGetAlgorithmInfo(pXmlAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), dwFlags: win32more.Security.Cryptography.CRYPT_XML_FLAGS, ppAlgInfo: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('CRYPTXML.dll')
def CryptXmlFindAlgorithmInfo(dwFindByType: UInt32, pvFindBy: c_void_p, dwGroupId: UInt32, dwFlags: UInt32) -> POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO_head): ...
@winfunctype('CRYPTXML.dll')
def CryptXmlEnumAlgorithmInfo(dwGroupId: UInt32, dwFlags: UInt32, pvArg: c_void_p, pfnEnumAlgInfo: win32more.Security.Cryptography.PFN_CRYPT_XML_ENUM_ALG_INFO) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetToken(cPolicyChain: UInt32, pPolicyChain: POINTER(win32more.Security.Cryptography.POLICY_ELEMENT_head), securityToken: POINTER(POINTER(win32more.Security.Cryptography.GENERIC_XML_TOKEN_head)), phProofTokenCrypto: POINTER(POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def ManageCardSpace() -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def ImportInformationCard(fileName: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def Encrypt(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), fOAEP: win32more.Foundation.BOOL, cbInData: UInt32, pInData: c_char_p_no, pcbOutData: POINTER(UInt32), ppOutData: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def Decrypt(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), fOAEP: win32more.Foundation.BOOL, cbInData: UInt32, pInData: c_char_p_no, pcbOutData: POINTER(UInt32), ppOutData: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def SignHash(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), cbHash: UInt32, pHash: c_char_p_no, hashAlgOid: win32more.Foundation.PWSTR, pcbSig: POINTER(UInt32), ppSig: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def VerifyHash(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), cbHash: UInt32, pHash: c_char_p_no, hashAlgOid: win32more.Foundation.PWSTR, cbSig: UInt32, pSig: c_char_p_no, pfVerified: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetCryptoTransform(hSymmetricCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), mode: UInt32, padding: win32more.Security.Cryptography.PaddingMode, feedbackSize: UInt32, direction: win32more.Security.Cryptography.Direction, cbIV: UInt32, pIV: c_char_p_no, pphTransform: POINTER(POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetKeyedHash(hSymmetricCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), pphHash: POINTER(POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def TransformBlock(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), cbInData: UInt32, pInData: c_char_p_no, pcbOutData: POINTER(UInt32), ppOutData: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def TransformFinalBlock(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), cbInData: UInt32, pInData: c_char_p_no, pcbOutData: POINTER(UInt32), ppOutData: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def HashCore(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), cbInData: UInt32, pInData: c_char_p_no) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def HashFinal(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), cbInData: UInt32, pInData: c_char_p_no, pcbOutData: POINTER(UInt32), ppOutData: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def FreeToken(pAllocMemory: POINTER(win32more.Security.Cryptography.GENERIC_XML_TOKEN_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('infocardapi.dll')
def CloseCryptoHandle(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GenerateDerivedKey(hCrypto: POINTER(win32more.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE_head), cbLabel: UInt32, pLabel: c_char_p_no, cbNonce: UInt32, pNonce: c_char_p_no, derivedKeyLength: UInt32, offset: UInt32, algId: win32more.Foundation.PWSTR, pcbKey: POINTER(UInt32), ppKey: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
@winfunctype('infocardapi.dll')
def GetBrowserToken(dwParamType: UInt32, pParam: c_void_p, pcbToken: POINTER(UInt32), ppToken: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
class AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwRegPolicySettings: UInt32
    pSignerInfo: POINTER(win32more.Security.Cryptography.CMSG_SIGNER_INFO_head)
class AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    fCommercial: win32more.Foundation.BOOL
class AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwRegPolicySettings: UInt32
    fCommercial: win32more.Foundation.BOOL
BCRYPT_ALG_HANDLE = IntPtr
class BCRYPT_ALGORITHM_IDENTIFIER(Structure):
    pszName: win32more.Foundation.PWSTR
    dwClass: UInt32
    dwFlags: UInt32
class BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO(Structure):
    cbSize: UInt32
    dwInfoVersion: UInt32
    pbNonce: c_char_p_no
    cbNonce: UInt32
    pbAuthData: c_char_p_no
    cbAuthData: UInt32
    pbTag: c_char_p_no
    cbTag: UInt32
    pbMacContext: c_char_p_no
    cbMacContext: UInt32
    cbAAD: UInt32
    cbData: UInt64
    dwFlags: UInt32
class BCRYPT_DH_KEY_BLOB(Structure):
    dwMagic: win32more.Security.Cryptography.BCRYPT_DH_KEY_BLOB_MAGIC
    cbKey: UInt32
BCRYPT_DH_KEY_BLOB_MAGIC = UInt32
BCRYPT_DH_PUBLIC_MAGIC: BCRYPT_DH_KEY_BLOB_MAGIC = 1112557636
BCRYPT_DH_PRIVATE_MAGIC: BCRYPT_DH_KEY_BLOB_MAGIC = 1448101956
class BCRYPT_DH_PARAMETER_HEADER(Structure):
    cbLength: UInt32
    dwMagic: UInt32
    cbKeyLength: UInt32
class BCRYPT_DSA_KEY_BLOB(Structure):
    dwMagic: win32more.Security.Cryptography.BCRYPT_DSA_MAGIC
    cbKey: UInt32
    Count: Byte * 4
    Seed: Byte * 20
    q: Byte * 20
class BCRYPT_DSA_KEY_BLOB_V2(Structure):
    dwMagic: win32more.Security.Cryptography.BCRYPT_DSA_MAGIC
    cbKey: UInt32
    hashAlgorithm: win32more.Security.Cryptography.HASHALGORITHM_ENUM
    standardVersion: win32more.Security.Cryptography.DSAFIPSVERSION_ENUM
    cbSeedLength: UInt32
    cbGroupSize: UInt32
    Count: Byte * 4
BCRYPT_DSA_MAGIC = UInt32
BCRYPT_DSA_PUBLIC_MAGIC: BCRYPT_DSA_MAGIC = 1112560452
BCRYPT_DSA_PRIVATE_MAGIC: BCRYPT_DSA_MAGIC = 1448104772
class BCRYPT_DSA_PARAMETER_HEADER(Structure):
    cbLength: UInt32
    dwMagic: UInt32
    cbKeyLength: UInt32
    Count: Byte * 4
    Seed: Byte * 20
    q: Byte * 20
class BCRYPT_DSA_PARAMETER_HEADER_V2(Structure):
    cbLength: UInt32
    dwMagic: UInt32
    cbKeyLength: UInt32
    hashAlgorithm: win32more.Security.Cryptography.HASHALGORITHM_ENUM
    standardVersion: win32more.Security.Cryptography.DSAFIPSVERSION_ENUM
    cbSeedLength: UInt32
    cbGroupSize: UInt32
    Count: Byte * 4
class BCRYPT_ECC_CURVE_NAMES(Structure):
    dwEccCurveNames: UInt32
    pEccCurveNames: POINTER(win32more.Foundation.PWSTR)
class BCRYPT_ECCFULLKEY_BLOB(Structure):
    dwMagic: UInt32
    dwVersion: UInt32
    dwCurveType: win32more.Security.Cryptography.ECC_CURVE_TYPE_ENUM
    dwCurveGenerationAlgId: win32more.Security.Cryptography.ECC_CURVE_ALG_ID_ENUM
    cbFieldLength: UInt32
    cbSubgroupOrder: UInt32
    cbCofactor: UInt32
    cbSeed: UInt32
class BCRYPT_ECCKEY_BLOB(Structure):
    dwMagic: UInt32
    cbKey: UInt32
BCRYPT_HANDLE = IntPtr
BCRYPT_HASH_HANDLE = IntPtr
BCRYPT_HASH_OPERATION_TYPE = Int32
BCRYPT_HASH_OPERATION_HASH_DATA: BCRYPT_HASH_OPERATION_TYPE = 1
BCRYPT_HASH_OPERATION_FINISH_HASH: BCRYPT_HASH_OPERATION_TYPE = 2
BCRYPT_INTERFACE = UInt32
BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE: BCRYPT_INTERFACE = 3
BCRYPT_CIPHER_INTERFACE: BCRYPT_INTERFACE = 1
BCRYPT_HASH_INTERFACE: BCRYPT_INTERFACE = 2
BCRYPT_RNG_INTERFACE: BCRYPT_INTERFACE = 6
BCRYPT_SECRET_AGREEMENT_INTERFACE: BCRYPT_INTERFACE = 4
BCRYPT_SIGNATURE_INTERFACE: BCRYPT_INTERFACE = 5
NCRYPT_KEY_STORAGE_INTERFACE: BCRYPT_INTERFACE = 65537
NCRYPT_SCHANNEL_INTERFACE: BCRYPT_INTERFACE = 65538
NCRYPT_SCHANNEL_SIGNATURE_INTERFACE: BCRYPT_INTERFACE = 65539
class BCRYPT_INTERFACE_VERSION(Structure):
    MajorVersion: UInt16
    MinorVersion: UInt16
class BCRYPT_KEY_BLOB(Structure):
    Magic: UInt32
class BCRYPT_KEY_DATA_BLOB_HEADER(Structure):
    dwMagic: UInt32
    dwVersion: UInt32
    cbKeyData: UInt32
BCRYPT_KEY_HANDLE = IntPtr
class BCRYPT_KEY_LENGTHS_STRUCT(Structure):
    dwMinLength: UInt32
    dwMaxLength: UInt32
    dwIncrement: UInt32
class BCRYPT_MULTI_HASH_OPERATION(Structure):
    iHash: UInt32
    hashOperation: win32more.Security.Cryptography.BCRYPT_HASH_OPERATION_TYPE
    pbBuffer: c_char_p_no
    cbBuffer: UInt32
class BCRYPT_MULTI_OBJECT_LENGTH_STRUCT(Structure):
    cbPerObject: UInt32
    cbPerElement: UInt32
BCRYPT_MULTI_OPERATION_TYPE = Int32
BCRYPT_OPERATION_TYPE_HASH: BCRYPT_MULTI_OPERATION_TYPE = 1
class BCRYPT_OAEP_PADDING_INFO(Structure):
    pszAlgId: win32more.Foundation.PWSTR
    pbLabel: c_char_p_no
    cbLabel: UInt32
class BCRYPT_OID(Structure):
    cbOID: UInt32
    pbOID: c_char_p_no
class BCRYPT_OID_LIST(Structure):
    dwOIDCount: UInt32
    pOIDs: POINTER(win32more.Security.Cryptography.BCRYPT_OID_head)
BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = UInt32
BCRYPT_ALG_HANDLE_HMAC_FLAG: BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = 8
BCRYPT_PROV_DISPATCH: BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = 1
BCRYPT_HASH_REUSABLE_FLAG: BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = 32
BCRYPT_OPERATION = UInt32
BCRYPT_CIPHER_OPERATION: BCRYPT_OPERATION = 1
BCRYPT_HASH_OPERATION: BCRYPT_OPERATION = 2
BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION: BCRYPT_OPERATION = 4
BCRYPT_SECRET_AGREEMENT_OPERATION: BCRYPT_OPERATION = 8
BCRYPT_SIGNATURE_OPERATION: BCRYPT_OPERATION = 16
BCRYPT_RNG_OPERATION: BCRYPT_OPERATION = 32
class BCRYPT_PKCS1_PADDING_INFO(Structure):
    pszAlgId: win32more.Foundation.PWSTR
class BCRYPT_PROVIDER_NAME(Structure):
    pszProviderName: win32more.Foundation.PWSTR
class BCRYPT_PSS_PADDING_INFO(Structure):
    pszAlgId: win32more.Foundation.PWSTR
    cbSalt: UInt32
BCRYPT_QUERY_PROVIDER_MODE = UInt32
CRYPT_ANY: BCRYPT_QUERY_PROVIDER_MODE = 4
CRYPT_UM: BCRYPT_QUERY_PROVIDER_MODE = 1
CRYPT_KM: BCRYPT_QUERY_PROVIDER_MODE = 2
CRYPT_MM: BCRYPT_QUERY_PROVIDER_MODE = 3
BCRYPT_RESOLVE_PROVIDERS_FLAGS = UInt32
CRYPT_ALL_FUNCTIONS: BCRYPT_RESOLVE_PROVIDERS_FLAGS = 1
CRYPT_ALL_PROVIDERS: BCRYPT_RESOLVE_PROVIDERS_FLAGS = 2
class BCRYPT_RSAKEY_BLOB(Structure):
    Magic: win32more.Security.Cryptography.BCRYPT_RSAKEY_BLOB_MAGIC
    BitLength: UInt32
    cbPublicExp: UInt32
    cbModulus: UInt32
    cbPrime1: UInt32
    cbPrime2: UInt32
BCRYPT_RSAKEY_BLOB_MAGIC = UInt32
BCRYPT_RSAPUBLIC_MAGIC: BCRYPT_RSAKEY_BLOB_MAGIC = 826364754
BCRYPT_RSAPRIVATE_MAGIC: BCRYPT_RSAKEY_BLOB_MAGIC = 843141970
BCRYPT_RSAFULLPRIVATE_MAGIC: BCRYPT_RSAKEY_BLOB_MAGIC = 859919186
BCRYPT_SECRET_HANDLE = IntPtr
BCRYPT_TABLE = UInt32
CRYPT_LOCAL: BCRYPT_TABLE = 1
CRYPT_DOMAIN: BCRYPT_TABLE = 2
class BCryptBuffer(Structure):
    cbBuffer: UInt32
    BufferType: UInt32
    pvBuffer: c_void_p
class BCryptBufferDesc(Structure):
    ulVersion: UInt32
    cBuffers: UInt32
    pBuffers: POINTER(win32more.Security.Cryptography.BCryptBuffer_head)
CASetupProperty = Int32
ENUM_SETUPPROP_INVALID: CASetupProperty = -1
ENUM_SETUPPROP_CATYPE: CASetupProperty = 0
ENUM_SETUPPROP_CAKEYINFORMATION: CASetupProperty = 1
ENUM_SETUPPROP_INTERACTIVE: CASetupProperty = 2
ENUM_SETUPPROP_CANAME: CASetupProperty = 3
ENUM_SETUPPROP_CADSSUFFIX: CASetupProperty = 4
ENUM_SETUPPROP_VALIDITYPERIOD: CASetupProperty = 5
ENUM_SETUPPROP_VALIDITYPERIODUNIT: CASetupProperty = 6
ENUM_SETUPPROP_EXPIRATIONDATE: CASetupProperty = 7
ENUM_SETUPPROP_PRESERVEDATABASE: CASetupProperty = 8
ENUM_SETUPPROP_DATABASEDIRECTORY: CASetupProperty = 9
ENUM_SETUPPROP_LOGDIRECTORY: CASetupProperty = 10
ENUM_SETUPPROP_SHAREDFOLDER: CASetupProperty = 11
ENUM_SETUPPROP_PARENTCAMACHINE: CASetupProperty = 12
ENUM_SETUPPROP_PARENTCANAME: CASetupProperty = 13
ENUM_SETUPPROP_REQUESTFILE: CASetupProperty = 14
ENUM_SETUPPROP_WEBCAMACHINE: CASetupProperty = 15
ENUM_SETUPPROP_WEBCANAME: CASetupProperty = 16
CCertificateEnrollmentPolicyServerSetup = Guid('afe2fa32-41b1-459d-a5-de-49-ad-d8-a7-21-82')
CCertificateEnrollmentServerSetup = Guid('9902f3bc-88af-4cf8-ae-62-71-40-53-15-52-b6')
CCertSrvSetup = Guid('961f180f-f55c-413d-a9-b3-7d-2a-f4-d8-e4-2f')
CCertSrvSetupKeyInformation = Guid('38373906-5433-4633-b0-fb-29-b7-e7-82-62-e1')
CEPSetupProperty = Int32
ENUM_CEPSETUPPROP_AUTHENTICATION: CEPSetupProperty = 0
ENUM_CEPSETUPPROP_SSLCERTHASH: CEPSetupProperty = 1
ENUM_CEPSETUPPROP_URL: CEPSetupProperty = 2
ENUM_CEPSETUPPROP_KEYBASED_RENEWAL: CEPSetupProperty = 3
class CERT_ACCESS_DESCRIPTION(Structure):
    pszAccessMethod: win32more.Foundation.PSTR
    AccessLocation: win32more.Security.Cryptography.CERT_ALT_NAME_ENTRY
class CERT_ALT_NAME_ENTRY(Structure):
    dwAltNameChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        pOtherName: POINTER(win32more.Security.Cryptography.CERT_OTHER_NAME_head)
        pwszRfc822Name: win32more.Foundation.PWSTR
        pwszDNSName: win32more.Foundation.PWSTR
        DirectoryName: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
        pwszURL: win32more.Foundation.PWSTR
        IPAddress: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
        pszRegisteredID: win32more.Foundation.PSTR
class CERT_ALT_NAME_INFO(Structure):
    cAltEntry: UInt32
    rgAltEntry: POINTER(win32more.Security.Cryptography.CERT_ALT_NAME_ENTRY_head)
class CERT_AUTHORITY_INFO_ACCESS(Structure):
    cAccDescr: UInt32
    rgAccDescr: POINTER(win32more.Security.Cryptography.CERT_ACCESS_DESCRIPTION_head)
class CERT_AUTHORITY_KEY_ID_INFO(Structure):
    KeyId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    CertIssuer: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    CertSerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_AUTHORITY_KEY_ID2_INFO(Structure):
    KeyId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    AuthorityCertIssuer: win32more.Security.Cryptography.CERT_ALT_NAME_INFO
    AuthorityCertSerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_BASIC_CONSTRAINTS_INFO(Structure):
    SubjectType: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    fPathLenConstraint: win32more.Foundation.BOOL
    dwPathLenConstraint: UInt32
    cSubtreesConstraint: UInt32
    rgSubtreesConstraint: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
class CERT_BASIC_CONSTRAINTS2_INFO(Structure):
    fCA: win32more.Foundation.BOOL
    fPathLenConstraint: win32more.Foundation.BOOL
    dwPathLenConstraint: UInt32
class CERT_BIOMETRIC_DATA(Structure):
    dwTypeOfBiometricDataChoice: win32more.Security.Cryptography.CERT_BIOMETRIC_DATA_TYPE
    Anonymous: _Anonymous_e__Union
    HashedUrl: win32more.Security.Cryptography.CERT_HASHED_URL
    class _Anonymous_e__Union(Union):
        dwPredefined: UInt32
        pszObjId: win32more.Foundation.PSTR
CERT_BIOMETRIC_DATA_TYPE = UInt32
CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE: CERT_BIOMETRIC_DATA_TYPE = 1
CERT_BIOMETRIC_OID_DATA_CHOICE: CERT_BIOMETRIC_DATA_TYPE = 2
class CERT_BIOMETRIC_EXT_INFO(Structure):
    cBiometricData: UInt32
    rgBiometricData: POINTER(win32more.Security.Cryptography.CERT_BIOMETRIC_DATA_head)
class CERT_CHAIN(Structure):
    cCerts: UInt32
    certs: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
    keyLocatorInfo: win32more.Security.Cryptography.CRYPT_KEY_PROV_INFO
class CERT_CHAIN_CONTEXT(Structure):
    cbSize: UInt32
    TrustStatus: win32more.Security.Cryptography.CERT_TRUST_STATUS
    cChain: UInt32
    rgpChain: POINTER(POINTER(win32more.Security.Cryptography.CERT_SIMPLE_CHAIN_head))
    cLowerQualityChainContext: UInt32
    rgpLowerQualityChainContext: POINTER(POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head))
    fHasRevocationFreshnessTime: win32more.Foundation.BOOL
    dwRevocationFreshnessTime: UInt32
    dwCreateFlags: UInt32
    ChainId: Guid
class CERT_CHAIN_ELEMENT(Structure):
    cbSize: UInt32
    pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)
    TrustStatus: win32more.Security.Cryptography.CERT_TRUST_STATUS
    pRevocationInfo: POINTER(win32more.Security.Cryptography.CERT_REVOCATION_INFO_head)
    pIssuanceUsage: POINTER(win32more.Security.Cryptography.CTL_USAGE_head)
    pApplicationUsage: POINTER(win32more.Security.Cryptography.CTL_USAGE_head)
    pwszExtendedErrorInfo: win32more.Foundation.PWSTR
class CERT_CHAIN_ENGINE_CONFIG(Structure):
    cbSize: UInt32
    hRestrictedRoot: win32more.Security.Cryptography.HCERTSTORE
    hRestrictedTrust: win32more.Security.Cryptography.HCERTSTORE
    hRestrictedOther: win32more.Security.Cryptography.HCERTSTORE
    cAdditionalStore: UInt32
    rghAdditionalStore: POINTER(win32more.Security.Cryptography.HCERTSTORE)
    dwFlags: UInt32
    dwUrlRetrievalTimeout: UInt32
    MaximumCachedCertificates: UInt32
    CycleDetectionModulus: UInt32
    hExclusiveRoot: win32more.Security.Cryptography.HCERTSTORE
    hExclusiveTrustedPeople: win32more.Security.Cryptography.HCERTSTORE
    dwExclusiveFlags: UInt32
class CERT_CHAIN_FIND_BY_ISSUER_PARA(Structure):
    cbSize: UInt32
    pszUsageIdentifier: win32more.Foundation.PSTR
    dwKeySpec: UInt32
    dwAcquirePrivateKeyFlags: UInt32
    cIssuer: UInt32
    rgIssuer: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
    pfnFindCallback: win32more.Security.Cryptography.PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK
    pvFindArg: c_void_p
class CERT_CHAIN_PARA(Structure):
    cbSize: UInt32
    RequestedUsage: win32more.Security.Cryptography.CERT_USAGE_MATCH
CERT_CHAIN_POLICY_FLAGS = UInt32
CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG: CERT_CHAIN_POLICY_FLAGS = 1
CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG: CERT_CHAIN_POLICY_FLAGS = 2
CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG: CERT_CHAIN_POLICY_FLAGS = 4
CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS: CERT_CHAIN_POLICY_FLAGS = 7
CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG: CERT_CHAIN_POLICY_FLAGS = 8
CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG: CERT_CHAIN_POLICY_FLAGS = 16
CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG: CERT_CHAIN_POLICY_FLAGS = 32
CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG: CERT_CHAIN_POLICY_FLAGS = 64
CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG: CERT_CHAIN_POLICY_FLAGS = 128
CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG: CERT_CHAIN_POLICY_FLAGS = 256
CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG: CERT_CHAIN_POLICY_FLAGS = 512
CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG: CERT_CHAIN_POLICY_FLAGS = 1024
CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG: CERT_CHAIN_POLICY_FLAGS = 2048
CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS: CERT_CHAIN_POLICY_FLAGS = 3840
CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG: CERT_CHAIN_POLICY_FLAGS = 32768
CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG: CERT_CHAIN_POLICY_FLAGS = 16384
CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG: CERT_CHAIN_POLICY_FLAGS = 8192
CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG: CERT_CHAIN_POLICY_FLAGS = 4096
class CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwFlags: win32more.Security.Cryptography.CERT_CHAIN_POLICY_FLAGS
    pvExtraPolicyPara: c_void_p
class CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    dwError: UInt32
    lChainIndex: Int32
    lElementIndex: Int32
    pvExtraPolicyStatus: c_void_p
class CERT_CONTEXT(Structure):
    dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE
    pbCertEncoded: c_char_p_no
    cbCertEncoded: UInt32
    pCertInfo: POINTER(win32more.Security.Cryptography.CERT_INFO_head)
    hCertStore: win32more.Security.Cryptography.HCERTSTORE
CERT_CONTROL_STORE_FLAGS = UInt32
CERT_STORE_CTRL_COMMIT_FORCE_FLAG: CERT_CONTROL_STORE_FLAGS = 1
CERT_STORE_CTRL_COMMIT_CLEAR_FLAG: CERT_CONTROL_STORE_FLAGS = 2
CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG: CERT_CONTROL_STORE_FLAGS = 1
class CERT_CREATE_CONTEXT_PARA(Structure):
    cbSize: UInt32
    pfnFree: win32more.Security.Cryptography.PFN_CRYPT_FREE
    pvFree: c_void_p
    pfnSort: win32more.Security.Cryptography.PFN_CERT_CREATE_CONTEXT_SORT_FUNC
    pvSort: c_void_p
CERT_CREATE_SELFSIGN_FLAGS = UInt32
CERT_CREATE_SELFSIGN_NO_KEY_INFO: CERT_CREATE_SELFSIGN_FLAGS = 2
CERT_CREATE_SELFSIGN_NO_SIGN: CERT_CREATE_SELFSIGN_FLAGS = 1
class CERT_CRL_CONTEXT_PAIR(Structure):
    pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)
    pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)
class CERT_DH_PARAMETERS(Structure):
    p: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    g: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_DSS_PARAMETERS(Structure):
    p: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    q: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    g: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_ECC_SIGNATURE(Structure):
    r: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    s: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_EXTENSION(Structure):
    pszObjId: win32more.Foundation.PSTR
    fCritical: win32more.Foundation.BOOL
    Value: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_EXTENSIONS(Structure):
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
CERT_FIND_CHAIN_IN_STORE_FLAGS = UInt32
CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG: CERT_FIND_CHAIN_IN_STORE_FLAGS = 1
CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG: CERT_FIND_CHAIN_IN_STORE_FLAGS = 2
CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG: CERT_FIND_CHAIN_IN_STORE_FLAGS = 32768
CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG: CERT_FIND_CHAIN_IN_STORE_FLAGS = 4
CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG: CERT_FIND_CHAIN_IN_STORE_FLAGS = 8
CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG: CERT_FIND_CHAIN_IN_STORE_FLAGS = 16384
CERT_FIND_FLAGS = UInt32
CERT_FIND_ANY: CERT_FIND_FLAGS = 0
CERT_FIND_CERT_ID: CERT_FIND_FLAGS = 1048576
CERT_FIND_CTL_USAGE: CERT_FIND_FLAGS = 655360
CERT_FIND_ENHKEY_USAGE: CERT_FIND_FLAGS = 655360
CERT_FIND_EXISTING: CERT_FIND_FLAGS = 851968
CERT_FIND_HASH: CERT_FIND_FLAGS = 65536
CERT_FIND_HAS_PRIVATE_KEY: CERT_FIND_FLAGS = 1376256
CERT_FIND_ISSUER_ATTR: CERT_FIND_FLAGS = 196612
CERT_FIND_ISSUER_NAME: CERT_FIND_FLAGS = 131076
CERT_FIND_ISSUER_OF: CERT_FIND_FLAGS = 786432
CERT_FIND_ISSUER_STR: CERT_FIND_FLAGS = 524292
CERT_FIND_KEY_IDENTIFIER: CERT_FIND_FLAGS = 983040
CERT_FIND_KEY_SPEC: CERT_FIND_FLAGS = 589824
CERT_FIND_MD5_HASH: CERT_FIND_FLAGS = 262144
CERT_FIND_PROPERTY: CERT_FIND_FLAGS = 327680
CERT_FIND_PUBLIC_KEY: CERT_FIND_FLAGS = 393216
CERT_FIND_SHA1_HASH: CERT_FIND_FLAGS = 65536
CERT_FIND_SIGNATURE_HASH: CERT_FIND_FLAGS = 917504
CERT_FIND_SUBJECT_ATTR: CERT_FIND_FLAGS = 196615
CERT_FIND_SUBJECT_CERT: CERT_FIND_FLAGS = 720896
CERT_FIND_SUBJECT_NAME: CERT_FIND_FLAGS = 131079
CERT_FIND_SUBJECT_STR: CERT_FIND_FLAGS = 524295
CERT_FIND_CROSS_CERT_DIST_POINTS: CERT_FIND_FLAGS = 1114112
CERT_FIND_PUBKEY_MD5_HASH: CERT_FIND_FLAGS = 1179648
CERT_FIND_SUBJECT_STR_A: CERT_FIND_FLAGS = 458759
CERT_FIND_SUBJECT_STR_W: CERT_FIND_FLAGS = 524295
CERT_FIND_ISSUER_STR_A: CERT_FIND_FLAGS = 458756
CERT_FIND_ISSUER_STR_W: CERT_FIND_FLAGS = 524292
CERT_FIND_SUBJECT_INFO_ACCESS: CERT_FIND_FLAGS = 1245184
CERT_FIND_HASH_STR: CERT_FIND_FLAGS = 1310720
CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG: CERT_FIND_FLAGS = 1
CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG: CERT_FIND_FLAGS = 2
CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG: CERT_FIND_FLAGS = 4
CERT_FIND_NO_ENHKEY_USAGE_FLAG: CERT_FIND_FLAGS = 8
CERT_FIND_OR_ENHKEY_USAGE_FLAG: CERT_FIND_FLAGS = 16
CERT_FIND_VALID_ENHKEY_USAGE_FLAG: CERT_FIND_FLAGS = 32
CERT_FIND_OPTIONAL_CTL_USAGE_FLAG: CERT_FIND_FLAGS = 1
CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG: CERT_FIND_FLAGS = 2
CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG: CERT_FIND_FLAGS = 4
CERT_FIND_NO_CTL_USAGE_FLAG: CERT_FIND_FLAGS = 8
CERT_FIND_OR_CTL_USAGE_FLAG: CERT_FIND_FLAGS = 16
CERT_FIND_VALID_CTL_USAGE_FLAG: CERT_FIND_FLAGS = 32
CERT_FIND_TYPE = UInt32
CTL_FIND_ANY: CERT_FIND_TYPE = 0
CTL_FIND_SHA1_HASH: CERT_FIND_TYPE = 1
CTL_FIND_MD5_HASH: CERT_FIND_TYPE = 2
CTL_FIND_USAGE: CERT_FIND_TYPE = 3
CTL_FIND_SAME_USAGE_FLAG: CERT_FIND_TYPE = 1
CTL_FIND_EXISTING: CERT_FIND_TYPE = 5
CTL_FIND_SUBJECT: CERT_FIND_TYPE = 4
class CERT_FORTEZZA_DATA_PROP(Structure):
    SerialNumber: Byte * 8
    CertIndex: Int32
    CertLabel: Byte * 36
class CERT_GENERAL_SUBTREE(Structure):
    Base: win32more.Security.Cryptography.CERT_ALT_NAME_ENTRY
    dwMinimum: UInt32
    fMaximum: win32more.Foundation.BOOL
    dwMaximum: UInt32
class CERT_HASHED_URL(Structure):
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Hash: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pwszUrl: win32more.Foundation.PWSTR
class CERT_ID(Structure):
    dwIdChoice: win32more.Security.Cryptography.CERT_ID_OPTION
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        IssuerSerialNumber: win32more.Security.Cryptography.CERT_ISSUER_SERIAL_NUMBER
        KeyId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
        HashId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
CERT_ID_OPTION = UInt32
CERT_ID_ISSUER_SERIAL_NUMBER: CERT_ID_OPTION = 1
CERT_ID_KEY_IDENTIFIER: CERT_ID_OPTION = 2
CERT_ID_SHA1_HASH: CERT_ID_OPTION = 3
class CERT_INFO(Structure):
    dwVersion: UInt32
    SerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SignatureAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Issuer: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    NotBefore: win32more.Foundation.FILETIME
    NotAfter: win32more.Foundation.FILETIME
    Subject: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SubjectPublicKeyInfo: win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO
    IssuerUniqueId: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    SubjectUniqueId: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CERT_ISSUER_SERIAL_NUMBER(Structure):
    Issuer: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_KEY_ATTRIBUTES_INFO(Structure):
    KeyId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    IntendedKeyUsage: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    pPrivateKeyUsagePeriod: POINTER(win32more.Security.Cryptography.CERT_PRIVATE_KEY_VALIDITY_head)
class CERT_KEY_CONTEXT(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE
CERT_KEY_SPEC = UInt32
AT_KEYEXCHANGE: CERT_KEY_SPEC = 1
AT_SIGNATURE: CERT_KEY_SPEC = 2
CERT_NCRYPT_KEY_SPEC: CERT_KEY_SPEC = 4294967295
class CERT_KEY_USAGE_RESTRICTION_INFO(Structure):
    cCertPolicyId: UInt32
    rgCertPolicyId: POINTER(win32more.Security.Cryptography.CERT_POLICY_ID_head)
    RestrictedKeyUsage: win32more.Security.Cryptography.CRYPT_BIT_BLOB
class CERT_KEYGEN_REQUEST_INFO(Structure):
    dwVersion: UInt32
    SubjectPublicKeyInfo: win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO
    pwszChallengeString: win32more.Foundation.PWSTR
class CERT_LDAP_STORE_OPENED_PARA(Structure):
    pvLdapSessionHandle: c_void_p
    pwszLdapUrl: win32more.Foundation.PWSTR
class CERT_LOGOTYPE_AUDIO(Structure):
    LogotypeDetails: win32more.Security.Cryptography.CERT_LOGOTYPE_DETAILS
    pLogotypeAudioInfo: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_AUDIO_INFO_head)
class CERT_LOGOTYPE_AUDIO_INFO(Structure):
    dwFileSize: UInt32
    dwPlayTime: UInt32
    dwChannels: UInt32
    dwSampleRate: UInt32
    pwszLanguage: win32more.Foundation.PWSTR
CERT_LOGOTYPE_CHOICE = UInt32
CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE: CERT_LOGOTYPE_CHOICE = 0
CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE: CERT_LOGOTYPE_CHOICE = 1
CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE: CERT_LOGOTYPE_CHOICE = 2
class CERT_LOGOTYPE_DATA(Structure):
    cLogotypeImage: UInt32
    rgLogotypeImage: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_IMAGE_head)
    cLogotypeAudio: UInt32
    rgLogotypeAudio: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_AUDIO_head)
class CERT_LOGOTYPE_DETAILS(Structure):
    pwszMimeType: win32more.Foundation.PWSTR
    cHashedUrl: UInt32
    rgHashedUrl: POINTER(win32more.Security.Cryptography.CERT_HASHED_URL_head)
class CERT_LOGOTYPE_EXT_INFO(Structure):
    cCommunityLogo: UInt32
    rgCommunityLogo: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_INFO_head)
    pIssuerLogo: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_INFO_head)
    pSubjectLogo: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_INFO_head)
    cOtherLogo: UInt32
    rgOtherLogo: POINTER(win32more.Security.Cryptography.CERT_OTHER_LOGOTYPE_INFO_head)
class CERT_LOGOTYPE_IMAGE(Structure):
    LogotypeDetails: win32more.Security.Cryptography.CERT_LOGOTYPE_DETAILS
    pLogotypeImageInfo: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_IMAGE_INFO_head)
class CERT_LOGOTYPE_IMAGE_INFO(Structure):
    dwLogotypeImageInfoChoice: win32more.Security.Cryptography.CERT_LOGOTYPE_IMAGE_INFO_TYPE
    dwFileSize: UInt32
    dwXSize: UInt32
    dwYSize: UInt32
    dwLogotypeImageResolutionChoice: win32more.Security.Cryptography.CERT_LOGOTYPE_CHOICE
    Anonymous: _Anonymous_e__Union
    pwszLanguage: win32more.Foundation.PWSTR
    class _Anonymous_e__Union(Union):
        dwNumBits: UInt32
        dwTableSize: UInt32
CERT_LOGOTYPE_IMAGE_INFO_TYPE = UInt32
CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE: CERT_LOGOTYPE_IMAGE_INFO_TYPE = 1
CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE: CERT_LOGOTYPE_IMAGE_INFO_TYPE = 2
class CERT_LOGOTYPE_INFO(Structure):
    dwLogotypeInfoChoice: win32more.Security.Cryptography.CERT_LOGOTYPE_OPTION
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        pLogotypeDirectInfo: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_DATA_head)
        pLogotypeIndirectInfo: POINTER(win32more.Security.Cryptography.CERT_LOGOTYPE_REFERENCE_head)
CERT_LOGOTYPE_OPTION = UInt32
CERT_LOGOTYPE_DIRECT_INFO_CHOICE: CERT_LOGOTYPE_OPTION = 1
CERT_LOGOTYPE_INDIRECT_INFO_CHOICE: CERT_LOGOTYPE_OPTION = 2
class CERT_LOGOTYPE_REFERENCE(Structure):
    cHashedUrl: UInt32
    rgHashedUrl: POINTER(win32more.Security.Cryptography.CERT_HASHED_URL_head)
class CERT_NAME_CONSTRAINTS_INFO(Structure):
    cPermittedSubtree: UInt32
    rgPermittedSubtree: POINTER(win32more.Security.Cryptography.CERT_GENERAL_SUBTREE_head)
    cExcludedSubtree: UInt32
    rgExcludedSubtree: POINTER(win32more.Security.Cryptography.CERT_GENERAL_SUBTREE_head)
class CERT_NAME_INFO(Structure):
    cRDN: UInt32
    rgRDN: POINTER(win32more.Security.Cryptography.CERT_RDN_head)
class CERT_NAME_VALUE(Structure):
    dwValueType: UInt32
    Value: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
CERT_OPEN_STORE_FLAGS = UInt32
CERT_STORE_BACKUP_RESTORE_FLAG: CERT_OPEN_STORE_FLAGS = 2048
CERT_STORE_CREATE_NEW_FLAG: CERT_OPEN_STORE_FLAGS = 8192
CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG: CERT_OPEN_STORE_FLAGS = 4
CERT_STORE_DELETE_FLAG: CERT_OPEN_STORE_FLAGS = 16
CERT_STORE_ENUM_ARCHIVED_FLAG: CERT_OPEN_STORE_FLAGS = 512
CERT_STORE_MAXIMUM_ALLOWED_FLAG: CERT_OPEN_STORE_FLAGS = 4096
CERT_STORE_NO_CRYPT_RELEASE_FLAG: CERT_OPEN_STORE_FLAGS = 1
CERT_STORE_OPEN_EXISTING_FLAG: CERT_OPEN_STORE_FLAGS = 16384
CERT_STORE_READONLY_FLAG: CERT_OPEN_STORE_FLAGS = 32768
CERT_STORE_SET_LOCALIZED_NAME_FLAG: CERT_OPEN_STORE_FLAGS = 2
CERT_STORE_SHARE_CONTEXT_FLAG: CERT_OPEN_STORE_FLAGS = 128
CERT_STORE_UPDATE_KEYID_FLAG: CERT_OPEN_STORE_FLAGS = 1024
class CERT_OR_CRL_BLOB(Structure):
    dwChoice: UInt32
    cbEncoded: UInt32
    pbEncoded: c_char_p_no
class CERT_OR_CRL_BUNDLE(Structure):
    cItem: UInt32
    rgItem: POINTER(win32more.Security.Cryptography.CERT_OR_CRL_BLOB_head)
class CERT_OTHER_LOGOTYPE_INFO(Structure):
    pszObjId: win32more.Foundation.PSTR
    LogotypeInfo: win32more.Security.Cryptography.CERT_LOGOTYPE_INFO
class CERT_OTHER_NAME(Structure):
    pszObjId: win32more.Foundation.PSTR
    Value: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_PAIR(Structure):
    Forward: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    Reverse: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_PHYSICAL_STORE_INFO(Structure):
    cbSize: UInt32
    pszOpenStoreProvider: win32more.Foundation.PSTR
    dwOpenEncodingType: UInt32
    dwOpenFlags: UInt32
    OpenParameters: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwFlags: UInt32
    dwPriority: UInt32
class CERT_POLICIES_INFO(Structure):
    cPolicyInfo: UInt32
    rgPolicyInfo: POINTER(win32more.Security.Cryptography.CERT_POLICY_INFO_head)
class CERT_POLICY_CONSTRAINTS_INFO(Structure):
    fRequireExplicitPolicy: win32more.Foundation.BOOL
    dwRequireExplicitPolicySkipCerts: UInt32
    fInhibitPolicyMapping: win32more.Foundation.BOOL
    dwInhibitPolicyMappingSkipCerts: UInt32
class CERT_POLICY_ID(Structure):
    cCertPolicyElementId: UInt32
    rgpszCertPolicyElementId: POINTER(win32more.Foundation.PSTR)
class CERT_POLICY_INFO(Structure):
    pszPolicyIdentifier: win32more.Foundation.PSTR
    cPolicyQualifier: UInt32
    rgPolicyQualifier: POINTER(win32more.Security.Cryptography.CERT_POLICY_QUALIFIER_INFO_head)
class CERT_POLICY_MAPPING(Structure):
    pszIssuerDomainPolicy: win32more.Foundation.PSTR
    pszSubjectDomainPolicy: win32more.Foundation.PSTR
class CERT_POLICY_MAPPINGS_INFO(Structure):
    cPolicyMapping: UInt32
    rgPolicyMapping: POINTER(win32more.Security.Cryptography.CERT_POLICY_MAPPING_head)
class CERT_POLICY_QUALIFIER_INFO(Structure):
    pszPolicyQualifierId: win32more.Foundation.PSTR
    Qualifier: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_POLICY_QUALIFIER_NOTICE_REFERENCE(Structure):
    pszOrganization: win32more.Foundation.PSTR
    cNoticeNumbers: UInt32
    rgNoticeNumbers: POINTER(Int32)
class CERT_POLICY_QUALIFIER_USER_NOTICE(Structure):
    pNoticeReference: POINTER(win32more.Security.Cryptography.CERT_POLICY_QUALIFIER_NOTICE_REFERENCE_head)
    pszDisplayText: win32more.Foundation.PWSTR
class CERT_POLICY95_QUALIFIER1(Structure):
    pszPracticesReference: win32more.Foundation.PWSTR
    pszNoticeIdentifier: win32more.Foundation.PSTR
    pszNSINoticeIdentifier: win32more.Foundation.PSTR
    cCPSURLs: UInt32
    rgCPSURLs: POINTER(win32more.Security.Cryptography.CPS_URLS_head)
class CERT_PRIVATE_KEY_VALIDITY(Structure):
    NotBefore: win32more.Foundation.FILETIME
    NotAfter: win32more.Foundation.FILETIME
class CERT_PUBLIC_KEY_INFO(Structure):
    Algorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    PublicKey: win32more.Security.Cryptography.CRYPT_BIT_BLOB
class CERT_QC_STATEMENT(Structure):
    pszStatementId: win32more.Foundation.PSTR
    StatementInfo: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CERT_QC_STATEMENTS_EXT_INFO(Structure):
    cStatement: UInt32
    rgStatement: POINTER(win32more.Security.Cryptography.CERT_QC_STATEMENT_head)
CERT_QUERY_CONTENT_TYPE = UInt32
CERT_QUERY_CONTENT_CERT: CERT_QUERY_CONTENT_TYPE = 1
CERT_QUERY_CONTENT_CTL: CERT_QUERY_CONTENT_TYPE = 2
CERT_QUERY_CONTENT_CRL: CERT_QUERY_CONTENT_TYPE = 3
CERT_QUERY_CONTENT_SERIALIZED_STORE: CERT_QUERY_CONTENT_TYPE = 4
CERT_QUERY_CONTENT_SERIALIZED_CERT: CERT_QUERY_CONTENT_TYPE = 5
CERT_QUERY_CONTENT_SERIALIZED_CTL: CERT_QUERY_CONTENT_TYPE = 6
CERT_QUERY_CONTENT_SERIALIZED_CRL: CERT_QUERY_CONTENT_TYPE = 7
CERT_QUERY_CONTENT_PKCS7_SIGNED: CERT_QUERY_CONTENT_TYPE = 8
CERT_QUERY_CONTENT_PKCS7_UNSIGNED: CERT_QUERY_CONTENT_TYPE = 9
CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED: CERT_QUERY_CONTENT_TYPE = 10
CERT_QUERY_CONTENT_PKCS10: CERT_QUERY_CONTENT_TYPE = 11
CERT_QUERY_CONTENT_PFX: CERT_QUERY_CONTENT_TYPE = 12
CERT_QUERY_CONTENT_CERT_PAIR: CERT_QUERY_CONTENT_TYPE = 13
CERT_QUERY_CONTENT_PFX_AND_LOAD: CERT_QUERY_CONTENT_TYPE = 14
CERT_QUERY_CONTENT_TYPE_FLAGS = UInt32
CERT_QUERY_CONTENT_FLAG_CERT: CERT_QUERY_CONTENT_TYPE_FLAGS = 2
CERT_QUERY_CONTENT_FLAG_CTL: CERT_QUERY_CONTENT_TYPE_FLAGS = 4
CERT_QUERY_CONTENT_FLAG_CRL: CERT_QUERY_CONTENT_TYPE_FLAGS = 8
CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE: CERT_QUERY_CONTENT_TYPE_FLAGS = 16
CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT: CERT_QUERY_CONTENT_TYPE_FLAGS = 32
CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL: CERT_QUERY_CONTENT_TYPE_FLAGS = 64
CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL: CERT_QUERY_CONTENT_TYPE_FLAGS = 128
CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED: CERT_QUERY_CONTENT_TYPE_FLAGS = 256
CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED: CERT_QUERY_CONTENT_TYPE_FLAGS = 512
CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED: CERT_QUERY_CONTENT_TYPE_FLAGS = 1024
CERT_QUERY_CONTENT_FLAG_PKCS10: CERT_QUERY_CONTENT_TYPE_FLAGS = 2048
CERT_QUERY_CONTENT_FLAG_PFX: CERT_QUERY_CONTENT_TYPE_FLAGS = 4096
CERT_QUERY_CONTENT_FLAG_CERT_PAIR: CERT_QUERY_CONTENT_TYPE_FLAGS = 8192
CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD: CERT_QUERY_CONTENT_TYPE_FLAGS = 16384
CERT_QUERY_CONTENT_FLAG_ALL: CERT_QUERY_CONTENT_TYPE_FLAGS = 16382
CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT: CERT_QUERY_CONTENT_TYPE_FLAGS = 818
CERT_QUERY_ENCODING_TYPE = UInt32
X509_ASN_ENCODING: CERT_QUERY_ENCODING_TYPE = 1
PKCS_7_ASN_ENCODING: CERT_QUERY_ENCODING_TYPE = 65536
CERT_QUERY_FORMAT_TYPE = UInt32
CERT_QUERY_FORMAT_BINARY: CERT_QUERY_FORMAT_TYPE = 1
CERT_QUERY_FORMAT_BASE64_ENCODED: CERT_QUERY_FORMAT_TYPE = 2
CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED: CERT_QUERY_FORMAT_TYPE = 3
CERT_QUERY_FORMAT_TYPE_FLAGS = UInt32
CERT_QUERY_FORMAT_FLAG_BINARY: CERT_QUERY_FORMAT_TYPE_FLAGS = 2
CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED: CERT_QUERY_FORMAT_TYPE_FLAGS = 4
CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED: CERT_QUERY_FORMAT_TYPE_FLAGS = 8
CERT_QUERY_FORMAT_FLAG_ALL: CERT_QUERY_FORMAT_TYPE_FLAGS = 14
CERT_QUERY_OBJECT_TYPE = UInt32
CERT_QUERY_OBJECT_FILE: CERT_QUERY_OBJECT_TYPE = 1
CERT_QUERY_OBJECT_BLOB: CERT_QUERY_OBJECT_TYPE = 2
class CERT_RDN(Structure):
    cRDNAttr: UInt32
    rgRDNAttr: POINTER(win32more.Security.Cryptography.CERT_RDN_ATTR_head)
class CERT_RDN_ATTR(Structure):
    pszObjId: win32more.Foundation.PSTR
    dwValueType: win32more.Security.Cryptography.CERT_RDN_ATTR_VALUE_TYPE
    Value: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
CERT_RDN_ATTR_VALUE_TYPE = UInt32
CERT_RDN_ANY_TYPE: CERT_RDN_ATTR_VALUE_TYPE = 0
CERT_RDN_NUMERIC_STRING: CERT_RDN_ATTR_VALUE_TYPE = 3
CERT_RDN_PRINTABLE_STRING: CERT_RDN_ATTR_VALUE_TYPE = 4
CERT_RDN_T61_STRING: CERT_RDN_ATTR_VALUE_TYPE = 5
CERT_RDN_VIDEOTEX_STRING: CERT_RDN_ATTR_VALUE_TYPE = 6
CERT_RDN_IA5_STRING: CERT_RDN_ATTR_VALUE_TYPE = 7
CERT_RDN_GRAPHIC_STRING: CERT_RDN_ATTR_VALUE_TYPE = 8
CERT_RDN_ISO646_STRING: CERT_RDN_ATTR_VALUE_TYPE = 9
CERT_RDN_GENERAL_STRING: CERT_RDN_ATTR_VALUE_TYPE = 10
CERT_RDN_INT4_STRING: CERT_RDN_ATTR_VALUE_TYPE = 11
CERT_RDN_UNICODE_STRING: CERT_RDN_ATTR_VALUE_TYPE = 12
CERT_RDN_BMP_STRING: CERT_RDN_ATTR_VALUE_TYPE = 12
CERT_RDN_ENCODED_BLOB: CERT_RDN_ATTR_VALUE_TYPE = 1
CERT_RDN_OCTET_STRING: CERT_RDN_ATTR_VALUE_TYPE = 2
CERT_RDN_TELETEX_STRING: CERT_RDN_ATTR_VALUE_TYPE = 5
CERT_RDN_UNIVERSAL_STRING: CERT_RDN_ATTR_VALUE_TYPE = 11
CERT_RDN_UTF8_STRING: CERT_RDN_ATTR_VALUE_TYPE = 13
CERT_RDN_VISIBLE_STRING: CERT_RDN_ATTR_VALUE_TYPE = 9
class CERT_REGISTRY_STORE_CLIENT_GPT_PARA(Structure):
    hKeyBase: win32more.System.Registry.HKEY
    pwszRegPath: win32more.Foundation.PWSTR
class CERT_REGISTRY_STORE_ROAMING_PARA(Structure):
    hKey: win32more.System.Registry.HKEY
    pwszStoreDirectory: win32more.Foundation.PWSTR
class CERT_REQUEST_INFO(Structure):
    dwVersion: UInt32
    Subject: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SubjectPublicKeyInfo: win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
class CERT_REVOCATION_CHAIN_PARA(Structure):
    cbSize: UInt32
    hChainEngine: win32more.Security.Cryptography.HCERTCHAINENGINE
    hAdditionalStore: win32more.Security.Cryptography.HCERTSTORE
    dwChainFlags: UInt32
    dwUrlRetrievalTimeout: UInt32
    pftCurrentTime: POINTER(win32more.Foundation.FILETIME_head)
    pftCacheResync: POINTER(win32more.Foundation.FILETIME_head)
    cbMaxUrlRetrievalByteCount: UInt32
class CERT_REVOCATION_CRL_INFO(Structure):
    cbSize: UInt32
    pBaseCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)
    pDeltaCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)
    pCrlEntry: POINTER(win32more.Security.Cryptography.CRL_ENTRY_head)
    fDeltaCrlEntry: win32more.Foundation.BOOL
class CERT_REVOCATION_INFO(Structure):
    cbSize: UInt32
    dwRevocationResult: UInt32
    pszRevocationOid: win32more.Foundation.PSTR
    pvOidSpecificInfo: c_void_p
    fHasFreshnessTime: win32more.Foundation.BOOL
    dwFreshnessTime: UInt32
    pCrlInfo: POINTER(win32more.Security.Cryptography.CERT_REVOCATION_CRL_INFO_head)
class CERT_REVOCATION_PARA(Structure):
    cbSize: UInt32
    pIssuerCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)
    cCertStore: UInt32
    rgCertStore: POINTER(win32more.Security.Cryptography.HCERTSTORE)
    hCrlStore: win32more.Security.Cryptography.HCERTSTORE
    pftTimeToUse: POINTER(win32more.Foundation.FILETIME_head)
class CERT_REVOCATION_STATUS(Structure):
    cbSize: UInt32
    dwIndex: UInt32
    dwError: UInt32
    dwReason: win32more.Security.Cryptography.CERT_REVOCATION_STATUS_REASON
    fHasFreshnessTime: win32more.Foundation.BOOL
    dwFreshnessTime: UInt32
CERT_REVOCATION_STATUS_REASON = UInt32
CRL_REASON_UNSPECIFIED: CERT_REVOCATION_STATUS_REASON = 0
CRL_REASON_KEY_COMPROMISE: CERT_REVOCATION_STATUS_REASON = 1
CRL_REASON_CA_COMPROMISE: CERT_REVOCATION_STATUS_REASON = 2
CRL_REASON_AFFILIATION_CHANGED: CERT_REVOCATION_STATUS_REASON = 3
CRL_REASON_SUPERSEDED: CERT_REVOCATION_STATUS_REASON = 4
CRL_REASON_CESSATION_OF_OPERATION: CERT_REVOCATION_STATUS_REASON = 5
CRL_REASON_CERTIFICATE_HOLD: CERT_REVOCATION_STATUS_REASON = 6
CRL_REASON_REMOVE_FROM_CRL: CERT_REVOCATION_STATUS_REASON = 8
CERT_ROOT_PROGRAM_FLAGS = UInt32
CERT_ROOT_PROGRAM_FLAG_LSC: CERT_ROOT_PROGRAM_FLAGS = 64
CERT_ROOT_PROGRAM_FLAG_ORG: CERT_ROOT_PROGRAM_FLAGS = 128
CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO: CERT_ROOT_PROGRAM_FLAGS = 32
class CERT_SELECT_CHAIN_PARA(Structure):
    hChainEngine: win32more.Security.Cryptography.HCERTCHAINENGINE
    pTime: POINTER(win32more.Foundation.FILETIME_head)
    hAdditionalStore: win32more.Security.Cryptography.HCERTSTORE
    pChainPara: POINTER(win32more.Security.Cryptography.CERT_CHAIN_PARA_head)
    dwFlags: UInt32
class CERT_SELECT_CRITERIA(Structure):
    dwType: win32more.Security.Cryptography.CERT_SELECT_CRITERIA_TYPE
    cPara: UInt32
    ppPara: POINTER(c_void_p)
CERT_SELECT_CRITERIA_TYPE = UInt32
CERT_SELECT_BY_ENHKEY_USAGE: CERT_SELECT_CRITERIA_TYPE = 1
CERT_SELECT_BY_KEY_USAGE: CERT_SELECT_CRITERIA_TYPE = 2
CERT_SELECT_BY_POLICY_OID: CERT_SELECT_CRITERIA_TYPE = 3
CERT_SELECT_BY_PROV_NAME: CERT_SELECT_CRITERIA_TYPE = 4
CERT_SELECT_BY_EXTENSION: CERT_SELECT_CRITERIA_TYPE = 5
CERT_SELECT_BY_SUBJECT_HOST_NAME: CERT_SELECT_CRITERIA_TYPE = 6
CERT_SELECT_BY_ISSUER_ATTR: CERT_SELECT_CRITERIA_TYPE = 7
CERT_SELECT_BY_SUBJECT_ATTR: CERT_SELECT_CRITERIA_TYPE = 8
CERT_SELECT_BY_ISSUER_NAME: CERT_SELECT_CRITERIA_TYPE = 9
CERT_SELECT_BY_PUBLIC_KEY: CERT_SELECT_CRITERIA_TYPE = 10
CERT_SELECT_BY_TLS_SIGNATURES: CERT_SELECT_CRITERIA_TYPE = 11
class CERT_SERVER_OCSP_RESPONSE_CONTEXT(Structure):
    cbSize: UInt32
    pbEncodedOcspResponse: c_char_p_no
    cbEncodedOcspResponse: UInt32
class CERT_SERVER_OCSP_RESPONSE_OPEN_PARA(Structure):
    cbSize: UInt32
    dwFlags: UInt32
    pcbUsedSize: POINTER(UInt32)
    pwszOcspDirectory: win32more.Foundation.PWSTR
    pfnUpdateCallback: win32more.Security.Cryptography.PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK
    pvUpdateCallbackArg: c_void_p
class CERT_SIGNED_CONTENT_INFO(Structure):
    ToBeSigned: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SignatureAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Signature: win32more.Security.Cryptography.CRYPT_BIT_BLOB
class CERT_SIMPLE_CHAIN(Structure):
    cbSize: UInt32
    TrustStatus: win32more.Security.Cryptography.CERT_TRUST_STATUS
    cElement: UInt32
    rgpElement: POINTER(POINTER(win32more.Security.Cryptography.CERT_CHAIN_ELEMENT_head))
    pTrustListInfo: POINTER(win32more.Security.Cryptography.CERT_TRUST_LIST_INFO_head)
    fHasRevocationFreshnessTime: win32more.Foundation.BOOL
    dwRevocationFreshnessTime: UInt32
class CERT_STORE_PROV_FIND_INFO(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: UInt32
    dwFindFlags: UInt32
    dwFindType: UInt32
    pvFindPara: c_void_p
CERT_STORE_PROV_FLAGS = UInt32
CERT_STORE_PROV_EXTERNAL_FLAG: CERT_STORE_PROV_FLAGS = 1
CERT_STORE_PROV_DELETED_FLAG: CERT_STORE_PROV_FLAGS = 2
CERT_STORE_PROV_NO_PERSIST_FLAG: CERT_STORE_PROV_FLAGS = 4
CERT_STORE_PROV_SYSTEM_STORE_FLAG: CERT_STORE_PROV_FLAGS = 8
CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG: CERT_STORE_PROV_FLAGS = 16
class CERT_STORE_PROV_INFO(Structure):
    cbSize: UInt32
    cStoreProvFunc: UInt32
    rgpvStoreProvFunc: POINTER(c_void_p)
    hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV
    dwStoreProvFlags: win32more.Security.Cryptography.CERT_STORE_PROV_FLAGS
    hStoreProvFuncAddr2: c_void_p
CERT_STORE_SAVE_AS = UInt32
CERT_STORE_SAVE_AS_PKCS7: CERT_STORE_SAVE_AS = 2
CERT_STORE_SAVE_AS_STORE: CERT_STORE_SAVE_AS = 1
CERT_STORE_SAVE_TO = UInt32
CERT_STORE_SAVE_TO_FILE: CERT_STORE_SAVE_TO = 1
CERT_STORE_SAVE_TO_FILENAME: CERT_STORE_SAVE_TO = 4
CERT_STORE_SAVE_TO_FILENAME_A: CERT_STORE_SAVE_TO = 3
CERT_STORE_SAVE_TO_FILENAME_W: CERT_STORE_SAVE_TO = 4
CERT_STORE_SAVE_TO_MEMORY: CERT_STORE_SAVE_TO = 2
CERT_STRING_TYPE = UInt32
CERT_SIMPLE_NAME_STR: CERT_STRING_TYPE = 1
CERT_OID_NAME_STR: CERT_STRING_TYPE = 2
CERT_X500_NAME_STR: CERT_STRING_TYPE = 3
CERT_STRONG_SIGN_FLAGS = UInt32
CERT_STRONG_SIGN_ENABLE_CRL_CHECK: CERT_STRONG_SIGN_FLAGS = 1
CERT_STRONG_SIGN_ENABLE_OCSP_CHECK: CERT_STRONG_SIGN_FLAGS = 2
class CERT_STRONG_SIGN_PARA(Structure):
    cbSize: UInt32
    dwInfoChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        pvInfo: c_void_p
        pSerializedInfo: POINTER(win32more.Security.Cryptography.CERT_STRONG_SIGN_SERIALIZED_INFO_head)
        pszOID: win32more.Foundation.PSTR
class CERT_STRONG_SIGN_SERIALIZED_INFO(Structure):
    dwFlags: win32more.Security.Cryptography.CERT_STRONG_SIGN_FLAGS
    pwszCNGSignHashAlgids: win32more.Foundation.PWSTR
    pwszCNGPubKeyMinBitLengths: win32more.Foundation.PWSTR
class CERT_SUPPORTED_ALGORITHM_INFO(Structure):
    Algorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    IntendedKeyUsage: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    IntendedCertPolicies: win32more.Security.Cryptography.CERT_POLICIES_INFO
CERT_SYSTEM_STORE_FLAGS = UInt32
CERT_SYSTEM_STORE_LOCATION_MASK: CERT_SYSTEM_STORE_FLAGS = 16711680
CERT_SYSTEM_STORE_RELOCATE_FLAG: CERT_SYSTEM_STORE_FLAGS = 2147483648
class CERT_SYSTEM_STORE_INFO(Structure):
    cbSize: UInt32
class CERT_SYSTEM_STORE_RELOCATE_PARA(Structure):
    Anonymous1: _Anonymous1_e__Union
    Anonymous2: _Anonymous2_e__Union
    class _Anonymous1_e__Union(Union):
        hKeyBase: win32more.System.Registry.HKEY
        pvBase: c_void_p
    class _Anonymous2_e__Union(Union):
        pvSystemStore: c_void_p
        pszSystemStore: win32more.Foundation.PSTR
        pwszSystemStore: win32more.Foundation.PWSTR
class CERT_TEMPLATE_EXT(Structure):
    pszObjId: win32more.Foundation.PSTR
    dwMajorVersion: UInt32
    fMinorVersion: win32more.Foundation.BOOL
    dwMinorVersion: UInt32
class CERT_TPM_SPECIFICATION_INFO(Structure):
    pwszFamily: win32more.Foundation.PWSTR
    dwLevel: UInt32
    dwRevision: UInt32
class CERT_TRUST_LIST_INFO(Structure):
    cbSize: UInt32
    pCtlEntry: POINTER(win32more.Security.Cryptography.CTL_ENTRY_head)
    pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head)
class CERT_TRUST_STATUS(Structure):
    dwErrorStatus: UInt32
    dwInfoStatus: UInt32
class CERT_USAGE_MATCH(Structure):
    dwType: UInt32
    Usage: win32more.Security.Cryptography.CTL_USAGE
class CERT_X942_DH_PARAMETERS(Structure):
    p: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    g: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    q: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    j: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pValidationParams: POINTER(win32more.Security.Cryptography.CERT_X942_DH_VALIDATION_PARAMS_head)
class CERT_X942_DH_VALIDATION_PARAMS(Structure):
    seed: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    pgenCounter: UInt32
class CERTIFICATE_CHAIN_BLOB(Structure):
    certCount: UInt32
    rawCertificates: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
CertKeyType = UInt32
CertKeyType_KeyTypeOther: CertKeyType = 0
CertKeyType_KeyTypeVirtualSmartCard: CertKeyType = 1
CertKeyType_KeyTypePhysicalSmartCard: CertKeyType = 2
CertKeyType_KeyTypePassport: CertKeyType = 3
CertKeyType_KeyTypePassportRemote: CertKeyType = 4
CertKeyType_KeyTypePassportSmartCard: CertKeyType = 5
CertKeyType_KeyTypeHardware: CertKeyType = 6
CertKeyType_KeyTypeSoftware: CertKeyType = 7
CertKeyType_KeyTypeSelfSigned: CertKeyType = 8
CESSetupProperty = Int32
ENUM_CESSETUPPROP_USE_IISAPPPOOLIDENTITY: CESSetupProperty = 0
ENUM_CESSETUPPROP_CACONFIG: CESSetupProperty = 1
ENUM_CESSETUPPROP_AUTHENTICATION: CESSetupProperty = 2
ENUM_CESSETUPPROP_SSLCERTHASH: CESSetupProperty = 3
ENUM_CESSETUPPROP_URL: CESSetupProperty = 4
ENUM_CESSETUPPROP_RENEWALONLY: CESSetupProperty = 5
ENUM_CESSETUPPROP_ALLOW_KEYBASED_RENEWAL: CESSetupProperty = 6
class CLAIMLIST(Structure):
    count: UInt32
    claims: POINTER(win32more.Foundation.PWSTR)
class CMC_ADD_ATTRIBUTES_INFO(Structure):
    dwCmcDataReference: UInt32
    cCertReference: UInt32
    rgdwCertReference: POINTER(UInt32)
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
class CMC_ADD_EXTENSIONS_INFO(Structure):
    dwCmcDataReference: UInt32
    cCertReference: UInt32
    rgdwCertReference: POINTER(UInt32)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CMC_DATA_INFO(Structure):
    cTaggedAttribute: UInt32
    rgTaggedAttribute: POINTER(win32more.Security.Cryptography.CMC_TAGGED_ATTRIBUTE_head)
    cTaggedRequest: UInt32
    rgTaggedRequest: POINTER(win32more.Security.Cryptography.CMC_TAGGED_REQUEST_head)
    cTaggedContentInfo: UInt32
    rgTaggedContentInfo: POINTER(win32more.Security.Cryptography.CMC_TAGGED_CONTENT_INFO_head)
    cTaggedOtherMsg: UInt32
    rgTaggedOtherMsg: POINTER(win32more.Security.Cryptography.CMC_TAGGED_OTHER_MSG_head)
class CMC_PEND_INFO(Structure):
    PendToken: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    PendTime: win32more.Foundation.FILETIME
class CMC_RESPONSE_INFO(Structure):
    cTaggedAttribute: UInt32
    rgTaggedAttribute: POINTER(win32more.Security.Cryptography.CMC_TAGGED_ATTRIBUTE_head)
    cTaggedContentInfo: UInt32
    rgTaggedContentInfo: POINTER(win32more.Security.Cryptography.CMC_TAGGED_CONTENT_INFO_head)
    cTaggedOtherMsg: UInt32
    rgTaggedOtherMsg: POINTER(win32more.Security.Cryptography.CMC_TAGGED_OTHER_MSG_head)
class CMC_STATUS_INFO(Structure):
    dwStatus: UInt32
    cBodyList: UInt32
    rgdwBodyList: POINTER(UInt32)
    pwszStatusString: win32more.Foundation.PWSTR
    dwOtherInfoChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        dwFailInfo: UInt32
        pPendInfo: POINTER(win32more.Security.Cryptography.CMC_PEND_INFO_head)
class CMC_TAGGED_ATTRIBUTE(Structure):
    dwBodyPartID: UInt32
    Attribute: win32more.Security.Cryptography.CRYPT_ATTRIBUTE
class CMC_TAGGED_CERT_REQUEST(Structure):
    dwBodyPartID: UInt32
    SignedCertRequest: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMC_TAGGED_CONTENT_INFO(Structure):
    dwBodyPartID: UInt32
    EncodedContentInfo: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMC_TAGGED_OTHER_MSG(Structure):
    dwBodyPartID: UInt32
    pszObjId: win32more.Foundation.PSTR
    Value: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMC_TAGGED_REQUEST(Structure):
    dwTaggedRequestChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        pTaggedCertRequest: POINTER(win32more.Security.Cryptography.CMC_TAGGED_CERT_REQUEST_head)
class CMS_DH_KEY_INFO(Structure):
    dwVersion: UInt32
    Algid: UInt32
    pszContentEncObjId: win32more.Foundation.PSTR
    PubInfo: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pReserved: c_void_p
class CMS_KEY_INFO(Structure):
    dwVersion: UInt32
    Algid: UInt32
    pbOID: c_char_p_no
    cbOID: UInt32
CMSCEPSetup = Guid('aa4f5c02-8e7c-49c4-94-fa-67-a5-cc-5e-ad-b4')
class CMSG_CMS_RECIPIENT_INFO(Structure):
    dwRecipientChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        pKeyTrans: POINTER(win32more.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_INFO_head)
        pKeyAgree: POINTER(win32more.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_INFO_head)
        pMailList: POINTER(win32more.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_INFO_head)
class CMSG_CMS_SIGNER_INFO(Structure):
    dwVersion: UInt32
    SignerId: win32more.Security.Cryptography.CERT_ID
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedHash: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    AuthAttrs: win32more.Security.Cryptography.CRYPT_ATTRIBUTES
    UnauthAttrs: win32more.Security.Cryptography.CRYPT_ATTRIBUTES
class CMSG_CNG_CONTENT_DECRYPT_INFO(Structure):
    cbSize: UInt32
    ContentEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pfnAlloc: win32more.Security.Cryptography.PFN_CMSG_ALLOC
    pfnFree: win32more.Security.Cryptography.PFN_CMSG_FREE
    hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE
    pbContentEncryptKey: c_char_p_no
    cbContentEncryptKey: UInt32
    hCNGContentEncryptKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE
    pbCNGContentEncryptKeyObject: c_char_p_no
class CMSG_CONTENT_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    ContentEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: c_void_p
    cRecipients: UInt32
    rgCmsRecipients: POINTER(win32more.Security.Cryptography.CMSG_RECIPIENT_ENCODE_INFO_head)
    pfnAlloc: win32more.Security.Cryptography.PFN_CMSG_ALLOC
    pfnFree: win32more.Security.Cryptography.PFN_CMSG_FREE
    dwEncryptFlags: UInt32
    Anonymous: _Anonymous_e__Union
    dwFlags: UInt32
    fCNG: win32more.Foundation.BOOL
    pbCNGContentEncryptKeyObject: c_char_p_no
    pbContentEncryptKey: c_char_p_no
    cbContentEncryptKey: UInt32
    class _Anonymous_e__Union(Union):
        hContentEncryptKey: UIntPtr
        hCNGContentEncryptKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE
class CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA(Structure):
    cbSize: UInt32
    dwSignerIndex: UInt32
    blob: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMSG_CTRL_DECRYPT_PARA(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    dwRecipientIndex: UInt32
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA(Structure):
    cbSize: UInt32
    dwSignerIndex: UInt32
    dwUnauthAttrIndex: UInt32
class CMSG_CTRL_KEY_AGREE_DECRYPT_PARA(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    pKeyAgree: POINTER(win32more.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_INFO_head)
    dwRecipientIndex: UInt32
    dwRecipientEncryptedKeyIndex: UInt32
    OriginatorPublicKey: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_CTRL_KEY_TRANS_DECRYPT_PARA(Structure):
    cbSize: UInt32
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    pKeyTrans: POINTER(win32more.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_INFO_head)
    dwRecipientIndex: UInt32
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_CTRL_MAIL_LIST_DECRYPT_PARA(Structure):
    cbSize: UInt32
    hCryptProv: UIntPtr
    pMailList: POINTER(win32more.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_INFO_head)
    dwRecipientIndex: UInt32
    dwKeyChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        hKeyEncryptionKey: UIntPtr
        pvKeyEncryptionKey: c_void_p
class CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    dwSignerIndex: UInt32
    dwSignerType: UInt32
    pvSigner: c_void_p
class CMSG_ENCRYPTED_ENCODE_INFO(Structure):
    cbSize: UInt32
    ContentEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: c_void_p
class CMSG_ENVELOPED_ENCODE_INFO(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    ContentEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: c_void_p
    cRecipients: UInt32
    rgpRecipients: POINTER(POINTER(win32more.Security.Cryptography.CERT_INFO_head))
class CMSG_HASHED_ENCODE_INFO(Structure):
    cbSize: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: c_void_p
class CMSG_KEY_AGREE_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    dwRecipientIndex: UInt32
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    UserKeyingMaterial: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwOriginatorChoice: win32more.Security.Cryptography.CMSG_KEY_AGREE_ORIGINATOR
    Anonymous: _Anonymous_e__Union
    cKeyAgreeKeyEncryptInfo: UInt32
    rgpKeyAgreeKeyEncryptInfo: POINTER(POINTER(win32more.Security.Cryptography.CMSG_KEY_AGREE_KEY_ENCRYPT_INFO_head))
    dwFlags: UInt32
    class _Anonymous_e__Union(Union):
        OriginatorCertId: win32more.Security.Cryptography.CERT_ID
        OriginatorPublicKeyInfo: win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO
class CMSG_KEY_AGREE_KEY_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    EncryptedKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
CMSG_KEY_AGREE_OPTION = UInt32
CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE: CMSG_KEY_AGREE_OPTION = 1
CMSG_KEY_AGREE_STATIC_KEY_CHOICE: CMSG_KEY_AGREE_OPTION = 2
CMSG_KEY_AGREE_ORIGINATOR = UInt32
CMSG_KEY_AGREE_ORIGINATOR_CERT: CMSG_KEY_AGREE_ORIGINATOR = 1
CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY: CMSG_KEY_AGREE_ORIGINATOR = 2
class CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO(Structure):
    cbSize: UInt32
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyEncryptionAuxInfo: c_void_p
    KeyWrapAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyWrapAuxInfo: c_void_p
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    dwKeySpec: UInt32
    dwKeyChoice: win32more.Security.Cryptography.CMSG_KEY_AGREE_OPTION
    Anonymous: _Anonymous_e__Union
    UserKeyingMaterial: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    cRecipientEncryptedKeys: UInt32
    rgpRecipientEncryptedKeys: POINTER(POINTER(win32more.Security.Cryptography.CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO_head))
    class _Anonymous_e__Union(Union):
        pEphemeralAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head)
        pSenderId: POINTER(win32more.Security.Cryptography.CERT_ID_head)
class CMSG_KEY_AGREE_RECIPIENT_INFO(Structure):
    dwVersion: UInt32
    dwOriginatorChoice: win32more.Security.Cryptography.CMSG_KEY_AGREE_ORIGINATOR
    Anonymous: _Anonymous_e__Union
    UserKeyingMaterial: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    cRecipientEncryptedKeys: UInt32
    rgpRecipientEncryptedKeys: POINTER(POINTER(win32more.Security.Cryptography.CMSG_RECIPIENT_ENCRYPTED_KEY_INFO_head))
    class _Anonymous_e__Union(Union):
        OriginatorCertId: win32more.Security.Cryptography.CERT_ID
        OriginatorPublicKeyInfo: win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO
class CMSG_KEY_TRANS_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    dwRecipientIndex: UInt32
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwFlags: UInt32
class CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO(Structure):
    cbSize: UInt32
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyEncryptionAuxInfo: c_void_p
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    RecipientPublicKey: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    RecipientId: win32more.Security.Cryptography.CERT_ID
class CMSG_KEY_TRANS_RECIPIENT_INFO(Structure):
    dwVersion: UInt32
    RecipientId: win32more.Security.Cryptography.CERT_ID
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CMSG_MAIL_LIST_ENCRYPT_INFO(Structure):
    cbSize: UInt32
    dwRecipientIndex: UInt32
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    dwFlags: UInt32
class CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO(Structure):
    cbSize: UInt32
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvKeyEncryptionAuxInfo: c_void_p
    hCryptProv: UIntPtr
    dwKeyChoice: UInt32
    Anonymous: _Anonymous_e__Union
    KeyId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    Date: win32more.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE_head)
    class _Anonymous_e__Union(Union):
        hKeyEncryptionKey: UIntPtr
        pvKeyEncryptionKey: c_void_p
class CMSG_MAIL_LIST_RECIPIENT_INFO(Structure):
    dwVersion: UInt32
    KeyId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    KeyEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    Date: win32more.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE_head)
class CMSG_RC2_AUX_INFO(Structure):
    cbSize: UInt32
    dwBitLen: UInt32
class CMSG_RC4_AUX_INFO(Structure):
    cbSize: UInt32
    dwBitLen: UInt32
class CMSG_RECIPIENT_ENCODE_INFO(Structure):
    dwRecipientChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        pKeyTrans: POINTER(win32more.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO_head)
        pKeyAgree: POINTER(win32more.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO_head)
        pMailList: POINTER(win32more.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO_head)
class CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO(Structure):
    cbSize: UInt32
    RecipientPublicKey: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    RecipientId: win32more.Security.Cryptography.CERT_ID
    Date: win32more.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE_head)
class CMSG_RECIPIENT_ENCRYPTED_KEY_INFO(Structure):
    RecipientId: win32more.Security.Cryptography.CERT_ID
    EncryptedKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    Date: win32more.Foundation.FILETIME
    pOtherAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE_head)
class CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO(Structure):
    cbSize: UInt32
    SignedInfo: win32more.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO
    EnvelopedInfo: win32more.Security.Cryptography.CMSG_ENVELOPED_ENCODE_INFO
class CMSG_SIGNED_ENCODE_INFO(Structure):
    cbSize: UInt32
    cSigners: UInt32
    rgSigners: POINTER(win32more.Security.Cryptography.CMSG_SIGNER_ENCODE_INFO_head)
    cCertEncoded: UInt32
    rgCertEncoded: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
    cCrlEncoded: UInt32
    rgCrlEncoded: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
class CMSG_SIGNER_ENCODE_INFO(Structure):
    cbSize: UInt32
    pCertInfo: POINTER(win32more.Security.Cryptography.CERT_INFO_head)
    Anonymous: _Anonymous_e__Union
    dwKeySpec: UInt32
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: c_void_p
    cAuthAttr: UInt32
    rgAuthAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
    cUnauthAttr: UInt32
    rgUnauthAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE
class CMSG_SIGNER_INFO(Structure):
    dwVersion: UInt32
    Issuer: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedHash: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    AuthAttrs: win32more.Security.Cryptography.CRYPT_ATTRIBUTES
    UnauthAttrs: win32more.Security.Cryptography.CRYPT_ATTRIBUTES
class CMSG_SP3_COMPATIBLE_AUX_INFO(Structure):
    cbSize: UInt32
    dwFlags: UInt32
class CMSG_STREAM_INFO(Structure):
    cbContent: UInt32
    pfnStreamOutput: win32more.Security.Cryptography.PFN_CMSG_STREAM_OUTPUT
    pvArg: c_void_p
class CPS_URLS(Structure):
    pszURL: win32more.Foundation.PWSTR
    pAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head)
    pDigest: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
class CRL_CONTEXT(Structure):
    dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE
    pbCrlEncoded: c_char_p_no
    cbCrlEncoded: UInt32
    pCrlInfo: POINTER(win32more.Security.Cryptography.CRL_INFO_head)
    hCertStore: win32more.Security.Cryptography.HCERTSTORE
class CRL_DIST_POINT(Structure):
    DistPointName: win32more.Security.Cryptography.CRL_DIST_POINT_NAME
    ReasonFlags: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    CRLIssuer: win32more.Security.Cryptography.CERT_ALT_NAME_INFO
class CRL_DIST_POINT_NAME(Structure):
    dwDistPointNameChoice: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        FullName: win32more.Security.Cryptography.CERT_ALT_NAME_INFO
class CRL_DIST_POINTS_INFO(Structure):
    cDistPoint: UInt32
    rgDistPoint: POINTER(win32more.Security.Cryptography.CRL_DIST_POINT_head)
class CRL_ENTRY(Structure):
    SerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    RevocationDate: win32more.Foundation.FILETIME
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CRL_FIND_ISSUED_FOR_PARA(Structure):
    pSubjectCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)
    pIssuerCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)
class CRL_INFO(Structure):
    dwVersion: UInt32
    SignatureAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Issuer: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    ThisUpdate: win32more.Foundation.FILETIME
    NextUpdate: win32more.Foundation.FILETIME
    cCRLEntry: UInt32
    rgCRLEntry: POINTER(win32more.Security.Cryptography.CRL_ENTRY_head)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CRL_ISSUING_DIST_POINT(Structure):
    DistPointName: win32more.Security.Cryptography.CRL_DIST_POINT_NAME
    fOnlyContainsUserCerts: win32more.Foundation.BOOL
    fOnlyContainsCACerts: win32more.Foundation.BOOL
    OnlySomeReasonFlags: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    fIndirectCRL: win32more.Foundation.BOOL
class CRL_REVOCATION_INFO(Structure):
    pCrlEntry: POINTER(win32more.Security.Cryptography.CRL_ENTRY_head)
    pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head)
    pCrlIssuerChain: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head)
class CROSS_CERT_DIST_POINTS_INFO(Structure):
    dwSyncDeltaTime: UInt32
    cDistPoint: UInt32
    rgDistPoint: POINTER(win32more.Security.Cryptography.CERT_ALT_NAME_INFO_head)
class CRYPT_3DES_KEY_STATE(Structure):
    Key: Byte * 24
    IV: Byte * 8
    Feedback: Byte * 8
CRYPT_ACQUIRE_FLAGS = UInt32
CRYPT_ACQUIRE_CACHE_FLAG: CRYPT_ACQUIRE_FLAGS = 1
CRYPT_ACQUIRE_COMPARE_KEY_FLAG: CRYPT_ACQUIRE_FLAGS = 4
CRYPT_ACQUIRE_NO_HEALING: CRYPT_ACQUIRE_FLAGS = 8
CRYPT_ACQUIRE_SILENT_FLAG: CRYPT_ACQUIRE_FLAGS = 64
CRYPT_ACQUIRE_USE_PROV_INFO_FLAG: CRYPT_ACQUIRE_FLAGS = 2
class CRYPT_AES_128_KEY_STATE(Structure):
    Key: Byte * 16
    IV: Byte * 16
    EncryptionState: Byte * 176
    DecryptionState: Byte * 176
    Feedback: Byte * 16
class CRYPT_AES_256_KEY_STATE(Structure):
    Key: Byte * 32
    IV: Byte * 16
    EncryptionState: Byte * 240
    DecryptionState: Byte * 240
    Feedback: Byte * 16
class CRYPT_ALGORITHM_IDENTIFIER(Structure):
    pszObjId: win32more.Foundation.PSTR
    Parameters: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_ASYNC_RETRIEVAL_COMPLETION(Structure):
    pfnCompletion: win32more.Security.Cryptography.PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC
    pvCompletion: c_void_p
class CRYPT_ATTRIBUTE(Structure):
    pszObjId: win32more.Foundation.PSTR
    cValue: UInt32
    rgValue: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
class CRYPT_ATTRIBUTE_TYPE_VALUE(Structure):
    pszObjId: win32more.Foundation.PSTR
    Value: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_ATTRIBUTES(Structure):
    cAttr: UInt32
    rgAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
class CRYPT_BIT_BLOB(Structure):
    cbData: UInt32
    pbData: c_char_p_no
    cUnusedBits: UInt32
class CRYPT_BLOB_ARRAY(Structure):
    cBlob: UInt32
    rgBlob: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
class CRYPT_CONTENT_INFO(Structure):
    pszObjId: win32more.Foundation.PSTR
    Content: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY(Structure):
    pszObjId: win32more.Foundation.PSTR
    cValue: UInt32
    rgValue: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
class CRYPT_CONTEXT_CONFIG(Structure):
    dwFlags: win32more.Security.Cryptography.CRYPT_CONTEXT_CONFIG_FLAGS
    dwReserved: UInt32
CRYPT_CONTEXT_CONFIG_FLAGS = UInt32
CRYPT_EXCLUSIVE: CRYPT_CONTEXT_CONFIG_FLAGS = 1
CRYPT_OVERRIDE: CRYPT_CONTEXT_CONFIG_FLAGS = 65536
class CRYPT_CONTEXT_FUNCTION_CONFIG(Structure):
    dwFlags: UInt32
    dwReserved: UInt32
class CRYPT_CONTEXT_FUNCTION_PROVIDERS(Structure):
    cProviders: UInt32
    rgpszProviders: POINTER(win32more.Foundation.PWSTR)
class CRYPT_CONTEXT_FUNCTIONS(Structure):
    cFunctions: UInt32
    rgpszFunctions: POINTER(win32more.Foundation.PWSTR)
class CRYPT_CONTEXTS(Structure):
    cContexts: UInt32
    rgpszContexts: POINTER(win32more.Foundation.PWSTR)
class CRYPT_CREDENTIALS(Structure):
    cbSize: UInt32
    pszCredentialsOid: win32more.Foundation.PSTR
    pvCredentials: c_void_p
class CRYPT_CSP_PROVIDER(Structure):
    dwKeySpec: UInt32
    pwszProviderName: win32more.Foundation.PWSTR
    Signature: win32more.Security.Cryptography.CRYPT_BIT_BLOB
class CRYPT_DECODE_PARA(Structure):
    cbSize: UInt32
    pfnAlloc: win32more.Security.Cryptography.PFN_CRYPT_ALLOC
    pfnFree: win32more.Security.Cryptography.PFN_CRYPT_FREE
class CRYPT_DECRYPT_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: UInt32
    cCertStore: UInt32
    rghCertStore: POINTER(win32more.Security.Cryptography.HCERTSTORE)
CRYPT_DEFAULT_CONTEXT_FLAGS = UInt32
CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG: CRYPT_DEFAULT_CONTEXT_FLAGS = 1
CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG: CRYPT_DEFAULT_CONTEXT_FLAGS = 2
class CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA(Structure):
    cOID: UInt32
    rgpszOID: POINTER(win32more.Foundation.PSTR)
CRYPT_DEFAULT_CONTEXT_TYPE = UInt32
CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID: CRYPT_DEFAULT_CONTEXT_TYPE = 1
CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID: CRYPT_DEFAULT_CONTEXT_TYPE = 2
class CRYPT_DES_KEY_STATE(Structure):
    Key: Byte * 8
    IV: Byte * 8
    Feedback: Byte * 8
class CRYPT_ECC_CMS_SHARED_INFO(Structure):
    Algorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EntityUInfo: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    rgbSuppPubInfo: Byte * 4
class CRYPT_ECC_PRIVATE_KEY_INFO(Structure):
    dwVersion: UInt32
    PrivateKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    szCurveOid: win32more.Foundation.PSTR
    PublicKey: win32more.Security.Cryptography.CRYPT_BIT_BLOB
CRYPT_ENCODE_OBJECT_FLAGS = UInt32
CRYPT_ENCODE_ALLOC_FLAG: CRYPT_ENCODE_OBJECT_FLAGS = 32768
CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG: CRYPT_ENCODE_OBJECT_FLAGS = 131072
CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG: CRYPT_ENCODE_OBJECT_FLAGS = 1073741824
CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG: CRYPT_ENCODE_OBJECT_FLAGS = 2147483648
CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG: CRYPT_ENCODE_OBJECT_FLAGS = 536870912
class CRYPT_ENCODE_PARA(Structure):
    cbSize: UInt32
    pfnAlloc: win32more.Security.Cryptography.PFN_CRYPT_ALLOC
    pfnFree: win32more.Security.Cryptography.PFN_CRYPT_FREE
class CRYPT_ENCRYPT_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    ContentEncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvEncryptionAuxInfo: c_void_p
    dwFlags: UInt32
    dwInnerContentType: UInt32
class CRYPT_ENCRYPTED_PRIVATE_KEY_INFO(Structure):
    EncryptionAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    EncryptedPrivateKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_ENROLLMENT_NAME_VALUE_PAIR(Structure):
    pwszName: win32more.Foundation.PWSTR
    pwszValue: win32more.Foundation.PWSTR
CRYPT_FIND_FLAGS = UInt32
CRYPT_FIND_USER_KEYSET_FLAG: CRYPT_FIND_FLAGS = 1
CRYPT_FIND_MACHINE_KEYSET_FLAG: CRYPT_FIND_FLAGS = 2
CRYPT_FIND_SILENT_KEYSET_FLAG: CRYPT_FIND_FLAGS = 64
class CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO(Structure):
    cbSize: UInt32
    iDeltaCrlIndicator: Int32
    pftCacheResync: POINTER(win32more.Foundation.FILETIME_head)
    pLastSyncTime: POINTER(win32more.Foundation.FILETIME_head)
    pMaxAgeTime: POINTER(win32more.Foundation.FILETIME_head)
    pChainPara: POINTER(win32more.Security.Cryptography.CERT_REVOCATION_CHAIN_PARA_head)
    pDeltaCrlIndicator: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
CRYPT_GET_URL_FLAGS = UInt32
CRYPT_GET_URL_FROM_PROPERTY: CRYPT_GET_URL_FLAGS = 1
CRYPT_GET_URL_FROM_EXTENSION: CRYPT_GET_URL_FLAGS = 2
CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE: CRYPT_GET_URL_FLAGS = 4
CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE: CRYPT_GET_URL_FLAGS = 8
class CRYPT_HASH_INFO(Structure):
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Hash: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_HASH_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: c_void_p
class CRYPT_IMAGE_REF(Structure):
    pszImage: win32more.Foundation.PWSTR
    dwFlags: win32more.Security.Cryptography.CRYPT_IMAGE_REF_FLAGS
CRYPT_IMAGE_REF_FLAGS = UInt32
CRYPT_MIN_DEPENDENCIES: CRYPT_IMAGE_REF_FLAGS = 1
CRYPT_PROCESS_ISOLATE: CRYPT_IMAGE_REF_FLAGS = 65536
class CRYPT_IMAGE_REG(Structure):
    pszImage: win32more.Foundation.PWSTR
    cInterfaces: UInt32
    rgpInterfaces: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_INTERFACE_REG_head))
CRYPT_IMPORT_PUBLIC_KEY_FLAGS = UInt32
CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG: CRYPT_IMPORT_PUBLIC_KEY_FLAGS = 2147483648
CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG: CRYPT_IMPORT_PUBLIC_KEY_FLAGS = 1073741824
class CRYPT_INTEGER_BLOB(Structure):
    cbData: UInt32
    pbData: c_char_p_no
class CRYPT_INTERFACE_REG(Structure):
    dwInterface: win32more.Security.Cryptography.BCRYPT_INTERFACE
    dwFlags: win32more.Security.Cryptography.BCRYPT_TABLE
    cFunctions: UInt32
    rgpszFunctions: POINTER(win32more.Foundation.PWSTR)
CRYPT_KEY_FLAGS = UInt32
CRYPT_EXPORTABLE: CRYPT_KEY_FLAGS = 1
CRYPT_USER_PROTECTED: CRYPT_KEY_FLAGS = 2
CRYPT_ARCHIVABLE: CRYPT_KEY_FLAGS = 16384
CRYPT_CREATE_IV: CRYPT_KEY_FLAGS = 512
CRYPT_CREATE_SALT: CRYPT_KEY_FLAGS = 4
CRYPT_DATA_KEY: CRYPT_KEY_FLAGS = 2048
CRYPT_FORCE_KEY_PROTECTION_HIGH: CRYPT_KEY_FLAGS = 32768
CRYPT_KEK: CRYPT_KEY_FLAGS = 1024
CRYPT_INITIATOR: CRYPT_KEY_FLAGS = 64
CRYPT_NO_SALT: CRYPT_KEY_FLAGS = 16
CRYPT_ONLINE: CRYPT_KEY_FLAGS = 128
CRYPT_PREGEN: CRYPT_KEY_FLAGS = 64
CRYPT_RECIPIENT: CRYPT_KEY_FLAGS = 16
CRYPT_SF: CRYPT_KEY_FLAGS = 256
CRYPT_SGCKEY: CRYPT_KEY_FLAGS = 8192
CRYPT_VOLATILE: CRYPT_KEY_FLAGS = 4096
CRYPT_MACHINE_KEYSET: CRYPT_KEY_FLAGS = 32
CRYPT_USER_KEYSET: CRYPT_KEY_FLAGS = 4096
PKCS12_PREFER_CNG_KSP: CRYPT_KEY_FLAGS = 256
PKCS12_ALWAYS_CNG_KSP: CRYPT_KEY_FLAGS = 512
PKCS12_ALLOW_OVERWRITE_KEY: CRYPT_KEY_FLAGS = 16384
PKCS12_NO_PERSIST_KEY: CRYPT_KEY_FLAGS = 32768
PKCS12_INCLUDE_EXTENDED_PROPERTIES: CRYPT_KEY_FLAGS = 16
CRYPT_OAEP: CRYPT_KEY_FLAGS = 64
CRYPT_BLOB_VER3: CRYPT_KEY_FLAGS = 128
CRYPT_DESTROYKEY: CRYPT_KEY_FLAGS = 4
CRYPT_SSL2_FALLBACK: CRYPT_KEY_FLAGS = 2
CRYPT_Y_ONLY: CRYPT_KEY_FLAGS = 1
CRYPT_IPSEC_HMAC_KEY: CRYPT_KEY_FLAGS = 256
CERT_SET_KEY_PROV_HANDLE_PROP_ID: CRYPT_KEY_FLAGS = 1
CERT_SET_KEY_CONTEXT_PROP_ID: CRYPT_KEY_FLAGS = 1
CRYPT_KEY_PARAM_ID = UInt32
KP_ALGID: CRYPT_KEY_PARAM_ID = 7
KP_CERTIFICATE: CRYPT_KEY_PARAM_ID = 26
KP_PERMISSIONS: CRYPT_KEY_PARAM_ID = 6
KP_SALT: CRYPT_KEY_PARAM_ID = 2
KP_SALT_EX: CRYPT_KEY_PARAM_ID = 10
KP_BLOCKLEN: CRYPT_KEY_PARAM_ID = 8
KP_GET_USE_COUNT: CRYPT_KEY_PARAM_ID = 42
KP_KEYLEN: CRYPT_KEY_PARAM_ID = 9
class CRYPT_KEY_PROV_INFO(Structure):
    pwszContainerName: win32more.Foundation.PWSTR
    pwszProvName: win32more.Foundation.PWSTR
    dwProvType: UInt32
    dwFlags: win32more.Security.Cryptography.CRYPT_KEY_FLAGS
    cProvParam: UInt32
    rgProvParam: POINTER(win32more.Security.Cryptography.CRYPT_KEY_PROV_PARAM_head)
    dwKeySpec: UInt32
class CRYPT_KEY_PROV_PARAM(Structure):
    dwParam: UInt32
    pbData: c_char_p_no
    cbData: UInt32
    dwFlags: UInt32
class CRYPT_KEY_SIGN_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE
    Anonymous: _Anonymous_e__Union
    dwKeySpec: win32more.Security.Cryptography.CERT_KEY_SPEC
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: c_void_p
    PubKeyAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    class _Anonymous_e__Union(Union):
        hCryptProv: UIntPtr
        hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE
class CRYPT_KEY_VERIFY_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
class CRYPT_MASK_GEN_ALGORITHM(Structure):
    pszObjId: win32more.Foundation.PSTR
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
CRYPT_MSG_TYPE = UInt32
CMSG_DATA: CRYPT_MSG_TYPE = 1
CMSG_SIGNED: CRYPT_MSG_TYPE = 2
CMSG_ENVELOPED: CRYPT_MSG_TYPE = 3
CMSG_SIGNED_AND_ENVELOPED: CRYPT_MSG_TYPE = 4
CMSG_HASHED: CRYPT_MSG_TYPE = 5
class CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE(Structure):
    cbSize: UInt32
    pfnGet: win32more.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET
    pfnRelease: win32more.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE
    pfnFreePassword: win32more.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD
    pfnFree: win32more.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE
    pfnFreeIdentifier: win32more.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER
CRYPT_OBJECT_LOCATOR_RELEASE_REASON = UInt32
CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN: CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 1
CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP: CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 2
CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT: CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 3
CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD: CRYPT_OBJECT_LOCATOR_RELEASE_REASON = 4
class CRYPT_OBJID_TABLE(Structure):
    dwAlgId: UInt32
    pszObjId: win32more.Foundation.PSTR
class CRYPT_OID_FUNC_ENTRY(Structure):
    pszOID: win32more.Foundation.PSTR
    pvFuncAddr: c_void_p
class CRYPT_OID_INFO(Structure):
    cbSize: UInt32
    pszOID: win32more.Foundation.PSTR
    pwszName: win32more.Foundation.PWSTR
    dwGroupId: UInt32
    Anonymous: _Anonymous_e__Union
    ExtraInfo: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    class _Anonymous_e__Union(Union):
        dwValue: UInt32
        Algid: UInt32
        dwLength: UInt32
class CRYPT_PASSWORD_CREDENTIALSA(Structure):
    cbSize: UInt32
    pszUsername: win32more.Foundation.PSTR
    pszPassword: win32more.Foundation.PSTR
class CRYPT_PASSWORD_CREDENTIALSW(Structure):
    cbSize: UInt32
    pszUsername: win32more.Foundation.PWSTR
    pszPassword: win32more.Foundation.PWSTR
class CRYPT_PKCS12_PBE_PARAMS(Structure):
    iIterations: Int32
    cbSalt: UInt32
class CRYPT_PKCS8_EXPORT_PARAMS(Structure):
    hCryptProv: UIntPtr
    dwKeySpec: UInt32
    pszPrivateKeyObjId: win32more.Foundation.PSTR
    pEncryptPrivateKeyFunc: win32more.Security.Cryptography.PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC
    pVoidEncryptFunc: c_void_p
class CRYPT_PKCS8_IMPORT_PARAMS(Structure):
    PrivateKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pResolvehCryptProvFunc: win32more.Security.Cryptography.PCRYPT_RESOLVE_HCRYPTPROV_FUNC
    pVoidResolveFunc: c_void_p
    pDecryptPrivateKeyFunc: win32more.Security.Cryptography.PCRYPT_DECRYPT_PRIVATE_KEY_FUNC
    pVoidDecryptFunc: c_void_p
class CRYPT_PRIVATE_KEY_INFO(Structure):
    Version: UInt32
    Algorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    PrivateKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pAttributes: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTES_head)
class CRYPT_PROPERTY_REF(Structure):
    pszProperty: win32more.Foundation.PWSTR
    cbValue: UInt32
    pbValue: c_char_p_no
class CRYPT_PROVIDER_REF(Structure):
    dwInterface: UInt32
    pszFunction: win32more.Foundation.PWSTR
    pszProvider: win32more.Foundation.PWSTR
    cProperties: UInt32
    rgpProperties: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_PROPERTY_REF_head))
    pUM: POINTER(win32more.Security.Cryptography.CRYPT_IMAGE_REF_head)
    pKM: POINTER(win32more.Security.Cryptography.CRYPT_IMAGE_REF_head)
class CRYPT_PROVIDER_REFS(Structure):
    cProviders: UInt32
    rgpProviders: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_PROVIDER_REF_head))
class CRYPT_PROVIDER_REG(Structure):
    cAliases: UInt32
    rgpszAliases: POINTER(win32more.Foundation.PWSTR)
    pUM: POINTER(win32more.Security.Cryptography.CRYPT_IMAGE_REG_head)
    pKM: POINTER(win32more.Security.Cryptography.CRYPT_IMAGE_REG_head)
class CRYPT_PROVIDERS(Structure):
    cProviders: UInt32
    rgpszProviders: POINTER(win32more.Foundation.PWSTR)
class CRYPT_PSOURCE_ALGORITHM(Structure):
    pszObjId: win32more.Foundation.PSTR
    EncodingParameters: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_RC2_CBC_PARAMETERS(Structure):
    dwVersion: UInt32
    fIV: win32more.Foundation.BOOL
    rgbIV: Byte * 8
class CRYPT_RC4_KEY_STATE(Structure):
    Key: Byte * 16
    SBox: Byte * 256
    i: Byte
    j: Byte
class CRYPT_RETRIEVE_AUX_INFO(Structure):
    cbSize: UInt32
    pLastSyncTime: POINTER(win32more.Foundation.FILETIME_head)
    dwMaxUrlRetrievalByteCount: UInt32
    pPreFetchInfo: POINTER(win32more.Security.Cryptography.CRYPTNET_URL_CACHE_PRE_FETCH_INFO_head)
    pFlushInfo: POINTER(win32more.Security.Cryptography.CRYPTNET_URL_CACHE_FLUSH_INFO_head)
    ppResponseInfo: POINTER(POINTER(win32more.Security.Cryptography.CRYPTNET_URL_CACHE_RESPONSE_INFO_head))
    pwszCacheFileNamePrefix: win32more.Foundation.PWSTR
    pftCacheResync: POINTER(win32more.Foundation.FILETIME_head)
    fProxyCacheRetrieval: win32more.Foundation.BOOL
    dwHttpStatusCode: UInt32
    ppwszErrorResponseHeaders: POINTER(win32more.Foundation.PWSTR)
    ppErrorContentBlob: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head))
class CRYPT_RSA_SSA_PSS_PARAMETERS(Structure):
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    MaskGenAlgorithm: win32more.Security.Cryptography.CRYPT_MASK_GEN_ALGORITHM
    dwSaltLength: UInt32
    dwTrailerField: UInt32
class CRYPT_RSAES_OAEP_PARAMETERS(Structure):
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    MaskGenAlgorithm: win32more.Security.Cryptography.CRYPT_MASK_GEN_ALGORITHM
    PSourceAlgorithm: win32more.Security.Cryptography.CRYPT_PSOURCE_ALGORITHM
class CRYPT_SEQUENCE_OF_ANY(Structure):
    cValue: UInt32
    rgValue: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
CRYPT_SET_HASH_PARAM = UInt32
HP_HMAC_INFO: CRYPT_SET_HASH_PARAM = 5
HP_HASHVAL: CRYPT_SET_HASH_PARAM = 2
CRYPT_SET_PROV_PARAM_ID = UInt32
PP_CLIENT_HWND: CRYPT_SET_PROV_PARAM_ID = 1
PP_DELETEKEY: CRYPT_SET_PROV_PARAM_ID = 24
PP_KEYEXCHANGE_ALG: CRYPT_SET_PROV_PARAM_ID = 14
PP_KEYEXCHANGE_PIN: CRYPT_SET_PROV_PARAM_ID = 32
PP_KEYEXCHANGE_KEYSIZE: CRYPT_SET_PROV_PARAM_ID = 12
PP_KEYSET_SEC_DESCR: CRYPT_SET_PROV_PARAM_ID = 8
PP_PIN_PROMPT_STRING: CRYPT_SET_PROV_PARAM_ID = 44
PP_ROOT_CERTSTORE: CRYPT_SET_PROV_PARAM_ID = 46
PP_SIGNATURE_ALG: CRYPT_SET_PROV_PARAM_ID = 15
PP_SIGNATURE_PIN: CRYPT_SET_PROV_PARAM_ID = 33
PP_SIGNATURE_KEYSIZE: CRYPT_SET_PROV_PARAM_ID = 13
PP_UI_PROMPT: CRYPT_SET_PROV_PARAM_ID = 21
PP_USE_HARDWARE_RNG: CRYPT_SET_PROV_PARAM_ID = 38
PP_USER_CERTSTORE: CRYPT_SET_PROV_PARAM_ID = 42
PP_SECURE_KEYEXCHANGE_PIN: CRYPT_SET_PROV_PARAM_ID = 47
PP_SECURE_SIGNATURE_PIN: CRYPT_SET_PROV_PARAM_ID = 48
PP_SMARTCARD_READER: CRYPT_SET_PROV_PARAM_ID = 43
class CRYPT_SIGN_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgEncodingType: UInt32
    pSigningCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head)
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    pvHashAuxInfo: c_void_p
    cMsgCert: UInt32
    rgpMsgCert: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))
    cMsgCrl: UInt32
    rgpMsgCrl: POINTER(POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head))
    cAuthAttr: UInt32
    rgAuthAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
    cUnauthAttr: UInt32
    rgUnauthAttr: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
    dwFlags: UInt32
    dwInnerContentType: UInt32
class CRYPT_SMART_CARD_ROOT_INFO(Structure):
    rgbCardID: Byte * 16
    luid: win32more.Security.Cryptography.ROOT_INFO_LUID
class CRYPT_SMIME_CAPABILITIES(Structure):
    cCapability: UInt32
    rgCapability: POINTER(win32more.Security.Cryptography.CRYPT_SMIME_CAPABILITY_head)
class CRYPT_SMIME_CAPABILITY(Structure):
    pszObjId: win32more.Foundation.PSTR
    Parameters: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
CRYPT_STRING = UInt32
CRYPT_STRING_BASE64HEADER: CRYPT_STRING = 0
CRYPT_STRING_BASE64: CRYPT_STRING = 1
CRYPT_STRING_BINARY: CRYPT_STRING = 2
CRYPT_STRING_BASE64REQUESTHEADER: CRYPT_STRING = 3
CRYPT_STRING_HEX: CRYPT_STRING = 4
CRYPT_STRING_HEXASCII: CRYPT_STRING = 5
CRYPT_STRING_BASE64X509CRLHEADER: CRYPT_STRING = 9
CRYPT_STRING_HEXADDR: CRYPT_STRING = 10
CRYPT_STRING_HEXASCIIADDR: CRYPT_STRING = 11
CRYPT_STRING_HEXRAW: CRYPT_STRING = 12
CRYPT_STRING_STRICT: CRYPT_STRING = 536870912
CRYPT_STRING_BASE64_ANY: CRYPT_STRING = 6
CRYPT_STRING_ANY: CRYPT_STRING = 7
CRYPT_STRING_HEX_ANY: CRYPT_STRING = 8
class CRYPT_TIME_STAMP_REQUEST_INFO(Structure):
    pszTimeStampAlgorithm: win32more.Foundation.PSTR
    pszContentType: win32more.Foundation.PSTR
    Content: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
class CRYPT_TIMESTAMP_ACCURACY(Structure):
    dwSeconds: UInt32
    dwMillis: UInt32
    dwMicros: UInt32
class CRYPT_TIMESTAMP_CONTEXT(Structure):
    cbEncoded: UInt32
    pbEncoded: c_char_p_no
    pTimeStamp: POINTER(win32more.Security.Cryptography.CRYPT_TIMESTAMP_INFO_head)
class CRYPT_TIMESTAMP_INFO(Structure):
    dwVersion: UInt32
    pszTSAPolicyId: win32more.Foundation.PSTR
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashedMessage: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    ftTime: win32more.Foundation.FILETIME
    pvAccuracy: POINTER(win32more.Security.Cryptography.CRYPT_TIMESTAMP_ACCURACY_head)
    fOrdering: win32more.Foundation.BOOL
    Nonce: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    Tsa: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CRYPT_TIMESTAMP_PARA(Structure):
    pszTSAPolicyId: win32more.Foundation.PSTR
    fRequestCerts: win32more.Foundation.BOOL
    Nonce: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CRYPT_TIMESTAMP_REQUEST(Structure):
    dwVersion: win32more.Security.Cryptography.CRYPT_TIMESTAMP_VERSION
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    HashedMessage: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pszTSAPolicyId: win32more.Foundation.PSTR
    Nonce: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    fCertReq: win32more.Foundation.BOOL
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CRYPT_TIMESTAMP_RESPONSE(Structure):
    dwStatus: win32more.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE_STATUS
    cFreeText: UInt32
    rgFreeText: POINTER(win32more.Foundation.PWSTR)
    FailureInfo: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    ContentInfo: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
CRYPT_TIMESTAMP_RESPONSE_STATUS = UInt32
TIMESTAMP_STATUS_GRANTED: CRYPT_TIMESTAMP_RESPONSE_STATUS = 0
TIMESTAMP_STATUS_GRANTED_WITH_MODS: CRYPT_TIMESTAMP_RESPONSE_STATUS = 1
TIMESTAMP_STATUS_REJECTED: CRYPT_TIMESTAMP_RESPONSE_STATUS = 2
TIMESTAMP_STATUS_WAITING: CRYPT_TIMESTAMP_RESPONSE_STATUS = 3
TIMESTAMP_STATUS_REVOCATION_WARNING: CRYPT_TIMESTAMP_RESPONSE_STATUS = 4
TIMESTAMP_STATUS_REVOKED: CRYPT_TIMESTAMP_RESPONSE_STATUS = 5
CRYPT_TIMESTAMP_VERSION = UInt32
TIMESTAMP_VERSION: CRYPT_TIMESTAMP_VERSION = 1
class CRYPT_URL_ARRAY(Structure):
    cUrl: UInt32
    rgwszUrl: POINTER(win32more.Foundation.PWSTR)
class CRYPT_URL_INFO(Structure):
    cbSize: UInt32
    dwSyncDeltaTime: UInt32
    cGroup: UInt32
    rgcGroupEntry: POINTER(UInt32)
CRYPT_VERIFY_CERT_FLAGS = UInt32
CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG: CRYPT_VERIFY_CERT_FLAGS = 1
CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG: CRYPT_VERIFY_CERT_FLAGS = 2
CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG: CRYPT_VERIFY_CERT_FLAGS = 4
class CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO(Structure):
    CertSignHashCNGAlgPropData: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    CertIssuerPubKeyBitLengthPropData: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO(Structure):
    cCNGHashAlgid: UInt32
    rgpwszCNGHashAlgid: POINTER(win32more.Foundation.PWSTR)
    dwWeakIndex: UInt32
class CRYPT_VERIFY_MESSAGE_PARA(Structure):
    cbSize: UInt32
    dwMsgAndCertEncodingType: UInt32
    hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY
    pfnGetSignerCertificate: win32more.Security.Cryptography.PFN_CRYPT_GET_SIGNER_CERTIFICATE
    pvGetArg: c_void_p
class CRYPT_X942_OTHER_INFO(Structure):
    pszContentEncryptionObjId: win32more.Foundation.PSTR
    rgbCounter: Byte * 4
    rgbKeyLength: Byte * 4
    PubInfo: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CRYPT_XML_ALGORITHM(Structure):
    cbSize: UInt32
    wszAlgorithm: win32more.Foundation.PWSTR
    Encoded: win32more.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_ALGORITHM_INFO(Structure):
    cbSize: UInt32
    wszAlgorithmURI: win32more.Foundation.PWSTR
    wszName: win32more.Foundation.PWSTR
    dwGroupId: win32more.Security.Cryptography.CRYPT_XML_GROUP_ID
    wszCNGAlgid: win32more.Foundation.PWSTR
    wszCNGExtraAlgid: win32more.Foundation.PWSTR
    dwSignFlags: UInt32
    dwVerifyFlags: UInt32
    pvPaddingInfo: c_void_p
    pvExtraInfo: c_void_p
class CRYPT_XML_BLOB(Structure):
    dwCharset: win32more.Security.Cryptography.CRYPT_XML_CHARSET
    cbData: UInt32
    pbData: c_char_p_no
CRYPT_XML_CHARSET = Int32
CRYPT_XML_CHARSET_AUTO: CRYPT_XML_CHARSET = 0
CRYPT_XML_CHARSET_UTF8: CRYPT_XML_CHARSET = 1
CRYPT_XML_CHARSET_UTF16LE: CRYPT_XML_CHARSET = 2
CRYPT_XML_CHARSET_UTF16BE: CRYPT_XML_CHARSET = 3
class CRYPT_XML_CRYPTOGRAPHIC_INTERFACE(Structure):
    cbSize: UInt32
    fpCryptXmlEncodeAlgorithm: win32more.Security.Cryptography.CryptXmlDllEncodeAlgorithm
    fpCryptXmlCreateDigest: win32more.Security.Cryptography.CryptXmlDllCreateDigest
    fpCryptXmlDigestData: win32more.Security.Cryptography.CryptXmlDllDigestData
    fpCryptXmlFinalizeDigest: win32more.Security.Cryptography.CryptXmlDllFinalizeDigest
    fpCryptXmlCloseDigest: win32more.Security.Cryptography.CryptXmlDllCloseDigest
    fpCryptXmlSignData: win32more.Security.Cryptography.CryptXmlDllSignData
    fpCryptXmlVerifySignature: win32more.Security.Cryptography.CryptXmlDllVerifySignature
    fpCryptXmlGetAlgorithmInfo: win32more.Security.Cryptography.CryptXmlDllGetAlgorithmInfo
class CRYPT_XML_DATA_BLOB(Structure):
    cbData: UInt32
    pbData: c_char_p_no
class CRYPT_XML_DATA_PROVIDER(Structure):
    pvCallbackState: c_void_p
    cbBufferSize: UInt32
    pfnRead: win32more.Security.Cryptography.PFN_CRYPT_XML_DATA_PROVIDER_READ
    pfnClose: win32more.Security.Cryptography.PFN_CRYPT_XML_DATA_PROVIDER_CLOSE
class CRYPT_XML_DOC_CTXT(Structure):
    cbSize: UInt32
    hDocCtxt: c_void_p
    pTransformsConfig: POINTER(win32more.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG_head)
    cSignature: UInt32
    rgpSignature: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_SIGNATURE_head))
CRYPT_XML_FLAGS = UInt32
CRYPT_XML_FLAG_DISABLE_EXTENSIONS: CRYPT_XML_FLAGS = 268435456
CRYPT_XML_FLAG_NO_SERIALIZE: CRYPT_XML_FLAGS = 2147483648
CRYPT_XML_SIGN_ADD_KEYVALUE: CRYPT_XML_FLAGS = 1
CRYPT_XML_GROUP_ID = UInt32
CRYPT_XML_GROUP_ID_HASH: CRYPT_XML_GROUP_ID = 1
CRYPT_XML_GROUP_ID_SIGN: CRYPT_XML_GROUP_ID = 2
class CRYPT_XML_ISSUER_SERIAL(Structure):
    wszIssuer: win32more.Foundation.PWSTR
    wszSerial: win32more.Foundation.PWSTR
class CRYPT_XML_KEY_DSA_KEY_VALUE(Structure):
    P: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Q: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    G: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Y: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    J: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Seed: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Counter: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
class CRYPT_XML_KEY_ECDSA_KEY_VALUE(Structure):
    wszNamedCurve: win32more.Foundation.PWSTR
    X: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Y: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    ExplicitPara: win32more.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_KEY_INFO(Structure):
    cbSize: UInt32
    wszId: win32more.Foundation.PWSTR
    cKeyInfo: UInt32
    rgKeyInfo: POINTER(win32more.Security.Cryptography.CRYPT_XML_KEY_INFO_ITEM_head)
    hVerifyKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE
class CRYPT_XML_KEY_INFO_ITEM(Structure):
    dwType: win32more.Security.Cryptography.CRYPT_XML_KEYINFO_TYPE
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        wszKeyName: win32more.Foundation.PWSTR
        KeyValue: win32more.Security.Cryptography.CRYPT_XML_KEY_VALUE
        RetrievalMethod: win32more.Security.Cryptography.CRYPT_XML_BLOB
        X509Data: win32more.Security.Cryptography.CRYPT_XML_X509DATA
        Custom: win32more.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_KEY_RSA_KEY_VALUE(Structure):
    Modulus: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
    Exponent: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
class CRYPT_XML_KEY_VALUE(Structure):
    dwType: win32more.Security.Cryptography.CRYPT_XML_KEY_VALUE_TYPE
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        DSAKeyValue: win32more.Security.Cryptography.CRYPT_XML_KEY_DSA_KEY_VALUE
        RSAKeyValue: win32more.Security.Cryptography.CRYPT_XML_KEY_RSA_KEY_VALUE
        ECDSAKeyValue: win32more.Security.Cryptography.CRYPT_XML_KEY_ECDSA_KEY_VALUE
        Custom: win32more.Security.Cryptography.CRYPT_XML_BLOB
CRYPT_XML_KEY_VALUE_TYPE = UInt32
CRYPT_XML_KEY_VALUE_TYPE_DSA: CRYPT_XML_KEY_VALUE_TYPE = 1
CRYPT_XML_KEY_VALUE_TYPE_RSA: CRYPT_XML_KEY_VALUE_TYPE = 2
CRYPT_XML_KEY_VALUE_TYPE_ECDSA: CRYPT_XML_KEY_VALUE_TYPE = 3
CRYPT_XML_KEY_VALUE_TYPE_CUSTOM: CRYPT_XML_KEY_VALUE_TYPE = 4
class CRYPT_XML_KEYINFO_PARAM(Structure):
    wszId: win32more.Foundation.PWSTR
    wszKeyName: win32more.Foundation.PWSTR
    SKI: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    wszSubjectName: win32more.Foundation.PWSTR
    cCertificate: UInt32
    rgCertificate: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
    cCRL: UInt32
    rgCRL: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
CRYPT_XML_KEYINFO_SPEC = Int32
CRYPT_XML_KEYINFO_SPEC_NONE: CRYPT_XML_KEYINFO_SPEC = 0
CRYPT_XML_KEYINFO_SPEC_ENCODED: CRYPT_XML_KEYINFO_SPEC = 1
CRYPT_XML_KEYINFO_SPEC_PARAM: CRYPT_XML_KEYINFO_SPEC = 2
CRYPT_XML_KEYINFO_TYPE = UInt32
CRYPT_XML_KEYINFO_TYPE_KEYNAME: CRYPT_XML_KEYINFO_TYPE = 1
CRYPT_XML_KEYINFO_TYPE_KEYVALUE: CRYPT_XML_KEYINFO_TYPE = 2
CRYPT_XML_KEYINFO_TYPE_RETRIEVAL: CRYPT_XML_KEYINFO_TYPE = 3
CRYPT_XML_KEYINFO_TYPE_X509DATA: CRYPT_XML_KEYINFO_TYPE = 4
CRYPT_XML_KEYINFO_TYPE_CUSTOM: CRYPT_XML_KEYINFO_TYPE = 5
class CRYPT_XML_OBJECT(Structure):
    cbSize: UInt32
    hObject: c_void_p
    wszId: win32more.Foundation.PWSTR
    wszMimeType: win32more.Foundation.PWSTR
    wszEncoding: win32more.Foundation.PWSTR
    Manifest: win32more.Security.Cryptography.CRYPT_XML_REFERENCES
    Encoded: win32more.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_PROPERTY(Structure):
    dwPropId: win32more.Security.Cryptography.CRYPT_XML_PROPERTY_ID
    pvValue: c_void_p
    cbValue: UInt32
CRYPT_XML_PROPERTY_ID = Int32
CRYPT_XML_PROPERTY_MAX_HEAP_SIZE: CRYPT_XML_PROPERTY_ID = 1
CRYPT_XML_PROPERTY_SIGNATURE_LOCATION: CRYPT_XML_PROPERTY_ID = 2
CRYPT_XML_PROPERTY_MAX_SIGNATURES: CRYPT_XML_PROPERTY_ID = 3
CRYPT_XML_PROPERTY_DOC_DECLARATION: CRYPT_XML_PROPERTY_ID = 4
CRYPT_XML_PROPERTY_XML_OUTPUT_CHARSET: CRYPT_XML_PROPERTY_ID = 5
class CRYPT_XML_REFERENCE(Structure):
    cbSize: UInt32
    hReference: c_void_p
    wszId: win32more.Foundation.PWSTR
    wszUri: win32more.Foundation.PWSTR
    wszType: win32more.Foundation.PWSTR
    DigestMethod: win32more.Security.Cryptography.CRYPT_XML_ALGORITHM
    DigestValue: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    cTransform: UInt32
    rgTransform: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head)
class CRYPT_XML_REFERENCES(Structure):
    cReference: UInt32
    rgpReference: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_REFERENCE_head))
class CRYPT_XML_SIGNATURE(Structure):
    cbSize: UInt32
    hSignature: c_void_p
    wszId: win32more.Foundation.PWSTR
    SignedInfo: win32more.Security.Cryptography.CRYPT_XML_SIGNED_INFO
    SignatureValue: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pKeyInfo: POINTER(win32more.Security.Cryptography.CRYPT_XML_KEY_INFO_head)
    cObject: UInt32
    rgpObject: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_OBJECT_head))
class CRYPT_XML_SIGNED_INFO(Structure):
    cbSize: UInt32
    wszId: win32more.Foundation.PWSTR
    Canonicalization: win32more.Security.Cryptography.CRYPT_XML_ALGORITHM
    SignatureMethod: win32more.Security.Cryptography.CRYPT_XML_ALGORITHM
    cReference: UInt32
    rgpReference: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_REFERENCE_head))
    Encoded: win32more.Security.Cryptography.CRYPT_XML_BLOB
class CRYPT_XML_STATUS(Structure):
    cbSize: UInt32
    dwErrorStatus: win32more.Security.Cryptography.CRYPT_XML_STATUS_ERROR_STATUS
    dwInfoStatus: win32more.Security.Cryptography.CRYPT_XML_STATUS_INFO_STATUS
CRYPT_XML_STATUS_ERROR_STATUS = UInt32
CRYPT_XML_STATUS_ERROR_NOT_RESOLVED: CRYPT_XML_STATUS_ERROR_STATUS = 1
CRYPT_XML_STATUS_ERROR_DIGEST_INVALID: CRYPT_XML_STATUS_ERROR_STATUS = 2
CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_ALGORITHM: CRYPT_XML_STATUS_ERROR_STATUS = 5
CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_TRANSFORM: CRYPT_XML_STATUS_ERROR_STATUS = 8
CRYPT_XML_STATUS_ERROR_SIGNATURE_INVALID: CRYPT_XML_STATUS_ERROR_STATUS = 65536
CRYPT_XML_STATUS_ERROR_KEYINFO_NOT_PARSED: CRYPT_XML_STATUS_ERROR_STATUS = 131072
CRYPT_XML_STATUS_INFO_STATUS = UInt32
CRYPT_XML_STATUS_INTERNAL_REFERENCE: CRYPT_XML_STATUS_INFO_STATUS = 1
CRYPT_XML_STATUS_KEY_AVAILABLE: CRYPT_XML_STATUS_INFO_STATUS = 2
CRYPT_XML_STATUS_DIGESTING: CRYPT_XML_STATUS_INFO_STATUS = 4
CRYPT_XML_STATUS_DIGEST_VALID: CRYPT_XML_STATUS_INFO_STATUS = 8
CRYPT_XML_STATUS_SIGNATURE_VALID: CRYPT_XML_STATUS_INFO_STATUS = 65536
CRYPT_XML_STATUS_OPENED_TO_ENCODE: CRYPT_XML_STATUS_INFO_STATUS = 2147483648
class CRYPT_XML_TRANSFORM_CHAIN_CONFIG(Structure):
    cbSize: UInt32
    cTransformInfo: UInt32
    rgpTransformInfo: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_TRANSFORM_INFO_head))
CRYPT_XML_TRANSFORM_FLAGS = UInt32
CRYPT_XML_TRANSFORM_ON_STREAM: CRYPT_XML_TRANSFORM_FLAGS = 1
CRYPT_XML_TRANSFORM_ON_NODESET: CRYPT_XML_TRANSFORM_FLAGS = 2
CRYPT_XML_TRANSFORM_URI_QUERY_STRING: CRYPT_XML_TRANSFORM_FLAGS = 3
class CRYPT_XML_TRANSFORM_INFO(Structure):
    cbSize: UInt32
    wszAlgorithm: win32more.Foundation.PWSTR
    cbBufferSize: UInt32
    dwFlags: win32more.Security.Cryptography.CRYPT_XML_TRANSFORM_FLAGS
    pfnCreateTransform: win32more.Security.Cryptography.PFN_CRYPT_XML_CREATE_TRANSFORM
class CRYPT_XML_X509DATA(Structure):
    cX509Data: UInt32
    rgX509Data: POINTER(win32more.Security.Cryptography.CRYPT_XML_X509DATA_ITEM_head)
class CRYPT_XML_X509DATA_ITEM(Structure):
    dwType: win32more.Security.Cryptography.CRYPT_XML_X509DATA_TYPE
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        IssuerSerial: win32more.Security.Cryptography.CRYPT_XML_ISSUER_SERIAL
        SKI: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
        wszSubjectName: win32more.Foundation.PWSTR
        Certificate: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
        CRL: win32more.Security.Cryptography.CRYPT_XML_DATA_BLOB
        Custom: win32more.Security.Cryptography.CRYPT_XML_BLOB
CRYPT_XML_X509DATA_TYPE = UInt32
CRYPT_XML_X509DATA_TYPE_ISSUER_SERIAL: CRYPT_XML_X509DATA_TYPE = 1
CRYPT_XML_X509DATA_TYPE_SKI: CRYPT_XML_X509DATA_TYPE = 2
CRYPT_XML_X509DATA_TYPE_SUBJECT_NAME: CRYPT_XML_X509DATA_TYPE = 3
CRYPT_XML_X509DATA_TYPE_CERTIFICATE: CRYPT_XML_X509DATA_TYPE = 4
CRYPT_XML_X509DATA_TYPE_CRL: CRYPT_XML_X509DATA_TYPE = 5
CRYPT_XML_X509DATA_TYPE_CUSTOM: CRYPT_XML_X509DATA_TYPE = 6
class CRYPTNET_URL_CACHE_FLUSH_INFO(Structure):
    cbSize: UInt32
    dwExemptSeconds: UInt32
    ExpireTime: win32more.Foundation.FILETIME
class CRYPTNET_URL_CACHE_PRE_FETCH_INFO(Structure):
    cbSize: UInt32
    dwObjectType: UInt32
    dwError: UInt32
    dwReserved: UInt32
    ThisUpdateTime: win32more.Foundation.FILETIME
    NextUpdateTime: win32more.Foundation.FILETIME
    PublishTime: win32more.Foundation.FILETIME
class CRYPTNET_URL_CACHE_RESPONSE_INFO(Structure):
    cbSize: UInt32
    wResponseType: UInt16
    wResponseFlags: UInt16
    LastModifiedTime: win32more.Foundation.FILETIME
    dwMaxAge: UInt32
    pwszETag: win32more.Foundation.PWSTR
    dwProxyId: UInt32
class CRYPTPROTECT_PROMPTSTRUCT(Structure):
    cbSize: UInt32
    dwPromptFlags: UInt32
    hwndApp: win32more.Foundation.HWND
    szPrompt: win32more.Foundation.PWSTR
@winfunctype_pointer
def CryptXmlDllCloseDigest(hDigest: c_void_p) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllCreateDigest(pDigestMethod: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), pcbSize: POINTER(UInt32), phDigest: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllCreateKey(pEncoded: POINTER(win32more.Security.Cryptography.CRYPT_XML_BLOB_head), phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllDigestData(hDigest: c_void_p, pbData: c_char_p_no, cbData: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllEncodeAlgorithm(pAlgInfo: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO_head), dwCharset: win32more.Security.Cryptography.CRYPT_XML_CHARSET, pvCallbackState: c_void_p, pfnWrite: win32more.Security.Cryptography.PFN_CRYPT_XML_WRITE_CALLBACK) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllEncodeKeyValue(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, dwCharset: win32more.Security.Cryptography.CRYPT_XML_CHARSET, pvCallbackState: c_void_p, pfnWrite: win32more.Security.Cryptography.PFN_CRYPT_XML_WRITE_CALLBACK) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllFinalizeDigest(hDigest: c_void_p, pbDigest: c_char_p_no, cbDigest: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllGetAlgorithmInfo(pXmlAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), ppAlgInfo: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO_head))) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllGetInterface(dwFlags: UInt32, pMethod: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO_head), pInterface: POINTER(win32more.Security.Cryptography.CRYPT_XML_CRYPTOGRAPHIC_INTERFACE_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllSignData(pSignatureMethod: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), hCryptProvOrNCryptKey: win32more.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE, dwKeySpec: UInt32, pbInput: c_char_p_no, cbInput: UInt32, pbOutput: c_char_p_no, cbOutput: UInt32, pcbResult: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def CryptXmlDllVerifySignature(pSignatureMethod: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), hKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, pbInput: c_char_p_no, cbInput: UInt32, pbSignature: c_char_p_no, cbSignature: UInt32) -> win32more.Foundation.HRESULT: ...
class CTL_ANY_SUBJECT_INFO(Structure):
    SubjectAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    SubjectIdentifier: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class CTL_CONTEXT(Structure):
    dwMsgAndCertEncodingType: UInt32
    pbCtlEncoded: c_char_p_no
    cbCtlEncoded: UInt32
    pCtlInfo: POINTER(win32more.Security.Cryptography.CTL_INFO_head)
    hCertStore: win32more.Security.Cryptography.HCERTSTORE
    hCryptMsg: c_void_p
    pbCtlContent: c_char_p_no
    cbCtlContent: UInt32
class CTL_ENTRY(Structure):
    SubjectIdentifier: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    cAttribute: UInt32
    rgAttribute: POINTER(win32more.Security.Cryptography.CRYPT_ATTRIBUTE_head)
class CTL_FIND_SUBJECT_PARA(Structure):
    cbSize: UInt32
    pUsagePara: POINTER(win32more.Security.Cryptography.CTL_FIND_USAGE_PARA_head)
    dwSubjectType: UInt32
    pvSubject: c_void_p
class CTL_FIND_USAGE_PARA(Structure):
    cbSize: UInt32
    SubjectUsage: win32more.Security.Cryptography.CTL_USAGE
    ListIdentifier: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pSigner: POINTER(win32more.Security.Cryptography.CERT_INFO_head)
class CTL_INFO(Structure):
    dwVersion: UInt32
    SubjectUsage: win32more.Security.Cryptography.CTL_USAGE
    ListIdentifier: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SequenceNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    ThisUpdate: win32more.Foundation.FILETIME
    NextUpdate: win32more.Foundation.FILETIME
    SubjectAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    cCTLEntry: UInt32
    rgCTLEntry: POINTER(win32more.Security.Cryptography.CTL_ENTRY_head)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class CTL_USAGE(Structure):
    cUsageIdentifier: UInt32
    rgpszUsageIdentifier: POINTER(win32more.Foundation.PSTR)
class CTL_USAGE_MATCH(Structure):
    dwType: UInt32
    Usage: win32more.Security.Cryptography.CTL_USAGE
class CTL_VERIFY_USAGE_PARA(Structure):
    cbSize: UInt32
    ListIdentifier: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    cCtlStore: UInt32
    rghCtlStore: POINTER(win32more.Security.Cryptography.HCERTSTORE)
    cSignerStore: UInt32
    rghSignerStore: POINTER(win32more.Security.Cryptography.HCERTSTORE)
class CTL_VERIFY_USAGE_STATUS(Structure):
    cbSize: UInt32
    dwError: UInt32
    dwFlags: UInt32
    ppCtl: POINTER(POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head))
    dwCtlEntryIndex: UInt32
    ppSigner: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))
    dwSignerIndex: UInt32
Direction = Int32
Direction_DirectionEncrypt: Direction = 1
Direction_DirectionDecrypt: Direction = 2
DSAFIPSVERSION_ENUM = Int32
DSA_FIPS186_2: DSAFIPSVERSION_ENUM = 0
DSA_FIPS186_3: DSAFIPSVERSION_ENUM = 1
class DSSSEED(Structure):
    counter: UInt32
    seed: Byte * 20
ECC_CURVE_ALG_ID_ENUM = Int32
BCRYPT_NO_CURVE_GENERATION_ALG_ID: ECC_CURVE_ALG_ID_ENUM = 0
ECC_CURVE_TYPE_ENUM = Int32
BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE: ECC_CURVE_TYPE_ENUM = 1
BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE: ECC_CURVE_TYPE_ENUM = 2
BCRYPT_ECC_PRIME_MONTGOMERY_CURVE: ECC_CURVE_TYPE_ENUM = 3
class ENDPOINTADDRESS(Structure):
    serviceUrl: win32more.Foundation.PWSTR
    policyUrl: win32more.Foundation.PWSTR
    rawCertificate: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class ENDPOINTADDRESS2(Structure):
    serviceUrl: win32more.Foundation.PWSTR
    policyUrl: win32more.Foundation.PWSTR
    identityType: UInt32
    identityBytes: c_void_p
class EV_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwRootProgramQualifierFlags: win32more.Security.Cryptography.CERT_ROOT_PROGRAM_FLAGS
class EV_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    dwQualifiers: UInt32
    dwIssuanceUsageIndex: UInt32
class GENERIC_XML_TOKEN(Structure):
    createDate: win32more.Foundation.FILETIME
    expiryDate: win32more.Foundation.FILETIME
    xmlToken: win32more.Foundation.PWSTR
    internalTokenReference: win32more.Foundation.PWSTR
    externalTokenReference: win32more.Foundation.PWSTR
    _pack_ = 1
HandleType = Int32
HandleType_Asymmetric: HandleType = 1
HandleType_Symmetric: HandleType = 2
HandleType_Transform: HandleType = 3
HandleType_Hash: HandleType = 4
HASHALGORITHM_ENUM = Int32
DSA_HASH_ALGORITHM_SHA1: HASHALGORITHM_ENUM = 0
DSA_HASH_ALGORITHM_SHA256: HASHALGORITHM_ENUM = 1
DSA_HASH_ALGORITHM_SHA512: HASHALGORITHM_ENUM = 2
HCERTCHAINENGINE = IntPtr
HCERTSTORE = c_void_p
HCERTSTOREPROV = c_void_p
HCRYPTASYNC = IntPtr
HCRYPTPROV_LEGACY = UIntPtr
HCRYPTPROV_OR_NCRYPT_KEY_HANDLE = UIntPtr
class HMAC_INFO(Structure):
    HashAlgid: UInt32
    pbInnerString: c_char_p_no
    cbInnerString: UInt32
    pbOuterString: c_char_p_no
    cbOuterString: UInt32
HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE = UInt32
AUTHTYPE_CLIENT: HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE = 1
AUTHTYPE_SERVER: HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE = 2
class HTTPSPolicyCallbackData(Structure):
    Anonymous: _Anonymous_e__Union
    dwAuthType: win32more.Security.Cryptography.HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE
    fdwChecks: UInt32
    pwszServerName: win32more.Foundation.PWSTR
    class _Anonymous_e__Union(Union):
        cbStruct: UInt32
        cbSize: UInt32
class ICertificateEnrollmentPolicyServerSetup(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('859252cc-238c-4a88-b8-fd-a3-7e-7d-04-e6-8b')
    @commethod(7)
    def get_ErrorString(pVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def InitializeInstallDefaults() -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetProperty(propertyId: win32more.Security.Cryptography.CEPSetupProperty, pPropertyValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def SetProperty(propertyId: win32more.Security.Cryptography.CEPSetupProperty, pPropertyValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def Install() -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def UnInstall(pAuthKeyBasedRenewal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
class ICertificateEnrollmentServerSetup(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('70027fdb-9dd9-4921-89-44-b3-5c-b3-1b-d2-ec')
    @commethod(7)
    def get_ErrorString(pVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def InitializeInstallDefaults() -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetProperty(propertyId: win32more.Security.Cryptography.CESSetupProperty, pPropertyValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def SetProperty(propertyId: win32more.Security.Cryptography.CESSetupProperty, pPropertyValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def SetApplicationPoolCredentials(bstrUsername: win32more.Foundation.BSTR, bstrPassword: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def Install() -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def UnInstall(pCAConfig: POINTER(win32more.System.Com.VARIANT_head), pAuthentication: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
class ICertSrvSetup(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('b760a1bb-4784-44c0-8f-12-55-5f-07-80-ff-25')
    @commethod(7)
    def get_CAErrorId(pVal: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_CAErrorString(pVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def InitializeDefaults(bServer: win32more.Foundation.VARIANT_BOOL, bClient: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetCASetupProperty(propertyId: win32more.Security.Cryptography.CASetupProperty, pPropertyValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def SetCASetupProperty(propertyId: win32more.Security.Cryptography.CASetupProperty, pPropertyValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def IsPropertyEditable(propertyId: win32more.Security.Cryptography.CASetupProperty, pbEditable: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def GetSupportedCATypes(pCATypes: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetProviderNameList(pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def GetKeyLengthList(bstrProviderName: win32more.Foundation.BSTR, pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def GetHashAlgorithmList(bstrProviderName: win32more.Foundation.BSTR, pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def GetPrivateKeyContainerList(bstrProviderName: win32more.Foundation.BSTR, pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def GetExistingCACertificates(ppVal: POINTER(win32more.Security.Cryptography.ICertSrvSetupKeyInformationCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def CAImportPFX(bstrFileName: win32more.Foundation.BSTR, bstrPasswd: win32more.Foundation.BSTR, bOverwriteExistingKey: win32more.Foundation.VARIANT_BOOL, ppVal: POINTER(win32more.Security.Cryptography.ICertSrvSetupKeyInformation_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def SetCADistinguishedName(bstrCADN: win32more.Foundation.BSTR, bIgnoreUnicode: win32more.Foundation.VARIANT_BOOL, bOverwriteExistingKey: win32more.Foundation.VARIANT_BOOL, bOverwriteExistingCAInDS: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def SetDatabaseInformation(bstrDBDirectory: win32more.Foundation.BSTR, bstrLogDirectory: win32more.Foundation.BSTR, bstrSharedFolder: win32more.Foundation.BSTR, bForceOverwrite: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def SetParentCAInformation(bstrCAConfiguration: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def SetWebCAInformation(bstrCAConfiguration: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def Install() -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def PreUnInstall(bClientOnly: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def PostUnInstall() -> win32more.Foundation.HRESULT: ...
class ICertSrvSetupKeyInformation(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('6ba73778-36da-4c39-8a-85-bc-fa-7d-00-07-93')
    @commethod(7)
    def get_ProviderName(pVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def put_ProviderName(bstrVal: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_Length(pVal: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def put_Length(lVal: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_Existing(pVal: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def put_Existing(bVal: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_ContainerName(pVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def put_ContainerName(bstrVal: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def get_HashAlgorithm(pVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def put_HashAlgorithm(bstrVal: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def get_ExistingCACertificate(pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def put_ExistingCACertificate(varVal: win32more.System.Com.VARIANT) -> win32more.Foundation.HRESULT: ...
class ICertSrvSetupKeyInformationCollection(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('e65c8b00-e58f-41f9-a9-ec-a2-8d-74-27-c8-44')
    @commethod(7)
    def get__NewEnum(ppVal: POINTER(win32more.System.Com.IUnknown_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_Item(Index: Int32, pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_Count(pVal: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def Add(pIKeyInformation: win32more.Security.Cryptography.ICertSrvSetupKeyInformation_head) -> win32more.Foundation.HRESULT: ...
class IMSCEPSetup(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('4f7761bb-9f3b-4592-9e-e0-9a-73-25-9c-31-3e')
    @commethod(7)
    def get_MSCEPErrorId(pVal: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_MSCEPErrorString(pVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def InitializeDefaults() -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetMSCEPSetupProperty(propertyId: win32more.Security.Cryptography.MSCEPSetupProperty, pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def SetMSCEPSetupProperty(propertyId: win32more.Security.Cryptography.MSCEPSetupProperty, pPropertyValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def SetAccountInformation(bstrUserName: win32more.Foundation.BSTR, bstrPassword: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def IsMSCEPStoreEmpty(pbEmpty: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetProviderNameList(bExchange: win32more.Foundation.VARIANT_BOOL, pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def GetKeyLengthList(bExchange: win32more.Foundation.VARIANT_BOOL, bstrProviderName: win32more.Foundation.BSTR, pVal: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def Install() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def PreUnInstall() -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def PostUnInstall() -> win32more.Foundation.HRESULT: ...
class INFORMATIONCARD_ASYMMETRIC_CRYPTO_PARAMETERS(Structure):
    keySize: Int32
    keyExchangeAlgorithm: win32more.Foundation.PWSTR
    signatureAlgorithm: win32more.Foundation.PWSTR
class INFORMATIONCARD_CRYPTO_HANDLE(Structure):
    type: win32more.Security.Cryptography.HandleType
    expiration: Int64
    cryptoParameters: c_void_p
class INFORMATIONCARD_HASH_CRYPTO_PARAMETERS(Structure):
    hashSize: Int32
    transform: win32more.Security.Cryptography.INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS
class INFORMATIONCARD_SYMMETRIC_CRYPTO_PARAMETERS(Structure):
    keySize: Int32
    blockSize: Int32
    feedbackSize: Int32
class INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS(Structure):
    inputBlockSize: Int32
    outputBlockSize: Int32
    canTransformMultipleBlocks: win32more.Foundation.BOOL
    canReuseTransform: win32more.Foundation.BOOL
class KEY_TYPE_SUBTYPE(Structure):
    dwKeySpec: UInt32
    Type: Guid
    Subtype: Guid
MSCEPSetupProperty = Int32
ENUM_CEPSETUPPROP_USELOCALSYSTEM: MSCEPSetupProperty = 0
ENUM_CEPSETUPPROP_USECHALLENGE: MSCEPSetupProperty = 1
ENUM_CEPSETUPPROP_RANAME_CN: MSCEPSetupProperty = 2
ENUM_CEPSETUPPROP_RANAME_EMAIL: MSCEPSetupProperty = 3
ENUM_CEPSETUPPROP_RANAME_COMPANY: MSCEPSetupProperty = 4
ENUM_CEPSETUPPROP_RANAME_DEPT: MSCEPSetupProperty = 5
ENUM_CEPSETUPPROP_RANAME_CITY: MSCEPSetupProperty = 6
ENUM_CEPSETUPPROP_RANAME_STATE: MSCEPSetupProperty = 7
ENUM_CEPSETUPPROP_RANAME_COUNTRY: MSCEPSetupProperty = 8
ENUM_CEPSETUPPROP_SIGNINGKEYINFORMATION: MSCEPSetupProperty = 9
ENUM_CEPSETUPPROP_EXCHANGEKEYINFORMATION: MSCEPSetupProperty = 10
ENUM_CEPSETUPPROP_CAINFORMATION: MSCEPSetupProperty = 11
ENUM_CEPSETUPPROP_MSCEPURL: MSCEPSetupProperty = 12
ENUM_CEPSETUPPROP_CHALLENGEURL: MSCEPSetupProperty = 13
NCRYPT_ALGORITHM_NAME_CLASS = UInt32
NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE: NCRYPT_ALGORITHM_NAME_CLASS = 3
NCRYPT_SECRET_AGREEMENT_INTERFACE: NCRYPT_ALGORITHM_NAME_CLASS = 4
NCRYPT_SIGNATURE_INTERFACE: NCRYPT_ALGORITHM_NAME_CLASS = 5
class NCRYPT_ALLOC_PARA(Structure):
    cbSize: UInt32
    pfnAlloc: win32more.Security.Cryptography.PFN_NCRYPT_ALLOC
    pfnFree: win32more.Security.Cryptography.PFN_NCRYPT_FREE
class NCRYPT_CIPHER_PADDING_INFO(Structure):
    cbSize: UInt32
    dwFlags: UInt32
    pbIV: c_char_p_no
    cbIV: UInt32
    pbOtherInfo: c_char_p_no
    cbOtherInfo: UInt32
class NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE(Structure):
    Header: win32more.Security.Cryptography.NCRYPT_EXPORTED_ISOLATED_KEY_HEADER
class NCRYPT_EXPORTED_ISOLATED_KEY_HEADER(Structure):
    Version: UInt32
    KeyUsage: UInt32
    _bitfield: UInt32
    cbAlgName: UInt32
    cbNonce: UInt32
    cbAuthTag: UInt32
    cbWrappingKey: UInt32
    cbIsolatedKey: UInt32
NCRYPT_FLAGS = UInt32
BCRYPT_PAD_NONE: NCRYPT_FLAGS = 1
BCRYPT_PAD_OAEP: NCRYPT_FLAGS = 4
BCRYPT_PAD_PKCS1: NCRYPT_FLAGS = 2
BCRYPT_PAD_PSS: NCRYPT_FLAGS = 8
NCRYPT_SILENT_FLAG: NCRYPT_FLAGS = 64
NCRYPT_NO_PADDING_FLAG: NCRYPT_FLAGS = 1
NCRYPT_PAD_OAEP_FLAG: NCRYPT_FLAGS = 4
NCRYPT_PAD_PKCS1_FLAG: NCRYPT_FLAGS = 2
NCRYPT_REGISTER_NOTIFY_FLAG: NCRYPT_FLAGS = 1
NCRYPT_UNREGISTER_NOTIFY_FLAG: NCRYPT_FLAGS = 2
NCRYPT_MACHINE_KEY_FLAG: NCRYPT_FLAGS = 32
NCRYPT_UNPROTECT_NO_DECRYPT: NCRYPT_FLAGS = 1
NCRYPT_OVERWRITE_KEY_FLAG: NCRYPT_FLAGS = 128
NCRYPT_NO_KEY_VALIDATION: NCRYPT_FLAGS = 8
NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG: NCRYPT_FLAGS = 512
NCRYPT_PAD_PSS_FLAG: NCRYPT_FLAGS = 8
NCRYPT_PERSIST_FLAG: NCRYPT_FLAGS = 2147483648
NCRYPT_PERSIST_ONLY_FLAG: NCRYPT_FLAGS = 1073741824
NCRYPT_HANDLE = UIntPtr
NCRYPT_HASH_HANDLE = UIntPtr
class NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES(Structure):
    Version: UInt32
    Flags: UInt32
    cbPublicKeyBlob: UInt32
class NCRYPT_KEY_ACCESS_POLICY_BLOB(Structure):
    dwVersion: UInt32
    dwPolicyFlags: UInt32
    cbUserSid: UInt32
    cbApplicationSid: UInt32
class NCRYPT_KEY_ATTEST_PADDING_INFO(Structure):
    magic: UInt32
    pbKeyBlob: c_char_p_no
    cbKeyBlob: UInt32
    pbKeyAuth: c_char_p_no
    cbKeyAuth: UInt32
class NCRYPT_KEY_BLOB_HEADER(Structure):
    cbSize: UInt32
    dwMagic: UInt32
    cbAlgName: UInt32
    cbKeyData: UInt32
NCRYPT_KEY_HANDLE = UIntPtr
NCRYPT_OPERATION = UInt32
NCRYPT_CIPHER_OPERATION: NCRYPT_OPERATION = 1
NCRYPT_HASH_OPERATION: NCRYPT_OPERATION = 2
NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION: NCRYPT_OPERATION = 4
NCRYPT_SECRET_AGREEMENT_OPERATION: NCRYPT_OPERATION = 8
NCRYPT_SIGNATURE_OPERATION: NCRYPT_OPERATION = 16
class NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO(Structure):
    dwVersion: UInt32
    iExpiration: Int32
    pabNonce: Byte * 32
    pabPolicyRef: Byte * 32
    pabHMAC: Byte * 32
class NCRYPT_PCP_RAW_POLICYDIGEST_INFO(Structure):
    dwVersion: UInt32
    cbDigest: UInt32
class NCRYPT_PCP_TPM_FW_VERSION_INFO(Structure):
    major1: UInt16
    major2: UInt16
    minor1: UInt16
    minor2: UInt16
class NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT(Structure):
    Magic: UInt32
    Version: UInt32
    HeaderSize: UInt32
    cbCertifyInfo: UInt32
    cbSignature: UInt32
    cbTpmPublic: UInt32
class NCRYPT_PLATFORM_ATTEST_PADDING_INFO(Structure):
    magic: UInt32
    pcrMask: UInt32
class NCRYPT_PROTECT_STREAM_INFO(Structure):
    pfnStreamOutput: win32more.Security.Cryptography.PFNCryptStreamOutputCallback
    pvCallbackCtxt: c_void_p
class NCRYPT_PROTECT_STREAM_INFO_EX(Structure):
    pfnStreamOutput: win32more.Security.Cryptography.PFNCryptStreamOutputCallbackEx
    pvCallbackCtxt: c_void_p
NCRYPT_PROV_HANDLE = UIntPtr
NCRYPT_SECRET_HANDLE = UIntPtr
class NCRYPT_SUPPORTED_LENGTHS(Structure):
    dwMinLength: UInt32
    dwMaxLength: UInt32
    dwIncrement: UInt32
    dwDefaultLength: UInt32
class NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER(Structure):
    magic: UInt32
    cbHeader: UInt32
    cbPublic: UInt32
    cbPrivate: UInt32
    cbName: UInt32
class NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT(Structure):
    Magic: UInt32
    Version: UInt32
    pcrAlg: UInt32
    cbSignature: UInt32
    cbQuote: UInt32
    cbPcrs: UInt32
class NCRYPT_UI_POLICY(Structure):
    dwVersion: UInt32
    dwFlags: UInt32
    pszCreationTitle: win32more.Foundation.PWSTR
    pszFriendlyName: win32more.Foundation.PWSTR
    pszDescription: win32more.Foundation.PWSTR
class NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS(Structure):
    Version: UInt32
    TrustletId: UInt64
    MinSvn: UInt32
    FlagsMask: UInt32
    FlagsExpected: UInt32
    _bitfield: UInt32
class NCRYPT_VSM_KEY_ATTESTATION_STATEMENT(Structure):
    Magic: UInt32
    Version: UInt32
    cbSignature: UInt32
    cbReport: UInt32
    cbAttributes: UInt32
class NCryptAlgorithmName(Structure):
    pszName: win32more.Foundation.PWSTR
    dwClass: win32more.Security.Cryptography.NCRYPT_ALGORITHM_NAME_CLASS
    dwAlgOperations: win32more.Security.Cryptography.NCRYPT_OPERATION
    dwFlags: UInt32
class NCryptKeyName(Structure):
    pszName: win32more.Foundation.PWSTR
    pszAlgid: win32more.Foundation.PWSTR
    dwLegacyKeySpec: win32more.Security.Cryptography.CERT_KEY_SPEC
    dwFlags: UInt32
class NCryptProviderName(Structure):
    pszName: win32more.Foundation.PWSTR
    pszComment: win32more.Foundation.PWSTR
class OCSP_BASIC_RESPONSE_ENTRY(Structure):
    CertId: win32more.Security.Cryptography.OCSP_CERT_ID
    dwCertStatus: UInt32
    Anonymous: _Anonymous_e__Union
    ThisUpdate: win32more.Foundation.FILETIME
    NextUpdate: win32more.Foundation.FILETIME
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
    class _Anonymous_e__Union(Union):
        pRevokedInfo: POINTER(win32more.Security.Cryptography.OCSP_BASIC_REVOKED_INFO_head)
class OCSP_BASIC_RESPONSE_INFO(Structure):
    dwVersion: UInt32
    dwResponderIdChoice: UInt32
    Anonymous: _Anonymous_e__Union
    ProducedAt: win32more.Foundation.FILETIME
    cResponseEntry: UInt32
    rgResponseEntry: POINTER(win32more.Security.Cryptography.OCSP_BASIC_RESPONSE_ENTRY_head)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
    class _Anonymous_e__Union(Union):
        ByNameResponderId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
        ByKeyResponderId: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class OCSP_BASIC_REVOKED_INFO(Structure):
    RevocationDate: win32more.Foundation.FILETIME
    dwCrlReasonCode: win32more.Security.Cryptography.CERT_REVOCATION_STATUS_REASON
class OCSP_BASIC_SIGNED_RESPONSE_INFO(Structure):
    ToBeSigned: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SignatureInfo: win32more.Security.Cryptography.OCSP_SIGNATURE_INFO
class OCSP_CERT_ID(Structure):
    HashAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    IssuerNameHash: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    IssuerKeyHash: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    SerialNumber: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class OCSP_REQUEST_ENTRY(Structure):
    CertId: win32more.Security.Cryptography.OCSP_CERT_ID
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class OCSP_REQUEST_INFO(Structure):
    dwVersion: UInt32
    pRequestorName: POINTER(win32more.Security.Cryptography.CERT_ALT_NAME_ENTRY_head)
    cRequestEntry: UInt32
    rgRequestEntry: POINTER(win32more.Security.Cryptography.OCSP_REQUEST_ENTRY_head)
    cExtension: UInt32
    rgExtension: POINTER(win32more.Security.Cryptography.CERT_EXTENSION_head)
class OCSP_RESPONSE_INFO(Structure):
    dwStatus: UInt32
    pszObjId: win32more.Foundation.PSTR
    Value: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
class OCSP_SIGNATURE_INFO(Structure):
    SignatureAlgorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER
    Signature: win32more.Security.Cryptography.CRYPT_BIT_BLOB
    cCertEncoded: UInt32
    rgCertEncoded: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)
class OCSP_SIGNED_REQUEST_INFO(Structure):
    ToBeSigned: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB
    pOptionalSignatureInfo: POINTER(win32more.Security.Cryptography.OCSP_SIGNATURE_INFO_head)
PaddingMode = Int32
PaddingMode_None: PaddingMode = 1
PaddingMode_PKCS7: PaddingMode = 2
PaddingMode_Zeros: PaddingMode = 3
PaddingMode_ANSIX923: PaddingMode = 4
PaddingMode_ISO10126: PaddingMode = 5
@winfunctype_pointer
def PCRYPT_DECRYPT_PRIVATE_KEY_FUNC(Algorithm: win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER, EncryptedPrivateKey: win32more.Security.Cryptography.CRYPT_INTEGER_BLOB, pbClearTextKey: c_char_p_no, pcbClearTextKey: POINTER(UInt32), pVoidDecryptFunc: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC(pAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pClearTextPrivateKey: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), pbEncryptedKey: c_char_p_no, pcbEncryptedKey: POINTER(UInt32), pVoidEncryptFunc: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PCRYPT_RESOLVE_HCRYPTPROV_FUNC(pPrivateKeyInfo: POINTER(win32more.Security.Cryptography.CRYPT_PRIVATE_KEY_INFO_head), phCryptProv: POINTER(UIntPtr), pVoidResolveFunc: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CANCEL_ASYNC_RETRIEVAL_FUNC(hAsyncRetrieve: win32more.Security.Cryptography.HCRYPTASYNC) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK(pCert: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pvFindArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_CREATE_CONTEXT_SORT_FUNC(cbTotalEncoded: UInt32, cbRemainEncoded: UInt32, cEntry: UInt32, pvSort: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_DLL_OPEN_STORE_PROV_FUNC(lpszStoreProvider: win32more.Foundation.PSTR, dwEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, hCryptProv: win32more.Security.Cryptography.HCRYPTPROV_LEGACY, dwFlags: win32more.Security.Cryptography.CERT_OPEN_STORE_FLAGS, pvPara: c_void_p, hCertStore: win32more.Security.Cryptography.HCERTSTORE, pStoreProvInfo: POINTER(win32more.Security.Cryptography.CERT_STORE_PROV_INFO_head)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_ENUM_PHYSICAL_STORE(pvSystemStore: c_void_p, dwFlags: UInt32, pwszStoreName: win32more.Foundation.PWSTR, pStoreInfo: POINTER(win32more.Security.Cryptography.CERT_PHYSICAL_STORE_INFO_head), pvReserved: c_void_p, pvArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_ENUM_SYSTEM_STORE(pvSystemStore: c_void_p, dwFlags: win32more.Security.Cryptography.CERT_SYSTEM_STORE_FLAGS, pStoreInfo: POINTER(win32more.Security.Cryptography.CERT_SYSTEM_STORE_INFO_head), pvReserved: c_void_p, pvArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_ENUM_SYSTEM_STORE_LOCATION(pwszStoreLocation: win32more.Foundation.PWSTR, dwFlags: UInt32, pvReserved: c_void_p, pvArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_IS_WEAK_HASH(dwHashUseType: UInt32, pwszCNGHashAlgid: win32more.Foundation.PWSTR, dwChainFlags: UInt32, pSignerChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head), pTimeStamp: POINTER(win32more.Foundation.FILETIME_head), pwszFileName: win32more.Foundation.PWSTR) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK(pChainContext: POINTER(win32more.Security.Cryptography.CERT_CHAIN_CONTEXT_head), pServerOcspResponseContext: POINTER(win32more.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT_head), pNewCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), pPrevCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), pvArg: c_void_p, dwWriteOcspFileError: UInt32) -> Void: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_CLOSE(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, dwFlags: UInt32) -> Void: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_CONTROL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, dwFlags: UInt32, dwCtrlType: UInt32, pvCtrlPara: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_DELETE_CERT(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_DELETE_CRL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_DELETE_CTL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FIND_CERT(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pFindInfo: POINTER(win32more.Security.Cryptography.CERT_STORE_PROV_FIND_INFO_head), pPrevCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: UInt32, ppvStoreProvFindInfo: POINTER(c_void_p), ppProvCertContext: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FIND_CRL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pFindInfo: POINTER(win32more.Security.Cryptography.CERT_STORE_PROV_FIND_INFO_head), pPrevCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwFlags: UInt32, ppvStoreProvFindInfo: POINTER(c_void_p), ppProvCrlContext: POINTER(POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FIND_CTL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pFindInfo: POINTER(win32more.Security.Cryptography.CERT_STORE_PROV_FIND_INFO_head), pPrevCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwFlags: UInt32, ppvStoreProvFindInfo: POINTER(c_void_p), ppProvCtlContext: POINTER(POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FREE_FIND_CERT(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), pvStoreProvFindInfo: c_void_p, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FREE_FIND_CRL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), pvStoreProvFindInfo: c_void_p, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_FREE_FIND_CTL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), pvStoreProvFindInfo: c_void_p, dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_GET_CERT_PROPERTY(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_GET_CRL_PROPERTY(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_GET_CTL_PROPERTY(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_READ_CERT(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pStoreCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: UInt32, ppProvCertContext: POINTER(POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_READ_CRL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pStoreCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwFlags: UInt32, ppProvCrlContext: POINTER(POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_READ_CTL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pStoreCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwFlags: UInt32, ppProvCtlContext: POINTER(POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head))) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_SET_CERT_PROPERTY(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_SET_CRL_PROPERTY(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_SET_CTL_PROPERTY(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwPropId: UInt32, dwFlags: UInt32, pvData: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_WRITE_CERT(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCertContext: POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_WRITE_CRL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCrlContext: POINTER(win32more.Security.Cryptography.CRL_CONTEXT_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CERT_STORE_PROV_WRITE_CTL(hStoreProv: win32more.Security.Cryptography.HCERTSTOREPROV, pCtlContext: POINTER(win32more.Security.Cryptography.CTL_CONTEXT_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_ALLOC(cb: UIntPtr) -> c_void_p: ...
@winfunctype_pointer
def PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY(pCNGContentDecryptInfo: POINTER(win32more.Security.Cryptography.CMSG_CNG_CONTENT_DECRYPT_INFO_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_CNG_IMPORT_KEY_AGREE(pCNGContentDecryptInfo: POINTER(win32more.Security.Cryptography.CMSG_CNG_CONTENT_DECRYPT_INFO_head), pKeyAgreeDecryptPara: POINTER(win32more.Security.Cryptography.CMSG_CTRL_KEY_AGREE_DECRYPT_PARA_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_CNG_IMPORT_KEY_TRANS(pCNGContentDecryptInfo: POINTER(win32more.Security.Cryptography.CMSG_CNG_CONTENT_DECRYPT_INFO_head), pKeyTransDecryptPara: POINTER(win32more.Security.Cryptography.CMSG_CTRL_KEY_TRANS_DECRYPT_PARA_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_ENCRYPT_KEY(hCryptProv: UIntPtr, hEncryptKey: UIntPtr, pPublicKeyInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pbData: c_char_p_no, pcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_KEY_AGREE(pContentEncryptInfo: POINTER(win32more.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO_head), pKeyAgreeEncodeInfo: POINTER(win32more.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO_head), pKeyAgreeEncryptInfo: POINTER(win32more.Security.Cryptography.CMSG_KEY_AGREE_ENCRYPT_INFO_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_KEY_TRANS(pContentEncryptInfo: POINTER(win32more.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO_head), pKeyTransEncodeInfo: POINTER(win32more.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO_head), pKeyTransEncryptInfo: POINTER(win32more.Security.Cryptography.CMSG_KEY_TRANS_ENCRYPT_INFO_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_EXPORT_MAIL_LIST(pContentEncryptInfo: POINTER(win32more.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO_head), pMailListEncodeInfo: POINTER(win32more.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO_head), pMailListEncryptInfo: POINTER(win32more.Security.Cryptography.CMSG_MAIL_LIST_ENCRYPT_INFO_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_FREE(pv: c_void_p) -> Void: ...
@winfunctype_pointer
def PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY(pContentEncryptInfo: POINTER(win32more.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO_head), dwFlags: UInt32, pvReserved: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_GEN_ENCRYPT_KEY(phCryptProv: POINTER(UIntPtr), paiEncrypt: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pvEncryptAuxInfo: c_void_p, pPublicKeyInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pfnAlloc: win32more.Security.Cryptography.PFN_CMSG_ALLOC, phEncryptKey: POINTER(UIntPtr), ppbEncryptParameters: POINTER(c_char_p_no), pcbEncryptParameters: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_ENCRYPT_KEY(hCryptProv: UIntPtr, dwKeySpec: UInt32, paiEncrypt: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), paiPubKey: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pbEncodedKey: c_char_p_no, cbEncodedKey: UInt32, phEncryptKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_KEY_AGREE(pContentEncryptionAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pKeyAgreeDecryptPara: POINTER(win32more.Security.Cryptography.CMSG_CTRL_KEY_AGREE_DECRYPT_PARA_head), dwFlags: UInt32, pvReserved: c_void_p, phContentEncryptKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_KEY_TRANS(pContentEncryptionAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pKeyTransDecryptPara: POINTER(win32more.Security.Cryptography.CMSG_CTRL_KEY_TRANS_DECRYPT_PARA_head), dwFlags: UInt32, pvReserved: c_void_p, phContentEncryptKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_IMPORT_MAIL_LIST(pContentEncryptionAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pMailListDecryptPara: POINTER(win32more.Security.Cryptography.CMSG_CTRL_MAIL_LIST_DECRYPT_PARA_head), dwFlags: UInt32, pvReserved: c_void_p, phContentEncryptKey: POINTER(UIntPtr)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CMSG_STREAM_OUTPUT(pvArg: c_void_p, pbData: c_char_p_no, cbData: UInt32, fFinal: win32more.Foundation.BOOL) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ALLOC(cbSize: UIntPtr) -> c_void_p: ...
@winfunctype_pointer
def PFN_CRYPT_ASYNC_PARAM_FREE_FUNC(pszParamOid: win32more.Foundation.PSTR, pvParam: c_void_p) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC(pvCompletion: c_void_p, dwCompletionCode: UInt32, pszUrl: win32more.Foundation.PSTR, pszObjectOid: win32more.Foundation.PSTR, pvObject: c_void_p) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_CANCEL_RETRIEVAL(dwFlags: UInt32, pvArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ENUM_KEYID_PROP(pKeyIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwFlags: UInt32, pvReserved: c_void_p, pvArg: c_void_p, cProp: UInt32, rgdwPropId: POINTER(UInt32), rgpvData: POINTER(c_void_p), rgcbData: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ENUM_OID_FUNC(dwEncodingType: UInt32, pszFuncName: win32more.Foundation.PSTR, pszOID: win32more.Foundation.PSTR, cValue: UInt32, rgdwValueType: POINTER(UInt32), rgpwszValueName: POINTER(win32more.Foundation.PWSTR), rgpbValueData: POINTER(c_char_p_no), rgcbValueData: POINTER(UInt32), pvArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_ENUM_OID_INFO(pInfo: POINTER(win32more.Security.Cryptography.CRYPT_OID_INFO_head), pvArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC(hNCryptKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: c_void_p, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pcbInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC(hBCryptKey: win32more.Security.Cryptography.BCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pszPublicKeyObjId: win32more.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: c_void_p, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pcbInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pSignatureAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), ppvDecodedSignPara: POINTER(c_void_p), ppwszCNGHashAlgid: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_FREE(pv: c_void_p) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_GET_SIGNER_CERTIFICATE(pvGetArg: c_void_p, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pSignerId: POINTER(win32more.Security.Cryptography.CERT_INFO_head), hMsgCertStore: win32more.Security.Cryptography.HCERTSTORE) -> POINTER(win32more.Security.Cryptography.CERT_CONTEXT_head): ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH(pContext: c_void_p, rgIdentifierOrNameList: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)), dwIdentifierOrNameListCount: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE(pPluginContext: c_void_p, pbData: c_char_p_no) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER(pPluginContext: c_void_p, pIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head)) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD(pPluginContext: c_void_p, pwszPassword: win32more.Foundation.PWSTR) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET(pPluginContext: c_void_p, pIdentifier: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), dwNameType: UInt32, pNameBlob: POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head), ppbContent: POINTER(c_char_p_no), pcbContent: POINTER(UInt32), ppwszPassword: POINTER(win32more.Foundation.PWSTR), ppIdentifier: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_INTEGER_BLOB_head))) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE(pfnFlush: win32more.Security.Cryptography.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH, pContext: c_void_p, pdwExpectedObjectCount: POINTER(UInt32), ppFuncTable: POINTER(POINTER(win32more.Security.Cryptography.CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE_head)), ppPluginContext: POINTER(c_void_p)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE(dwReason: win32more.Security.Cryptography.CRYPT_OBJECT_LOCATOR_RELEASE_REASON, pPluginContext: c_void_p) -> Void: ...
@winfunctype_pointer
def PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC(hKey: win32more.Security.Cryptography.NCRYPT_KEY_HANDLE, dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pSignatureAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pvDecodedSignPara: c_void_p, pwszCNGPubKeyAlgid: win32more.Foundation.PWSTR, pwszCNGHashAlgid: win32more.Foundation.PWSTR, pbComputedHash: c_char_p_no, cbComputedHash: UInt32, pbSignature: c_char_p_no, pcbSignature: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pPubKeyInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), pSignatureAlgorithm: POINTER(win32more.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER_head), pvDecodedSignPara: c_void_p, pwszCNGPubKeyAlgid: win32more.Foundation.PWSTR, pwszCNGHashAlgid: win32more.Foundation.PWSTR, pbComputedHash: c_char_p_no, cbComputedHash: UInt32, pbSignature: c_char_p_no, cbSignature: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_XML_CREATE_TRANSFORM(pTransform: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_head), pProviderIn: POINTER(win32more.Security.Cryptography.CRYPT_XML_DATA_PROVIDER_head), pProviderOut: POINTER(win32more.Security.Cryptography.CRYPT_XML_DATA_PROVIDER_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CRYPT_XML_DATA_PROVIDER_CLOSE(pvCallbackState: c_void_p) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CRYPT_XML_DATA_PROVIDER_READ(pvCallbackState: c_void_p, pbData: c_char_p_no, cbData: UInt32, pcbRead: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_CRYPT_XML_ENUM_ALG_INFO(pInfo: POINTER(win32more.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO_head), pvArg: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_CRYPT_XML_WRITE_CALLBACK(pvCallbackState: c_void_p, pbData: c_char_p_no, cbData: UInt32) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def PFN_EXPORT_PRIV_KEY_FUNC(hCryptProv: UIntPtr, dwKeySpec: UInt32, pszPrivateKeyObjId: win32more.Foundation.PSTR, dwFlags: UInt32, pvAuxInfo: c_void_p, pPrivateKeyInfo: POINTER(win32more.Security.Cryptography.CRYPT_PRIVATE_KEY_INFO_head), pcbPrivateKeyInfo: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_FREE_ENCODED_OBJECT_FUNC(pszObjectOid: win32more.Foundation.PSTR, pObject: POINTER(win32more.Security.Cryptography.CRYPT_BLOB_ARRAY_head), pvFreeContext: c_void_p) -> Void: ...
@winfunctype_pointer
def PFN_IMPORT_PRIV_KEY_FUNC(hCryptProv: UIntPtr, pPrivateKeyInfo: POINTER(win32more.Security.Cryptography.CRYPT_PRIVATE_KEY_INFO_head), dwFlags: UInt32, pvAuxInfo: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC(dwCertEncodingType: win32more.Security.Cryptography.CERT_QUERY_ENCODING_TYPE, pInfo: POINTER(win32more.Security.Cryptography.CERT_PUBLIC_KEY_INFO_head), dwFlags: UInt32, pvAuxInfo: c_void_p, phKey: POINTER(win32more.Security.Cryptography.BCRYPT_KEY_HANDLE)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def PFN_NCRYPT_ALLOC(cbSize: UIntPtr) -> c_void_p: ...
@winfunctype_pointer
def PFN_NCRYPT_FREE(pv: c_void_p) -> Void: ...
@winfunctype_pointer
def PFNCryptStreamOutputCallback(pvCallbackCtxt: c_void_p, pbData: c_char_p_no, cbData: UIntPtr, fFinal: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
@winfunctype_pointer
def PFNCryptStreamOutputCallbackEx(pvCallbackCtxt: c_void_p, pbData: c_char_p_no, cbData: UIntPtr, hDescriptor: win32more.Security.NCRYPT_DESCRIPTOR_HANDLE, fFinal: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
class PKCS12_PBES2_EXPORT_PARAMS(Structure):
    dwSize: UInt32
    hNcryptDescriptor: c_void_p
    pwszPbes2Alg: win32more.Foundation.PWSTR
class POLICY_ELEMENT(Structure):
    targetEndpointAddress: win32more.Foundation.PWSTR
    issuerEndpointAddress: win32more.Foundation.PWSTR
    issuedTokenParameters: win32more.Foundation.PWSTR
    privacyNoticeLink: win32more.Foundation.PWSTR
    privacyNoticeVersion: UInt32
    useManagedPresentation: win32more.Foundation.BOOL
class PRIVKEYVER3(Structure):
    magic: UInt32
    bitlenP: UInt32
    bitlenQ: UInt32
    bitlenJ: UInt32
    bitlenX: UInt32
    DSSSeed: win32more.Security.Cryptography.DSSSEED
class PROV_ENUMALGS(Structure):
    aiAlgid: UInt32
    dwBitLen: UInt32
    dwNameLen: UInt32
    szName: win32more.Foundation.CHAR * 20
class PROV_ENUMALGS_EX(Structure):
    aiAlgid: UInt32
    dwDefaultLen: UInt32
    dwMinLen: UInt32
    dwMaxLen: UInt32
    dwProtocols: UInt32
    dwNameLen: UInt32
    szName: win32more.Foundation.CHAR * 20
    dwLongNameLen: UInt32
    szLongName: win32more.Foundation.CHAR * 40
class PUBKEY(Structure):
    magic: UInt32
    bitlen: UInt32
class PUBKEYVER3(Structure):
    magic: UInt32
    bitlenP: UInt32
    bitlenQ: UInt32
    bitlenJ: UInt32
    DSSSeed: win32more.Security.Cryptography.DSSSEED
class PUBLICKEYSTRUC(Structure):
    bType: Byte
    bVersion: Byte
    reserved: UInt16
    aiKeyAlg: UInt32
class RECIPIENTPOLICY(Structure):
    recipient: win32more.Security.Cryptography.ENDPOINTADDRESS
    issuer: win32more.Security.Cryptography.ENDPOINTADDRESS
    tokenType: win32more.Foundation.PWSTR
    requiredClaims: win32more.Security.Cryptography.CLAIMLIST
    optionalClaims: win32more.Security.Cryptography.CLAIMLIST
    privacyUrl: win32more.Foundation.PWSTR
    privacyVersion: UInt32
class RECIPIENTPOLICY2(Structure):
    recipient: win32more.Security.Cryptography.ENDPOINTADDRESS2
    issuer: win32more.Security.Cryptography.ENDPOINTADDRESS2
    tokenType: win32more.Foundation.PWSTR
    requiredClaims: win32more.Security.Cryptography.CLAIMLIST
    optionalClaims: win32more.Security.Cryptography.CLAIMLIST
    privacyUrl: win32more.Foundation.PWSTR
    privacyVersion: UInt32
class ROOT_INFO_LUID(Structure):
    LowPart: UInt32
    HighPart: Int32
class RSAPUBKEY(Structure):
    magic: UInt32
    bitlen: UInt32
    pubexp: UInt32
class SCHANNEL_ALG(Structure):
    dwUse: UInt32
    Algid: UInt32
    cBits: UInt32
    dwFlags: UInt32
    dwReserved: UInt32
class SSL_ECCKEY_BLOB(Structure):
    dwCurveType: UInt32
    cbKey: UInt32
class SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    dwErrorLevel: UInt32
    dwErrorCategory: UInt32
    dwReserved: UInt32
    wszErrorText: Char * 256
class SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwReserved: UInt32
    pwszServerName: win32more.Foundation.PWSTR
    rgpszHpkpValue: win32more.Foundation.PSTR * 2
class SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA(Structure):
    cbSize: UInt32
    dwReserved: UInt32
    pwszServerName: win32more.Foundation.PWSTR
class SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS(Structure):
    cbSize: UInt32
    lError: Int32
    wszErrorText: Char * 512
make_head(_module, 'AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA')
make_head(_module, 'AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS')
make_head(_module, 'AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA')
make_head(_module, 'BCRYPT_ALGORITHM_IDENTIFIER')
make_head(_module, 'BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO')
make_head(_module, 'BCRYPT_DH_KEY_BLOB')
make_head(_module, 'BCRYPT_DH_PARAMETER_HEADER')
make_head(_module, 'BCRYPT_DSA_KEY_BLOB')
make_head(_module, 'BCRYPT_DSA_KEY_BLOB_V2')
make_head(_module, 'BCRYPT_DSA_PARAMETER_HEADER')
make_head(_module, 'BCRYPT_DSA_PARAMETER_HEADER_V2')
make_head(_module, 'BCRYPT_ECC_CURVE_NAMES')
make_head(_module, 'BCRYPT_ECCFULLKEY_BLOB')
make_head(_module, 'BCRYPT_ECCKEY_BLOB')
make_head(_module, 'BCRYPT_INTERFACE_VERSION')
make_head(_module, 'BCRYPT_KEY_BLOB')
make_head(_module, 'BCRYPT_KEY_DATA_BLOB_HEADER')
make_head(_module, 'BCRYPT_KEY_LENGTHS_STRUCT')
make_head(_module, 'BCRYPT_MULTI_HASH_OPERATION')
make_head(_module, 'BCRYPT_MULTI_OBJECT_LENGTH_STRUCT')
make_head(_module, 'BCRYPT_OAEP_PADDING_INFO')
make_head(_module, 'BCRYPT_OID')
make_head(_module, 'BCRYPT_OID_LIST')
make_head(_module, 'BCRYPT_PKCS1_PADDING_INFO')
make_head(_module, 'BCRYPT_PROVIDER_NAME')
make_head(_module, 'BCRYPT_PSS_PADDING_INFO')
make_head(_module, 'BCRYPT_RSAKEY_BLOB')
make_head(_module, 'BCryptBuffer')
make_head(_module, 'BCryptBufferDesc')
make_head(_module, 'CERT_ACCESS_DESCRIPTION')
make_head(_module, 'CERT_ALT_NAME_ENTRY')
make_head(_module, 'CERT_ALT_NAME_INFO')
make_head(_module, 'CERT_AUTHORITY_INFO_ACCESS')
make_head(_module, 'CERT_AUTHORITY_KEY_ID_INFO')
make_head(_module, 'CERT_AUTHORITY_KEY_ID2_INFO')
make_head(_module, 'CERT_BASIC_CONSTRAINTS_INFO')
make_head(_module, 'CERT_BASIC_CONSTRAINTS2_INFO')
make_head(_module, 'CERT_BIOMETRIC_DATA')
make_head(_module, 'CERT_BIOMETRIC_EXT_INFO')
make_head(_module, 'CERT_CHAIN')
make_head(_module, 'CERT_CHAIN_CONTEXT')
make_head(_module, 'CERT_CHAIN_ELEMENT')
make_head(_module, 'CERT_CHAIN_ENGINE_CONFIG')
make_head(_module, 'CERT_CHAIN_FIND_BY_ISSUER_PARA')
make_head(_module, 'CERT_CHAIN_PARA')
make_head(_module, 'CERT_CHAIN_POLICY_PARA')
make_head(_module, 'CERT_CHAIN_POLICY_STATUS')
make_head(_module, 'CERT_CONTEXT')
make_head(_module, 'CERT_CREATE_CONTEXT_PARA')
make_head(_module, 'CERT_CRL_CONTEXT_PAIR')
make_head(_module, 'CERT_DH_PARAMETERS')
make_head(_module, 'CERT_DSS_PARAMETERS')
make_head(_module, 'CERT_ECC_SIGNATURE')
make_head(_module, 'CERT_EXTENSION')
make_head(_module, 'CERT_EXTENSIONS')
make_head(_module, 'CERT_FORTEZZA_DATA_PROP')
make_head(_module, 'CERT_GENERAL_SUBTREE')
make_head(_module, 'CERT_HASHED_URL')
make_head(_module, 'CERT_ID')
make_head(_module, 'CERT_INFO')
make_head(_module, 'CERT_ISSUER_SERIAL_NUMBER')
make_head(_module, 'CERT_KEY_ATTRIBUTES_INFO')
make_head(_module, 'CERT_KEY_CONTEXT')
make_head(_module, 'CERT_KEY_USAGE_RESTRICTION_INFO')
make_head(_module, 'CERT_KEYGEN_REQUEST_INFO')
make_head(_module, 'CERT_LDAP_STORE_OPENED_PARA')
make_head(_module, 'CERT_LOGOTYPE_AUDIO')
make_head(_module, 'CERT_LOGOTYPE_AUDIO_INFO')
make_head(_module, 'CERT_LOGOTYPE_DATA')
make_head(_module, 'CERT_LOGOTYPE_DETAILS')
make_head(_module, 'CERT_LOGOTYPE_EXT_INFO')
make_head(_module, 'CERT_LOGOTYPE_IMAGE')
make_head(_module, 'CERT_LOGOTYPE_IMAGE_INFO')
make_head(_module, 'CERT_LOGOTYPE_INFO')
make_head(_module, 'CERT_LOGOTYPE_REFERENCE')
make_head(_module, 'CERT_NAME_CONSTRAINTS_INFO')
make_head(_module, 'CERT_NAME_INFO')
make_head(_module, 'CERT_NAME_VALUE')
make_head(_module, 'CERT_OR_CRL_BLOB')
make_head(_module, 'CERT_OR_CRL_BUNDLE')
make_head(_module, 'CERT_OTHER_LOGOTYPE_INFO')
make_head(_module, 'CERT_OTHER_NAME')
make_head(_module, 'CERT_PAIR')
make_head(_module, 'CERT_PHYSICAL_STORE_INFO')
make_head(_module, 'CERT_POLICIES_INFO')
make_head(_module, 'CERT_POLICY_CONSTRAINTS_INFO')
make_head(_module, 'CERT_POLICY_ID')
make_head(_module, 'CERT_POLICY_INFO')
make_head(_module, 'CERT_POLICY_MAPPING')
make_head(_module, 'CERT_POLICY_MAPPINGS_INFO')
make_head(_module, 'CERT_POLICY_QUALIFIER_INFO')
make_head(_module, 'CERT_POLICY_QUALIFIER_NOTICE_REFERENCE')
make_head(_module, 'CERT_POLICY_QUALIFIER_USER_NOTICE')
make_head(_module, 'CERT_POLICY95_QUALIFIER1')
make_head(_module, 'CERT_PRIVATE_KEY_VALIDITY')
make_head(_module, 'CERT_PUBLIC_KEY_INFO')
make_head(_module, 'CERT_QC_STATEMENT')
make_head(_module, 'CERT_QC_STATEMENTS_EXT_INFO')
make_head(_module, 'CERT_RDN')
make_head(_module, 'CERT_RDN_ATTR')
make_head(_module, 'CERT_REGISTRY_STORE_CLIENT_GPT_PARA')
make_head(_module, 'CERT_REGISTRY_STORE_ROAMING_PARA')
make_head(_module, 'CERT_REQUEST_INFO')
make_head(_module, 'CERT_REVOCATION_CHAIN_PARA')
make_head(_module, 'CERT_REVOCATION_CRL_INFO')
make_head(_module, 'CERT_REVOCATION_INFO')
make_head(_module, 'CERT_REVOCATION_PARA')
make_head(_module, 'CERT_REVOCATION_STATUS')
make_head(_module, 'CERT_SELECT_CHAIN_PARA')
make_head(_module, 'CERT_SELECT_CRITERIA')
make_head(_module, 'CERT_SERVER_OCSP_RESPONSE_CONTEXT')
make_head(_module, 'CERT_SERVER_OCSP_RESPONSE_OPEN_PARA')
make_head(_module, 'CERT_SIGNED_CONTENT_INFO')
make_head(_module, 'CERT_SIMPLE_CHAIN')
make_head(_module, 'CERT_STORE_PROV_FIND_INFO')
make_head(_module, 'CERT_STORE_PROV_INFO')
make_head(_module, 'CERT_STRONG_SIGN_PARA')
make_head(_module, 'CERT_STRONG_SIGN_SERIALIZED_INFO')
make_head(_module, 'CERT_SUPPORTED_ALGORITHM_INFO')
make_head(_module, 'CERT_SYSTEM_STORE_INFO')
make_head(_module, 'CERT_SYSTEM_STORE_RELOCATE_PARA')
make_head(_module, 'CERT_TEMPLATE_EXT')
make_head(_module, 'CERT_TPM_SPECIFICATION_INFO')
make_head(_module, 'CERT_TRUST_LIST_INFO')
make_head(_module, 'CERT_TRUST_STATUS')
make_head(_module, 'CERT_USAGE_MATCH')
make_head(_module, 'CERT_X942_DH_PARAMETERS')
make_head(_module, 'CERT_X942_DH_VALIDATION_PARAMS')
make_head(_module, 'CERTIFICATE_CHAIN_BLOB')
make_head(_module, 'CLAIMLIST')
make_head(_module, 'CMC_ADD_ATTRIBUTES_INFO')
make_head(_module, 'CMC_ADD_EXTENSIONS_INFO')
make_head(_module, 'CMC_DATA_INFO')
make_head(_module, 'CMC_PEND_INFO')
make_head(_module, 'CMC_RESPONSE_INFO')
make_head(_module, 'CMC_STATUS_INFO')
make_head(_module, 'CMC_TAGGED_ATTRIBUTE')
make_head(_module, 'CMC_TAGGED_CERT_REQUEST')
make_head(_module, 'CMC_TAGGED_CONTENT_INFO')
make_head(_module, 'CMC_TAGGED_OTHER_MSG')
make_head(_module, 'CMC_TAGGED_REQUEST')
make_head(_module, 'CMS_DH_KEY_INFO')
make_head(_module, 'CMS_KEY_INFO')
make_head(_module, 'CMSG_CMS_RECIPIENT_INFO')
make_head(_module, 'CMSG_CMS_SIGNER_INFO')
make_head(_module, 'CMSG_CNG_CONTENT_DECRYPT_INFO')
make_head(_module, 'CMSG_CONTENT_ENCRYPT_INFO')
make_head(_module, 'CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA')
make_head(_module, 'CMSG_CTRL_DECRYPT_PARA')
make_head(_module, 'CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA')
make_head(_module, 'CMSG_CTRL_KEY_AGREE_DECRYPT_PARA')
make_head(_module, 'CMSG_CTRL_KEY_TRANS_DECRYPT_PARA')
make_head(_module, 'CMSG_CTRL_MAIL_LIST_DECRYPT_PARA')
make_head(_module, 'CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA')
make_head(_module, 'CMSG_ENCRYPTED_ENCODE_INFO')
make_head(_module, 'CMSG_ENVELOPED_ENCODE_INFO')
make_head(_module, 'CMSG_HASHED_ENCODE_INFO')
make_head(_module, 'CMSG_KEY_AGREE_ENCRYPT_INFO')
make_head(_module, 'CMSG_KEY_AGREE_KEY_ENCRYPT_INFO')
make_head(_module, 'CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO')
make_head(_module, 'CMSG_KEY_AGREE_RECIPIENT_INFO')
make_head(_module, 'CMSG_KEY_TRANS_ENCRYPT_INFO')
make_head(_module, 'CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO')
make_head(_module, 'CMSG_KEY_TRANS_RECIPIENT_INFO')
make_head(_module, 'CMSG_MAIL_LIST_ENCRYPT_INFO')
make_head(_module, 'CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO')
make_head(_module, 'CMSG_MAIL_LIST_RECIPIENT_INFO')
make_head(_module, 'CMSG_RC2_AUX_INFO')
make_head(_module, 'CMSG_RC4_AUX_INFO')
make_head(_module, 'CMSG_RECIPIENT_ENCODE_INFO')
make_head(_module, 'CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO')
make_head(_module, 'CMSG_RECIPIENT_ENCRYPTED_KEY_INFO')
make_head(_module, 'CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO')
make_head(_module, 'CMSG_SIGNED_ENCODE_INFO')
make_head(_module, 'CMSG_SIGNER_ENCODE_INFO')
make_head(_module, 'CMSG_SIGNER_INFO')
make_head(_module, 'CMSG_SP3_COMPATIBLE_AUX_INFO')
make_head(_module, 'CMSG_STREAM_INFO')
make_head(_module, 'CPS_URLS')
make_head(_module, 'CRL_CONTEXT')
make_head(_module, 'CRL_DIST_POINT')
make_head(_module, 'CRL_DIST_POINT_NAME')
make_head(_module, 'CRL_DIST_POINTS_INFO')
make_head(_module, 'CRL_ENTRY')
make_head(_module, 'CRL_FIND_ISSUED_FOR_PARA')
make_head(_module, 'CRL_INFO')
make_head(_module, 'CRL_ISSUING_DIST_POINT')
make_head(_module, 'CRL_REVOCATION_INFO')
make_head(_module, 'CROSS_CERT_DIST_POINTS_INFO')
make_head(_module, 'CRYPT_3DES_KEY_STATE')
make_head(_module, 'CRYPT_AES_128_KEY_STATE')
make_head(_module, 'CRYPT_AES_256_KEY_STATE')
make_head(_module, 'CRYPT_ALGORITHM_IDENTIFIER')
make_head(_module, 'CRYPT_ASYNC_RETRIEVAL_COMPLETION')
make_head(_module, 'CRYPT_ATTRIBUTE')
make_head(_module, 'CRYPT_ATTRIBUTE_TYPE_VALUE')
make_head(_module, 'CRYPT_ATTRIBUTES')
make_head(_module, 'CRYPT_BIT_BLOB')
make_head(_module, 'CRYPT_BLOB_ARRAY')
make_head(_module, 'CRYPT_CONTENT_INFO')
make_head(_module, 'CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY')
make_head(_module, 'CRYPT_CONTEXT_CONFIG')
make_head(_module, 'CRYPT_CONTEXT_FUNCTION_CONFIG')
make_head(_module, 'CRYPT_CONTEXT_FUNCTION_PROVIDERS')
make_head(_module, 'CRYPT_CONTEXT_FUNCTIONS')
make_head(_module, 'CRYPT_CONTEXTS')
make_head(_module, 'CRYPT_CREDENTIALS')
make_head(_module, 'CRYPT_CSP_PROVIDER')
make_head(_module, 'CRYPT_DECODE_PARA')
make_head(_module, 'CRYPT_DECRYPT_MESSAGE_PARA')
make_head(_module, 'CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA')
make_head(_module, 'CRYPT_DES_KEY_STATE')
make_head(_module, 'CRYPT_ECC_CMS_SHARED_INFO')
make_head(_module, 'CRYPT_ECC_PRIVATE_KEY_INFO')
make_head(_module, 'CRYPT_ENCODE_PARA')
make_head(_module, 'CRYPT_ENCRYPT_MESSAGE_PARA')
make_head(_module, 'CRYPT_ENCRYPTED_PRIVATE_KEY_INFO')
make_head(_module, 'CRYPT_ENROLLMENT_NAME_VALUE_PAIR')
make_head(_module, 'CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO')
make_head(_module, 'CRYPT_HASH_INFO')
make_head(_module, 'CRYPT_HASH_MESSAGE_PARA')
make_head(_module, 'CRYPT_IMAGE_REF')
make_head(_module, 'CRYPT_IMAGE_REG')
make_head(_module, 'CRYPT_INTEGER_BLOB')
make_head(_module, 'CRYPT_INTERFACE_REG')
make_head(_module, 'CRYPT_KEY_PROV_INFO')
make_head(_module, 'CRYPT_KEY_PROV_PARAM')
make_head(_module, 'CRYPT_KEY_SIGN_MESSAGE_PARA')
make_head(_module, 'CRYPT_KEY_VERIFY_MESSAGE_PARA')
make_head(_module, 'CRYPT_MASK_GEN_ALGORITHM')
make_head(_module, 'CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE')
make_head(_module, 'CRYPT_OBJID_TABLE')
make_head(_module, 'CRYPT_OID_FUNC_ENTRY')
make_head(_module, 'CRYPT_OID_INFO')
make_head(_module, 'CRYPT_PASSWORD_CREDENTIALSA')
make_head(_module, 'CRYPT_PASSWORD_CREDENTIALSW')
make_head(_module, 'CRYPT_PKCS12_PBE_PARAMS')
make_head(_module, 'CRYPT_PKCS8_EXPORT_PARAMS')
make_head(_module, 'CRYPT_PKCS8_IMPORT_PARAMS')
make_head(_module, 'CRYPT_PRIVATE_KEY_INFO')
make_head(_module, 'CRYPT_PROPERTY_REF')
make_head(_module, 'CRYPT_PROVIDER_REF')
make_head(_module, 'CRYPT_PROVIDER_REFS')
make_head(_module, 'CRYPT_PROVIDER_REG')
make_head(_module, 'CRYPT_PROVIDERS')
make_head(_module, 'CRYPT_PSOURCE_ALGORITHM')
make_head(_module, 'CRYPT_RC2_CBC_PARAMETERS')
make_head(_module, 'CRYPT_RC4_KEY_STATE')
make_head(_module, 'CRYPT_RETRIEVE_AUX_INFO')
make_head(_module, 'CRYPT_RSA_SSA_PSS_PARAMETERS')
make_head(_module, 'CRYPT_RSAES_OAEP_PARAMETERS')
make_head(_module, 'CRYPT_SEQUENCE_OF_ANY')
make_head(_module, 'CRYPT_SIGN_MESSAGE_PARA')
make_head(_module, 'CRYPT_SMART_CARD_ROOT_INFO')
make_head(_module, 'CRYPT_SMIME_CAPABILITIES')
make_head(_module, 'CRYPT_SMIME_CAPABILITY')
make_head(_module, 'CRYPT_TIME_STAMP_REQUEST_INFO')
make_head(_module, 'CRYPT_TIMESTAMP_ACCURACY')
make_head(_module, 'CRYPT_TIMESTAMP_CONTEXT')
make_head(_module, 'CRYPT_TIMESTAMP_INFO')
make_head(_module, 'CRYPT_TIMESTAMP_PARA')
make_head(_module, 'CRYPT_TIMESTAMP_REQUEST')
make_head(_module, 'CRYPT_TIMESTAMP_RESPONSE')
make_head(_module, 'CRYPT_URL_ARRAY')
make_head(_module, 'CRYPT_URL_INFO')
make_head(_module, 'CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO')
make_head(_module, 'CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO')
make_head(_module, 'CRYPT_VERIFY_MESSAGE_PARA')
make_head(_module, 'CRYPT_X942_OTHER_INFO')
make_head(_module, 'CRYPT_XML_ALGORITHM')
make_head(_module, 'CRYPT_XML_ALGORITHM_INFO')
make_head(_module, 'CRYPT_XML_BLOB')
make_head(_module, 'CRYPT_XML_CRYPTOGRAPHIC_INTERFACE')
make_head(_module, 'CRYPT_XML_DATA_BLOB')
make_head(_module, 'CRYPT_XML_DATA_PROVIDER')
make_head(_module, 'CRYPT_XML_DOC_CTXT')
make_head(_module, 'CRYPT_XML_ISSUER_SERIAL')
make_head(_module, 'CRYPT_XML_KEY_DSA_KEY_VALUE')
make_head(_module, 'CRYPT_XML_KEY_ECDSA_KEY_VALUE')
make_head(_module, 'CRYPT_XML_KEY_INFO')
make_head(_module, 'CRYPT_XML_KEY_INFO_ITEM')
make_head(_module, 'CRYPT_XML_KEY_RSA_KEY_VALUE')
make_head(_module, 'CRYPT_XML_KEY_VALUE')
make_head(_module, 'CRYPT_XML_KEYINFO_PARAM')
make_head(_module, 'CRYPT_XML_OBJECT')
make_head(_module, 'CRYPT_XML_PROPERTY')
make_head(_module, 'CRYPT_XML_REFERENCE')
make_head(_module, 'CRYPT_XML_REFERENCES')
make_head(_module, 'CRYPT_XML_SIGNATURE')
make_head(_module, 'CRYPT_XML_SIGNED_INFO')
make_head(_module, 'CRYPT_XML_STATUS')
make_head(_module, 'CRYPT_XML_TRANSFORM_CHAIN_CONFIG')
make_head(_module, 'CRYPT_XML_TRANSFORM_INFO')
make_head(_module, 'CRYPT_XML_X509DATA')
make_head(_module, 'CRYPT_XML_X509DATA_ITEM')
make_head(_module, 'CRYPTNET_URL_CACHE_FLUSH_INFO')
make_head(_module, 'CRYPTNET_URL_CACHE_PRE_FETCH_INFO')
make_head(_module, 'CRYPTNET_URL_CACHE_RESPONSE_INFO')
make_head(_module, 'CRYPTPROTECT_PROMPTSTRUCT')
make_head(_module, 'CryptXmlDllCloseDigest')
make_head(_module, 'CryptXmlDllCreateDigest')
make_head(_module, 'CryptXmlDllCreateKey')
make_head(_module, 'CryptXmlDllDigestData')
make_head(_module, 'CryptXmlDllEncodeAlgorithm')
make_head(_module, 'CryptXmlDllEncodeKeyValue')
make_head(_module, 'CryptXmlDllFinalizeDigest')
make_head(_module, 'CryptXmlDllGetAlgorithmInfo')
make_head(_module, 'CryptXmlDllGetInterface')
make_head(_module, 'CryptXmlDllSignData')
make_head(_module, 'CryptXmlDllVerifySignature')
make_head(_module, 'CTL_ANY_SUBJECT_INFO')
make_head(_module, 'CTL_CONTEXT')
make_head(_module, 'CTL_ENTRY')
make_head(_module, 'CTL_FIND_SUBJECT_PARA')
make_head(_module, 'CTL_FIND_USAGE_PARA')
make_head(_module, 'CTL_INFO')
make_head(_module, 'CTL_USAGE')
make_head(_module, 'CTL_USAGE_MATCH')
make_head(_module, 'CTL_VERIFY_USAGE_PARA')
make_head(_module, 'CTL_VERIFY_USAGE_STATUS')
make_head(_module, 'DSSSEED')
make_head(_module, 'ENDPOINTADDRESS')
make_head(_module, 'ENDPOINTADDRESS2')
make_head(_module, 'EV_EXTRA_CERT_CHAIN_POLICY_PARA')
make_head(_module, 'EV_EXTRA_CERT_CHAIN_POLICY_STATUS')
make_head(_module, 'GENERIC_XML_TOKEN')
make_head(_module, 'HMAC_INFO')
make_head(_module, 'HTTPSPolicyCallbackData')
make_head(_module, 'ICertificateEnrollmentPolicyServerSetup')
make_head(_module, 'ICertificateEnrollmentServerSetup')
make_head(_module, 'ICertSrvSetup')
make_head(_module, 'ICertSrvSetupKeyInformation')
make_head(_module, 'ICertSrvSetupKeyInformationCollection')
make_head(_module, 'IMSCEPSetup')
make_head(_module, 'INFORMATIONCARD_ASYMMETRIC_CRYPTO_PARAMETERS')
make_head(_module, 'INFORMATIONCARD_CRYPTO_HANDLE')
make_head(_module, 'INFORMATIONCARD_HASH_CRYPTO_PARAMETERS')
make_head(_module, 'INFORMATIONCARD_SYMMETRIC_CRYPTO_PARAMETERS')
make_head(_module, 'INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS')
make_head(_module, 'KEY_TYPE_SUBTYPE')
make_head(_module, 'NCRYPT_ALLOC_PARA')
make_head(_module, 'NCRYPT_CIPHER_PADDING_INFO')
make_head(_module, 'NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE')
make_head(_module, 'NCRYPT_EXPORTED_ISOLATED_KEY_HEADER')
make_head(_module, 'NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES')
make_head(_module, 'NCRYPT_KEY_ACCESS_POLICY_BLOB')
make_head(_module, 'NCRYPT_KEY_ATTEST_PADDING_INFO')
make_head(_module, 'NCRYPT_KEY_BLOB_HEADER')
make_head(_module, 'NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO')
make_head(_module, 'NCRYPT_PCP_RAW_POLICYDIGEST_INFO')
make_head(_module, 'NCRYPT_PCP_TPM_FW_VERSION_INFO')
make_head(_module, 'NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT')
make_head(_module, 'NCRYPT_PLATFORM_ATTEST_PADDING_INFO')
make_head(_module, 'NCRYPT_PROTECT_STREAM_INFO')
make_head(_module, 'NCRYPT_PROTECT_STREAM_INFO_EX')
make_head(_module, 'NCRYPT_SUPPORTED_LENGTHS')
make_head(_module, 'NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER')
make_head(_module, 'NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT')
make_head(_module, 'NCRYPT_UI_POLICY')
make_head(_module, 'NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS')
make_head(_module, 'NCRYPT_VSM_KEY_ATTESTATION_STATEMENT')
make_head(_module, 'NCryptAlgorithmName')
make_head(_module, 'NCryptKeyName')
make_head(_module, 'NCryptProviderName')
make_head(_module, 'OCSP_BASIC_RESPONSE_ENTRY')
make_head(_module, 'OCSP_BASIC_RESPONSE_INFO')
make_head(_module, 'OCSP_BASIC_REVOKED_INFO')
make_head(_module, 'OCSP_BASIC_SIGNED_RESPONSE_INFO')
make_head(_module, 'OCSP_CERT_ID')
make_head(_module, 'OCSP_REQUEST_ENTRY')
make_head(_module, 'OCSP_REQUEST_INFO')
make_head(_module, 'OCSP_RESPONSE_INFO')
make_head(_module, 'OCSP_SIGNATURE_INFO')
make_head(_module, 'OCSP_SIGNED_REQUEST_INFO')
make_head(_module, 'PCRYPT_DECRYPT_PRIVATE_KEY_FUNC')
make_head(_module, 'PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC')
make_head(_module, 'PCRYPT_RESOLVE_HCRYPTPROV_FUNC')
make_head(_module, 'PFN_CANCEL_ASYNC_RETRIEVAL_FUNC')
make_head(_module, 'PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK')
make_head(_module, 'PFN_CERT_CREATE_CONTEXT_SORT_FUNC')
make_head(_module, 'PFN_CERT_DLL_OPEN_STORE_PROV_FUNC')
make_head(_module, 'PFN_CERT_ENUM_PHYSICAL_STORE')
make_head(_module, 'PFN_CERT_ENUM_SYSTEM_STORE')
make_head(_module, 'PFN_CERT_ENUM_SYSTEM_STORE_LOCATION')
make_head(_module, 'PFN_CERT_IS_WEAK_HASH')
make_head(_module, 'PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK')
make_head(_module, 'PFN_CERT_STORE_PROV_CLOSE')
make_head(_module, 'PFN_CERT_STORE_PROV_CONTROL')
make_head(_module, 'PFN_CERT_STORE_PROV_DELETE_CERT')
make_head(_module, 'PFN_CERT_STORE_PROV_DELETE_CRL')
make_head(_module, 'PFN_CERT_STORE_PROV_DELETE_CTL')
make_head(_module, 'PFN_CERT_STORE_PROV_FIND_CERT')
make_head(_module, 'PFN_CERT_STORE_PROV_FIND_CRL')
make_head(_module, 'PFN_CERT_STORE_PROV_FIND_CTL')
make_head(_module, 'PFN_CERT_STORE_PROV_FREE_FIND_CERT')
make_head(_module, 'PFN_CERT_STORE_PROV_FREE_FIND_CRL')
make_head(_module, 'PFN_CERT_STORE_PROV_FREE_FIND_CTL')
make_head(_module, 'PFN_CERT_STORE_PROV_GET_CERT_PROPERTY')
make_head(_module, 'PFN_CERT_STORE_PROV_GET_CRL_PROPERTY')
make_head(_module, 'PFN_CERT_STORE_PROV_GET_CTL_PROPERTY')
make_head(_module, 'PFN_CERT_STORE_PROV_READ_CERT')
make_head(_module, 'PFN_CERT_STORE_PROV_READ_CRL')
make_head(_module, 'PFN_CERT_STORE_PROV_READ_CTL')
make_head(_module, 'PFN_CERT_STORE_PROV_SET_CERT_PROPERTY')
make_head(_module, 'PFN_CERT_STORE_PROV_SET_CRL_PROPERTY')
make_head(_module, 'PFN_CERT_STORE_PROV_SET_CTL_PROPERTY')
make_head(_module, 'PFN_CERT_STORE_PROV_WRITE_CERT')
make_head(_module, 'PFN_CERT_STORE_PROV_WRITE_CRL')
make_head(_module, 'PFN_CERT_STORE_PROV_WRITE_CTL')
make_head(_module, 'PFN_CMSG_ALLOC')
make_head(_module, 'PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY')
make_head(_module, 'PFN_CMSG_CNG_IMPORT_KEY_AGREE')
make_head(_module, 'PFN_CMSG_CNG_IMPORT_KEY_TRANS')
make_head(_module, 'PFN_CMSG_EXPORT_ENCRYPT_KEY')
make_head(_module, 'PFN_CMSG_EXPORT_KEY_AGREE')
make_head(_module, 'PFN_CMSG_EXPORT_KEY_TRANS')
make_head(_module, 'PFN_CMSG_EXPORT_MAIL_LIST')
make_head(_module, 'PFN_CMSG_FREE')
make_head(_module, 'PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY')
make_head(_module, 'PFN_CMSG_GEN_ENCRYPT_KEY')
make_head(_module, 'PFN_CMSG_IMPORT_ENCRYPT_KEY')
make_head(_module, 'PFN_CMSG_IMPORT_KEY_AGREE')
make_head(_module, 'PFN_CMSG_IMPORT_KEY_TRANS')
make_head(_module, 'PFN_CMSG_IMPORT_MAIL_LIST')
make_head(_module, 'PFN_CMSG_STREAM_OUTPUT')
make_head(_module, 'PFN_CRYPT_ALLOC')
make_head(_module, 'PFN_CRYPT_ASYNC_PARAM_FREE_FUNC')
make_head(_module, 'PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC')
make_head(_module, 'PFN_CRYPT_CANCEL_RETRIEVAL')
make_head(_module, 'PFN_CRYPT_ENUM_KEYID_PROP')
make_head(_module, 'PFN_CRYPT_ENUM_OID_FUNC')
make_head(_module, 'PFN_CRYPT_ENUM_OID_INFO')
make_head(_module, 'PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC')
make_head(_module, 'PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC')
make_head(_module, 'PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC')
make_head(_module, 'PFN_CRYPT_FREE')
make_head(_module, 'PFN_CRYPT_GET_SIGNER_CERTIFICATE')
make_head(_module, 'PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH')
make_head(_module, 'PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE')
make_head(_module, 'PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER')
make_head(_module, 'PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD')
make_head(_module, 'PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET')
make_head(_module, 'PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE')
make_head(_module, 'PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE')
make_head(_module, 'PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC')
make_head(_module, 'PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC')
make_head(_module, 'PFN_CRYPT_XML_CREATE_TRANSFORM')
make_head(_module, 'PFN_CRYPT_XML_DATA_PROVIDER_CLOSE')
make_head(_module, 'PFN_CRYPT_XML_DATA_PROVIDER_READ')
make_head(_module, 'PFN_CRYPT_XML_ENUM_ALG_INFO')
make_head(_module, 'PFN_CRYPT_XML_WRITE_CALLBACK')
make_head(_module, 'PFN_EXPORT_PRIV_KEY_FUNC')
make_head(_module, 'PFN_FREE_ENCODED_OBJECT_FUNC')
make_head(_module, 'PFN_IMPORT_PRIV_KEY_FUNC')
make_head(_module, 'PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC')
make_head(_module, 'PFN_NCRYPT_ALLOC')
make_head(_module, 'PFN_NCRYPT_FREE')
make_head(_module, 'PFNCryptStreamOutputCallback')
make_head(_module, 'PFNCryptStreamOutputCallbackEx')
make_head(_module, 'PKCS12_PBES2_EXPORT_PARAMS')
make_head(_module, 'POLICY_ELEMENT')
make_head(_module, 'PRIVKEYVER3')
make_head(_module, 'PROV_ENUMALGS')
make_head(_module, 'PROV_ENUMALGS_EX')
make_head(_module, 'PUBKEY')
make_head(_module, 'PUBKEYVER3')
make_head(_module, 'PUBLICKEYSTRUC')
make_head(_module, 'RECIPIENTPOLICY')
make_head(_module, 'RECIPIENTPOLICY2')
make_head(_module, 'ROOT_INFO_LUID')
make_head(_module, 'RSAPUBKEY')
make_head(_module, 'SCHANNEL_ALG')
make_head(_module, 'SSL_ECCKEY_BLOB')
make_head(_module, 'SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS')
make_head(_module, 'SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA')
make_head(_module, 'SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA')
make_head(_module, 'SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS')
__all__ = [
    "ALG_CLASS_ALL",
    "ALG_CLASS_ANY",
    "ALG_CLASS_DATA_ENCRYPT",
    "ALG_CLASS_HASH",
    "ALG_CLASS_KEY_EXCHANGE",
    "ALG_CLASS_MSG_ENCRYPT",
    "ALG_CLASS_SIGNATURE",
    "ALG_SID_3DES",
    "ALG_SID_3DES_112",
    "ALG_SID_AES",
    "ALG_SID_AES_128",
    "ALG_SID_AES_192",
    "ALG_SID_AES_256",
    "ALG_SID_AGREED_KEY_ANY",
    "ALG_SID_ANY",
    "ALG_SID_CAST",
    "ALG_SID_CYLINK_MEK",
    "ALG_SID_DES",
    "ALG_SID_DESX",
    "ALG_SID_DH_EPHEM",
    "ALG_SID_DH_SANDF",
    "ALG_SID_DSS_ANY",
    "ALG_SID_DSS_DMS",
    "ALG_SID_DSS_PKCS",
    "ALG_SID_ECDH",
    "ALG_SID_ECDH_EPHEM",
    "ALG_SID_ECDSA",
    "ALG_SID_ECMQV",
    "ALG_SID_EXAMPLE",
    "ALG_SID_HASH_REPLACE_OWF",
    "ALG_SID_HMAC",
    "ALG_SID_IDEA",
    "ALG_SID_KEA",
    "ALG_SID_MAC",
    "ALG_SID_MD2",
    "ALG_SID_MD4",
    "ALG_SID_MD5",
    "ALG_SID_PCT1_MASTER",
    "ALG_SID_RC2",
    "ALG_SID_RC4",
    "ALG_SID_RC5",
    "ALG_SID_RIPEMD",
    "ALG_SID_RIPEMD160",
    "ALG_SID_RSA_ANY",
    "ALG_SID_RSA_ENTRUST",
    "ALG_SID_RSA_MSATWORK",
    "ALG_SID_RSA_PGP",
    "ALG_SID_RSA_PKCS",
    "ALG_SID_SAFERSK128",
    "ALG_SID_SAFERSK64",
    "ALG_SID_SCHANNEL_ENC_KEY",
    "ALG_SID_SCHANNEL_MAC_KEY",
    "ALG_SID_SCHANNEL_MASTER_HASH",
    "ALG_SID_SEAL",
    "ALG_SID_SHA",
    "ALG_SID_SHA1",
    "ALG_SID_SHA_256",
    "ALG_SID_SHA_384",
    "ALG_SID_SHA_512",
    "ALG_SID_SKIPJACK",
    "ALG_SID_SSL2_MASTER",
    "ALG_SID_SSL3SHAMD5",
    "ALG_SID_SSL3_MASTER",
    "ALG_SID_TEK",
    "ALG_SID_THIRDPARTY_ANY",
    "ALG_SID_TLS1PRF",
    "ALG_SID_TLS1_MASTER",
    "ALG_TYPE_ANY",
    "ALG_TYPE_BLOCK",
    "ALG_TYPE_DH",
    "ALG_TYPE_DSS",
    "ALG_TYPE_ECDH",
    "ALG_TYPE_RSA",
    "ALG_TYPE_SECURECHANNEL",
    "ALG_TYPE_STREAM",
    "ALG_TYPE_THIRDPARTY",
    "AT_KEYEXCHANGE",
    "AT_SIGNATURE",
    "AUDIT_CARD_DELETE",
    "AUDIT_CARD_IMPORT",
    "AUDIT_CARD_WRITTEN",
    "AUDIT_SERVICE_IDLE_STOP",
    "AUDIT_STORE_DELETE",
    "AUDIT_STORE_EXPORT",
    "AUDIT_STORE_IMPORT",
    "AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA",
    "AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS",
    "AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA",
    "AUTHTYPE_CLIENT",
    "AUTHTYPE_SERVER",
    "BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG",
    "BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG",
    "BCRYPTBUFFER_VERSION",
    "BCRYPT_3DES_112_ALGORITHM",
    "BCRYPT_3DES_112_CBC_ALG_HANDLE",
    "BCRYPT_3DES_112_CFB_ALG_HANDLE",
    "BCRYPT_3DES_112_ECB_ALG_HANDLE",
    "BCRYPT_3DES_ALGORITHM",
    "BCRYPT_3DES_CBC_ALG_HANDLE",
    "BCRYPT_3DES_CFB_ALG_HANDLE",
    "BCRYPT_3DES_ECB_ALG_HANDLE",
    "BCRYPT_AES_ALGORITHM",
    "BCRYPT_AES_CBC_ALG_HANDLE",
    "BCRYPT_AES_CCM_ALG_HANDLE",
    "BCRYPT_AES_CFB_ALG_HANDLE",
    "BCRYPT_AES_CMAC_ALGORITHM",
    "BCRYPT_AES_CMAC_ALG_HANDLE",
    "BCRYPT_AES_ECB_ALG_HANDLE",
    "BCRYPT_AES_GCM_ALG_HANDLE",
    "BCRYPT_AES_GMAC_ALGORITHM",
    "BCRYPT_AES_GMAC_ALG_HANDLE",
    "BCRYPT_AES_WRAP_KEY_BLOB",
    "BCRYPT_ALGORITHM_IDENTIFIER",
    "BCRYPT_ALGORITHM_NAME",
    "BCRYPT_ALG_HANDLE",
    "BCRYPT_ALG_HANDLE_HMAC_FLAG",
    "BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE",
    "BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION",
    "BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO",
    "BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION",
    "BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG",
    "BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG",
    "BCRYPT_AUTH_TAG_LENGTH",
    "BCRYPT_BLOCK_LENGTH",
    "BCRYPT_BLOCK_PADDING",
    "BCRYPT_BLOCK_SIZE_LIST",
    "BCRYPT_BUFFERS_LOCKED_FLAG",
    "BCRYPT_CAPI_AES_FLAG",
    "BCRYPT_CAPI_KDF_ALGORITHM",
    "BCRYPT_CAPI_KDF_ALG_HANDLE",
    "BCRYPT_CHACHA20_POLY1305_ALGORITHM",
    "BCRYPT_CHACHA20_POLY1305_ALG_HANDLE",
    "BCRYPT_CHAINING_MODE",
    "BCRYPT_CHAIN_MODE_CBC",
    "BCRYPT_CHAIN_MODE_CCM",
    "BCRYPT_CHAIN_MODE_CFB",
    "BCRYPT_CHAIN_MODE_ECB",
    "BCRYPT_CHAIN_MODE_GCM",
    "BCRYPT_CHAIN_MODE_NA",
    "BCRYPT_CIPHER_INTERFACE",
    "BCRYPT_CIPHER_OPERATION",
    "BCRYPT_DESX_ALGORITHM",
    "BCRYPT_DESX_CBC_ALG_HANDLE",
    "BCRYPT_DESX_CFB_ALG_HANDLE",
    "BCRYPT_DESX_ECB_ALG_HANDLE",
    "BCRYPT_DES_ALGORITHM",
    "BCRYPT_DES_CBC_ALG_HANDLE",
    "BCRYPT_DES_CFB_ALG_HANDLE",
    "BCRYPT_DES_ECB_ALG_HANDLE",
    "BCRYPT_DH_ALGORITHM",
    "BCRYPT_DH_ALG_HANDLE",
    "BCRYPT_DH_KEY_BLOB",
    "BCRYPT_DH_KEY_BLOB_MAGIC",
    "BCRYPT_DH_PARAMETERS",
    "BCRYPT_DH_PARAMETERS_MAGIC",
    "BCRYPT_DH_PARAMETER_HEADER",
    "BCRYPT_DH_PRIVATE_BLOB",
    "BCRYPT_DH_PRIVATE_MAGIC",
    "BCRYPT_DH_PUBLIC_BLOB",
    "BCRYPT_DH_PUBLIC_MAGIC",
    "BCRYPT_DSA_ALGORITHM",
    "BCRYPT_DSA_ALG_HANDLE",
    "BCRYPT_DSA_KEY_BLOB",
    "BCRYPT_DSA_KEY_BLOB_V2",
    "BCRYPT_DSA_MAGIC",
    "BCRYPT_DSA_PARAMETERS",
    "BCRYPT_DSA_PARAMETERS_MAGIC",
    "BCRYPT_DSA_PARAMETERS_MAGIC_V2",
    "BCRYPT_DSA_PARAMETER_HEADER",
    "BCRYPT_DSA_PARAMETER_HEADER_V2",
    "BCRYPT_DSA_PRIVATE_BLOB",
    "BCRYPT_DSA_PRIVATE_MAGIC",
    "BCRYPT_DSA_PRIVATE_MAGIC_V2",
    "BCRYPT_DSA_PUBLIC_BLOB",
    "BCRYPT_DSA_PUBLIC_MAGIC",
    "BCRYPT_DSA_PUBLIC_MAGIC_V2",
    "BCRYPT_ECCFULLKEY_BLOB",
    "BCRYPT_ECCFULLPRIVATE_BLOB",
    "BCRYPT_ECCFULLPUBLIC_BLOB",
    "BCRYPT_ECCKEY_BLOB",
    "BCRYPT_ECCPRIVATE_BLOB",
    "BCRYPT_ECCPUBLIC_BLOB",
    "BCRYPT_ECC_CURVE_25519",
    "BCRYPT_ECC_CURVE_BRAINPOOLP160R1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP160T1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP192R1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP192T1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP224R1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP224T1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP256R1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP256T1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP320R1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP320T1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP384R1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP384T1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP512R1",
    "BCRYPT_ECC_CURVE_BRAINPOOLP512T1",
    "BCRYPT_ECC_CURVE_EC192WAPI",
    "BCRYPT_ECC_CURVE_NAME",
    "BCRYPT_ECC_CURVE_NAMES",
    "BCRYPT_ECC_CURVE_NAME_LIST",
    "BCRYPT_ECC_CURVE_NISTP192",
    "BCRYPT_ECC_CURVE_NISTP224",
    "BCRYPT_ECC_CURVE_NISTP256",
    "BCRYPT_ECC_CURVE_NISTP384",
    "BCRYPT_ECC_CURVE_NISTP521",
    "BCRYPT_ECC_CURVE_NUMSP256T1",
    "BCRYPT_ECC_CURVE_NUMSP384T1",
    "BCRYPT_ECC_CURVE_NUMSP512T1",
    "BCRYPT_ECC_CURVE_SECP160K1",
    "BCRYPT_ECC_CURVE_SECP160R1",
    "BCRYPT_ECC_CURVE_SECP160R2",
    "BCRYPT_ECC_CURVE_SECP192K1",
    "BCRYPT_ECC_CURVE_SECP192R1",
    "BCRYPT_ECC_CURVE_SECP224K1",
    "BCRYPT_ECC_CURVE_SECP224R1",
    "BCRYPT_ECC_CURVE_SECP256K1",
    "BCRYPT_ECC_CURVE_SECP256R1",
    "BCRYPT_ECC_CURVE_SECP384R1",
    "BCRYPT_ECC_CURVE_SECP521R1",
    "BCRYPT_ECC_CURVE_WTLS12",
    "BCRYPT_ECC_CURVE_WTLS7",
    "BCRYPT_ECC_CURVE_WTLS9",
    "BCRYPT_ECC_CURVE_X962P192V1",
    "BCRYPT_ECC_CURVE_X962P192V2",
    "BCRYPT_ECC_CURVE_X962P192V3",
    "BCRYPT_ECC_CURVE_X962P239V1",
    "BCRYPT_ECC_CURVE_X962P239V2",
    "BCRYPT_ECC_CURVE_X962P239V3",
    "BCRYPT_ECC_CURVE_X962P256V1",
    "BCRYPT_ECC_FULLKEY_BLOB_V1",
    "BCRYPT_ECC_PARAMETERS",
    "BCRYPT_ECC_PARAMETERS_MAGIC",
    "BCRYPT_ECC_PRIME_MONTGOMERY_CURVE",
    "BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE",
    "BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE",
    "BCRYPT_ECDH_ALGORITHM",
    "BCRYPT_ECDH_ALG_HANDLE",
    "BCRYPT_ECDH_P256_ALGORITHM",
    "BCRYPT_ECDH_P256_ALG_HANDLE",
    "BCRYPT_ECDH_P384_ALGORITHM",
    "BCRYPT_ECDH_P384_ALG_HANDLE",
    "BCRYPT_ECDH_P521_ALGORITHM",
    "BCRYPT_ECDH_P521_ALG_HANDLE",
    "BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC",
    "BCRYPT_ECDH_PRIVATE_P256_MAGIC",
    "BCRYPT_ECDH_PRIVATE_P384_MAGIC",
    "BCRYPT_ECDH_PRIVATE_P521_MAGIC",
    "BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC",
    "BCRYPT_ECDH_PUBLIC_P256_MAGIC",
    "BCRYPT_ECDH_PUBLIC_P384_MAGIC",
    "BCRYPT_ECDH_PUBLIC_P521_MAGIC",
    "BCRYPT_ECDSA_ALGORITHM",
    "BCRYPT_ECDSA_ALG_HANDLE",
    "BCRYPT_ECDSA_P256_ALGORITHM",
    "BCRYPT_ECDSA_P256_ALG_HANDLE",
    "BCRYPT_ECDSA_P384_ALGORITHM",
    "BCRYPT_ECDSA_P384_ALG_HANDLE",
    "BCRYPT_ECDSA_P521_ALGORITHM",
    "BCRYPT_ECDSA_P521_ALG_HANDLE",
    "BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC",
    "BCRYPT_ECDSA_PRIVATE_P256_MAGIC",
    "BCRYPT_ECDSA_PRIVATE_P384_MAGIC",
    "BCRYPT_ECDSA_PRIVATE_P521_MAGIC",
    "BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC",
    "BCRYPT_ECDSA_PUBLIC_P256_MAGIC",
    "BCRYPT_ECDSA_PUBLIC_P384_MAGIC",
    "BCRYPT_ECDSA_PUBLIC_P521_MAGIC",
    "BCRYPT_EFFECTIVE_KEY_LENGTH",
    "BCRYPT_ENABLE_INCOMPATIBLE_FIPS_CHECKS",
    "BCRYPT_EXTENDED_KEYSIZE",
    "BCRYPT_GENERATE_IV",
    "BCRYPT_GLOBAL_PARAMETERS",
    "BCRYPT_HANDLE",
    "BCRYPT_HASH_BLOCK_LENGTH",
    "BCRYPT_HASH_HANDLE",
    "BCRYPT_HASH_INTERFACE",
    "BCRYPT_HASH_INTERFACE_MAJORVERSION_2",
    "BCRYPT_HASH_LENGTH",
    "BCRYPT_HASH_OID_LIST",
    "BCRYPT_HASH_OPERATION",
    "BCRYPT_HASH_OPERATION_FINISH_HASH",
    "BCRYPT_HASH_OPERATION_HASH_DATA",
    "BCRYPT_HASH_OPERATION_TYPE",
    "BCRYPT_HASH_REUSABLE_FLAG",
    "BCRYPT_HKDF_ALGORITHM",
    "BCRYPT_HKDF_ALG_HANDLE",
    "BCRYPT_HKDF_HASH_ALGORITHM",
    "BCRYPT_HKDF_PRK_AND_FINALIZE",
    "BCRYPT_HKDF_SALT_AND_FINALIZE",
    "BCRYPT_HMAC_MD2_ALG_HANDLE",
    "BCRYPT_HMAC_MD4_ALG_HANDLE",
    "BCRYPT_HMAC_MD5_ALG_HANDLE",
    "BCRYPT_HMAC_SHA1_ALG_HANDLE",
    "BCRYPT_HMAC_SHA256_ALG_HANDLE",
    "BCRYPT_HMAC_SHA384_ALG_HANDLE",
    "BCRYPT_HMAC_SHA512_ALG_HANDLE",
    "BCRYPT_INITIALIZATION_VECTOR",
    "BCRYPT_INTERFACE",
    "BCRYPT_INTERFACE_VERSION",
    "BCRYPT_IS_IFX_TPM_WEAK_KEY",
    "BCRYPT_IS_KEYED_HASH",
    "BCRYPT_IS_REUSABLE_HASH",
    "BCRYPT_KDF_HASH",
    "BCRYPT_KDF_HKDF",
    "BCRYPT_KDF_HMAC",
    "BCRYPT_KDF_RAW_SECRET",
    "BCRYPT_KDF_SP80056A_CONCAT",
    "BCRYPT_KDF_TLS_PRF",
    "BCRYPT_KEY_BLOB",
    "BCRYPT_KEY_DATA_BLOB",
    "BCRYPT_KEY_DATA_BLOB_HEADER",
    "BCRYPT_KEY_DATA_BLOB_MAGIC",
    "BCRYPT_KEY_DATA_BLOB_VERSION1",
    "BCRYPT_KEY_DERIVATION_INTERFACE",
    "BCRYPT_KEY_DERIVATION_OPERATION",
    "BCRYPT_KEY_HANDLE",
    "BCRYPT_KEY_LENGTH",
    "BCRYPT_KEY_LENGTHS",
    "BCRYPT_KEY_LENGTHS_STRUCT",
    "BCRYPT_KEY_OBJECT_LENGTH",
    "BCRYPT_KEY_STRENGTH",
    "BCRYPT_KEY_VALIDATION_RANGE",
    "BCRYPT_KEY_VALIDATION_RANGE_AND_ORDER",
    "BCRYPT_KEY_VALIDATION_REGENERATE",
    "BCRYPT_MD2_ALGORITHM",
    "BCRYPT_MD2_ALG_HANDLE",
    "BCRYPT_MD4_ALGORITHM",
    "BCRYPT_MD4_ALG_HANDLE",
    "BCRYPT_MD5_ALGORITHM",
    "BCRYPT_MD5_ALG_HANDLE",
    "BCRYPT_MESSAGE_BLOCK_LENGTH",
    "BCRYPT_MULTI_FLAG",
    "BCRYPT_MULTI_HASH_OPERATION",
    "BCRYPT_MULTI_OBJECT_LENGTH",
    "BCRYPT_MULTI_OBJECT_LENGTH_STRUCT",
    "BCRYPT_MULTI_OPERATION_TYPE",
    "BCRYPT_NO_CURVE_GENERATION_ALG_ID",
    "BCRYPT_NO_KEY_VALIDATION",
    "BCRYPT_OAEP_PADDING_INFO",
    "BCRYPT_OBJECT_ALIGNMENT",
    "BCRYPT_OBJECT_LENGTH",
    "BCRYPT_OID",
    "BCRYPT_OID_LIST",
    "BCRYPT_OPAQUE_KEY_BLOB",
    "BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS",
    "BCRYPT_OPERATION",
    "BCRYPT_OPERATION_TYPE_HASH",
    "BCRYPT_PADDING_SCHEMES",
    "BCRYPT_PAD_NONE",
    "BCRYPT_PAD_OAEP",
    "BCRYPT_PAD_PKCS1",
    "BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID",
    "BCRYPT_PAD_PSS",
    "BCRYPT_PBKDF2_ALGORITHM",
    "BCRYPT_PBKDF2_ALG_HANDLE",
    "BCRYPT_PCP_PLATFORM_TYPE_PROPERTY",
    "BCRYPT_PCP_PROVIDER_VERSION_PROPERTY",
    "BCRYPT_PKCS1_PADDING_INFO",
    "BCRYPT_PRIMITIVE_TYPE",
    "BCRYPT_PRIVATE_KEY",
    "BCRYPT_PRIVATE_KEY_BLOB",
    "BCRYPT_PRIVATE_KEY_FLAG",
    "BCRYPT_PROVIDER_HANDLE",
    "BCRYPT_PROVIDER_NAME",
    "BCRYPT_PROV_DISPATCH",
    "BCRYPT_PSS_PADDING_INFO",
    "BCRYPT_PUBLIC_KEY_BLOB",
    "BCRYPT_PUBLIC_KEY_FLAG",
    "BCRYPT_PUBLIC_KEY_LENGTH",
    "BCRYPT_QUERY_PROVIDER_MODE",
    "BCRYPT_RC2_ALGORITHM",
    "BCRYPT_RC2_CBC_ALG_HANDLE",
    "BCRYPT_RC2_CFB_ALG_HANDLE",
    "BCRYPT_RC2_ECB_ALG_HANDLE",
    "BCRYPT_RC4_ALGORITHM",
    "BCRYPT_RC4_ALG_HANDLE",
    "BCRYPT_RESOLVE_PROVIDERS_FLAGS",
    "BCRYPT_RNG_ALGORITHM",
    "BCRYPT_RNG_ALG_HANDLE",
    "BCRYPT_RNG_DUAL_EC_ALGORITHM",
    "BCRYPT_RNG_FIPS186_DSA_ALGORITHM",
    "BCRYPT_RNG_INTERFACE",
    "BCRYPT_RNG_OPERATION",
    "BCRYPT_RNG_USE_ENTROPY_IN_BUFFER",
    "BCRYPT_RSAFULLPRIVATE_BLOB",
    "BCRYPT_RSAFULLPRIVATE_MAGIC",
    "BCRYPT_RSAKEY_BLOB",
    "BCRYPT_RSAKEY_BLOB_MAGIC",
    "BCRYPT_RSAPRIVATE_BLOB",
    "BCRYPT_RSAPRIVATE_MAGIC",
    "BCRYPT_RSAPUBLIC_BLOB",
    "BCRYPT_RSAPUBLIC_MAGIC",
    "BCRYPT_RSA_ALGORITHM",
    "BCRYPT_RSA_ALG_HANDLE",
    "BCRYPT_RSA_SIGN_ALGORITHM",
    "BCRYPT_RSA_SIGN_ALG_HANDLE",
    "BCRYPT_SECRET_AGREEMENT_INTERFACE",
    "BCRYPT_SECRET_AGREEMENT_OPERATION",
    "BCRYPT_SECRET_HANDLE",
    "BCRYPT_SHA1_ALGORITHM",
    "BCRYPT_SHA1_ALG_HANDLE",
    "BCRYPT_SHA256_ALGORITHM",
    "BCRYPT_SHA256_ALG_HANDLE",
    "BCRYPT_SHA384_ALGORITHM",
    "BCRYPT_SHA384_ALG_HANDLE",
    "BCRYPT_SHA512_ALGORITHM",
    "BCRYPT_SHA512_ALG_HANDLE",
    "BCRYPT_SIGNATURE_INTERFACE",
    "BCRYPT_SIGNATURE_LENGTH",
    "BCRYPT_SIGNATURE_OPERATION",
    "BCRYPT_SP800108_CTR_HMAC_ALGORITHM",
    "BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE",
    "BCRYPT_SP80056A_CONCAT_ALGORITHM",
    "BCRYPT_SP80056A_CONCAT_ALG_HANDLE",
    "BCRYPT_SUPPORTED_PAD_OAEP",
    "BCRYPT_SUPPORTED_PAD_PKCS1_ENC",
    "BCRYPT_SUPPORTED_PAD_PKCS1_SIG",
    "BCRYPT_SUPPORTED_PAD_PSS",
    "BCRYPT_SUPPORTED_PAD_ROUTER",
    "BCRYPT_TABLE",
    "BCRYPT_TLS1_1_KDF_ALGORITHM",
    "BCRYPT_TLS1_1_KDF_ALG_HANDLE",
    "BCRYPT_TLS1_2_KDF_ALGORITHM",
    "BCRYPT_TLS1_2_KDF_ALG_HANDLE",
    "BCRYPT_TLS_CBC_HMAC_VERIFY_FLAG",
    "BCRYPT_USE_SYSTEM_PREFERRED_RNG",
    "BCRYPT_XTS_AES_ALGORITHM",
    "BCRYPT_XTS_AES_ALG_HANDLE",
    "BCryptAddContextFunction",
    "BCryptBuffer",
    "BCryptBufferDesc",
    "BCryptCloseAlgorithmProvider",
    "BCryptConfigureContext",
    "BCryptConfigureContextFunction",
    "BCryptCreateContext",
    "BCryptCreateHash",
    "BCryptCreateMultiHash",
    "BCryptDecrypt",
    "BCryptDeleteContext",
    "BCryptDeriveKey",
    "BCryptDeriveKeyCapi",
    "BCryptDeriveKeyPBKDF2",
    "BCryptDestroyHash",
    "BCryptDestroyKey",
    "BCryptDestroySecret",
    "BCryptDuplicateHash",
    "BCryptDuplicateKey",
    "BCryptEncrypt",
    "BCryptEnumAlgorithms",
    "BCryptEnumContextFunctionProviders",
    "BCryptEnumContextFunctions",
    "BCryptEnumContexts",
    "BCryptEnumProviders",
    "BCryptEnumRegisteredProviders",
    "BCryptExportKey",
    "BCryptFinalizeKeyPair",
    "BCryptFinishHash",
    "BCryptFreeBuffer",
    "BCryptGenRandom",
    "BCryptGenerateKeyPair",
    "BCryptGenerateSymmetricKey",
    "BCryptGetFipsAlgorithmMode",
    "BCryptGetProperty",
    "BCryptHash",
    "BCryptHashData",
    "BCryptImportKey",
    "BCryptImportKeyPair",
    "BCryptKeyDerivation",
    "BCryptOpenAlgorithmProvider",
    "BCryptProcessMultiOperations",
    "BCryptQueryContextConfiguration",
    "BCryptQueryContextFunctionConfiguration",
    "BCryptQueryContextFunctionProperty",
    "BCryptQueryProviderRegistration",
    "BCryptRegisterConfigChangeNotify",
    "BCryptRemoveContextFunction",
    "BCryptResolveProviders",
    "BCryptSecretAgreement",
    "BCryptSetContextFunctionProperty",
    "BCryptSetProperty",
    "BCryptSignHash",
    "BCryptUnregisterConfigChangeNotify",
    "BCryptVerifySignature",
    "CALG_OID_INFO_CNG_ONLY",
    "CALG_OID_INFO_PARAMETERS",
    "CASetupProperty",
    "CCertSrvSetup",
    "CCertSrvSetupKeyInformation",
    "CCertificateEnrollmentPolicyServerSetup",
    "CCertificateEnrollmentServerSetup",
    "CEPSetupProperty",
    "CERTIFICATE_CHAIN_BLOB",
    "CERT_ACCESS_DESCRIPTION",
    "CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG",
    "CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG",
    "CERT_ACCESS_STATE_PROP_ID",
    "CERT_ACCESS_STATE_SHARED_USER_FLAG",
    "CERT_ACCESS_STATE_SYSTEM_STORE_FLAG",
    "CERT_ACCESS_STATE_WRITE_PERSIST_FLAG",
    "CERT_AIA_URL_RETRIEVED_PROP_ID",
    "CERT_ALT_NAME_EDI_PARTY_NAME",
    "CERT_ALT_NAME_ENTRY",
    "CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK",
    "CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT",
    "CERT_ALT_NAME_INFO",
    "CERT_ALT_NAME_VALUE_ERR_INDEX_MASK",
    "CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT",
    "CERT_ALT_NAME_X400_ADDRESS",
    "CERT_ARCHIVED_KEY_HASH_PROP_ID",
    "CERT_ARCHIVED_PROP_ID",
    "CERT_AUTHORITY_INFO_ACCESS",
    "CERT_AUTHORITY_INFO_ACCESS_PROP_ID",
    "CERT_AUTHORITY_KEY_ID2_INFO",
    "CERT_AUTHORITY_KEY_ID_INFO",
    "CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG",
    "CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG",
    "CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME",
    "CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME",
    "CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME",
    "CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME",
    "CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME",
    "CERT_AUTH_ROOT_CAB_FILENAME",
    "CERT_AUTH_ROOT_CERT_EXT",
    "CERT_AUTH_ROOT_CTL_FILENAME",
    "CERT_AUTH_ROOT_CTL_FILENAME_A",
    "CERT_AUTH_ROOT_SEQ_FILENAME",
    "CERT_AUTH_ROOT_SHA256_HASH_PROP_ID",
    "CERT_AUTO_ENROLL_PROP_ID",
    "CERT_AUTO_ENROLL_RETRY_PROP_ID",
    "CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG",
    "CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME",
    "CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME",
    "CERT_BACKED_UP_PROP_ID",
    "CERT_BASIC_CONSTRAINTS2_INFO",
    "CERT_BASIC_CONSTRAINTS_INFO",
    "CERT_BIOMETRIC_DATA",
    "CERT_BIOMETRIC_DATA_TYPE",
    "CERT_BIOMETRIC_EXT_INFO",
    "CERT_BIOMETRIC_OID_DATA_CHOICE",
    "CERT_BIOMETRIC_PICTURE_TYPE",
    "CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE",
    "CERT_BIOMETRIC_SIGNATURE_TYPE",
    "CERT_BUNDLE_CERTIFICATE",
    "CERT_BUNDLE_CRL",
    "CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG",
    "CERT_CA_DISABLE_CRL_PROP_ID",
    "CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID",
    "CERT_CA_SUBJECT_FLAG",
    "CERT_CEP_PROP_ID",
    "CERT_CHAIN",
    "CERT_CHAIN_AUTO_CURRENT_USER",
    "CERT_CHAIN_AUTO_FLAGS_VALUE_NAME",
    "CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG",
    "CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME",
    "CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME",
    "CERT_CHAIN_AUTO_HPKP_RULE_INFO",
    "CERT_CHAIN_AUTO_IMPERSONATED",
    "CERT_CHAIN_AUTO_LOCAL_MACHINE",
    "CERT_CHAIN_AUTO_LOG_CREATE_FLAG",
    "CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME",
    "CERT_CHAIN_AUTO_LOG_FLUSH_FLAG",
    "CERT_CHAIN_AUTO_LOG_FREE_FLAG",
    "CERT_CHAIN_AUTO_NETWORK_INFO",
    "CERT_CHAIN_AUTO_PINRULE_INFO",
    "CERT_CHAIN_AUTO_PROCESS_INFO",
    "CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE",
    "CERT_CHAIN_CACHE_END_CERT",
    "CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL",
    "CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME",
    "CERT_CHAIN_CONFIG_REGPATH",
    "CERT_CHAIN_CONTEXT",
    "CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT",
    "CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME",
    "CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME",
    "CERT_CHAIN_DEFAULT_CONFIG_SUBDIR",
    "CERT_CHAIN_DISABLE_AIA",
    "CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME",
    "CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE",
    "CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME",
    "CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME",
    "CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_ECC_PARA_FLAG",
    "CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME",
    "CERT_CHAIN_DISABLE_MD2_MD4",
    "CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_MY_PEER_TRUST",
    "CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING",
    "CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME",
    "CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME",
    "CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG",
    "CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME",
    "CERT_CHAIN_ELEMENT",
    "CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG",
    "CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE",
    "CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG",
    "CERT_CHAIN_ENABLE_MD2_MD4_FLAG",
    "CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG",
    "CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG",
    "CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG",
    "CERT_CHAIN_ENABLE_PEER_TRUST",
    "CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG",
    "CERT_CHAIN_ENABLE_SHARE_STORE",
    "CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG",
    "CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG",
    "CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG",
    "CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG",
    "CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME",
    "CERT_CHAIN_ENGINE_CONFIG",
    "CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG",
    "CERT_CHAIN_FIND_BY_ISSUER",
    "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG",
    "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG",
    "CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG",
    "CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG",
    "CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG",
    "CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG",
    "CERT_CHAIN_FIND_BY_ISSUER_PARA",
    "CERT_CHAIN_HAS_MOTW",
    "CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT",
    "CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME",
    "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT",
    "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME",
    "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT",
    "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME",
    "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT",
    "CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME",
    "CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT",
    "CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE",
    "CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME",
    "CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME",
    "CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE",
    "CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT",
    "CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE",
    "CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME",
    "CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG",
    "CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME",
    "CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT",
    "CERT_CHAIN_OPTIONS_VALUE_NAME",
    "CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL",
    "CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL",
    "CERT_CHAIN_OPT_IN_WEAK_FLAGS",
    "CERT_CHAIN_OPT_IN_WEAK_SIGNATURE",
    "CERT_CHAIN_PARA",
    "CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG",
    "CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG",
    "CERT_CHAIN_POLICY_AUTHENTICODE",
    "CERT_CHAIN_POLICY_AUTHENTICODE_TS",
    "CERT_CHAIN_POLICY_BASE",
    "CERT_CHAIN_POLICY_BASIC_CONSTRAINTS",
    "CERT_CHAIN_POLICY_EV",
    "CERT_CHAIN_POLICY_FLAGS",
    "CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS",
    "CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS",
    "CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG",
    "CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG",
    "CERT_CHAIN_POLICY_MICROSOFT_ROOT",
    "CERT_CHAIN_POLICY_NT_AUTH",
    "CERT_CHAIN_POLICY_PARA",
    "CERT_CHAIN_POLICY_SSL",
    "CERT_CHAIN_POLICY_SSL_F12",
    "CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL",
    "CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY",
    "CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY",
    "CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL",
    "CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL",
    "CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY",
    "CERT_CHAIN_POLICY_SSL_HPKP_HEADER",
    "CERT_CHAIN_POLICY_SSL_KEY_PIN",
    "CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR",
    "CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING",
    "CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR",
    "CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING",
    "CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS",
    "CERT_CHAIN_POLICY_STATUS",
    "CERT_CHAIN_POLICY_THIRD_PARTY_ROOT",
    "CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG",
    "CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS",
    "CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT",
    "CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY",
    "CERT_CHAIN_REVOCATION_CHECK_CHAIN",
    "CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT",
    "CERT_CHAIN_REVOCATION_CHECK_END_CERT",
    "CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT",
    "CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME",
    "CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME",
    "CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME",
    "CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG",
    "CERT_CHAIN_THREAD_STORE_SYNC",
    "CERT_CHAIN_TIMESTAMP_TIME",
    "CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME",
    "CERT_CHAIN_USE_LOCAL_MACHINE_STORE",
    "CERT_CHAIN_WEAK_AFTER_TIME_NAME",
    "CERT_CHAIN_WEAK_ALL_CONFIG_NAME",
    "CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME",
    "CERT_CHAIN_WEAK_FLAGS_NAME",
    "CERT_CHAIN_WEAK_HYGIENE_NAME",
    "CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME",
    "CERT_CHAIN_WEAK_PREFIX_NAME",
    "CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME",
    "CERT_CHAIN_WEAK_SHA256_ALLOW_NAME",
    "CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME",
    "CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME",
    "CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME",
    "CERT_CLOSE_STORE_CHECK_FLAG",
    "CERT_CLOSE_STORE_FORCE_FLAG",
    "CERT_CLR_DELETE_KEY_PROP_ID",
    "CERT_COMPARE_ANY",
    "CERT_COMPARE_ATTR",
    "CERT_COMPARE_CERT_ID",
    "CERT_COMPARE_CROSS_CERT_DIST_POINTS",
    "CERT_COMPARE_CTL_USAGE",
    "CERT_COMPARE_ENHKEY_USAGE",
    "CERT_COMPARE_EXISTING",
    "CERT_COMPARE_HASH",
    "CERT_COMPARE_HASH_STR",
    "CERT_COMPARE_HAS_PRIVATE_KEY",
    "CERT_COMPARE_ISSUER_OF",
    "CERT_COMPARE_KEY_IDENTIFIER",
    "CERT_COMPARE_KEY_SPEC",
    "CERT_COMPARE_MASK",
    "CERT_COMPARE_MD5_HASH",
    "CERT_COMPARE_NAME",
    "CERT_COMPARE_NAME_STR_A",
    "CERT_COMPARE_NAME_STR_W",
    "CERT_COMPARE_PROPERTY",
    "CERT_COMPARE_PUBKEY_MD5_HASH",
    "CERT_COMPARE_PUBLIC_KEY",
    "CERT_COMPARE_SHA1_HASH",
    "CERT_COMPARE_SHIFT",
    "CERT_COMPARE_SIGNATURE_HASH",
    "CERT_COMPARE_SUBJECT_CERT",
    "CERT_COMPARE_SUBJECT_INFO_ACCESS",
    "CERT_CONTEXT",
    "CERT_CONTEXT_REVOCATION_TYPE",
    "CERT_CONTROL_STORE_FLAGS",
    "CERT_CREATE_CONTEXT_NOCOPY_FLAG",
    "CERT_CREATE_CONTEXT_NO_ENTRY_FLAG",
    "CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG",
    "CERT_CREATE_CONTEXT_PARA",
    "CERT_CREATE_CONTEXT_SORTED_FLAG",
    "CERT_CREATE_SELFSIGN_FLAGS",
    "CERT_CREATE_SELFSIGN_NO_KEY_INFO",
    "CERT_CREATE_SELFSIGN_NO_SIGN",
    "CERT_CRL_CONTEXT_PAIR",
    "CERT_CRL_SIGN_KEY_USAGE",
    "CERT_CROSS_CERT_DIST_POINTS_PROP_ID",
    "CERT_CTL_USAGE_PROP_ID",
    "CERT_DATA_ENCIPHERMENT_KEY_USAGE",
    "CERT_DATE_STAMP_PROP_ID",
    "CERT_DECIPHER_ONLY_KEY_USAGE",
    "CERT_DEFAULT_OID_PUBLIC_KEY_SIGN",
    "CERT_DEFAULT_OID_PUBLIC_KEY_XCHG",
    "CERT_DESCRIPTION_PROP_ID",
    "CERT_DH_PARAMETERS",
    "CERT_DIGITAL_SIGNATURE_KEY_USAGE",
    "CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME",
    "CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME",
    "CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME",
    "CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME",
    "CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER",
    "CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME",
    "CERT_DISALLOWED_CERT_CAB_FILENAME",
    "CERT_DISALLOWED_CERT_CTL_FILENAME",
    "CERT_DISALLOWED_CERT_CTL_FILENAME_A",
    "CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID",
    "CERT_DISALLOWED_FILETIME_PROP_ID",
    "CERT_DSS_PARAMETERS",
    "CERT_DSS_R_LEN",
    "CERT_DSS_S_LEN",
    "CERT_ECC_SIGNATURE",
    "CERT_EFSBLOB_VALUE_NAME",
    "CERT_EFS_PROP_ID",
    "CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME",
    "CERT_ENCIPHER_ONLY_KEY_USAGE",
    "CERT_ENCODING_TYPE_MASK",
    "CERT_END_ENTITY_SUBJECT_FLAG",
    "CERT_ENHKEY_USAGE_PROP_ID",
    "CERT_ENROLLMENT_PROP_ID",
    "CERT_EXCLUDED_SUBTREE_BIT",
    "CERT_EXTENDED_ERROR_INFO_PROP_ID",
    "CERT_EXTENSION",
    "CERT_EXTENSIONS",
    "CERT_FILE_HASH_USE_TYPE",
    "CERT_FILE_STORE_COMMIT_ENABLE_FLAG",
    "CERT_FIND_ANY",
    "CERT_FIND_CERT_ID",
    "CERT_FIND_CHAIN_IN_STORE_FLAGS",
    "CERT_FIND_CROSS_CERT_DIST_POINTS",
    "CERT_FIND_CTL_USAGE",
    "CERT_FIND_ENHKEY_USAGE",
    "CERT_FIND_EXISTING",
    "CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG",
    "CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG",
    "CERT_FIND_FLAGS",
    "CERT_FIND_HASH",
    "CERT_FIND_HASH_STR",
    "CERT_FIND_HAS_PRIVATE_KEY",
    "CERT_FIND_ISSUER_ATTR",
    "CERT_FIND_ISSUER_NAME",
    "CERT_FIND_ISSUER_OF",
    "CERT_FIND_ISSUER_STR",
    "CERT_FIND_ISSUER_STR_A",
    "CERT_FIND_ISSUER_STR_W",
    "CERT_FIND_KEY_IDENTIFIER",
    "CERT_FIND_KEY_SPEC",
    "CERT_FIND_MD5_HASH",
    "CERT_FIND_NO_CTL_USAGE_FLAG",
    "CERT_FIND_NO_ENHKEY_USAGE_FLAG",
    "CERT_FIND_OPTIONAL_CTL_USAGE_FLAG",
    "CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG",
    "CERT_FIND_OR_CTL_USAGE_FLAG",
    "CERT_FIND_OR_ENHKEY_USAGE_FLAG",
    "CERT_FIND_PROPERTY",
    "CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG",
    "CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG",
    "CERT_FIND_PUBKEY_MD5_HASH",
    "CERT_FIND_PUBLIC_KEY",
    "CERT_FIND_SHA1_HASH",
    "CERT_FIND_SIGNATURE_HASH",
    "CERT_FIND_SUBJECT_ATTR",
    "CERT_FIND_SUBJECT_CERT",
    "CERT_FIND_SUBJECT_INFO_ACCESS",
    "CERT_FIND_SUBJECT_NAME",
    "CERT_FIND_SUBJECT_STR",
    "CERT_FIND_SUBJECT_STR_A",
    "CERT_FIND_SUBJECT_STR_W",
    "CERT_FIND_TYPE",
    "CERT_FIND_VALID_CTL_USAGE_FLAG",
    "CERT_FIND_VALID_ENHKEY_USAGE_FLAG",
    "CERT_FIRST_RESERVED_PROP_ID",
    "CERT_FIRST_USER_PROP_ID",
    "CERT_FORTEZZA_DATA_PROP",
    "CERT_FORTEZZA_DATA_PROP_ID",
    "CERT_FRIENDLY_NAME_PROP_ID",
    "CERT_GENERAL_SUBTREE",
    "CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH",
    "CERT_HASHED_URL",
    "CERT_HASH_PROP_ID",
    "CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID",
    "CERT_HCRYPTPROV_TRANSFER_PROP_ID",
    "CERT_ID",
    "CERT_ID_ISSUER_SERIAL_NUMBER",
    "CERT_ID_KEY_IDENTIFIER",
    "CERT_ID_OPTION",
    "CERT_ID_SHA1_HASH",
    "CERT_IE30_RESERVED_PROP_ID",
    "CERT_IE_DIRTY_FLAGS_REGPATH",
    "CERT_INFO",
    "CERT_INFO_EXTENSION_FLAG",
    "CERT_INFO_ISSUER_FLAG",
    "CERT_INFO_ISSUER_UNIQUE_ID_FLAG",
    "CERT_INFO_NOT_AFTER_FLAG",
    "CERT_INFO_NOT_BEFORE_FLAG",
    "CERT_INFO_SERIAL_NUMBER_FLAG",
    "CERT_INFO_SIGNATURE_ALGORITHM_FLAG",
    "CERT_INFO_SUBJECT_FLAG",
    "CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG",
    "CERT_INFO_SUBJECT_UNIQUE_ID_FLAG",
    "CERT_INFO_VERSION_FLAG",
    "CERT_ISOLATED_KEY_PROP_ID",
    "CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID",
    "CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID",
    "CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID",
    "CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID",
    "CERT_ISSUER_SERIAL_NUMBER",
    "CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID",
    "CERT_KEYGEN_REQUEST_INFO",
    "CERT_KEYGEN_REQUEST_V1",
    "CERT_KEY_AGREEMENT_KEY_USAGE",
    "CERT_KEY_ATTRIBUTES_INFO",
    "CERT_KEY_CERT_SIGN_KEY_USAGE",
    "CERT_KEY_CLASSIFICATION_PROP_ID",
    "CERT_KEY_CONTEXT",
    "CERT_KEY_CONTEXT_PROP_ID",
    "CERT_KEY_ENCIPHERMENT_KEY_USAGE",
    "CERT_KEY_IDENTIFIER_PROP_ID",
    "CERT_KEY_PROV_HANDLE_PROP_ID",
    "CERT_KEY_PROV_INFO_PROP_ID",
    "CERT_KEY_REPAIR_ATTEMPTED_PROP_ID",
    "CERT_KEY_SPEC",
    "CERT_KEY_SPEC_PROP_ID",
    "CERT_KEY_USAGE_RESTRICTION_INFO",
    "CERT_LAST_RESERVED_PROP_ID",
    "CERT_LAST_USER_PROP_ID",
    "CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG",
    "CERT_LDAP_STORE_OPENED_FLAG",
    "CERT_LDAP_STORE_OPENED_PARA",
    "CERT_LDAP_STORE_SIGN_FLAG",
    "CERT_LDAP_STORE_UNBIND_FLAG",
    "CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH",
    "CERT_LOGOTYPE_AUDIO",
    "CERT_LOGOTYPE_AUDIO_INFO",
    "CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE",
    "CERT_LOGOTYPE_CHOICE",
    "CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE",
    "CERT_LOGOTYPE_DATA",
    "CERT_LOGOTYPE_DETAILS",
    "CERT_LOGOTYPE_DIRECT_INFO_CHOICE",
    "CERT_LOGOTYPE_EXT_INFO",
    "CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE",
    "CERT_LOGOTYPE_IMAGE",
    "CERT_LOGOTYPE_IMAGE_INFO",
    "CERT_LOGOTYPE_IMAGE_INFO_TYPE",
    "CERT_LOGOTYPE_INDIRECT_INFO_CHOICE",
    "CERT_LOGOTYPE_INFO",
    "CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE",
    "CERT_LOGOTYPE_OPTION",
    "CERT_LOGOTYPE_REFERENCE",
    "CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE",
    "CERT_MD5_HASH_PROP_ID",
    "CERT_NAME_ATTR_TYPE",
    "CERT_NAME_CONSTRAINTS_INFO",
    "CERT_NAME_DISABLE_IE4_UTF8_FLAG",
    "CERT_NAME_DNS_TYPE",
    "CERT_NAME_EMAIL_TYPE",
    "CERT_NAME_FRIENDLY_DISPLAY_TYPE",
    "CERT_NAME_INFO",
    "CERT_NAME_ISSUER_FLAG",
    "CERT_NAME_RDN_TYPE",
    "CERT_NAME_SEARCH_ALL_NAMES_FLAG",
    "CERT_NAME_SIMPLE_DISPLAY_TYPE",
    "CERT_NAME_STR_COMMA_FLAG",
    "CERT_NAME_STR_CRLF_FLAG",
    "CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG",
    "CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG",
    "CERT_NAME_STR_ENABLE_PUNYCODE_FLAG",
    "CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG",
    "CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG",
    "CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG",
    "CERT_NAME_STR_FORWARD_FLAG",
    "CERT_NAME_STR_NO_PLUS_FLAG",
    "CERT_NAME_STR_NO_QUOTING_FLAG",
    "CERT_NAME_STR_REVERSE_FLAG",
    "CERT_NAME_STR_SEMICOLON_FLAG",
    "CERT_NAME_UPN_TYPE",
    "CERT_NAME_URL_TYPE",
    "CERT_NAME_VALUE",
    "CERT_NCRYPT_KEY_HANDLE_PROP_ID",
    "CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID",
    "CERT_NCRYPT_KEY_SPEC",
    "CERT_NEW_KEY_PROP_ID",
    "CERT_NEXT_UPDATE_LOCATION_PROP_ID",
    "CERT_NONCOMPLIANT_ROOT_URL_PROP_ID",
    "CERT_NON_REPUDIATION_KEY_USAGE",
    "CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID",
    "CERT_NOT_BEFORE_FILETIME_PROP_ID",
    "CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID",
    "CERT_NO_EXPIRE_NOTIFICATION_PROP_ID",
    "CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH",
    "CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME",
    "CERT_OCSP_CACHE_PREFIX_PROP_ID",
    "CERT_OCSP_MUST_STAPLE_PROP_ID",
    "CERT_OCSP_RESPONSE_PROP_ID",
    "CERT_OFFLINE_CRL_SIGN_KEY_USAGE",
    "CERT_OID_NAME_STR",
    "CERT_OPEN_STORE_FLAGS",
    "CERT_OR_CRL_BLOB",
    "CERT_OR_CRL_BUNDLE",
    "CERT_OTHER_LOGOTYPE_INFO",
    "CERT_OTHER_NAME",
    "CERT_PAIR",
    "CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG",
    "CERT_PHYSICAL_STORE_AUTH_ROOT_NAME",
    "CERT_PHYSICAL_STORE_DEFAULT_NAME",
    "CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME",
    "CERT_PHYSICAL_STORE_ENTERPRISE_NAME",
    "CERT_PHYSICAL_STORE_GROUP_POLICY_NAME",
    "CERT_PHYSICAL_STORE_INFO",
    "CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG",
    "CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME",
    "CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME",
    "CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG",
    "CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG",
    "CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG",
    "CERT_PHYSICAL_STORE_SMART_CARD_NAME",
    "CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME",
    "CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME",
    "CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER",
    "CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME",
    "CERT_PIN_RULES_CAB_FILENAME",
    "CERT_PIN_RULES_CTL_FILENAME",
    "CERT_PIN_RULES_CTL_FILENAME_A",
    "CERT_PIN_SHA256_HASH_PROP_ID",
    "CERT_POLICIES_INFO",
    "CERT_POLICY95_QUALIFIER1",
    "CERT_POLICY_CONSTRAINTS_INFO",
    "CERT_POLICY_ID",
    "CERT_POLICY_INFO",
    "CERT_POLICY_MAPPING",
    "CERT_POLICY_MAPPINGS_INFO",
    "CERT_POLICY_QUALIFIER_INFO",
    "CERT_POLICY_QUALIFIER_NOTICE_REFERENCE",
    "CERT_POLICY_QUALIFIER_USER_NOTICE",
    "CERT_PRIVATE_KEY_VALIDITY",
    "CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG",
    "CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG",
    "CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG",
    "CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG",
    "CERT_PROT_ROOT_DISABLE_PEER_TRUST",
    "CERT_PROT_ROOT_FLAGS_VALUE_NAME",
    "CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG",
    "CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG",
    "CERT_PROT_ROOT_ONLY_LM_GPT_FLAG",
    "CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME",
    "CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A",
    "CERT_PUBKEY_ALG_PARA_PROP_ID",
    "CERT_PUBKEY_HASH_RESERVED_PROP_ID",
    "CERT_PUBLIC_KEY_INFO",
    "CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID",
    "CERT_PVK_FILE_PROP_ID",
    "CERT_QC_STATEMENT",
    "CERT_QC_STATEMENTS_EXT_INFO",
    "CERT_QUERY_CONTENT_CERT",
    "CERT_QUERY_CONTENT_CERT_PAIR",
    "CERT_QUERY_CONTENT_CRL",
    "CERT_QUERY_CONTENT_CTL",
    "CERT_QUERY_CONTENT_FLAG_ALL",
    "CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT",
    "CERT_QUERY_CONTENT_FLAG_CERT",
    "CERT_QUERY_CONTENT_FLAG_CERT_PAIR",
    "CERT_QUERY_CONTENT_FLAG_CRL",
    "CERT_QUERY_CONTENT_FLAG_CTL",
    "CERT_QUERY_CONTENT_FLAG_PFX",
    "CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD",
    "CERT_QUERY_CONTENT_FLAG_PKCS10",
    "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED",
    "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED",
    "CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED",
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT",
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL",
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL",
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE",
    "CERT_QUERY_CONTENT_PFX",
    "CERT_QUERY_CONTENT_PFX_AND_LOAD",
    "CERT_QUERY_CONTENT_PKCS10",
    "CERT_QUERY_CONTENT_PKCS7_SIGNED",
    "CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED",
    "CERT_QUERY_CONTENT_PKCS7_UNSIGNED",
    "CERT_QUERY_CONTENT_SERIALIZED_CERT",
    "CERT_QUERY_CONTENT_SERIALIZED_CRL",
    "CERT_QUERY_CONTENT_SERIALIZED_CTL",
    "CERT_QUERY_CONTENT_SERIALIZED_STORE",
    "CERT_QUERY_CONTENT_TYPE",
    "CERT_QUERY_CONTENT_TYPE_FLAGS",
    "CERT_QUERY_ENCODING_TYPE",
    "CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED",
    "CERT_QUERY_FORMAT_BASE64_ENCODED",
    "CERT_QUERY_FORMAT_BINARY",
    "CERT_QUERY_FORMAT_FLAG_ALL",
    "CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED",
    "CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED",
    "CERT_QUERY_FORMAT_FLAG_BINARY",
    "CERT_QUERY_FORMAT_TYPE",
    "CERT_QUERY_FORMAT_TYPE_FLAGS",
    "CERT_QUERY_OBJECT_BLOB",
    "CERT_QUERY_OBJECT_FILE",
    "CERT_QUERY_OBJECT_TYPE",
    "CERT_RDN",
    "CERT_RDN_ANY_TYPE",
    "CERT_RDN_ATTR",
    "CERT_RDN_ATTR_VALUE_TYPE",
    "CERT_RDN_BMP_STRING",
    "CERT_RDN_DISABLE_CHECK_TYPE_FLAG",
    "CERT_RDN_DISABLE_IE4_UTF8_FLAG",
    "CERT_RDN_ENABLE_PUNYCODE_FLAG",
    "CERT_RDN_ENABLE_T61_UNICODE_FLAG",
    "CERT_RDN_ENABLE_UTF8_UNICODE_FLAG",
    "CERT_RDN_ENCODED_BLOB",
    "CERT_RDN_FLAGS_MASK",
    "CERT_RDN_FORCE_UTF8_UNICODE_FLAG",
    "CERT_RDN_GENERAL_STRING",
    "CERT_RDN_GRAPHIC_STRING",
    "CERT_RDN_IA5_STRING",
    "CERT_RDN_INT4_STRING",
    "CERT_RDN_ISO646_STRING",
    "CERT_RDN_NUMERIC_STRING",
    "CERT_RDN_OCTET_STRING",
    "CERT_RDN_PRINTABLE_STRING",
    "CERT_RDN_T61_STRING",
    "CERT_RDN_TELETEX_STRING",
    "CERT_RDN_TYPE_MASK",
    "CERT_RDN_UNICODE_STRING",
    "CERT_RDN_UNIVERSAL_STRING",
    "CERT_RDN_UTF8_STRING",
    "CERT_RDN_VIDEOTEX_STRING",
    "CERT_RDN_VISIBLE_STRING",
    "CERT_REGISTRY_STORE_CLIENT_GPT_FLAG",
    "CERT_REGISTRY_STORE_CLIENT_GPT_PARA",
    "CERT_REGISTRY_STORE_EXTERNAL_FLAG",
    "CERT_REGISTRY_STORE_LM_GPT_FLAG",
    "CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG",
    "CERT_REGISTRY_STORE_REMOTE_FLAG",
    "CERT_REGISTRY_STORE_ROAMING_FLAG",
    "CERT_REGISTRY_STORE_ROAMING_PARA",
    "CERT_REGISTRY_STORE_SERIALIZED_FLAG",
    "CERT_RENEWAL_PROP_ID",
    "CERT_REQUEST_INFO",
    "CERT_REQUEST_ORIGINATOR_PROP_ID",
    "CERT_REQUEST_V1",
    "CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE",
    "CERT_RETRIEVE_COMMUNITY_LOGO",
    "CERT_RETRIEVE_ISSUER_LOGO",
    "CERT_RETRIEVE_SUBJECT_LOGO",
    "CERT_RETR_BEHAVIOR_FILE_VALUE_NAME",
    "CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME",
    "CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME",
    "CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME",
    "CERT_REVOCATION_CHAIN_PARA",
    "CERT_REVOCATION_CRL_INFO",
    "CERT_REVOCATION_INFO",
    "CERT_REVOCATION_PARA",
    "CERT_REVOCATION_STATUS",
    "CERT_REVOCATION_STATUS_REASON",
    "CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID",
    "CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID",
    "CERT_ROOT_PROGRAM_FLAGS",
    "CERT_ROOT_PROGRAM_FLAG_ADDRESS",
    "CERT_ROOT_PROGRAM_FLAG_LSC",
    "CERT_ROOT_PROGRAM_FLAG_ORG",
    "CERT_ROOT_PROGRAM_FLAG_OU",
    "CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO",
    "CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID",
    "CERT_RSA_PUBLIC_KEY_OBJID",
    "CERT_SCARD_PIN_ID_PROP_ID",
    "CERT_SCARD_PIN_INFO_PROP_ID",
    "CERT_SCEP_CA_CERT_PROP_ID",
    "CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID",
    "CERT_SCEP_FLAGS_PROP_ID",
    "CERT_SCEP_GUID_PROP_ID",
    "CERT_SCEP_NONCE_PROP_ID",
    "CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID",
    "CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID",
    "CERT_SCEP_SERVER_CERTS_PROP_ID",
    "CERT_SCEP_SIGNER_CERT_PROP_ID",
    "CERT_SELECT_ALLOW_DUPLICATES",
    "CERT_SELECT_ALLOW_EXPIRED",
    "CERT_SELECT_BY_ENHKEY_USAGE",
    "CERT_SELECT_BY_EXTENSION",
    "CERT_SELECT_BY_FRIENDLYNAME",
    "CERT_SELECT_BY_ISSUER_ATTR",
    "CERT_SELECT_BY_ISSUER_DISPLAYNAME",
    "CERT_SELECT_BY_ISSUER_NAME",
    "CERT_SELECT_BY_KEY_USAGE",
    "CERT_SELECT_BY_POLICY_OID",
    "CERT_SELECT_BY_PROV_NAME",
    "CERT_SELECT_BY_PUBLIC_KEY",
    "CERT_SELECT_BY_SUBJECT_ATTR",
    "CERT_SELECT_BY_SUBJECT_HOST_NAME",
    "CERT_SELECT_BY_THUMBPRINT",
    "CERT_SELECT_BY_TLS_SIGNATURES",
    "CERT_SELECT_CHAIN_PARA",
    "CERT_SELECT_CRITERIA",
    "CERT_SELECT_CRITERIA_TYPE",
    "CERT_SELECT_DISALLOW_SELFSIGNED",
    "CERT_SELECT_HARDWARE_ONLY",
    "CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE",
    "CERT_SELECT_HAS_KEY_FOR_SIGNATURE",
    "CERT_SELECT_HAS_PRIVATE_KEY",
    "CERT_SELECT_IGNORE_AUTOSELECT",
    "CERT_SELECT_MAX_PARA",
    "CERT_SELECT_TRUSTED_ROOT",
    "CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID",
    "CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID",
    "CERT_SERIAL_CHAIN_PROP_ID",
    "CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG",
    "CERT_SERVER_OCSP_RESPONSE_CONTEXT",
    "CERT_SERVER_OCSP_RESPONSE_OPEN_PARA",
    "CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG",
    "CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG",
    "CERT_SET_KEY_CONTEXT_PROP_ID",
    "CERT_SET_KEY_PROV_HANDLE_PROP_ID",
    "CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG",
    "CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG",
    "CERT_SHA1_HASH_PROP_ID",
    "CERT_SHA256_HASH_PROP_ID",
    "CERT_SIGNATURE_HASH_PROP_ID",
    "CERT_SIGNED_CONTENT_INFO",
    "CERT_SIGN_HASH_CNG_ALG_PROP_ID",
    "CERT_SIMPLE_CHAIN",
    "CERT_SIMPLE_NAME_STR",
    "CERT_SMART_CARD_DATA_PROP_ID",
    "CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID",
    "CERT_SMART_CARD_READER_PROP_ID",
    "CERT_SMART_CARD_ROOT_INFO_PROP_ID",
    "CERT_SOURCE_LOCATION_PROP_ID",
    "CERT_SOURCE_URL_PROP_ID",
    "CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME",
    "CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME",
    "CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME",
    "CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME",
    "CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT",
    "CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME",
    "CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME",
    "CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME",
    "CERT_STORE_ADD_ALWAYS",
    "CERT_STORE_ADD_NEW",
    "CERT_STORE_ADD_NEWER",
    "CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES",
    "CERT_STORE_ADD_REPLACE_EXISTING",
    "CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES",
    "CERT_STORE_ADD_USE_EXISTING",
    "CERT_STORE_BACKUP_RESTORE_FLAG",
    "CERT_STORE_BASE_CRL_FLAG",
    "CERT_STORE_CERTIFICATE_CONTEXT",
    "CERT_STORE_CREATE_NEW_FLAG",
    "CERT_STORE_CRL_CONTEXT",
    "CERT_STORE_CTL_CONTEXT",
    "CERT_STORE_CTRL_AUTO_RESYNC",
    "CERT_STORE_CTRL_CANCEL_NOTIFY",
    "CERT_STORE_CTRL_COMMIT",
    "CERT_STORE_CTRL_COMMIT_CLEAR_FLAG",
    "CERT_STORE_CTRL_COMMIT_FORCE_FLAG",
    "CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG",
    "CERT_STORE_CTRL_NOTIFY_CHANGE",
    "CERT_STORE_CTRL_RESYNC",
    "CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG",
    "CERT_STORE_DELETE_FLAG",
    "CERT_STORE_DELTA_CRL_FLAG",
    "CERT_STORE_ENUM_ARCHIVED_FLAG",
    "CERT_STORE_LOCALIZED_NAME_PROP_ID",
    "CERT_STORE_MANIFOLD_FLAG",
    "CERT_STORE_MAXIMUM_ALLOWED_FLAG",
    "CERT_STORE_NO_CRL_FLAG",
    "CERT_STORE_NO_CRYPT_RELEASE_FLAG",
    "CERT_STORE_NO_ISSUER_FLAG",
    "CERT_STORE_OPEN_EXISTING_FLAG",
    "CERT_STORE_PROV_CLOSE_FUNC",
    "CERT_STORE_PROV_COLLECTION",
    "CERT_STORE_PROV_CONTROL_FUNC",
    "CERT_STORE_PROV_DELETED_FLAG",
    "CERT_STORE_PROV_DELETE_CERT_FUNC",
    "CERT_STORE_PROV_DELETE_CRL_FUNC",
    "CERT_STORE_PROV_DELETE_CTL_FUNC",
    "CERT_STORE_PROV_EXTERNAL_FLAG",
    "CERT_STORE_PROV_FILE",
    "CERT_STORE_PROV_FILENAME",
    "CERT_STORE_PROV_FILENAME_A",
    "CERT_STORE_PROV_FILENAME_W",
    "CERT_STORE_PROV_FIND_CERT_FUNC",
    "CERT_STORE_PROV_FIND_CRL_FUNC",
    "CERT_STORE_PROV_FIND_CTL_FUNC",
    "CERT_STORE_PROV_FIND_INFO",
    "CERT_STORE_PROV_FLAGS",
    "CERT_STORE_PROV_FREE_FIND_CERT_FUNC",
    "CERT_STORE_PROV_FREE_FIND_CRL_FUNC",
    "CERT_STORE_PROV_FREE_FIND_CTL_FUNC",
    "CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC",
    "CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC",
    "CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC",
    "CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG",
    "CERT_STORE_PROV_INFO",
    "CERT_STORE_PROV_LDAP",
    "CERT_STORE_PROV_LDAP_W",
    "CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG",
    "CERT_STORE_PROV_MEMORY",
    "CERT_STORE_PROV_MSG",
    "CERT_STORE_PROV_NO_PERSIST_FLAG",
    "CERT_STORE_PROV_PHYSICAL",
    "CERT_STORE_PROV_PHYSICAL_W",
    "CERT_STORE_PROV_PKCS12",
    "CERT_STORE_PROV_PKCS7",
    "CERT_STORE_PROV_READ_CERT_FUNC",
    "CERT_STORE_PROV_READ_CRL_FUNC",
    "CERT_STORE_PROV_READ_CTL_FUNC",
    "CERT_STORE_PROV_REG",
    "CERT_STORE_PROV_SERIALIZED",
    "CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC",
    "CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC",
    "CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC",
    "CERT_STORE_PROV_SHARED_USER_FLAG",
    "CERT_STORE_PROV_SMART_CARD",
    "CERT_STORE_PROV_SMART_CARD_W",
    "CERT_STORE_PROV_SYSTEM",
    "CERT_STORE_PROV_SYSTEM_A",
    "CERT_STORE_PROV_SYSTEM_REGISTRY",
    "CERT_STORE_PROV_SYSTEM_REGISTRY_A",
    "CERT_STORE_PROV_SYSTEM_REGISTRY_W",
    "CERT_STORE_PROV_SYSTEM_STORE_FLAG",
    "CERT_STORE_PROV_SYSTEM_W",
    "CERT_STORE_PROV_WRITE_ADD_FLAG",
    "CERT_STORE_PROV_WRITE_CERT_FUNC",
    "CERT_STORE_PROV_WRITE_CRL_FUNC",
    "CERT_STORE_PROV_WRITE_CTL_FUNC",
    "CERT_STORE_READONLY_FLAG",
    "CERT_STORE_REVOCATION_FLAG",
    "CERT_STORE_SAVE_AS",
    "CERT_STORE_SAVE_AS_PKCS12",
    "CERT_STORE_SAVE_AS_PKCS7",
    "CERT_STORE_SAVE_AS_STORE",
    "CERT_STORE_SAVE_TO",
    "CERT_STORE_SAVE_TO_FILE",
    "CERT_STORE_SAVE_TO_FILENAME",
    "CERT_STORE_SAVE_TO_FILENAME_A",
    "CERT_STORE_SAVE_TO_FILENAME_W",
    "CERT_STORE_SAVE_TO_MEMORY",
    "CERT_STORE_SET_LOCALIZED_NAME_FLAG",
    "CERT_STORE_SHARE_CONTEXT_FLAG",
    "CERT_STORE_SHARE_STORE_FLAG",
    "CERT_STORE_SIGNATURE_FLAG",
    "CERT_STORE_TIME_VALIDITY_FLAG",
    "CERT_STORE_UNSAFE_PHYSICAL_FLAG",
    "CERT_STORE_UPDATE_KEYID_FLAG",
    "CERT_STRING_TYPE",
    "CERT_STRONG_SIGN_ECDSA_ALGORITHM",
    "CERT_STRONG_SIGN_ENABLE_CRL_CHECK",
    "CERT_STRONG_SIGN_ENABLE_OCSP_CHECK",
    "CERT_STRONG_SIGN_FLAGS",
    "CERT_STRONG_SIGN_OID_INFO_CHOICE",
    "CERT_STRONG_SIGN_PARA",
    "CERT_STRONG_SIGN_SERIALIZED_INFO",
    "CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE",
    "CERT_SUBJECT_DISABLE_CRL_PROP_ID",
    "CERT_SUBJECT_INFO_ACCESS_PROP_ID",
    "CERT_SUBJECT_NAME_MD5_HASH_PROP_ID",
    "CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID",
    "CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID",
    "CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID",
    "CERT_SUPPORTED_ALGORITHM_INFO",
    "CERT_SYSTEM_STORE_CURRENT_SERVICE_ID",
    "CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID",
    "CERT_SYSTEM_STORE_CURRENT_USER_ID",
    "CERT_SYSTEM_STORE_DEFER_READ_FLAG",
    "CERT_SYSTEM_STORE_FLAGS",
    "CERT_SYSTEM_STORE_INFO",
    "CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID",
    "CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID",
    "CERT_SYSTEM_STORE_LOCAL_MACHINE_ID",
    "CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID",
    "CERT_SYSTEM_STORE_LOCATION_MASK",
    "CERT_SYSTEM_STORE_LOCATION_SHIFT",
    "CERT_SYSTEM_STORE_MASK",
    "CERT_SYSTEM_STORE_RELOCATE_FLAG",
    "CERT_SYSTEM_STORE_RELOCATE_PARA",
    "CERT_SYSTEM_STORE_SERVICES_ID",
    "CERT_SYSTEM_STORE_UNPROTECTED_FLAG",
    "CERT_SYSTEM_STORE_USERS_ID",
    "CERT_TEMPLATE_EXT",
    "CERT_TIMESTAMP_HASH_USE_TYPE",
    "CERT_TPM_SPECIFICATION_INFO",
    "CERT_TRUST_AUTO_UPDATE_CA_REVOCATION",
    "CERT_TRUST_AUTO_UPDATE_END_REVOCATION",
    "CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID",
    "CERT_TRUST_CTL_IS_NOT_TIME_VALID",
    "CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE",
    "CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE",
    "CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE",
    "CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED",
    "CERT_TRUST_HAS_EXACT_MATCH_ISSUER",
    "CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT",
    "CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY",
    "CERT_TRUST_HAS_KEY_MATCH_ISSUER",
    "CERT_TRUST_HAS_NAME_MATCH_ISSUER",
    "CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT",
    "CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT",
    "CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT",
    "CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT",
    "CERT_TRUST_HAS_PREFERRED_ISSUER",
    "CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS",
    "CERT_TRUST_HAS_WEAK_HYGIENE",
    "CERT_TRUST_HAS_WEAK_SIGNATURE",
    "CERT_TRUST_INVALID_BASIC_CONSTRAINTS",
    "CERT_TRUST_INVALID_EXTENSION",
    "CERT_TRUST_INVALID_NAME_CONSTRAINTS",
    "CERT_TRUST_INVALID_POLICY_CONSTRAINTS",
    "CERT_TRUST_IS_CA_TRUSTED",
    "CERT_TRUST_IS_COMPLEX_CHAIN",
    "CERT_TRUST_IS_CYCLIC",
    "CERT_TRUST_IS_EXPLICIT_DISTRUST",
    "CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE",
    "CERT_TRUST_IS_KEY_ROLLOVER",
    "CERT_TRUST_IS_NOT_SIGNATURE_VALID",
    "CERT_TRUST_IS_NOT_TIME_NESTED",
    "CERT_TRUST_IS_NOT_TIME_VALID",
    "CERT_TRUST_IS_NOT_VALID_FOR_USAGE",
    "CERT_TRUST_IS_OFFLINE_REVOCATION",
    "CERT_TRUST_IS_PARTIAL_CHAIN",
    "CERT_TRUST_IS_PEER_TRUSTED",
    "CERT_TRUST_IS_REVOKED",
    "CERT_TRUST_IS_SELF_SIGNED",
    "CERT_TRUST_IS_UNTRUSTED_ROOT",
    "CERT_TRUST_LIST_INFO",
    "CERT_TRUST_NO_ERROR",
    "CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY",
    "CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL",
    "CERT_TRUST_NO_TIME_CHECK",
    "CERT_TRUST_PUB_ALLOW_END_USER_TRUST",
    "CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST",
    "CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST",
    "CERT_TRUST_PUB_ALLOW_TRUST_MASK",
    "CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME",
    "CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG",
    "CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG",
    "CERT_TRUST_REVOCATION_STATUS_UNKNOWN",
    "CERT_TRUST_SSL_HANDSHAKE_OCSP",
    "CERT_TRUST_SSL_RECONNECT_OCSP",
    "CERT_TRUST_SSL_TIME_VALID",
    "CERT_TRUST_SSL_TIME_VALID_OCSP",
    "CERT_TRUST_STATUS",
    "CERT_UNICODE_ATTR_ERR_INDEX_MASK",
    "CERT_UNICODE_ATTR_ERR_INDEX_SHIFT",
    "CERT_UNICODE_IS_RDN_ATTRS_FLAG",
    "CERT_UNICODE_RDN_ERR_INDEX_MASK",
    "CERT_UNICODE_RDN_ERR_INDEX_SHIFT",
    "CERT_UNICODE_VALUE_ERR_INDEX_MASK",
    "CERT_UNICODE_VALUE_ERR_INDEX_SHIFT",
    "CERT_USAGE_MATCH",
    "CERT_V1",
    "CERT_V2",
    "CERT_V3",
    "CERT_VERIFY_ALLOW_MORE_USAGE_FLAG",
    "CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION",
    "CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG",
    "CERT_VERIFY_NO_TIME_CHECK_FLAG",
    "CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG",
    "CERT_VERIFY_REV_CHAIN_FLAG",
    "CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG",
    "CERT_VERIFY_REV_SERVER_OCSP_FLAG",
    "CERT_VERIFY_REV_SERVER_OCSP_WIRE_ONLY_FLAG",
    "CERT_VERIFY_TRUSTED_SIGNERS_FLAG",
    "CERT_VERIFY_UPDATED_CTL_FLAG",
    "CERT_X500_NAME_STR",
    "CERT_X942_DH_PARAMETERS",
    "CERT_X942_DH_VALIDATION_PARAMS",
    "CERT_XML_NAME_STR",
    "CESSetupProperty",
    "CLAIMLIST",
    "CMC_ADD_ATTRIBUTES",
    "CMC_ADD_ATTRIBUTES_INFO",
    "CMC_ADD_EXTENSIONS",
    "CMC_ADD_EXTENSIONS_INFO",
    "CMC_DATA",
    "CMC_DATA_INFO",
    "CMC_FAIL_BAD_ALG",
    "CMC_FAIL_BAD_CERT_ID",
    "CMC_FAIL_BAD_IDENTITY",
    "CMC_FAIL_BAD_MESSAGE_CHECK",
    "CMC_FAIL_BAD_REQUEST",
    "CMC_FAIL_BAD_TIME",
    "CMC_FAIL_INTERNAL_CA_ERROR",
    "CMC_FAIL_MUST_ARCHIVE_KEYS",
    "CMC_FAIL_NO_KEY_REUSE",
    "CMC_FAIL_POP_FAILED",
    "CMC_FAIL_POP_REQUIRED",
    "CMC_FAIL_TRY_LATER",
    "CMC_FAIL_UNSUPORTED_EXT",
    "CMC_OTHER_INFO_FAIL_CHOICE",
    "CMC_OTHER_INFO_NO_CHOICE",
    "CMC_OTHER_INFO_PEND_CHOICE",
    "CMC_PEND_INFO",
    "CMC_RESPONSE",
    "CMC_RESPONSE_INFO",
    "CMC_STATUS",
    "CMC_STATUS_CONFIRM_REQUIRED",
    "CMC_STATUS_FAILED",
    "CMC_STATUS_INFO",
    "CMC_STATUS_NO_SUPPORT",
    "CMC_STATUS_PENDING",
    "CMC_STATUS_SUCCESS",
    "CMC_TAGGED_ATTRIBUTE",
    "CMC_TAGGED_CERT_REQUEST",
    "CMC_TAGGED_CERT_REQUEST_CHOICE",
    "CMC_TAGGED_CONTENT_INFO",
    "CMC_TAGGED_OTHER_MSG",
    "CMC_TAGGED_REQUEST",
    "CMSCEPSetup",
    "CMSG_ATTR_CERT_COUNT_PARAM",
    "CMSG_ATTR_CERT_PARAM",
    "CMSG_AUTHENTICATED_ATTRIBUTES_FLAG",
    "CMSG_BARE_CONTENT_FLAG",
    "CMSG_BARE_CONTENT_PARAM",
    "CMSG_CERT_COUNT_PARAM",
    "CMSG_CERT_PARAM",
    "CMSG_CMS_ENCAPSULATED_CONTENT_FLAG",
    "CMSG_CMS_ENCAPSULATED_CTL_FLAG",
    "CMSG_CMS_RECIPIENT_COUNT_PARAM",
    "CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM",
    "CMSG_CMS_RECIPIENT_INDEX_PARAM",
    "CMSG_CMS_RECIPIENT_INFO",
    "CMSG_CMS_RECIPIENT_INFO_PARAM",
    "CMSG_CMS_SIGNER_INFO",
    "CMSG_CMS_SIGNER_INFO_PARAM",
    "CMSG_CNG_CONTENT_DECRYPT_INFO",
    "CMSG_COMPUTED_HASH_PARAM",
    "CMSG_CONTENTS_OCTETS_FLAG",
    "CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG",
    "CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG",
    "CMSG_CONTENT_ENCRYPT_INFO",
    "CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG",
    "CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG",
    "CMSG_CONTENT_PARAM",
    "CMSG_CRL_COUNT_PARAM",
    "CMSG_CRL_PARAM",
    "CMSG_CRYPT_RELEASE_CONTEXT_FLAG",
    "CMSG_CTRL_ADD_ATTR_CERT",
    "CMSG_CTRL_ADD_CERT",
    "CMSG_CTRL_ADD_CMS_SIGNER_INFO",
    "CMSG_CTRL_ADD_CRL",
    "CMSG_CTRL_ADD_SIGNER",
    "CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR",
    "CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA",
    "CMSG_CTRL_DECRYPT",
    "CMSG_CTRL_DECRYPT_PARA",
    "CMSG_CTRL_DEL_ATTR_CERT",
    "CMSG_CTRL_DEL_CERT",
    "CMSG_CTRL_DEL_CRL",
    "CMSG_CTRL_DEL_SIGNER",
    "CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR",
    "CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA",
    "CMSG_CTRL_ENABLE_STRONG_SIGNATURE",
    "CMSG_CTRL_KEY_AGREE_DECRYPT",
    "CMSG_CTRL_KEY_AGREE_DECRYPT_PARA",
    "CMSG_CTRL_KEY_TRANS_DECRYPT",
    "CMSG_CTRL_KEY_TRANS_DECRYPT_PARA",
    "CMSG_CTRL_MAIL_LIST_DECRYPT",
    "CMSG_CTRL_MAIL_LIST_DECRYPT_PARA",
    "CMSG_CTRL_VERIFY_HASH",
    "CMSG_CTRL_VERIFY_SIGNATURE",
    "CMSG_CTRL_VERIFY_SIGNATURE_EX",
    "CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA",
    "CMSG_DATA",
    "CMSG_DEFAULT_INSTALLABLE_FUNC_OID",
    "CMSG_DETACHED_FLAG",
    "CMSG_ENCODED_MESSAGE",
    "CMSG_ENCODED_SIGNER",
    "CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG",
    "CMSG_ENCODE_SORTED_CTL_FLAG",
    "CMSG_ENCODING_TYPE_MASK",
    "CMSG_ENCRYPTED",
    "CMSG_ENCRYPTED_DIGEST",
    "CMSG_ENCRYPTED_ENCODE_INFO",
    "CMSG_ENCRYPT_PARAM",
    "CMSG_ENVELOPED",
    "CMSG_ENVELOPED_DATA_CMS_VERSION",
    "CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION",
    "CMSG_ENVELOPED_DATA_V0",
    "CMSG_ENVELOPED_DATA_V2",
    "CMSG_ENVELOPED_ENCODE_INFO",
    "CMSG_ENVELOPED_RECIPIENT_V0",
    "CMSG_ENVELOPED_RECIPIENT_V2",
    "CMSG_ENVELOPED_RECIPIENT_V3",
    "CMSG_ENVELOPED_RECIPIENT_V4",
    "CMSG_ENVELOPE_ALGORITHM_PARAM",
    "CMSG_HASHED",
    "CMSG_HASHED_DATA_CMS_VERSION",
    "CMSG_HASHED_DATA_PKCS_1_5_VERSION",
    "CMSG_HASHED_DATA_V0",
    "CMSG_HASHED_DATA_V2",
    "CMSG_HASHED_ENCODE_INFO",
    "CMSG_HASH_ALGORITHM_PARAM",
    "CMSG_HASH_DATA_PARAM",
    "CMSG_INDEFINITE_LENGTH",
    "CMSG_INNER_CONTENT_TYPE_PARAM",
    "CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG",
    "CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG",
    "CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG",
    "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG",
    "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG",
    "CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG",
    "CMSG_KEY_AGREE_ENCRYPT_INFO",
    "CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE",
    "CMSG_KEY_AGREE_KEY_ENCRYPT_INFO",
    "CMSG_KEY_AGREE_OPTION",
    "CMSG_KEY_AGREE_ORIGINATOR",
    "CMSG_KEY_AGREE_ORIGINATOR_CERT",
    "CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY",
    "CMSG_KEY_AGREE_RECIPIENT",
    "CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO",
    "CMSG_KEY_AGREE_RECIPIENT_INFO",
    "CMSG_KEY_AGREE_STATIC_KEY_CHOICE",
    "CMSG_KEY_AGREE_VERSION",
    "CMSG_KEY_TRANS_CMS_VERSION",
    "CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG",
    "CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG",
    "CMSG_KEY_TRANS_ENCRYPT_INFO",
    "CMSG_KEY_TRANS_PKCS_1_5_VERSION",
    "CMSG_KEY_TRANS_RECIPIENT",
    "CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO",
    "CMSG_KEY_TRANS_RECIPIENT_INFO",
    "CMSG_LENGTH_ONLY_FLAG",
    "CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG",
    "CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG",
    "CMSG_MAIL_LIST_ENCRYPT_INFO",
    "CMSG_MAIL_LIST_HANDLE_KEY_CHOICE",
    "CMSG_MAIL_LIST_RECIPIENT",
    "CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO",
    "CMSG_MAIL_LIST_RECIPIENT_INFO",
    "CMSG_MAIL_LIST_VERSION",
    "CMSG_MAX_LENGTH_FLAG",
    "CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC",
    "CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC",
    "CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC",
    "CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC",
    "CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC",
    "CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC",
    "CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC",
    "CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC",
    "CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC",
    "CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC",
    "CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC",
    "CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC",
    "CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC",
    "CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC",
    "CMSG_OID_EXPORT_KEY_AGREE_FUNC",
    "CMSG_OID_EXPORT_KEY_TRANS_FUNC",
    "CMSG_OID_EXPORT_MAIL_LIST_FUNC",
    "CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC",
    "CMSG_OID_GEN_ENCRYPT_KEY_FUNC",
    "CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC",
    "CMSG_OID_IMPORT_KEY_AGREE_FUNC",
    "CMSG_OID_IMPORT_KEY_TRANS_FUNC",
    "CMSG_OID_IMPORT_MAIL_LIST_FUNC",
    "CMSG_RC2_AUX_INFO",
    "CMSG_RC4_AUX_INFO",
    "CMSG_RC4_NO_SALT_FLAG",
    "CMSG_RECIPIENT_COUNT_PARAM",
    "CMSG_RECIPIENT_ENCODE_INFO",
    "CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO",
    "CMSG_RECIPIENT_ENCRYPTED_KEY_INFO",
    "CMSG_RECIPIENT_INDEX_PARAM",
    "CMSG_RECIPIENT_INFO_PARAM",
    "CMSG_SIGNED",
    "CMSG_SIGNED_AND_ENVELOPED",
    "CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO",
    "CMSG_SIGNED_DATA_CMS_VERSION",
    "CMSG_SIGNED_DATA_NO_SIGN_FLAG",
    "CMSG_SIGNED_DATA_PKCS_1_5_VERSION",
    "CMSG_SIGNED_DATA_V1",
    "CMSG_SIGNED_DATA_V3",
    "CMSG_SIGNED_ENCODE_INFO",
    "CMSG_SIGNER_AUTH_ATTR_PARAM",
    "CMSG_SIGNER_CERT_ID_PARAM",
    "CMSG_SIGNER_CERT_INFO_PARAM",
    "CMSG_SIGNER_COUNT_PARAM",
    "CMSG_SIGNER_ENCODE_INFO",
    "CMSG_SIGNER_HASH_ALGORITHM_PARAM",
    "CMSG_SIGNER_INFO",
    "CMSG_SIGNER_INFO_CMS_VERSION",
    "CMSG_SIGNER_INFO_PARAM",
    "CMSG_SIGNER_INFO_PKCS_1_5_VERSION",
    "CMSG_SIGNER_INFO_V1",
    "CMSG_SIGNER_INFO_V3",
    "CMSG_SIGNER_ONLY_FLAG",
    "CMSG_SIGNER_UNAUTH_ATTR_PARAM",
    "CMSG_SP3_COMPATIBLE_AUX_INFO",
    "CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG",
    "CMSG_STREAM_INFO",
    "CMSG_TRUSTED_SIGNER_FLAG",
    "CMSG_TYPE_PARAM",
    "CMSG_UNPROTECTED_ATTR_PARAM",
    "CMSG_USE_SIGNER_INDEX_FLAG",
    "CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG",
    "CMSG_VERIFY_SIGNER_CERT",
    "CMSG_VERIFY_SIGNER_CHAIN",
    "CMSG_VERIFY_SIGNER_NULL",
    "CMSG_VERIFY_SIGNER_PUBKEY",
    "CMSG_VERSION_PARAM",
    "CMS_DH_KEY_INFO",
    "CMS_KEY_INFO",
    "CMS_SIGNER_INFO",
    "CNG_RSA_PRIVATE_KEY_BLOB",
    "CNG_RSA_PUBLIC_KEY_BLOB",
    "CONTEXT_OID_CAPI2_ANY",
    "CONTEXT_OID_CERTIFICATE",
    "CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC",
    "CONTEXT_OID_CRL",
    "CONTEXT_OID_CTL",
    "CONTEXT_OID_OCSP_RESP",
    "CONTEXT_OID_PKCS7",
    "CPS_URLS",
    "CREDENTIAL_OID_PASSWORD_CREDENTIALS",
    "CREDENTIAL_OID_PASSWORD_CREDENTIALS_A",
    "CREDENTIAL_OID_PASSWORD_CREDENTIALS_W",
    "CRL_CONTEXT",
    "CRL_DIST_POINT",
    "CRL_DIST_POINTS_INFO",
    "CRL_DIST_POINT_ERR_CRL_ISSUER_BIT",
    "CRL_DIST_POINT_ERR_INDEX_MASK",
    "CRL_DIST_POINT_ERR_INDEX_SHIFT",
    "CRL_DIST_POINT_FULL_NAME",
    "CRL_DIST_POINT_ISSUER_RDN_NAME",
    "CRL_DIST_POINT_NAME",
    "CRL_DIST_POINT_NO_NAME",
    "CRL_ENTRY",
    "CRL_FIND_ANY",
    "CRL_FIND_EXISTING",
    "CRL_FIND_ISSUED_BY",
    "CRL_FIND_ISSUED_BY_AKI_FLAG",
    "CRL_FIND_ISSUED_BY_BASE_FLAG",
    "CRL_FIND_ISSUED_BY_DELTA_FLAG",
    "CRL_FIND_ISSUED_BY_SIGNATURE_FLAG",
    "CRL_FIND_ISSUED_FOR",
    "CRL_FIND_ISSUED_FOR_PARA",
    "CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG",
    "CRL_INFO",
    "CRL_ISSUING_DIST_POINT",
    "CRL_REASON_AA_COMPROMISE",
    "CRL_REASON_AA_COMPROMISE_FLAG",
    "CRL_REASON_AFFILIATION_CHANGED",
    "CRL_REASON_AFFILIATION_CHANGED_FLAG",
    "CRL_REASON_CA_COMPROMISE",
    "CRL_REASON_CA_COMPROMISE_FLAG",
    "CRL_REASON_CERTIFICATE_HOLD",
    "CRL_REASON_CERTIFICATE_HOLD_FLAG",
    "CRL_REASON_CESSATION_OF_OPERATION",
    "CRL_REASON_CESSATION_OF_OPERATION_FLAG",
    "CRL_REASON_KEY_COMPROMISE",
    "CRL_REASON_KEY_COMPROMISE_FLAG",
    "CRL_REASON_PRIVILEGE_WITHDRAWN",
    "CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG",
    "CRL_REASON_REMOVE_FROM_CRL",
    "CRL_REASON_SUPERSEDED",
    "CRL_REASON_SUPERSEDED_FLAG",
    "CRL_REASON_UNSPECIFIED",
    "CRL_REASON_UNUSED_FLAG",
    "CRL_REVOCATION_INFO",
    "CRL_V1",
    "CRL_V2",
    "CROSS_CERT_DIST_POINTS_INFO",
    "CROSS_CERT_DIST_POINT_ERR_INDEX_MASK",
    "CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT",
    "CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT",
    "CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME",
    "CRYPTNET_CRL_BEFORE_OCSP_ENABLE",
    "CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME",
    "CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME",
    "CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT",
    "CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME",
    "CRYPTNET_OCSP_AFTER_CRL_DISABLE",
    "CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT",
    "CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT",
    "CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT",
    "CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_TRIGGER_DISABLE",
    "CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME",
    "CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT",
    "CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME",
    "CRYPTNET_URL_CACHE_DEFAULT_FLUSH",
    "CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME",
    "CRYPTNET_URL_CACHE_DISABLE_FLUSH",
    "CRYPTNET_URL_CACHE_FLUSH_INFO",
    "CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB",
    "CRYPTNET_URL_CACHE_PRE_FETCH_BLOB",
    "CRYPTNET_URL_CACHE_PRE_FETCH_CRL",
    "CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB",
    "CRYPTNET_URL_CACHE_PRE_FETCH_INFO",
    "CRYPTNET_URL_CACHE_PRE_FETCH_NONE",
    "CRYPTNET_URL_CACHE_PRE_FETCH_OCSP",
    "CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB",
    "CRYPTNET_URL_CACHE_RESPONSE_HTTP",
    "CRYPTNET_URL_CACHE_RESPONSE_INFO",
    "CRYPTNET_URL_CACHE_RESPONSE_NONE",
    "CRYPTNET_URL_CACHE_RESPONSE_VALIDATED",
    "CRYPTPROTECTMEMORY_BLOCK_SIZE",
    "CRYPTPROTECTMEMORY_CROSS_PROCESS",
    "CRYPTPROTECTMEMORY_SAME_LOGON",
    "CRYPTPROTECTMEMORY_SAME_PROCESS",
    "CRYPTPROTECT_AUDIT",
    "CRYPTPROTECT_CRED_REGENERATE",
    "CRYPTPROTECT_CRED_SYNC",
    "CRYPTPROTECT_FIRST_RESERVED_FLAGVAL",
    "CRYPTPROTECT_LAST_RESERVED_FLAGVAL",
    "CRYPTPROTECT_LOCAL_MACHINE",
    "CRYPTPROTECT_NO_RECOVERY",
    "CRYPTPROTECT_PROMPTSTRUCT",
    "CRYPTPROTECT_PROMPT_ON_PROTECT",
    "CRYPTPROTECT_PROMPT_ON_UNPROTECT",
    "CRYPTPROTECT_PROMPT_REQUIRE_STRONG",
    "CRYPTPROTECT_PROMPT_RESERVED",
    "CRYPTPROTECT_PROMPT_STRONG",
    "CRYPTPROTECT_UI_FORBIDDEN",
    "CRYPTPROTECT_VERIFY_PROTECTION",
    "CRYPT_3DES_KEY_STATE",
    "CRYPT_ACCUMULATIVE_TIMEOUT",
    "CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG",
    "CRYPT_ACQUIRE_CACHE_FLAG",
    "CRYPT_ACQUIRE_COMPARE_KEY_FLAG",
    "CRYPT_ACQUIRE_FLAGS",
    "CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK",
    "CRYPT_ACQUIRE_NO_HEALING",
    "CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG",
    "CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG",
    "CRYPT_ACQUIRE_SILENT_FLAG",
    "CRYPT_ACQUIRE_USE_PROV_INFO_FLAG",
    "CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG",
    "CRYPT_AES_128_KEY_STATE",
    "CRYPT_AES_256_KEY_STATE",
    "CRYPT_AIA_RETRIEVAL",
    "CRYPT_ALGORITHM_IDENTIFIER",
    "CRYPT_ALL_FUNCTIONS",
    "CRYPT_ALL_PROVIDERS",
    "CRYPT_ANY",
    "CRYPT_ARCHIVABLE",
    "CRYPT_ARCHIVE",
    "CRYPT_ASN_ENCODING",
    "CRYPT_ASYNC_RETRIEVAL",
    "CRYPT_ASYNC_RETRIEVAL_COMPLETION",
    "CRYPT_ATTRIBUTE",
    "CRYPT_ATTRIBUTES",
    "CRYPT_ATTRIBUTE_TYPE_VALUE",
    "CRYPT_BIT_BLOB",
    "CRYPT_BLOB_ARRAY",
    "CRYPT_BLOB_VER3",
    "CRYPT_CACHE_ONLY_RETRIEVAL",
    "CRYPT_CHECK_FRESHNESS_TIME_VALIDITY",
    "CRYPT_CONTENT_INFO",
    "CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY",
    "CRYPT_CONTEXTS",
    "CRYPT_CONTEXT_CONFIG",
    "CRYPT_CONTEXT_CONFIG_FLAGS",
    "CRYPT_CONTEXT_FUNCTIONS",
    "CRYPT_CONTEXT_FUNCTION_CONFIG",
    "CRYPT_CONTEXT_FUNCTION_PROVIDERS",
    "CRYPT_CREATE_IV",
    "CRYPT_CREATE_NEW_FLUSH_ENTRY",
    "CRYPT_CREATE_SALT",
    "CRYPT_CREDENTIALS",
    "CRYPT_CSP_PROVIDER",
    "CRYPT_DATA_KEY",
    "CRYPT_DECODE_ALLOC_FLAG",
    "CRYPT_DECODE_ENABLE_PUNYCODE_FLAG",
    "CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG",
    "CRYPT_DECODE_NOCOPY_FLAG",
    "CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG",
    "CRYPT_DECODE_PARA",
    "CRYPT_DECODE_SHARE_OID_STRING_FLAG",
    "CRYPT_DECODE_TO_BE_SIGNED_FLAG",
    "CRYPT_DECRYPT",
    "CRYPT_DECRYPT_MESSAGE_PARA",
    "CRYPT_DECRYPT_RSA_NO_PADDING_CHECK",
    "CRYPT_DEFAULT_CONTAINER_OPTIONAL",
    "CRYPT_DEFAULT_CONTEXT",
    "CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG",
    "CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID",
    "CRYPT_DEFAULT_CONTEXT_FLAGS",
    "CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID",
    "CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA",
    "CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG",
    "CRYPT_DEFAULT_CONTEXT_TYPE",
    "CRYPT_DEFAULT_OID",
    "CRYPT_DELETEKEYSET",
    "CRYPT_DELETE_DEFAULT",
    "CRYPT_DELETE_KEYSET",
    "CRYPT_DESTROYKEY",
    "CRYPT_DES_KEY_STATE",
    "CRYPT_DOMAIN",
    "CRYPT_DONT_CACHE_RESULT",
    "CRYPT_DONT_CHECK_TIME_VALIDITY",
    "CRYPT_DONT_VERIFY_SIGNATURE",
    "CRYPT_ECC_CMS_SHARED_INFO",
    "CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH",
    "CRYPT_ECC_PRIVATE_KEY_INFO",
    "CRYPT_ECC_PRIVATE_KEY_INFO_v1",
    "CRYPT_ENABLE_FILE_RETRIEVAL",
    "CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL",
    "CRYPT_ENCODE_ALLOC_FLAG",
    "CRYPT_ENCODE_DECODE_NONE",
    "CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG",
    "CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG",
    "CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG",
    "CRYPT_ENCODE_OBJECT_FLAGS",
    "CRYPT_ENCODE_PARA",
    "CRYPT_ENCRYPT",
    "CRYPT_ENCRYPTED_PRIVATE_KEY_INFO",
    "CRYPT_ENCRYPT_ALG_OID_GROUP_ID",
    "CRYPT_ENCRYPT_MESSAGE_PARA",
    "CRYPT_ENHKEY_USAGE_OID_GROUP_ID",
    "CRYPT_ENROLLMENT_NAME_VALUE_PAIR",
    "CRYPT_EXCLUSIVE",
    "CRYPT_EXPORT",
    "CRYPT_EXPORTABLE",
    "CRYPT_EXPORT_KEY",
    "CRYPT_EXT_OR_ATTR_OID_GROUP_ID",
    "CRYPT_FAILED",
    "CRYPT_FASTSGC",
    "CRYPT_FIND_FLAGS",
    "CRYPT_FIND_MACHINE_KEYSET_FLAG",
    "CRYPT_FIND_SILENT_KEYSET_FLAG",
    "CRYPT_FIND_USER_KEYSET_FLAG",
    "CRYPT_FIRST",
    "CRYPT_FIRST_ALG_OID_GROUP_ID",
    "CRYPT_FLAG_IPSEC",
    "CRYPT_FLAG_PCT1",
    "CRYPT_FLAG_SIGNING",
    "CRYPT_FLAG_SSL2",
    "CRYPT_FLAG_SSL3",
    "CRYPT_FLAG_TLS1",
    "CRYPT_FORCE_KEY_PROTECTION_HIGH",
    "CRYPT_FORMAT_COMMA",
    "CRYPT_FORMAT_CRLF",
    "CRYPT_FORMAT_OID",
    "CRYPT_FORMAT_RDN_CRLF",
    "CRYPT_FORMAT_RDN_REVERSE",
    "CRYPT_FORMAT_RDN_SEMICOLON",
    "CRYPT_FORMAT_RDN_UNQUOTE",
    "CRYPT_FORMAT_SEMICOLON",
    "CRYPT_FORMAT_SIMPLE",
    "CRYPT_FORMAT_STR_MULTI_LINE",
    "CRYPT_FORMAT_STR_NO_HEX",
    "CRYPT_FORMAT_X509",
    "CRYPT_GET_INSTALLED_OID_FUNC_FLAG",
    "CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO",
    "CRYPT_GET_URL_FLAGS",
    "CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE",
    "CRYPT_GET_URL_FROM_EXTENSION",
    "CRYPT_GET_URL_FROM_PROPERTY",
    "CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE",
    "CRYPT_HASH_ALG_OID_GROUP_ID",
    "CRYPT_HASH_INFO",
    "CRYPT_HASH_MESSAGE_PARA",
    "CRYPT_HTTP_POST_RETRIEVAL",
    "CRYPT_IMAGE_REF",
    "CRYPT_IMAGE_REF_FLAGS",
    "CRYPT_IMAGE_REG",
    "CRYPT_IMPL_HARDWARE",
    "CRYPT_IMPL_MIXED",
    "CRYPT_IMPL_REMOVABLE",
    "CRYPT_IMPL_SOFTWARE",
    "CRYPT_IMPL_UNKNOWN",
    "CRYPT_IMPORT_KEY",
    "CRYPT_IMPORT_PUBLIC_KEY_FLAGS",
    "CRYPT_INITIATOR",
    "CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG",
    "CRYPT_INSTALL_OID_INFO_BEFORE_FLAG",
    "CRYPT_INTEGER_BLOB",
    "CRYPT_INTERFACE_REG",
    "CRYPT_IPSEC_HMAC_KEY",
    "CRYPT_KDF_OID_GROUP_ID",
    "CRYPT_KEEP_TIME_VALID",
    "CRYPT_KEK",
    "CRYPT_KEYID_ALLOC_FLAG",
    "CRYPT_KEYID_DELETE_FLAG",
    "CRYPT_KEYID_MACHINE_FLAG",
    "CRYPT_KEYID_SET_NEW_FLAG",
    "CRYPT_KEY_FLAGS",
    "CRYPT_KEY_PARAM_ID",
    "CRYPT_KEY_PROV_INFO",
    "CRYPT_KEY_PROV_PARAM",
    "CRYPT_KEY_SIGN_MESSAGE_PARA",
    "CRYPT_KEY_VERIFY_MESSAGE_PARA",
    "CRYPT_KM",
    "CRYPT_LAST_ALG_OID_GROUP_ID",
    "CRYPT_LAST_OID_GROUP_ID",
    "CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL",
    "CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE",
    "CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL",
    "CRYPT_LDAP_SIGN_RETRIEVAL",
    "CRYPT_LITTLE_ENDIAN",
    "CRYPT_LOCAL",
    "CRYPT_LOCALIZED_NAME_ENCODING_TYPE",
    "CRYPT_LOCALIZED_NAME_OID",
    "CRYPT_MAC",
    "CRYPT_MACHINE_DEFAULT",
    "CRYPT_MACHINE_KEYSET",
    "CRYPT_MASK_GEN_ALGORITHM",
    "CRYPT_MATCH_ANY_ENCODING_TYPE",
    "CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG",
    "CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG",
    "CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG",
    "CRYPT_MESSAGE_KEYID_SIGNER_FLAG",
    "CRYPT_MESSAGE_SILENT_KEYSET_FLAG",
    "CRYPT_MIN_DEPENDENCIES",
    "CRYPT_MM",
    "CRYPT_MODE_CBC",
    "CRYPT_MODE_CBCI",
    "CRYPT_MODE_CBCOFM",
    "CRYPT_MODE_CBCOFMI",
    "CRYPT_MODE_CFB",
    "CRYPT_MODE_CFBP",
    "CRYPT_MODE_CTS",
    "CRYPT_MODE_ECB",
    "CRYPT_MODE_OFB",
    "CRYPT_MODE_OFBP",
    "CRYPT_MSG_TYPE",
    "CRYPT_NDR_ENCODING",
    "CRYPT_NEWKEYSET",
    "CRYPT_NEXT",
    "CRYPT_NOHASHOID",
    "CRYPT_NOT_MODIFIED_RETRIEVAL",
    "CRYPT_NO_AUTH_RETRIEVAL",
    "CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL",
    "CRYPT_NO_SALT",
    "CRYPT_OAEP",
    "CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE",
    "CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE",
    "CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE",
    "CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE",
    "CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD",
    "CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT",
    "CRYPT_OBJECT_LOCATOR_RELEASE_REASON",
    "CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP",
    "CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN",
    "CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE",
    "CRYPT_OBJID_TABLE",
    "CRYPT_OCSP_ONLY_RETRIEVAL",
    "CRYPT_OFFLINE_CHECK_RETRIEVAL",
    "CRYPT_OID_CREATE_COM_OBJECT_FUNC",
    "CRYPT_OID_DECODE_OBJECT_EX_FUNC",
    "CRYPT_OID_DECODE_OBJECT_FUNC",
    "CRYPT_OID_DISABLE_SEARCH_DS_FLAG",
    "CRYPT_OID_ENCODE_OBJECT_EX_FUNC",
    "CRYPT_OID_ENCODE_OBJECT_FUNC",
    "CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC",
    "CRYPT_OID_ENUM_SYSTEM_STORE_FUNC",
    "CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC",
    "CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC",
    "CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC",
    "CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC",
    "CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC",
    "CRYPT_OID_FIND_LOCALIZED_NAME_FUNC",
    "CRYPT_OID_FIND_OID_INFO_FUNC",
    "CRYPT_OID_FORMAT_OBJECT_FUNC",
    "CRYPT_OID_FUNC_ENTRY",
    "CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC",
    "CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC",
    "CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC",
    "CRYPT_OID_INFO",
    "CRYPT_OID_INFO_ALGID_KEY",
    "CRYPT_OID_INFO_CNG_ALGID_KEY",
    "CRYPT_OID_INFO_CNG_SIGN_KEY",
    "CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM",
    "CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM",
    "CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM",
    "CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM",
    "CRYPT_OID_INFO_NAME_KEY",
    "CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM",
    "CRYPT_OID_INFO_NO_SIGN_ALGORITHM",
    "CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM",
    "CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK",
    "CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT",
    "CRYPT_OID_INFO_OID_KEY",
    "CRYPT_OID_INFO_OID_KEY_FLAGS_MASK",
    "CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG",
    "CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG",
    "CRYPT_OID_INFO_SIGN_KEY",
    "CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG",
    "CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG",
    "CRYPT_OID_OPEN_STORE_PROV_FUNC",
    "CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC",
    "CRYPT_OID_PREFER_CNG_ALGID_FLAG",
    "CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG",
    "CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG",
    "CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC",
    "CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC",
    "CRYPT_OID_REGPATH",
    "CRYPT_OID_REG_DLL_VALUE_NAME",
    "CRYPT_OID_REG_ENCODING_TYPE_PREFIX",
    "CRYPT_OID_REG_FLAGS_VALUE_NAME",
    "CRYPT_OID_REG_FUNC_NAME_VALUE_NAME",
    "CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A",
    "CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC",
    "CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME",
    "CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC",
    "CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC",
    "CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG",
    "CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG",
    "CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG",
    "CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC",
    "CRYPT_OID_VERIFY_CTL_USAGE_FUNC",
    "CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC",
    "CRYPT_OID_VERIFY_REVOCATION_FUNC",
    "CRYPT_ONLINE",
    "CRYPT_OVERRIDE",
    "CRYPT_OVERWRITE",
    "CRYPT_OWF_REPL_LM_HASH",
    "CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION",
    "CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL",
    "CRYPT_PASSWORD_CREDENTIALSA",
    "CRYPT_PASSWORD_CREDENTIALSW",
    "CRYPT_PKCS12_PBE_PARAMS",
    "CRYPT_PKCS8_EXPORT_PARAMS",
    "CRYPT_PKCS8_IMPORT_PARAMS",
    "CRYPT_POLICY_OID_GROUP_ID",
    "CRYPT_PREGEN",
    "CRYPT_PRIORITY_BOTTOM",
    "CRYPT_PRIORITY_TOP",
    "CRYPT_PRIVATE_KEY_INFO",
    "CRYPT_PROCESS_ISOLATE",
    "CRYPT_PROPERTY_REF",
    "CRYPT_PROVIDERS",
    "CRYPT_PROVIDER_REF",
    "CRYPT_PROVIDER_REFS",
    "CRYPT_PROVIDER_REG",
    "CRYPT_PROXY_CACHE_RETRIEVAL",
    "CRYPT_PSOURCE_ALGORITHM",
    "CRYPT_PSTORE",
    "CRYPT_PUBKEY_ALG_OID_GROUP_ID",
    "CRYPT_RANDOM_QUERY_STRING_RETRIEVAL",
    "CRYPT_RC2_128BIT_VERSION",
    "CRYPT_RC2_40BIT_VERSION",
    "CRYPT_RC2_56BIT_VERSION",
    "CRYPT_RC2_64BIT_VERSION",
    "CRYPT_RC2_CBC_PARAMETERS",
    "CRYPT_RC4_KEY_STATE",
    "CRYPT_RDN_ATTR_OID_GROUP_ID",
    "CRYPT_READ",
    "CRYPT_RECIPIENT",
    "CRYPT_REGISTER_FIRST_INDEX",
    "CRYPT_REGISTER_LAST_INDEX",
    "CRYPT_RETRIEVE_AUX_INFO",
    "CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH",
    "CRYPT_RETRIEVE_MULTIPLE_OBJECTS",
    "CRYPT_RSAES_OAEP_PARAMETERS",
    "CRYPT_RSA_SSA_PSS_PARAMETERS",
    "CRYPT_SECRETDIGEST",
    "CRYPT_SEC_DESCR",
    "CRYPT_SEQUENCE_OF_ANY",
    "CRYPT_SERVER",
    "CRYPT_SET_HASH_PARAM",
    "CRYPT_SET_PROV_PARAM_ID",
    "CRYPT_SF",
    "CRYPT_SGC",
    "CRYPT_SGCKEY",
    "CRYPT_SGC_ENUM",
    "CRYPT_SIGN_ALG_OID_GROUP_ID",
    "CRYPT_SIGN_MESSAGE_PARA",
    "CRYPT_SILENT",
    "CRYPT_SMART_CARD_ROOT_INFO",
    "CRYPT_SMIME_CAPABILITIES",
    "CRYPT_SMIME_CAPABILITY",
    "CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG",
    "CRYPT_SSL2_FALLBACK",
    "CRYPT_STICKY_CACHE_RETRIEVAL",
    "CRYPT_STRING",
    "CRYPT_STRING_ANY",
    "CRYPT_STRING_BASE64",
    "CRYPT_STRING_BASE64HEADER",
    "CRYPT_STRING_BASE64REQUESTHEADER",
    "CRYPT_STRING_BASE64URI",
    "CRYPT_STRING_BASE64X509CRLHEADER",
    "CRYPT_STRING_BASE64_ANY",
    "CRYPT_STRING_BINARY",
    "CRYPT_STRING_ENCODEMASK",
    "CRYPT_STRING_HASHDATA",
    "CRYPT_STRING_HEX",
    "CRYPT_STRING_HEXADDR",
    "CRYPT_STRING_HEXASCII",
    "CRYPT_STRING_HEXASCIIADDR",
    "CRYPT_STRING_HEXRAW",
    "CRYPT_STRING_HEX_ANY",
    "CRYPT_STRING_NOCR",
    "CRYPT_STRING_NOCRLF",
    "CRYPT_STRING_PERCENTESCAPE",
    "CRYPT_STRING_RESERVED100",
    "CRYPT_STRING_RESERVED200",
    "CRYPT_STRING_STRICT",
    "CRYPT_SUCCEED",
    "CRYPT_TEMPLATE_OID_GROUP_ID",
    "CRYPT_TIMESTAMP_ACCURACY",
    "CRYPT_TIMESTAMP_CONTEXT",
    "CRYPT_TIMESTAMP_INFO",
    "CRYPT_TIMESTAMP_PARA",
    "CRYPT_TIMESTAMP_REQUEST",
    "CRYPT_TIMESTAMP_RESPONSE",
    "CRYPT_TIMESTAMP_RESPONSE_STATUS",
    "CRYPT_TIMESTAMP_VERSION",
    "CRYPT_TIME_STAMP_REQUEST_INFO",
    "CRYPT_TYPE2_FORMAT",
    "CRYPT_UI_PROMPT",
    "CRYPT_UM",
    "CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG",
    "CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG",
    "CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG",
    "CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG",
    "CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG",
    "CRYPT_UPDATE_KEY",
    "CRYPT_URL_ARRAY",
    "CRYPT_URL_INFO",
    "CRYPT_USERDATA",
    "CRYPT_USER_DEFAULT",
    "CRYPT_USER_KEYSET",
    "CRYPT_USER_PROTECTED",
    "CRYPT_USER_PROTECTED_STRONG",
    "CRYPT_VERIFYCONTEXT",
    "CRYPT_VERIFY_CERT_FLAGS",
    "CRYPT_VERIFY_CERT_SIGN_CHECK_WEAK_HASH_FLAG",
    "CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG",
    "CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT",
    "CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN",
    "CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL",
    "CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY",
    "CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG",
    "CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG",
    "CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO",
    "CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB",
    "CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT",
    "CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL",
    "CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE",
    "CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO",
    "CRYPT_VERIFY_CONTEXT_SIGNATURE",
    "CRYPT_VERIFY_DATA_HASH",
    "CRYPT_VERIFY_MESSAGE_PARA",
    "CRYPT_VOLATILE",
    "CRYPT_WIRE_ONLY_RETRIEVAL",
    "CRYPT_WRITE",
    "CRYPT_X931_FORMAT",
    "CRYPT_X942_COUNTER_BYTE_LENGTH",
    "CRYPT_X942_KEY_LENGTH_BYTE_LENGTH",
    "CRYPT_X942_OTHER_INFO",
    "CRYPT_XML_ALGORITHM",
    "CRYPT_XML_ALGORITHM_INFO",
    "CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_ALGID",
    "CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_SIGN_ALGID",
    "CRYPT_XML_ALGORITHM_INFO_FIND_BY_NAME",
    "CRYPT_XML_ALGORITHM_INFO_FIND_BY_URI",
    "CRYPT_XML_BLOB",
    "CRYPT_XML_BLOB_MAX",
    "CRYPT_XML_CHARSET",
    "CRYPT_XML_CHARSET_AUTO",
    "CRYPT_XML_CHARSET_UTF16BE",
    "CRYPT_XML_CHARSET_UTF16LE",
    "CRYPT_XML_CHARSET_UTF8",
    "CRYPT_XML_CRYPTOGRAPHIC_INTERFACE",
    "CRYPT_XML_DATA_BLOB",
    "CRYPT_XML_DATA_PROVIDER",
    "CRYPT_XML_DIGEST_REFERENCE_DATA_TRANSFORMED",
    "CRYPT_XML_DIGEST_VALUE_MAX",
    "CRYPT_XML_DOC_CTXT",
    "CRYPT_XML_E_ALGORITHM",
    "CRYPT_XML_E_BASE",
    "CRYPT_XML_E_ENCODING",
    "CRYPT_XML_E_HANDLE",
    "CRYPT_XML_E_HASH_FAILED",
    "CRYPT_XML_E_INVALID_DIGEST",
    "CRYPT_XML_E_INVALID_KEYVALUE",
    "CRYPT_XML_E_INVALID_SIGNATURE",
    "CRYPT_XML_E_LARGE",
    "CRYPT_XML_E_LAST",
    "CRYPT_XML_E_NON_UNIQUE_ID",
    "CRYPT_XML_E_OPERATION",
    "CRYPT_XML_E_SIGNER",
    "CRYPT_XML_E_SIGN_FAILED",
    "CRYPT_XML_E_TOO_MANY_SIGNATURES",
    "CRYPT_XML_E_TOO_MANY_TRANSFORMS",
    "CRYPT_XML_E_TRANSFORM",
    "CRYPT_XML_E_UNEXPECTED_XML",
    "CRYPT_XML_E_UNRESOLVED_REFERENCE",
    "CRYPT_XML_E_VERIFY_FAILED",
    "CRYPT_XML_FLAGS",
    "CRYPT_XML_FLAG_ADD_OBJECT_CREATE_COPY",
    "CRYPT_XML_FLAG_ALWAYS_RETURN_ENCODED_OBJECT",
    "CRYPT_XML_FLAG_CREATE_REFERENCE_AS_OBJECT",
    "CRYPT_XML_FLAG_DISABLE_EXTENSIONS",
    "CRYPT_XML_FLAG_ECDSA_DSIG11",
    "CRYPT_XML_FLAG_ENFORCE_ID_NAME_FORMAT",
    "CRYPT_XML_FLAG_ENFORCE_ID_NCNAME_FORMAT",
    "CRYPT_XML_FLAG_NO_SERIALIZE",
    "CRYPT_XML_GROUP_ID",
    "CRYPT_XML_GROUP_ID_HASH",
    "CRYPT_XML_GROUP_ID_SIGN",
    "CRYPT_XML_ID_MAX",
    "CRYPT_XML_ISSUER_SERIAL",
    "CRYPT_XML_KEYINFO_PARAM",
    "CRYPT_XML_KEYINFO_SPEC",
    "CRYPT_XML_KEYINFO_SPEC_ENCODED",
    "CRYPT_XML_KEYINFO_SPEC_NONE",
    "CRYPT_XML_KEYINFO_SPEC_PARAM",
    "CRYPT_XML_KEYINFO_TYPE",
    "CRYPT_XML_KEYINFO_TYPE_CUSTOM",
    "CRYPT_XML_KEYINFO_TYPE_KEYNAME",
    "CRYPT_XML_KEYINFO_TYPE_KEYVALUE",
    "CRYPT_XML_KEYINFO_TYPE_RETRIEVAL",
    "CRYPT_XML_KEYINFO_TYPE_X509DATA",
    "CRYPT_XML_KEY_DSA_KEY_VALUE",
    "CRYPT_XML_KEY_ECDSA_KEY_VALUE",
    "CRYPT_XML_KEY_INFO",
    "CRYPT_XML_KEY_INFO_ITEM",
    "CRYPT_XML_KEY_RSA_KEY_VALUE",
    "CRYPT_XML_KEY_VALUE",
    "CRYPT_XML_KEY_VALUE_TYPE",
    "CRYPT_XML_KEY_VALUE_TYPE_CUSTOM",
    "CRYPT_XML_KEY_VALUE_TYPE_DSA",
    "CRYPT_XML_KEY_VALUE_TYPE_ECDSA",
    "CRYPT_XML_KEY_VALUE_TYPE_RSA",
    "CRYPT_XML_OBJECT",
    "CRYPT_XML_OBJECTS_MAX",
    "CRYPT_XML_PROPERTY",
    "CRYPT_XML_PROPERTY_DOC_DECLARATION",
    "CRYPT_XML_PROPERTY_ID",
    "CRYPT_XML_PROPERTY_MAX_HEAP_SIZE",
    "CRYPT_XML_PROPERTY_MAX_SIGNATURES",
    "CRYPT_XML_PROPERTY_SIGNATURE_LOCATION",
    "CRYPT_XML_PROPERTY_XML_OUTPUT_CHARSET",
    "CRYPT_XML_REFERENCE",
    "CRYPT_XML_REFERENCES",
    "CRYPT_XML_REFERENCES_MAX",
    "CRYPT_XML_SIGNATURE",
    "CRYPT_XML_SIGNATURES_MAX",
    "CRYPT_XML_SIGNATURE_VALUE_MAX",
    "CRYPT_XML_SIGNED_INFO",
    "CRYPT_XML_SIGN_ADD_KEYVALUE",
    "CRYPT_XML_STATUS",
    "CRYPT_XML_STATUS_DIGESTING",
    "CRYPT_XML_STATUS_DIGEST_VALID",
    "CRYPT_XML_STATUS_ERROR_DIGEST_INVALID",
    "CRYPT_XML_STATUS_ERROR_KEYINFO_NOT_PARSED",
    "CRYPT_XML_STATUS_ERROR_NOT_RESOLVED",
    "CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_ALGORITHM",
    "CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_TRANSFORM",
    "CRYPT_XML_STATUS_ERROR_SIGNATURE_INVALID",
    "CRYPT_XML_STATUS_ERROR_STATUS",
    "CRYPT_XML_STATUS_INFO_STATUS",
    "CRYPT_XML_STATUS_INTERNAL_REFERENCE",
    "CRYPT_XML_STATUS_KEY_AVAILABLE",
    "CRYPT_XML_STATUS_NO_ERROR",
    "CRYPT_XML_STATUS_OPENED_TO_ENCODE",
    "CRYPT_XML_STATUS_SIGNATURE_VALID",
    "CRYPT_XML_TRANSFORM_CHAIN_CONFIG",
    "CRYPT_XML_TRANSFORM_FLAGS",
    "CRYPT_XML_TRANSFORM_INFO",
    "CRYPT_XML_TRANSFORM_MAX",
    "CRYPT_XML_TRANSFORM_ON_NODESET",
    "CRYPT_XML_TRANSFORM_ON_STREAM",
    "CRYPT_XML_TRANSFORM_URI_QUERY_STRING",
    "CRYPT_XML_X509DATA",
    "CRYPT_XML_X509DATA_ITEM",
    "CRYPT_XML_X509DATA_TYPE",
    "CRYPT_XML_X509DATA_TYPE_CERTIFICATE",
    "CRYPT_XML_X509DATA_TYPE_CRL",
    "CRYPT_XML_X509DATA_TYPE_CUSTOM",
    "CRYPT_XML_X509DATA_TYPE_ISSUER_SERIAL",
    "CRYPT_XML_X509DATA_TYPE_SKI",
    "CRYPT_XML_X509DATA_TYPE_SUBJECT_NAME",
    "CRYPT_Y_ONLY",
    "CTL_ANY_SUBJECT_INFO",
    "CTL_ANY_SUBJECT_TYPE",
    "CTL_CERT_SUBJECT_TYPE",
    "CTL_CONTEXT",
    "CTL_ENTRY",
    "CTL_ENTRY_FROM_PROP_CHAIN_FLAG",
    "CTL_FIND_ANY",
    "CTL_FIND_EXISTING",
    "CTL_FIND_MD5_HASH",
    "CTL_FIND_NO_LIST_ID_CBDATA",
    "CTL_FIND_SAME_USAGE_FLAG",
    "CTL_FIND_SHA1_HASH",
    "CTL_FIND_SUBJECT",
    "CTL_FIND_SUBJECT_PARA",
    "CTL_FIND_USAGE",
    "CTL_FIND_USAGE_PARA",
    "CTL_INFO",
    "CTL_USAGE",
    "CTL_USAGE_MATCH",
    "CTL_V1",
    "CTL_VERIFY_USAGE_PARA",
    "CTL_VERIFY_USAGE_STATUS",
    "CUR_BLOB_VERSION",
    "CertAddCRLContextToStore",
    "CertAddCRLLinkToStore",
    "CertAddCTLContextToStore",
    "CertAddCTLLinkToStore",
    "CertAddCertificateContextToStore",
    "CertAddCertificateLinkToStore",
    "CertAddEncodedCRLToStore",
    "CertAddEncodedCTLToStore",
    "CertAddEncodedCertificateToStore",
    "CertAddEncodedCertificateToSystemStoreA",
    "CertAddEncodedCertificateToSystemStoreW",
    "CertAddEnhancedKeyUsageIdentifier",
    "CertAddRefServerOcspResponse",
    "CertAddRefServerOcspResponseContext",
    "CertAddSerializedElementToStore",
    "CertAddStoreToCollection",
    "CertAlgIdToOID",
    "CertCloseServerOcspResponse",
    "CertCloseStore",
    "CertCompareCertificate",
    "CertCompareCertificateName",
    "CertCompareIntegerBlob",
    "CertComparePublicKeyInfo",
    "CertControlStore",
    "CertCreateCRLContext",
    "CertCreateCTLContext",
    "CertCreateCTLEntryFromCertificateContextProperties",
    "CertCreateCertificateChainEngine",
    "CertCreateCertificateContext",
    "CertCreateContext",
    "CertCreateSelfSignCertificate",
    "CertDeleteCRLFromStore",
    "CertDeleteCTLFromStore",
    "CertDeleteCertificateFromStore",
    "CertDuplicateCRLContext",
    "CertDuplicateCTLContext",
    "CertDuplicateCertificateChain",
    "CertDuplicateCertificateContext",
    "CertDuplicateStore",
    "CertEnumCRLContextProperties",
    "CertEnumCRLsInStore",
    "CertEnumCTLContextProperties",
    "CertEnumCTLsInStore",
    "CertEnumCertificateContextProperties",
    "CertEnumCertificatesInStore",
    "CertEnumPhysicalStore",
    "CertEnumSubjectInSortedCTL",
    "CertEnumSystemStore",
    "CertEnumSystemStoreLocation",
    "CertFindAttribute",
    "CertFindCRLInStore",
    "CertFindCTLInStore",
    "CertFindCertificateInCRL",
    "CertFindCertificateInStore",
    "CertFindChainInStore",
    "CertFindExtension",
    "CertFindRDNAttr",
    "CertFindSubjectInCTL",
    "CertFindSubjectInSortedCTL",
    "CertFreeCRLContext",
    "CertFreeCTLContext",
    "CertFreeCertificateChain",
    "CertFreeCertificateChainEngine",
    "CertFreeCertificateChainList",
    "CertFreeCertificateContext",
    "CertFreeServerOcspResponseContext",
    "CertGetCRLContextProperty",
    "CertGetCRLFromStore",
    "CertGetCTLContextProperty",
    "CertGetCertificateChain",
    "CertGetCertificateContextProperty",
    "CertGetEnhancedKeyUsage",
    "CertGetIntendedKeyUsage",
    "CertGetIssuerCertificateFromStore",
    "CertGetNameStringA",
    "CertGetNameStringW",
    "CertGetPublicKeyLength",
    "CertGetServerOcspResponseContext",
    "CertGetStoreProperty",
    "CertGetSubjectCertificateFromStore",
    "CertGetValidUsages",
    "CertIsRDNAttrsInCertificateName",
    "CertIsStrongHashToSign",
    "CertIsValidCRLForCertificate",
    "CertIsWeakHash",
    "CertKeyType",
    "CertKeyType_KeyTypeHardware",
    "CertKeyType_KeyTypeOther",
    "CertKeyType_KeyTypePassport",
    "CertKeyType_KeyTypePassportRemote",
    "CertKeyType_KeyTypePassportSmartCard",
    "CertKeyType_KeyTypePhysicalSmartCard",
    "CertKeyType_KeyTypeSelfSigned",
    "CertKeyType_KeyTypeSoftware",
    "CertKeyType_KeyTypeVirtualSmartCard",
    "CertNameToStrA",
    "CertNameToStrW",
    "CertOIDToAlgId",
    "CertOpenServerOcspResponse",
    "CertOpenStore",
    "CertOpenSystemStoreA",
    "CertOpenSystemStoreW",
    "CertRDNValueToStrA",
    "CertRDNValueToStrW",
    "CertRegisterPhysicalStore",
    "CertRegisterSystemStore",
    "CertRemoveEnhancedKeyUsageIdentifier",
    "CertRemoveStoreFromCollection",
    "CertResyncCertificateChainEngine",
    "CertRetrieveLogoOrBiometricInfo",
    "CertSaveStore",
    "CertSelectCertificateChains",
    "CertSerializeCRLStoreElement",
    "CertSerializeCTLStoreElement",
    "CertSerializeCertificateStoreElement",
    "CertSetCRLContextProperty",
    "CertSetCTLContextProperty",
    "CertSetCertificateContextPropertiesFromCTLEntry",
    "CertSetCertificateContextProperty",
    "CertSetEnhancedKeyUsage",
    "CertSetStoreProperty",
    "CertStrToNameA",
    "CertStrToNameW",
    "CertUnregisterPhysicalStore",
    "CertUnregisterSystemStore",
    "CertVerifyCRLRevocation",
    "CertVerifyCRLTimeValidity",
    "CertVerifyCTLUsage",
    "CertVerifyCertificateChainPolicy",
    "CertVerifyRevocation",
    "CertVerifySubjectCertificateContext",
    "CertVerifyTimeValidity",
    "CertVerifyValidityNesting",
    "CloseCryptoHandle",
    "CryptAcquireCertificatePrivateKey",
    "CryptAcquireContextA",
    "CryptAcquireContextW",
    "CryptBinaryToStringA",
    "CryptBinaryToStringW",
    "CryptCloseAsyncHandle",
    "CryptContextAddRef",
    "CryptCreateAsyncHandle",
    "CryptCreateHash",
    "CryptCreateKeyIdentifierFromCSP",
    "CryptDecodeMessage",
    "CryptDecodeObject",
    "CryptDecodeObjectEx",
    "CryptDecrypt",
    "CryptDecryptAndVerifyMessageSignature",
    "CryptDecryptMessage",
    "CryptDeriveKey",
    "CryptDestroyHash",
    "CryptDestroyKey",
    "CryptDuplicateHash",
    "CryptDuplicateKey",
    "CryptEncodeObject",
    "CryptEncodeObjectEx",
    "CryptEncrypt",
    "CryptEncryptMessage",
    "CryptEnumKeyIdentifierProperties",
    "CryptEnumOIDFunction",
    "CryptEnumOIDInfo",
    "CryptEnumProviderTypesA",
    "CryptEnumProviderTypesW",
    "CryptEnumProvidersA",
    "CryptEnumProvidersW",
    "CryptExportKey",
    "CryptExportPKCS8",
    "CryptExportPublicKeyInfo",
    "CryptExportPublicKeyInfoEx",
    "CryptExportPublicKeyInfoFromBCryptKeyHandle",
    "CryptFindCertificateKeyProvInfo",
    "CryptFindLocalizedName",
    "CryptFindOIDInfo",
    "CryptFormatObject",
    "CryptFreeOIDFunctionAddress",
    "CryptGenKey",
    "CryptGenRandom",
    "CryptGetAsyncParam",
    "CryptGetDefaultOIDDllList",
    "CryptGetDefaultOIDFunctionAddress",
    "CryptGetDefaultProviderA",
    "CryptGetDefaultProviderW",
    "CryptGetHashParam",
    "CryptGetKeyIdentifierProperty",
    "CryptGetKeyParam",
    "CryptGetMessageCertificates",
    "CryptGetMessageSignerCount",
    "CryptGetOIDFunctionAddress",
    "CryptGetOIDFunctionValue",
    "CryptGetObjectUrl",
    "CryptGetProvParam",
    "CryptGetUserKey",
    "CryptHashCertificate",
    "CryptHashCertificate2",
    "CryptHashData",
    "CryptHashMessage",
    "CryptHashPublicKeyInfo",
    "CryptHashSessionKey",
    "CryptHashToBeSigned",
    "CryptImportKey",
    "CryptImportPKCS8",
    "CryptImportPublicKeyInfo",
    "CryptImportPublicKeyInfoEx",
    "CryptImportPublicKeyInfoEx2",
    "CryptInitOIDFunctionSet",
    "CryptInstallCancelRetrieval",
    "CryptInstallDefaultContext",
    "CryptInstallOIDFunctionAddress",
    "CryptMemAlloc",
    "CryptMemFree",
    "CryptMemRealloc",
    "CryptMsgCalculateEncodedLength",
    "CryptMsgClose",
    "CryptMsgControl",
    "CryptMsgCountersign",
    "CryptMsgCountersignEncoded",
    "CryptMsgDuplicate",
    "CryptMsgEncodeAndSignCTL",
    "CryptMsgGetAndVerifySigner",
    "CryptMsgGetParam",
    "CryptMsgOpenToDecode",
    "CryptMsgOpenToEncode",
    "CryptMsgSignCTL",
    "CryptMsgUpdate",
    "CryptMsgVerifyCountersignatureEncoded",
    "CryptMsgVerifyCountersignatureEncodedEx",
    "CryptProtectData",
    "CryptProtectMemory",
    "CryptQueryObject",
    "CryptRegisterDefaultOIDFunction",
    "CryptRegisterOIDFunction",
    "CryptRegisterOIDInfo",
    "CryptReleaseContext",
    "CryptRetrieveObjectByUrlA",
    "CryptRetrieveObjectByUrlW",
    "CryptRetrieveTimeStamp",
    "CryptSetAsyncParam",
    "CryptSetHashParam",
    "CryptSetKeyIdentifierProperty",
    "CryptSetKeyParam",
    "CryptSetOIDFunctionValue",
    "CryptSetProvParam",
    "CryptSetProviderA",
    "CryptSetProviderExA",
    "CryptSetProviderExW",
    "CryptSetProviderW",
    "CryptSignAndEncodeCertificate",
    "CryptSignAndEncryptMessage",
    "CryptSignCertificate",
    "CryptSignHashA",
    "CryptSignHashW",
    "CryptSignMessage",
    "CryptSignMessageWithKey",
    "CryptStringToBinaryA",
    "CryptStringToBinaryW",
    "CryptUninstallCancelRetrieval",
    "CryptUninstallDefaultContext",
    "CryptUnprotectData",
    "CryptUnprotectMemory",
    "CryptUnregisterDefaultOIDFunction",
    "CryptUnregisterOIDFunction",
    "CryptUnregisterOIDInfo",
    "CryptUpdateProtectedState",
    "CryptVerifyCertificateSignature",
    "CryptVerifyCertificateSignatureEx",
    "CryptVerifyDetachedMessageHash",
    "CryptVerifyDetachedMessageSignature",
    "CryptVerifyMessageHash",
    "CryptVerifyMessageSignature",
    "CryptVerifyMessageSignatureWithKey",
    "CryptVerifySignatureA",
    "CryptVerifySignatureW",
    "CryptVerifyTimeStampSignature",
    "CryptXmlAddObject",
    "CryptXmlClose",
    "CryptXmlCreateReference",
    "CryptXmlDigestReference",
    "CryptXmlDllCloseDigest",
    "CryptXmlDllCreateDigest",
    "CryptXmlDllCreateKey",
    "CryptXmlDllDigestData",
    "CryptXmlDllEncodeAlgorithm",
    "CryptXmlDllEncodeKeyValue",
    "CryptXmlDllFinalizeDigest",
    "CryptXmlDllGetAlgorithmInfo",
    "CryptXmlDllGetInterface",
    "CryptXmlDllSignData",
    "CryptXmlDllVerifySignature",
    "CryptXmlEncode",
    "CryptXmlEnumAlgorithmInfo",
    "CryptXmlFindAlgorithmInfo",
    "CryptXmlGetAlgorithmInfo",
    "CryptXmlGetDocContext",
    "CryptXmlGetReference",
    "CryptXmlGetSignature",
    "CryptXmlGetStatus",
    "CryptXmlGetTransforms",
    "CryptXmlImportPublicKey",
    "CryptXmlOpenToDecode",
    "CryptXmlOpenToEncode",
    "CryptXmlSetHMACSecret",
    "CryptXmlSign",
    "CryptXmlVerifySignature",
    "DSAFIPSVERSION_ENUM",
    "DSA_FIPS186_2",
    "DSA_FIPS186_3",
    "DSA_HASH_ALGORITHM_SHA1",
    "DSA_HASH_ALGORITHM_SHA256",
    "DSA_HASH_ALGORITHM_SHA512",
    "DSSSEED",
    "Decrypt",
    "Direction",
    "Direction_DirectionDecrypt",
    "Direction_DirectionEncrypt",
    "ECC_CMS_SHARED_INFO",
    "ECC_CURVE_ALG_ID_ENUM",
    "ECC_CURVE_TYPE_ENUM",
    "ENDPOINTADDRESS",
    "ENDPOINTADDRESS2",
    "ENUM_CEPSETUPPROP_AUTHENTICATION",
    "ENUM_CEPSETUPPROP_CAINFORMATION",
    "ENUM_CEPSETUPPROP_CHALLENGEURL",
    "ENUM_CEPSETUPPROP_EXCHANGEKEYINFORMATION",
    "ENUM_CEPSETUPPROP_KEYBASED_RENEWAL",
    "ENUM_CEPSETUPPROP_MSCEPURL",
    "ENUM_CEPSETUPPROP_RANAME_CITY",
    "ENUM_CEPSETUPPROP_RANAME_CN",
    "ENUM_CEPSETUPPROP_RANAME_COMPANY",
    "ENUM_CEPSETUPPROP_RANAME_COUNTRY",
    "ENUM_CEPSETUPPROP_RANAME_DEPT",
    "ENUM_CEPSETUPPROP_RANAME_EMAIL",
    "ENUM_CEPSETUPPROP_RANAME_STATE",
    "ENUM_CEPSETUPPROP_SIGNINGKEYINFORMATION",
    "ENUM_CEPSETUPPROP_SSLCERTHASH",
    "ENUM_CEPSETUPPROP_URL",
    "ENUM_CEPSETUPPROP_USECHALLENGE",
    "ENUM_CEPSETUPPROP_USELOCALSYSTEM",
    "ENUM_CESSETUPPROP_ALLOW_KEYBASED_RENEWAL",
    "ENUM_CESSETUPPROP_AUTHENTICATION",
    "ENUM_CESSETUPPROP_CACONFIG",
    "ENUM_CESSETUPPROP_RENEWALONLY",
    "ENUM_CESSETUPPROP_SSLCERTHASH",
    "ENUM_CESSETUPPROP_URL",
    "ENUM_CESSETUPPROP_USE_IISAPPPOOLIDENTITY",
    "ENUM_SETUPPROP_CADSSUFFIX",
    "ENUM_SETUPPROP_CAKEYINFORMATION",
    "ENUM_SETUPPROP_CANAME",
    "ENUM_SETUPPROP_CATYPE",
    "ENUM_SETUPPROP_DATABASEDIRECTORY",
    "ENUM_SETUPPROP_EXPIRATIONDATE",
    "ENUM_SETUPPROP_INTERACTIVE",
    "ENUM_SETUPPROP_INVALID",
    "ENUM_SETUPPROP_LOGDIRECTORY",
    "ENUM_SETUPPROP_PARENTCAMACHINE",
    "ENUM_SETUPPROP_PARENTCANAME",
    "ENUM_SETUPPROP_PRESERVEDATABASE",
    "ENUM_SETUPPROP_REQUESTFILE",
    "ENUM_SETUPPROP_SHAREDFOLDER",
    "ENUM_SETUPPROP_VALIDITYPERIOD",
    "ENUM_SETUPPROP_VALIDITYPERIODUNIT",
    "ENUM_SETUPPROP_WEBCAMACHINE",
    "ENUM_SETUPPROP_WEBCANAME",
    "EV_EXTRA_CERT_CHAIN_POLICY_PARA",
    "EV_EXTRA_CERT_CHAIN_POLICY_STATUS",
    "EXPORT_PRIVATE_KEYS",
    "EXPO_OFFLOAD_FUNC_NAME",
    "EXPO_OFFLOAD_REG_VALUE",
    "E_ICARD_ARGUMENT",
    "E_ICARD_COMMUNICATION",
    "E_ICARD_DATA_ACCESS",
    "E_ICARD_EXPORT",
    "E_ICARD_FAIL",
    "E_ICARD_FAILED_REQUIRED_CLAIMS",
    "E_ICARD_IDENTITY",
    "E_ICARD_IMPORT",
    "E_ICARD_INFORMATIONCARD",
    "E_ICARD_INVALID_PROOF_KEY",
    "E_ICARD_LOGOVALIDATION",
    "E_ICARD_MISSING_APPLIESTO",
    "E_ICARD_PASSWORDVALIDATION",
    "E_ICARD_POLICY",
    "E_ICARD_PROCESSDIED",
    "E_ICARD_REFRESH_REQUIRED",
    "E_ICARD_REQUEST",
    "E_ICARD_SERVICE",
    "E_ICARD_SERVICEBUSY",
    "E_ICARD_SHUTTINGDOWN",
    "E_ICARD_STOREKEY",
    "E_ICARD_STORE_IMPORT",
    "E_ICARD_TOKENCREATION",
    "E_ICARD_TRUSTEXCHANGE",
    "E_ICARD_UI_INITIALIZATION",
    "E_ICARD_UNKNOWN_REFERENCE",
    "E_ICARD_UNTRUSTED",
    "E_ICARD_USERCANCELLED",
    "Encrypt",
    "FindCertsByIssuer",
    "FreeToken",
    "GENERIC_XML_TOKEN",
    "GenerateDerivedKey",
    "GetBrowserToken",
    "GetCryptoTransform",
    "GetKeyedHash",
    "GetToken",
    "HASHALGORITHM_ENUM",
    "HCERTCHAINENGINE",
    "HCERTSTORE",
    "HCERTSTOREPROV",
    "HCRYPTASYNC",
    "HCRYPTPROV_LEGACY",
    "HCRYPTPROV_OR_NCRYPT_KEY_HANDLE",
    "HMAC_INFO",
    "HP_ALGID",
    "HP_HASHSIZE",
    "HP_HASHVAL",
    "HP_HMAC_INFO",
    "HP_TLS1PRF_LABEL",
    "HP_TLS1PRF_SEED",
    "HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE",
    "HTTPSPolicyCallbackData",
    "HandleType",
    "HandleType_Asymmetric",
    "HandleType_Hash",
    "HandleType_Symmetric",
    "HandleType_Transform",
    "HashCore",
    "HashFinal",
    "ICertSrvSetup",
    "ICertSrvSetupKeyInformation",
    "ICertSrvSetupKeyInformationCollection",
    "ICertificateEnrollmentPolicyServerSetup",
    "ICertificateEnrollmentServerSetup",
    "IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_1",
    "IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_2",
    "IFX_RSA_KEYGEN_VUL_NOT_AFFECTED",
    "IMSCEPSetup",
    "INFORMATIONCARD_ASYMMETRIC_CRYPTO_PARAMETERS",
    "INFORMATIONCARD_CRYPTO_HANDLE",
    "INFORMATIONCARD_HASH_CRYPTO_PARAMETERS",
    "INFORMATIONCARD_SYMMETRIC_CRYPTO_PARAMETERS",
    "INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS",
    "INTERNATIONAL_USAGE",
    "ImportInformationCard",
    "KDF_ALGORITHMID",
    "KDF_CONTEXT",
    "KDF_GENERIC_PARAMETER",
    "KDF_HASH_ALGORITHM",
    "KDF_HKDF_INFO",
    "KDF_HKDF_SALT",
    "KDF_HMAC_KEY",
    "KDF_ITERATION_COUNT",
    "KDF_KEYBITLENGTH",
    "KDF_LABEL",
    "KDF_PARTYUINFO",
    "KDF_PARTYVINFO",
    "KDF_SALT",
    "KDF_SECRET_APPEND",
    "KDF_SECRET_HANDLE",
    "KDF_SECRET_PREPEND",
    "KDF_SUPPPRIVINFO",
    "KDF_SUPPPUBINFO",
    "KDF_TLS_PRF_LABEL",
    "KDF_TLS_PRF_PROTOCOL",
    "KDF_TLS_PRF_SEED",
    "KDF_USE_SECRET_AS_HMAC_KEY_FLAG",
    "KEYSTATEBLOB",
    "KEY_LENGTH_MASK",
    "KEY_TYPE_SUBTYPE",
    "KP_ADMIN_PIN",
    "KP_ALGID",
    "KP_BLOCKLEN",
    "KP_CERTIFICATE",
    "KP_CLEAR_KEY",
    "KP_CLIENT_RANDOM",
    "KP_CMS_DH_KEY_INFO",
    "KP_CMS_KEY_INFO",
    "KP_EFFECTIVE_KEYLEN",
    "KP_G",
    "KP_GET_USE_COUNT",
    "KP_HIGHEST_VERSION",
    "KP_INFO",
    "KP_IV",
    "KP_KEYEXCHANGE_PIN",
    "KP_KEYLEN",
    "KP_KEYVAL",
    "KP_MODE",
    "KP_MODE_BITS",
    "KP_OAEP_PARAMS",
    "KP_P",
    "KP_PADDING",
    "KP_PERMISSIONS",
    "KP_PIN_ID",
    "KP_PIN_INFO",
    "KP_PRECOMP_MD5",
    "KP_PRECOMP_SHA",
    "KP_PREHASH",
    "KP_PUB_EX_LEN",
    "KP_PUB_EX_VAL",
    "KP_PUB_PARAMS",
    "KP_Q",
    "KP_RA",
    "KP_RB",
    "KP_ROUNDS",
    "KP_RP",
    "KP_SALT",
    "KP_SALT_EX",
    "KP_SCHANNEL_ALG",
    "KP_SERVER_RANDOM",
    "KP_SIGNATURE_PIN",
    "KP_VERIFY_PARAMS",
    "KP_X",
    "KP_Y",
    "LEGACY_DH_PRIVATE_BLOB",
    "LEGACY_DH_PUBLIC_BLOB",
    "LEGACY_DSA_PRIVATE_BLOB",
    "LEGACY_DSA_PUBLIC_BLOB",
    "LEGACY_DSA_V2_PRIVATE_BLOB",
    "LEGACY_DSA_V2_PUBLIC_BLOB",
    "LEGACY_RSAPRIVATE_BLOB",
    "LEGACY_RSAPUBLIC_BLOB",
    "MAXUIDLEN",
    "MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG",
    "MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG",
    "MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG",
    "MSCEPSetupProperty",
    "MS_DEF_DH_SCHANNEL_PROV",
    "MS_DEF_DH_SCHANNEL_PROV_A",
    "MS_DEF_DH_SCHANNEL_PROV_W",
    "MS_DEF_DSS_DH_PROV",
    "MS_DEF_DSS_DH_PROV_A",
    "MS_DEF_DSS_DH_PROV_W",
    "MS_DEF_DSS_PROV",
    "MS_DEF_DSS_PROV_A",
    "MS_DEF_DSS_PROV_W",
    "MS_DEF_PROV",
    "MS_DEF_PROV_A",
    "MS_DEF_PROV_W",
    "MS_DEF_RSA_SCHANNEL_PROV",
    "MS_DEF_RSA_SCHANNEL_PROV_A",
    "MS_DEF_RSA_SCHANNEL_PROV_W",
    "MS_DEF_RSA_SIG_PROV",
    "MS_DEF_RSA_SIG_PROV_A",
    "MS_DEF_RSA_SIG_PROV_W",
    "MS_ENHANCED_PROV",
    "MS_ENHANCED_PROV_A",
    "MS_ENHANCED_PROV_W",
    "MS_ENH_DSS_DH_PROV",
    "MS_ENH_DSS_DH_PROV_A",
    "MS_ENH_DSS_DH_PROV_W",
    "MS_ENH_RSA_AES_PROV",
    "MS_ENH_RSA_AES_PROV_A",
    "MS_ENH_RSA_AES_PROV_W",
    "MS_ENH_RSA_AES_PROV_XP",
    "MS_ENH_RSA_AES_PROV_XP_A",
    "MS_ENH_RSA_AES_PROV_XP_W",
    "MS_KEY_PROTECTION_PROVIDER",
    "MS_KEY_STORAGE_PROVIDER",
    "MS_NGC_KEY_STORAGE_PROVIDER",
    "MS_PLATFORM_CRYPTO_PROVIDER",
    "MS_PLATFORM_KEY_STORAGE_PROVIDER",
    "MS_PRIMITIVE_PROVIDER",
    "MS_SCARD_PROV",
    "MS_SCARD_PROV_A",
    "MS_SCARD_PROV_W",
    "MS_SMART_CARD_KEY_STORAGE_PROVIDER",
    "MS_STRONG_PROV",
    "MS_STRONG_PROV_A",
    "MS_STRONG_PROV_W",
    "ManageCardSpace",
    "NCRYPTBUFFER_ATTESTATIONSTATEMENT_BLOB",
    "NCRYPTBUFFER_ATTESTATION_CLAIM_CHALLENGE_REQUIRED",
    "NCRYPTBUFFER_ATTESTATION_CLAIM_TYPE",
    "NCRYPTBUFFER_CERT_BLOB",
    "NCRYPTBUFFER_CLAIM_IDBINDING_NONCE",
    "NCRYPTBUFFER_CLAIM_KEYATTESTATION_NONCE",
    "NCRYPTBUFFER_DATA",
    "NCRYPTBUFFER_ECC_CURVE_NAME",
    "NCRYPTBUFFER_ECC_PARAMETERS",
    "NCRYPTBUFFER_EMPTY",
    "NCRYPTBUFFER_KEY_PROPERTY_FLAGS",
    "NCRYPTBUFFER_PKCS_ALG_ID",
    "NCRYPTBUFFER_PKCS_ALG_OID",
    "NCRYPTBUFFER_PKCS_ALG_PARAM",
    "NCRYPTBUFFER_PKCS_ATTRS",
    "NCRYPTBUFFER_PKCS_KEY_NAME",
    "NCRYPTBUFFER_PKCS_OID",
    "NCRYPTBUFFER_PKCS_SECRET",
    "NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING",
    "NCRYPTBUFFER_PROTECTION_FLAGS",
    "NCRYPTBUFFER_SSL_CLEAR_KEY",
    "NCRYPTBUFFER_SSL_CLIENT_RANDOM",
    "NCRYPTBUFFER_SSL_HIGHEST_VERSION",
    "NCRYPTBUFFER_SSL_KEY_ARG_DATA",
    "NCRYPTBUFFER_SSL_SERVER_RANDOM",
    "NCRYPTBUFFER_SSL_SESSION_HASH",
    "NCRYPTBUFFER_TPM_PLATFORM_CLAIM_NONCE",
    "NCRYPTBUFFER_TPM_PLATFORM_CLAIM_PCR_MASK",
    "NCRYPTBUFFER_TPM_PLATFORM_CLAIM_STATIC_CREATE",
    "NCRYPTBUFFER_TPM_SEAL_NO_DA_PROTECTION",
    "NCRYPTBUFFER_TPM_SEAL_PASSWORD",
    "NCRYPTBUFFER_TPM_SEAL_POLICYINFO",
    "NCRYPTBUFFER_TPM_SEAL_TICKET",
    "NCRYPTBUFFER_VERSION",
    "NCRYPTBUFFER_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS",
    "NCRYPT_3DES_112_ALGORITHM",
    "NCRYPT_3DES_ALGORITHM",
    "NCRYPT_AES_ALGORITHM",
    "NCRYPT_AES_ALGORITHM_GROUP",
    "NCRYPT_ALGORITHM_GROUP_PROPERTY",
    "NCRYPT_ALGORITHM_NAME_CLASS",
    "NCRYPT_ALGORITHM_PROPERTY",
    "NCRYPT_ALLOC_PARA",
    "NCRYPT_ALLOW_ALL_USAGES",
    "NCRYPT_ALLOW_ARCHIVING_FLAG",
    "NCRYPT_ALLOW_DECRYPT_FLAG",
    "NCRYPT_ALLOW_EXPORT_FLAG",
    "NCRYPT_ALLOW_KEY_AGREEMENT_FLAG",
    "NCRYPT_ALLOW_KEY_IMPORT_FLAG",
    "NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG",
    "NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG",
    "NCRYPT_ALLOW_SIGNING_FLAG",
    "NCRYPT_ALLOW_SILENT_KEY_ACCESS",
    "NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY",
    "NCRYPT_ASSOCIATED_ECDH_KEY",
    "NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE",
    "NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION",
    "NCRYPT_ATTESTATION_FLAG",
    "NCRYPT_AUTHORITY_KEY_FLAG",
    "NCRYPT_AUTH_TAG_LENGTH",
    "NCRYPT_BLOCK_LENGTH_PROPERTY",
    "NCRYPT_CAPI_KDF_ALGORITHM",
    "NCRYPT_CERTIFICATE_PROPERTY",
    "NCRYPT_CHAINING_MODE_PROPERTY",
    "NCRYPT_CHANGEPASSWORD_PROPERTY",
    "NCRYPT_CIPHER_BLOCK_PADDING_FLAG",
    "NCRYPT_CIPHER_KEY_BLOB",
    "NCRYPT_CIPHER_KEY_BLOB_MAGIC",
    "NCRYPT_CIPHER_NO_PADDING_FLAG",
    "NCRYPT_CIPHER_OPERATION",
    "NCRYPT_CIPHER_OTHER_PADDING_FLAG",
    "NCRYPT_CIPHER_PADDING_INFO",
    "NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT",
    "NCRYPT_CLAIM_AUTHORITY_ONLY",
    "NCRYPT_CLAIM_PLATFORM",
    "NCRYPT_CLAIM_SUBJECT_ONLY",
    "NCRYPT_CLAIM_UNKNOWN",
    "NCRYPT_CLAIM_VSM_KEY_ATTESTATION_STATEMENT",
    "NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY",
    "NCRYPT_DESCR_DELIMITER_AND",
    "NCRYPT_DESCR_DELIMITER_OR",
    "NCRYPT_DESCR_EQUAL",
    "NCRYPT_DESX_ALGORITHM",
    "NCRYPT_DES_ALGORITHM",
    "NCRYPT_DES_ALGORITHM_GROUP",
    "NCRYPT_DH_ALGORITHM",
    "NCRYPT_DH_ALGORITHM_GROUP",
    "NCRYPT_DH_PARAMETERS_PROPERTY",
    "NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY",
    "NCRYPT_DO_NOT_FINALIZE_FLAG",
    "NCRYPT_DSA_ALGORITHM",
    "NCRYPT_DSA_ALGORITHM_GROUP",
    "NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY",
    "NCRYPT_ECC_CURVE_NAME_PROPERTY",
    "NCRYPT_ECC_PARAMETERS_PROPERTY",
    "NCRYPT_ECDH_ALGORITHM",
    "NCRYPT_ECDH_ALGORITHM_GROUP",
    "NCRYPT_ECDH_P256_ALGORITHM",
    "NCRYPT_ECDH_P384_ALGORITHM",
    "NCRYPT_ECDH_P521_ALGORITHM",
    "NCRYPT_ECDSA_ALGORITHM",
    "NCRYPT_ECDSA_ALGORITHM_GROUP",
    "NCRYPT_ECDSA_P256_ALGORITHM",
    "NCRYPT_ECDSA_P384_ALGORITHM",
    "NCRYPT_ECDSA_P521_ALGORITHM",
    "NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE",
    "NCRYPT_EXPORTED_ISOLATED_KEY_HEADER",
    "NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION",
    "NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_V0",
    "NCRYPT_EXPORT_LEGACY_FLAG",
    "NCRYPT_EXPORT_POLICY_PROPERTY",
    "NCRYPT_FLAGS",
    "NCRYPT_HANDLE",
    "NCRYPT_HASH_HANDLE",
    "NCRYPT_HASH_OPERATION",
    "NCRYPT_HMAC_SHA256_ALGORITHM",
    "NCRYPT_IGNORE_DEVICE_STATE_FLAG",
    "NCRYPT_IMPL_HARDWARE_FLAG",
    "NCRYPT_IMPL_HARDWARE_RNG_FLAG",
    "NCRYPT_IMPL_REMOVABLE_FLAG",
    "NCRYPT_IMPL_SOFTWARE_FLAG",
    "NCRYPT_IMPL_TYPE_PROPERTY",
    "NCRYPT_IMPL_VIRTUAL_ISOLATION_FLAG",
    "NCRYPT_INITIALIZATION_VECTOR",
    "NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES",
    "NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION",
    "NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_V0",
    "NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB",
    "NCRYPT_ISOLATED_KEY_FLAG_CREATED_IN_ISOLATION",
    "NCRYPT_ISOLATED_KEY_FLAG_IMPORT_ONLY",
    "NCRYPT_KDF_KEY_BLOB",
    "NCRYPT_KDF_KEY_BLOB_MAGIC",
    "NCRYPT_KDF_SECRET_VALUE",
    "NCRYPT_KEY_ACCESS_POLICY_BLOB",
    "NCRYPT_KEY_ACCESS_POLICY_PROPERTY",
    "NCRYPT_KEY_ACCESS_POLICY_VERSION",
    "NCRYPT_KEY_ATTEST_MAGIC",
    "NCRYPT_KEY_ATTEST_PADDING_INFO",
    "NCRYPT_KEY_BLOB_HEADER",
    "NCRYPT_KEY_DERIVATION_GROUP",
    "NCRYPT_KEY_DERIVATION_INTERFACE",
    "NCRYPT_KEY_DERIVATION_OPERATION",
    "NCRYPT_KEY_HANDLE",
    "NCRYPT_KEY_PROTECTION_ALGORITHM_CERTIFICATE",
    "NCRYPT_KEY_PROTECTION_ALGORITHM_LOCAL",
    "NCRYPT_KEY_PROTECTION_ALGORITHM_LOCKEDCREDENTIALS",
    "NCRYPT_KEY_PROTECTION_ALGORITHM_SDDL",
    "NCRYPT_KEY_PROTECTION_ALGORITHM_SID",
    "NCRYPT_KEY_PROTECTION_ALGORITHM_WEBCREDENTIALS",
    "NCRYPT_KEY_PROTECTION_CERT_CERTBLOB",
    "NCRYPT_KEY_PROTECTION_CERT_HASHID",
    "NCRYPT_KEY_PROTECTION_INTERFACE",
    "NCRYPT_KEY_PROTECTION_LOCAL_LOGON",
    "NCRYPT_KEY_PROTECTION_LOCAL_MACHINE",
    "NCRYPT_KEY_PROTECTION_LOCAL_USER",
    "NCRYPT_KEY_STORAGE_ALGORITHM",
    "NCRYPT_KEY_STORAGE_INTERFACE",
    "NCRYPT_KEY_TYPE_PROPERTY",
    "NCRYPT_KEY_USAGE_PROPERTY",
    "NCRYPT_LAST_MODIFIED_PROPERTY",
    "NCRYPT_LENGTHS_PROPERTY",
    "NCRYPT_LENGTH_PROPERTY",
    "NCRYPT_MACHINE_KEY_FLAG",
    "NCRYPT_MAX_ALG_ID_LENGTH",
    "NCRYPT_MAX_KEY_NAME_LENGTH",
    "NCRYPT_MAX_NAME_LENGTH_PROPERTY",
    "NCRYPT_MAX_PROPERTY_DATA",
    "NCRYPT_MAX_PROPERTY_NAME",
    "NCRYPT_MD2_ALGORITHM",
    "NCRYPT_MD4_ALGORITHM",
    "NCRYPT_MD5_ALGORITHM",
    "NCRYPT_NAMED_DESCRIPTOR_FLAG",
    "NCRYPT_NAME_PROPERTY",
    "NCRYPT_NO_CACHED_PASSWORD",
    "NCRYPT_NO_KEY_VALIDATION",
    "NCRYPT_NO_PADDING_FLAG",
    "NCRYPT_OPAQUETRANSPORT_BLOB",
    "NCRYPT_OPERATION",
    "NCRYPT_OVERWRITE_KEY_FLAG",
    "NCRYPT_PAD_CIPHER_FLAG",
    "NCRYPT_PAD_OAEP_FLAG",
    "NCRYPT_PAD_PKCS1_FLAG",
    "NCRYPT_PAD_PSS_FLAG",
    "NCRYPT_PBKDF2_ALGORITHM",
    "NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY",
    "NCRYPT_PCP_CHANGEPASSWORD_PROPERTY",
    "NCRYPT_PCP_ECC_EKCERT_PROPERTY",
    "NCRYPT_PCP_ECC_EKNVCERT_PROPERTY",
    "NCRYPT_PCP_ECC_EKPUB_PROPERTY",
    "NCRYPT_PCP_EKCERT_PROPERTY",
    "NCRYPT_PCP_EKNVCERT_PROPERTY",
    "NCRYPT_PCP_EKPUB_PROPERTY",
    "NCRYPT_PCP_ENCRYPTION_KEY",
    "NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY",
    "NCRYPT_PCP_HMACVERIFICATION_KEY",
    "NCRYPT_PCP_HMAC_AUTH_NONCE",
    "NCRYPT_PCP_HMAC_AUTH_POLICYINFO",
    "NCRYPT_PCP_HMAC_AUTH_POLICYREF",
    "NCRYPT_PCP_HMAC_AUTH_SIGNATURE",
    "NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO",
    "NCRYPT_PCP_HMAC_AUTH_TICKET",
    "NCRYPT_PCP_IDENTITY_KEY",
    "NCRYPT_PCP_INTERMEDIATE_CA_EKCERT_PROPERTY",
    "NCRYPT_PCP_KEYATTESTATION_PROPERTY",
    "NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY",
    "NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY",
    "NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY",
    "NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY",
    "NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY",
    "NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY",
    "NCRYPT_PCP_PCRTABLE_ALGORITHM_PROPERTY",
    "NCRYPT_PCP_PCRTABLE_PROPERTY",
    "NCRYPT_PCP_PLATFORMHANDLE_PROPERTY",
    "NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY",
    "NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY",
    "NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY",
    "NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY",
    "NCRYPT_PCP_PLATFORM_TYPE_PROPERTY",
    "NCRYPT_PCP_PROVIDERHANDLE_PROPERTY",
    "NCRYPT_PCP_PROVIDER_VERSION_PROPERTY",
    "NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY",
    "NCRYPT_PCP_RAW_POLICYDIGEST_INFO",
    "NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY",
    "NCRYPT_PCP_RSA_EKCERT_PROPERTY",
    "NCRYPT_PCP_RSA_EKNVCERT_PROPERTY",
    "NCRYPT_PCP_RSA_EKPUB_PROPERTY",
    "NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY",
    "NCRYPT_PCP_RSA_SCHEME_PROPERTY",
    "NCRYPT_PCP_SESSIONID_PROPERTY",
    "NCRYPT_PCP_SIGNATURE_KEY",
    "NCRYPT_PCP_SRKPUB_PROPERTY",
    "NCRYPT_PCP_STORAGEPARENT_PROPERTY",
    "NCRYPT_PCP_STORAGE_KEY",
    "NCRYPT_PCP_SYMMETRIC_KEYBITS_PROPERTY",
    "NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY",
    "NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY",
    "NCRYPT_PCP_TPM12_IDBINDING_PROPERTY",
    "NCRYPT_PCP_TPM2BNAME_PROPERTY",
    "NCRYPT_PCP_TPM_FW_VERSION_INFO",
    "NCRYPT_PCP_TPM_FW_VERSION_PROPERTY",
    "NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY",
    "NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY",
    "NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY",
    "NCRYPT_PCP_TPM_VERSION_PROPERTY",
    "NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT",
    "NCRYPT_PCP_USAGEAUTH_PROPERTY",
    "NCRYPT_PERSIST_FLAG",
    "NCRYPT_PERSIST_ONLY_FLAG",
    "NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY",
    "NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY",
    "NCRYPT_PIN_CACHE_APPLICATION_TICKET_BYTE_LENGTH",
    "NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY",
    "NCRYPT_PIN_CACHE_CLEAR_FOR_CALLING_PROCESS_OPTION",
    "NCRYPT_PIN_CACHE_CLEAR_PROPERTY",
    "NCRYPT_PIN_CACHE_DISABLE_DPL_FLAG",
    "NCRYPT_PIN_CACHE_FLAGS_PROPERTY",
    "NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY",
    "NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY",
    "NCRYPT_PIN_CACHE_PIN_PROPERTY",
    "NCRYPT_PIN_CACHE_REQUIRE_GESTURE_FLAG",
    "NCRYPT_PIN_PROMPT_PROPERTY",
    "NCRYPT_PIN_PROPERTY",
    "NCRYPT_PKCS7_ENVELOPE_BLOB",
    "NCRYPT_PKCS8_PRIVATE_KEY_BLOB",
    "NCRYPT_PLATFORM_ATTEST_MAGIC",
    "NCRYPT_PLATFORM_ATTEST_PADDING_INFO",
    "NCRYPT_PREFER_VIRTUAL_ISOLATION_FLAG",
    "NCRYPT_PROTECTED_KEY_BLOB",
    "NCRYPT_PROTECTED_KEY_BLOB_MAGIC",
    "NCRYPT_PROTECTION_INFO_TYPE_DESCRIPTOR_STRING",
    "NCRYPT_PROTECT_STREAM_INFO",
    "NCRYPT_PROTECT_STREAM_INFO_EX",
    "NCRYPT_PROTECT_TO_LOCAL_SYSTEM",
    "NCRYPT_PROVIDER_HANDLE_PROPERTY",
    "NCRYPT_PROV_HANDLE",
    "NCRYPT_PUBLIC_LENGTH_PROPERTY",
    "NCRYPT_RC2_ALGORITHM",
    "NCRYPT_RC2_ALGORITHM_GROUP",
    "NCRYPT_READER_ICON_PROPERTY",
    "NCRYPT_READER_PROPERTY",
    "NCRYPT_REGISTER_NOTIFY_FLAG",
    "NCRYPT_ROOT_CERTSTORE_PROPERTY",
    "NCRYPT_RSA_ALGORITHM",
    "NCRYPT_RSA_ALGORITHM_GROUP",
    "NCRYPT_RSA_SIGN_ALGORITHM",
    "NCRYPT_SCARD_NGC_KEY_NAME",
    "NCRYPT_SCARD_PIN_ID",
    "NCRYPT_SCARD_PIN_INFO",
    "NCRYPT_SCHANNEL_INTERFACE",
    "NCRYPT_SCHANNEL_SIGNATURE_INTERFACE",
    "NCRYPT_SEALING_FLAG",
    "NCRYPT_SECRET_AGREEMENT_INTERFACE",
    "NCRYPT_SECRET_AGREEMENT_OPERATION",
    "NCRYPT_SECRET_HANDLE",
    "NCRYPT_SECURE_PIN_PROPERTY",
    "NCRYPT_SECURITY_DESCR_PROPERTY",
    "NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY",
    "NCRYPT_SHA1_ALGORITHM",
    "NCRYPT_SHA256_ALGORITHM",
    "NCRYPT_SHA384_ALGORITHM",
    "NCRYPT_SHA512_ALGORITHM",
    "NCRYPT_SIGNATURE_INTERFACE",
    "NCRYPT_SIGNATURE_LENGTH_PROPERTY",
    "NCRYPT_SIGNATURE_OPERATION",
    "NCRYPT_SILENT_FLAG",
    "NCRYPT_SMARTCARD_GUID_PROPERTY",
    "NCRYPT_SP800108_CTR_HMAC_ALGORITHM",
    "NCRYPT_SP80056A_CONCAT_ALGORITHM",
    "NCRYPT_SUPPORTED_LENGTHS",
    "NCRYPT_TPM12_PROVIDER",
    "NCRYPT_TPM_LOADABLE_KEY_BLOB",
    "NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER",
    "NCRYPT_TPM_LOADABLE_KEY_BLOB_MAGIC",
    "NCRYPT_TPM_PAD_PSS_IGNORE_SALT",
    "NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT",
    "NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION",
    "NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_V0",
    "NCRYPT_TPM_PSS_SALT_SIZE_HASHSIZE",
    "NCRYPT_TPM_PSS_SALT_SIZE_MAXIMUM",
    "NCRYPT_TPM_PSS_SALT_SIZE_UNKNOWN",
    "NCRYPT_TREAT_NIST_AS_GENERIC_ECC_FLAG",
    "NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG",
    "NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG",
    "NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG",
    "NCRYPT_UI_POLICY",
    "NCRYPT_UI_POLICY_PROPERTY",
    "NCRYPT_UI_PROTECT_KEY_FLAG",
    "NCRYPT_UNIQUE_NAME_PROPERTY",
    "NCRYPT_UNPROTECT_NO_DECRYPT",
    "NCRYPT_UNREGISTER_NOTIFY_FLAG",
    "NCRYPT_USER_CERTSTORE_PROPERTY",
    "NCRYPT_USE_CONTEXT_PROPERTY",
    "NCRYPT_USE_COUNT_ENABLED_PROPERTY",
    "NCRYPT_USE_COUNT_PROPERTY",
    "NCRYPT_USE_PER_BOOT_KEY_FLAG",
    "NCRYPT_USE_PER_BOOT_KEY_PROPERTY",
    "NCRYPT_USE_VIRTUAL_ISOLATION_FLAG",
    "NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY",
    "NCRYPT_VERSION_PROPERTY",
    "NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS",
    "NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_CURRENT_VERSION",
    "NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_V0",
    "NCRYPT_VSM_KEY_ATTESTATION_STATEMENT",
    "NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION",
    "NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_V0",
    "NCRYPT_WINDOW_HANDLE_PROPERTY",
    "NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG",
    "NCryptAlgorithmName",
    "NCryptCloseProtectionDescriptor",
    "NCryptCreateClaim",
    "NCryptCreatePersistedKey",
    "NCryptCreateProtectionDescriptor",
    "NCryptDecrypt",
    "NCryptDeleteKey",
    "NCryptDeriveKey",
    "NCryptEncrypt",
    "NCryptEnumAlgorithms",
    "NCryptEnumKeys",
    "NCryptEnumStorageProviders",
    "NCryptExportKey",
    "NCryptFinalizeKey",
    "NCryptFreeBuffer",
    "NCryptFreeObject",
    "NCryptGetProperty",
    "NCryptGetProtectionDescriptorInfo",
    "NCryptImportKey",
    "NCryptIsAlgSupported",
    "NCryptIsKeyHandle",
    "NCryptKeyDerivation",
    "NCryptKeyName",
    "NCryptNotifyChangeKey",
    "NCryptOpenKey",
    "NCryptOpenStorageProvider",
    "NCryptProtectSecret",
    "NCryptProviderName",
    "NCryptQueryProtectionDescriptorName",
    "NCryptRegisterProtectionDescriptorName",
    "NCryptSecretAgreement",
    "NCryptSetProperty",
    "NCryptSignHash",
    "NCryptStreamClose",
    "NCryptStreamOpenToProtect",
    "NCryptStreamOpenToUnprotect",
    "NCryptStreamOpenToUnprotectEx",
    "NCryptStreamUpdate",
    "NCryptTranslateHandle",
    "NCryptUnprotectSecret",
    "NCryptVerifyClaim",
    "NCryptVerifySignature",
    "NETSCAPE_SIGN_CA_CERT_TYPE",
    "NETSCAPE_SIGN_CERT_TYPE",
    "NETSCAPE_SMIME_CA_CERT_TYPE",
    "NETSCAPE_SMIME_CERT_TYPE",
    "NETSCAPE_SSL_CA_CERT_TYPE",
    "NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE",
    "NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE",
    "OCSP_BASIC_BY_KEY_RESPONDER_ID",
    "OCSP_BASIC_BY_NAME_RESPONDER_ID",
    "OCSP_BASIC_GOOD_CERT_STATUS",
    "OCSP_BASIC_RESPONSE",
    "OCSP_BASIC_RESPONSE_ENTRY",
    "OCSP_BASIC_RESPONSE_INFO",
    "OCSP_BASIC_RESPONSE_V1",
    "OCSP_BASIC_REVOKED_CERT_STATUS",
    "OCSP_BASIC_REVOKED_INFO",
    "OCSP_BASIC_SIGNED_RESPONSE",
    "OCSP_BASIC_SIGNED_RESPONSE_INFO",
    "OCSP_BASIC_UNKNOWN_CERT_STATUS",
    "OCSP_CERT_ID",
    "OCSP_INTERNAL_ERROR_RESPONSE",
    "OCSP_MALFORMED_REQUEST_RESPONSE",
    "OCSP_REQUEST",
    "OCSP_REQUEST_ENTRY",
    "OCSP_REQUEST_INFO",
    "OCSP_REQUEST_V1",
    "OCSP_RESPONSE",
    "OCSP_RESPONSE_INFO",
    "OCSP_SIGNATURE_INFO",
    "OCSP_SIGNED_REQUEST",
    "OCSP_SIGNED_REQUEST_INFO",
    "OCSP_SIG_REQUIRED_RESPONSE",
    "OCSP_SUCCESSFUL_RESPONSE",
    "OCSP_TRY_LATER_RESPONSE",
    "OCSP_UNAUTHORIZED_RESPONSE",
    "OPAQUEKEYBLOB",
    "PCRYPT_DECRYPT_PRIVATE_KEY_FUNC",
    "PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC",
    "PCRYPT_RESOLVE_HCRYPTPROV_FUNC",
    "PFNCryptStreamOutputCallback",
    "PFNCryptStreamOutputCallbackEx",
    "PFN_CANCEL_ASYNC_RETRIEVAL_FUNC",
    "PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK",
    "PFN_CERT_CREATE_CONTEXT_SORT_FUNC",
    "PFN_CERT_DLL_OPEN_STORE_PROV_FUNC",
    "PFN_CERT_ENUM_PHYSICAL_STORE",
    "PFN_CERT_ENUM_SYSTEM_STORE",
    "PFN_CERT_ENUM_SYSTEM_STORE_LOCATION",
    "PFN_CERT_IS_WEAK_HASH",
    "PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK",
    "PFN_CERT_STORE_PROV_CLOSE",
    "PFN_CERT_STORE_PROV_CONTROL",
    "PFN_CERT_STORE_PROV_DELETE_CERT",
    "PFN_CERT_STORE_PROV_DELETE_CRL",
    "PFN_CERT_STORE_PROV_DELETE_CTL",
    "PFN_CERT_STORE_PROV_FIND_CERT",
    "PFN_CERT_STORE_PROV_FIND_CRL",
    "PFN_CERT_STORE_PROV_FIND_CTL",
    "PFN_CERT_STORE_PROV_FREE_FIND_CERT",
    "PFN_CERT_STORE_PROV_FREE_FIND_CRL",
    "PFN_CERT_STORE_PROV_FREE_FIND_CTL",
    "PFN_CERT_STORE_PROV_GET_CERT_PROPERTY",
    "PFN_CERT_STORE_PROV_GET_CRL_PROPERTY",
    "PFN_CERT_STORE_PROV_GET_CTL_PROPERTY",
    "PFN_CERT_STORE_PROV_READ_CERT",
    "PFN_CERT_STORE_PROV_READ_CRL",
    "PFN_CERT_STORE_PROV_READ_CTL",
    "PFN_CERT_STORE_PROV_SET_CERT_PROPERTY",
    "PFN_CERT_STORE_PROV_SET_CRL_PROPERTY",
    "PFN_CERT_STORE_PROV_SET_CTL_PROPERTY",
    "PFN_CERT_STORE_PROV_WRITE_CERT",
    "PFN_CERT_STORE_PROV_WRITE_CRL",
    "PFN_CERT_STORE_PROV_WRITE_CTL",
    "PFN_CMSG_ALLOC",
    "PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY",
    "PFN_CMSG_CNG_IMPORT_KEY_AGREE",
    "PFN_CMSG_CNG_IMPORT_KEY_TRANS",
    "PFN_CMSG_EXPORT_ENCRYPT_KEY",
    "PFN_CMSG_EXPORT_KEY_AGREE",
    "PFN_CMSG_EXPORT_KEY_TRANS",
    "PFN_CMSG_EXPORT_MAIL_LIST",
    "PFN_CMSG_FREE",
    "PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY",
    "PFN_CMSG_GEN_ENCRYPT_KEY",
    "PFN_CMSG_IMPORT_ENCRYPT_KEY",
    "PFN_CMSG_IMPORT_KEY_AGREE",
    "PFN_CMSG_IMPORT_KEY_TRANS",
    "PFN_CMSG_IMPORT_MAIL_LIST",
    "PFN_CMSG_STREAM_OUTPUT",
    "PFN_CRYPT_ALLOC",
    "PFN_CRYPT_ASYNC_PARAM_FREE_FUNC",
    "PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC",
    "PFN_CRYPT_CANCEL_RETRIEVAL",
    "PFN_CRYPT_ENUM_KEYID_PROP",
    "PFN_CRYPT_ENUM_OID_FUNC",
    "PFN_CRYPT_ENUM_OID_INFO",
    "PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC",
    "PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC",
    "PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC",
    "PFN_CRYPT_FREE",
    "PFN_CRYPT_GET_SIGNER_CERTIFICATE",
    "PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH",
    "PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE",
    "PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER",
    "PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD",
    "PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET",
    "PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE",
    "PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE",
    "PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC",
    "PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC",
    "PFN_CRYPT_XML_CREATE_TRANSFORM",
    "PFN_CRYPT_XML_DATA_PROVIDER_CLOSE",
    "PFN_CRYPT_XML_DATA_PROVIDER_READ",
    "PFN_CRYPT_XML_ENUM_ALG_INFO",
    "PFN_CRYPT_XML_WRITE_CALLBACK",
    "PFN_EXPORT_PRIV_KEY_FUNC",
    "PFN_FREE_ENCODED_OBJECT_FUNC",
    "PFN_IMPORT_PRIV_KEY_FUNC",
    "PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC",
    "PFN_NCRYPT_ALLOC",
    "PFN_NCRYPT_FREE",
    "PFXExportCertStore",
    "PFXExportCertStoreEx",
    "PFXImportCertStore",
    "PFXIsPFXBlob",
    "PFXVerifyPassword",
    "PKCS12_ALLOW_OVERWRITE_KEY",
    "PKCS12_ALWAYS_CNG_KSP",
    "PKCS12_CONFIG_REGPATH",
    "PKCS12_DISABLE_ENCRYPT_CERTIFICATES",
    "PKCS12_ENCRYPT_CERTIFICATES",
    "PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME",
    "PKCS12_EXPORT_ECC_CURVE_OID",
    "PKCS12_EXPORT_ECC_CURVE_PARAMETERS",
    "PKCS12_EXPORT_PBES2_PARAMS",
    "PKCS12_EXPORT_RESERVED_MASK",
    "PKCS12_EXPORT_SILENT",
    "PKCS12_IMPORT_RESERVED_MASK",
    "PKCS12_IMPORT_SILENT",
    "PKCS12_INCLUDE_EXTENDED_PROPERTIES",
    "PKCS12_NO_PERSIST_KEY",
    "PKCS12_ONLY_CERTIFICATES",
    "PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME",
    "PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME",
    "PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE",
    "PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES",
    "PKCS12_PBES2_ALG_AES256_SHA256",
    "PKCS12_PBES2_EXPORT_PARAMS",
    "PKCS12_PBKDF2_ID_HMAC_SHA1",
    "PKCS12_PBKDF2_ID_HMAC_SHA256",
    "PKCS12_PBKDF2_ID_HMAC_SHA384",
    "PKCS12_PBKDF2_ID_HMAC_SHA512",
    "PKCS12_PREFER_CNG_KSP",
    "PKCS12_PROTECT_TO_DOMAIN_SIDS",
    "PKCS12_VIRTUAL_ISOLATION_KEY",
    "PKCS5_PADDING",
    "PKCS7_SIGNER_INFO",
    "PKCS_7_ASN_ENCODING",
    "PKCS_7_NDR_ENCODING",
    "PKCS_ATTRIBUTE",
    "PKCS_ATTRIBUTES",
    "PKCS_CONTENT_INFO",
    "PKCS_CONTENT_INFO_SEQUENCE_OF_ANY",
    "PKCS_CTL",
    "PKCS_ENCRYPTED_PRIVATE_KEY_INFO",
    "PKCS_PRIVATE_KEY_INFO",
    "PKCS_RC2_CBC_PARAMETERS",
    "PKCS_RSAES_OAEP_PARAMETERS",
    "PKCS_RSA_PRIVATE_KEY",
    "PKCS_RSA_SSA_PSS_PARAMETERS",
    "PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC",
    "PKCS_SMIME_CAPABILITIES",
    "PKCS_SORTED_CTL",
    "PKCS_TIME_REQUEST",
    "PKCS_UTC_TIME",
    "PLAINTEXTKEYBLOB",
    "POLICY_ELEMENT",
    "PP_ADMIN_PIN",
    "PP_APPLI_CERT",
    "PP_CERTCHAIN",
    "PP_CHANGE_PASSWORD",
    "PP_CLIENT_HWND",
    "PP_CONTAINER",
    "PP_CONTEXT_INFO",
    "PP_CRYPT_COUNT_KEY_USE",
    "PP_DELETEKEY",
    "PP_DISMISS_PIN_UI_SEC",
    "PP_ENUMALGS",
    "PP_ENUMALGS_EX",
    "PP_ENUMCONTAINERS",
    "PP_ENUMELECTROOTS",
    "PP_ENUMEX_SIGNING_PROT",
    "PP_ENUMMANDROOTS",
    "PP_IMPTYPE",
    "PP_KEYEXCHANGE_ALG",
    "PP_KEYEXCHANGE_KEYSIZE",
    "PP_KEYEXCHANGE_PIN",
    "PP_KEYSET_SEC_DESCR",
    "PP_KEYSET_TYPE",
    "PP_KEYSPEC",
    "PP_KEYSTORAGE",
    "PP_KEYX_KEYSIZE_INC",
    "PP_KEY_TYPE_SUBTYPE",
    "PP_NAME",
    "PP_PIN_PROMPT_STRING",
    "PP_PROVTYPE",
    "PP_ROOT_CERTSTORE",
    "PP_SECURE_KEYEXCHANGE_PIN",
    "PP_SECURE_SIGNATURE_PIN",
    "PP_SESSION_KEYSIZE",
    "PP_SGC_INFO",
    "PP_SIGNATURE_ALG",
    "PP_SIGNATURE_KEYSIZE",
    "PP_SIGNATURE_PIN",
    "PP_SIG_KEYSIZE_INC",
    "PP_SMARTCARD_GUID",
    "PP_SMARTCARD_READER",
    "PP_SMARTCARD_READER_ICON",
    "PP_SYM_KEYSIZE",
    "PP_UI_PROMPT",
    "PP_UNIQUE_CONTAINER",
    "PP_USER_CERTSTORE",
    "PP_USE_HARDWARE_RNG",
    "PP_VERSION",
    "PRIVATEKEYBLOB",
    "PRIVKEYVER3",
    "PROV_DH_SCHANNEL",
    "PROV_DSS",
    "PROV_DSS_DH",
    "PROV_EC_ECDSA_FULL",
    "PROV_EC_ECDSA_SIG",
    "PROV_EC_ECNRA_FULL",
    "PROV_EC_ECNRA_SIG",
    "PROV_ENUMALGS",
    "PROV_ENUMALGS_EX",
    "PROV_FORTEZZA",
    "PROV_INTEL_SEC",
    "PROV_MS_EXCHANGE",
    "PROV_REPLACE_OWF",
    "PROV_RNG",
    "PROV_RSA_AES",
    "PROV_RSA_FULL",
    "PROV_RSA_SCHANNEL",
    "PROV_RSA_SIG",
    "PROV_SPYRUS_LYNKS",
    "PROV_SSL",
    "PROV_STT_ACQ",
    "PROV_STT_BRND",
    "PROV_STT_ISS",
    "PROV_STT_MER",
    "PROV_STT_ROOT",
    "PUBKEY",
    "PUBKEYVER3",
    "PUBLICKEYBLOB",
    "PUBLICKEYBLOBEX",
    "PUBLICKEYSTRUC",
    "PaddingMode",
    "PaddingMode_ANSIX923",
    "PaddingMode_ISO10126",
    "PaddingMode_None",
    "PaddingMode_PKCS7",
    "PaddingMode_Zeros",
    "RANDOM_PADDING",
    "RECIPIENTPOLICY",
    "RECIPIENTPOLICY2",
    "RECIPIENTPOLICYV1",
    "RECIPIENTPOLICYV2",
    "REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY",
    "REPORT_NO_PRIVATE_KEY",
    "REVOCATION_OID_CRL_REVOCATION",
    "ROOT_INFO_LUID",
    "RSA1024BIT_KEY",
    "RSAPUBKEY",
    "RSA_CSP_PUBLICKEYBLOB",
    "SCHANNEL_ALG",
    "SCHANNEL_ENC_KEY",
    "SCHANNEL_MAC_KEY",
    "SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC",
    "SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC",
    "SIGNATURE_RESOURCE_NUMBER",
    "SIMPLEBLOB",
    "SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG",
    "SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG",
    "SSL_ECCKEY_BLOB",
    "SSL_ECCPUBLIC_BLOB",
    "SSL_F12_ERROR_TEXT_LENGTH",
    "SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS",
    "SSL_HPKP_HEADER_COUNT",
    "SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA",
    "SSL_HPKP_PKP_HEADER_INDEX",
    "SSL_HPKP_PKP_RO_HEADER_INDEX",
    "SSL_KEY_PIN_ERROR_TEXT_LENGTH",
    "SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA",
    "SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS",
    "SSL_OBJECT_LOCATOR_CERT_VALIDATION_CONFIG_FUNC",
    "SSL_OBJECT_LOCATOR_ISSUER_LIST_FUNC",
    "SSL_OBJECT_LOCATOR_PFX_FUNC",
    "SYMMETRICWRAPKEYBLOB",
    "SignHash",
    "TIMESTAMP_DONT_HASH_DATA",
    "TIMESTAMP_FAILURE_BAD_ALG",
    "TIMESTAMP_FAILURE_BAD_FORMAT",
    "TIMESTAMP_FAILURE_BAD_REQUEST",
    "TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED",
    "TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE",
    "TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED",
    "TIMESTAMP_FAILURE_SYSTEM_FAILURE",
    "TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE",
    "TIMESTAMP_INFO",
    "TIMESTAMP_NO_AUTH_RETRIEVAL",
    "TIMESTAMP_REQUEST",
    "TIMESTAMP_RESPONSE",
    "TIMESTAMP_STATUS_GRANTED",
    "TIMESTAMP_STATUS_GRANTED_WITH_MODS",
    "TIMESTAMP_STATUS_REJECTED",
    "TIMESTAMP_STATUS_REVOCATION_WARNING",
    "TIMESTAMP_STATUS_REVOKED",
    "TIMESTAMP_STATUS_WAITING",
    "TIMESTAMP_VERIFY_CONTEXT_SIGNATURE",
    "TIMESTAMP_VERSION",
    "TIME_VALID_OID_FLUSH_CRL",
    "TIME_VALID_OID_FLUSH_CRL_FROM_CERT",
    "TIME_VALID_OID_FLUSH_CTL",
    "TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT",
    "TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL",
    "TIME_VALID_OID_FLUSH_OBJECT_FUNC",
    "TIME_VALID_OID_GET_CRL",
    "TIME_VALID_OID_GET_CRL_FROM_CERT",
    "TIME_VALID_OID_GET_CTL",
    "TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT",
    "TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL",
    "TIME_VALID_OID_GET_OBJECT_FUNC",
    "TPM_RSA_SRK_SEAL_KEY",
    "TransformBlock",
    "TransformFinalBlock",
    "URL_OID_CERTIFICATE_CRL_DIST_POINT",
    "URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP",
    "URL_OID_CERTIFICATE_FRESHEST_CRL",
    "URL_OID_CERTIFICATE_ISSUER",
    "URL_OID_CERTIFICATE_OCSP",
    "URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT",
    "URL_OID_CERTIFICATE_ONLY_OCSP",
    "URL_OID_CRL_FRESHEST_CRL",
    "URL_OID_CRL_ISSUER",
    "URL_OID_CROSS_CERT_DIST_POINT",
    "URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS",
    "URL_OID_CTL_ISSUER",
    "URL_OID_CTL_NEXT_UPDATE",
    "URL_OID_GET_OBJECT_URL_FUNC",
    "USAGE_MATCH_TYPE_AND",
    "USAGE_MATCH_TYPE_OR",
    "VerifyHash",
    "X509_ALGORITHM_IDENTIFIER",
    "X509_ALTERNATE_NAME",
    "X509_ANY_STRING",
    "X509_ASN_ENCODING",
    "X509_AUTHORITY_INFO_ACCESS",
    "X509_AUTHORITY_KEY_ID",
    "X509_AUTHORITY_KEY_ID2",
    "X509_BASIC_CONSTRAINTS",
    "X509_BASIC_CONSTRAINTS2",
    "X509_BIOMETRIC_EXT",
    "X509_BITS",
    "X509_BITS_WITHOUT_TRAILING_ZEROES",
    "X509_CERT",
    "X509_CERTIFICATE_TEMPLATE",
    "X509_CERT_BUNDLE",
    "X509_CERT_CRL_TO_BE_SIGNED",
    "X509_CERT_PAIR",
    "X509_CERT_POLICIES",
    "X509_CERT_REQUEST_TO_BE_SIGNED",
    "X509_CERT_TO_BE_SIGNED",
    "X509_CHOICE_OF_TIME",
    "X509_CRL_DIST_POINTS",
    "X509_CRL_REASON_CODE",
    "X509_CROSS_CERT_DIST_POINTS",
    "X509_DH_PARAMETERS",
    "X509_DH_PUBLICKEY",
    "X509_DSS_PARAMETERS",
    "X509_DSS_PUBLICKEY",
    "X509_DSS_SIGNATURE",
    "X509_ECC_PARAMETERS",
    "X509_ECC_PRIVATE_KEY",
    "X509_ECC_SIGNATURE",
    "X509_ENHANCED_KEY_USAGE",
    "X509_ENUMERATED",
    "X509_EXTENSIONS",
    "X509_INTEGER",
    "X509_ISSUING_DIST_POINT",
    "X509_KEYGEN_REQUEST_TO_BE_SIGNED",
    "X509_KEY_ATTRIBUTES",
    "X509_KEY_USAGE",
    "X509_KEY_USAGE_RESTRICTION",
    "X509_LOGOTYPE_EXT",
    "X509_MULTI_BYTE_INTEGER",
    "X509_MULTI_BYTE_UINT",
    "X509_NAME",
    "X509_NAME_CONSTRAINTS",
    "X509_NAME_VALUE",
    "X509_NDR_ENCODING",
    "X509_OBJECT_IDENTIFIER",
    "X509_OCTET_STRING",
    "X509_PKIX_POLICY_QUALIFIER_USERNOTICE",
    "X509_POLICY_CONSTRAINTS",
    "X509_POLICY_MAPPINGS",
    "X509_PUBLIC_KEY_INFO",
    "X509_QC_STATEMENTS_EXT",
    "X509_SEQUENCE_OF_ANY",
    "X509_SUBJECT_DIR_ATTRS",
    "X509_SUBJECT_INFO_ACCESS",
    "X509_UNICODE_ANY_STRING",
    "X509_UNICODE_NAME",
    "X509_UNICODE_NAME_VALUE",
    "X942_DH_PARAMETERS",
    "X942_OTHER_INFO",
    "ZERO_PADDING",
    "cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT",
    "cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT",
    "dwFORCE_KEY_PROTECTION_DISABLED",
    "dwFORCE_KEY_PROTECTION_HIGH",
    "dwFORCE_KEY_PROTECTION_USER_SELECT",
    "szFORCE_KEY_PROTECTION",
    "szKEY_CACHE_ENABLED",
    "szKEY_CACHE_SECONDS",
    "szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS",
    "szOIDVerisign_FailInfo",
    "szOIDVerisign_MessageType",
    "szOIDVerisign_PkiStatus",
    "szOIDVerisign_RecipientNonce",
    "szOIDVerisign_SenderNonce",
    "szOIDVerisign_TransactionID",
    "szOID_ANSI_X942",
    "szOID_ANSI_X942_DH",
    "szOID_ANY_APPLICATION_POLICY",
    "szOID_ANY_CERT_POLICY",
    "szOID_ANY_ENHANCED_KEY_USAGE",
    "szOID_APPLICATION_CERT_POLICIES",
    "szOID_APPLICATION_POLICY_CONSTRAINTS",
    "szOID_APPLICATION_POLICY_MAPPINGS",
    "szOID_ARCHIVED_KEY_ATTR",
    "szOID_ARCHIVED_KEY_CERT_HASH",
    "szOID_ATTEST_WHQL_CRYPTO",
    "szOID_ATTR_PLATFORM_SPECIFICATION",
    "szOID_ATTR_SUPPORTED_ALGORITHMS",
    "szOID_ATTR_TPM_SECURITY_ASSERTIONS",
    "szOID_ATTR_TPM_SPECIFICATION",
    "szOID_AUTHORITY_INFO_ACCESS",
    "szOID_AUTHORITY_KEY_IDENTIFIER",
    "szOID_AUTHORITY_KEY_IDENTIFIER2",
    "szOID_AUTHORITY_REVOCATION_LIST",
    "szOID_AUTO_ENROLL_CTL_USAGE",
    "szOID_BACKGROUND_OTHER_LOGOTYPE",
    "szOID_BASIC_CONSTRAINTS",
    "szOID_BASIC_CONSTRAINTS2",
    "szOID_BIOMETRIC_EXT",
    "szOID_BIOMETRIC_SIGNING",
    "szOID_BUSINESS_CATEGORY",
    "szOID_CA_CERTIFICATE",
    "szOID_CERTIFICATE_REVOCATION_LIST",
    "szOID_CERTIFICATE_TEMPLATE",
    "szOID_CERTSRV_CA_VERSION",
    "szOID_CERTSRV_CROSSCA_VERSION",
    "szOID_CERTSRV_PREVIOUS_CERT_HASH",
    "szOID_CERT_DISALLOWED_FILETIME_PROP_ID",
    "szOID_CERT_EXTENSIONS",
    "szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID",
    "szOID_CERT_KEY_IDENTIFIER_PROP_ID",
    "szOID_CERT_MANIFOLD",
    "szOID_CERT_MD5_HASH_PROP_ID",
    "szOID_CERT_POLICIES",
    "szOID_CERT_POLICIES_95",
    "szOID_CERT_POLICIES_95_QUALIFIER1",
    "szOID_CERT_PROP_ID_PREFIX",
    "szOID_CERT_SIGNATURE_HASH_PROP_ID",
    "szOID_CERT_STRONG_KEY_OS_1",
    "szOID_CERT_STRONG_KEY_OS_CURRENT",
    "szOID_CERT_STRONG_KEY_OS_PREFIX",
    "szOID_CERT_STRONG_SIGN_OS_1",
    "szOID_CERT_STRONG_SIGN_OS_CURRENT",
    "szOID_CERT_STRONG_SIGN_OS_PREFIX",
    "szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID",
    "szOID_CMC",
    "szOID_CMC_ADD_ATTRIBUTES",
    "szOID_CMC_ADD_EXTENSIONS",
    "szOID_CMC_DATA_RETURN",
    "szOID_CMC_DECRYPTED_POP",
    "szOID_CMC_ENCRYPTED_POP",
    "szOID_CMC_GET_CERT",
    "szOID_CMC_GET_CRL",
    "szOID_CMC_IDENTIFICATION",
    "szOID_CMC_IDENTITY_PROOF",
    "szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE",
    "szOID_CMC_ID_POP_LINK_RANDOM",
    "szOID_CMC_ID_POP_LINK_WITNESS",
    "szOID_CMC_LRA_POP_WITNESS",
    "szOID_CMC_QUERY_PENDING",
    "szOID_CMC_RECIPIENT_NONCE",
    "szOID_CMC_REG_INFO",
    "szOID_CMC_RESPONSE_INFO",
    "szOID_CMC_REVOKE_REQUEST",
    "szOID_CMC_SENDER_NONCE",
    "szOID_CMC_STATUS_INFO",
    "szOID_CMC_TRANSACTION_ID",
    "szOID_CN_ECDSA_SHA256",
    "szOID_COMMON_NAME",
    "szOID_COUNTRY_NAME",
    "szOID_CRL_DIST_POINTS",
    "szOID_CRL_NEXT_PUBLISH",
    "szOID_CRL_NUMBER",
    "szOID_CRL_REASON_CODE",
    "szOID_CRL_SELF_CDP",
    "szOID_CRL_VIRTUAL_BASE",
    "szOID_CROSS_CERTIFICATE_PAIR",
    "szOID_CROSS_CERT_DIST_POINTS",
    "szOID_CTL",
    "szOID_CT_CERT_SCTLIST",
    "szOID_CT_PKI_DATA",
    "szOID_CT_PKI_RESPONSE",
    "szOID_DELTA_CRL_INDICATOR",
    "szOID_DESCRIPTION",
    "szOID_DESTINATION_INDICATOR",
    "szOID_DEVICE_SERIAL_NUMBER",
    "szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF",
    "szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF",
    "szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF",
    "szOID_DISALLOWED_HASH",
    "szOID_DISALLOWED_LIST",
    "szOID_DN_QUALIFIER",
    "szOID_DOMAIN_COMPONENT",
    "szOID_DRM",
    "szOID_DRM_INDIVIDUALIZATION",
    "szOID_DS",
    "szOID_DSALG",
    "szOID_DSALG_CRPT",
    "szOID_DSALG_HASH",
    "szOID_DSALG_RSA",
    "szOID_DSALG_SIGN",
    "szOID_DS_EMAIL_REPLICATION",
    "szOID_DYNAMIC_CODE_GEN_SIGNER",
    "szOID_ECC_CURVE_BRAINPOOLP160R1",
    "szOID_ECC_CURVE_BRAINPOOLP160T1",
    "szOID_ECC_CURVE_BRAINPOOLP192R1",
    "szOID_ECC_CURVE_BRAINPOOLP192T1",
    "szOID_ECC_CURVE_BRAINPOOLP224R1",
    "szOID_ECC_CURVE_BRAINPOOLP224T1",
    "szOID_ECC_CURVE_BRAINPOOLP256R1",
    "szOID_ECC_CURVE_BRAINPOOLP256T1",
    "szOID_ECC_CURVE_BRAINPOOLP320R1",
    "szOID_ECC_CURVE_BRAINPOOLP320T1",
    "szOID_ECC_CURVE_BRAINPOOLP384R1",
    "szOID_ECC_CURVE_BRAINPOOLP384T1",
    "szOID_ECC_CURVE_BRAINPOOLP512R1",
    "szOID_ECC_CURVE_BRAINPOOLP512T1",
    "szOID_ECC_CURVE_EC192WAPI",
    "szOID_ECC_CURVE_NISTP192",
    "szOID_ECC_CURVE_NISTP224",
    "szOID_ECC_CURVE_NISTP256",
    "szOID_ECC_CURVE_NISTP384",
    "szOID_ECC_CURVE_NISTP521",
    "szOID_ECC_CURVE_P256",
    "szOID_ECC_CURVE_P384",
    "szOID_ECC_CURVE_P521",
    "szOID_ECC_CURVE_SECP160K1",
    "szOID_ECC_CURVE_SECP160R1",
    "szOID_ECC_CURVE_SECP160R2",
    "szOID_ECC_CURVE_SECP192K1",
    "szOID_ECC_CURVE_SECP192R1",
    "szOID_ECC_CURVE_SECP224K1",
    "szOID_ECC_CURVE_SECP224R1",
    "szOID_ECC_CURVE_SECP256K1",
    "szOID_ECC_CURVE_SECP256R1",
    "szOID_ECC_CURVE_SECP384R1",
    "szOID_ECC_CURVE_SECP521R1",
    "szOID_ECC_CURVE_WTLS12",
    "szOID_ECC_CURVE_WTLS7",
    "szOID_ECC_CURVE_WTLS9",
    "szOID_ECC_CURVE_X962P192V1",
    "szOID_ECC_CURVE_X962P192V2",
    "szOID_ECC_CURVE_X962P192V3",
    "szOID_ECC_CURVE_X962P239V1",
    "szOID_ECC_CURVE_X962P239V2",
    "szOID_ECC_CURVE_X962P239V3",
    "szOID_ECC_CURVE_X962P256V1",
    "szOID_ECC_PUBLIC_KEY",
    "szOID_ECDSA_SHA1",
    "szOID_ECDSA_SHA256",
    "szOID_ECDSA_SHA384",
    "szOID_ECDSA_SHA512",
    "szOID_ECDSA_SPECIFIED",
    "szOID_EFS_RECOVERY",
    "szOID_EMBEDDED_NT_CRYPTO",
    "szOID_ENCLAVE_SIGNING",
    "szOID_ENCRYPTED_KEY_HASH",
    "szOID_ENHANCED_KEY_USAGE",
    "szOID_ENROLLMENT_AGENT",
    "szOID_ENROLLMENT_CSP_PROVIDER",
    "szOID_ENROLLMENT_NAME_VALUE_PAIR",
    "szOID_ENROLL_AIK_INFO",
    "szOID_ENROLL_ATTESTATION_CHALLENGE",
    "szOID_ENROLL_ATTESTATION_STATEMENT",
    "szOID_ENROLL_CAXCHGCERT_HASH",
    "szOID_ENROLL_CERTTYPE_EXTENSION",
    "szOID_ENROLL_EKPUB_CHALLENGE",
    "szOID_ENROLL_EKVERIFYCERT",
    "szOID_ENROLL_EKVERIFYCREDS",
    "szOID_ENROLL_EKVERIFYKEY",
    "szOID_ENROLL_EK_CA_KEYID",
    "szOID_ENROLL_EK_INFO",
    "szOID_ENROLL_ENCRYPTION_ALGORITHM",
    "szOID_ENROLL_KEY_AFFINITY",
    "szOID_ENROLL_KSP_NAME",
    "szOID_ENROLL_SCEP_CHALLENGE_ANSWER",
    "szOID_ENROLL_SCEP_CLIENT_REQUEST",
    "szOID_ENROLL_SCEP_ERROR",
    "szOID_ENROLL_SCEP_SERVER_MESSAGE",
    "szOID_ENROLL_SCEP_SERVER_SECRET",
    "szOID_ENROLL_SCEP_SERVER_STATE",
    "szOID_ENROLL_SCEP_SIGNER_HASH",
    "szOID_ENTERPRISE_OID_ROOT",
    "szOID_EV_RDN_COUNTRY",
    "szOID_EV_RDN_LOCALE",
    "szOID_EV_RDN_STATE_OR_PROVINCE",
    "szOID_EV_WHQL_CRYPTO",
    "szOID_FACSIMILE_TELEPHONE_NUMBER",
    "szOID_FRESHEST_CRL",
    "szOID_GIVEN_NAME",
    "szOID_HPKP_DOMAIN_NAME_CTL",
    "szOID_HPKP_HEADER_VALUE_CTL",
    "szOID_INFOSEC",
    "szOID_INFOSEC_SuiteAConfidentiality",
    "szOID_INFOSEC_SuiteAIntegrity",
    "szOID_INFOSEC_SuiteAKMandSig",
    "szOID_INFOSEC_SuiteAKeyManagement",
    "szOID_INFOSEC_SuiteASignature",
    "szOID_INFOSEC_SuiteATokenProtection",
    "szOID_INFOSEC_mosaicConfidentiality",
    "szOID_INFOSEC_mosaicIntegrity",
    "szOID_INFOSEC_mosaicKMandSig",
    "szOID_INFOSEC_mosaicKMandUpdSig",
    "szOID_INFOSEC_mosaicKeyManagement",
    "szOID_INFOSEC_mosaicSignature",
    "szOID_INFOSEC_mosaicTokenProtection",
    "szOID_INFOSEC_mosaicUpdatedInteg",
    "szOID_INFOSEC_mosaicUpdatedSig",
    "szOID_INFOSEC_sdnsConfidentiality",
    "szOID_INFOSEC_sdnsIntegrity",
    "szOID_INFOSEC_sdnsKMandSig",
    "szOID_INFOSEC_sdnsKeyManagement",
    "szOID_INFOSEC_sdnsSignature",
    "szOID_INFOSEC_sdnsTokenProtection",
    "szOID_INHIBIT_ANY_POLICY",
    "szOID_INITIALS",
    "szOID_INTERNATIONALIZED_EMAIL_ADDRESS",
    "szOID_INTERNATIONAL_ISDN_NUMBER",
    "szOID_IPSEC_KP_IKE_INTERMEDIATE",
    "szOID_ISSUED_CERT_HASH",
    "szOID_ISSUER_ALT_NAME",
    "szOID_ISSUER_ALT_NAME2",
    "szOID_ISSUING_DIST_POINT",
    "szOID_IUM_SIGNING",
    "szOID_KEYID_RDN",
    "szOID_KEY_ATTRIBUTES",
    "szOID_KEY_USAGE",
    "szOID_KEY_USAGE_RESTRICTION",
    "szOID_KP_CA_EXCHANGE",
    "szOID_KP_CSP_SIGNATURE",
    "szOID_KP_CTL_USAGE_SIGNING",
    "szOID_KP_DOCUMENT_SIGNING",
    "szOID_KP_EFS",
    "szOID_KP_FLIGHT_SIGNING",
    "szOID_KP_KERNEL_MODE_CODE_SIGNING",
    "szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING",
    "szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING",
    "szOID_KP_KEY_RECOVERY",
    "szOID_KP_KEY_RECOVERY_AGENT",
    "szOID_KP_LIFETIME_SIGNING",
    "szOID_KP_MOBILE_DEVICE_SOFTWARE",
    "szOID_KP_PRIVACY_CA",
    "szOID_KP_QUALIFIED_SUBORDINATION",
    "szOID_KP_SMARTCARD_LOGON",
    "szOID_KP_SMART_DISPLAY",
    "szOID_KP_TIME_STAMP_SIGNING",
    "szOID_KP_TPM_AIK_CERTIFICATE",
    "szOID_KP_TPM_EK_CERTIFICATE",
    "szOID_KP_TPM_PLATFORM_CERTIFICATE",
    "szOID_LEGACY_POLICY_MAPPINGS",
    "szOID_LICENSES",
    "szOID_LICENSE_SERVER",
    "szOID_LOCALITY_NAME",
    "szOID_LOCAL_MACHINE_KEYSET",
    "szOID_LOGOTYPE_EXT",
    "szOID_LOYALTY_OTHER_LOGOTYPE",
    "szOID_MEMBER",
    "szOID_MICROSOFT_PUBLISHER_SIGNER",
    "szOID_NAME_CONSTRAINTS",
    "szOID_NETSCAPE",
    "szOID_NETSCAPE_BASE_URL",
    "szOID_NETSCAPE_CA_POLICY_URL",
    "szOID_NETSCAPE_CA_REVOCATION_URL",
    "szOID_NETSCAPE_CERT_EXTENSION",
    "szOID_NETSCAPE_CERT_RENEWAL_URL",
    "szOID_NETSCAPE_CERT_SEQUENCE",
    "szOID_NETSCAPE_CERT_TYPE",
    "szOID_NETSCAPE_COMMENT",
    "szOID_NETSCAPE_DATA_TYPE",
    "szOID_NETSCAPE_REVOCATION_URL",
    "szOID_NETSCAPE_SSL_SERVER_NAME",
    "szOID_NEXT_UPDATE_LOCATION",
    "szOID_NIST_AES128_CBC",
    "szOID_NIST_AES128_WRAP",
    "szOID_NIST_AES192_CBC",
    "szOID_NIST_AES192_WRAP",
    "szOID_NIST_AES256_CBC",
    "szOID_NIST_AES256_WRAP",
    "szOID_NIST_sha256",
    "szOID_NIST_sha384",
    "szOID_NIST_sha512",
    "szOID_NT5_CRYPTO",
    "szOID_NTDS_REPLICATION",
    "szOID_NT_PRINCIPAL_NAME",
    "szOID_OEM_WHQL_CRYPTO",
    "szOID_OIW",
    "szOID_OIWDIR",
    "szOID_OIWDIR_CRPT",
    "szOID_OIWDIR_HASH",
    "szOID_OIWDIR_SIGN",
    "szOID_OIWDIR_md2",
    "szOID_OIWDIR_md2RSA",
    "szOID_OIWSEC",
    "szOID_OIWSEC_desCBC",
    "szOID_OIWSEC_desCFB",
    "szOID_OIWSEC_desECB",
    "szOID_OIWSEC_desEDE",
    "szOID_OIWSEC_desMAC",
    "szOID_OIWSEC_desOFB",
    "szOID_OIWSEC_dhCommMod",
    "szOID_OIWSEC_dsa",
    "szOID_OIWSEC_dsaComm",
    "szOID_OIWSEC_dsaCommSHA",
    "szOID_OIWSEC_dsaCommSHA1",
    "szOID_OIWSEC_dsaSHA1",
    "szOID_OIWSEC_keyHashSeal",
    "szOID_OIWSEC_md2RSASign",
    "szOID_OIWSEC_md4RSA",
    "szOID_OIWSEC_md4RSA2",
    "szOID_OIWSEC_md5RSA",
    "szOID_OIWSEC_md5RSASign",
    "szOID_OIWSEC_mdc2",
    "szOID_OIWSEC_mdc2RSA",
    "szOID_OIWSEC_rsaSign",
    "szOID_OIWSEC_rsaXchg",
    "szOID_OIWSEC_sha",
    "szOID_OIWSEC_sha1",
    "szOID_OIWSEC_sha1RSASign",
    "szOID_OIWSEC_shaDSA",
    "szOID_OIWSEC_shaRSA",
    "szOID_ORGANIZATIONAL_UNIT_NAME",
    "szOID_ORGANIZATION_NAME",
    "szOID_OS_VERSION",
    "szOID_OWNER",
    "szOID_PHYSICAL_DELIVERY_OFFICE_NAME",
    "szOID_PIN_RULES_CTL",
    "szOID_PIN_RULES_DOMAIN_NAME",
    "szOID_PIN_RULES_EXT",
    "szOID_PIN_RULES_LOG_END_DATE_EXT",
    "szOID_PIN_RULES_SIGNER",
    "szOID_PKCS",
    "szOID_PKCS_1",
    "szOID_PKCS_10",
    "szOID_PKCS_12",
    "szOID_PKCS_12_EXTENDED_ATTRIBUTES",
    "szOID_PKCS_12_FRIENDLY_NAME_ATTR",
    "szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR",
    "szOID_PKCS_12_LOCAL_KEY_ID",
    "szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID",
    "szOID_PKCS_12_PbeIds",
    "szOID_PKCS_12_pbeWithSHA1And128BitRC2",
    "szOID_PKCS_12_pbeWithSHA1And128BitRC4",
    "szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES",
    "szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES",
    "szOID_PKCS_12_pbeWithSHA1And40BitRC2",
    "szOID_PKCS_12_pbeWithSHA1And40BitRC4",
    "szOID_PKCS_2",
    "szOID_PKCS_3",
    "szOID_PKCS_4",
    "szOID_PKCS_5",
    "szOID_PKCS_5_PBES2",
    "szOID_PKCS_5_PBKDF2",
    "szOID_PKCS_6",
    "szOID_PKCS_7",
    "szOID_PKCS_7_DATA",
    "szOID_PKCS_7_DIGESTED",
    "szOID_PKCS_7_ENCRYPTED",
    "szOID_PKCS_7_ENVELOPED",
    "szOID_PKCS_7_SIGNED",
    "szOID_PKCS_7_SIGNEDANDENVELOPED",
    "szOID_PKCS_8",
    "szOID_PKCS_9",
    "szOID_PKCS_9_CONTENT_TYPE",
    "szOID_PKCS_9_MESSAGE_DIGEST",
    "szOID_PKINIT_KP_KDC",
    "szOID_PKIX",
    "szOID_PKIX_ACC_DESCR",
    "szOID_PKIX_CA_ISSUERS",
    "szOID_PKIX_CA_REPOSITORY",
    "szOID_PKIX_KP",
    "szOID_PKIX_KP_CLIENT_AUTH",
    "szOID_PKIX_KP_CODE_SIGNING",
    "szOID_PKIX_KP_EMAIL_PROTECTION",
    "szOID_PKIX_KP_IPSEC_END_SYSTEM",
    "szOID_PKIX_KP_IPSEC_TUNNEL",
    "szOID_PKIX_KP_IPSEC_USER",
    "szOID_PKIX_KP_OCSP_SIGNING",
    "szOID_PKIX_KP_SERVER_AUTH",
    "szOID_PKIX_KP_TIMESTAMP_SIGNING",
    "szOID_PKIX_NO_SIGNATURE",
    "szOID_PKIX_OCSP",
    "szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE",
    "szOID_PKIX_OCSP_NOCHECK",
    "szOID_PKIX_OCSP_NONCE",
    "szOID_PKIX_PE",
    "szOID_PKIX_POLICY_QUALIFIER_CPS",
    "szOID_PKIX_POLICY_QUALIFIER_USERNOTICE",
    "szOID_PKIX_TIME_STAMPING",
    "szOID_PLATFORM_MANIFEST_BINARY_ID",
    "szOID_POLICY_CONSTRAINTS",
    "szOID_POLICY_MAPPINGS",
    "szOID_POSTAL_ADDRESS",
    "szOID_POSTAL_CODE",
    "szOID_POST_OFFICE_BOX",
    "szOID_PREFERRED_DELIVERY_METHOD",
    "szOID_PRESENTATION_ADDRESS",
    "szOID_PRIVATEKEY_USAGE_PERIOD",
    "szOID_PRODUCT_UPDATE",
    "szOID_PROTECTED_PROCESS_LIGHT_SIGNER",
    "szOID_PROTECTED_PROCESS_SIGNER",
    "szOID_QC_EU_COMPLIANCE",
    "szOID_QC_SSCD",
    "szOID_QC_STATEMENTS_EXT",
    "szOID_RDN_DUMMY_SIGNER",
    "szOID_RDN_TCG_PLATFORM_MANUFACTURER",
    "szOID_RDN_TCG_PLATFORM_MODEL",
    "szOID_RDN_TCG_PLATFORM_VERSION",
    "szOID_RDN_TPM_MANUFACTURER",
    "szOID_RDN_TPM_MODEL",
    "szOID_RDN_TPM_VERSION",
    "szOID_REASON_CODE_HOLD",
    "szOID_REGISTERED_ADDRESS",
    "szOID_REMOVE_CERTIFICATE",
    "szOID_RENEWAL_CERTIFICATE",
    "szOID_REQUEST_CLIENT_INFO",
    "szOID_REQUIRE_CERT_CHAIN_POLICY",
    "szOID_REVOKED_LIST_SIGNER",
    "szOID_RFC3161_counterSign",
    "szOID_ROLE_OCCUPANT",
    "szOID_ROOT_LIST_SIGNER",
    "szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION",
    "szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION",
    "szOID_ROOT_PROGRAM_FLAGS",
    "szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL",
    "szOID_RSA",
    "szOID_RSAES_OAEP",
    "szOID_RSA_DES_EDE3_CBC",
    "szOID_RSA_DH",
    "szOID_RSA_ENCRYPT",
    "szOID_RSA_HASH",
    "szOID_RSA_MD2",
    "szOID_RSA_MD2RSA",
    "szOID_RSA_MD4",
    "szOID_RSA_MD4RSA",
    "szOID_RSA_MD5",
    "szOID_RSA_MD5RSA",
    "szOID_RSA_MGF1",
    "szOID_RSA_PSPECIFIED",
    "szOID_RSA_RC2CBC",
    "szOID_RSA_RC4",
    "szOID_RSA_RC5_CBCPad",
    "szOID_RSA_RSA",
    "szOID_RSA_SETOAEP_RSA",
    "szOID_RSA_SHA1RSA",
    "szOID_RSA_SHA256RSA",
    "szOID_RSA_SHA384RSA",
    "szOID_RSA_SHA512RSA",
    "szOID_RSA_SMIMECapabilities",
    "szOID_RSA_SMIMEalg",
    "szOID_RSA_SMIMEalgCMS3DESwrap",
    "szOID_RSA_SMIMEalgCMSRC2wrap",
    "szOID_RSA_SMIMEalgESDH",
    "szOID_RSA_SSA_PSS",
    "szOID_RSA_certExtensions",
    "szOID_RSA_challengePwd",
    "szOID_RSA_contentType",
    "szOID_RSA_counterSign",
    "szOID_RSA_data",
    "szOID_RSA_digestedData",
    "szOID_RSA_emailAddr",
    "szOID_RSA_encryptedData",
    "szOID_RSA_envelopedData",
    "szOID_RSA_extCertAttrs",
    "szOID_RSA_hashedData",
    "szOID_RSA_messageDigest",
    "szOID_RSA_preferSignedData",
    "szOID_RSA_signEnvData",
    "szOID_RSA_signedData",
    "szOID_RSA_signingTime",
    "szOID_RSA_unstructAddr",
    "szOID_RSA_unstructName",
    "szOID_SEARCH_GUIDE",
    "szOID_SEE_ALSO",
    "szOID_SERIALIZED",
    "szOID_SERVER_GATED_CRYPTO",
    "szOID_SGC_NETSCAPE",
    "szOID_SITE_PIN_RULES_FLAGS_ATTR",
    "szOID_SITE_PIN_RULES_INDEX_ATTR",
    "szOID_SORTED_CTL",
    "szOID_STATE_OR_PROVINCE_NAME",
    "szOID_STREET_ADDRESS",
    "szOID_SUBJECT_ALT_NAME",
    "szOID_SUBJECT_ALT_NAME2",
    "szOID_SUBJECT_DIR_ATTRS",
    "szOID_SUBJECT_INFO_ACCESS",
    "szOID_SUBJECT_KEY_IDENTIFIER",
    "szOID_SUPPORTED_APPLICATION_CONTEXT",
    "szOID_SUR_NAME",
    "szOID_SYNC_ROOT_CTL_EXT",
    "szOID_TELEPHONE_NUMBER",
    "szOID_TELETEXT_TERMINAL_IDENTIFIER",
    "szOID_TELEX_NUMBER",
    "szOID_TIMESTAMP_TOKEN",
    "szOID_TITLE",
    "szOID_TLS_FEATURES_EXT",
    "szOID_USER_CERTIFICATE",
    "szOID_USER_PASSWORD",
    "szOID_VERISIGN_BITSTRING_6_13",
    "szOID_VERISIGN_ISS_STRONG_CRYPTO",
    "szOID_VERISIGN_ONSITE_JURISDICTION_HASH",
    "szOID_VERISIGN_PRIVATE_6_9",
    "szOID_WHQL_CRYPTO",
    "szOID_WINDOWS_KITS_SIGNER",
    "szOID_WINDOWS_RT_SIGNER",
    "szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER",
    "szOID_WINDOWS_STORE_SIGNER",
    "szOID_WINDOWS_TCB_SIGNER",
    "szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER",
    "szOID_X21_ADDRESS",
    "szOID_X957",
    "szOID_X957_DSA",
    "szOID_X957_SHA1DSA",
    "szOID_YESNO_TRUST_ATTR",
    "szPRIV_KEY_CACHE_MAX_ITEMS",
    "szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS",
    "sz_CERT_STORE_PROV_COLLECTION",
    "sz_CERT_STORE_PROV_FILENAME",
    "sz_CERT_STORE_PROV_FILENAME_W",
    "sz_CERT_STORE_PROV_LDAP",
    "sz_CERT_STORE_PROV_LDAP_W",
    "sz_CERT_STORE_PROV_MEMORY",
    "sz_CERT_STORE_PROV_PHYSICAL",
    "sz_CERT_STORE_PROV_PHYSICAL_W",
    "sz_CERT_STORE_PROV_PKCS12",
    "sz_CERT_STORE_PROV_PKCS7",
    "sz_CERT_STORE_PROV_SERIALIZED",
    "sz_CERT_STORE_PROV_SMART_CARD",
    "sz_CERT_STORE_PROV_SMART_CARD_W",
    "sz_CERT_STORE_PROV_SYSTEM",
    "sz_CERT_STORE_PROV_SYSTEM_REGISTRY",
    "sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W",
    "sz_CERT_STORE_PROV_SYSTEM_W",
    "wszURI_CANONICALIZATION_C14N",
    "wszURI_CANONICALIZATION_C14NC",
    "wszURI_CANONICALIZATION_EXSLUSIVE_C14N",
    "wszURI_CANONICALIZATION_EXSLUSIVE_C14NC",
    "wszURI_TRANSFORM_XPATH",
    "wszURI_XMLNS_DIGSIG_BASE64",
    "wszURI_XMLNS_DIGSIG_DSA_SHA1",
    "wszURI_XMLNS_DIGSIG_ECDSA_SHA1",
    "wszURI_XMLNS_DIGSIG_ECDSA_SHA256",
    "wszURI_XMLNS_DIGSIG_ECDSA_SHA384",
    "wszURI_XMLNS_DIGSIG_ECDSA_SHA512",
    "wszURI_XMLNS_DIGSIG_HMAC_SHA1",
    "wszURI_XMLNS_DIGSIG_HMAC_SHA256",
    "wszURI_XMLNS_DIGSIG_HMAC_SHA384",
    "wszURI_XMLNS_DIGSIG_HMAC_SHA512",
    "wszURI_XMLNS_DIGSIG_RSA_SHA1",
    "wszURI_XMLNS_DIGSIG_RSA_SHA256",
    "wszURI_XMLNS_DIGSIG_RSA_SHA384",
    "wszURI_XMLNS_DIGSIG_RSA_SHA512",
    "wszURI_XMLNS_DIGSIG_SHA1",
    "wszURI_XMLNS_DIGSIG_SHA256",
    "wszURI_XMLNS_DIGSIG_SHA384",
    "wszURI_XMLNS_DIGSIG_SHA512",
    "wszURI_XMLNS_TRANSFORM_BASE64",
    "wszURI_XMLNS_TRANSFORM_ENVELOPED",
    "wszXMLNS_DIGSIG",
    "wszXMLNS_DIGSIG_Id",
    "wszXMLNS_DIGSIG_SignatureProperties",
]
_arch_optional = [
]
