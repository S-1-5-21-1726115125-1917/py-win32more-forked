from __future__ import annotations
from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head
import win32more.Foundation
import win32more.Media
import win32more.Media.Audio
import win32more.Media.Multimedia
import win32more.System.Com
import win32more.System.Com.StructuredStorage
import win32more.UI.Shell.PropertiesSystem
import win32more.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
def __dir__():
    return __all__
_AUDCLNT_BUFFERFLAGS = Int32
AUDCLNT_BUFFERFLAGS_DATA_DISCONTINUITY: _AUDCLNT_BUFFERFLAGS = 1
AUDCLNT_BUFFERFLAGS_SILENT: _AUDCLNT_BUFFERFLAGS = 2
AUDCLNT_BUFFERFLAGS_TIMESTAMP_ERROR: _AUDCLNT_BUFFERFLAGS = 4
class ACMDRIVERDETAILSA(Structure):
    cbStruct: UInt32
    fccType: UInt32
    fccComp: UInt32
    wMid: UInt16
    wPid: UInt16
    vdwACM: UInt32
    vdwDriver: UInt32
    fdwSupport: UInt32
    cFormatTags: UInt32
    cFilterTags: UInt32
    hicon: win32more.UI.WindowsAndMessaging.HICON
    szShortName: win32more.Foundation.CHAR * 32
    szLongName: win32more.Foundation.CHAR * 128
    szCopyright: win32more.Foundation.CHAR * 80
    szLicensing: win32more.Foundation.CHAR * 128
    szFeatures: win32more.Foundation.CHAR * 512
    _pack_ = 1
class ACMDRIVERDETAILSW(Structure):
    cbStruct: UInt32
    fccType: UInt32
    fccComp: UInt32
    wMid: UInt16
    wPid: UInt16
    vdwACM: UInt32
    vdwDriver: UInt32
    fdwSupport: UInt32
    cFormatTags: UInt32
    cFilterTags: UInt32
    hicon: win32more.UI.WindowsAndMessaging.HICON
    szShortName: Char * 32
    szLongName: Char * 128
    szCopyright: Char * 80
    szLicensing: Char * 128
    szFeatures: Char * 512
    _pack_ = 1
@winfunctype_pointer
def ACMDRIVERENUMCB(hadid: win32more.Media.Audio.HACMDRIVERID, dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
class ACMDRVFORMATSUGGEST(Structure):
    cbStruct: UInt32
    fdwSuggest: UInt32
    pwfxSrc: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    cbwfxSrc: UInt32
    pwfxDst: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    cbwfxDst: UInt32
    _pack_ = 1
class ACMDRVOPENDESCA(Structure):
    cbStruct: UInt32
    fccType: UInt32
    fccComp: UInt32
    dwVersion: UInt32
    dwFlags: UInt32
    dwError: UInt32
    pszSectionName: win32more.Foundation.PSTR
    pszAliasName: win32more.Foundation.PSTR
    dnDevNode: UInt32
    _pack_ = 1
class ACMDRVOPENDESCW(Structure):
    cbStruct: UInt32
    fccType: UInt32
    fccComp: UInt32
    dwVersion: UInt32
    dwFlags: UInt32
    dwError: UInt32
    pszSectionName: win32more.Foundation.PWSTR
    pszAliasName: win32more.Foundation.PWSTR
    dnDevNode: UInt32
    _pack_ = 1
class ACMDRVSTREAMHEADER(Structure):
    cbStruct: UInt32
    fdwStatus: UInt32
    dwUser: UIntPtr
    pbSrc: c_char_p_no
    cbSrcLength: UInt32
    cbSrcLengthUsed: UInt32
    dwSrcUser: UIntPtr
    pbDst: c_char_p_no
    cbDstLength: UInt32
    cbDstLengthUsed: UInt32
    dwDstUser: UIntPtr
    fdwConvert: UInt32
    padshNext: POINTER(win32more.Media.Audio.ACMDRVSTREAMHEADER_head)
    fdwDriver: UInt32
    dwDriver: UIntPtr
    fdwPrepared: UInt32
    dwPrepared: UIntPtr
    pbPreparedSrc: c_char_p_no
    cbPreparedSrcLength: UInt32
    pbPreparedDst: c_char_p_no
    cbPreparedDstLength: UInt32
    _pack_ = 1
class ACMDRVSTREAMINSTANCE(Structure):
    cbStruct: UInt32
    pwfxSrc: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    pwfxDst: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    pwfltr: POINTER(win32more.Media.Audio.WAVEFILTER_head)
    dwCallback: UIntPtr
    dwInstance: UIntPtr
    fdwOpen: UInt32
    fdwDriver: UInt32
    dwDriver: UIntPtr
    has: win32more.Media.Audio.HACMSTREAM
    _pack_ = 1
class ACMDRVSTREAMSIZE(Structure):
    cbStruct: UInt32
    fdwSize: UInt32
    cbSrcLength: UInt32
    cbDstLength: UInt32
    _pack_ = 1
class ACMFILTERCHOOSEA(Structure):
    cbStruct: UInt32
    fdwStyle: UInt32
    hwndOwner: win32more.Foundation.HWND
    pwfltr: POINTER(win32more.Media.Audio.WAVEFILTER_head)
    cbwfltr: UInt32
    pszTitle: win32more.Foundation.PSTR
    szFilterTag: win32more.Foundation.CHAR * 48
    szFilter: win32more.Foundation.CHAR * 128
    pszName: win32more.Foundation.PSTR
    cchName: UInt32
    fdwEnum: UInt32
    pwfltrEnum: POINTER(win32more.Media.Audio.WAVEFILTER_head)
    hInstance: win32more.Foundation.HINSTANCE
    pszTemplateName: win32more.Foundation.PSTR
    lCustData: win32more.Foundation.LPARAM
    pfnHook: win32more.Media.Audio.ACMFILTERCHOOSEHOOKPROCA
    _pack_ = 1
@winfunctype_pointer
def ACMFILTERCHOOSEHOOKPROCA(hwnd: win32more.Foundation.HWND, uMsg: UInt32, wParam: win32more.Foundation.WPARAM, lParam: win32more.Foundation.LPARAM) -> UInt32: ...
@winfunctype_pointer
def ACMFILTERCHOOSEHOOKPROCW(hwnd: win32more.Foundation.HWND, uMsg: UInt32, wParam: win32more.Foundation.WPARAM, lParam: win32more.Foundation.LPARAM) -> UInt32: ...
class ACMFILTERCHOOSEW(Structure):
    cbStruct: UInt32
    fdwStyle: UInt32
    hwndOwner: win32more.Foundation.HWND
    pwfltr: POINTER(win32more.Media.Audio.WAVEFILTER_head)
    cbwfltr: UInt32
    pszTitle: win32more.Foundation.PWSTR
    szFilterTag: Char * 48
    szFilter: Char * 128
    pszName: win32more.Foundation.PWSTR
    cchName: UInt32
    fdwEnum: UInt32
    pwfltrEnum: POINTER(win32more.Media.Audio.WAVEFILTER_head)
    hInstance: win32more.Foundation.HINSTANCE
    pszTemplateName: win32more.Foundation.PWSTR
    lCustData: win32more.Foundation.LPARAM
    pfnHook: win32more.Media.Audio.ACMFILTERCHOOSEHOOKPROCW
    _pack_ = 1
class ACMFILTERDETAILSA(Structure):
    cbStruct: UInt32
    dwFilterIndex: UInt32
    dwFilterTag: UInt32
    fdwSupport: UInt32
    pwfltr: POINTER(win32more.Media.Audio.WAVEFILTER_head)
    cbwfltr: UInt32
    szFilter: win32more.Foundation.CHAR * 128
    _pack_ = 1
class ACMFILTERDETAILSW(Structure):
    cbStruct: UInt32
    dwFilterIndex: UInt32
    dwFilterTag: UInt32
    fdwSupport: UInt32
    pwfltr: POINTER(win32more.Media.Audio.WAVEFILTER_head)
    cbwfltr: UInt32
    szFilter: Char * 128
    _pack_ = 1
@winfunctype_pointer
def ACMFILTERENUMCBA(hadid: win32more.Media.Audio.HACMDRIVERID, pafd: POINTER(win32more.Media.Audio.ACMFILTERDETAILSA_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def ACMFILTERENUMCBW(hadid: win32more.Media.Audio.HACMDRIVERID, pafd: POINTER(win32more.Media.Audio.ACMFILTERDETAILSW_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
class ACMFILTERTAGDETAILSA(Structure):
    cbStruct: UInt32
    dwFilterTagIndex: UInt32
    dwFilterTag: UInt32
    cbFilterSize: UInt32
    fdwSupport: UInt32
    cStandardFilters: UInt32
    szFilterTag: win32more.Foundation.CHAR * 48
    _pack_ = 1
class ACMFILTERTAGDETAILSW(Structure):
    cbStruct: UInt32
    dwFilterTagIndex: UInt32
    dwFilterTag: UInt32
    cbFilterSize: UInt32
    fdwSupport: UInt32
    cStandardFilters: UInt32
    szFilterTag: Char * 48
    _pack_ = 1
@winfunctype_pointer
def ACMFILTERTAGENUMCBA(hadid: win32more.Media.Audio.HACMDRIVERID, paftd: POINTER(win32more.Media.Audio.ACMFILTERTAGDETAILSA_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def ACMFILTERTAGENUMCBW(hadid: win32more.Media.Audio.HACMDRIVERID, paftd: POINTER(win32more.Media.Audio.ACMFILTERTAGDETAILSW_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
class ACMFORMATCHOOSEA(Structure):
    cbStruct: UInt32
    fdwStyle: UInt32
    hwndOwner: win32more.Foundation.HWND
    pwfx: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    cbwfx: UInt32
    pszTitle: win32more.Foundation.PSTR
    szFormatTag: win32more.Foundation.CHAR * 48
    szFormat: win32more.Foundation.CHAR * 128
    pszName: win32more.Foundation.PSTR
    cchName: UInt32
    fdwEnum: UInt32
    pwfxEnum: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    hInstance: win32more.Foundation.HINSTANCE
    pszTemplateName: win32more.Foundation.PSTR
    lCustData: win32more.Foundation.LPARAM
    pfnHook: win32more.Media.Audio.ACMFORMATCHOOSEHOOKPROCA
    _pack_ = 1
@winfunctype_pointer
def ACMFORMATCHOOSEHOOKPROCA(hwnd: win32more.Foundation.HWND, uMsg: UInt32, wParam: win32more.Foundation.WPARAM, lParam: win32more.Foundation.LPARAM) -> UInt32: ...
@winfunctype_pointer
def ACMFORMATCHOOSEHOOKPROCW(hwnd: win32more.Foundation.HWND, uMsg: UInt32, wParam: win32more.Foundation.WPARAM, lParam: win32more.Foundation.LPARAM) -> UInt32: ...
class ACMFORMATCHOOSEW(Structure):
    cbStruct: UInt32
    fdwStyle: UInt32
    hwndOwner: win32more.Foundation.HWND
    pwfx: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    cbwfx: UInt32
    pszTitle: win32more.Foundation.PWSTR
    szFormatTag: Char * 48
    szFormat: Char * 128
    pszName: win32more.Foundation.PWSTR
    cchName: UInt32
    fdwEnum: UInt32
    pwfxEnum: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    hInstance: win32more.Foundation.HINSTANCE
    pszTemplateName: win32more.Foundation.PWSTR
    lCustData: win32more.Foundation.LPARAM
    pfnHook: win32more.Media.Audio.ACMFORMATCHOOSEHOOKPROCW
    _pack_ = 1
class ACMFORMATDETAILSA(Structure):
    cbStruct: UInt32
    dwFormatIndex: UInt32
    dwFormatTag: UInt32
    fdwSupport: UInt32
    pwfx: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    cbwfx: UInt32
    szFormat: win32more.Foundation.CHAR * 128
    _pack_ = 1
@winfunctype_pointer
def ACMFORMATENUMCBA(hadid: win32more.Media.Audio.HACMDRIVERID, pafd: POINTER(win32more.Media.Audio.ACMFORMATDETAILSA_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def ACMFORMATENUMCBW(hadid: win32more.Media.Audio.HACMDRIVERID, pafd: POINTER(win32more.Media.Audio.tACMFORMATDETAILSW_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
class ACMFORMATTAGDETAILSA(Structure):
    cbStruct: UInt32
    dwFormatTagIndex: UInt32
    dwFormatTag: UInt32
    cbFormatSize: UInt32
    fdwSupport: UInt32
    cStandardFormats: UInt32
    szFormatTag: win32more.Foundation.CHAR * 48
    _pack_ = 1
class ACMFORMATTAGDETAILSW(Structure):
    cbStruct: UInt32
    dwFormatTagIndex: UInt32
    dwFormatTag: UInt32
    cbFormatSize: UInt32
    fdwSupport: UInt32
    cStandardFormats: UInt32
    szFormatTag: Char * 48
    _pack_ = 1
@winfunctype_pointer
def ACMFORMATTAGENUMCBA(hadid: win32more.Media.Audio.HACMDRIVERID, paftd: POINTER(win32more.Media.Audio.ACMFORMATTAGDETAILSA_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def ACMFORMATTAGENUMCBW(hadid: win32more.Media.Audio.HACMDRIVERID, paftd: POINTER(win32more.Media.Audio.ACMFORMATTAGDETAILSW_head), dwInstance: UIntPtr, fdwSupport: UInt32) -> win32more.Foundation.BOOL: ...
class ACMSTREAMHEADER(Structure):
    cbStruct: UInt32
    fdwStatus: UInt32
    dwUser: UIntPtr
    pbSrc: c_char_p_no
    cbSrcLength: UInt32
    cbSrcLengthUsed: UInt32
    dwSrcUser: UIntPtr
    pbDst: c_char_p_no
    cbDstLength: UInt32
    cbDstLengthUsed: UInt32
    dwDstUser: UIntPtr
    dwReservedDriver: UInt32 * 15
    _pack_ = 1
AMBISONICS_CHANNEL_ORDERING = Int32
AMBISONICS_CHANNEL_ORDERING_ACN: AMBISONICS_CHANNEL_ORDERING = 0
AMBISONICS_NORMALIZATION = Int32
AMBISONICS_NORMALIZATION_SN3D: AMBISONICS_NORMALIZATION = 0
AMBISONICS_NORMALIZATION_N3D: AMBISONICS_NORMALIZATION = 1
class AMBISONICS_PARAMS(Structure):
    u32Size: UInt32
    u32Version: UInt32
    u32Type: win32more.Media.Audio.AMBISONICS_TYPE
    u32ChannelOrdering: win32more.Media.Audio.AMBISONICS_CHANNEL_ORDERING
    u32Normalization: win32more.Media.Audio.AMBISONICS_NORMALIZATION
    u32Order: UInt32
    u32NumChannels: UInt32
    pu32ChannelMap: POINTER(UInt32)
AMBISONICS_TYPE = Int32
AMBISONICS_TYPE_FULL3D: AMBISONICS_TYPE = 0
MIXERCONTROL_CONTROLTYPE_CUSTOM: UInt32 = 0
MIXERCONTROL_CONTROLTYPE_BOOLEANMETER: UInt32 = 268500992
MIXERCONTROL_CONTROLTYPE_SIGNEDMETER: UInt32 = 268566528
MIXERCONTROL_CONTROLTYPE_PEAKMETER: UInt32 = 268566529
MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER: UInt32 = 268632064
MIXERCONTROL_CONTROLTYPE_BOOLEAN: UInt32 = 536936448
MIXERCONTROL_CONTROLTYPE_ONOFF: UInt32 = 536936449
MIXERCONTROL_CONTROLTYPE_MUTE: UInt32 = 536936450
MIXERCONTROL_CONTROLTYPE_MONO: UInt32 = 536936451
MIXERCONTROL_CONTROLTYPE_LOUDNESS: UInt32 = 536936452
MIXERCONTROL_CONTROLTYPE_STEREOENH: UInt32 = 536936453
MIXERCONTROL_CONTROLTYPE_BASS_BOOST: UInt32 = 536945271
MIXERCONTROL_CONTROLTYPE_BUTTON: UInt32 = 553713664
MIXERCONTROL_CONTROLTYPE_DECIBELS: UInt32 = 805568512
MIXERCONTROL_CONTROLTYPE_SIGNED: UInt32 = 805437440
MIXERCONTROL_CONTROLTYPE_UNSIGNED: UInt32 = 805502976
MIXERCONTROL_CONTROLTYPE_PERCENT: UInt32 = 805634048
MIXERCONTROL_CONTROLTYPE_SLIDER: UInt32 = 1073872896
MIXERCONTROL_CONTROLTYPE_PAN: UInt32 = 1073872897
MIXERCONTROL_CONTROLTYPE_QSOUNDPAN: UInt32 = 1073872898
MIXERCONTROL_CONTROLTYPE_FADER: UInt32 = 1342373888
MIXERCONTROL_CONTROLTYPE_VOLUME: UInt32 = 1342373889
MIXERCONTROL_CONTROLTYPE_BASS: UInt32 = 1342373890
MIXERCONTROL_CONTROLTYPE_TREBLE: UInt32 = 1342373891
MIXERCONTROL_CONTROLTYPE_EQUALIZER: UInt32 = 1342373892
MIXERCONTROL_CONTROLTYPE_SINGLESELECT: UInt32 = 1879113728
MIXERCONTROL_CONTROLTYPE_MUX: UInt32 = 1879113729
MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT: UInt32 = 1895890944
MIXERCONTROL_CONTROLTYPE_MIXER: UInt32 = 1895890945
MIXERCONTROL_CONTROLTYPE_MICROTIME: UInt32 = 1610809344
MIXERCONTROL_CONTROLTYPE_MILLITIME: UInt32 = 1627586560
WAVE_MAPPER: UInt32 = 4294967295
ENDPOINT_FORMAT_RESET_MIX_ONLY: UInt32 = 1
ENDPOINT_HARDWARE_SUPPORT_VOLUME: UInt32 = 1
ENDPOINT_HARDWARE_SUPPORT_MUTE: UInt32 = 2
ENDPOINT_HARDWARE_SUPPORT_METER: UInt32 = 4
AUDIOCLOCK_CHARACTERISTIC_FIXED_FREQ: UInt32 = 1
AMBISONICS_PARAM_VERSION_1: UInt32 = 1
AUDCLNT_E_NOT_INITIALIZED: win32more.Foundation.HRESULT = -2004287487
AUDCLNT_E_ALREADY_INITIALIZED: win32more.Foundation.HRESULT = -2004287486
AUDCLNT_E_WRONG_ENDPOINT_TYPE: win32more.Foundation.HRESULT = -2004287485
AUDCLNT_E_DEVICE_INVALIDATED: win32more.Foundation.HRESULT = -2004287484
AUDCLNT_E_NOT_STOPPED: win32more.Foundation.HRESULT = -2004287483
AUDCLNT_E_BUFFER_TOO_LARGE: win32more.Foundation.HRESULT = -2004287482
AUDCLNT_E_OUT_OF_ORDER: win32more.Foundation.HRESULT = -2004287481
AUDCLNT_E_UNSUPPORTED_FORMAT: win32more.Foundation.HRESULT = -2004287480
AUDCLNT_E_INVALID_SIZE: win32more.Foundation.HRESULT = -2004287479
AUDCLNT_E_DEVICE_IN_USE: win32more.Foundation.HRESULT = -2004287478
AUDCLNT_E_BUFFER_OPERATION_PENDING: win32more.Foundation.HRESULT = -2004287477
AUDCLNT_E_THREAD_NOT_REGISTERED: win32more.Foundation.HRESULT = -2004287476
AUDCLNT_E_EXCLUSIVE_MODE_NOT_ALLOWED: win32more.Foundation.HRESULT = -2004287474
AUDCLNT_E_ENDPOINT_CREATE_FAILED: win32more.Foundation.HRESULT = -2004287473
AUDCLNT_E_SERVICE_NOT_RUNNING: win32more.Foundation.HRESULT = -2004287472
AUDCLNT_E_EVENTHANDLE_NOT_EXPECTED: win32more.Foundation.HRESULT = -2004287471
AUDCLNT_E_EXCLUSIVE_MODE_ONLY: win32more.Foundation.HRESULT = -2004287470
AUDCLNT_E_BUFDURATION_PERIOD_NOT_EQUAL: win32more.Foundation.HRESULT = -2004287469
AUDCLNT_E_EVENTHANDLE_NOT_SET: win32more.Foundation.HRESULT = -2004287468
AUDCLNT_E_INCORRECT_BUFFER_SIZE: win32more.Foundation.HRESULT = -2004287467
AUDCLNT_E_BUFFER_SIZE_ERROR: win32more.Foundation.HRESULT = -2004287466
AUDCLNT_E_CPUUSAGE_EXCEEDED: win32more.Foundation.HRESULT = -2004287465
AUDCLNT_E_BUFFER_ERROR: win32more.Foundation.HRESULT = -2004287464
AUDCLNT_E_BUFFER_SIZE_NOT_ALIGNED: win32more.Foundation.HRESULT = -2004287463
AUDCLNT_E_INVALID_DEVICE_PERIOD: win32more.Foundation.HRESULT = -2004287456
AUDCLNT_E_INVALID_STREAM_FLAG: win32more.Foundation.HRESULT = -2004287455
AUDCLNT_E_ENDPOINT_OFFLOAD_NOT_CAPABLE: win32more.Foundation.HRESULT = -2004287454
AUDCLNT_E_OUT_OF_OFFLOAD_RESOURCES: win32more.Foundation.HRESULT = -2004287453
AUDCLNT_E_OFFLOAD_MODE_ONLY: win32more.Foundation.HRESULT = -2004287452
AUDCLNT_E_NONOFFLOAD_MODE_ONLY: win32more.Foundation.HRESULT = -2004287451
AUDCLNT_E_RESOURCES_INVALIDATED: win32more.Foundation.HRESULT = -2004287450
AUDCLNT_E_RAW_MODE_UNSUPPORTED: win32more.Foundation.HRESULT = -2004287449
AUDCLNT_E_ENGINE_PERIODICITY_LOCKED: win32more.Foundation.HRESULT = -2004287448
AUDCLNT_E_ENGINE_FORMAT_LOCKED: win32more.Foundation.HRESULT = -2004287447
AUDCLNT_E_HEADTRACKING_ENABLED: win32more.Foundation.HRESULT = -2004287440
AUDCLNT_E_HEADTRACKING_UNSUPPORTED: win32more.Foundation.HRESULT = -2004287424
AUDCLNT_E_EFFECT_NOT_AVAILABLE: win32more.Foundation.HRESULT = -2004287423
AUDCLNT_E_EFFECT_STATE_READ_ONLY: win32more.Foundation.HRESULT = -2004287422
AUDCLNT_S_BUFFER_EMPTY: win32more.Foundation.HRESULT = 143196161
AUDCLNT_S_THREAD_ALREADY_REGISTERED: win32more.Foundation.HRESULT = 143196162
AUDCLNT_S_POSITION_STALLED: win32more.Foundation.HRESULT = 143196163
AUDCLNT_STREAMFLAGS_CROSSPROCESS: UInt32 = 65536
AUDCLNT_STREAMFLAGS_LOOPBACK: UInt32 = 131072
AUDCLNT_STREAMFLAGS_EVENTCALLBACK: UInt32 = 262144
AUDCLNT_STREAMFLAGS_NOPERSIST: UInt32 = 524288
AUDCLNT_STREAMFLAGS_RATEADJUST: UInt32 = 1048576
AUDCLNT_STREAMFLAGS_SRC_DEFAULT_QUALITY: UInt32 = 134217728
AUDCLNT_STREAMFLAGS_AUTOCONVERTPCM: UInt32 = 2147483648
AUDCLNT_SESSIONFLAGS_EXPIREWHENUNOWNED: UInt32 = 268435456
AUDCLNT_SESSIONFLAGS_DISPLAY_HIDE: UInt32 = 536870912
AUDCLNT_SESSIONFLAGS_DISPLAY_HIDEWHENEXPIRED: UInt32 = 1073741824
SPTLAUDCLNT_E_DESTROYED: win32more.Foundation.HRESULT = -2004287232
SPTLAUDCLNT_E_OUT_OF_ORDER: win32more.Foundation.HRESULT = -2004287231
SPTLAUDCLNT_E_RESOURCES_INVALIDATED: win32more.Foundation.HRESULT = -2004287230
SPTLAUDCLNT_E_NO_MORE_OBJECTS: win32more.Foundation.HRESULT = -2004287229
SPTLAUDCLNT_E_PROPERTY_NOT_SUPPORTED: win32more.Foundation.HRESULT = -2004287228
SPTLAUDCLNT_E_ERRORS_IN_OBJECT_CALLS: win32more.Foundation.HRESULT = -2004287227
SPTLAUDCLNT_E_METADATA_FORMAT_NOT_SUPPORTED: win32more.Foundation.HRESULT = -2004287226
SPTLAUDCLNT_E_STREAM_NOT_AVAILABLE: win32more.Foundation.HRESULT = -2004287225
SPTLAUDCLNT_E_INVALID_LICENSE: win32more.Foundation.HRESULT = -2004287224
SPTLAUDCLNT_E_STREAM_NOT_STOPPED: win32more.Foundation.HRESULT = -2004287222
SPTLAUDCLNT_E_STATIC_OBJECT_NOT_AVAILABLE: win32more.Foundation.HRESULT = -2004287221
SPTLAUDCLNT_E_OBJECT_ALREADY_ACTIVE: win32more.Foundation.HRESULT = -2004287220
SPTLAUDCLNT_E_INTERNAL: win32more.Foundation.HRESULT = -2004287219
DEVICE_STATE_ACTIVE: UInt32 = 1
DEVICE_STATE_DISABLED: UInt32 = 2
DEVICE_STATE_NOTPRESENT: UInt32 = 4
DEVICE_STATE_UNPLUGGED: UInt32 = 8
DEVICE_STATEMASK_ALL: UInt32 = 15
def PKEY_AudioEndpoint_FormFactor():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=0)
def PKEY_AudioEndpoint_ControlPanelPageProvider():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=1)
def PKEY_AudioEndpoint_Association():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=2)
def PKEY_AudioEndpoint_PhysicalSpeakers():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=3)
def PKEY_AudioEndpoint_GUID():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=4)
def PKEY_AudioEndpoint_Disable_SysFx():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=5)
ENDPOINT_SYSFX_ENABLED: UInt32 = 0
ENDPOINT_SYSFX_DISABLED: UInt32 = 1
def PKEY_AudioEndpoint_FullRangeSpeakers():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=6)
def PKEY_AudioEndpoint_Supports_EventDriven_Mode():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=7)
def PKEY_AudioEndpoint_JackSubType():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=8)
def PKEY_AudioEndpoint_Default_VolumeInDb():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('1da5d803-d492-4edd-8c-23-e0-c0-ff-ee-7f-0e'), pid=9)
def PKEY_AudioEngine_DeviceFormat():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('f19f064d-082c-4e27-bc-73-68-82-a1-bb-8e-4c'), pid=0)
def PKEY_AudioEngine_OEMFormat():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('e4870e26-3cc5-4cd2-ba-46-ca-0a-9a-70-ed-04'), pid=3)
def PKEY_AudioEndpointLogo_IconEffects():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('f1ab780d-2010-4ed3-a3-a6-8b-87-f0-f0-c4-76'), pid=0)
def PKEY_AudioEndpointLogo_IconPath():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('f1ab780d-2010-4ed3-a3-a6-8b-87-f0-f0-c4-76'), pid=1)
def PKEY_AudioEndpointSettings_MenuText():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('14242002-0320-4de4-95-55-a7-d8-2b-73-c2-86'), pid=0)
def PKEY_AudioEndpointSettings_LaunchContract():
    return win32more.UI.Shell.PropertiesSystem.PROPERTYKEY(fmtid=Guid('14242002-0320-4de4-95-55-a7-d8-2b-73-c2-86'), pid=1)
DEVINTERFACE_AUDIO_RENDER: Guid = Guid('e6327cad-dcec-4949-ae-8a-99-1e-97-6a-79-d2')
DEVINTERFACE_AUDIO_CAPTURE: Guid = Guid('2eef81be-33fa-4800-96-70-1c-d4-74-97-2c-3f')
DEVINTERFACE_MIDI_OUTPUT: Guid = Guid('6dc23320-ab33-4ce4-80-d4-bb-b3-eb-bf-28-14')
DEVINTERFACE_MIDI_INPUT: Guid = Guid('504be32c-ccf6-4d2c-b7-3f-6f-8b-37-47-e2-2b')
EVENTCONTEXT_VOLUMESLIDER: Guid = Guid('e2c2e9de-09b1-4b04-84-e5-07-93-12-25-ee-04')
SPATIAL_AUDIO_STANDARD_COMMANDS_START: UInt32 = 200
SPATIAL_AUDIO_POSITION: UInt32 = 200
SPTLAUD_MD_CLNT_E_COMMAND_NOT_FOUND: win32more.Foundation.HRESULT = -2004286976
SPTLAUD_MD_CLNT_E_OBJECT_NOT_INITIALIZED: win32more.Foundation.HRESULT = -2004286975
SPTLAUD_MD_CLNT_E_INVALID_ARGS: win32more.Foundation.HRESULT = -2004286974
SPTLAUD_MD_CLNT_E_METADATA_FORMAT_NOT_FOUND: win32more.Foundation.HRESULT = -2004286973
SPTLAUD_MD_CLNT_E_VALUE_BUFFER_INCORRECT_SIZE: win32more.Foundation.HRESULT = -2004286972
SPTLAUD_MD_CLNT_E_MEMORY_BOUNDS: win32more.Foundation.HRESULT = -2004286971
SPTLAUD_MD_CLNT_E_NO_MORE_COMMANDS: win32more.Foundation.HRESULT = -2004286970
SPTLAUD_MD_CLNT_E_BUFFER_ALREADY_ATTACHED: win32more.Foundation.HRESULT = -2004286969
SPTLAUD_MD_CLNT_E_BUFFER_NOT_ATTACHED: win32more.Foundation.HRESULT = -2004286968
SPTLAUD_MD_CLNT_E_FRAMECOUNT_OUT_OF_RANGE: win32more.Foundation.HRESULT = -2004286967
SPTLAUD_MD_CLNT_E_NO_ITEMS_FOUND: win32more.Foundation.HRESULT = -2004286960
SPTLAUD_MD_CLNT_E_ITEM_COPY_OVERFLOW: win32more.Foundation.HRESULT = -2004286959
SPTLAUD_MD_CLNT_E_NO_ITEMS_OPEN: win32more.Foundation.HRESULT = -2004286958
SPTLAUD_MD_CLNT_E_ITEMS_ALREADY_OPEN: win32more.Foundation.HRESULT = -2004286957
SPTLAUD_MD_CLNT_E_ATTACH_FAILED_INTERNAL_BUFFER: win32more.Foundation.HRESULT = -2004286956
SPTLAUD_MD_CLNT_E_DETACH_FAILED_INTERNAL_BUFFER: win32more.Foundation.HRESULT = -2004286955
SPTLAUD_MD_CLNT_E_NO_BUFFER_ATTACHED: win32more.Foundation.HRESULT = -2004286954
SPTLAUD_MD_CLNT_E_NO_MORE_ITEMS: win32more.Foundation.HRESULT = -2004286953
SPTLAUD_MD_CLNT_E_FRAMEOFFSET_OUT_OF_RANGE: win32more.Foundation.HRESULT = -2004286952
SPTLAUD_MD_CLNT_E_ITEM_MUST_HAVE_COMMANDS: win32more.Foundation.HRESULT = -2004286951
SPTLAUD_MD_CLNT_E_NO_ITEMOFFSET_WRITTEN: win32more.Foundation.HRESULT = -2004286944
SPTLAUD_MD_CLNT_E_NO_ITEMS_WRITTEN: win32more.Foundation.HRESULT = -2004286943
SPTLAUD_MD_CLNT_E_COMMAND_ALREADY_WRITTEN: win32more.Foundation.HRESULT = -2004286942
SPTLAUD_MD_CLNT_E_FORMAT_MISMATCH: win32more.Foundation.HRESULT = -2004286941
SPTLAUD_MD_CLNT_E_BUFFER_STILL_ATTACHED: win32more.Foundation.HRESULT = -2004286940
SPTLAUD_MD_CLNT_E_ITEMS_LOCKED_FOR_WRITING: win32more.Foundation.HRESULT = -2004286939
VIRTUAL_AUDIO_DEVICE_PROCESS_LOOPBACK: String = 'VAD\\Process_Loopback'
WAVERR_BADFORMAT: UInt32 = 32
WAVERR_STILLPLAYING: UInt32 = 33
WAVERR_UNPREPARED: UInt32 = 34
WAVERR_SYNC: UInt32 = 35
WAVERR_LASTERROR: UInt32 = 35
WHDR_DONE: UInt32 = 1
WHDR_PREPARED: UInt32 = 2
WHDR_BEGINLOOP: UInt32 = 4
WHDR_ENDLOOP: UInt32 = 8
WHDR_INQUEUE: UInt32 = 16
WAVECAPS_PITCH: UInt32 = 1
WAVECAPS_PLAYBACKRATE: UInt32 = 2
WAVECAPS_VOLUME: UInt32 = 4
WAVECAPS_LRVOLUME: UInt32 = 8
WAVECAPS_SYNC: UInt32 = 16
WAVECAPS_SAMPLEACCURATE: UInt32 = 32
WAVE_INVALIDFORMAT: UInt32 = 0
WAVE_FORMAT_1M08: UInt32 = 1
WAVE_FORMAT_1S08: UInt32 = 2
WAVE_FORMAT_1M16: UInt32 = 4
WAVE_FORMAT_1S16: UInt32 = 8
WAVE_FORMAT_2M08: UInt32 = 16
WAVE_FORMAT_2S08: UInt32 = 32
WAVE_FORMAT_2M16: UInt32 = 64
WAVE_FORMAT_2S16: UInt32 = 128
WAVE_FORMAT_4M08: UInt32 = 256
WAVE_FORMAT_4S08: UInt32 = 512
WAVE_FORMAT_4M16: UInt32 = 1024
WAVE_FORMAT_4S16: UInt32 = 2048
WAVE_FORMAT_44M08: UInt32 = 256
WAVE_FORMAT_44S08: UInt32 = 512
WAVE_FORMAT_44M16: UInt32 = 1024
WAVE_FORMAT_44S16: UInt32 = 2048
WAVE_FORMAT_48M08: UInt32 = 4096
WAVE_FORMAT_48S08: UInt32 = 8192
WAVE_FORMAT_48M16: UInt32 = 16384
WAVE_FORMAT_48S16: UInt32 = 32768
WAVE_FORMAT_96M08: UInt32 = 65536
WAVE_FORMAT_96S08: UInt32 = 131072
WAVE_FORMAT_96M16: UInt32 = 262144
WAVE_FORMAT_96S16: UInt32 = 524288
WAVE_FORMAT_PCM: UInt32 = 1
MIDIERR_UNPREPARED: UInt32 = 64
MIDIERR_STILLPLAYING: UInt32 = 65
MIDIERR_NOMAP: UInt32 = 66
MIDIERR_NOTREADY: UInt32 = 67
MIDIERR_NODEVICE: UInt32 = 68
MIDIERR_INVALIDSETUP: UInt32 = 69
MIDIERR_BADOPENMODE: UInt32 = 70
MIDIERR_DONT_CONTINUE: UInt32 = 71
MIDIERR_LASTERROR: UInt32 = 71
MIDIPATCHSIZE: UInt32 = 128
MIDI_CACHE_ALL: UInt32 = 1
MIDI_CACHE_BESTFIT: UInt32 = 2
MIDI_CACHE_QUERY: UInt32 = 3
MIDI_UNCACHE: UInt32 = 4
MOD_MIDIPORT: UInt32 = 1
MOD_SYNTH: UInt32 = 2
MOD_SQSYNTH: UInt32 = 3
MOD_FMSYNTH: UInt32 = 4
MOD_MAPPER: UInt32 = 5
MOD_WAVETABLE: UInt32 = 6
MOD_SWSYNTH: UInt32 = 7
MIDICAPS_VOLUME: UInt32 = 1
MIDICAPS_LRVOLUME: UInt32 = 2
MIDICAPS_CACHE: UInt32 = 4
MIDICAPS_STREAM: UInt32 = 8
MHDR_DONE: UInt32 = 1
MHDR_PREPARED: UInt32 = 2
MHDR_INQUEUE: UInt32 = 4
MHDR_ISSTRM: UInt32 = 8
MEVT_F_SHORT: Int32 = 0
MEVT_F_LONG: Int32 = -2147483648
MEVT_F_CALLBACK: Int32 = 1073741824
MIDISTRM_ERROR: Int32 = -2
MIDIPROP_SET: Int32 = -2147483648
MIDIPROP_GET: Int32 = 1073741824
MIDIPROP_TIMEDIV: Int32 = 1
MIDIPROP_TEMPO: Int32 = 2
AUXCAPS_CDAUDIO: UInt32 = 1
AUXCAPS_AUXIN: UInt32 = 2
AUXCAPS_VOLUME: UInt32 = 1
AUXCAPS_LRVOLUME: UInt32 = 2
MIXER_SHORT_NAME_CHARS: UInt32 = 16
MIXER_LONG_NAME_CHARS: UInt32 = 64
MIXERR_INVALLINE: UInt32 = 1024
MIXERR_INVALCONTROL: UInt32 = 1025
MIXERR_INVALVALUE: UInt32 = 1026
MIXERR_LASTERROR: UInt32 = 1026
MIXER_OBJECTF_HANDLE: Int32 = -2147483648
MIXER_OBJECTF_MIXER: Int32 = 0
MIXER_OBJECTF_WAVEOUT: Int32 = 268435456
MIXER_OBJECTF_WAVEIN: Int32 = 536870912
MIXER_OBJECTF_MIDIOUT: Int32 = 805306368
MIXER_OBJECTF_MIDIIN: Int32 = 1073741824
MIXER_OBJECTF_AUX: Int32 = 1342177280
MIXERLINE_LINEF_ACTIVE: Int32 = 1
MIXERLINE_LINEF_DISCONNECTED: Int32 = 32768
MIXERLINE_LINEF_SOURCE: Int32 = -2147483648
MIXERLINE_COMPONENTTYPE_DST_FIRST: Int32 = 0
MIXERLINE_COMPONENTTYPE_DST_LAST: UInt32 = 8
MIXERLINE_COMPONENTTYPE_SRC_FIRST: Int32 = 4096
MIXERLINE_COMPONENTTYPE_SRC_LAST: UInt32 = 4106
MIXERLINE_TARGETTYPE_UNDEFINED: UInt32 = 0
MIXERLINE_TARGETTYPE_WAVEOUT: UInt32 = 1
MIXERLINE_TARGETTYPE_WAVEIN: UInt32 = 2
MIXERLINE_TARGETTYPE_MIDIOUT: UInt32 = 3
MIXERLINE_TARGETTYPE_MIDIIN: UInt32 = 4
MIXERLINE_TARGETTYPE_AUX: UInt32 = 5
MIXER_GETLINEINFOF_DESTINATION: Int32 = 0
MIXER_GETLINEINFOF_SOURCE: Int32 = 1
MIXER_GETLINEINFOF_LINEID: Int32 = 2
MIXER_GETLINEINFOF_COMPONENTTYPE: Int32 = 3
MIXER_GETLINEINFOF_TARGETTYPE: Int32 = 4
MIXER_GETLINEINFOF_QUERYMASK: Int32 = 15
MIXERCONTROL_CONTROLF_UNIFORM: Int32 = 1
MIXERCONTROL_CONTROLF_MULTIPLE: Int32 = 2
MIXERCONTROL_CONTROLF_DISABLED: Int32 = -2147483648
MIXERCONTROL_CT_CLASS_MASK: Int32 = -268435456
MIXERCONTROL_CT_CLASS_CUSTOM: Int32 = 0
MIXERCONTROL_CT_CLASS_METER: Int32 = 268435456
MIXERCONTROL_CT_CLASS_SWITCH: Int32 = 536870912
MIXERCONTROL_CT_CLASS_NUMBER: Int32 = 805306368
MIXERCONTROL_CT_CLASS_SLIDER: Int32 = 1073741824
MIXERCONTROL_CT_CLASS_FADER: Int32 = 1342177280
MIXERCONTROL_CT_CLASS_TIME: Int32 = 1610612736
MIXERCONTROL_CT_CLASS_LIST: Int32 = 1879048192
MIXERCONTROL_CT_SUBCLASS_MASK: Int32 = 251658240
MIXERCONTROL_CT_SC_SWITCH_BOOLEAN: Int32 = 0
MIXERCONTROL_CT_SC_SWITCH_BUTTON: Int32 = 16777216
MIXERCONTROL_CT_SC_METER_POLLED: Int32 = 0
MIXERCONTROL_CT_SC_TIME_MICROSECS: Int32 = 0
MIXERCONTROL_CT_SC_TIME_MILLISECS: Int32 = 16777216
MIXERCONTROL_CT_SC_LIST_SINGLE: Int32 = 0
MIXERCONTROL_CT_SC_LIST_MULTIPLE: Int32 = 16777216
MIXERCONTROL_CT_UNITS_MASK: Int32 = 16711680
MIXERCONTROL_CT_UNITS_CUSTOM: Int32 = 0
MIXERCONTROL_CT_UNITS_BOOLEAN: Int32 = 65536
MIXERCONTROL_CT_UNITS_SIGNED: Int32 = 131072
MIXERCONTROL_CT_UNITS_UNSIGNED: Int32 = 196608
MIXERCONTROL_CT_UNITS_DECIBELS: Int32 = 262144
MIXERCONTROL_CT_UNITS_PERCENT: Int32 = 327680
MIXER_GETLINECONTROLSF_ALL: Int32 = 0
MIXER_GETLINECONTROLSF_ONEBYID: Int32 = 1
MIXER_GETLINECONTROLSF_ONEBYTYPE: Int32 = 2
MIXER_GETLINECONTROLSF_QUERYMASK: Int32 = 15
MIXER_GETCONTROLDETAILSF_VALUE: Int32 = 0
MIXER_GETCONTROLDETAILSF_LISTTEXT: Int32 = 1
MIXER_GETCONTROLDETAILSF_QUERYMASK: Int32 = 15
MIXER_SETCONTROLDETAILSF_VALUE: Int32 = 0
MIXER_SETCONTROLDETAILSF_CUSTOM: Int32 = 1
MIXER_SETCONTROLDETAILSF_QUERYMASK: Int32 = 15
DRV_MAPPER_PREFERRED_INPUT_GET: UInt32 = 16384
DRV_MAPPER_PREFERRED_OUTPUT_GET: UInt32 = 16386
DRVM_MAPPER: UInt32 = 8192
DRVM_MAPPER_STATUS: UInt32 = 8192
WIDM_MAPPER_STATUS: UInt32 = 8192
WAVEIN_MAPPER_STATUS_DEVICE: UInt32 = 0
WAVEIN_MAPPER_STATUS_MAPPED: UInt32 = 1
WAVEIN_MAPPER_STATUS_FORMAT: UInt32 = 2
WODM_MAPPER_STATUS: UInt32 = 8192
WAVEOUT_MAPPER_STATUS_DEVICE: UInt32 = 0
WAVEOUT_MAPPER_STATUS_MAPPED: UInt32 = 1
WAVEOUT_MAPPER_STATUS_FORMAT: UInt32 = 2
ACMERR_BASE: UInt32 = 512
ACMERR_NOTPOSSIBLE: UInt32 = 512
ACMERR_BUSY: UInt32 = 513
ACMERR_UNPREPARED: UInt32 = 514
ACMERR_CANCELED: UInt32 = 515
ACM_METRIC_COUNT_DRIVERS: UInt32 = 1
ACM_METRIC_COUNT_CODECS: UInt32 = 2
ACM_METRIC_COUNT_CONVERTERS: UInt32 = 3
ACM_METRIC_COUNT_FILTERS: UInt32 = 4
ACM_METRIC_COUNT_DISABLED: UInt32 = 5
ACM_METRIC_COUNT_HARDWARE: UInt32 = 6
ACM_METRIC_COUNT_LOCAL_DRIVERS: UInt32 = 20
ACM_METRIC_COUNT_LOCAL_CODECS: UInt32 = 21
ACM_METRIC_COUNT_LOCAL_CONVERTERS: UInt32 = 22
ACM_METRIC_COUNT_LOCAL_FILTERS: UInt32 = 23
ACM_METRIC_COUNT_LOCAL_DISABLED: UInt32 = 24
ACM_METRIC_HARDWARE_WAVE_INPUT: UInt32 = 30
ACM_METRIC_HARDWARE_WAVE_OUTPUT: UInt32 = 31
ACM_METRIC_MAX_SIZE_FORMAT: UInt32 = 50
ACM_METRIC_MAX_SIZE_FILTER: UInt32 = 51
ACM_METRIC_DRIVER_SUPPORT: UInt32 = 100
ACM_METRIC_DRIVER_PRIORITY: UInt32 = 101
ACM_DRIVERENUMF_NOLOCAL: Int32 = 1073741824
ACM_DRIVERENUMF_DISABLED: Int32 = -2147483648
ACM_DRIVERADDF_NAME: Int32 = 1
ACM_DRIVERADDF_FUNCTION: Int32 = 3
ACM_DRIVERADDF_NOTIFYHWND: Int32 = 4
ACM_DRIVERADDF_TYPEMASK: Int32 = 7
ACM_DRIVERADDF_LOCAL: Int32 = 0
ACM_DRIVERADDF_GLOBAL: Int32 = 8
ACMDM_USER: UInt32 = 16384
ACMDM_RESERVED_LOW: UInt32 = 24576
ACMDM_RESERVED_HIGH: UInt32 = 28671
ACMDM_DRIVER_ABOUT: UInt32 = 24587
ACM_DRIVERPRIORITYF_ENABLE: Int32 = 1
ACM_DRIVERPRIORITYF_DISABLE: Int32 = 2
ACM_DRIVERPRIORITYF_ABLEMASK: Int32 = 3
ACM_DRIVERPRIORITYF_BEGIN: Int32 = 65536
ACM_DRIVERPRIORITYF_END: Int32 = 131072
ACM_DRIVERPRIORITYF_DEFERMASK: Int32 = 196608
ACMDRIVERDETAILS_SHORTNAME_CHARS: UInt32 = 32
ACMDRIVERDETAILS_LONGNAME_CHARS: UInt32 = 128
ACMDRIVERDETAILS_COPYRIGHT_CHARS: UInt32 = 80
ACMDRIVERDETAILS_LICENSING_CHARS: UInt32 = 128
ACMDRIVERDETAILS_FEATURES_CHARS: UInt32 = 512
ACMDRIVERDETAILS_SUPPORTF_CODEC: Int32 = 1
ACMDRIVERDETAILS_SUPPORTF_CONVERTER: Int32 = 2
ACMDRIVERDETAILS_SUPPORTF_FILTER: Int32 = 4
ACMDRIVERDETAILS_SUPPORTF_HARDWARE: Int32 = 8
ACMDRIVERDETAILS_SUPPORTF_ASYNC: Int32 = 16
ACMDRIVERDETAILS_SUPPORTF_LOCAL: Int32 = 1073741824
ACMDRIVERDETAILS_SUPPORTF_DISABLED: Int32 = -2147483648
ACMFORMATTAGDETAILS_FORMATTAG_CHARS: UInt32 = 48
ACM_FORMATTAGDETAILSF_INDEX: Int32 = 0
ACM_FORMATTAGDETAILSF_FORMATTAG: Int32 = 1
ACM_FORMATTAGDETAILSF_LARGESTSIZE: Int32 = 2
ACM_FORMATTAGDETAILSF_QUERYMASK: Int32 = 15
ACMFORMATDETAILS_FORMAT_CHARS: UInt32 = 128
ACM_FORMATDETAILSF_INDEX: Int32 = 0
ACM_FORMATDETAILSF_FORMAT: Int32 = 1
ACM_FORMATDETAILSF_QUERYMASK: Int32 = 15
ACM_FORMATENUMF_WFORMATTAG: Int32 = 65536
ACM_FORMATENUMF_NCHANNELS: Int32 = 131072
ACM_FORMATENUMF_NSAMPLESPERSEC: Int32 = 262144
ACM_FORMATENUMF_WBITSPERSAMPLE: Int32 = 524288
ACM_FORMATENUMF_CONVERT: Int32 = 1048576
ACM_FORMATENUMF_SUGGEST: Int32 = 2097152
ACM_FORMATENUMF_HARDWARE: Int32 = 4194304
ACM_FORMATENUMF_INPUT: Int32 = 8388608
ACM_FORMATENUMF_OUTPUT: Int32 = 16777216
ACM_FORMATSUGGESTF_WFORMATTAG: Int32 = 65536
ACM_FORMATSUGGESTF_NCHANNELS: Int32 = 131072
ACM_FORMATSUGGESTF_NSAMPLESPERSEC: Int32 = 262144
ACM_FORMATSUGGESTF_WBITSPERSAMPLE: Int32 = 524288
ACM_FORMATSUGGESTF_TYPEMASK: Int32 = 16711680
ACMHELPMSGSTRINGA: String = 'acmchoose_help'
ACMHELPMSGSTRINGW: String = 'acmchoose_help'
ACMHELPMSGCONTEXTMENUA: String = 'acmchoose_contextmenu'
ACMHELPMSGCONTEXTMENUW: String = 'acmchoose_contextmenu'
ACMHELPMSGCONTEXTHELPA: String = 'acmchoose_contexthelp'
ACMHELPMSGCONTEXTHELPW: String = 'acmchoose_contexthelp'
ACMHELPMSGSTRING: String = 'acmchoose_help'
ACMHELPMSGCONTEXTMENU: String = 'acmchoose_contextmenu'
ACMHELPMSGCONTEXTHELP: String = 'acmchoose_contexthelp'
MM_ACM_FORMATCHOOSE: UInt32 = 32768
FORMATCHOOSE_MESSAGE: UInt32 = 0
FORMATCHOOSE_FORMATTAG_VERIFY: UInt32 = 0
FORMATCHOOSE_FORMAT_VERIFY: UInt32 = 1
FORMATCHOOSE_CUSTOM_VERIFY: UInt32 = 2
ACMFORMATCHOOSE_STYLEF_SHOWHELP: Int32 = 4
ACMFORMATCHOOSE_STYLEF_ENABLEHOOK: Int32 = 8
ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATE: Int32 = 16
ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATEHANDLE: Int32 = 32
ACMFORMATCHOOSE_STYLEF_INITTOWFXSTRUCT: Int32 = 64
ACMFORMATCHOOSE_STYLEF_CONTEXTHELP: Int32 = 128
ACMFILTERTAGDETAILS_FILTERTAG_CHARS: UInt32 = 48
ACM_FILTERTAGDETAILSF_INDEX: Int32 = 0
ACM_FILTERTAGDETAILSF_FILTERTAG: Int32 = 1
ACM_FILTERTAGDETAILSF_LARGESTSIZE: Int32 = 2
ACM_FILTERTAGDETAILSF_QUERYMASK: Int32 = 15
ACMFILTERDETAILS_FILTER_CHARS: UInt32 = 128
ACM_FILTERDETAILSF_INDEX: Int32 = 0
ACM_FILTERDETAILSF_FILTER: Int32 = 1
ACM_FILTERDETAILSF_QUERYMASK: Int32 = 15
ACM_FILTERENUMF_DWFILTERTAG: Int32 = 65536
MM_ACM_FILTERCHOOSE: UInt32 = 32768
FILTERCHOOSE_MESSAGE: UInt32 = 0
FILTERCHOOSE_FILTERTAG_VERIFY: UInt32 = 0
FILTERCHOOSE_FILTER_VERIFY: UInt32 = 1
FILTERCHOOSE_CUSTOM_VERIFY: UInt32 = 2
ACMFILTERCHOOSE_STYLEF_SHOWHELP: Int32 = 4
ACMFILTERCHOOSE_STYLEF_ENABLEHOOK: Int32 = 8
ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATE: Int32 = 16
ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATEHANDLE: Int32 = 32
ACMFILTERCHOOSE_STYLEF_INITTOFILTERSTRUCT: Int32 = 64
ACMFILTERCHOOSE_STYLEF_CONTEXTHELP: Int32 = 128
ACMSTREAMHEADER_STATUSF_DONE: Int32 = 65536
ACMSTREAMHEADER_STATUSF_PREPARED: Int32 = 131072
ACMSTREAMHEADER_STATUSF_INQUEUE: Int32 = 1048576
ACM_STREAMOPENF_QUERY: UInt32 = 1
ACM_STREAMOPENF_ASYNC: UInt32 = 2
ACM_STREAMOPENF_NONREALTIME: UInt32 = 4
ACM_STREAMSIZEF_SOURCE: Int32 = 0
ACM_STREAMSIZEF_DESTINATION: Int32 = 1
ACM_STREAMSIZEF_QUERYMASK: Int32 = 15
ACM_STREAMCONVERTF_BLOCKALIGN: UInt32 = 4
ACM_STREAMCONVERTF_START: UInt32 = 16
ACM_STREAMCONVERTF_END: UInt32 = 32
SND_RING: Int32 = 1048576
SND_ALIAS_START: UInt32 = 0
ACMDM_DRIVER_NOTIFY: UInt32 = 24577
ACMDM_DRIVER_DETAILS: UInt32 = 24586
ACMDM_HARDWARE_WAVE_CAPS_INPUT: UInt32 = 24596
ACMDM_HARDWARE_WAVE_CAPS_OUTPUT: UInt32 = 24597
ACMDM_FORMATTAG_DETAILS: UInt32 = 24601
ACMDM_FORMAT_DETAILS: UInt32 = 24602
ACMDM_FORMAT_SUGGEST: UInt32 = 24603
ACMDM_FILTERTAG_DETAILS: UInt32 = 24626
ACMDM_FILTER_DETAILS: UInt32 = 24627
ACMDM_STREAM_OPEN: UInt32 = 24652
ACMDM_STREAM_CLOSE: UInt32 = 24653
ACMDM_STREAM_SIZE: UInt32 = 24654
ACMDM_STREAM_CONVERT: UInt32 = 24655
ACMDM_STREAM_RESET: UInt32 = 24656
ACMDM_STREAM_PREPARE: UInt32 = 24657
ACMDM_STREAM_UNPREPARE: UInt32 = 24658
ACMDM_STREAM_UPDATE: UInt32 = 24659
@winfunctype('OLE32.dll')
def CoRegisterMessageFilter(lpMessageFilter: win32more.Media.Audio.IMessageFilter_head, lplpMessageFilter: POINTER(win32more.Media.Audio.IMessageFilter_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('WINMM.dll')
def sndPlaySoundA(pszSound: win32more.Foundation.PSTR, fuSound: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('WINMM.dll')
def sndPlaySoundW(pszSound: win32more.Foundation.PWSTR, fuSound: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('WINMM.dll')
def PlaySoundA(pszSound: win32more.Foundation.PSTR, hmod: win32more.Foundation.HINSTANCE, fdwSound: win32more.Media.Audio.SND_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('WINMM.dll')
def PlaySoundW(pszSound: win32more.Foundation.PWSTR, hmod: win32more.Foundation.HINSTANCE, fdwSound: win32more.Media.Audio.SND_FLAGS) -> win32more.Foundation.BOOL: ...
@winfunctype('WINMM.dll')
def waveOutGetNumDevs() -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetDevCapsA(uDeviceID: UIntPtr, pwoc: POINTER(win32more.Media.Audio.WAVEOUTCAPSA_head), cbwoc: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetDevCapsW(uDeviceID: UIntPtr, pwoc: POINTER(win32more.Media.Audio.WAVEOUTCAPSW_head), cbwoc: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetVolume(hwo: win32more.Media.Audio.HWAVEOUT, pdwVolume: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutSetVolume(hwo: win32more.Media.Audio.HWAVEOUT, dwVolume: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetErrorTextA(mmrError: UInt32, pszText: win32more.Foundation.PSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetErrorTextW(mmrError: UInt32, pszText: win32more.Foundation.PWSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutOpen(phwo: POINTER(win32more.Media.Audio.HWAVEOUT), uDeviceID: UInt32, pwfx: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), dwCallback: UIntPtr, dwInstance: UIntPtr, fdwOpen: win32more.Media.Audio.MIDI_WAVE_OPEN_TYPE) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutClose(hwo: win32more.Media.Audio.HWAVEOUT) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutPrepareHeader(hwo: win32more.Media.Audio.HWAVEOUT, pwh: POINTER(win32more.Media.Audio.WAVEHDR_head), cbwh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutUnprepareHeader(hwo: win32more.Media.Audio.HWAVEOUT, pwh: POINTER(win32more.Media.Audio.WAVEHDR_head), cbwh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutWrite(hwo: win32more.Media.Audio.HWAVEOUT, pwh: POINTER(win32more.Media.Audio.WAVEHDR_head), cbwh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutPause(hwo: win32more.Media.Audio.HWAVEOUT) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutRestart(hwo: win32more.Media.Audio.HWAVEOUT) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutReset(hwo: win32more.Media.Audio.HWAVEOUT) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutBreakLoop(hwo: win32more.Media.Audio.HWAVEOUT) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetPosition(hwo: win32more.Media.Audio.HWAVEOUT, pmmt: POINTER(win32more.Media.MMTIME_head), cbmmt: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetPitch(hwo: win32more.Media.Audio.HWAVEOUT, pdwPitch: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutSetPitch(hwo: win32more.Media.Audio.HWAVEOUT, dwPitch: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetPlaybackRate(hwo: win32more.Media.Audio.HWAVEOUT, pdwRate: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutSetPlaybackRate(hwo: win32more.Media.Audio.HWAVEOUT, dwRate: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutGetID(hwo: win32more.Media.Audio.HWAVEOUT, puDeviceID: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveOutMessage(hwo: win32more.Media.Audio.HWAVEOUT, uMsg: UInt32, dw1: UIntPtr, dw2: UIntPtr) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInGetNumDevs() -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInGetDevCapsA(uDeviceID: UIntPtr, pwic: POINTER(win32more.Media.Audio.WAVEINCAPSA_head), cbwic: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInGetDevCapsW(uDeviceID: UIntPtr, pwic: POINTER(win32more.Media.Audio.WAVEINCAPSW_head), cbwic: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInGetErrorTextA(mmrError: UInt32, pszText: win32more.Foundation.PSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInGetErrorTextW(mmrError: UInt32, pszText: win32more.Foundation.PWSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInOpen(phwi: POINTER(win32more.Media.Audio.HWAVEIN), uDeviceID: UInt32, pwfx: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), dwCallback: UIntPtr, dwInstance: UIntPtr, fdwOpen: win32more.Media.Audio.MIDI_WAVE_OPEN_TYPE) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInClose(hwi: win32more.Media.Audio.HWAVEIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInPrepareHeader(hwi: win32more.Media.Audio.HWAVEIN, pwh: POINTER(win32more.Media.Audio.WAVEHDR_head), cbwh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInUnprepareHeader(hwi: win32more.Media.Audio.HWAVEIN, pwh: POINTER(win32more.Media.Audio.WAVEHDR_head), cbwh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInAddBuffer(hwi: win32more.Media.Audio.HWAVEIN, pwh: POINTER(win32more.Media.Audio.WAVEHDR_head), cbwh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInStart(hwi: win32more.Media.Audio.HWAVEIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInStop(hwi: win32more.Media.Audio.HWAVEIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInReset(hwi: win32more.Media.Audio.HWAVEIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInGetPosition(hwi: win32more.Media.Audio.HWAVEIN, pmmt: POINTER(win32more.Media.MMTIME_head), cbmmt: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInGetID(hwi: win32more.Media.Audio.HWAVEIN, puDeviceID: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def waveInMessage(hwi: win32more.Media.Audio.HWAVEIN, uMsg: UInt32, dw1: UIntPtr, dw2: UIntPtr) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutGetNumDevs() -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamOpen(phms: POINTER(win32more.Media.Audio.HMIDISTRM), puDeviceID: POINTER(UInt32), cMidi: UInt32, dwCallback: UIntPtr, dwInstance: UIntPtr, fdwOpen: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamClose(hms: win32more.Media.Audio.HMIDISTRM) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamProperty(hms: win32more.Media.Audio.HMIDISTRM, lppropdata: c_char_p_no, dwProperty: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamPosition(hms: win32more.Media.Audio.HMIDISTRM, lpmmt: POINTER(win32more.Media.MMTIME_head), cbmmt: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamOut(hms: win32more.Media.Audio.HMIDISTRM, pmh: POINTER(win32more.Media.Audio.MIDIHDR_head), cbmh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamPause(hms: win32more.Media.Audio.HMIDISTRM) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamRestart(hms: win32more.Media.Audio.HMIDISTRM) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiStreamStop(hms: win32more.Media.Audio.HMIDISTRM) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiConnect(hmi: win32more.Media.Audio.HMIDI, hmo: win32more.Media.Audio.HMIDIOUT, pReserved: c_void_p) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiDisconnect(hmi: win32more.Media.Audio.HMIDI, hmo: win32more.Media.Audio.HMIDIOUT, pReserved: c_void_p) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutGetDevCapsA(uDeviceID: UIntPtr, pmoc: POINTER(win32more.Media.Audio.MIDIOUTCAPSA_head), cbmoc: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutGetDevCapsW(uDeviceID: UIntPtr, pmoc: POINTER(win32more.Media.Audio.MIDIOUTCAPSW_head), cbmoc: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutGetVolume(hmo: win32more.Media.Audio.HMIDIOUT, pdwVolume: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutSetVolume(hmo: win32more.Media.Audio.HMIDIOUT, dwVolume: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutGetErrorTextA(mmrError: UInt32, pszText: win32more.Foundation.PSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutGetErrorTextW(mmrError: UInt32, pszText: win32more.Foundation.PWSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutOpen(phmo: POINTER(win32more.Media.Audio.HMIDIOUT), uDeviceID: UInt32, dwCallback: UIntPtr, dwInstance: UIntPtr, fdwOpen: win32more.Media.Audio.MIDI_WAVE_OPEN_TYPE) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutClose(hmo: win32more.Media.Audio.HMIDIOUT) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutPrepareHeader(hmo: win32more.Media.Audio.HMIDIOUT, pmh: POINTER(win32more.Media.Audio.MIDIHDR_head), cbmh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutUnprepareHeader(hmo: win32more.Media.Audio.HMIDIOUT, pmh: POINTER(win32more.Media.Audio.MIDIHDR_head), cbmh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutShortMsg(hmo: win32more.Media.Audio.HMIDIOUT, dwMsg: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutLongMsg(hmo: win32more.Media.Audio.HMIDIOUT, pmh: POINTER(win32more.Media.Audio.MIDIHDR_head), cbmh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutReset(hmo: win32more.Media.Audio.HMIDIOUT) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutCachePatches(hmo: win32more.Media.Audio.HMIDIOUT, uBank: UInt32, pwpa: POINTER(UInt16), fuCache: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutCacheDrumPatches(hmo: win32more.Media.Audio.HMIDIOUT, uPatch: UInt32, pwkya: POINTER(UInt16), fuCache: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutGetID(hmo: win32more.Media.Audio.HMIDIOUT, puDeviceID: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiOutMessage(hmo: win32more.Media.Audio.HMIDIOUT, uMsg: UInt32, dw1: UIntPtr, dw2: UIntPtr) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInGetNumDevs() -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInGetDevCapsA(uDeviceID: UIntPtr, pmic: POINTER(win32more.Media.Audio.MIDIINCAPSA_head), cbmic: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInGetDevCapsW(uDeviceID: UIntPtr, pmic: POINTER(win32more.Media.Audio.MIDIINCAPSW_head), cbmic: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInGetErrorTextA(mmrError: UInt32, pszText: win32more.Foundation.PSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInGetErrorTextW(mmrError: UInt32, pszText: win32more.Foundation.PWSTR, cchText: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInOpen(phmi: POINTER(win32more.Media.Audio.HMIDIIN), uDeviceID: UInt32, dwCallback: UIntPtr, dwInstance: UIntPtr, fdwOpen: win32more.Media.Audio.MIDI_WAVE_OPEN_TYPE) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInClose(hmi: win32more.Media.Audio.HMIDIIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInPrepareHeader(hmi: win32more.Media.Audio.HMIDIIN, pmh: POINTER(win32more.Media.Audio.MIDIHDR_head), cbmh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInUnprepareHeader(hmi: win32more.Media.Audio.HMIDIIN, pmh: POINTER(win32more.Media.Audio.MIDIHDR_head), cbmh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInAddBuffer(hmi: win32more.Media.Audio.HMIDIIN, pmh: POINTER(win32more.Media.Audio.MIDIHDR_head), cbmh: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInStart(hmi: win32more.Media.Audio.HMIDIIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInStop(hmi: win32more.Media.Audio.HMIDIIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInReset(hmi: win32more.Media.Audio.HMIDIIN) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInGetID(hmi: win32more.Media.Audio.HMIDIIN, puDeviceID: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def midiInMessage(hmi: win32more.Media.Audio.HMIDIIN, uMsg: UInt32, dw1: UIntPtr, dw2: UIntPtr) -> UInt32: ...
@winfunctype('WINMM.dll')
def auxGetNumDevs() -> UInt32: ...
@winfunctype('WINMM.dll')
def auxGetDevCapsA(uDeviceID: UIntPtr, pac: POINTER(win32more.Media.Audio.AUXCAPSA_head), cbac: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def auxGetDevCapsW(uDeviceID: UIntPtr, pac: POINTER(win32more.Media.Audio.AUXCAPSW_head), cbac: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def auxSetVolume(uDeviceID: UInt32, dwVolume: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def auxGetVolume(uDeviceID: UInt32, pdwVolume: POINTER(UInt32)) -> UInt32: ...
@winfunctype('WINMM.dll')
def auxOutMessage(uDeviceID: UInt32, uMsg: UInt32, dw1: UIntPtr, dw2: UIntPtr) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetNumDevs() -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetDevCapsA(uMxId: UIntPtr, pmxcaps: POINTER(win32more.Media.Audio.MIXERCAPSA_head), cbmxcaps: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetDevCapsW(uMxId: UIntPtr, pmxcaps: POINTER(win32more.Media.Audio.MIXERCAPSW_head), cbmxcaps: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerOpen(phmx: POINTER(IntPtr), uMxId: UInt32, dwCallback: UIntPtr, dwInstance: UIntPtr, fdwOpen: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerClose(hmx: win32more.Media.Audio.HMIXER) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerMessage(hmx: win32more.Media.Audio.HMIXER, uMsg: UInt32, dwParam1: UIntPtr, dwParam2: UIntPtr) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetLineInfoA(hmxobj: win32more.Media.Audio.HMIXEROBJ, pmxl: POINTER(win32more.Media.Audio.MIXERLINEA_head), fdwInfo: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetLineInfoW(hmxobj: win32more.Media.Audio.HMIXEROBJ, pmxl: POINTER(win32more.Media.Audio.MIXERLINEW_head), fdwInfo: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetID(hmxobj: win32more.Media.Audio.HMIXEROBJ, puMxId: POINTER(UInt32), fdwId: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetLineControlsA(hmxobj: win32more.Media.Audio.HMIXEROBJ, pmxlc: POINTER(win32more.Media.Audio.MIXERLINECONTROLSA_head), fdwControls: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetLineControlsW(hmxobj: win32more.Media.Audio.HMIXEROBJ, pmxlc: POINTER(win32more.Media.Audio.MIXERLINECONTROLSW_head), fdwControls: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetControlDetailsA(hmxobj: win32more.Media.Audio.HMIXEROBJ, pmxcd: POINTER(win32more.Media.Audio.MIXERCONTROLDETAILS_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerGetControlDetailsW(hmxobj: win32more.Media.Audio.HMIXEROBJ, pmxcd: POINTER(win32more.Media.Audio.MIXERCONTROLDETAILS_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('WINMM.dll')
def mixerSetControlDetails(hmxobj: win32more.Media.Audio.HMIXEROBJ, pmxcd: POINTER(win32more.Media.Audio.MIXERCONTROLDETAILS_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MMDevAPI.dll')
def ActivateAudioInterfaceAsync(deviceInterfacePath: win32more.Foundation.PWSTR, riid: POINTER(Guid), activationParams: POINTER(win32more.System.Com.StructuredStorage.PROPVARIANT_head), completionHandler: win32more.Media.Audio.IActivateAudioInterfaceCompletionHandler_head, activationOperation: POINTER(win32more.Media.Audio.IActivateAudioInterfaceAsyncOperation_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateRenderAudioStateMonitor(audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateRenderAudioStateMonitorForCategory(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateRenderAudioStateMonitorForCategoryAndDeviceRole(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, role: win32more.Media.Audio.ERole, audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateRenderAudioStateMonitorForCategoryAndDeviceId(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, deviceId: win32more.Foundation.PWSTR, audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateCaptureAudioStateMonitor(audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateCaptureAudioStateMonitorForCategory(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateCaptureAudioStateMonitorForCategoryAndDeviceRole(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, role: win32more.Media.Audio.ERole, audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('Windows.Media.MediaControl.dll')
def CreateCaptureAudioStateMonitorForCategoryAndDeviceId(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, deviceId: win32more.Foundation.PWSTR, audioStateMonitor: POINTER(win32more.Media.Audio.IAudioStateMonitor_head)) -> win32more.Foundation.HRESULT: ...
@winfunctype('MSACM32.dll')
def acmGetVersion() -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmMetrics(hao: win32more.Media.Audio.HACMOBJ, uMetric: UInt32, pMetric: c_void_p) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverEnum(fnCallback: win32more.Media.Audio.ACMDRIVERENUMCB, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverID(hao: win32more.Media.Audio.HACMOBJ, phadid: POINTER(IntPtr), fdwDriverID: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverAddA(phadid: POINTER(IntPtr), hinstModule: win32more.Foundation.HINSTANCE, lParam: win32more.Foundation.LPARAM, dwPriority: UInt32, fdwAdd: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverAddW(phadid: POINTER(IntPtr), hinstModule: win32more.Foundation.HINSTANCE, lParam: win32more.Foundation.LPARAM, dwPriority: UInt32, fdwAdd: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverRemove(hadid: win32more.Media.Audio.HACMDRIVERID, fdwRemove: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverOpen(phad: POINTER(IntPtr), hadid: win32more.Media.Audio.HACMDRIVERID, fdwOpen: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverClose(had: win32more.Media.Audio.HACMDRIVER, fdwClose: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverMessage(had: win32more.Media.Audio.HACMDRIVER, uMsg: UInt32, lParam1: win32more.Foundation.LPARAM, lParam2: win32more.Foundation.LPARAM) -> win32more.Foundation.LRESULT: ...
@winfunctype('MSACM32.dll')
def acmDriverPriority(hadid: win32more.Media.Audio.HACMDRIVERID, dwPriority: UInt32, fdwPriority: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverDetailsA(hadid: win32more.Media.Audio.HACMDRIVERID, padd: POINTER(win32more.Media.Audio.ACMDRIVERDETAILSA_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmDriverDetailsW(hadid: win32more.Media.Audio.HACMDRIVERID, padd: POINTER(win32more.Media.Audio.ACMDRIVERDETAILSW_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatTagDetailsA(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFORMATTAGDETAILSA_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatTagDetailsW(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFORMATTAGDETAILSW_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatTagEnumA(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFORMATTAGDETAILSA_head), fnCallback: win32more.Media.Audio.ACMFORMATTAGENUMCBA, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatTagEnumW(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFORMATTAGDETAILSW_head), fnCallback: win32more.Media.Audio.ACMFORMATTAGENUMCBW, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatDetailsA(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.ACMFORMATDETAILSA_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatDetailsW(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.tACMFORMATDETAILSW_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatEnumA(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.ACMFORMATDETAILSA_head), fnCallback: win32more.Media.Audio.ACMFORMATENUMCBA, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatEnumW(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.tACMFORMATDETAILSW_head), fnCallback: win32more.Media.Audio.ACMFORMATENUMCBW, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatSuggest(had: win32more.Media.Audio.HACMDRIVER, pwfxSrc: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), pwfxDst: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), cbwfxDst: UInt32, fdwSuggest: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatChooseA(pafmtc: POINTER(win32more.Media.Audio.ACMFORMATCHOOSEA_head)) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFormatChooseW(pafmtc: POINTER(win32more.Media.Audio.ACMFORMATCHOOSEW_head)) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterTagDetailsA(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFILTERTAGDETAILSA_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterTagDetailsW(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFILTERTAGDETAILSW_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterTagEnumA(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFILTERTAGDETAILSA_head), fnCallback: win32more.Media.Audio.ACMFILTERTAGENUMCBA, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterTagEnumW(had: win32more.Media.Audio.HACMDRIVER, paftd: POINTER(win32more.Media.Audio.ACMFILTERTAGDETAILSW_head), fnCallback: win32more.Media.Audio.ACMFILTERTAGENUMCBW, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterDetailsA(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.ACMFILTERDETAILSA_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterDetailsW(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.ACMFILTERDETAILSW_head), fdwDetails: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterEnumA(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.ACMFILTERDETAILSA_head), fnCallback: win32more.Media.Audio.ACMFILTERENUMCBA, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterEnumW(had: win32more.Media.Audio.HACMDRIVER, pafd: POINTER(win32more.Media.Audio.ACMFILTERDETAILSW_head), fnCallback: win32more.Media.Audio.ACMFILTERENUMCBW, dwInstance: UIntPtr, fdwEnum: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterChooseA(pafltrc: POINTER(win32more.Media.Audio.ACMFILTERCHOOSEA_head)) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmFilterChooseW(pafltrc: POINTER(win32more.Media.Audio.ACMFILTERCHOOSEW_head)) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamOpen(phas: POINTER(IntPtr), had: win32more.Media.Audio.HACMDRIVER, pwfxSrc: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), pwfxDst: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), pwfltr: POINTER(win32more.Media.Audio.WAVEFILTER_head), dwCallback: UIntPtr, dwInstance: UIntPtr, fdwOpen: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamClose(has: win32more.Media.Audio.HACMSTREAM, fdwClose: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamSize(has: win32more.Media.Audio.HACMSTREAM, cbInput: UInt32, pdwOutputBytes: POINTER(UInt32), fdwSize: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamReset(has: win32more.Media.Audio.HACMSTREAM, fdwReset: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamMessage(has: win32more.Media.Audio.HACMSTREAM, uMsg: UInt32, lParam1: win32more.Foundation.LPARAM, lParam2: win32more.Foundation.LPARAM) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamConvert(has: win32more.Media.Audio.HACMSTREAM, pash: POINTER(win32more.Media.Audio.ACMSTREAMHEADER_head), fdwConvert: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamPrepareHeader(has: win32more.Media.Audio.HACMSTREAM, pash: POINTER(win32more.Media.Audio.ACMSTREAMHEADER_head), fdwPrepare: UInt32) -> UInt32: ...
@winfunctype('MSACM32.dll')
def acmStreamUnprepareHeader(has: win32more.Media.Audio.HACMSTREAM, pash: POINTER(win32more.Media.Audio.ACMSTREAMHEADER_head), fdwUnprepare: UInt32) -> UInt32: ...
AUDCLNT_SHAREMODE = Int32
AUDCLNT_SHAREMODE_SHARED: AUDCLNT_SHAREMODE = 0
AUDCLNT_SHAREMODE_EXCLUSIVE: AUDCLNT_SHAREMODE = 1
AUDCLNT_STREAMOPTIONS = UInt32
AUDCLNT_STREAMOPTIONS_NONE: AUDCLNT_STREAMOPTIONS = 0
AUDCLNT_STREAMOPTIONS_RAW: AUDCLNT_STREAMOPTIONS = 1
AUDCLNT_STREAMOPTIONS_MATCH_FORMAT: AUDCLNT_STREAMOPTIONS = 2
AUDCLNT_STREAMOPTIONS_AMBISONICS: AUDCLNT_STREAMOPTIONS = 4
AUDIO_DUCKING_OPTIONS = UInt32
AUDIO_DUCKING_OPTIONS_DEFAULT: AUDIO_DUCKING_OPTIONS = 0
AUDIO_DUCKING_OPTIONS_DO_NOT_DUCK_OTHER_STREAMS: AUDIO_DUCKING_OPTIONS = 1
class AUDIO_EFFECT(Structure):
    id: Guid
    canSetState: win32more.Foundation.BOOL
    state: win32more.Media.Audio.AUDIO_EFFECT_STATE
AUDIO_EFFECT_STATE = Int32
AUDIO_EFFECT_STATE_OFF: AUDIO_EFFECT_STATE = 0
AUDIO_EFFECT_STATE_ON: AUDIO_EFFECT_STATE = 1
AUDIO_STREAM_CATEGORY = Int32
AudioCategory_Other: AUDIO_STREAM_CATEGORY = 0
AudioCategory_ForegroundOnlyMedia: AUDIO_STREAM_CATEGORY = 1
AudioCategory_Communications: AUDIO_STREAM_CATEGORY = 3
AudioCategory_Alerts: AUDIO_STREAM_CATEGORY = 4
AudioCategory_SoundEffects: AUDIO_STREAM_CATEGORY = 5
AudioCategory_GameEffects: AUDIO_STREAM_CATEGORY = 6
AudioCategory_GameMedia: AUDIO_STREAM_CATEGORY = 7
AudioCategory_GameChat: AUDIO_STREAM_CATEGORY = 8
AudioCategory_Speech: AUDIO_STREAM_CATEGORY = 9
AudioCategory_Movie: AUDIO_STREAM_CATEGORY = 10
AudioCategory_Media: AUDIO_STREAM_CATEGORY = 11
AudioCategory_FarFieldSpeech: AUDIO_STREAM_CATEGORY = 12
AudioCategory_UniformSpeech: AUDIO_STREAM_CATEGORY = 13
AudioCategory_VoiceTyping: AUDIO_STREAM_CATEGORY = 14
AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE = Int32
AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_DEFAULT: AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE = 0
AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_USER: AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE = 1
AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_VOLATILE: AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE = 2
AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_ENUM_COUNT: AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE = 3
class AUDIO_VOLUME_NOTIFICATION_DATA(Structure):
    guidEventContext: Guid
    bMuted: win32more.Foundation.BOOL
    fMasterVolume: Single
    nChannels: UInt32
    afChannelVolumes: Single * 1
class AUDIOCLIENT_ACTIVATION_PARAMS(Structure):
    ActivationType: win32more.Media.Audio.AUDIOCLIENT_ACTIVATION_TYPE
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        ProcessLoopbackParams: win32more.Media.Audio.AUDIOCLIENT_PROCESS_LOOPBACK_PARAMS
AUDIOCLIENT_ACTIVATION_TYPE = Int32
AUDIOCLIENT_ACTIVATION_TYPE_DEFAULT: AUDIOCLIENT_ACTIVATION_TYPE = 0
AUDIOCLIENT_ACTIVATION_TYPE_PROCESS_LOOPBACK: AUDIOCLIENT_ACTIVATION_TYPE = 1
class AUDIOCLIENT_PROCESS_LOOPBACK_PARAMS(Structure):
    TargetProcessId: UInt32
    ProcessLoopbackMode: win32more.Media.Audio.PROCESS_LOOPBACK_MODE
class AudioClient3ActivationParams(Structure):
    tracingContextId: Guid
class AudioClientProperties(Structure):
    cbSize: UInt32
    bIsOffload: win32more.Foundation.BOOL
    eCategory: win32more.Media.Audio.AUDIO_STREAM_CATEGORY
    Options: win32more.Media.Audio.AUDCLNT_STREAMOPTIONS
class AudioExtensionParams(Structure):
    AddPageParam: win32more.Foundation.LPARAM
    pEndpoint: win32more.Media.Audio.IMMDevice_head
    pPnpInterface: win32more.Media.Audio.IMMDevice_head
    pPnpDevnode: win32more.Media.Audio.IMMDevice_head
AudioObjectType = UInt32
AudioObjectType_None: AudioObjectType = 0
AudioObjectType_Dynamic: AudioObjectType = 1
AudioObjectType_FrontLeft: AudioObjectType = 2
AudioObjectType_FrontRight: AudioObjectType = 4
AudioObjectType_FrontCenter: AudioObjectType = 8
AudioObjectType_LowFrequency: AudioObjectType = 16
AudioObjectType_SideLeft: AudioObjectType = 32
AudioObjectType_SideRight: AudioObjectType = 64
AudioObjectType_BackLeft: AudioObjectType = 128
AudioObjectType_BackRight: AudioObjectType = 256
AudioObjectType_TopFrontLeft: AudioObjectType = 512
AudioObjectType_TopFrontRight: AudioObjectType = 1024
AudioObjectType_TopBackLeft: AudioObjectType = 2048
AudioObjectType_TopBackRight: AudioObjectType = 4096
AudioObjectType_BottomFrontLeft: AudioObjectType = 8192
AudioObjectType_BottomFrontRight: AudioObjectType = 16384
AudioObjectType_BottomBackLeft: AudioObjectType = 32768
AudioObjectType_BottomBackRight: AudioObjectType = 65536
AudioObjectType_BackCenter: AudioObjectType = 131072
AudioSessionDisconnectReason = Int32
AudioSessionDisconnectReason_DisconnectReasonDeviceRemoval: AudioSessionDisconnectReason = 0
AudioSessionDisconnectReason_DisconnectReasonServerShutdown: AudioSessionDisconnectReason = 1
AudioSessionDisconnectReason_DisconnectReasonFormatChanged: AudioSessionDisconnectReason = 2
AudioSessionDisconnectReason_DisconnectReasonSessionLogoff: AudioSessionDisconnectReason = 3
AudioSessionDisconnectReason_DisconnectReasonSessionDisconnected: AudioSessionDisconnectReason = 4
AudioSessionDisconnectReason_DisconnectReasonExclusiveModeOverride: AudioSessionDisconnectReason = 5
AudioSessionState = Int32
AudioSessionState_AudioSessionStateInactive: AudioSessionState = 0
AudioSessionState_AudioSessionStateActive: AudioSessionState = 1
AudioSessionState_AudioSessionStateExpired: AudioSessionState = 2
AudioStateMonitorSoundLevel = Int32
AudioStateMonitorSoundLevel_Muted: AudioStateMonitorSoundLevel = 0
AudioStateMonitorSoundLevel_Low: AudioStateMonitorSoundLevel = 1
AudioStateMonitorSoundLevel_Full: AudioStateMonitorSoundLevel = 2
class AUXCAPS2A(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    wTechnology: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class AUXCAPS2W(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    wTechnology: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class AUXCAPSA(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    wTechnology: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    _pack_ = 1
class AUXCAPSW(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    wTechnology: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    _pack_ = 1
ConnectorType = Int32
ConnectorType_Unknown_Connector: ConnectorType = 0
ConnectorType_Physical_Internal: ConnectorType = 1
ConnectorType_Physical_External: ConnectorType = 2
ConnectorType_Software_IO: ConnectorType = 3
ConnectorType_Software_Fixed: ConnectorType = 4
ConnectorType_Network: ConnectorType = 5
DataFlow = Int32
DataFlow_In: DataFlow = 0
DataFlow_Out: DataFlow = 1
DeviceTopology = Guid('1df639d0-5ec1-47aa-93-79-82-8d-c1-aa-8c-59')
class DIRECTX_AUDIO_ACTIVATION_PARAMS(Structure):
    cbDirectXAudioActivationParams: UInt32
    guidAudioSession: Guid
    dwAudioStreamFlags: UInt32
class ECHOWAVEFILTER(Structure):
    wfltr: win32more.Media.Audio.WAVEFILTER
    dwVolume: UInt32
    dwDelay: UInt32
    _pack_ = 1
EDataFlow = Int32
EDataFlow_eRender: EDataFlow = 0
EDataFlow_eCapture: EDataFlow = 1
EDataFlow_eAll: EDataFlow = 2
EDataFlow_EDataFlow_enum_count: EDataFlow = 3
EndpointFormFactor = Int32
EndpointFormFactor_RemoteNetworkDevice: EndpointFormFactor = 0
EndpointFormFactor_Speakers: EndpointFormFactor = 1
EndpointFormFactor_LineLevel: EndpointFormFactor = 2
EndpointFormFactor_Headphones: EndpointFormFactor = 3
EndpointFormFactor_Microphone: EndpointFormFactor = 4
EndpointFormFactor_Headset: EndpointFormFactor = 5
EndpointFormFactor_Handset: EndpointFormFactor = 6
EndpointFormFactor_UnknownDigitalPassthrough: EndpointFormFactor = 7
EndpointFormFactor_SPDIF: EndpointFormFactor = 8
EndpointFormFactor_DigitalAudioDisplayDevice: EndpointFormFactor = 9
EndpointFormFactor_UnknownFormFactor: EndpointFormFactor = 10
EndpointFormFactor_EndpointFormFactor_enum_count: EndpointFormFactor = 11
ERole = Int32
ERole_eConsole: ERole = 0
ERole_eMultimedia: ERole = 1
ERole_eCommunications: ERole = 2
ERole_ERole_enum_count: ERole = 3
HACMDRIVER = IntPtr
HACMDRIVERID = IntPtr
HACMOBJ = IntPtr
HACMSTREAM = IntPtr
HMIDI = IntPtr
HMIDIIN = IntPtr
HMIDIOUT = IntPtr
HMIDISTRM = IntPtr
HMIXER = IntPtr
HMIXEROBJ = IntPtr
HWAVE = IntPtr
HWAVEIN = IntPtr
HWAVEOUT = IntPtr
class IActivateAudioInterfaceAsyncOperation(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('72a22d78-cde4-431d-b8-cc-84-3a-71-19-9b-6d')
    @commethod(3)
    def GetActivateResult(activateResult: POINTER(win32more.Foundation.HRESULT), activatedInterface: POINTER(win32more.System.Com.IUnknown_head)) -> win32more.Foundation.HRESULT: ...
class IActivateAudioInterfaceCompletionHandler(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('41d949ab-9862-444a-80-f6-c2-61-33-4d-a5-eb')
    @commethod(3)
    def ActivateCompleted(activateOperation: win32more.Media.Audio.IActivateAudioInterfaceAsyncOperation_head) -> win32more.Foundation.HRESULT: ...
class IAudioAmbisonicsControl(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('28724c91-df35-4856-9f-76-d6-a2-64-13-f3-df')
    @commethod(3)
    def SetData(pAmbisonicsParams: POINTER(win32more.Media.Audio.AMBISONICS_PARAMS_head), cbAmbisonicsParams: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetHeadTracking(bEnableHeadTracking: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetHeadTracking(pbEnableHeadTracking: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def SetRotation(X: Single, Y: Single, Z: Single, W: Single) -> win32more.Foundation.HRESULT: ...
class IAudioAutoGainControl(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('85401fd4-6de4-4b9d-98-69-2d-67-53-a8-2f-3c')
    @commethod(3)
    def GetEnabled(pbEnabled: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetEnabled(bEnable: win32more.Foundation.BOOL, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class IAudioBass(c_void_p):
    extends: win32more.Media.Audio.IPerChannelDbLevel
    Guid = Guid('a2b1a1d9-4db3-425d-a2-b2-bd-33-5c-b3-e2-e5')
class IAudioCaptureClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('c8adbd64-e71e-48a0-a4-de-18-5c-39-5c-d3-17')
    @commethod(3)
    def GetBuffer(ppData: POINTER(c_char_p_no), pNumFramesToRead: POINTER(UInt32), pdwFlags: POINTER(UInt32), pu64DevicePosition: POINTER(UInt64), pu64QPCPosition: POINTER(UInt64)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def ReleaseBuffer(NumFramesRead: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetNextPacketSize(pNumFramesInNextPacket: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IAudioChannelConfig(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bb11c46f-ec28-493c-b8-8a-5d-b8-80-62-ce-98')
    @commethod(3)
    def SetChannelConfig(dwConfig: UInt32, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetChannelConfig(pdwConfig: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IAudioClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('1cb9ad4c-dbfa-4c32-b1-78-c2-f5-68-a7-03-b2')
    @commethod(3)
    def Initialize(ShareMode: win32more.Media.Audio.AUDCLNT_SHAREMODE, StreamFlags: UInt32, hnsBufferDuration: Int64, hnsPeriodicity: Int64, pFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), AudioSessionGuid: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetBufferSize(pNumBufferFrames: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetStreamLatency(phnsLatency: POINTER(Int64)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetCurrentPadding(pNumPaddingFrames: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def IsFormatSupported(ShareMode: win32more.Media.Audio.AUDCLNT_SHAREMODE, pFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), ppClosestMatch: POINTER(POINTER(win32more.Media.Audio.WAVEFORMATEX_head))) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def GetMixFormat(ppDeviceFormat: POINTER(POINTER(win32more.Media.Audio.WAVEFORMATEX_head))) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetDevicePeriod(phnsDefaultDevicePeriod: POINTER(Int64), phnsMinimumDevicePeriod: POINTER(Int64)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def Start() -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def Stop() -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def Reset() -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def SetEventHandle(eventHandle: win32more.Foundation.HANDLE) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetService(riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
class IAudioClient2(c_void_p):
    extends: win32more.Media.Audio.IAudioClient
    Guid = Guid('726778cd-f60a-4eda-82-de-e4-76-10-cd-78-aa')
    @commethod(15)
    def IsOffloadCapable(Category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, pbOffloadCapable: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def SetClientProperties(pProperties: POINTER(win32more.Media.Audio.AudioClientProperties_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def GetBufferSizeLimits(pFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), bEventDriven: win32more.Foundation.BOOL, phnsMinBufferDuration: POINTER(Int64), phnsMaxBufferDuration: POINTER(Int64)) -> win32more.Foundation.HRESULT: ...
class IAudioClient3(c_void_p):
    extends: win32more.Media.Audio.IAudioClient2
    Guid = Guid('7ed4ee07-8e67-4cd4-8c-1a-2b-7a-59-87-ad-42')
    @commethod(18)
    def GetSharedModeEnginePeriod(pFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), pDefaultPeriodInFrames: POINTER(UInt32), pFundamentalPeriodInFrames: POINTER(UInt32), pMinPeriodInFrames: POINTER(UInt32), pMaxPeriodInFrames: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def GetCurrentSharedModeEnginePeriod(ppFormat: POINTER(POINTER(win32more.Media.Audio.WAVEFORMATEX_head)), pCurrentPeriodInFrames: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def InitializeSharedAudioStream(StreamFlags: UInt32, PeriodInFrames: UInt32, pFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), AudioSessionGuid: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class IAudioClientDuckingControl(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('c789d381-a28c-4168-b2-8f-d3-a8-37-92-4d-c3')
    @commethod(3)
    def SetDuckingOptionsForCurrentStream(options: win32more.Media.Audio.AUDIO_DUCKING_OPTIONS) -> win32more.Foundation.HRESULT: ...
class IAudioClock(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('cd63314f-3fba-4a1b-81-2c-ef-96-35-87-28-e7')
    @commethod(3)
    def GetFrequency(pu64Frequency: POINTER(UInt64)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetPosition(pu64Position: POINTER(UInt64), pu64QPCPosition: POINTER(UInt64)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetCharacteristics(pdwCharacteristics: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IAudioClock2(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('6f49ff73-6727-49ac-a0-08-d9-8c-f5-e7-00-48')
    @commethod(3)
    def GetDevicePosition(DevicePosition: POINTER(UInt64), QPCPosition: POINTER(UInt64)) -> win32more.Foundation.HRESULT: ...
class IAudioClockAdjustment(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('f6e4c0a0-46d9-4fb8-be-21-57-a3-ef-2b-62-6c')
    @commethod(3)
    def SetSampleRate(flSampleRate: Single) -> win32more.Foundation.HRESULT: ...
class IAudioEffectsChangedNotificationClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('a5ded44f-3c5d-4b2b-bd-1e-5d-c1-ee-20-bb-f6')
    @commethod(3)
    def OnAudioEffectsChanged() -> win32more.Foundation.HRESULT: ...
class IAudioEffectsManager(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('4460b3ae-4b44-4527-86-76-75-48-a8-ac-d2-60')
    @commethod(3)
    def RegisterAudioEffectsChangedNotificationCallback(client: win32more.Media.Audio.IAudioEffectsChangedNotificationClient_head) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def UnregisterAudioEffectsChangedNotificationCallback(client: win32more.Media.Audio.IAudioEffectsChangedNotificationClient_head) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetAudioEffects(effects: POINTER(POINTER(win32more.Media.Audio.AUDIO_EFFECT_head)), numEffects: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def SetAudioEffectState(effectId: Guid, state: win32more.Media.Audio.AUDIO_EFFECT_STATE) -> win32more.Foundation.HRESULT: ...
class IAudioFormatEnumerator(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('dcdaa858-895a-4a22-a5-eb-67-bd-a5-06-09-6d')
    @commethod(3)
    def GetCount(count: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetFormat(index: UInt32, format: POINTER(POINTER(win32more.Media.Audio.WAVEFORMATEX_head))) -> win32more.Foundation.HRESULT: ...
class IAudioInputSelector(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('4f03dc02-5e6e-4653-8f-72-a0-30-c1-23-d5-98')
    @commethod(3)
    def GetSelection(pnIdSelected: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetSelection(nIdSelect: UInt32, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class IAudioLoudness(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('7d8b1437-dd53-4350-9c-1b-1e-e2-89-0b-d9-38')
    @commethod(3)
    def GetEnabled(pbEnabled: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetEnabled(bEnable: win32more.Foundation.BOOL, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class IAudioMidrange(c_void_p):
    extends: win32more.Media.Audio.IPerChannelDbLevel
    Guid = Guid('5e54b6d7-b44b-40d9-9a-9e-e6-91-d9-ce-6e-df')
class IAudioMute(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('df45aeea-b74a-4b6b-af-ad-23-66-b6-aa-01-2e')
    @commethod(3)
    def SetMute(bMuted: win32more.Foundation.BOOL, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetMute(pbMuted: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
class IAudioOutputSelector(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bb515f69-94a7-429e-8b-9c-27-1b-3f-11-a3-ab')
    @commethod(3)
    def GetSelection(pnIdSelected: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetSelection(nIdSelect: UInt32, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class IAudioPeakMeter(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('dd79923c-0599-45e0-b8-b6-c8-df-7d-b6-e7-96')
    @commethod(3)
    def GetChannelCount(pcChannels: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetLevel(nChannel: UInt32, pfLevel: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
class IAudioRenderClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('f294acfc-3146-4483-a7-bf-ad-dc-a7-c2-60-e2')
    @commethod(3)
    def GetBuffer(NumFramesRequested: UInt32, ppData: POINTER(c_char_p_no)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def ReleaseBuffer(NumFramesWritten: UInt32, dwFlags: UInt32) -> win32more.Foundation.HRESULT: ...
class IAudioSessionControl(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('f4b1a599-7266-4319-a8-ca-e7-0a-cb-11-e8-cd')
    @commethod(3)
    def GetState(pRetVal: POINTER(win32more.Media.Audio.AudioSessionState)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetDisplayName(pRetVal: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def SetDisplayName(Value: win32more.Foundation.PWSTR, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetIconPath(pRetVal: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def SetIconPath(Value: win32more.Foundation.PWSTR, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def GetGroupingParam(pRetVal: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def SetGroupingParam(Override: POINTER(Guid), EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def RegisterAudioSessionNotification(NewNotifications: win32more.Media.Audio.IAudioSessionEvents_head) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def UnregisterAudioSessionNotification(NewNotifications: win32more.Media.Audio.IAudioSessionEvents_head) -> win32more.Foundation.HRESULT: ...
class IAudioSessionControl2(c_void_p):
    extends: win32more.Media.Audio.IAudioSessionControl
    Guid = Guid('bfb7ff88-7239-4fc9-8f-a2-07-c9-50-be-9c-6d')
    @commethod(12)
    def GetSessionIdentifier(pRetVal: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def GetSessionInstanceIdentifier(pRetVal: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetProcessId(pRetVal: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def IsSystemSoundsSession() -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def SetDuckingPreference(optOut: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
class IAudioSessionEnumerator(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('e2f5bb11-0570-40ca-ac-dd-3a-a0-12-77-de-e8')
    @commethod(3)
    def GetCount(SessionCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetSession(SessionCount: Int32, Session: POINTER(win32more.Media.Audio.IAudioSessionControl_head)) -> win32more.Foundation.HRESULT: ...
class IAudioSessionEvents(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('24918acc-64b3-37c1-8c-a9-74-a6-6e-99-57-a8')
    @commethod(3)
    def OnDisplayNameChanged(NewDisplayName: win32more.Foundation.PWSTR, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def OnIconPathChanged(NewIconPath: win32more.Foundation.PWSTR, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def OnSimpleVolumeChanged(NewVolume: Single, NewMute: win32more.Foundation.BOOL, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def OnChannelVolumeChanged(ChannelCount: UInt32, NewChannelVolumeArray: POINTER(Single), ChangedChannel: UInt32, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def OnGroupingParamChanged(NewGroupingParam: POINTER(Guid), EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def OnStateChanged(NewState: win32more.Media.Audio.AudioSessionState) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def OnSessionDisconnected(DisconnectReason: win32more.Media.Audio.AudioSessionDisconnectReason) -> win32more.Foundation.HRESULT: ...
class IAudioSessionManager(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bfa971f1-4d5e-40bb-93-5e-96-70-39-bf-be-e4')
    @commethod(3)
    def GetAudioSessionControl(AudioSessionGuid: POINTER(Guid), StreamFlags: UInt32, SessionControl: POINTER(win32more.Media.Audio.IAudioSessionControl_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetSimpleAudioVolume(AudioSessionGuid: POINTER(Guid), StreamFlags: UInt32, AudioVolume: POINTER(win32more.Media.Audio.ISimpleAudioVolume_head)) -> win32more.Foundation.HRESULT: ...
class IAudioSessionManager2(c_void_p):
    extends: win32more.Media.Audio.IAudioSessionManager
    Guid = Guid('77aa99a0-1bd6-484f-8b-c7-2c-65-4c-9a-9b-6f')
    @commethod(5)
    def GetSessionEnumerator(SessionEnum: POINTER(win32more.Media.Audio.IAudioSessionEnumerator_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def RegisterSessionNotification(SessionNotification: win32more.Media.Audio.IAudioSessionNotification_head) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def UnregisterSessionNotification(SessionNotification: win32more.Media.Audio.IAudioSessionNotification_head) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def RegisterDuckNotification(sessionID: win32more.Foundation.PWSTR, duckNotification: win32more.Media.Audio.IAudioVolumeDuckNotification_head) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def UnregisterDuckNotification(duckNotification: win32more.Media.Audio.IAudioVolumeDuckNotification_head) -> win32more.Foundation.HRESULT: ...
class IAudioSessionNotification(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('641dd20b-4d41-49cc-ab-a3-17-4b-94-77-bb-08')
    @commethod(3)
    def OnSessionCreated(NewSession: win32more.Media.Audio.IAudioSessionControl_head) -> win32more.Foundation.HRESULT: ...
class IAudioStateMonitor(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('63bd8738-e30d-4c77-bf-5c-83-4e-87-c6-57-e2')
    @commethod(3)
    def RegisterCallback(callback: win32more.Media.Audio.PAudioStateMonitorCallback, context: c_void_p, registration: POINTER(Int64)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def UnregisterCallback(registration: Int64) -> Void: ...
    @commethod(5)
    def GetSoundLevel() -> win32more.Media.Audio.AudioStateMonitorSoundLevel: ...
class IAudioStreamVolume(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('93014887-242d-4068-8a-15-cf-5e-93-b9-0f-e3')
    @commethod(3)
    def GetChannelCount(pdwCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetChannelVolume(dwIndex: UInt32, fLevel: Single) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetChannelVolume(dwIndex: UInt32, pfLevel: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def SetAllVolumes(dwCount: UInt32, pfVolumes: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetAllVolumes(dwCount: UInt32, pfVolumes: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
class IAudioSystemEffectsPropertyChangeNotificationClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('20049d40-56d5-400e-a2-ef-38-55-99-fe-ed-49')
    @commethod(3)
    def OnPropertyChanged(type: win32more.Media.Audio.AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE, key: win32more.UI.Shell.PropertiesSystem.PROPERTYKEY) -> win32more.Foundation.HRESULT: ...
class IAudioSystemEffectsPropertyStore(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('302ae7f9-d7e0-43e4-97-1b-1f-82-93-61-3d-2a')
    @commethod(3)
    def OpenDefaultPropertyStore(stgmAccess: UInt32, propStore: POINTER(win32more.UI.Shell.PropertiesSystem.IPropertyStore_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def OpenUserPropertyStore(stgmAccess: UInt32, propStore: POINTER(win32more.UI.Shell.PropertiesSystem.IPropertyStore_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def OpenVolatilePropertyStore(stgmAccess: UInt32, propStore: POINTER(win32more.UI.Shell.PropertiesSystem.IPropertyStore_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def ResetUserPropertyStore() -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def ResetVolatilePropertyStore() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def RegisterPropertyChangeNotification(callback: win32more.Media.Audio.IAudioSystemEffectsPropertyChangeNotificationClient_head) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def UnregisterPropertyChangeNotification(callback: win32more.Media.Audio.IAudioSystemEffectsPropertyChangeNotificationClient_head) -> win32more.Foundation.HRESULT: ...
class IAudioTreble(c_void_p):
    extends: win32more.Media.Audio.IPerChannelDbLevel
    Guid = Guid('0a717812-694e-4907-b7-4b-ba-fa-5c-fd-ca-7b')
class IAudioVolumeDuckNotification(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('c3b284d4-6d39-4359-b3-cf-b5-6d-db-3b-b3-9c')
    @commethod(3)
    def OnVolumeDuckNotification(sessionID: win32more.Foundation.PWSTR, countCommunicationSessions: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def OnVolumeUnduckNotification(sessionID: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
class IAudioVolumeLevel(c_void_p):
    extends: win32more.Media.Audio.IPerChannelDbLevel
    Guid = Guid('7fb7b48f-531d-44a2-bc-b3-5a-d5-a1-34-b3-dc')
class IChannelAudioVolume(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('1c158861-b533-4b30-b1-cf-e8-53-e5-1c-59-b8')
    @commethod(3)
    def GetChannelCount(pdwCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetChannelVolume(dwIndex: UInt32, fLevel: Single, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetChannelVolume(dwIndex: UInt32, pfLevel: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def SetAllVolumes(dwCount: UInt32, pfVolumes: POINTER(Single), EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetAllVolumes(dwCount: UInt32, pfVolumes: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
class IConnector(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('9c2c4058-23f5-41de-87-7a-df-3a-f2-36-a0-9e')
    @commethod(3)
    def GetType(pType: POINTER(win32more.Media.Audio.ConnectorType)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetDataFlow(pFlow: POINTER(win32more.Media.Audio.DataFlow)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def ConnectTo(pConnectTo: win32more.Media.Audio.IConnector_head) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Disconnect() -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def IsConnected(pbConnected: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def GetConnectedTo(ppConTo: POINTER(win32more.Media.Audio.IConnector_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetConnectorIdConnectedTo(ppwstrConnectorId: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetDeviceIdConnectedTo(ppwstrDeviceId: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
class IControlChangeNotify(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('a09513ed-c709-4d21-bd-7b-5f-34-c4-7f-39-47')
    @commethod(3)
    def OnNotify(dwSenderProcessId: UInt32, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class IControlInterface(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('45d37c3f-5140-444a-ae-24-40-07-89-f3-cb-f3')
    @commethod(3)
    def GetName(ppwstrName: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetIID(pIID: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class IDeviceSpecificProperty(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('3b22bcbf-2586-4af0-85-83-20-5d-39-1b-80-7c')
    @commethod(3)
    def GetType(pVType: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetValue(pvValue: c_void_p, pcbValue: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def SetValue(pvValue: c_void_p, cbValue: UInt32, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Get4BRange(plMin: POINTER(Int32), plMax: POINTER(Int32), plStepping: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IDeviceTopology(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('2a07407e-6497-4a18-97-87-32-f7-9b-d0-d9-8f')
    @commethod(3)
    def GetConnectorCount(pCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetConnector(nIndex: UInt32, ppConnector: POINTER(win32more.Media.Audio.IConnector_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetSubunitCount(pCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetSubunit(nIndex: UInt32, ppSubunit: POINTER(win32more.Media.Audio.ISubunit_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetPartById(nId: UInt32, ppPart: POINTER(win32more.Media.Audio.IPart_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def GetDeviceId(ppwstrDeviceId: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetSignalPath(pIPartFrom: win32more.Media.Audio.IPart_head, pIPartTo: win32more.Media.Audio.IPart_head, bRejectMixedPaths: win32more.Foundation.BOOL, ppParts: POINTER(win32more.Media.Audio.IPartsList_head)) -> win32more.Foundation.HRESULT: ...
class IMessageFilter(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('00000016-0000-0000-c0-00-00-00-00-00-00-46')
    @commethod(3)
    def HandleInComingCall(dwCallType: UInt32, htaskCaller: win32more.Media.HTASK, dwTickCount: UInt32, lpInterfaceInfo: POINTER(win32more.System.Com.INTERFACEINFO_head)) -> UInt32: ...
    @commethod(4)
    def RetryRejectedCall(htaskCallee: win32more.Media.HTASK, dwTickCount: UInt32, dwRejectType: UInt32) -> UInt32: ...
    @commethod(5)
    def MessagePending(htaskCallee: win32more.Media.HTASK, dwTickCount: UInt32, dwPendingType: UInt32) -> UInt32: ...
class IMMDevice(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('d666063f-1587-4e43-81-f1-b9-48-e8-07-36-3f')
    @commethod(3)
    def Activate(iid: POINTER(Guid), dwClsCtx: win32more.System.Com.CLSCTX, pActivationParams: POINTER(win32more.System.Com.StructuredStorage.PROPVARIANT_head), ppInterface: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def OpenPropertyStore(stgmAccess: win32more.System.Com.STGM, ppProperties: POINTER(win32more.UI.Shell.PropertiesSystem.IPropertyStore_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetId(ppstrId: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetState(pdwState: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IMMDeviceActivator(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('3b0d0ea4-d0a9-4b0e-93-5b-09-51-67-46-fa-c0')
    @commethod(3)
    def Activate(iid: POINTER(Guid), pDevice: win32more.Media.Audio.IMMDevice_head, pActivationParams: POINTER(win32more.System.Com.StructuredStorage.PROPVARIANT_head), ppInterface: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
class IMMDeviceCollection(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('0bd7a1be-7a1a-44db-83-97-cc-53-92-38-7b-5e')
    @commethod(3)
    def GetCount(pcDevices: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Item(nDevice: UInt32, ppDevice: POINTER(win32more.Media.Audio.IMMDevice_head)) -> win32more.Foundation.HRESULT: ...
class IMMDeviceEnumerator(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('a95664d2-9614-4f35-a7-46-de-8d-b6-36-17-e6')
    @commethod(3)
    def EnumAudioEndpoints(dataFlow: win32more.Media.Audio.EDataFlow, dwStateMask: UInt32, ppDevices: POINTER(win32more.Media.Audio.IMMDeviceCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetDefaultAudioEndpoint(dataFlow: win32more.Media.Audio.EDataFlow, role: win32more.Media.Audio.ERole, ppEndpoint: POINTER(win32more.Media.Audio.IMMDevice_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetDevice(pwstrId: win32more.Foundation.PWSTR, ppDevice: POINTER(win32more.Media.Audio.IMMDevice_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def RegisterEndpointNotificationCallback(pClient: win32more.Media.Audio.IMMNotificationClient_head) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def UnregisterEndpointNotificationCallback(pClient: win32more.Media.Audio.IMMNotificationClient_head) -> win32more.Foundation.HRESULT: ...
class IMMEndpoint(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('1be09788-6894-4089-85-86-9a-2a-6c-26-5a-c5')
    @commethod(3)
    def GetDataFlow(pDataFlow: POINTER(win32more.Media.Audio.EDataFlow)) -> win32more.Foundation.HRESULT: ...
class IMMNotificationClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('7991eec9-7e89-4d85-83-90-6c-70-3c-ec-60-c0')
    @commethod(3)
    def OnDeviceStateChanged(pwstrDeviceId: win32more.Foundation.PWSTR, dwNewState: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def OnDeviceAdded(pwstrDeviceId: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def OnDeviceRemoved(pwstrDeviceId: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def OnDefaultDeviceChanged(flow: win32more.Media.Audio.EDataFlow, role: win32more.Media.Audio.ERole, pwstrDefaultDeviceId: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def OnPropertyValueChanged(pwstrDeviceId: win32more.Foundation.PWSTR, key: win32more.UI.Shell.PropertiesSystem.PROPERTYKEY) -> win32more.Foundation.HRESULT: ...
class IPart(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('ae2de0e4-5bca-4f2d-aa-46-5d-13-f8-fd-b3-a9')
    @commethod(3)
    def GetName(ppwstrName: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetLocalId(pnId: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetGlobalId(ppwstrGlobalId: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetPartType(pPartType: POINTER(win32more.Media.Audio.PartType)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetSubType(pSubType: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def GetControlInterfaceCount(pCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetControlInterface(nIndex: UInt32, ppInterfaceDesc: POINTER(win32more.Media.Audio.IControlInterface_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def EnumPartsIncoming(ppParts: POINTER(win32more.Media.Audio.IPartsList_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def EnumPartsOutgoing(ppParts: POINTER(win32more.Media.Audio.IPartsList_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def GetTopologyObject(ppTopology: POINTER(win32more.Media.Audio.IDeviceTopology_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def Activate(dwClsContext: UInt32, refiid: POINTER(Guid), ppvObject: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def RegisterControlChangeCallback(riid: POINTER(Guid), pNotify: win32more.Media.Audio.IControlChangeNotify_head) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def UnregisterControlChangeCallback(pNotify: win32more.Media.Audio.IControlChangeNotify_head) -> win32more.Foundation.HRESULT: ...
class IPartsList(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('6daa848c-5eb0-45cc-ae-a5-99-8a-2c-da-1f-fb')
    @commethod(3)
    def GetCount(pCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetPart(nIndex: UInt32, ppPart: POINTER(win32more.Media.Audio.IPart_head)) -> win32more.Foundation.HRESULT: ...
class IPerChannelDbLevel(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('c2f8e001-f205-4bc9-99-bc-c1-3b-1e-04-8c-cb')
    @commethod(3)
    def GetChannelCount(pcChannels: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetLevelRange(nChannel: UInt32, pfMinLevelDB: POINTER(Single), pfMaxLevelDB: POINTER(Single), pfStepping: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetLevel(nChannel: UInt32, pfLevelDB: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def SetLevel(nChannel: UInt32, fLevelDB: Single, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def SetLevelUniform(fLevelDB: Single, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def SetLevelAllChannels(aLevelsDB: POINTER(Single), cChannels: UInt32, pguidEventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
class ISimpleAudioVolume(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('87ce5498-68d6-44e5-92-15-6d-a4-7e-f8-83-d8')
    @commethod(3)
    def SetMasterVolume(fLevel: Single, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetMasterVolume(pfLevel: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def SetMute(bMute: win32more.Foundation.BOOL, EventContext: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetMute(pbMute: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bbf8e066-aaaa-49be-9a-4d-fd-2a-85-8e-a2-7f')
    @commethod(3)
    def GetStaticObjectPosition(type: win32more.Media.Audio.AudioObjectType, x: POINTER(Single), y: POINTER(Single), z: POINTER(Single)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetNativeStaticObjectTypeMask(mask: POINTER(win32more.Media.Audio.AudioObjectType)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetMaxDynamicObjectCount(value: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetSupportedAudioObjectFormatEnumerator(enumerator: POINTER(win32more.Media.Audio.IAudioFormatEnumerator_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetMaxFrameCount(objectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), frameCountPerBuffer: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def IsAudioObjectFormatSupported(objectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def IsSpatialAudioStreamAvailable(streamUuid: POINTER(Guid), auxiliaryInfo: POINTER(win32more.System.Com.StructuredStorage.PROPVARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def ActivateSpatialAudioStream(activationParams: POINTER(win32more.System.Com.StructuredStorage.PROPVARIANT_head), riid: POINTER(Guid), stream: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioClient2(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioClient
    Guid = Guid('caabe452-a66a-4bee-a9-3e-e3-20-46-3f-6a-53')
    @commethod(11)
    def IsOffloadCapable(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, isOffloadCapable: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def GetMaxFrameCountForCategory(category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY, offloadEnabled: win32more.Foundation.BOOL, objectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head), frameCountPerBuffer: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioMetadataClient(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('777d4a3b-f6ff-4a26-85-dc-68-d7-cd-ed-a1-d4')
    @commethod(3)
    def ActivateSpatialAudioMetadataItems(maxItemCount: UInt16, frameCount: UInt16, metadataItemsBuffer: POINTER(win32more.Media.Audio.ISpatialAudioMetadataItemsBuffer_head), metadataItems: POINTER(win32more.Media.Audio.ISpatialAudioMetadataItems_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetSpatialAudioMetadataItemsBufferLength(maxItemCount: UInt16, bufferLength: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def ActivateSpatialAudioMetadataWriter(overflowMode: win32more.Media.Audio.SpatialAudioMetadataWriterOverflowMode, metadataWriter: POINTER(win32more.Media.Audio.ISpatialAudioMetadataWriter_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def ActivateSpatialAudioMetadataCopier(metadataCopier: POINTER(win32more.Media.Audio.ISpatialAudioMetadataCopier_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def ActivateSpatialAudioMetadataReader(metadataReader: POINTER(win32more.Media.Audio.ISpatialAudioMetadataReader_head)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioMetadataCopier(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('d224b233-e251-4fd0-9c-a2-d5-ec-f9-a6-84-04')
    @commethod(3)
    def Open(metadataItems: win32more.Media.Audio.ISpatialAudioMetadataItems_head) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def CopyMetadataForFrames(copyFrameCount: UInt16, copyMode: win32more.Media.Audio.SpatialAudioMetadataCopyMode, dstMetadataItems: win32more.Media.Audio.ISpatialAudioMetadataItems_head, itemsCopied: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Close() -> win32more.Foundation.HRESULT: ...
class ISpatialAudioMetadataItems(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bcd7c78f-3098-4f22-b5-47-a2-f2-5a-38-12-69')
    @commethod(3)
    def GetFrameCount(frameCount: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetItemCount(itemCount: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetMaxItemCount(maxItemCount: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetMaxValueBufferLength(maxValueBufferLength: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetInfo(info: POINTER(win32more.Media.Audio.SpatialAudioMetadataItemsInfo_head)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioMetadataItemsBuffer(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('42640a16-e1bd-42d9-9f-f6-03-1a-b7-1a-2d-ba')
    @commethod(3)
    def AttachToBuffer(buffer: c_char_p_no, bufferLength: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def AttachToPopulatedBuffer(buffer: c_char_p_no, bufferLength: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def DetachBuffer() -> win32more.Foundation.HRESULT: ...
class ISpatialAudioMetadataReader(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('b78e86a2-31d9-4c32-94-d2-7d-f4-0f-c7-eb-ec')
    @commethod(3)
    def Open(metadataItems: win32more.Media.Audio.ISpatialAudioMetadataItems_head) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def ReadNextItem(commandCount: c_char_p_no, frameOffset: POINTER(UInt16)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def ReadNextItemCommand(commandID: c_char_p_no, valueBuffer: c_void_p, maxValueBufferLength: UInt32, valueBufferLength: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Close() -> win32more.Foundation.HRESULT: ...
class ISpatialAudioMetadataWriter(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('1b17ca01-2955-444d-a4-30-53-7d-c5-89-a8-44')
    @commethod(3)
    def Open(metadataItems: win32more.Media.Audio.ISpatialAudioMetadataItems_head) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def WriteNextItem(frameOffset: UInt16) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def WriteNextItemCommand(commandID: Byte, valueBuffer: c_void_p, valueBufferLength: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Close() -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObject(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioObjectBase
    Guid = Guid('dde28967-521b-46e5-8f-00-bd-6f-2b-c8-ab-1d')
    @commethod(7)
    def SetPosition(x: Single, y: Single, z: Single) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def SetVolume(volume: Single) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectBase(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('cce0b8f2-8d4d-4efb-a8-cf-3d-6e-cf-1c-30-e0')
    @commethod(3)
    def GetBuffer(buffer: POINTER(c_char_p_no), bufferLength: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetEndOfStream(frameCount: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def IsActive(isActive: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetAudioObjectType(audioObjectType: POINTER(win32more.Media.Audio.AudioObjectType)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectForHrtf(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioObjectBase
    Guid = Guid('d7436ade-1978-4e14-ab-a0-55-5b-d8-eb-83-b4')
    @commethod(7)
    def SetPosition(x: Single, y: Single, z: Single) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def SetGain(gain: Single) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def SetOrientation(orientation: POINTER(POINTER(Single))) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def SetEnvironment(environment: win32more.Media.Audio.SpatialAudioHrtfEnvironmentType) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def SetDistanceDecay(distanceDecay: POINTER(win32more.Media.Audio.SpatialAudioHrtfDistanceDecay_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def SetDirectivity(directivity: POINTER(win32more.Media.Audio.SpatialAudioHrtfDirectivityUnion_head)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectForMetadataCommands(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioObjectBase
    Guid = Guid('0df2c94b-f5f9-472d-af-6b-c4-6e-0a-c9-cd-05')
    @commethod(7)
    def WriteNextMetadataCommand(commandID: Byte, valueBuffer: c_void_p, valueBufferLength: UInt32) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectForMetadataItems(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioObjectBase
    Guid = Guid('ddea49ff-3bc0-4377-8a-ad-9f-bc-fd-80-85-66')
    @commethod(7)
    def GetSpatialAudioMetadataItems(metadataItems: POINTER(win32more.Media.Audio.ISpatialAudioMetadataItems_head)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectRenderStream(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioObjectRenderStreamBase
    Guid = Guid('bab5f473-b423-477b-85-f5-b5-a3-32-a0-41-53')
    @commethod(10)
    def ActivateSpatialAudioObject(type: win32more.Media.Audio.AudioObjectType, audioObject: POINTER(win32more.Media.Audio.ISpatialAudioObject_head)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectRenderStreamBase(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('feaaf403-c1d8-450d-aa-05-e0-cc-ee-75-02-a8')
    @commethod(3)
    def GetAvailableDynamicObjectCount(value: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetService(riid: POINTER(Guid), service: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Start() -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Stop() -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def Reset() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def BeginUpdatingAudioObjects(availableDynamicObjectCount: POINTER(UInt32), frameCountPerBuffer: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def EndUpdatingAudioObjects() -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectRenderStreamForHrtf(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioObjectRenderStreamBase
    Guid = Guid('e08deef9-5363-406e-9f-dc-08-0e-e2-47-bb-e0')
    @commethod(10)
    def ActivateSpatialAudioObjectForHrtf(type: win32more.Media.Audio.AudioObjectType, audioObject: POINTER(win32more.Media.Audio.ISpatialAudioObjectForHrtf_head)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectRenderStreamForMetadata(c_void_p):
    extends: win32more.Media.Audio.ISpatialAudioObjectRenderStreamBase
    Guid = Guid('bbc9c907-48d5-4a2e-a0-c7-f7-f0-d6-7c-1f-b1')
    @commethod(10)
    def ActivateSpatialAudioObjectForMetadataCommands(type: win32more.Media.Audio.AudioObjectType, audioObject: POINTER(win32more.Media.Audio.ISpatialAudioObjectForMetadataCommands_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def ActivateSpatialAudioObjectForMetadataItems(type: win32more.Media.Audio.AudioObjectType, audioObject: POINTER(win32more.Media.Audio.ISpatialAudioObjectForMetadataItems_head)) -> win32more.Foundation.HRESULT: ...
class ISpatialAudioObjectRenderStreamNotify(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('dddf83e6-68d7-4c70-88-3f-a1-83-6a-fb-4a-50')
    @commethod(3)
    def OnAvailableDynamicObjectCountChange(sender: win32more.Media.Audio.ISpatialAudioObjectRenderStreamBase_head, hnsComplianceDeadlineTime: Int64, availableDynamicObjectCountChange: UInt32) -> win32more.Foundation.HRESULT: ...
class ISubunit(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('82149a85-dba6-4487-86-bb-ea-8f-7f-ef-cc-71')
@winfunctype_pointer
def LPACMDRIVERPROC(param0: UIntPtr, param1: win32more.Media.Audio.HACMDRIVERID, param2: UInt32, param3: win32more.Foundation.LPARAM, param4: win32more.Foundation.LPARAM) -> win32more.Foundation.LRESULT: ...
@winfunctype_pointer
def LPMIDICALLBACK(hdrvr: win32more.Media.Multimedia.HDRVR, uMsg: UInt32, dwUser: UIntPtr, dw1: UIntPtr, dw2: UIntPtr) -> Void: ...
@winfunctype_pointer
def LPWAVECALLBACK(hdrvr: win32more.Media.Multimedia.HDRVR, uMsg: UInt32, dwUser: UIntPtr, dw1: UIntPtr, dw2: UIntPtr) -> Void: ...
MIDI_WAVE_OPEN_TYPE = UInt32
CALLBACK_TYPEMASK: MIDI_WAVE_OPEN_TYPE = 458752
CALLBACK_NULL: MIDI_WAVE_OPEN_TYPE = 0
CALLBACK_WINDOW: MIDI_WAVE_OPEN_TYPE = 65536
CALLBACK_TASK: MIDI_WAVE_OPEN_TYPE = 131072
CALLBACK_FUNCTION: MIDI_WAVE_OPEN_TYPE = 196608
CALLBACK_THREAD: MIDI_WAVE_OPEN_TYPE = 131072
CALLBACK_EVENT: MIDI_WAVE_OPEN_TYPE = 327680
WAVE_FORMAT_QUERY: MIDI_WAVE_OPEN_TYPE = 1
WAVE_ALLOWSYNC: MIDI_WAVE_OPEN_TYPE = 2
WAVE_MAPPED: MIDI_WAVE_OPEN_TYPE = 4
WAVE_FORMAT_DIRECT: MIDI_WAVE_OPEN_TYPE = 8
WAVE_FORMAT_DIRECT_QUERY: MIDI_WAVE_OPEN_TYPE = 9
WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE: MIDI_WAVE_OPEN_TYPE = 16
MIDI_IO_STATUS: MIDI_WAVE_OPEN_TYPE = 32
class MIDIEVENT(Structure):
    dwDeltaTime: UInt32
    dwStreamID: UInt32
    dwEvent: UInt32
    dwParms: UInt32 * 1
    _pack_ = 1
class MIDIHDR(Structure):
    lpData: win32more.Foundation.PSTR
    dwBufferLength: UInt32
    dwBytesRecorded: UInt32
    dwUser: UIntPtr
    dwFlags: UInt32
    lpNext: POINTER(win32more.Media.Audio.MIDIHDR_head)
    reserved: UIntPtr
    dwOffset: UInt32
    dwReserved: UIntPtr * 8
    _pack_ = 1
class MIDIINCAPS2A(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class MIDIINCAPS2W(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class MIDIINCAPSA(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    dwSupport: UInt32
    _pack_ = 1
class MIDIINCAPSW(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    dwSupport: UInt32
    _pack_ = 1
class MIDIOUTCAPS2A(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    wTechnology: UInt16
    wVoices: UInt16
    wNotes: UInt16
    wChannelMask: UInt16
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class MIDIOUTCAPS2W(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    wTechnology: UInt16
    wVoices: UInt16
    wNotes: UInt16
    wChannelMask: UInt16
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class MIDIOUTCAPSA(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    wTechnology: UInt16
    wVoices: UInt16
    wNotes: UInt16
    wChannelMask: UInt16
    dwSupport: UInt32
    _pack_ = 1
class MIDIOUTCAPSW(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    wTechnology: UInt16
    wVoices: UInt16
    wNotes: UInt16
    wChannelMask: UInt16
    dwSupport: UInt32
    _pack_ = 1
class MIDIPROPTEMPO(Structure):
    cbStruct: UInt32
    dwTempo: UInt32
    _pack_ = 1
class MIDIPROPTIMEDIV(Structure):
    cbStruct: UInt32
    dwTimeDiv: UInt32
    _pack_ = 1
class MIDISTRMBUFFVER(Structure):
    dwVersion: UInt32
    dwMid: UInt32
    dwOEMVersion: UInt32
    _pack_ = 1
class MIXERCAPS2A(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    fdwSupport: UInt32
    cDestinations: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class MIXERCAPS2W(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    fdwSupport: UInt32
    cDestinations: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class MIXERCAPSA(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    fdwSupport: UInt32
    cDestinations: UInt32
    _pack_ = 1
class MIXERCAPSW(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    fdwSupport: UInt32
    cDestinations: UInt32
    _pack_ = 1
class MIXERCONTROLA(Structure):
    cbStruct: UInt32
    dwControlID: UInt32
    dwControlType: UInt32
    fdwControl: UInt32
    cMultipleItems: UInt32
    szShortName: win32more.Foundation.CHAR * 16
    szName: win32more.Foundation.CHAR * 64
    Bounds: _Bounds_e__Union
    Metrics: _Metrics_e__Union
    _pack_ = 1
    class _Bounds_e__Union(Union):
        Anonymous1: _Anonymous1_e__Struct
        Anonymous2: _Anonymous2_e__Struct
        dwReserved: UInt32 * 6
        _pack_ = 1
        class _Anonymous1_e__Struct(Structure):
            lMinimum: Int32
            lMaximum: Int32
            _pack_ = 1
        class _Anonymous2_e__Struct(Structure):
            dwMinimum: UInt32
            dwMaximum: UInt32
            _pack_ = 1
    class _Metrics_e__Union(Union):
        cSteps: UInt32
        cbCustomData: UInt32
        dwReserved: UInt32 * 6
        _pack_ = 1
class MIXERCONTROLDETAILS(Structure):
    cbStruct: UInt32
    dwControlID: UInt32
    cChannels: UInt32
    Anonymous: _Anonymous_e__Union
    cbDetails: UInt32
    paDetails: c_void_p
    _pack_ = 1
    class _Anonymous_e__Union(Union):
        hwndOwner: win32more.Foundation.HWND
        cMultipleItems: UInt32
        _pack_ = 1
class MIXERCONTROLDETAILS_BOOLEAN(Structure):
    fValue: Int32
    _pack_ = 1
class MIXERCONTROLDETAILS_LISTTEXTA(Structure):
    dwParam1: UInt32
    dwParam2: UInt32
    szName: win32more.Foundation.CHAR * 64
    _pack_ = 1
class MIXERCONTROLDETAILS_LISTTEXTW(Structure):
    dwParam1: UInt32
    dwParam2: UInt32
    szName: Char * 64
    _pack_ = 1
class MIXERCONTROLDETAILS_SIGNED(Structure):
    lValue: Int32
    _pack_ = 1
class MIXERCONTROLDETAILS_UNSIGNED(Structure):
    dwValue: UInt32
    _pack_ = 1
class MIXERCONTROLW(Structure):
    cbStruct: UInt32
    dwControlID: UInt32
    dwControlType: UInt32
    fdwControl: UInt32
    cMultipleItems: UInt32
    szShortName: Char * 16
    szName: Char * 64
    Bounds: _Bounds_e__Union
    Metrics: _Metrics_e__Union
    _pack_ = 1
    class _Bounds_e__Union(Union):
        Anonymous1: _Anonymous1_e__Struct
        Anonymous2: _Anonymous2_e__Struct
        dwReserved: UInt32 * 6
        _pack_ = 1
        class _Anonymous1_e__Struct(Structure):
            lMinimum: Int32
            lMaximum: Int32
            _pack_ = 1
        class _Anonymous2_e__Struct(Structure):
            dwMinimum: UInt32
            dwMaximum: UInt32
            _pack_ = 1
    class _Metrics_e__Union(Union):
        cSteps: UInt32
        cbCustomData: UInt32
        dwReserved: UInt32 * 6
        _pack_ = 1
MIXERLINE_COMPONENTTYPE = UInt32
MIXERLINE_COMPONENTTYPE_DST_DIGITAL: MIXERLINE_COMPONENTTYPE = 1
MIXERLINE_COMPONENTTYPE_DST_HEADPHONES: MIXERLINE_COMPONENTTYPE = 5
MIXERLINE_COMPONENTTYPE_DST_LINE: MIXERLINE_COMPONENTTYPE = 2
MIXERLINE_COMPONENTTYPE_DST_MONITOR: MIXERLINE_COMPONENTTYPE = 3
MIXERLINE_COMPONENTTYPE_DST_SPEAKERS: MIXERLINE_COMPONENTTYPE = 4
MIXERLINE_COMPONENTTYPE_DST_TELEPHONE: MIXERLINE_COMPONENTTYPE = 6
MIXERLINE_COMPONENTTYPE_DST_UNDEFINED: MIXERLINE_COMPONENTTYPE = 0
MIXERLINE_COMPONENTTYPE_DST_VOICEIN: MIXERLINE_COMPONENTTYPE = 8
MIXERLINE_COMPONENTTYPE_DST_WAVEIN: MIXERLINE_COMPONENTTYPE = 7
MIXERLINE_COMPONENTTYPE_SRC_ANALOG: MIXERLINE_COMPONENTTYPE = 4106
MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY: MIXERLINE_COMPONENTTYPE = 4105
MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC: MIXERLINE_COMPONENTTYPE = 4101
MIXERLINE_COMPONENTTYPE_SRC_DIGITAL: MIXERLINE_COMPONENTTYPE = 4097
MIXERLINE_COMPONENTTYPE_SRC_LINE: MIXERLINE_COMPONENTTYPE = 4098
MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE: MIXERLINE_COMPONENTTYPE = 4099
MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER: MIXERLINE_COMPONENTTYPE = 4103
MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER: MIXERLINE_COMPONENTTYPE = 4100
MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE: MIXERLINE_COMPONENTTYPE = 4102
MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED: MIXERLINE_COMPONENTTYPE = 4096
MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT: MIXERLINE_COMPONENTTYPE = 4104
class MIXERLINEA(Structure):
    cbStruct: UInt32
    dwDestination: UInt32
    dwSource: UInt32
    dwLineID: UInt32
    fdwLine: UInt32
    dwUser: UIntPtr
    dwComponentType: win32more.Media.Audio.MIXERLINE_COMPONENTTYPE
    cChannels: UInt32
    cConnections: UInt32
    cControls: UInt32
    szShortName: win32more.Foundation.CHAR * 16
    szName: win32more.Foundation.CHAR * 64
    Target: _Target_e__Struct
    _pack_ = 1
    class _Target_e__Struct(Structure):
        dwType: UInt32
        dwDeviceID: UInt32
        wMid: UInt16
        wPid: UInt16
        vDriverVersion: UInt32
        szPname: win32more.Foundation.CHAR * 32
        _pack_ = 1
class MIXERLINECONTROLSA(Structure):
    cbStruct: UInt32
    dwLineID: UInt32
    Anonymous: _Anonymous_e__Union
    cControls: UInt32
    cbmxctrl: UInt32
    pamxctrl: POINTER(win32more.Media.Audio.MIXERCONTROLA_head)
    _pack_ = 1
    class _Anonymous_e__Union(Union):
        dwControlID: UInt32
        dwControlType: UInt32
        _pack_ = 1
class MIXERLINECONTROLSW(Structure):
    cbStruct: UInt32
    dwLineID: UInt32
    Anonymous: _Anonymous_e__Union
    cControls: UInt32
    cbmxctrl: UInt32
    pamxctrl: POINTER(win32more.Media.Audio.MIXERCONTROLW_head)
    _pack_ = 1
    class _Anonymous_e__Union(Union):
        dwControlID: UInt32
        dwControlType: UInt32
        _pack_ = 1
class MIXERLINEW(Structure):
    cbStruct: UInt32
    dwDestination: UInt32
    dwSource: UInt32
    dwLineID: UInt32
    fdwLine: UInt32
    dwUser: UIntPtr
    dwComponentType: win32more.Media.Audio.MIXERLINE_COMPONENTTYPE
    cChannels: UInt32
    cConnections: UInt32
    cControls: UInt32
    szShortName: Char * 16
    szName: Char * 64
    Target: _Target_e__Struct
    _pack_ = 1
    class _Target_e__Struct(Structure):
        dwType: UInt32
        dwDeviceID: UInt32
        wMid: UInt16
        wPid: UInt16
        vDriverVersion: UInt32
        szPname: Char * 32
        _pack_ = 1
MMDeviceEnumerator = Guid('bcde0395-e52f-467c-8e-3d-c4-57-92-91-69-2e')
PartType = Int32
PartType_Connector: PartType = 0
PartType_Subunit: PartType = 1
@winfunctype_pointer
def PAudioStateMonitorCallback(audioStateMonitor: win32more.Media.Audio.IAudioStateMonitor_head, context: c_void_p) -> Void: ...
class PCMWAVEFORMAT(Structure):
    wf: win32more.Media.Audio.WAVEFORMAT
    wBitsPerSample: UInt16
    _pack_ = 1
PROCESS_LOOPBACK_MODE = Int32
PROCESS_LOOPBACK_MODE_INCLUDE_TARGET_PROCESS_TREE: PROCESS_LOOPBACK_MODE = 0
PROCESS_LOOPBACK_MODE_EXCLUDE_TARGET_PROCESS_TREE: PROCESS_LOOPBACK_MODE = 1
SND_FLAGS = UInt32
SND_APPLICATION: SND_FLAGS = 128
SND_ALIAS: SND_FLAGS = 65536
SND_ALIAS_ID: SND_FLAGS = 1114112
SND_FILENAME: SND_FLAGS = 131072
SND_RESOURCE: SND_FLAGS = 262148
SND_ASYNC: SND_FLAGS = 1
SND_NODEFAULT: SND_FLAGS = 2
SND_LOOP: SND_FLAGS = 8
SND_MEMORY: SND_FLAGS = 4
SND_NOSTOP: SND_FLAGS = 16
SND_NOWAIT: SND_FLAGS = 8192
SND_PURGE: SND_FLAGS = 64
SND_SENTRY: SND_FLAGS = 524288
SND_SYNC: SND_FLAGS = 0
SND_SYSTEM: SND_FLAGS = 2097152
SPATIAL_AUDIO_STREAM_OPTIONS = UInt32
SPATIAL_AUDIO_STREAM_OPTIONS_NONE: SPATIAL_AUDIO_STREAM_OPTIONS = 0
SPATIAL_AUDIO_STREAM_OPTIONS_OFFLOAD: SPATIAL_AUDIO_STREAM_OPTIONS = 1
class SpatialAudioClientActivationParams(Structure):
    tracingContextId: Guid
    appId: Guid
    majorVersion: Int32
    minorVersion1: Int32
    minorVersion2: Int32
    minorVersion3: Int32
class SpatialAudioHrtfActivationParams(Structure):
    ObjectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    StaticObjectTypeMask: win32more.Media.Audio.AudioObjectType
    MinDynamicObjectCount: UInt32
    MaxDynamicObjectCount: UInt32
    Category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY
    EventHandle: win32more.Foundation.HANDLE
    NotifyObject: win32more.Media.Audio.ISpatialAudioObjectRenderStreamNotify_head
    DistanceDecay: POINTER(win32more.Media.Audio.SpatialAudioHrtfDistanceDecay_head)
    Directivity: POINTER(win32more.Media.Audio.SpatialAudioHrtfDirectivityUnion_head)
    Environment: POINTER(win32more.Media.Audio.SpatialAudioHrtfEnvironmentType)
    Orientation: POINTER(Single)
    _pack_ = 1
class SpatialAudioHrtfActivationParams2(Structure):
    ObjectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    StaticObjectTypeMask: win32more.Media.Audio.AudioObjectType
    MinDynamicObjectCount: UInt32
    MaxDynamicObjectCount: UInt32
    Category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY
    EventHandle: win32more.Foundation.HANDLE
    NotifyObject: win32more.Media.Audio.ISpatialAudioObjectRenderStreamNotify_head
    DistanceDecay: POINTER(win32more.Media.Audio.SpatialAudioHrtfDistanceDecay_head)
    Directivity: POINTER(win32more.Media.Audio.SpatialAudioHrtfDirectivityUnion_head)
    Environment: POINTER(win32more.Media.Audio.SpatialAudioHrtfEnvironmentType)
    Orientation: POINTER(Single)
    Options: win32more.Media.Audio.SPATIAL_AUDIO_STREAM_OPTIONS
    _pack_ = 1
class SpatialAudioHrtfDirectivity(Structure):
    Type: win32more.Media.Audio.SpatialAudioHrtfDirectivityType
    Scaling: Single
    _pack_ = 1
class SpatialAudioHrtfDirectivityCardioid(Structure):
    directivity: win32more.Media.Audio.SpatialAudioHrtfDirectivity
    Order: Single
    _pack_ = 1
class SpatialAudioHrtfDirectivityCone(Structure):
    directivity: win32more.Media.Audio.SpatialAudioHrtfDirectivity
    InnerAngle: Single
    OuterAngle: Single
    _pack_ = 1
SpatialAudioHrtfDirectivityType = Int32
SpatialAudioHrtfDirectivity_OmniDirectional: SpatialAudioHrtfDirectivityType = 0
SpatialAudioHrtfDirectivity_Cardioid: SpatialAudioHrtfDirectivityType = 1
SpatialAudioHrtfDirectivity_Cone: SpatialAudioHrtfDirectivityType = 2
class SpatialAudioHrtfDirectivityUnion(Union):
    Cone: win32more.Media.Audio.SpatialAudioHrtfDirectivityCone
    Cardiod: win32more.Media.Audio.SpatialAudioHrtfDirectivityCardioid
    Omni: win32more.Media.Audio.SpatialAudioHrtfDirectivity
class SpatialAudioHrtfDistanceDecay(Structure):
    Type: win32more.Media.Audio.SpatialAudioHrtfDistanceDecayType
    MaxGain: Single
    MinGain: Single
    UnityGainDistance: Single
    CutoffDistance: Single
    _pack_ = 1
SpatialAudioHrtfDistanceDecayType = Int32
SpatialAudioHrtfDistanceDecay_NaturalDecay: SpatialAudioHrtfDistanceDecayType = 0
SpatialAudioHrtfDistanceDecay_CustomDecay: SpatialAudioHrtfDistanceDecayType = 1
SpatialAudioHrtfEnvironmentType = Int32
SpatialAudioHrtfEnvironment_Small: SpatialAudioHrtfEnvironmentType = 0
SpatialAudioHrtfEnvironment_Medium: SpatialAudioHrtfEnvironmentType = 1
SpatialAudioHrtfEnvironment_Large: SpatialAudioHrtfEnvironmentType = 2
SpatialAudioHrtfEnvironment_Outdoors: SpatialAudioHrtfEnvironmentType = 3
SpatialAudioHrtfEnvironment_Average: SpatialAudioHrtfEnvironmentType = 4
SpatialAudioMetadataCopyMode = Int32
SpatialAudioMetadataCopy_Overwrite: SpatialAudioMetadataCopyMode = 0
SpatialAudioMetadataCopy_Append: SpatialAudioMetadataCopyMode = 1
SpatialAudioMetadataCopy_AppendMergeWithLast: SpatialAudioMetadataCopyMode = 2
SpatialAudioMetadataCopy_AppendMergeWithFirst: SpatialAudioMetadataCopyMode = 3
class SpatialAudioMetadataItemsInfo(Structure):
    FrameCount: UInt16
    ItemCount: UInt16
    MaxItemCount: UInt16
    MaxValueBufferLength: UInt32
    _pack_ = 1
SpatialAudioMetadataWriterOverflowMode = Int32
SpatialAudioMetadataWriterOverflow_Fail: SpatialAudioMetadataWriterOverflowMode = 0
SpatialAudioMetadataWriterOverflow_MergeWithNew: SpatialAudioMetadataWriterOverflowMode = 1
SpatialAudioMetadataWriterOverflow_MergeWithLast: SpatialAudioMetadataWriterOverflowMode = 2
class SpatialAudioObjectRenderStreamActivationParams(Structure):
    ObjectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    StaticObjectTypeMask: win32more.Media.Audio.AudioObjectType
    MinDynamicObjectCount: UInt32
    MaxDynamicObjectCount: UInt32
    Category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY
    EventHandle: win32more.Foundation.HANDLE
    NotifyObject: win32more.Media.Audio.ISpatialAudioObjectRenderStreamNotify_head
    _pack_ = 1
class SpatialAudioObjectRenderStreamActivationParams2(Structure):
    ObjectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    StaticObjectTypeMask: win32more.Media.Audio.AudioObjectType
    MinDynamicObjectCount: UInt32
    MaxDynamicObjectCount: UInt32
    Category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY
    EventHandle: win32more.Foundation.HANDLE
    NotifyObject: win32more.Media.Audio.ISpatialAudioObjectRenderStreamNotify_head
    Options: win32more.Media.Audio.SPATIAL_AUDIO_STREAM_OPTIONS
    _pack_ = 1
class SpatialAudioObjectRenderStreamForMetadataActivationParams(Structure):
    ObjectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    StaticObjectTypeMask: win32more.Media.Audio.AudioObjectType
    MinDynamicObjectCount: UInt32
    MaxDynamicObjectCount: UInt32
    Category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY
    EventHandle: win32more.Foundation.HANDLE
    MetadataFormatId: Guid
    MaxMetadataItemCount: UInt16
    MetadataActivationParams: POINTER(win32more.System.Com.StructuredStorage.PROPVARIANT_head)
    NotifyObject: win32more.Media.Audio.ISpatialAudioObjectRenderStreamNotify_head
    _pack_ = 1
class SpatialAudioObjectRenderStreamForMetadataActivationParams2(Structure):
    ObjectFormat: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    StaticObjectTypeMask: win32more.Media.Audio.AudioObjectType
    MinDynamicObjectCount: UInt32
    MaxDynamicObjectCount: UInt32
    Category: win32more.Media.Audio.AUDIO_STREAM_CATEGORY
    EventHandle: win32more.Foundation.HANDLE
    MetadataFormatId: Guid
    MaxMetadataItemCount: UInt32
    MetadataActivationParams: POINTER(win32more.System.Com.StructuredStorage.PROPVARIANT_head)
    NotifyObject: win32more.Media.Audio.ISpatialAudioObjectRenderStreamNotify_head
    Options: win32more.Media.Audio.SPATIAL_AUDIO_STREAM_OPTIONS
    _pack_ = 1
class tACMFORMATDETAILSW(Structure):
    cbStruct: UInt32
    dwFormatIndex: UInt32
    dwFormatTag: UInt32
    fdwSupport: UInt32
    pwfx: POINTER(win32more.Media.Audio.WAVEFORMATEX_head)
    cbwfx: UInt32
    szFormat: Char * 128
    _pack_ = 1
class VOLUMEWAVEFILTER(Structure):
    wfltr: win32more.Media.Audio.WAVEFILTER
    dwVolume: UInt32
    _pack_ = 1
class WAVEFILTER(Structure):
    cbStruct: UInt32
    dwFilterTag: UInt32
    fdwFilter: UInt32
    dwReserved: UInt32 * 5
    _pack_ = 1
class WAVEFORMAT(Structure):
    wFormatTag: UInt16
    nChannels: UInt16
    nSamplesPerSec: UInt32
    nAvgBytesPerSec: UInt32
    nBlockAlign: UInt16
    _pack_ = 1
class WAVEFORMATEX(Structure):
    wFormatTag: UInt16
    nChannels: UInt16
    nSamplesPerSec: UInt32
    nAvgBytesPerSec: UInt32
    nBlockAlign: UInt16
    wBitsPerSample: UInt16
    cbSize: UInt16
    _pack_ = 1
class WAVEFORMATEXTENSIBLE(Structure):
    Format: win32more.Media.Audio.WAVEFORMATEX
    Samples: _Samples_e__Union
    dwChannelMask: UInt32
    SubFormat: Guid
    _pack_ = 1
    class _Samples_e__Union(Union):
        wValidBitsPerSample: UInt16
        wSamplesPerBlock: UInt16
        wReserved: UInt16
        _pack_ = 1
class WAVEHDR(Structure):
    lpData: win32more.Foundation.PSTR
    dwBufferLength: UInt32
    dwBytesRecorded: UInt32
    dwUser: UIntPtr
    dwFlags: UInt32
    dwLoops: UInt32
    lpNext: POINTER(win32more.Media.Audio.WAVEHDR_head)
    reserved: UIntPtr
    _pack_ = 1
class WAVEINCAPS2A(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class WAVEINCAPS2W(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class WAVEINCAPSA(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    _pack_ = 1
class WAVEINCAPSW(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    _pack_ = 1
class WAVEOUTCAPS2A(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class WAVEOUTCAPS2W(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    ManufacturerGuid: Guid
    ProductGuid: Guid
    NameGuid: Guid
    _pack_ = 1
class WAVEOUTCAPSA(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: win32more.Foundation.CHAR * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    _pack_ = 1
class WAVEOUTCAPSW(Structure):
    wMid: UInt16
    wPid: UInt16
    vDriverVersion: UInt32
    szPname: Char * 32
    dwFormats: UInt32
    wChannels: UInt16
    wReserved1: UInt16
    dwSupport: UInt32
    _pack_ = 1
make_head(_module, 'ACMDRIVERDETAILSA')
make_head(_module, 'ACMDRIVERDETAILSW')
make_head(_module, 'ACMDRIVERENUMCB')
make_head(_module, 'ACMDRVFORMATSUGGEST')
make_head(_module, 'ACMDRVOPENDESCA')
make_head(_module, 'ACMDRVOPENDESCW')
make_head(_module, 'ACMDRVSTREAMHEADER')
make_head(_module, 'ACMDRVSTREAMINSTANCE')
make_head(_module, 'ACMDRVSTREAMSIZE')
make_head(_module, 'ACMFILTERCHOOSEA')
make_head(_module, 'ACMFILTERCHOOSEHOOKPROCA')
make_head(_module, 'ACMFILTERCHOOSEHOOKPROCW')
make_head(_module, 'ACMFILTERCHOOSEW')
make_head(_module, 'ACMFILTERDETAILSA')
make_head(_module, 'ACMFILTERDETAILSW')
make_head(_module, 'ACMFILTERENUMCBA')
make_head(_module, 'ACMFILTERENUMCBW')
make_head(_module, 'ACMFILTERTAGDETAILSA')
make_head(_module, 'ACMFILTERTAGDETAILSW')
make_head(_module, 'ACMFILTERTAGENUMCBA')
make_head(_module, 'ACMFILTERTAGENUMCBW')
make_head(_module, 'ACMFORMATCHOOSEA')
make_head(_module, 'ACMFORMATCHOOSEHOOKPROCA')
make_head(_module, 'ACMFORMATCHOOSEHOOKPROCW')
make_head(_module, 'ACMFORMATCHOOSEW')
make_head(_module, 'ACMFORMATDETAILSA')
make_head(_module, 'ACMFORMATENUMCBA')
make_head(_module, 'ACMFORMATENUMCBW')
make_head(_module, 'ACMFORMATTAGDETAILSA')
make_head(_module, 'ACMFORMATTAGDETAILSW')
make_head(_module, 'ACMFORMATTAGENUMCBA')
make_head(_module, 'ACMFORMATTAGENUMCBW')
make_head(_module, 'ACMSTREAMHEADER')
make_head(_module, 'AMBISONICS_PARAMS')
make_head(_module, 'PKEY_AudioEndpoint_FormFactor')
make_head(_module, 'PKEY_AudioEndpoint_ControlPanelPageProvider')
make_head(_module, 'PKEY_AudioEndpoint_Association')
make_head(_module, 'PKEY_AudioEndpoint_PhysicalSpeakers')
make_head(_module, 'PKEY_AudioEndpoint_GUID')
make_head(_module, 'PKEY_AudioEndpoint_Disable_SysFx')
make_head(_module, 'PKEY_AudioEndpoint_FullRangeSpeakers')
make_head(_module, 'PKEY_AudioEndpoint_Supports_EventDriven_Mode')
make_head(_module, 'PKEY_AudioEndpoint_JackSubType')
make_head(_module, 'PKEY_AudioEndpoint_Default_VolumeInDb')
make_head(_module, 'PKEY_AudioEngine_DeviceFormat')
make_head(_module, 'PKEY_AudioEngine_OEMFormat')
make_head(_module, 'PKEY_AudioEndpointLogo_IconEffects')
make_head(_module, 'PKEY_AudioEndpointLogo_IconPath')
make_head(_module, 'PKEY_AudioEndpointSettings_MenuText')
make_head(_module, 'PKEY_AudioEndpointSettings_LaunchContract')
make_head(_module, 'AUDIO_EFFECT')
make_head(_module, 'AUDIO_VOLUME_NOTIFICATION_DATA')
make_head(_module, 'AUDIOCLIENT_ACTIVATION_PARAMS')
make_head(_module, 'AUDIOCLIENT_PROCESS_LOOPBACK_PARAMS')
make_head(_module, 'AudioClient3ActivationParams')
make_head(_module, 'AudioClientProperties')
make_head(_module, 'AudioExtensionParams')
make_head(_module, 'AUXCAPS2A')
make_head(_module, 'AUXCAPS2W')
make_head(_module, 'AUXCAPSA')
make_head(_module, 'AUXCAPSW')
make_head(_module, 'DIRECTX_AUDIO_ACTIVATION_PARAMS')
make_head(_module, 'ECHOWAVEFILTER')
make_head(_module, 'IActivateAudioInterfaceAsyncOperation')
make_head(_module, 'IActivateAudioInterfaceCompletionHandler')
make_head(_module, 'IAudioAmbisonicsControl')
make_head(_module, 'IAudioAutoGainControl')
make_head(_module, 'IAudioBass')
make_head(_module, 'IAudioCaptureClient')
make_head(_module, 'IAudioChannelConfig')
make_head(_module, 'IAudioClient')
make_head(_module, 'IAudioClient2')
make_head(_module, 'IAudioClient3')
make_head(_module, 'IAudioClientDuckingControl')
make_head(_module, 'IAudioClock')
make_head(_module, 'IAudioClock2')
make_head(_module, 'IAudioClockAdjustment')
make_head(_module, 'IAudioEffectsChangedNotificationClient')
make_head(_module, 'IAudioEffectsManager')
make_head(_module, 'IAudioFormatEnumerator')
make_head(_module, 'IAudioInputSelector')
make_head(_module, 'IAudioLoudness')
make_head(_module, 'IAudioMidrange')
make_head(_module, 'IAudioMute')
make_head(_module, 'IAudioOutputSelector')
make_head(_module, 'IAudioPeakMeter')
make_head(_module, 'IAudioRenderClient')
make_head(_module, 'IAudioSessionControl')
make_head(_module, 'IAudioSessionControl2')
make_head(_module, 'IAudioSessionEnumerator')
make_head(_module, 'IAudioSessionEvents')
make_head(_module, 'IAudioSessionManager')
make_head(_module, 'IAudioSessionManager2')
make_head(_module, 'IAudioSessionNotification')
make_head(_module, 'IAudioStateMonitor')
make_head(_module, 'IAudioStreamVolume')
make_head(_module, 'IAudioSystemEffectsPropertyChangeNotificationClient')
make_head(_module, 'IAudioSystemEffectsPropertyStore')
make_head(_module, 'IAudioTreble')
make_head(_module, 'IAudioVolumeDuckNotification')
make_head(_module, 'IAudioVolumeLevel')
make_head(_module, 'IChannelAudioVolume')
make_head(_module, 'IConnector')
make_head(_module, 'IControlChangeNotify')
make_head(_module, 'IControlInterface')
make_head(_module, 'IDeviceSpecificProperty')
make_head(_module, 'IDeviceTopology')
make_head(_module, 'IMessageFilter')
make_head(_module, 'IMMDevice')
make_head(_module, 'IMMDeviceActivator')
make_head(_module, 'IMMDeviceCollection')
make_head(_module, 'IMMDeviceEnumerator')
make_head(_module, 'IMMEndpoint')
make_head(_module, 'IMMNotificationClient')
make_head(_module, 'IPart')
make_head(_module, 'IPartsList')
make_head(_module, 'IPerChannelDbLevel')
make_head(_module, 'ISimpleAudioVolume')
make_head(_module, 'ISpatialAudioClient')
make_head(_module, 'ISpatialAudioClient2')
make_head(_module, 'ISpatialAudioMetadataClient')
make_head(_module, 'ISpatialAudioMetadataCopier')
make_head(_module, 'ISpatialAudioMetadataItems')
make_head(_module, 'ISpatialAudioMetadataItemsBuffer')
make_head(_module, 'ISpatialAudioMetadataReader')
make_head(_module, 'ISpatialAudioMetadataWriter')
make_head(_module, 'ISpatialAudioObject')
make_head(_module, 'ISpatialAudioObjectBase')
make_head(_module, 'ISpatialAudioObjectForHrtf')
make_head(_module, 'ISpatialAudioObjectForMetadataCommands')
make_head(_module, 'ISpatialAudioObjectForMetadataItems')
make_head(_module, 'ISpatialAudioObjectRenderStream')
make_head(_module, 'ISpatialAudioObjectRenderStreamBase')
make_head(_module, 'ISpatialAudioObjectRenderStreamForHrtf')
make_head(_module, 'ISpatialAudioObjectRenderStreamForMetadata')
make_head(_module, 'ISpatialAudioObjectRenderStreamNotify')
make_head(_module, 'ISubunit')
make_head(_module, 'LPACMDRIVERPROC')
make_head(_module, 'LPMIDICALLBACK')
make_head(_module, 'LPWAVECALLBACK')
make_head(_module, 'MIDIEVENT')
make_head(_module, 'MIDIHDR')
make_head(_module, 'MIDIINCAPS2A')
make_head(_module, 'MIDIINCAPS2W')
make_head(_module, 'MIDIINCAPSA')
make_head(_module, 'MIDIINCAPSW')
make_head(_module, 'MIDIOUTCAPS2A')
make_head(_module, 'MIDIOUTCAPS2W')
make_head(_module, 'MIDIOUTCAPSA')
make_head(_module, 'MIDIOUTCAPSW')
make_head(_module, 'MIDIPROPTEMPO')
make_head(_module, 'MIDIPROPTIMEDIV')
make_head(_module, 'MIDISTRMBUFFVER')
make_head(_module, 'MIXERCAPS2A')
make_head(_module, 'MIXERCAPS2W')
make_head(_module, 'MIXERCAPSA')
make_head(_module, 'MIXERCAPSW')
make_head(_module, 'MIXERCONTROLA')
make_head(_module, 'MIXERCONTROLDETAILS')
make_head(_module, 'MIXERCONTROLDETAILS_BOOLEAN')
make_head(_module, 'MIXERCONTROLDETAILS_LISTTEXTA')
make_head(_module, 'MIXERCONTROLDETAILS_LISTTEXTW')
make_head(_module, 'MIXERCONTROLDETAILS_SIGNED')
make_head(_module, 'MIXERCONTROLDETAILS_UNSIGNED')
make_head(_module, 'MIXERCONTROLW')
make_head(_module, 'MIXERLINEA')
make_head(_module, 'MIXERLINECONTROLSA')
make_head(_module, 'MIXERLINECONTROLSW')
make_head(_module, 'MIXERLINEW')
make_head(_module, 'PAudioStateMonitorCallback')
make_head(_module, 'PCMWAVEFORMAT')
make_head(_module, 'SpatialAudioClientActivationParams')
make_head(_module, 'SpatialAudioHrtfActivationParams')
make_head(_module, 'SpatialAudioHrtfActivationParams2')
make_head(_module, 'SpatialAudioHrtfDirectivity')
make_head(_module, 'SpatialAudioHrtfDirectivityCardioid')
make_head(_module, 'SpatialAudioHrtfDirectivityCone')
make_head(_module, 'SpatialAudioHrtfDirectivityUnion')
make_head(_module, 'SpatialAudioHrtfDistanceDecay')
make_head(_module, 'SpatialAudioMetadataItemsInfo')
make_head(_module, 'SpatialAudioObjectRenderStreamActivationParams')
make_head(_module, 'SpatialAudioObjectRenderStreamActivationParams2')
make_head(_module, 'SpatialAudioObjectRenderStreamForMetadataActivationParams')
make_head(_module, 'SpatialAudioObjectRenderStreamForMetadataActivationParams2')
make_head(_module, 'tACMFORMATDETAILSW')
make_head(_module, 'VOLUMEWAVEFILTER')
make_head(_module, 'WAVEFILTER')
make_head(_module, 'WAVEFORMAT')
make_head(_module, 'WAVEFORMATEX')
make_head(_module, 'WAVEFORMATEXTENSIBLE')
make_head(_module, 'WAVEHDR')
make_head(_module, 'WAVEINCAPS2A')
make_head(_module, 'WAVEINCAPS2W')
make_head(_module, 'WAVEINCAPSA')
make_head(_module, 'WAVEINCAPSW')
make_head(_module, 'WAVEOUTCAPS2A')
make_head(_module, 'WAVEOUTCAPS2W')
make_head(_module, 'WAVEOUTCAPSA')
make_head(_module, 'WAVEOUTCAPSW')
__all__ = [
    "ACMDM_DRIVER_ABOUT",
    "ACMDM_DRIVER_DETAILS",
    "ACMDM_DRIVER_NOTIFY",
    "ACMDM_FILTERTAG_DETAILS",
    "ACMDM_FILTER_DETAILS",
    "ACMDM_FORMATTAG_DETAILS",
    "ACMDM_FORMAT_DETAILS",
    "ACMDM_FORMAT_SUGGEST",
    "ACMDM_HARDWARE_WAVE_CAPS_INPUT",
    "ACMDM_HARDWARE_WAVE_CAPS_OUTPUT",
    "ACMDM_RESERVED_HIGH",
    "ACMDM_RESERVED_LOW",
    "ACMDM_STREAM_CLOSE",
    "ACMDM_STREAM_CONVERT",
    "ACMDM_STREAM_OPEN",
    "ACMDM_STREAM_PREPARE",
    "ACMDM_STREAM_RESET",
    "ACMDM_STREAM_SIZE",
    "ACMDM_STREAM_UNPREPARE",
    "ACMDM_STREAM_UPDATE",
    "ACMDM_USER",
    "ACMDRIVERDETAILSA",
    "ACMDRIVERDETAILSW",
    "ACMDRIVERDETAILS_COPYRIGHT_CHARS",
    "ACMDRIVERDETAILS_FEATURES_CHARS",
    "ACMDRIVERDETAILS_LICENSING_CHARS",
    "ACMDRIVERDETAILS_LONGNAME_CHARS",
    "ACMDRIVERDETAILS_SHORTNAME_CHARS",
    "ACMDRIVERDETAILS_SUPPORTF_ASYNC",
    "ACMDRIVERDETAILS_SUPPORTF_CODEC",
    "ACMDRIVERDETAILS_SUPPORTF_CONVERTER",
    "ACMDRIVERDETAILS_SUPPORTF_DISABLED",
    "ACMDRIVERDETAILS_SUPPORTF_FILTER",
    "ACMDRIVERDETAILS_SUPPORTF_HARDWARE",
    "ACMDRIVERDETAILS_SUPPORTF_LOCAL",
    "ACMDRIVERENUMCB",
    "ACMDRVFORMATSUGGEST",
    "ACMDRVOPENDESCA",
    "ACMDRVOPENDESCW",
    "ACMDRVSTREAMHEADER",
    "ACMDRVSTREAMINSTANCE",
    "ACMDRVSTREAMSIZE",
    "ACMERR_BASE",
    "ACMERR_BUSY",
    "ACMERR_CANCELED",
    "ACMERR_NOTPOSSIBLE",
    "ACMERR_UNPREPARED",
    "ACMFILTERCHOOSEA",
    "ACMFILTERCHOOSEHOOKPROCA",
    "ACMFILTERCHOOSEHOOKPROCW",
    "ACMFILTERCHOOSEW",
    "ACMFILTERCHOOSE_STYLEF_CONTEXTHELP",
    "ACMFILTERCHOOSE_STYLEF_ENABLEHOOK",
    "ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATE",
    "ACMFILTERCHOOSE_STYLEF_ENABLETEMPLATEHANDLE",
    "ACMFILTERCHOOSE_STYLEF_INITTOFILTERSTRUCT",
    "ACMFILTERCHOOSE_STYLEF_SHOWHELP",
    "ACMFILTERDETAILSA",
    "ACMFILTERDETAILSW",
    "ACMFILTERDETAILS_FILTER_CHARS",
    "ACMFILTERENUMCBA",
    "ACMFILTERENUMCBW",
    "ACMFILTERTAGDETAILSA",
    "ACMFILTERTAGDETAILSW",
    "ACMFILTERTAGDETAILS_FILTERTAG_CHARS",
    "ACMFILTERTAGENUMCBA",
    "ACMFILTERTAGENUMCBW",
    "ACMFORMATCHOOSEA",
    "ACMFORMATCHOOSEHOOKPROCA",
    "ACMFORMATCHOOSEHOOKPROCW",
    "ACMFORMATCHOOSEW",
    "ACMFORMATCHOOSE_STYLEF_CONTEXTHELP",
    "ACMFORMATCHOOSE_STYLEF_ENABLEHOOK",
    "ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATE",
    "ACMFORMATCHOOSE_STYLEF_ENABLETEMPLATEHANDLE",
    "ACMFORMATCHOOSE_STYLEF_INITTOWFXSTRUCT",
    "ACMFORMATCHOOSE_STYLEF_SHOWHELP",
    "ACMFORMATDETAILSA",
    "ACMFORMATDETAILS_FORMAT_CHARS",
    "ACMFORMATENUMCBA",
    "ACMFORMATENUMCBW",
    "ACMFORMATTAGDETAILSA",
    "ACMFORMATTAGDETAILSW",
    "ACMFORMATTAGDETAILS_FORMATTAG_CHARS",
    "ACMFORMATTAGENUMCBA",
    "ACMFORMATTAGENUMCBW",
    "ACMHELPMSGCONTEXTHELP",
    "ACMHELPMSGCONTEXTHELPA",
    "ACMHELPMSGCONTEXTHELPW",
    "ACMHELPMSGCONTEXTMENU",
    "ACMHELPMSGCONTEXTMENUA",
    "ACMHELPMSGCONTEXTMENUW",
    "ACMHELPMSGSTRING",
    "ACMHELPMSGSTRINGA",
    "ACMHELPMSGSTRINGW",
    "ACMSTREAMHEADER",
    "ACMSTREAMHEADER_STATUSF_DONE",
    "ACMSTREAMHEADER_STATUSF_INQUEUE",
    "ACMSTREAMHEADER_STATUSF_PREPARED",
    "ACM_DRIVERADDF_FUNCTION",
    "ACM_DRIVERADDF_GLOBAL",
    "ACM_DRIVERADDF_LOCAL",
    "ACM_DRIVERADDF_NAME",
    "ACM_DRIVERADDF_NOTIFYHWND",
    "ACM_DRIVERADDF_TYPEMASK",
    "ACM_DRIVERENUMF_DISABLED",
    "ACM_DRIVERENUMF_NOLOCAL",
    "ACM_DRIVERPRIORITYF_ABLEMASK",
    "ACM_DRIVERPRIORITYF_BEGIN",
    "ACM_DRIVERPRIORITYF_DEFERMASK",
    "ACM_DRIVERPRIORITYF_DISABLE",
    "ACM_DRIVERPRIORITYF_ENABLE",
    "ACM_DRIVERPRIORITYF_END",
    "ACM_FILTERDETAILSF_FILTER",
    "ACM_FILTERDETAILSF_INDEX",
    "ACM_FILTERDETAILSF_QUERYMASK",
    "ACM_FILTERENUMF_DWFILTERTAG",
    "ACM_FILTERTAGDETAILSF_FILTERTAG",
    "ACM_FILTERTAGDETAILSF_INDEX",
    "ACM_FILTERTAGDETAILSF_LARGESTSIZE",
    "ACM_FILTERTAGDETAILSF_QUERYMASK",
    "ACM_FORMATDETAILSF_FORMAT",
    "ACM_FORMATDETAILSF_INDEX",
    "ACM_FORMATDETAILSF_QUERYMASK",
    "ACM_FORMATENUMF_CONVERT",
    "ACM_FORMATENUMF_HARDWARE",
    "ACM_FORMATENUMF_INPUT",
    "ACM_FORMATENUMF_NCHANNELS",
    "ACM_FORMATENUMF_NSAMPLESPERSEC",
    "ACM_FORMATENUMF_OUTPUT",
    "ACM_FORMATENUMF_SUGGEST",
    "ACM_FORMATENUMF_WBITSPERSAMPLE",
    "ACM_FORMATENUMF_WFORMATTAG",
    "ACM_FORMATSUGGESTF_NCHANNELS",
    "ACM_FORMATSUGGESTF_NSAMPLESPERSEC",
    "ACM_FORMATSUGGESTF_TYPEMASK",
    "ACM_FORMATSUGGESTF_WBITSPERSAMPLE",
    "ACM_FORMATSUGGESTF_WFORMATTAG",
    "ACM_FORMATTAGDETAILSF_FORMATTAG",
    "ACM_FORMATTAGDETAILSF_INDEX",
    "ACM_FORMATTAGDETAILSF_LARGESTSIZE",
    "ACM_FORMATTAGDETAILSF_QUERYMASK",
    "ACM_METRIC_COUNT_CODECS",
    "ACM_METRIC_COUNT_CONVERTERS",
    "ACM_METRIC_COUNT_DISABLED",
    "ACM_METRIC_COUNT_DRIVERS",
    "ACM_METRIC_COUNT_FILTERS",
    "ACM_METRIC_COUNT_HARDWARE",
    "ACM_METRIC_COUNT_LOCAL_CODECS",
    "ACM_METRIC_COUNT_LOCAL_CONVERTERS",
    "ACM_METRIC_COUNT_LOCAL_DISABLED",
    "ACM_METRIC_COUNT_LOCAL_DRIVERS",
    "ACM_METRIC_COUNT_LOCAL_FILTERS",
    "ACM_METRIC_DRIVER_PRIORITY",
    "ACM_METRIC_DRIVER_SUPPORT",
    "ACM_METRIC_HARDWARE_WAVE_INPUT",
    "ACM_METRIC_HARDWARE_WAVE_OUTPUT",
    "ACM_METRIC_MAX_SIZE_FILTER",
    "ACM_METRIC_MAX_SIZE_FORMAT",
    "ACM_STREAMCONVERTF_BLOCKALIGN",
    "ACM_STREAMCONVERTF_END",
    "ACM_STREAMCONVERTF_START",
    "ACM_STREAMOPENF_ASYNC",
    "ACM_STREAMOPENF_NONREALTIME",
    "ACM_STREAMOPENF_QUERY",
    "ACM_STREAMSIZEF_DESTINATION",
    "ACM_STREAMSIZEF_QUERYMASK",
    "ACM_STREAMSIZEF_SOURCE",
    "AMBISONICS_CHANNEL_ORDERING",
    "AMBISONICS_CHANNEL_ORDERING_ACN",
    "AMBISONICS_NORMALIZATION",
    "AMBISONICS_NORMALIZATION_N3D",
    "AMBISONICS_NORMALIZATION_SN3D",
    "AMBISONICS_PARAMS",
    "AMBISONICS_PARAM_VERSION_1",
    "AMBISONICS_TYPE",
    "AMBISONICS_TYPE_FULL3D",
    "AUDCLNT_BUFFERFLAGS_DATA_DISCONTINUITY",
    "AUDCLNT_BUFFERFLAGS_SILENT",
    "AUDCLNT_BUFFERFLAGS_TIMESTAMP_ERROR",
    "AUDCLNT_E_ALREADY_INITIALIZED",
    "AUDCLNT_E_BUFDURATION_PERIOD_NOT_EQUAL",
    "AUDCLNT_E_BUFFER_ERROR",
    "AUDCLNT_E_BUFFER_OPERATION_PENDING",
    "AUDCLNT_E_BUFFER_SIZE_ERROR",
    "AUDCLNT_E_BUFFER_SIZE_NOT_ALIGNED",
    "AUDCLNT_E_BUFFER_TOO_LARGE",
    "AUDCLNT_E_CPUUSAGE_EXCEEDED",
    "AUDCLNT_E_DEVICE_INVALIDATED",
    "AUDCLNT_E_DEVICE_IN_USE",
    "AUDCLNT_E_EFFECT_NOT_AVAILABLE",
    "AUDCLNT_E_EFFECT_STATE_READ_ONLY",
    "AUDCLNT_E_ENDPOINT_CREATE_FAILED",
    "AUDCLNT_E_ENDPOINT_OFFLOAD_NOT_CAPABLE",
    "AUDCLNT_E_ENGINE_FORMAT_LOCKED",
    "AUDCLNT_E_ENGINE_PERIODICITY_LOCKED",
    "AUDCLNT_E_EVENTHANDLE_NOT_EXPECTED",
    "AUDCLNT_E_EVENTHANDLE_NOT_SET",
    "AUDCLNT_E_EXCLUSIVE_MODE_NOT_ALLOWED",
    "AUDCLNT_E_EXCLUSIVE_MODE_ONLY",
    "AUDCLNT_E_HEADTRACKING_ENABLED",
    "AUDCLNT_E_HEADTRACKING_UNSUPPORTED",
    "AUDCLNT_E_INCORRECT_BUFFER_SIZE",
    "AUDCLNT_E_INVALID_DEVICE_PERIOD",
    "AUDCLNT_E_INVALID_SIZE",
    "AUDCLNT_E_INVALID_STREAM_FLAG",
    "AUDCLNT_E_NONOFFLOAD_MODE_ONLY",
    "AUDCLNT_E_NOT_INITIALIZED",
    "AUDCLNT_E_NOT_STOPPED",
    "AUDCLNT_E_OFFLOAD_MODE_ONLY",
    "AUDCLNT_E_OUT_OF_OFFLOAD_RESOURCES",
    "AUDCLNT_E_OUT_OF_ORDER",
    "AUDCLNT_E_RAW_MODE_UNSUPPORTED",
    "AUDCLNT_E_RESOURCES_INVALIDATED",
    "AUDCLNT_E_SERVICE_NOT_RUNNING",
    "AUDCLNT_E_THREAD_NOT_REGISTERED",
    "AUDCLNT_E_UNSUPPORTED_FORMAT",
    "AUDCLNT_E_WRONG_ENDPOINT_TYPE",
    "AUDCLNT_SESSIONFLAGS_DISPLAY_HIDE",
    "AUDCLNT_SESSIONFLAGS_DISPLAY_HIDEWHENEXPIRED",
    "AUDCLNT_SESSIONFLAGS_EXPIREWHENUNOWNED",
    "AUDCLNT_SHAREMODE",
    "AUDCLNT_SHAREMODE_EXCLUSIVE",
    "AUDCLNT_SHAREMODE_SHARED",
    "AUDCLNT_STREAMFLAGS_AUTOCONVERTPCM",
    "AUDCLNT_STREAMFLAGS_CROSSPROCESS",
    "AUDCLNT_STREAMFLAGS_EVENTCALLBACK",
    "AUDCLNT_STREAMFLAGS_LOOPBACK",
    "AUDCLNT_STREAMFLAGS_NOPERSIST",
    "AUDCLNT_STREAMFLAGS_RATEADJUST",
    "AUDCLNT_STREAMFLAGS_SRC_DEFAULT_QUALITY",
    "AUDCLNT_STREAMOPTIONS",
    "AUDCLNT_STREAMOPTIONS_AMBISONICS",
    "AUDCLNT_STREAMOPTIONS_MATCH_FORMAT",
    "AUDCLNT_STREAMOPTIONS_NONE",
    "AUDCLNT_STREAMOPTIONS_RAW",
    "AUDCLNT_S_BUFFER_EMPTY",
    "AUDCLNT_S_POSITION_STALLED",
    "AUDCLNT_S_THREAD_ALREADY_REGISTERED",
    "AUDIOCLIENT_ACTIVATION_PARAMS",
    "AUDIOCLIENT_ACTIVATION_TYPE",
    "AUDIOCLIENT_ACTIVATION_TYPE_DEFAULT",
    "AUDIOCLIENT_ACTIVATION_TYPE_PROCESS_LOOPBACK",
    "AUDIOCLIENT_PROCESS_LOOPBACK_PARAMS",
    "AUDIOCLOCK_CHARACTERISTIC_FIXED_FREQ",
    "AUDIO_DUCKING_OPTIONS",
    "AUDIO_DUCKING_OPTIONS_DEFAULT",
    "AUDIO_DUCKING_OPTIONS_DO_NOT_DUCK_OTHER_STREAMS",
    "AUDIO_EFFECT",
    "AUDIO_EFFECT_STATE",
    "AUDIO_EFFECT_STATE_OFF",
    "AUDIO_EFFECT_STATE_ON",
    "AUDIO_STREAM_CATEGORY",
    "AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE",
    "AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_DEFAULT",
    "AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_ENUM_COUNT",
    "AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_USER",
    "AUDIO_SYSTEMEFFECTS_PROPERTYSTORE_TYPE_VOLATILE",
    "AUDIO_VOLUME_NOTIFICATION_DATA",
    "AUXCAPS2A",
    "AUXCAPS2W",
    "AUXCAPSA",
    "AUXCAPSW",
    "AUXCAPS_AUXIN",
    "AUXCAPS_CDAUDIO",
    "AUXCAPS_LRVOLUME",
    "AUXCAPS_VOLUME",
    "ActivateAudioInterfaceAsync",
    "AudioCategory_Alerts",
    "AudioCategory_Communications",
    "AudioCategory_FarFieldSpeech",
    "AudioCategory_ForegroundOnlyMedia",
    "AudioCategory_GameChat",
    "AudioCategory_GameEffects",
    "AudioCategory_GameMedia",
    "AudioCategory_Media",
    "AudioCategory_Movie",
    "AudioCategory_Other",
    "AudioCategory_SoundEffects",
    "AudioCategory_Speech",
    "AudioCategory_UniformSpeech",
    "AudioCategory_VoiceTyping",
    "AudioClient3ActivationParams",
    "AudioClientProperties",
    "AudioExtensionParams",
    "AudioObjectType",
    "AudioObjectType_BackCenter",
    "AudioObjectType_BackLeft",
    "AudioObjectType_BackRight",
    "AudioObjectType_BottomBackLeft",
    "AudioObjectType_BottomBackRight",
    "AudioObjectType_BottomFrontLeft",
    "AudioObjectType_BottomFrontRight",
    "AudioObjectType_Dynamic",
    "AudioObjectType_FrontCenter",
    "AudioObjectType_FrontLeft",
    "AudioObjectType_FrontRight",
    "AudioObjectType_LowFrequency",
    "AudioObjectType_None",
    "AudioObjectType_SideLeft",
    "AudioObjectType_SideRight",
    "AudioObjectType_TopBackLeft",
    "AudioObjectType_TopBackRight",
    "AudioObjectType_TopFrontLeft",
    "AudioObjectType_TopFrontRight",
    "AudioSessionDisconnectReason",
    "AudioSessionDisconnectReason_DisconnectReasonDeviceRemoval",
    "AudioSessionDisconnectReason_DisconnectReasonExclusiveModeOverride",
    "AudioSessionDisconnectReason_DisconnectReasonFormatChanged",
    "AudioSessionDisconnectReason_DisconnectReasonServerShutdown",
    "AudioSessionDisconnectReason_DisconnectReasonSessionDisconnected",
    "AudioSessionDisconnectReason_DisconnectReasonSessionLogoff",
    "AudioSessionState",
    "AudioSessionState_AudioSessionStateActive",
    "AudioSessionState_AudioSessionStateExpired",
    "AudioSessionState_AudioSessionStateInactive",
    "AudioStateMonitorSoundLevel",
    "AudioStateMonitorSoundLevel_Full",
    "AudioStateMonitorSoundLevel_Low",
    "AudioStateMonitorSoundLevel_Muted",
    "CALLBACK_EVENT",
    "CALLBACK_FUNCTION",
    "CALLBACK_NULL",
    "CALLBACK_TASK",
    "CALLBACK_THREAD",
    "CALLBACK_TYPEMASK",
    "CALLBACK_WINDOW",
    "CoRegisterMessageFilter",
    "ConnectorType",
    "ConnectorType_Network",
    "ConnectorType_Physical_External",
    "ConnectorType_Physical_Internal",
    "ConnectorType_Software_Fixed",
    "ConnectorType_Software_IO",
    "ConnectorType_Unknown_Connector",
    "CreateCaptureAudioStateMonitor",
    "CreateCaptureAudioStateMonitorForCategory",
    "CreateCaptureAudioStateMonitorForCategoryAndDeviceId",
    "CreateCaptureAudioStateMonitorForCategoryAndDeviceRole",
    "CreateRenderAudioStateMonitor",
    "CreateRenderAudioStateMonitorForCategory",
    "CreateRenderAudioStateMonitorForCategoryAndDeviceId",
    "CreateRenderAudioStateMonitorForCategoryAndDeviceRole",
    "DEVICE_STATEMASK_ALL",
    "DEVICE_STATE_ACTIVE",
    "DEVICE_STATE_DISABLED",
    "DEVICE_STATE_NOTPRESENT",
    "DEVICE_STATE_UNPLUGGED",
    "DEVINTERFACE_AUDIO_CAPTURE",
    "DEVINTERFACE_AUDIO_RENDER",
    "DEVINTERFACE_MIDI_INPUT",
    "DEVINTERFACE_MIDI_OUTPUT",
    "DIRECTX_AUDIO_ACTIVATION_PARAMS",
    "DRVM_MAPPER",
    "DRVM_MAPPER_STATUS",
    "DRV_MAPPER_PREFERRED_INPUT_GET",
    "DRV_MAPPER_PREFERRED_OUTPUT_GET",
    "DataFlow",
    "DataFlow_In",
    "DataFlow_Out",
    "DeviceTopology",
    "ECHOWAVEFILTER",
    "EDataFlow",
    "EDataFlow_EDataFlow_enum_count",
    "EDataFlow_eAll",
    "EDataFlow_eCapture",
    "EDataFlow_eRender",
    "ENDPOINT_FORMAT_RESET_MIX_ONLY",
    "ENDPOINT_HARDWARE_SUPPORT_METER",
    "ENDPOINT_HARDWARE_SUPPORT_MUTE",
    "ENDPOINT_HARDWARE_SUPPORT_VOLUME",
    "ENDPOINT_SYSFX_DISABLED",
    "ENDPOINT_SYSFX_ENABLED",
    "ERole",
    "ERole_ERole_enum_count",
    "ERole_eCommunications",
    "ERole_eConsole",
    "ERole_eMultimedia",
    "EVENTCONTEXT_VOLUMESLIDER",
    "EndpointFormFactor",
    "EndpointFormFactor_DigitalAudioDisplayDevice",
    "EndpointFormFactor_EndpointFormFactor_enum_count",
    "EndpointFormFactor_Handset",
    "EndpointFormFactor_Headphones",
    "EndpointFormFactor_Headset",
    "EndpointFormFactor_LineLevel",
    "EndpointFormFactor_Microphone",
    "EndpointFormFactor_RemoteNetworkDevice",
    "EndpointFormFactor_SPDIF",
    "EndpointFormFactor_Speakers",
    "EndpointFormFactor_UnknownDigitalPassthrough",
    "EndpointFormFactor_UnknownFormFactor",
    "FILTERCHOOSE_CUSTOM_VERIFY",
    "FILTERCHOOSE_FILTERTAG_VERIFY",
    "FILTERCHOOSE_FILTER_VERIFY",
    "FILTERCHOOSE_MESSAGE",
    "FORMATCHOOSE_CUSTOM_VERIFY",
    "FORMATCHOOSE_FORMATTAG_VERIFY",
    "FORMATCHOOSE_FORMAT_VERIFY",
    "FORMATCHOOSE_MESSAGE",
    "HACMDRIVER",
    "HACMDRIVERID",
    "HACMOBJ",
    "HACMSTREAM",
    "HMIDI",
    "HMIDIIN",
    "HMIDIOUT",
    "HMIDISTRM",
    "HMIXER",
    "HMIXEROBJ",
    "HWAVE",
    "HWAVEIN",
    "HWAVEOUT",
    "IActivateAudioInterfaceAsyncOperation",
    "IActivateAudioInterfaceCompletionHandler",
    "IAudioAmbisonicsControl",
    "IAudioAutoGainControl",
    "IAudioBass",
    "IAudioCaptureClient",
    "IAudioChannelConfig",
    "IAudioClient",
    "IAudioClient2",
    "IAudioClient3",
    "IAudioClientDuckingControl",
    "IAudioClock",
    "IAudioClock2",
    "IAudioClockAdjustment",
    "IAudioEffectsChangedNotificationClient",
    "IAudioEffectsManager",
    "IAudioFormatEnumerator",
    "IAudioInputSelector",
    "IAudioLoudness",
    "IAudioMidrange",
    "IAudioMute",
    "IAudioOutputSelector",
    "IAudioPeakMeter",
    "IAudioRenderClient",
    "IAudioSessionControl",
    "IAudioSessionControl2",
    "IAudioSessionEnumerator",
    "IAudioSessionEvents",
    "IAudioSessionManager",
    "IAudioSessionManager2",
    "IAudioSessionNotification",
    "IAudioStateMonitor",
    "IAudioStreamVolume",
    "IAudioSystemEffectsPropertyChangeNotificationClient",
    "IAudioSystemEffectsPropertyStore",
    "IAudioTreble",
    "IAudioVolumeDuckNotification",
    "IAudioVolumeLevel",
    "IChannelAudioVolume",
    "IConnector",
    "IControlChangeNotify",
    "IControlInterface",
    "IDeviceSpecificProperty",
    "IDeviceTopology",
    "IMMDevice",
    "IMMDeviceActivator",
    "IMMDeviceCollection",
    "IMMDeviceEnumerator",
    "IMMEndpoint",
    "IMMNotificationClient",
    "IMessageFilter",
    "IPart",
    "IPartsList",
    "IPerChannelDbLevel",
    "ISimpleAudioVolume",
    "ISpatialAudioClient",
    "ISpatialAudioClient2",
    "ISpatialAudioMetadataClient",
    "ISpatialAudioMetadataCopier",
    "ISpatialAudioMetadataItems",
    "ISpatialAudioMetadataItemsBuffer",
    "ISpatialAudioMetadataReader",
    "ISpatialAudioMetadataWriter",
    "ISpatialAudioObject",
    "ISpatialAudioObjectBase",
    "ISpatialAudioObjectForHrtf",
    "ISpatialAudioObjectForMetadataCommands",
    "ISpatialAudioObjectForMetadataItems",
    "ISpatialAudioObjectRenderStream",
    "ISpatialAudioObjectRenderStreamBase",
    "ISpatialAudioObjectRenderStreamForHrtf",
    "ISpatialAudioObjectRenderStreamForMetadata",
    "ISpatialAudioObjectRenderStreamNotify",
    "ISubunit",
    "LPACMDRIVERPROC",
    "LPMIDICALLBACK",
    "LPWAVECALLBACK",
    "MEVT_F_CALLBACK",
    "MEVT_F_LONG",
    "MEVT_F_SHORT",
    "MHDR_DONE",
    "MHDR_INQUEUE",
    "MHDR_ISSTRM",
    "MHDR_PREPARED",
    "MIDICAPS_CACHE",
    "MIDICAPS_LRVOLUME",
    "MIDICAPS_STREAM",
    "MIDICAPS_VOLUME",
    "MIDIERR_BADOPENMODE",
    "MIDIERR_DONT_CONTINUE",
    "MIDIERR_INVALIDSETUP",
    "MIDIERR_LASTERROR",
    "MIDIERR_NODEVICE",
    "MIDIERR_NOMAP",
    "MIDIERR_NOTREADY",
    "MIDIERR_STILLPLAYING",
    "MIDIERR_UNPREPARED",
    "MIDIEVENT",
    "MIDIHDR",
    "MIDIINCAPS2A",
    "MIDIINCAPS2W",
    "MIDIINCAPSA",
    "MIDIINCAPSW",
    "MIDIOUTCAPS2A",
    "MIDIOUTCAPS2W",
    "MIDIOUTCAPSA",
    "MIDIOUTCAPSW",
    "MIDIPATCHSIZE",
    "MIDIPROPTEMPO",
    "MIDIPROPTIMEDIV",
    "MIDIPROP_GET",
    "MIDIPROP_SET",
    "MIDIPROP_TEMPO",
    "MIDIPROP_TIMEDIV",
    "MIDISTRMBUFFVER",
    "MIDISTRM_ERROR",
    "MIDI_CACHE_ALL",
    "MIDI_CACHE_BESTFIT",
    "MIDI_CACHE_QUERY",
    "MIDI_IO_STATUS",
    "MIDI_UNCACHE",
    "MIDI_WAVE_OPEN_TYPE",
    "MIXERCAPS2A",
    "MIXERCAPS2W",
    "MIXERCAPSA",
    "MIXERCAPSW",
    "MIXERCONTROLA",
    "MIXERCONTROLDETAILS",
    "MIXERCONTROLDETAILS_BOOLEAN",
    "MIXERCONTROLDETAILS_LISTTEXTA",
    "MIXERCONTROLDETAILS_LISTTEXTW",
    "MIXERCONTROLDETAILS_SIGNED",
    "MIXERCONTROLDETAILS_UNSIGNED",
    "MIXERCONTROLW",
    "MIXERCONTROL_CONTROLF_DISABLED",
    "MIXERCONTROL_CONTROLF_MULTIPLE",
    "MIXERCONTROL_CONTROLF_UNIFORM",
    "MIXERCONTROL_CONTROLTYPE_BASS",
    "MIXERCONTROL_CONTROLTYPE_BASS_BOOST",
    "MIXERCONTROL_CONTROLTYPE_BOOLEAN",
    "MIXERCONTROL_CONTROLTYPE_BOOLEANMETER",
    "MIXERCONTROL_CONTROLTYPE_BUTTON",
    "MIXERCONTROL_CONTROLTYPE_CUSTOM",
    "MIXERCONTROL_CONTROLTYPE_DECIBELS",
    "MIXERCONTROL_CONTROLTYPE_EQUALIZER",
    "MIXERCONTROL_CONTROLTYPE_FADER",
    "MIXERCONTROL_CONTROLTYPE_LOUDNESS",
    "MIXERCONTROL_CONTROLTYPE_MICROTIME",
    "MIXERCONTROL_CONTROLTYPE_MILLITIME",
    "MIXERCONTROL_CONTROLTYPE_MIXER",
    "MIXERCONTROL_CONTROLTYPE_MONO",
    "MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT",
    "MIXERCONTROL_CONTROLTYPE_MUTE",
    "MIXERCONTROL_CONTROLTYPE_MUX",
    "MIXERCONTROL_CONTROLTYPE_ONOFF",
    "MIXERCONTROL_CONTROLTYPE_PAN",
    "MIXERCONTROL_CONTROLTYPE_PEAKMETER",
    "MIXERCONTROL_CONTROLTYPE_PERCENT",
    "MIXERCONTROL_CONTROLTYPE_QSOUNDPAN",
    "MIXERCONTROL_CONTROLTYPE_SIGNED",
    "MIXERCONTROL_CONTROLTYPE_SIGNEDMETER",
    "MIXERCONTROL_CONTROLTYPE_SINGLESELECT",
    "MIXERCONTROL_CONTROLTYPE_SLIDER",
    "MIXERCONTROL_CONTROLTYPE_STEREOENH",
    "MIXERCONTROL_CONTROLTYPE_TREBLE",
    "MIXERCONTROL_CONTROLTYPE_UNSIGNED",
    "MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER",
    "MIXERCONTROL_CONTROLTYPE_VOLUME",
    "MIXERCONTROL_CT_CLASS_CUSTOM",
    "MIXERCONTROL_CT_CLASS_FADER",
    "MIXERCONTROL_CT_CLASS_LIST",
    "MIXERCONTROL_CT_CLASS_MASK",
    "MIXERCONTROL_CT_CLASS_METER",
    "MIXERCONTROL_CT_CLASS_NUMBER",
    "MIXERCONTROL_CT_CLASS_SLIDER",
    "MIXERCONTROL_CT_CLASS_SWITCH",
    "MIXERCONTROL_CT_CLASS_TIME",
    "MIXERCONTROL_CT_SC_LIST_MULTIPLE",
    "MIXERCONTROL_CT_SC_LIST_SINGLE",
    "MIXERCONTROL_CT_SC_METER_POLLED",
    "MIXERCONTROL_CT_SC_SWITCH_BOOLEAN",
    "MIXERCONTROL_CT_SC_SWITCH_BUTTON",
    "MIXERCONTROL_CT_SC_TIME_MICROSECS",
    "MIXERCONTROL_CT_SC_TIME_MILLISECS",
    "MIXERCONTROL_CT_SUBCLASS_MASK",
    "MIXERCONTROL_CT_UNITS_BOOLEAN",
    "MIXERCONTROL_CT_UNITS_CUSTOM",
    "MIXERCONTROL_CT_UNITS_DECIBELS",
    "MIXERCONTROL_CT_UNITS_MASK",
    "MIXERCONTROL_CT_UNITS_PERCENT",
    "MIXERCONTROL_CT_UNITS_SIGNED",
    "MIXERCONTROL_CT_UNITS_UNSIGNED",
    "MIXERLINEA",
    "MIXERLINECONTROLSA",
    "MIXERLINECONTROLSW",
    "MIXERLINEW",
    "MIXERLINE_COMPONENTTYPE",
    "MIXERLINE_COMPONENTTYPE_DST_DIGITAL",
    "MIXERLINE_COMPONENTTYPE_DST_FIRST",
    "MIXERLINE_COMPONENTTYPE_DST_HEADPHONES",
    "MIXERLINE_COMPONENTTYPE_DST_LAST",
    "MIXERLINE_COMPONENTTYPE_DST_LINE",
    "MIXERLINE_COMPONENTTYPE_DST_MONITOR",
    "MIXERLINE_COMPONENTTYPE_DST_SPEAKERS",
    "MIXERLINE_COMPONENTTYPE_DST_TELEPHONE",
    "MIXERLINE_COMPONENTTYPE_DST_UNDEFINED",
    "MIXERLINE_COMPONENTTYPE_DST_VOICEIN",
    "MIXERLINE_COMPONENTTYPE_DST_WAVEIN",
    "MIXERLINE_COMPONENTTYPE_SRC_ANALOG",
    "MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY",
    "MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC",
    "MIXERLINE_COMPONENTTYPE_SRC_DIGITAL",
    "MIXERLINE_COMPONENTTYPE_SRC_FIRST",
    "MIXERLINE_COMPONENTTYPE_SRC_LAST",
    "MIXERLINE_COMPONENTTYPE_SRC_LINE",
    "MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE",
    "MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER",
    "MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER",
    "MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE",
    "MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED",
    "MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT",
    "MIXERLINE_LINEF_ACTIVE",
    "MIXERLINE_LINEF_DISCONNECTED",
    "MIXERLINE_LINEF_SOURCE",
    "MIXERLINE_TARGETTYPE_AUX",
    "MIXERLINE_TARGETTYPE_MIDIIN",
    "MIXERLINE_TARGETTYPE_MIDIOUT",
    "MIXERLINE_TARGETTYPE_UNDEFINED",
    "MIXERLINE_TARGETTYPE_WAVEIN",
    "MIXERLINE_TARGETTYPE_WAVEOUT",
    "MIXERR_INVALCONTROL",
    "MIXERR_INVALLINE",
    "MIXERR_INVALVALUE",
    "MIXERR_LASTERROR",
    "MIXER_GETCONTROLDETAILSF_LISTTEXT",
    "MIXER_GETCONTROLDETAILSF_QUERYMASK",
    "MIXER_GETCONTROLDETAILSF_VALUE",
    "MIXER_GETLINECONTROLSF_ALL",
    "MIXER_GETLINECONTROLSF_ONEBYID",
    "MIXER_GETLINECONTROLSF_ONEBYTYPE",
    "MIXER_GETLINECONTROLSF_QUERYMASK",
    "MIXER_GETLINEINFOF_COMPONENTTYPE",
    "MIXER_GETLINEINFOF_DESTINATION",
    "MIXER_GETLINEINFOF_LINEID",
    "MIXER_GETLINEINFOF_QUERYMASK",
    "MIXER_GETLINEINFOF_SOURCE",
    "MIXER_GETLINEINFOF_TARGETTYPE",
    "MIXER_LONG_NAME_CHARS",
    "MIXER_OBJECTF_AUX",
    "MIXER_OBJECTF_HANDLE",
    "MIXER_OBJECTF_MIDIIN",
    "MIXER_OBJECTF_MIDIOUT",
    "MIXER_OBJECTF_MIXER",
    "MIXER_OBJECTF_WAVEIN",
    "MIXER_OBJECTF_WAVEOUT",
    "MIXER_SETCONTROLDETAILSF_CUSTOM",
    "MIXER_SETCONTROLDETAILSF_QUERYMASK",
    "MIXER_SETCONTROLDETAILSF_VALUE",
    "MIXER_SHORT_NAME_CHARS",
    "MMDeviceEnumerator",
    "MM_ACM_FILTERCHOOSE",
    "MM_ACM_FORMATCHOOSE",
    "MOD_FMSYNTH",
    "MOD_MAPPER",
    "MOD_MIDIPORT",
    "MOD_SQSYNTH",
    "MOD_SWSYNTH",
    "MOD_SYNTH",
    "MOD_WAVETABLE",
    "PAudioStateMonitorCallback",
    "PCMWAVEFORMAT",
    "PKEY_AudioEndpointLogo_IconEffects",
    "PKEY_AudioEndpointLogo_IconPath",
    "PKEY_AudioEndpointSettings_LaunchContract",
    "PKEY_AudioEndpointSettings_MenuText",
    "PKEY_AudioEndpoint_Association",
    "PKEY_AudioEndpoint_ControlPanelPageProvider",
    "PKEY_AudioEndpoint_Default_VolumeInDb",
    "PKEY_AudioEndpoint_Disable_SysFx",
    "PKEY_AudioEndpoint_FormFactor",
    "PKEY_AudioEndpoint_FullRangeSpeakers",
    "PKEY_AudioEndpoint_GUID",
    "PKEY_AudioEndpoint_JackSubType",
    "PKEY_AudioEndpoint_PhysicalSpeakers",
    "PKEY_AudioEndpoint_Supports_EventDriven_Mode",
    "PKEY_AudioEngine_DeviceFormat",
    "PKEY_AudioEngine_OEMFormat",
    "PROCESS_LOOPBACK_MODE",
    "PROCESS_LOOPBACK_MODE_EXCLUDE_TARGET_PROCESS_TREE",
    "PROCESS_LOOPBACK_MODE_INCLUDE_TARGET_PROCESS_TREE",
    "PartType",
    "PartType_Connector",
    "PartType_Subunit",
    "PlaySoundA",
    "PlaySoundW",
    "SND_ALIAS",
    "SND_ALIAS_ID",
    "SND_ALIAS_START",
    "SND_APPLICATION",
    "SND_ASYNC",
    "SND_FILENAME",
    "SND_FLAGS",
    "SND_LOOP",
    "SND_MEMORY",
    "SND_NODEFAULT",
    "SND_NOSTOP",
    "SND_NOWAIT",
    "SND_PURGE",
    "SND_RESOURCE",
    "SND_RING",
    "SND_SENTRY",
    "SND_SYNC",
    "SND_SYSTEM",
    "SPATIAL_AUDIO_POSITION",
    "SPATIAL_AUDIO_STANDARD_COMMANDS_START",
    "SPATIAL_AUDIO_STREAM_OPTIONS",
    "SPATIAL_AUDIO_STREAM_OPTIONS_NONE",
    "SPATIAL_AUDIO_STREAM_OPTIONS_OFFLOAD",
    "SPTLAUDCLNT_E_DESTROYED",
    "SPTLAUDCLNT_E_ERRORS_IN_OBJECT_CALLS",
    "SPTLAUDCLNT_E_INTERNAL",
    "SPTLAUDCLNT_E_INVALID_LICENSE",
    "SPTLAUDCLNT_E_METADATA_FORMAT_NOT_SUPPORTED",
    "SPTLAUDCLNT_E_NO_MORE_OBJECTS",
    "SPTLAUDCLNT_E_OBJECT_ALREADY_ACTIVE",
    "SPTLAUDCLNT_E_OUT_OF_ORDER",
    "SPTLAUDCLNT_E_PROPERTY_NOT_SUPPORTED",
    "SPTLAUDCLNT_E_RESOURCES_INVALIDATED",
    "SPTLAUDCLNT_E_STATIC_OBJECT_NOT_AVAILABLE",
    "SPTLAUDCLNT_E_STREAM_NOT_AVAILABLE",
    "SPTLAUDCLNT_E_STREAM_NOT_STOPPED",
    "SPTLAUD_MD_CLNT_E_ATTACH_FAILED_INTERNAL_BUFFER",
    "SPTLAUD_MD_CLNT_E_BUFFER_ALREADY_ATTACHED",
    "SPTLAUD_MD_CLNT_E_BUFFER_NOT_ATTACHED",
    "SPTLAUD_MD_CLNT_E_BUFFER_STILL_ATTACHED",
    "SPTLAUD_MD_CLNT_E_COMMAND_ALREADY_WRITTEN",
    "SPTLAUD_MD_CLNT_E_COMMAND_NOT_FOUND",
    "SPTLAUD_MD_CLNT_E_DETACH_FAILED_INTERNAL_BUFFER",
    "SPTLAUD_MD_CLNT_E_FORMAT_MISMATCH",
    "SPTLAUD_MD_CLNT_E_FRAMECOUNT_OUT_OF_RANGE",
    "SPTLAUD_MD_CLNT_E_FRAMEOFFSET_OUT_OF_RANGE",
    "SPTLAUD_MD_CLNT_E_INVALID_ARGS",
    "SPTLAUD_MD_CLNT_E_ITEMS_ALREADY_OPEN",
    "SPTLAUD_MD_CLNT_E_ITEMS_LOCKED_FOR_WRITING",
    "SPTLAUD_MD_CLNT_E_ITEM_COPY_OVERFLOW",
    "SPTLAUD_MD_CLNT_E_ITEM_MUST_HAVE_COMMANDS",
    "SPTLAUD_MD_CLNT_E_MEMORY_BOUNDS",
    "SPTLAUD_MD_CLNT_E_METADATA_FORMAT_NOT_FOUND",
    "SPTLAUD_MD_CLNT_E_NO_BUFFER_ATTACHED",
    "SPTLAUD_MD_CLNT_E_NO_ITEMOFFSET_WRITTEN",
    "SPTLAUD_MD_CLNT_E_NO_ITEMS_FOUND",
    "SPTLAUD_MD_CLNT_E_NO_ITEMS_OPEN",
    "SPTLAUD_MD_CLNT_E_NO_ITEMS_WRITTEN",
    "SPTLAUD_MD_CLNT_E_NO_MORE_COMMANDS",
    "SPTLAUD_MD_CLNT_E_NO_MORE_ITEMS",
    "SPTLAUD_MD_CLNT_E_OBJECT_NOT_INITIALIZED",
    "SPTLAUD_MD_CLNT_E_VALUE_BUFFER_INCORRECT_SIZE",
    "SpatialAudioClientActivationParams",
    "SpatialAudioHrtfActivationParams",
    "SpatialAudioHrtfActivationParams2",
    "SpatialAudioHrtfDirectivity",
    "SpatialAudioHrtfDirectivityCardioid",
    "SpatialAudioHrtfDirectivityCone",
    "SpatialAudioHrtfDirectivityType",
    "SpatialAudioHrtfDirectivityUnion",
    "SpatialAudioHrtfDirectivity_Cardioid",
    "SpatialAudioHrtfDirectivity_Cone",
    "SpatialAudioHrtfDirectivity_OmniDirectional",
    "SpatialAudioHrtfDistanceDecay",
    "SpatialAudioHrtfDistanceDecayType",
    "SpatialAudioHrtfDistanceDecay_CustomDecay",
    "SpatialAudioHrtfDistanceDecay_NaturalDecay",
    "SpatialAudioHrtfEnvironmentType",
    "SpatialAudioHrtfEnvironment_Average",
    "SpatialAudioHrtfEnvironment_Large",
    "SpatialAudioHrtfEnvironment_Medium",
    "SpatialAudioHrtfEnvironment_Outdoors",
    "SpatialAudioHrtfEnvironment_Small",
    "SpatialAudioMetadataCopyMode",
    "SpatialAudioMetadataCopy_Append",
    "SpatialAudioMetadataCopy_AppendMergeWithFirst",
    "SpatialAudioMetadataCopy_AppendMergeWithLast",
    "SpatialAudioMetadataCopy_Overwrite",
    "SpatialAudioMetadataItemsInfo",
    "SpatialAudioMetadataWriterOverflowMode",
    "SpatialAudioMetadataWriterOverflow_Fail",
    "SpatialAudioMetadataWriterOverflow_MergeWithLast",
    "SpatialAudioMetadataWriterOverflow_MergeWithNew",
    "SpatialAudioObjectRenderStreamActivationParams",
    "SpatialAudioObjectRenderStreamActivationParams2",
    "SpatialAudioObjectRenderStreamForMetadataActivationParams",
    "SpatialAudioObjectRenderStreamForMetadataActivationParams2",
    "VIRTUAL_AUDIO_DEVICE_PROCESS_LOOPBACK",
    "VOLUMEWAVEFILTER",
    "WAVECAPS_LRVOLUME",
    "WAVECAPS_PITCH",
    "WAVECAPS_PLAYBACKRATE",
    "WAVECAPS_SAMPLEACCURATE",
    "WAVECAPS_SYNC",
    "WAVECAPS_VOLUME",
    "WAVEFILTER",
    "WAVEFORMAT",
    "WAVEFORMATEX",
    "WAVEFORMATEXTENSIBLE",
    "WAVEHDR",
    "WAVEINCAPS2A",
    "WAVEINCAPS2W",
    "WAVEINCAPSA",
    "WAVEINCAPSW",
    "WAVEIN_MAPPER_STATUS_DEVICE",
    "WAVEIN_MAPPER_STATUS_FORMAT",
    "WAVEIN_MAPPER_STATUS_MAPPED",
    "WAVEOUTCAPS2A",
    "WAVEOUTCAPS2W",
    "WAVEOUTCAPSA",
    "WAVEOUTCAPSW",
    "WAVEOUT_MAPPER_STATUS_DEVICE",
    "WAVEOUT_MAPPER_STATUS_FORMAT",
    "WAVEOUT_MAPPER_STATUS_MAPPED",
    "WAVERR_BADFORMAT",
    "WAVERR_LASTERROR",
    "WAVERR_STILLPLAYING",
    "WAVERR_SYNC",
    "WAVERR_UNPREPARED",
    "WAVE_ALLOWSYNC",
    "WAVE_FORMAT_1M08",
    "WAVE_FORMAT_1M16",
    "WAVE_FORMAT_1S08",
    "WAVE_FORMAT_1S16",
    "WAVE_FORMAT_2M08",
    "WAVE_FORMAT_2M16",
    "WAVE_FORMAT_2S08",
    "WAVE_FORMAT_2S16",
    "WAVE_FORMAT_44M08",
    "WAVE_FORMAT_44M16",
    "WAVE_FORMAT_44S08",
    "WAVE_FORMAT_44S16",
    "WAVE_FORMAT_48M08",
    "WAVE_FORMAT_48M16",
    "WAVE_FORMAT_48S08",
    "WAVE_FORMAT_48S16",
    "WAVE_FORMAT_4M08",
    "WAVE_FORMAT_4M16",
    "WAVE_FORMAT_4S08",
    "WAVE_FORMAT_4S16",
    "WAVE_FORMAT_96M08",
    "WAVE_FORMAT_96M16",
    "WAVE_FORMAT_96S08",
    "WAVE_FORMAT_96S16",
    "WAVE_FORMAT_DIRECT",
    "WAVE_FORMAT_DIRECT_QUERY",
    "WAVE_FORMAT_PCM",
    "WAVE_FORMAT_QUERY",
    "WAVE_INVALIDFORMAT",
    "WAVE_MAPPED",
    "WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE",
    "WAVE_MAPPER",
    "WHDR_BEGINLOOP",
    "WHDR_DONE",
    "WHDR_ENDLOOP",
    "WHDR_INQUEUE",
    "WHDR_PREPARED",
    "WIDM_MAPPER_STATUS",
    "WODM_MAPPER_STATUS",
    "_AUDCLNT_BUFFERFLAGS",
    "acmDriverAddA",
    "acmDriverAddW",
    "acmDriverClose",
    "acmDriverDetailsA",
    "acmDriverDetailsW",
    "acmDriverEnum",
    "acmDriverID",
    "acmDriverMessage",
    "acmDriverOpen",
    "acmDriverPriority",
    "acmDriverRemove",
    "acmFilterChooseA",
    "acmFilterChooseW",
    "acmFilterDetailsA",
    "acmFilterDetailsW",
    "acmFilterEnumA",
    "acmFilterEnumW",
    "acmFilterTagDetailsA",
    "acmFilterTagDetailsW",
    "acmFilterTagEnumA",
    "acmFilterTagEnumW",
    "acmFormatChooseA",
    "acmFormatChooseW",
    "acmFormatDetailsA",
    "acmFormatDetailsW",
    "acmFormatEnumA",
    "acmFormatEnumW",
    "acmFormatSuggest",
    "acmFormatTagDetailsA",
    "acmFormatTagDetailsW",
    "acmFormatTagEnumA",
    "acmFormatTagEnumW",
    "acmGetVersion",
    "acmMetrics",
    "acmStreamClose",
    "acmStreamConvert",
    "acmStreamMessage",
    "acmStreamOpen",
    "acmStreamPrepareHeader",
    "acmStreamReset",
    "acmStreamSize",
    "acmStreamUnprepareHeader",
    "auxGetDevCapsA",
    "auxGetDevCapsW",
    "auxGetNumDevs",
    "auxGetVolume",
    "auxOutMessage",
    "auxSetVolume",
    "midiConnect",
    "midiDisconnect",
    "midiInAddBuffer",
    "midiInClose",
    "midiInGetDevCapsA",
    "midiInGetDevCapsW",
    "midiInGetErrorTextA",
    "midiInGetErrorTextW",
    "midiInGetID",
    "midiInGetNumDevs",
    "midiInMessage",
    "midiInOpen",
    "midiInPrepareHeader",
    "midiInReset",
    "midiInStart",
    "midiInStop",
    "midiInUnprepareHeader",
    "midiOutCacheDrumPatches",
    "midiOutCachePatches",
    "midiOutClose",
    "midiOutGetDevCapsA",
    "midiOutGetDevCapsW",
    "midiOutGetErrorTextA",
    "midiOutGetErrorTextW",
    "midiOutGetID",
    "midiOutGetNumDevs",
    "midiOutGetVolume",
    "midiOutLongMsg",
    "midiOutMessage",
    "midiOutOpen",
    "midiOutPrepareHeader",
    "midiOutReset",
    "midiOutSetVolume",
    "midiOutShortMsg",
    "midiOutUnprepareHeader",
    "midiStreamClose",
    "midiStreamOpen",
    "midiStreamOut",
    "midiStreamPause",
    "midiStreamPosition",
    "midiStreamProperty",
    "midiStreamRestart",
    "midiStreamStop",
    "mixerClose",
    "mixerGetControlDetailsA",
    "mixerGetControlDetailsW",
    "mixerGetDevCapsA",
    "mixerGetDevCapsW",
    "mixerGetID",
    "mixerGetLineControlsA",
    "mixerGetLineControlsW",
    "mixerGetLineInfoA",
    "mixerGetLineInfoW",
    "mixerGetNumDevs",
    "mixerMessage",
    "mixerOpen",
    "mixerSetControlDetails",
    "sndPlaySoundA",
    "sndPlaySoundW",
    "tACMFORMATDETAILSW",
    "waveInAddBuffer",
    "waveInClose",
    "waveInGetDevCapsA",
    "waveInGetDevCapsW",
    "waveInGetErrorTextA",
    "waveInGetErrorTextW",
    "waveInGetID",
    "waveInGetNumDevs",
    "waveInGetPosition",
    "waveInMessage",
    "waveInOpen",
    "waveInPrepareHeader",
    "waveInReset",
    "waveInStart",
    "waveInStop",
    "waveInUnprepareHeader",
    "waveOutBreakLoop",
    "waveOutClose",
    "waveOutGetDevCapsA",
    "waveOutGetDevCapsW",
    "waveOutGetErrorTextA",
    "waveOutGetErrorTextW",
    "waveOutGetID",
    "waveOutGetNumDevs",
    "waveOutGetPitch",
    "waveOutGetPlaybackRate",
    "waveOutGetPosition",
    "waveOutGetVolume",
    "waveOutMessage",
    "waveOutOpen",
    "waveOutPause",
    "waveOutPrepareHeader",
    "waveOutReset",
    "waveOutRestart",
    "waveOutSetPitch",
    "waveOutSetPlaybackRate",
    "waveOutSetVolume",
    "waveOutUnprepareHeader",
    "waveOutWrite",
]
