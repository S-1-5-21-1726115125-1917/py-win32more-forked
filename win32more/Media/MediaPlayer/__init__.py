from __future__ import annotations
from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head
import win32more.Foundation
import win32more.Graphics.Gdi
import win32more.Media.MediaFoundation
import win32more.Media.MediaPlayer
import win32more.System.Com
import win32more.System.Ole
import win32more.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
def __dir__():
    return __all__
class _WMPOCXEvents(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('6bf52a51-394a-11d3-b1-53-00-c0-4f-79-fa-a6')
CLSID_XFeedsManager: Guid = Guid('fe6b11c3-c72e-4061-86-c6-9d-16-31-21-f2-29')
WMPGC_FLAGS_ALLOW_PREROLL: UInt32 = 1
WMPGC_FLAGS_SUPPRESS_DIALOGS: UInt32 = 2
WMPGC_FLAGS_IGNORE_AV_SYNC: UInt32 = 4
WMPGC_FLAGS_DISABLE_PLUGINS: UInt32 = 8
WMPGC_FLAGS_USE_CUSTOM_GRAPH: UInt32 = 16
WMPUE_EC_USER: UInt32 = 33024
WMP_MDRT_FLAGS_UNREPORTED_DELETED_ITEMS: UInt32 = 1
WMP_MDRT_FLAGS_UNREPORTED_ADDED_ITEMS: UInt32 = 2
IOCTL_WMP_METADATA_ROUND_TRIP: UInt32 = 827346263
IOCTL_WMP_DEVICE_CAN_SYNC: UInt32 = 844123479
EFFECT_CANGOFULLSCREEN: UInt32 = 1
EFFECT_HASPROPERTYPAGE: UInt32 = 2
EFFECT_VARIABLEFREQSTEP: UInt32 = 4
EFFECT_WINDOWEDONLY: UInt32 = 8
EFFECT2_FULLSCREENEXCLUSIVE: UInt32 = 16
SA_BUFFER_SIZE: UInt32 = 1024
PLUGIN_INSTALLREGKEY: String = 'Software\\Microsoft\\MediaPlayer\\UIPlugins'
PLUGIN_INSTALLREGKEY_FRIENDLYNAME: String = 'FriendlyName'
PLUGIN_INSTALLREGKEY_DESCRIPTION: String = 'Description'
PLUGIN_INSTALLREGKEY_CAPABILITIES: String = 'Capabilities'
PLUGIN_INSTALLREGKEY_UNINSTALL: String = 'UninstallPath'
PLUGIN_TYPE_BACKGROUND: UInt32 = 1
PLUGIN_TYPE_SEPARATEWINDOW: UInt32 = 2
PLUGIN_TYPE_DISPLAYAREA: UInt32 = 3
PLUGIN_TYPE_SETTINGSAREA: UInt32 = 4
PLUGIN_TYPE_METADATAAREA: UInt32 = 5
PLUGIN_FLAGS_HASPROPERTYPAGE: UInt32 = 2147483648
PLUGIN_FLAGS_INSTALLAUTORUN: UInt32 = 1073741824
PLUGIN_FLAGS_LAUNCHPROPERTYPAGE: UInt32 = 536870912
PLUGIN_FLAGS_ACCEPTSMEDIA: UInt32 = 268435456
PLUGIN_FLAGS_ACCEPTSPLAYLISTS: UInt32 = 134217728
PLUGIN_FLAGS_HASPRESETS: UInt32 = 67108864
PLUGIN_FLAGS_HIDDEN: UInt32 = 33554432
PLUGIN_MISC_PRESETCOUNT: String = 'PresetCount'
PLUGIN_MISC_PRESETNAMES: String = 'PresetNames'
PLUGIN_MISC_CURRENTPRESET: String = 'CurrentPreset'
PLUGIN_SEPARATEWINDOW_RESIZABLE: String = 'Resizable'
PLUGIN_SEPARATEWINDOW_DEFAULTWIDTH: String = 'DefaultWidth'
PLUGIN_SEPARATEWINDOW_DEFAULTHEIGHT: String = 'DefaultHeight'
PLUGIN_SEPARATEWINDOW_MINWIDTH: String = 'MinWidth'
PLUGIN_SEPARATEWINDOW_MINHEIGHT: String = 'MinHeight'
PLUGIN_SEPARATEWINDOW_MAXWIDTH: String = 'MaxWidth'
PLUGIN_SEPARATEWINDOW_MAXHEIGHT: String = 'MaxHeight'
PLUGIN_MISC_QUERYDESTROY: String = 'QueryDestroy'
PLUGIN_ALL_MEDIASENDTO: String = 'MediaSendTo'
PLUGIN_ALL_PLAYLISTSENDTO: String = 'PlaylistSendTo'
SUBSCRIPTION_CAP_DEVICEAVAILABLE: UInt32 = 16
SUBSCRIPTION_CAP_BACKGROUNDPROCESSING: UInt32 = 8
SUBSCRIPTION_CAP_IS_CONTENTPARTNER: UInt32 = 64
SUBSCRIPTION_CAP_ALTLOGIN: UInt32 = 128
SUBSCRIPTION_CAP_ALLOWPLAY: UInt32 = 1
SUBSCRIPTION_CAP_ALLOWCDBURN: UInt32 = 2
SUBSCRIPTION_CAP_ALLOWPDATRANSFER: UInt32 = 4
SUBSCRIPTION_CAP_PREPAREFORSYNC: UInt32 = 32
SUBSCRIPTION_V1_CAPS: UInt32 = 15
SUBSCRIPTION_CAP_UILESSMODE_ALLOWPLAY: UInt32 = 256
WMP_SUBSCR_DL_TYPE_BACKGROUND: String = 'background'
WMP_SUBSCR_DL_TYPE_REALTIME: String = 'real time'
DISPID_FEEDS_RootFolder: UInt32 = 4096
DISPID_FEEDS_IsSubscribed: UInt32 = 4097
DISPID_FEEDS_ExistsFeed: UInt32 = 4098
DISPID_FEEDS_GetFeed: UInt32 = 4099
DISPID_FEEDS_ExistsFolder: UInt32 = 4100
DISPID_FEEDS_GetFolder: UInt32 = 4101
DISPID_FEEDS_DeleteFeed: UInt32 = 4102
DISPID_FEEDS_DeleteFolder: UInt32 = 4103
DISPID_FEEDS_GetFeedByUrl: UInt32 = 4104
DISPID_FEEDS_BackgroundSync: UInt32 = 4105
DISPID_FEEDS_BackgroundSyncStatus: UInt32 = 4106
DISPID_FEEDS_DefaultInterval: UInt32 = 4107
DISPID_FEEDS_AsyncSyncAll: UInt32 = 4108
DISPID_FEEDS_Normalize: UInt32 = 4109
DISPID_FEEDS_ItemCountLimit: UInt32 = 4110
DISPID_FEEDSENUM_Count: UInt32 = 8192
DISPID_FEEDSENUM_Item: UInt32 = 8193
DISPID_FEEDFOLDER_Feeds: UInt32 = 12288
DISPID_FEEDFOLDER_Subfolders: UInt32 = 12289
DISPID_FEEDFOLDER_CreateFeed: UInt32 = 12290
DISPID_FEEDFOLDER_CreateSubfolder: UInt32 = 12291
DISPID_FEEDFOLDER_ExistsFeed: UInt32 = 12292
DISPID_FEEDFOLDER_GetFeed: UInt32 = 12293
DISPID_FEEDFOLDER_ExistsSubfolder: UInt32 = 12294
DISPID_FEEDFOLDER_GetSubfolder: UInt32 = 12295
DISPID_FEEDFOLDER_Delete: UInt32 = 12296
DISPID_FEEDFOLDER_Name: UInt32 = 12297
DISPID_FEEDFOLDER_Rename: UInt32 = 12298
DISPID_FEEDFOLDER_Path: UInt32 = 12299
DISPID_FEEDFOLDER_Move: UInt32 = 12300
DISPID_FEEDFOLDER_Parent: UInt32 = 12301
DISPID_FEEDFOLDER_IsRoot: UInt32 = 12302
DISPID_FEEDFOLDER_TotalUnreadItemCount: UInt32 = 12303
DISPID_FEEDFOLDER_TotalItemCount: UInt32 = 12304
DISPID_FEEDFOLDER_GetWatcher: UInt32 = 12305
DISPID_FEED_Xml: UInt32 = 16384
DISPID_FEED_Name: UInt32 = 16385
DISPID_FEED_Rename: UInt32 = 16386
DISPID_FEED_Url: UInt32 = 16387
DISPID_FEED_LocalId: UInt32 = 16388
DISPID_FEED_Path: UInt32 = 16389
DISPID_FEED_Move: UInt32 = 16390
DISPID_FEED_Parent: UInt32 = 16391
DISPID_FEED_LastWriteTime: UInt32 = 16392
DISPID_FEED_Delete: UInt32 = 16393
DISPID_FEED_Download: UInt32 = 16394
DISPID_FEED_AsyncDownload: UInt32 = 16395
DISPID_FEED_CancelAsyncDownload: UInt32 = 16396
DISPID_FEED_Interval: UInt32 = 16397
DISPID_FEED_SyncSetting: UInt32 = 16398
DISPID_FEED_LastDownloadTime: UInt32 = 16399
DISPID_FEED_LocalEnclosurePath: UInt32 = 16400
DISPID_FEED_Items: UInt32 = 16401
DISPID_FEED_GetItem: UInt32 = 16402
DISPID_FEED_Title: UInt32 = 16403
DISPID_FEED_Description: UInt32 = 16404
DISPID_FEED_Link: UInt32 = 16405
DISPID_FEED_Image: UInt32 = 16406
DISPID_FEED_LastBuildDate: UInt32 = 16407
DISPID_FEED_PubDate: UInt32 = 16408
DISPID_FEED_Ttl: UInt32 = 16409
DISPID_FEED_Language: UInt32 = 16410
DISPID_FEED_Copyright: UInt32 = 16411
DISPID_FEED_DownloadEnclosuresAutomatically: UInt32 = 16412
DISPID_FEED_DownloadStatus: UInt32 = 16413
DISPID_FEED_LastDownloadError: UInt32 = 16414
DISPID_FEED_Merge: UInt32 = 16415
DISPID_FEED_DownloadUrl: UInt32 = 16416
DISPID_FEED_IsList: UInt32 = 16417
DISPID_FEED_MarkAllItemsRead: UInt32 = 16418
DISPID_FEED_GetWatcher: UInt32 = 16419
DISPID_FEED_UnreadItemCount: UInt32 = 16420
DISPID_FEED_ItemCount: UInt32 = 16421
DISPID_FEED_MaxItemCount: UInt32 = 16422
DISPID_FEED_GetItemByEffectiveId: UInt32 = 16423
DISPID_FEED_LastItemDownloadTime: UInt32 = 16424
DISPID_FEED_Username: UInt32 = 16425
DISPID_FEED_Password: UInt32 = 16426
DISPID_FEED_SetCredentials: UInt32 = 16427
DISPID_FEED_ClearCredentials: UInt32 = 16428
DISPID_FEEDITEM_Xml: UInt32 = 20480
DISPID_FEEDITEM_Title: UInt32 = 20481
DISPID_FEEDITEM_Link: UInt32 = 20482
DISPID_FEEDITEM_Guid: UInt32 = 20483
DISPID_FEEDITEM_Description: UInt32 = 20484
DISPID_FEEDITEM_PubDate: UInt32 = 20485
DISPID_FEEDITEM_Comments: UInt32 = 20486
DISPID_FEEDITEM_Author: UInt32 = 20487
DISPID_FEEDITEM_Enclosure: UInt32 = 20488
DISPID_FEEDITEM_IsRead: UInt32 = 20489
DISPID_FEEDITEM_LocalId: UInt32 = 20490
DISPID_FEEDITEM_Parent: UInt32 = 20491
DISPID_FEEDITEM_Delete: UInt32 = 20492
DISPID_FEEDITEM_DownloadUrl: UInt32 = 20493
DISPID_FEEDITEM_LastDownloadTime: UInt32 = 20494
DISPID_FEEDITEM_Modified: UInt32 = 20495
DISPID_FEEDITEM_EffectiveId: UInt32 = 20496
DISPID_FEEDENCLOSURE_Url: UInt32 = 24576
DISPID_FEEDENCLOSURE_Type: UInt32 = 24577
DISPID_FEEDENCLOSURE_Length: UInt32 = 24578
DISPID_FEEDENCLOSURE_AsyncDownload: UInt32 = 24579
DISPID_FEEDENCLOSURE_CancelAsyncDownload: UInt32 = 24580
DISPID_FEEDENCLOSURE_DownloadStatus: UInt32 = 24581
DISPID_FEEDENCLOSURE_LastDownloadError: UInt32 = 24582
DISPID_FEEDENCLOSURE_LocalPath: UInt32 = 24583
DISPID_FEEDENCLOSURE_Parent: UInt32 = 24584
DISPID_FEEDENCLOSURE_DownloadUrl: UInt32 = 24585
DISPID_FEEDENCLOSURE_DownloadMimeType: UInt32 = 24586
DISPID_FEEDENCLOSURE_RemoveFile: UInt32 = 24587
DISPID_FEEDENCLOSURE_SetFile: UInt32 = 24588
DISPID_FEEDFOLDEREVENTS_Error: UInt32 = 28672
DISPID_FEEDFOLDEREVENTS_FolderAdded: UInt32 = 28673
DISPID_FEEDFOLDEREVENTS_FolderDeleted: UInt32 = 28674
DISPID_FEEDFOLDEREVENTS_FolderRenamed: UInt32 = 28675
DISPID_FEEDFOLDEREVENTS_FolderMovedFrom: UInt32 = 28676
DISPID_FEEDFOLDEREVENTS_FolderMovedTo: UInt32 = 28677
DISPID_FEEDFOLDEREVENTS_FolderItemCountChanged: UInt32 = 28678
DISPID_FEEDFOLDEREVENTS_FeedAdded: UInt32 = 28679
DISPID_FEEDFOLDEREVENTS_FeedDeleted: UInt32 = 28680
DISPID_FEEDFOLDEREVENTS_FeedRenamed: UInt32 = 28681
DISPID_FEEDFOLDEREVENTS_FeedUrlChanged: UInt32 = 28682
DISPID_FEEDFOLDEREVENTS_FeedMovedFrom: UInt32 = 28683
DISPID_FEEDFOLDEREVENTS_FeedMovedTo: UInt32 = 28684
DISPID_FEEDFOLDEREVENTS_FeedDownloading: UInt32 = 28685
DISPID_FEEDFOLDEREVENTS_FeedDownloadCompleted: UInt32 = 28686
DISPID_FEEDFOLDEREVENTS_FeedItemCountChanged: UInt32 = 28687
DISPID_FEEDEVENTS_Error: UInt32 = 32768
DISPID_FEEDEVENTS_FeedDeleted: UInt32 = 32769
DISPID_FEEDEVENTS_FeedRenamed: UInt32 = 32770
DISPID_FEEDEVENTS_FeedUrlChanged: UInt32 = 32771
DISPID_FEEDEVENTS_FeedMoved: UInt32 = 32772
DISPID_FEEDEVENTS_FeedDownloading: UInt32 = 32773
DISPID_FEEDEVENTS_FeedDownloadCompleted: UInt32 = 32774
DISPID_FEEDEVENTS_FeedItemCountChanged: UInt32 = 32775
DISPID_DELTA: UInt32 = 50
DISPID_WMPCORE_BASE: UInt32 = 0
DISPID_WMPCORE_URL: UInt32 = 1
DISPID_WMPCORE_OPENSTATE: UInt32 = 2
DISPID_WMPCORE_CLOSE: UInt32 = 3
DISPID_WMPCORE_CONTROLS: UInt32 = 4
DISPID_WMPCORE_SETTINGS: UInt32 = 5
DISPID_WMPCORE_CURRENTMEDIA: UInt32 = 6
DISPID_WMPCORE_NETWORK: UInt32 = 7
DISPID_WMPCORE_MEDIACOLLECTION: UInt32 = 8
DISPID_WMPCORE_PLAYLISTCOLLECTION: UInt32 = 9
DISPID_WMPCORE_PLAYSTATE: UInt32 = 10
DISPID_WMPCORE_VERSIONINFO: UInt32 = 11
DISPID_WMPCORE_LAUNCHURL: UInt32 = 12
DISPID_WMPCORE_CURRENTPLAYLIST: UInt32 = 13
DISPID_WMPCORE_CDROMCOLLECTION: UInt32 = 14
DISPID_WMPCORE_CLOSEDCAPTION: UInt32 = 15
DISPID_WMPCORE_ISONLINE: UInt32 = 16
DISPID_WMPCORE_ERROR: UInt32 = 17
DISPID_WMPCORE_STATUS: UInt32 = 18
DISPID_WMPCORE_LAST: UInt32 = 18
DISPID_WMPOCX_BASE: UInt32 = 18
DISPID_WMPOCX_ENABLED: UInt32 = 19
DISPID_WMPOCX_TRANSPARENTATSTART: UInt32 = 20
DISPID_WMPOCX_FULLSCREEN: UInt32 = 21
DISPID_WMPOCX_ENABLECONTEXTMENU: UInt32 = 22
DISPID_WMPOCX_UIMODE: UInt32 = 23
DISPID_WMPOCX_LAST: UInt32 = 23
DISPID_WMPOCX2_BASE: UInt32 = 23
DISPID_WMPOCX2_STRETCHTOFIT: UInt32 = 24
DISPID_WMPOCX2_WINDOWLESSVIDEO: UInt32 = 25
DISPID_WMPOCX4_ISREMOTE: UInt32 = 26
DISPID_WMPOCX4_PLAYERAPPLICATION: UInt32 = 27
DISPID_WMPOCX4_OPENPLAYER: UInt32 = 28
DISPID_WMPCORE2_BASE: UInt32 = 39
DISPID_WMPCORE2_DVD: UInt32 = 40
DISPID_WMPCORE3_NEWPLAYLIST: UInt32 = 41
DISPID_WMPCORE3_NEWMEDIA: UInt32 = 42
DISPID_WMPCONTROLS_PLAY: UInt32 = 51
DISPID_WMPCONTROLS_STOP: UInt32 = 52
DISPID_WMPCONTROLS_PAUSE: UInt32 = 53
DISPID_WMPCONTROLS_FASTFORWARD: UInt32 = 54
DISPID_WMPCONTROLS_FASTREVERSE: UInt32 = 55
DISPID_WMPCONTROLS_CURRENTPOSITION: UInt32 = 56
DISPID_WMPCONTROLS_CURRENTPOSITIONSTRING: UInt32 = 57
DISPID_WMPCONTROLS_NEXT: UInt32 = 58
DISPID_WMPCONTROLS_PREVIOUS: UInt32 = 59
DISPID_WMPCONTROLS_CURRENTITEM: UInt32 = 60
DISPID_WMPCONTROLS_CURRENTMARKER: UInt32 = 61
DISPID_WMPCONTROLS_ISAVAILABLE: UInt32 = 62
DISPID_WMPCONTROLS_PLAYITEM: UInt32 = 63
DISPID_WMPCONTROLS2_STEP: UInt32 = 64
DISPID_WMPCONTROLS3_AUDIOLANGUAGECOUNT: UInt32 = 65
DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEID: UInt32 = 66
DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEDESC: UInt32 = 67
DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGE: UInt32 = 68
DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGEINDEX: UInt32 = 69
DISPID_WMPCONTROLS3_GETLANGUAGENAME: UInt32 = 70
DISPID_WMPCONTROLS3_CURRENTPOSITIONTIMECODE: UInt32 = 71
DISPID_WMPCONTROLSFAKE_TIMECOMPRESSION: UInt32 = 72
DISPID_WMPSETTINGS_AUTOSTART: UInt32 = 101
DISPID_WMPSETTINGS_BALANCE: UInt32 = 102
DISPID_WMPSETTINGS_INVOKEURLS: UInt32 = 103
DISPID_WMPSETTINGS_MUTE: UInt32 = 104
DISPID_WMPSETTINGS_PLAYCOUNT: UInt32 = 105
DISPID_WMPSETTINGS_RATE: UInt32 = 106
DISPID_WMPSETTINGS_VOLUME: UInt32 = 107
DISPID_WMPSETTINGS_BASEURL: UInt32 = 108
DISPID_WMPSETTINGS_DEFAULTFRAME: UInt32 = 109
DISPID_WMPSETTINGS_GETMODE: UInt32 = 110
DISPID_WMPSETTINGS_SETMODE: UInt32 = 111
DISPID_WMPSETTINGS_ENABLEERRORDIALOGS: UInt32 = 112
DISPID_WMPSETTINGS_ISAVAILABLE: UInt32 = 113
DISPID_WMPSETTINGS2_DEFAULTAUDIOLANGUAGE: UInt32 = 114
DISPID_WMPSETTINGS2_LIBRARYACCESSRIGHTS: UInt32 = 115
DISPID_WMPSETTINGS2_REQUESTLIBRARYACCESSRIGHTS: UInt32 = 116
DISPID_WMPPLAYLIST_COUNT: UInt32 = 201
DISPID_WMPPLAYLIST_NAME: UInt32 = 202
DISPID_WMPPLAYLIST_GETITEMINFO: UInt32 = 203
DISPID_WMPPLAYLIST_SETITEMINFO: UInt32 = 204
DISPID_WMPPLAYLIST_CLEAR: UInt32 = 205
DISPID_WMPPLAYLIST_INSERTITEM: UInt32 = 206
DISPID_WMPPLAYLIST_APPENDITEM: UInt32 = 207
DISPID_WMPPLAYLIST_REMOVEITEM: UInt32 = 208
DISPID_WMPPLAYLIST_MOVEITEM: UInt32 = 209
DISPID_WMPPLAYLIST_ATTRIBUTECOUNT: UInt32 = 210
DISPID_WMPPLAYLIST_ATTRIBUTENAME: UInt32 = 211
DISPID_WMPPLAYLIST_ITEM: UInt32 = 212
DISPID_WMPPLAYLIST_ISIDENTICAL: UInt32 = 213
DISPID_WMPCDROM_DRIVESPECIFIER: UInt32 = 251
DISPID_WMPCDROM_PLAYLIST: UInt32 = 252
DISPID_WMPCDROM_EJECT: UInt32 = 253
DISPID_WMPCDROMCOLLECTION_COUNT: UInt32 = 301
DISPID_WMPCDROMCOLLECTION_ITEM: UInt32 = 302
DISPID_WMPCDROMCOLLECTION_GETBYDRIVESPECIFIER: UInt32 = 303
DISPID_WMPCDROMCOLLECTION_STARTMONITORINGCDROMS: UInt32 = 304
DISPID_WMPCDROMCOLLECTION_STOPMONITORINGCDROMS: UInt32 = 305
DISPID_WMPSTRINGCOLLECTION_COUNT: UInt32 = 401
DISPID_WMPSTRINGCOLLECTION_ITEM: UInt32 = 402
DISPID_WMPMEDIACOLLECTION_ADD: UInt32 = 452
DISPID_WMPMEDIACOLLECTION_GETALL: UInt32 = 453
DISPID_WMPMEDIACOLLECTION_GETBYNAME: UInt32 = 454
DISPID_WMPMEDIACOLLECTION_GETBYGENRE: UInt32 = 455
DISPID_WMPMEDIACOLLECTION_GETBYAUTHOR: UInt32 = 456
DISPID_WMPMEDIACOLLECTION_GETBYALBUM: UInt32 = 457
DISPID_WMPMEDIACOLLECTION_GETBYATTRIBUTE: UInt32 = 458
DISPID_WMPMEDIACOLLECTION_REMOVE: UInt32 = 459
DISPID_WMPMEDIACOLLECTION_GETATTRIBUTESTRINGCOLLECTION: UInt32 = 461
DISPID_WMPMEDIACOLLECTION_NEWQUERY: UInt32 = 462
DISPID_WMPMEDIACOLLECTION_STARTMONITORING: UInt32 = 463
DISPID_WMPMEDIACOLLECTION_STOPMONITORING: UInt32 = 464
DISPID_WMPMEDIACOLLECTION_STARTCONTENTSCAN: UInt32 = 465
DISPID_WMPMEDIACOLLECTION_STOPCONTENTSCAN: UInt32 = 466
DISPID_WMPMEDIACOLLECTION_STARTSEARCH: UInt32 = 467
DISPID_WMPMEDIACOLLECTION_STOPSEARCH: UInt32 = 468
DISPID_WMPMEDIACOLLECTION_UPDATEMETADATA: UInt32 = 469
DISPID_WMPMEDIACOLLECTION_GETMEDIAATOM: UInt32 = 470
DISPID_WMPMEDIACOLLECTION_SETDELETED: UInt32 = 471
DISPID_WMPMEDIACOLLECTION_ISDELETED: UInt32 = 472
DISPID_WMPMEDIACOLLECTION_GETBYQUERYDESCRIPTION: UInt32 = 473
DISPID_WMPMEDIACOLLECTION_FREEZECOLLECTIONCHANGE: UInt32 = 474
DISPID_WMPMEDIACOLLECTION_UNFREEZECOLLECTIONCHANGE: UInt32 = 475
DISPID_WMPMEDIACOLLECTION_POSTCOLLECTIONCHANGE: UInt32 = 476
DISPID_WMPPLAYLISTARRAY_COUNT: UInt32 = 501
DISPID_WMPPLAYLISTARRAY_ITEM: UInt32 = 502
DISPID_WMPPLAYLISTCOLLECTION_NEWPLAYLIST: UInt32 = 552
DISPID_WMPPLAYLISTCOLLECTION_GETALL: UInt32 = 553
DISPID_WMPPLAYLISTCOLLECTION_GETBYNAME: UInt32 = 554
DISPID_WMPPLAYLISTCOLLECTION_GETBYQUERYDESCRIPTION: UInt32 = 555
DISPID_WMPPLAYLISTCOLLECTION_REMOVE: UInt32 = 556
DISPID_WMPPLAYLISTCOLLECTION_NEWQUERY: UInt32 = 557
DISPID_WMPPLAYLISTCOLLECTION_STARTMONITORING: UInt32 = 558
DISPID_WMPPLAYLISTCOLLECTION_STOPMONITORING: UInt32 = 559
DISPID_WMPPLAYLISTCOLLECTION_SETDELETED: UInt32 = 560
DISPID_WMPPLAYLISTCOLLECTION_ISDELETED: UInt32 = 561
DISPID_WMPPLAYLISTCOLLECTION_IMPORTPLAYLIST: UInt32 = 562
DISPID_WMPMEDIA_SOURCEURL: UInt32 = 751
DISPID_WMPMEDIA_IMAGESOURCEWIDTH: UInt32 = 752
DISPID_WMPMEDIA_IMAGESOURCEHEIGHT: UInt32 = 753
DISPID_WMPMEDIA_MARKERCOUNT: UInt32 = 754
DISPID_WMPMEDIA_GETMARKERTIME: UInt32 = 755
DISPID_WMPMEDIA_GETMARKERNAME: UInt32 = 756
DISPID_WMPMEDIA_DURATION: UInt32 = 757
DISPID_WMPMEDIA_DURATIONSTRING: UInt32 = 758
DISPID_WMPMEDIA_ATTRIBUTECOUNT: UInt32 = 759
DISPID_WMPMEDIA_GETATTRIBUTENAME: UInt32 = 760
DISPID_WMPMEDIA_GETITEMINFO: UInt32 = 761
DISPID_WMPMEDIA_SETITEMINFO: UInt32 = 762
DISPID_WMPMEDIA_ISIDENTICAL: UInt32 = 763
DISPID_WMPMEDIA_NAME: UInt32 = 764
DISPID_WMPMEDIA_GETITEMINFOBYATOM: UInt32 = 765
DISPID_WMPMEDIA_ISMEMBEROF: UInt32 = 766
DISPID_WMPMEDIA_ISREADONLYITEM: UInt32 = 767
DISPID_WMPMEDIA2_ERROR: UInt32 = 768
DISPID_WMPMEDIA3_GETATTRIBUTECOUNTBYTYPE: UInt32 = 769
DISPID_WMPMEDIA3_GETITEMINFOBYTYPE: UInt32 = 770
DISPID_WMPNETWORK_BANDWIDTH: UInt32 = 801
DISPID_WMPNETWORK_RECOVEREDPACKETS: UInt32 = 802
DISPID_WMPNETWORK_SOURCEPROTOCOL: UInt32 = 803
DISPID_WMPNETWORK_RECEIVEDPACKETS: UInt32 = 804
DISPID_WMPNETWORK_LOSTPACKETS: UInt32 = 805
DISPID_WMPNETWORK_RECEPTIONQUALITY: UInt32 = 806
DISPID_WMPNETWORK_BUFFERINGCOUNT: UInt32 = 807
DISPID_WMPNETWORK_BUFFERINGPROGRESS: UInt32 = 808
DISPID_WMPNETWORK_BUFFERINGTIME: UInt32 = 809
DISPID_WMPNETWORK_FRAMERATE: UInt32 = 810
DISPID_WMPNETWORK_MAXBITRATE: UInt32 = 811
DISPID_WMPNETWORK_BITRATE: UInt32 = 812
DISPID_WMPNETWORK_GETPROXYSETTINGS: UInt32 = 813
DISPID_WMPNETWORK_SETPROXYSETTINGS: UInt32 = 814
DISPID_WMPNETWORK_GETPROXYNAME: UInt32 = 815
DISPID_WMPNETWORK_SETPROXYNAME: UInt32 = 816
DISPID_WMPNETWORK_GETPROXYPORT: UInt32 = 817
DISPID_WMPNETWORK_SETPROXYPORT: UInt32 = 818
DISPID_WMPNETWORK_GETPROXYEXCEPTIONLIST: UInt32 = 819
DISPID_WMPNETWORK_SETPROXYEXCEPTIONLIST: UInt32 = 820
DISPID_WMPNETWORK_GETPROXYBYPASSFORLOCAL: UInt32 = 821
DISPID_WMPNETWORK_SETPROXYBYPASSFORLOCAL: UInt32 = 822
DISPID_WMPNETWORK_MAXBANDWIDTH: UInt32 = 823
DISPID_WMPNETWORK_DOWNLOADPROGRESS: UInt32 = 824
DISPID_WMPNETWORK_ENCODEDFRAMERATE: UInt32 = 825
DISPID_WMPNETWORK_FRAMESSKIPPED: UInt32 = 826
DISPID_WMPERROR_CLEARERRORQUEUE: UInt32 = 851
DISPID_WMPERROR_ERRORCOUNT: UInt32 = 852
DISPID_WMPERROR_ITEM: UInt32 = 853
DISPID_WMPERROR_WEBHELP: UInt32 = 854
DISPID_WMPERRORITEM_ERRORCODE: UInt32 = 901
DISPID_WMPERRORITEM_ERRORDESCRIPTION: UInt32 = 902
DISPID_WMPERRORITEM_ERRORCONTEXT: UInt32 = 903
DISPID_WMPERRORITEM_REMEDY: UInt32 = 904
DISPID_WMPERRORITEM_CUSTOMURL: UInt32 = 905
DISPID_WMPERRORITEM2_CONDITION: UInt32 = 906
DISPID_WMPCLOSEDCAPTION_SAMISTYLE: UInt32 = 951
DISPID_WMPCLOSEDCAPTION_SAMILANG: UInt32 = 952
DISPID_WMPCLOSEDCAPTION_SAMIFILENAME: UInt32 = 953
DISPID_WMPCLOSEDCAPTION_CAPTIONINGID: UInt32 = 954
DISPID_WMPCLOSEDCAPTION2_GETLANGCOUNT: UInt32 = 955
DISPID_WMPCLOSEDCAPTION2_GETLANGNAME: UInt32 = 956
DISPID_WMPCLOSEDCAPTION2_GETLANGID: UInt32 = 957
DISPID_WMPCLOSEDCAPTION2_GETSTYLECOUNT: UInt32 = 958
DISPID_WMPCLOSEDCAPTION2_GETSTYLENAME: UInt32 = 959
DISPID_WMPDVD_ISAVAILABLE: UInt32 = 1001
DISPID_WMPDVD_DOMAIN: UInt32 = 1002
DISPID_WMPDVD_TOPMENU: UInt32 = 1003
DISPID_WMPDVD_TITLEMENU: UInt32 = 1004
DISPID_WMPDVD_BACK: UInt32 = 1005
DISPID_WMPDVD_RESUME: UInt32 = 1006
DISPID_WMPMETADATA_PICTURE_MIMETYPE: UInt32 = 1051
DISPID_WMPMETADATA_PICTURE_PICTURETYPE: UInt32 = 1052
DISPID_WMPMETADATA_PICTURE_DESCRIPTION: UInt32 = 1053
DISPID_WMPMETADATA_PICTURE_URL: UInt32 = 1054
DISPID_WMPMETADATA_TEXT_TEXT: UInt32 = 1055
DISPID_WMPMETADATA_TEXT_DESCRIPTION: UInt32 = 1056
DISPID_WMPPLAYERAPP_SWITCHTOPLAYERAPPLICATION: UInt32 = 1101
DISPID_WMPPLAYERAPP_SWITCHTOCONTROL: UInt32 = 1102
DISPID_WMPPLAYERAPP_PLAYERDOCKED: UInt32 = 1103
DISPID_WMPPLAYERAPP_HASDISPLAY: UInt32 = 1104
DISPID_WMPPLAYERAPP_REMOTESTATUS: UInt32 = 1105
DISPID_WMPDOWNLOADMANAGER_GETDOWNLOADCOLLECTION: UInt32 = 1151
DISPID_WMPDOWNLOADMANAGER_CREATEDOWNLOADCOLLECTION: UInt32 = 1152
DISPID_WMPDOWNLOADCOLLECTION_ID: UInt32 = 1201
DISPID_WMPDOWNLOADCOLLECTION_COUNT: UInt32 = 1202
DISPID_WMPDOWNLOADCOLLECTION_ITEM: UInt32 = 1203
DISPID_WMPDOWNLOADCOLLECTION_STARTDOWNLOAD: UInt32 = 1204
DISPID_WMPDOWNLOADCOLLECTION_REMOVEITEM: UInt32 = 1205
DISPID_WMPDOWNLOADCOLLECTION_CLEAR: UInt32 = 1206
DISPID_WMPDOWNLOADITEM_SOURCEURL: UInt32 = 1251
DISPID_WMPDOWNLOADITEM_SIZE: UInt32 = 1252
DISPID_WMPDOWNLOADITEM_TYPE: UInt32 = 1253
DISPID_WMPDOWNLOADITEM_PROGRESS: UInt32 = 1254
DISPID_WMPDOWNLOADITEM_DOWNLOADSTATE: UInt32 = 1255
DISPID_WMPDOWNLOADITEM_PAUSE: UInt32 = 1256
DISPID_WMPDOWNLOADITEM_RESUME: UInt32 = 1257
DISPID_WMPDOWNLOADITEM_CANCEL: UInt32 = 1258
DISPID_WMPDOWNLOADITEM2_GETITEMINFO: UInt32 = 1301
DISPID_WMPQUERY_ADDCONDITION: UInt32 = 1351
DISPID_WMPQUERY_BEGINNEXTGROUP: UInt32 = 1352
DISPID_WMPMEDIACOLLECTION2_CREATEQUERY: UInt32 = 1401
DISPID_WMPMEDIACOLLECTION2_GETPLAYLISTBYQUERY: UInt32 = 1402
DISPID_WMPMEDIACOLLECTION2_GETSTRINGCOLLBYQUERY: UInt32 = 1403
DISPID_WMPMEDIACOLLECTION2_GETBYATTRANDMEDIATYPE: UInt32 = 1404
DISPID_WMPSTRINGCOLLECTION2_ISIDENTICAL: UInt32 = 1451
DISPID_WMPSTRINGCOLLECTION2_GETITEMINFO: UInt32 = 1452
DISPID_WMPSTRINGCOLLECTION2_GETATTRCOUNTBYTYPE: UInt32 = 1453
DISPID_WMPSTRINGCOLLECTION2_GETITEMINFOBYTYPE: UInt32 = 1454
DISPID_WMPCORE_MIN: UInt32 = 1
DISPID_WMPCORE_MAX: UInt32 = 1454
WMPCOREEVENT_BASE: UInt32 = 5000
DISPID_WMPCOREEVENT_OPENSTATECHANGE: UInt32 = 5001
DISPID_WMPCOREEVENT_STATUSCHANGE: UInt32 = 5002
WMPCOREEVENT_CONTROL_BASE: UInt32 = 5100
DISPID_WMPCOREEVENT_PLAYSTATECHANGE: UInt32 = 5101
DISPID_WMPCOREEVENT_AUDIOLANGUAGECHANGE: UInt32 = 5102
WMPCOREEVENT_SEEK_BASE: UInt32 = 5200
DISPID_WMPCOREEVENT_ENDOFSTREAM: UInt32 = 5201
DISPID_WMPCOREEVENT_POSITIONCHANGE: UInt32 = 5202
DISPID_WMPCOREEVENT_MARKERHIT: UInt32 = 5203
DISPID_WMPCOREEVENT_DURATIONUNITCHANGE: UInt32 = 5204
WMPCOREEVENT_CONTENT_BASE: UInt32 = 5300
DISPID_WMPCOREEVENT_SCRIPTCOMMAND: UInt32 = 5301
WMPCOREEVENT_NETWORK_BASE: UInt32 = 5400
DISPID_WMPCOREEVENT_DISCONNECT: UInt32 = 5401
DISPID_WMPCOREEVENT_BUFFERING: UInt32 = 5402
DISPID_WMPCOREEVENT_NEWSTREAM: UInt32 = 5403
WMPCOREEVENT_ERROR_BASE: UInt32 = 5500
DISPID_WMPCOREEVENT_ERROR: UInt32 = 5501
WMPCOREEVENT_WARNING_BASE: UInt32 = 5600
DISPID_WMPCOREEVENT_WARNING: UInt32 = 5601
WMPCOREEVENT_CDROM_BASE: UInt32 = 5700
DISPID_WMPCOREEVENT_CDROMMEDIACHANGE: UInt32 = 5701
WMPCOREEVENT_PLAYLIST_BASE: UInt32 = 5800
DISPID_WMPCOREEVENT_PLAYLISTCHANGE: UInt32 = 5801
DISPID_WMPCOREEVENT_MEDIACHANGE: UInt32 = 5802
DISPID_WMPCOREEVENT_CURRENTMEDIAITEMAVAILABLE: UInt32 = 5803
DISPID_WMPCOREEVENT_CURRENTPLAYLISTCHANGE: UInt32 = 5804
DISPID_WMPCOREEVENT_CURRENTPLAYLISTITEMAVAILABLE: UInt32 = 5805
DISPID_WMPCOREEVENT_CURRENTITEMCHANGE: UInt32 = 5806
DISPID_WMPCOREEVENT_MEDIACOLLECTIONCHANGE: UInt32 = 5807
DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGADDED: UInt32 = 5808
DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGREMOVED: UInt32 = 5809
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONCHANGE: UInt32 = 5810
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTADDED: UInt32 = 5811
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTREMOVED: UInt32 = 5812
DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANADDEDITEM: UInt32 = 5813
DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANPROGRESS: UInt32 = 5814
DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHFOUNDITEM: UInt32 = 5815
DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHPROGRESS: UInt32 = 5816
DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHCOMPLETE: UInt32 = 5817
DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTSETASDELETED: UInt32 = 5818
DISPID_WMPCOREEVENT_MODECHANGE: UInt32 = 5819
DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGCHANGED: UInt32 = 5820
DISPID_WMPCOREEVENT_MEDIAERROR: UInt32 = 5821
DISPID_WMPCOREEVENT_DOMAINCHANGE: UInt32 = 5822
DISPID_WMPCOREEVENT_OPENPLAYLISTSWITCH: UInt32 = 5823
DISPID_WMPCOREEVENT_STRINGCOLLECTIONCHANGE: UInt32 = 5824
DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAADDED: UInt32 = 5825
DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAREMOVED: UInt32 = 5826
WMPOCXEVENT_BASE: UInt32 = 6500
DISPID_WMPOCXEVENT_SWITCHEDTOPLAYERAPPLICATION: UInt32 = 6501
DISPID_WMPOCXEVENT_SWITCHEDTOCONTROL: UInt32 = 6502
DISPID_WMPOCXEVENT_PLAYERDOCKEDSTATECHANGE: UInt32 = 6503
DISPID_WMPOCXEVENT_PLAYERRECONNECT: UInt32 = 6504
DISPID_WMPOCXEVENT_CLICK: UInt32 = 6505
DISPID_WMPOCXEVENT_DOUBLECLICK: UInt32 = 6506
DISPID_WMPOCXEVENT_KEYDOWN: UInt32 = 6507
DISPID_WMPOCXEVENT_KEYPRESS: UInt32 = 6508
DISPID_WMPOCXEVENT_KEYUP: UInt32 = 6509
DISPID_WMPOCXEVENT_MOUSEDOWN: UInt32 = 6510
DISPID_WMPOCXEVENT_MOUSEMOVE: UInt32 = 6511
DISPID_WMPOCXEVENT_MOUSEUP: UInt32 = 6512
DISPID_WMPOCXEVENT_DEVICECONNECT: UInt32 = 6513
DISPID_WMPOCXEVENT_DEVICEDISCONNECT: UInt32 = 6514
DISPID_WMPOCXEVENT_DEVICESTATUSCHANGE: UInt32 = 6515
DISPID_WMPOCXEVENT_DEVICESYNCSTATECHANGE: UInt32 = 6516
DISPID_WMPOCXEVENT_DEVICESYNCERROR: UInt32 = 6517
DISPID_WMPOCXEVENT_CREATEPARTNERSHIPCOMPLETE: UInt32 = 6518
DISPID_WMPOCXEVENT_CDROMRIPSTATECHANGE: UInt32 = 6519
DISPID_WMPOCXEVENT_CDROMRIPMEDIAERROR: UInt32 = 6520
DISPID_WMPOCXEVENT_CDROMBURNSTATECHANGE: UInt32 = 6521
DISPID_WMPOCXEVENT_CDROMBURNMEDIAERROR: UInt32 = 6522
DISPID_WMPOCXEVENT_CDROMBURNERROR: UInt32 = 6523
DISPID_WMPOCXEVENT_LIBRARYCONNECT: UInt32 = 6524
DISPID_WMPOCXEVENT_LIBRARYDISCONNECT: UInt32 = 6525
DISPID_WMPOCXEVENT_FOLDERSCANSTATECHANGE: UInt32 = 6526
DISPID_WMPOCXEVENT_DEVICEESTIMATION: UInt32 = 6527
DISPID_WMPCONTROLS_BASE: UInt32 = 50
DISPID_WMPSETTINGS_BASE: UInt32 = 100
DISPID_WMPPLAYLIST_BASE: UInt32 = 200
DISPID_WMPCDROM_BASE: UInt32 = 250
DISPID_WMPCDROMCOLLECTION_BASE: UInt32 = 300
DISPID_WMPSTRINGCOLLECTION_BASE: UInt32 = 400
DISPID_WMPMEDIACOLLECTION_BASE: UInt32 = 450
DISPID_WMPPLAYLISTARRAY_BASE: UInt32 = 500
DISPID_WMPPLAYLISTCOLLECTION_BASE: UInt32 = 550
DISPID_WMPMEDIA_BASE: UInt32 = 750
DISPID_WMPNETWORK_BASE: UInt32 = 800
DISPID_WMPERROR_BASE: UInt32 = 850
DISPID_WMPERRORITEM_BASE: UInt32 = 900
DISPID_WMPCLOSEDCAPTION_BASE: UInt32 = 950
DISPID_WMPDVD_BASE: UInt32 = 1000
DISPID_WMPMETADATA_BASE: UInt32 = 1050
DISPID_WMPPLAYERAPP_BASE: UInt32 = 1100
DISPID_WMPDOWNLOADMANAGER_BASE: UInt32 = 1150
DISPID_WMPDOWNLOADCOLLECTION_BASE: UInt32 = 1200
DISPID_WMPDOWNLOADITEM_BASE: UInt32 = 1250
DISPID_WMPDOWNLOADITEM2_BASE: UInt32 = 1300
DISPID_WMPQUERY_BASE: UInt32 = 1350
DISPID_WMPMEDIACOLLECTION2_BASE: UInt32 = 1400
DISPID_WMPSTRINGCOLLECTION2_BASE: UInt32 = 1450
CLSID_WMPSkinManager: Guid = Guid('b2a7fd52-301f-4348-b9-3a-63-8c-6d-e4-92-29')
CLSID_WMPMediaPluginRegistrar: Guid = Guid('5569e7f5-424b-4b93-89-ca-79-d1-79-24-68-9a')
WMP_PLUGINTYPE_DSP: Guid = Guid('6434baea-4954-498d-ab-d5-2b-07-12-3e-1f-04')
WMP_PLUGINTYPE_DSP_OUTOFPROC: Guid = Guid('ef29b174-c347-44cc-9a-4f-23-99-11-8f-f3-8c')
WMP_PLUGINTYPE_RENDERING: Guid = Guid('a8554541-115d-406a-a4-c7-51-11-1c-33-01-83')
kfltTimedLevelMaximumFrequency: Single = 22050
kfltTimedLevelMinimumFrequency: Single = 20
g_szContentPartnerInfo_LoginState: String = 'LoginState'
g_szContentPartnerInfo_MediaPlayerAccountType: String = 'MediaPlayerAccountType'
g_szContentPartnerInfo_AccountType: String = 'AccountType'
g_szContentPartnerInfo_HasCachedCredentials: String = 'HasCachedCredentials'
g_szContentPartnerInfo_LicenseRefreshAdvanceWarning: String = 'LicenseRefreshAdvanceWarning'
g_szContentPartnerInfo_PurchasedTrackRequiresReDownload: String = 'PurchasedTrackRequiresReDownload'
g_szContentPartnerInfo_MaximumTrackPurchasePerPurchase: String = 'MaximumNumberOfTracksPerPurchase'
g_szContentPartnerInfo_AccountBalance: String = 'AccountBalance'
g_szContentPartnerInfo_UserName: String = 'UserName'
g_szMediaPlayerTask_Burn: String = 'Burn'
g_szMediaPlayerTask_Browse: String = 'Browse'
g_szMediaPlayerTask_Sync: String = 'Sync'
g_szItemInfo_PopupURL: String = 'Popup'
g_szItemInfo_AuthenticationSuccessURL: String = 'AuthenticationSuccessURL'
g_szItemInfo_LoginFailureURL: String = 'LoginFailureURL'
g_szItemInfo_HTMLViewURL: String = 'HTMLViewURL'
g_szItemInfo_PopupCaption: String = 'PopupCaption'
g_szItemInfo_ALTLoginURL: String = 'ALTLoginURL'
g_szItemInfo_ALTLoginCaption: String = 'ALTLoginCaption'
g_szItemInfo_ForgetPasswordURL: String = 'ForgotPassword'
g_szItemInfo_CreateAccountURL: String = 'CreateAccount'
g_szItemInfo_ArtistArtURL: String = 'ArtistArt'
g_szItemInfo_AlbumArtURL: String = 'AlbumArt'
g_szItemInfo_ListArtURL: String = 'ListArt'
g_szItemInfo_GenreArtURL: String = 'GenreArt'
g_szItemInfo_SubGenreArtURL: String = 'SubGenreArt'
g_szItemInfo_RadioArtURL: String = 'RadioArt'
g_szItemInfo_TreeListIconURL: String = 'CPListIDIcon'
g_szItemInfo_ErrorDescription: String = 'CPErrorDescription'
g_szItemInfo_ErrorURL: String = 'CPErrorURL'
g_szItemInfo_ErrorURLLinkText: String = 'CPErrorURLLinkText'
g_szUnknownLocation: String = 'UnknownLocation'
g_szRootLocation: String = 'RootLocation'
g_szFlyoutMenu: String = 'FlyoutMenu'
g_szOnlineStore: String = 'OnlineStore'
g_szVideoRecent: String = 'VideoRecent'
g_szVideoRoot: String = 'VideoRoot'
g_szCPListID: String = 'CPListID'
g_szAllCPListIDs: String = 'AllCPListIDs'
g_szCPTrackID: String = 'CPTrackID'
g_szAllCPTrackIDs: String = 'AllCPTrackIDs'
g_szCPArtistID: String = 'CPArtistID'
g_szAllCPArtistIDs: String = 'AllCPArtistIDs'
g_szCPAlbumID: String = 'CPAlbumID'
g_szAllCPAlbumIDs: String = 'AllCPAlbumIDs'
g_szCPGenreID: String = 'CPGenreID'
g_szAllCPGenreIDs: String = 'AllCPGenreIDs'
g_szCPAlbumSubGenreID: String = 'CPAlbumSubGenreID'
g_szAllCPAlbumSubGenreIDs: String = 'AllCPAlbumSubGenreIDs'
g_szReleaseDateYear: String = 'ReleaseDateYear'
g_szAllReleaseDateYears: String = 'AllReleaseDateYears'
g_szCPRadioID: String = 'CPRadioID'
g_szAllCPRadioIDs: String = 'AllCPRadioIDs'
g_szAuthor: String = 'Author'
g_szAllAuthors: String = 'AllAuthors'
g_szWMParentalRating: String = 'WMParentalRating'
g_szAllWMParentalRatings: String = 'AllWMParentalRatings'
g_szAllUserEffectiveRatingStarss: String = 'AllUserEffectiveRatingStarss'
g_szUserEffectiveRatingStars: String = 'UserEffectiveRatingStars'
g_szUserPlaylist: String = 'UserPlaylist'
g_szViewMode_Report: String = 'ViewModeReport'
g_szViewMode_Details: String = 'ViewModeDetails'
g_szViewMode_Icon: String = 'ViewModeIcon'
g_szViewMode_Tile: String = 'ViewModeTile'
g_szViewMode_OrderedList: String = 'ViewModeOrderedList'
g_szContentPrice_Unknown: String = 'PriceUnknown'
g_szContentPrice_CannotBuy: String = 'PriceCannotBuy'
g_szContentPrice_Free: String = 'PriceFree'
g_szRefreshLicensePlay: String = 'RefreshForPlay'
g_szRefreshLicenseBurn: String = 'RefreshForBurn'
g_szRefreshLicenseSync: String = 'RefreshForSync'
g_szVerifyPermissionSync: String = 'VerifyPermissionSync'
g_szStationEvent_Started: String = 'TrackStarted'
g_szStationEvent_Complete: String = 'TrackComplete'
g_szStationEvent_Skipped: String = 'TrackSkipped'
WMProfile_V40_DialUpMBR: Guid = Guid('fd7f47f1-72a6-45a4-80-f0-3a-ec-ef-c3-2c-07')
WMProfile_V40_IntranetMBR: Guid = Guid('82cd3321-a94a-4ffc-9c-2b-09-2c-10-ca-16-e7')
WMProfile_V40_2856100MBR: Guid = Guid('5a1c2206-dc5e-4186-be-b2-4c-5a-99-4b-13-2e')
WMProfile_V40_6VoiceAudio: Guid = Guid('d508978a-11a0-4d15-b0-da-ac-dc-99-d4-f8-90')
WMProfile_V40_16AMRadio: Guid = Guid('0f4be81f-d57d-41e1-b2-e3-2f-ad-98-6b-fe-c2')
WMProfile_V40_288FMRadioMono: Guid = Guid('7fa57fc8-6ea4-4645-8a-bf-b6-e5-a8-f8-14-a1')
WMProfile_V40_288FMRadioStereo: Guid = Guid('22fcf466-aa40-431f-a2-89-06-d0-ea-1a-1e-40')
WMProfile_V40_56DialUpStereo: Guid = Guid('e8026f87-e905-4594-a3-c7-00-d0-00-41-d1-d9')
WMProfile_V40_64Audio: Guid = Guid('4820b3f7-cbec-41dc-93-91-78-59-87-14-c8-e5')
WMProfile_V40_96Audio: Guid = Guid('0efa0ee3-9e64-41e2-83-7f-3c-00-38-f3-27-ba')
WMProfile_V40_128Audio: Guid = Guid('93ddbe12-13dc-4e32-a3-5e-40-37-8e-34-27-9a')
WMProfile_V40_288VideoVoice: Guid = Guid('bb2bc274-0eb6-4da9-b5-50-ec-f7-f2-b9-94-8f')
WMProfile_V40_288VideoAudio: Guid = Guid('ac617f2d-6cbe-4e84-8e-9a-ce-15-1a-12-a3-54')
WMProfile_V40_288VideoWebServer: Guid = Guid('abf2f00d-d555-4815-94-ce-82-75-f3-a7-0b-fe')
WMProfile_V40_56DialUpVideo: Guid = Guid('e21713bb-652f-4dab-99-de-71-e0-44-00-27-0f')
WMProfile_V40_56DialUpVideoWebServer: Guid = Guid('b756ff10-520f-4749-a3-99-b7-80-e2-fc-92-50')
WMProfile_V40_100Video: Guid = Guid('8f99ddd8-6684-456b-a0-a3-33-e1-31-68-95-f0')
WMProfile_V40_250Video: Guid = Guid('541841c3-9339-4f7b-9a-22-b1-15-40-89-4e-42')
WMProfile_V40_512Video: Guid = Guid('70440e6d-c4ef-4f84-8c-d0-d5-c2-86-86-e7-84')
WMProfile_V40_1MBVideo: Guid = Guid('b4482a4c-cc17-4b07-a9-4e-98-18-d5-e0-f1-3f')
WMProfile_V40_3MBVideo: Guid = Guid('55374ac0-309b-4396-b8-8f-e6-e2-92-11-3f-28')
WMProfile_V70_DialUpMBR: Guid = Guid('5b16e74b-4068-45b5-b8-0e-7b-f8-c8-0d-2c-2f')
WMProfile_V70_IntranetMBR: Guid = Guid('045880dc-34b6-4ca9-a3-26-73-55-7e-d1-43-f3')
WMProfile_V70_2856100MBR: Guid = Guid('07df7a25-3fe2-4a5b-8b-1e-34-8b-07-21-ca-70')
WMProfile_V70_288VideoVoice: Guid = Guid('b952f38e-7dbc-4533-a9-ca-b0-0b-1c-6e-98-00')
WMProfile_V70_288VideoAudio: Guid = Guid('58bba0ee-896a-4948-99-53-85-b7-36-f8-39-47')
WMProfile_V70_288VideoWebServer: Guid = Guid('70a32e2b-e2df-4ebd-91-05-d9-ca-19-4a-2d-50')
WMProfile_V70_56VideoWebServer: Guid = Guid('def99e40-57bc-4ab3-b2-d1-b6-e3-ca-f6-42-57')
WMProfile_V70_64VideoISDN: Guid = Guid('c2b7a7e9-7b8e-4992-a1-a1-06-82-17-a3-b3-11')
WMProfile_V70_100Video: Guid = Guid('d9f3c932-5ea9-4c6d-89-b4-26-86-e5-15-42-6e')
WMProfile_V70_256Video: Guid = Guid('afe69b3a-403f-4a1b-80-07-0e-21-cf-b3-df-84')
WMProfile_V70_384Video: Guid = Guid('f3d45fbb-8782-44df-97-c6-86-78-e2-f9-b1-3d')
WMProfile_V70_768Video: Guid = Guid('0326ebb6-f76e-4964-b0-db-e7-29-97-8d-35-ee')
WMProfile_V70_1500Video: Guid = Guid('0b89164a-5490-4686-9e-37-5a-80-88-4e-51-46')
WMProfile_V70_2000Video: Guid = Guid('aa980124-bf10-4e4f-9a-fd-43-29-a7-39-5c-ff')
WMProfile_V70_700FilmContentVideo: Guid = Guid('7a747920-2449-4d76-99-cb-fd-b0-c9-04-84-d4')
WMProfile_V70_1500FilmContentVideo: Guid = Guid('f6a5f6df-ee3f-434c-a4-33-52-3c-e5-5f-51-6b')
WMProfile_V70_6VoiceAudio: Guid = Guid('eaba9fbf-b64f-49b3-aa-0c-73-fb-dd-15-0a-d0')
WMProfile_V70_288FMRadioMono: Guid = Guid('c012a833-a03b-44a5-96-dc-ed-95-cc-65-58-2d')
WMProfile_V70_288FMRadioStereo: Guid = Guid('e96d67c9-1a39-4dc4-b9-00-b1-18-4d-c8-36-20')
WMProfile_V70_56DialUpStereo: Guid = Guid('674ee767-0949-4fac-87-5e-f4-c9-c2-92-01-3b')
WMProfile_V70_64AudioISDN: Guid = Guid('91dea458-9d60-4212-9c-59-d4-09-19-c9-39-e4')
WMProfile_V70_64Audio: Guid = Guid('b29cffc6-f131-41db-b5-e8-99-d8-b0-b9-45-f4')
WMProfile_V70_96Audio: Guid = Guid('a9d4b819-16cc-4a59-9f-37-69-3d-bb-03-02-d6')
WMProfile_V70_128Audio: Guid = Guid('c64cf5da-df45-40d3-80-27-de-69-8d-68-dc-66')
WMProfile_V70_225VideoPDA: Guid = Guid('f55ea573-4c02-42b5-90-26-a8-26-0c-43-8a-9f')
WMProfile_V70_150VideoPDA: Guid = Guid('0f472967-e3c6-4797-96-94-f0-30-4c-5e-2f-17')
WMProfile_V80_255VideoPDA: Guid = Guid('feedbcdf-3fac-4c93-ac-0d-47-94-1e-c7-2c-0b')
WMProfile_V80_150VideoPDA: Guid = Guid('aee16dfa-2c14-4a2f-ad-3f-a3-03-40-31-78-4f')
WMProfile_V80_28856VideoMBR: Guid = Guid('d66920c4-c21f-4ec8-a0-b4-95-cf-2b-d5-7f-c4')
WMProfile_V80_100768VideoMBR: Guid = Guid('5bdb5a0e-979e-47d3-95-96-73-b3-86-39-2a-55')
WMProfile_V80_288100VideoMBR: Guid = Guid('d8722c69-2419-4b36-b4-e0-6e-17-b6-05-64-e5')
WMProfile_V80_288Video: Guid = Guid('3df678d9-1352-4186-bb-f8-74-f0-c1-9b-6a-e2')
WMProfile_V80_56Video: Guid = Guid('254e8a96-2612-405c-80-39-f0-bf-72-5c-ed-7d')
WMProfile_V80_100Video: Guid = Guid('a2e300b4-c2d4-4fc0-b5-dd-ec-bd-94-8d-c0-df')
WMProfile_V80_256Video: Guid = Guid('bbc75500-33d2-4466-b8-6b-12-2b-20-1c-c9-ae')
WMProfile_V80_384Video: Guid = Guid('29b00c2b-09a9-48bd-ad-09-cd-ae-11-7d-1d-a7')
WMProfile_V80_768Video: Guid = Guid('74d01102-e71a-4820-8f-0d-13-d2-ec-1e-48-72')
WMProfile_V80_700NTSCVideo: Guid = Guid('c8c2985f-e5d9-4538-9e-23-9b-21-bf-78-f7-45')
WMProfile_V80_1400NTSCVideo: Guid = Guid('931d1bee-617a-4bcd-99-05-cc-d0-78-66-83-ee')
WMProfile_V80_384PALVideo: Guid = Guid('9227c692-ae62-4f72-a7-ea-73-60-62-d0-e2-1e')
WMProfile_V80_700PALVideo: Guid = Guid('ec298949-639b-45e2-96-fd-4a-b3-2d-59-19-c2')
WMProfile_V80_288MonoAudio: Guid = Guid('7ea3126d-e1ba-4716-89-af-f6-5c-ee-0c-0c-67')
WMProfile_V80_288StereoAudio: Guid = Guid('7e4cab5c-35dc-45bb-a7-c0-19-b2-80-70-d0-cc')
WMProfile_V80_32StereoAudio: Guid = Guid('60907f9f-b352-47e5-b2-10-0e-f1-f4-7e-9f-9d')
WMProfile_V80_48StereoAudio: Guid = Guid('5ee06be5-492b-480a-8a-8f-12-f3-73-ec-f9-d4')
WMProfile_V80_64StereoAudio: Guid = Guid('09bb5bc4-3176-457f-8d-d6-3c-d9-19-12-3e-2d')
WMProfile_V80_96StereoAudio: Guid = Guid('1fc81930-61f2-436f-9d-33-34-9f-2a-1c-0f-10')
WMProfile_V80_128StereoAudio: Guid = Guid('407b9450-8bdc-4ee5-88-b8-6f-52-7b-d9-41-f2')
WMProfile_V80_288VideoOnly: Guid = Guid('8c45b4c7-4aeb-4f78-a5-ec-88-42-0b-9d-ad-ef')
WMProfile_V80_56VideoOnly: Guid = Guid('6e2a6955-81df-4943-ba-50-68-a9-86-a7-08-f6')
WMProfile_V80_FAIRVBRVideo: Guid = Guid('3510a862-5850-4886-83-5f-d7-8e-c6-a6-40-42')
WMProfile_V80_HIGHVBRVideo: Guid = Guid('0f10d9d3-3b04-4fb0-a3-d3-88-d4-ac-85-4a-cc')
WMProfile_V80_BESTVBRVideo: Guid = Guid('048439ba-309c-440e-9c-b4-3d-cc-a3-75-64-23')
FeedFolderWatcher = Guid('281001ed-7765-4cb0-84-af-e9-b3-87-af-01-ff')
FEEDS_BACKGROUNDSYNC_ACTION = Int32
FBSA_DISABLE: FEEDS_BACKGROUNDSYNC_ACTION = 0
FBSA_ENABLE: FEEDS_BACKGROUNDSYNC_ACTION = 1
FBSA_RUNNOW: FEEDS_BACKGROUNDSYNC_ACTION = 2
FEEDS_BACKGROUNDSYNC_STATUS = Int32
FBSS_DISABLED: FEEDS_BACKGROUNDSYNC_STATUS = 0
FBSS_ENABLED: FEEDS_BACKGROUNDSYNC_STATUS = 1
FEEDS_DOWNLOAD_ERROR = Int32
FDE_NONE: FEEDS_DOWNLOAD_ERROR = 0
FDE_DOWNLOAD_FAILED: FEEDS_DOWNLOAD_ERROR = 1
FDE_INVALID_FEED_FORMAT: FEEDS_DOWNLOAD_ERROR = 2
FDE_NORMALIZATION_FAILED: FEEDS_DOWNLOAD_ERROR = 3
FDE_PERSISTENCE_FAILED: FEEDS_DOWNLOAD_ERROR = 4
FDE_DOWNLOAD_BLOCKED: FEEDS_DOWNLOAD_ERROR = 5
FDE_CANCELED: FEEDS_DOWNLOAD_ERROR = 6
FDE_UNSUPPORTED_AUTH: FEEDS_DOWNLOAD_ERROR = 7
FDE_BACKGROUND_DOWNLOAD_DISABLED: FEEDS_DOWNLOAD_ERROR = 8
FDE_NOT_EXIST: FEEDS_DOWNLOAD_ERROR = 9
FDE_UNSUPPORTED_MSXML: FEEDS_DOWNLOAD_ERROR = 10
FDE_UNSUPPORTED_DTD: FEEDS_DOWNLOAD_ERROR = 11
FDE_DOWNLOAD_SIZE_LIMIT_EXCEEDED: FEEDS_DOWNLOAD_ERROR = 12
FDE_ACCESS_DENIED: FEEDS_DOWNLOAD_ERROR = 13
FDE_AUTH_FAILED: FEEDS_DOWNLOAD_ERROR = 14
FDE_INVALID_AUTH: FEEDS_DOWNLOAD_ERROR = 15
FEEDS_DOWNLOAD_STATUS = Int32
FDS_NONE: FEEDS_DOWNLOAD_STATUS = 0
FDS_PENDING: FEEDS_DOWNLOAD_STATUS = 1
FDS_DOWNLOADING: FEEDS_DOWNLOAD_STATUS = 2
FDS_DOWNLOADED: FEEDS_DOWNLOAD_STATUS = 3
FDS_DOWNLOAD_FAILED: FEEDS_DOWNLOAD_STATUS = 4
FEEDS_ERROR_CODE = Int32
FEC_E_ERRORBASE: FEEDS_ERROR_CODE = -1073479168
FEC_E_INVALIDMSXMLPROPERTY: FEEDS_ERROR_CODE = -1073479168
FEC_E_DOWNLOADSIZELIMITEXCEEDED: FEEDS_ERROR_CODE = -1073479167
FEEDS_EVENTS_ITEM_COUNT_FLAGS = Int32
FEICF_READ_ITEM_COUNT_CHANGED: FEEDS_EVENTS_ITEM_COUNT_FLAGS = 1
FEICF_UNREAD_ITEM_COUNT_CHANGED: FEEDS_EVENTS_ITEM_COUNT_FLAGS = 2
FEEDS_EVENTS_MASK = Int32
FEM_FOLDEREVENTS: FEEDS_EVENTS_MASK = 1
FEM_FEEDEVENTS: FEEDS_EVENTS_MASK = 2
FEEDS_EVENTS_SCOPE = Int32
FES_ALL: FEEDS_EVENTS_SCOPE = 0
FES_SELF_ONLY: FEEDS_EVENTS_SCOPE = 1
FES_SELF_AND_CHILDREN_ONLY: FEEDS_EVENTS_SCOPE = 2
FEEDS_SYNC_SETTING = Int32
FSS_DEFAULT: FEEDS_SYNC_SETTING = 0
FSS_INTERVAL: FEEDS_SYNC_SETTING = 1
FSS_MANUAL: FEEDS_SYNC_SETTING = 2
FSS_SUGGESTED: FEEDS_SYNC_SETTING = 3
FEEDS_XML_FILTER_FLAGS = Int32
FXFF_ALL: FEEDS_XML_FILTER_FLAGS = 0
FXFF_UNREAD: FEEDS_XML_FILTER_FLAGS = 1
FXFF_READ: FEEDS_XML_FILTER_FLAGS = 2
FEEDS_XML_INCLUDE_FLAGS = Int32
FXIF_NONE: FEEDS_XML_INCLUDE_FLAGS = 0
FXIF_CF_EXTENSIONS: FEEDS_XML_INCLUDE_FLAGS = 1
FEEDS_XML_SORT_ORDER = Int32
FXSO_NONE: FEEDS_XML_SORT_ORDER = 0
FXSO_ASCENDING: FEEDS_XML_SORT_ORDER = 1
FXSO_DESCENDING: FEEDS_XML_SORT_ORDER = 2
FEEDS_XML_SORT_PROPERTY = Int32
FXSP_NONE: FEEDS_XML_SORT_PROPERTY = 0
FXSP_PUBDATE: FEEDS_XML_SORT_PROPERTY = 1
FXSP_DOWNLOADTIME: FEEDS_XML_SORT_PROPERTY = 2
FeedsManager = Guid('faeb54c4-f66f-4806-83-a0-80-52-99-f5-e3-ad')
FeedWatcher = Guid('18a6737b-f433-4687-89-bc-a1-b4-df-b9-f1-23')
class IFeed(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('f7f915d8-2ede-42bc-98-e7-a5-d0-50-63-a7-57')
    @commethod(7)
    def Xml(count: Int32, sortProperty: win32more.Media.MediaPlayer.FEEDS_XML_SORT_PROPERTY, sortOrder: win32more.Media.MediaPlayer.FEEDS_XML_SORT_ORDER, filterFlags: win32more.Media.MediaPlayer.FEEDS_XML_FILTER_FLAGS, includeFlags: win32more.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, xml: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_Name(name: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def Rename(name: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_Url(feedUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def put_Url(feedUrl: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_LocalId(feedGuid: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_Path(path: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def Move(newParentPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def get_Parent(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def get_LastWriteTime(lastWrite: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def Delete() -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def Download() -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def AsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def CancelAsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def get_SyncSetting(syncSetting: POINTER(win32more.Media.MediaPlayer.FEEDS_SYNC_SETTING)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def put_SyncSetting(syncSetting: win32more.Media.MediaPlayer.FEEDS_SYNC_SETTING) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def get_Interval(minutes: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def put_Interval(minutes: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def get_LastDownloadTime(lastDownload: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def get_LocalEnclosurePath(path: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def get_Items(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(28)
    def GetItem(itemId: Int32, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def get_Title(title: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def get_Description(description: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def get_Link(homePage: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def get_Image(imageUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def get_LastBuildDate(lastBuildDate: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(34)
    def get_PubDate(lastPopulateDate: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(35)
    def get_Ttl(ttl: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(36)
    def get_Language(language: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(37)
    def get_Copyright(copyright: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(38)
    def get_MaxItemCount(count: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(39)
    def put_MaxItemCount(count: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(40)
    def get_DownloadEnclosuresAutomatically(downloadEnclosuresAutomatically: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(41)
    def put_DownloadEnclosuresAutomatically(downloadEnclosuresAutomatically: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(42)
    def get_DownloadStatus(status: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> win32more.Foundation.HRESULT: ...
    @commethod(43)
    def get_LastDownloadError(error: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> win32more.Foundation.HRESULT: ...
    @commethod(44)
    def Merge(feedXml: win32more.Foundation.BSTR, feedUrl: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(45)
    def get_DownloadUrl(feedUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(46)
    def get_IsList(isList: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(47)
    def MarkAllItemsRead() -> win32more.Foundation.HRESULT: ...
    @commethod(48)
    def GetWatcher(scope: win32more.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: win32more.Media.MediaPlayer.FEEDS_EVENTS_MASK, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(49)
    def get_UnreadItemCount(count: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(50)
    def get_ItemCount(count: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IFeed2(c_void_p):
    extends: win32more.Media.MediaPlayer.IFeed
    Guid = Guid('33f2ea09-1398-4ab9-b6-a4-f9-4b-49-d0-a4-2e')
    @commethod(51)
    def GetItemByEffectiveId(itemEffectiveId: Int32, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(52)
    def get_LastItemDownloadTime(lastItemDownloadTime: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(53)
    def get_Username(username: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(54)
    def get_Password(password: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(55)
    def SetCredentials(username: win32more.Foundation.BSTR, password: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(56)
    def ClearCredentials() -> win32more.Foundation.HRESULT: ...
class IFeedEnclosure(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('361c26f7-90a4-4e67-ae-09-3a-36-a5-46-43-6a')
    @commethod(7)
    def get_Url(enclosureUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_Type(mimeType: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_Length(length: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def AsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def CancelAsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_DownloadStatus(status: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_LastDownloadError(error: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def get_LocalPath(localPath: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def get_Parent(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def get_DownloadUrl(enclosureUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def get_DownloadMimeType(mimeType: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def RemoveFile() -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def SetFile(downloadUrl: win32more.Foundation.BSTR, downloadFilePath: win32more.Foundation.BSTR, downloadMimeType: win32more.Foundation.BSTR, enclosureFilename: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IFeedEvents(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('abf35c99-0681-47ea-9a-8c-14-36-a3-75-a9-9e')
    @commethod(7)
    def Error() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def FeedDeleted(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def FeedRenamed(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def FeedUrlChanged(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def FeedMoved(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def FeedDownloading(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def FeedDownloadCompleted(path: win32more.Foundation.BSTR, error: win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def FeedItemCountChanged(path: win32more.Foundation.BSTR, itemCountType: Int32) -> win32more.Foundation.HRESULT: ...
class IFeedFolder(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('81f04ad1-4194-4d7d-86-d6-11-81-3c-ec-16-3c')
    @commethod(7)
    def get_Feeds(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_Subfolders(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def CreateFeed(feedName: win32more.Foundation.BSTR, feedUrl: win32more.Foundation.BSTR, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def CreateSubfolder(folderName: win32more.Foundation.BSTR, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def ExistsFeed(feedName: win32more.Foundation.BSTR, exists: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def GetFeed(feedName: win32more.Foundation.BSTR, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def ExistsSubfolder(folderName: win32more.Foundation.BSTR, exists: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def GetSubfolder(folderName: win32more.Foundation.BSTR, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def Delete() -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def get_Name(folderName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def Rename(folderName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_Path(folderPath: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def Move(newParentPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def get_Parent(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def get_IsRoot(isRoot: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def get_TotalUnreadItemCount(count: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def get_TotalItemCount(count: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def GetWatcher(scope: win32more.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: win32more.Media.MediaPlayer.FEEDS_EVENTS_MASK, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
class IFeedFolderEvents(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('20a59fa6-a844-4630-9e-98-17-5f-70-b4-d5-5b')
    @commethod(7)
    def Error() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def FolderAdded(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def FolderDeleted(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def FolderRenamed(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def FolderMovedFrom(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def FolderMovedTo(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def FolderItemCountChanged(path: win32more.Foundation.BSTR, itemCountType: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def FeedAdded(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def FeedDeleted(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def FeedRenamed(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def FeedUrlChanged(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def FeedMovedFrom(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def FeedMovedTo(path: win32more.Foundation.BSTR, oldPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def FeedDownloading(path: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def FeedDownloadCompleted(path: win32more.Foundation.BSTR, error: win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def FeedItemCountChanged(path: win32more.Foundation.BSTR, itemCountType: Int32) -> win32more.Foundation.HRESULT: ...
class IFeedItem(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('0a1e6cad-0a47-4da2-a1-3d-5b-aa-a5-c8-bd-4f')
    @commethod(7)
    def Xml(includeFlags: win32more.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, xml: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_Title(title: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_Link(linkUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_Guid(itemGuid: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_Description(description: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_PubDate(pubDate: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_Comments(comments: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def get_Author(author: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def get_Enclosure(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def get_IsRead(isRead: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def put_IsRead(isRead: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_LocalId(itemId: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def get_Parent(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def Delete() -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def get_DownloadUrl(itemUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def get_LastDownloadTime(lastDownload: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def get_Modified(modified: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
class IFeedItem2(c_void_p):
    extends: win32more.Media.MediaPlayer.IFeedItem
    Guid = Guid('79ac9ef4-f9c1-4d2b-a5-0b-a7-ff-ba-4d-cf-37')
    @commethod(24)
    def get_EffectiveId(effectiveId: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IFeedsEnum(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('e3cd0028-2eed-4c60-8f-ae-a3-22-53-09-a8-36')
    @commethod(7)
    def get_Count(count: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def Item(index: Int32, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get__NewEnum(enumVar: POINTER(win32more.System.Ole.IEnumVARIANT_head)) -> win32more.Foundation.HRESULT: ...
class IFeedsManager(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('a74029cc-1f1a-4906-88-f0-81-06-38-d8-65-91')
    @commethod(7)
    def get_RootFolder(disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def IsSubscribed(feedUrl: win32more.Foundation.BSTR, subscribed: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def ExistsFeed(feedPath: win32more.Foundation.BSTR, exists: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetFeed(feedPath: win32more.Foundation.BSTR, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def GetFeedByUrl(feedUrl: win32more.Foundation.BSTR, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def ExistsFolder(folderPath: win32more.Foundation.BSTR, exists: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def GetFolder(folderPath: win32more.Foundation.BSTR, disp: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def DeleteFeed(feedPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def DeleteFolder(folderPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def BackgroundSync(action: win32more.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_ACTION) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def get_BackgroundSyncStatus(status: POINTER(win32more.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_STATUS)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_DefaultInterval(minutes: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def put_DefaultInterval(minutes: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def AsyncSyncAll() -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def Normalize(feedXmlIn: win32more.Foundation.BSTR, feedXmlOut: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def get_ItemCountLimit(itemCountLimit: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IWMPAudioRenderConfig(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('e79c6349-5997-4ce4-91-7c-22-a3-39-1e-c5-64')
    @commethod(3)
    def get_audioOutputDevice(pbstrOutputDevice: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def put_audioOutputDevice(bstrOutputDevice: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPCdrom(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('cfab6e98-8730-11d3-b3-88-00-c0-4f-68-57-4b')
    @commethod(7)
    def get_driveSpecifier(pbstrDrive: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_playlist(ppPlaylist: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def eject() -> win32more.Foundation.HRESULT: ...
class IWMPCdromBurn(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bd94dbeb-417f-4928-aa-06-08-7d-56-ed-9b-59')
    @commethod(3)
    def isAvailable(bstrItem: win32more.Foundation.BSTR, pIsAvailable: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def getItemInfo(bstrItem: win32more.Foundation.BSTR, pbstrVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def get_label(pbstrLabel: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def put_label(bstrLabel: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def get_burnFormat(pwmpbf: POINTER(win32more.Media.MediaPlayer.WMPBurnFormat)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def put_burnFormat(wmpbf: win32more.Media.MediaPlayer.WMPBurnFormat) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_burnPlaylist(ppPlaylist: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def put_burnPlaylist(pPlaylist: win32more.Media.MediaPlayer.IWMPPlaylist_head) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def refreshStatus() -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_burnState(pwmpbs: POINTER(win32more.Media.MediaPlayer.WMPBurnState)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_burnProgress(plProgress: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def startBurn() -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def stopBurn() -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def erase() -> win32more.Foundation.HRESULT: ...
class IWMPCdromCollection(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('ee4c8fe2-34b2-11d3-a3-bf-00-60-97-c9-b3-44')
    @commethod(7)
    def get_count(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def item(lIndex: Int32, ppItem: POINTER(win32more.Media.MediaPlayer.IWMPCdrom_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def getByDriveSpecifier(bstrDriveSpecifier: win32more.Foundation.BSTR, ppCdrom: POINTER(win32more.Media.MediaPlayer.IWMPCdrom_head)) -> win32more.Foundation.HRESULT: ...
class IWMPCdromRip(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('56e2294f-69ed-4629-a8-69-ae-a7-2c-0d-cc-2c')
    @commethod(3)
    def get_ripState(pwmprs: POINTER(win32more.Media.MediaPlayer.WMPRipState)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def get_ripProgress(plProgress: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def startRip() -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def stopRip() -> win32more.Foundation.HRESULT: ...
class IWMPClosedCaption(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('4f2df574-c588-11d3-9e-d0-00-c0-4f-b6-e9-37')
    @commethod(7)
    def get_SAMIStyle(pbstrSAMIStyle: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def put_SAMIStyle(bstrSAMIStyle: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_SAMILang(pbstrSAMILang: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def put_SAMILang(bstrSAMILang: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_SAMIFileName(pbstrSAMIFileName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def put_SAMIFileName(bstrSAMIFileName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_captioningId(pbstrCaptioningID: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def put_captioningId(bstrCaptioningID: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPClosedCaption2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPClosedCaption
    Guid = Guid('350ba78b-6bc8-4113-a5-f5-31-20-56-93-4e-b6')
    @commethod(15)
    def get_SAMILangCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def getSAMILangName(nIndex: Int32, pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def getSAMILangID(nIndex: Int32, plLangID: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_SAMIStyleCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def getSAMIStyleName(nIndex: Int32, pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPContentContainer(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('ad7f4d9c-1a9f-4ed2-98-15-ec-c0-b5-8c-b6-16')
    @commethod(3)
    def GetID(pContentID: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetPrice(pbstrPrice: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetType(pbstrType: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetContentCount(pcContent: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetContentPrice(idxContent: UInt32, pbstrPrice: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def GetContentID(idxContent: UInt32, pContentID: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IWMPContentContainerList(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('a9937f78-0802-4af8-8b-8d-e3-f0-45-bc-8a-b5')
    @commethod(3)
    def GetTransactionType(pwmptt: POINTER(win32more.Media.MediaPlayer.WMPTransactionType)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetContainerCount(pcContainer: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetContainer(idxContainer: UInt32, ppContent: POINTER(win32more.Media.MediaPlayer.IWMPContentContainer_head)) -> win32more.Foundation.HRESULT: ...
class IWMPContentPartner(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('55455073-41b5-4e75-87-b8-f1-3b-db-29-1d-08')
    @commethod(3)
    def SetCallback(pCallback: win32more.Media.MediaPlayer.IWMPContentPartnerCallback_head) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Notify(type: win32more.Media.MediaPlayer.WMPPartnerNotification, pContext: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetItemInfo(bstrInfoName: win32more.Foundation.BSTR, pContext: POINTER(win32more.System.Com.VARIANT_head), pData: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetContentPartnerInfo(bstrInfoName: win32more.Foundation.BSTR, pData: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetCommands(location: win32more.Foundation.BSTR, pLocationContext: POINTER(win32more.System.Com.VARIANT_head), itemLocation: win32more.Foundation.BSTR, cItemIDs: UInt32, prgItemIDs: POINTER(UInt32), pcItemIDs: POINTER(UInt32), pprgItems: POINTER(POINTER(win32more.Media.MediaPlayer.WMPContextMenuInfo_head))) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def InvokeCommand(dwCommandID: UInt32, location: win32more.Foundation.BSTR, pLocationContext: POINTER(win32more.System.Com.VARIANT_head), itemLocation: win32more.Foundation.BSTR, cItemIDs: UInt32, rgItemIDs: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def CanBuySilent(pInfo: win32more.Media.MediaPlayer.IWMPContentContainerList_head, pbstrTotalPrice: POINTER(win32more.Foundation.BSTR), pSilentOK: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def Buy(pInfo: win32more.Media.MediaPlayer.IWMPContentContainerList_head, cookie: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def GetStreamingURL(st: win32more.Media.MediaPlayer.WMPStreamingType, pStreamContext: POINTER(win32more.System.Com.VARIANT_head), pbstrURL: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def Download(pInfo: win32more.Media.MediaPlayer.IWMPContentContainerList_head, cookie: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def DownloadTrackComplete(hrResult: win32more.Foundation.HRESULT, contentID: UInt32, downloadTrackParam: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def RefreshLicense(dwCookie: UInt32, fLocal: win32more.Foundation.VARIANT_BOOL, bstrURL: win32more.Foundation.BSTR, type: win32more.Media.MediaPlayer.WMPStreamingType, contentID: UInt32, bstrRefreshReason: win32more.Foundation.BSTR, pReasonContext: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def GetCatalogURL(dwCatalogVersion: UInt32, dwCatalogSchemaVersion: UInt32, catalogLCID: UInt32, pdwNewCatalogVersion: POINTER(UInt32), pbstrCatalogURL: POINTER(win32more.Foundation.BSTR), pExpirationDate: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def GetTemplate(task: win32more.Media.MediaPlayer.WMPTaskType, location: win32more.Foundation.BSTR, pContext: POINTER(win32more.System.Com.VARIANT_head), clickLocation: win32more.Foundation.BSTR, pClickContext: POINTER(win32more.System.Com.VARIANT_head), bstrFilter: win32more.Foundation.BSTR, bstrViewParams: win32more.Foundation.BSTR, pbstrTemplateURL: POINTER(win32more.Foundation.BSTR), pTemplateSize: POINTER(win32more.Media.MediaPlayer.WMPTemplateSize)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def UpdateDevice(bstrDeviceName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def GetListContents(location: win32more.Foundation.BSTR, pContext: POINTER(win32more.System.Com.VARIANT_head), bstrListType: win32more.Foundation.BSTR, bstrParams: win32more.Foundation.BSTR, dwListCookie: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def Login(userInfo: win32more.System.Com.BLOB, pwdInfo: win32more.System.Com.BLOB, fUsedCachedCreds: win32more.Foundation.VARIANT_BOOL, fOkToCache: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def Authenticate(userInfo: win32more.System.Com.BLOB, pwdInfo: win32more.System.Com.BLOB) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def Logout() -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def SendMessage(bstrMsg: win32more.Foundation.BSTR, bstrParam: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def StationEvent(bstrStationEventType: win32more.Foundation.BSTR, StationId: UInt32, PlaylistIndex: UInt32, TrackID: UInt32, TrackData: win32more.Foundation.BSTR, dwSecondsPlayed: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def CompareContainerListPrices(pListBase: win32more.Media.MediaPlayer.IWMPContentContainerList_head, pListCompare: win32more.Media.MediaPlayer.IWMPContentContainerList_head, pResult: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def VerifyPermission(bstrPermission: win32more.Foundation.BSTR, pContext: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
class IWMPContentPartnerCallback(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('9e8f7da2-0695-403c-b6-97-da-10-fa-fa-a6-76')
    @commethod(3)
    def Notify(type: win32more.Media.MediaPlayer.WMPCallbackNotification, pContext: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def BuyComplete(hrResult: win32more.Foundation.HRESULT, dwBuyCookie: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def DownloadTrack(cookie: UInt32, bstrTrackURL: win32more.Foundation.BSTR, dwServiceTrackID: UInt32, bstrDownloadParams: win32more.Foundation.BSTR, hrDownload: win32more.Foundation.HRESULT) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetCatalogVersion(pdwVersion: POINTER(UInt32), pdwSchemaVersion: POINTER(UInt32), plcid: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def UpdateDeviceComplete(bstrDeviceName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def ChangeView(bstrType: win32more.Foundation.BSTR, bstrID: win32more.Foundation.BSTR, bstrFilter: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def AddListContents(dwListCookie: UInt32, cItems: UInt32, prgItems: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def ListContentsComplete(dwListCookie: UInt32, hrSuccess: win32more.Foundation.HRESULT) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def SendMessageComplete(bstrMsg: win32more.Foundation.BSTR, bstrParam: win32more.Foundation.BSTR, bstrResult: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def GetContentIDsInLibrary(pcContentIDs: POINTER(UInt32), pprgIDs: POINTER(POINTER(UInt32))) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def RefreshLicenseComplete(dwCookie: UInt32, contentID: UInt32, hrRefresh: win32more.Foundation.HRESULT) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def ShowPopup(lIndex: Int32, bstrParameters: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def VerifyPermissionComplete(bstrPermission: win32more.Foundation.BSTR, pContext: POINTER(win32more.System.Com.VARIANT_head), hrPermission: win32more.Foundation.HRESULT) -> win32more.Foundation.HRESULT: ...
class IWMPControls(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('74c09e02-f828-11d2-a7-4b-00-a0-c9-05-f3-6e')
    @commethod(7)
    def get_isAvailable(bstrItem: win32more.Foundation.BSTR, pIsAvailable: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def play() -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def stop() -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def pause() -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def fastForward() -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def fastReverse() -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_currentPosition(pdCurrentPosition: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def put_currentPosition(dCurrentPosition: Double) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def get_currentPositionString(pbstrCurrentPosition: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def next() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def previous() -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_currentItem(ppIWMPMedia: POINTER(win32more.Media.MediaPlayer.IWMPMedia_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def put_currentItem(pIWMPMedia: win32more.Media.MediaPlayer.IWMPMedia_head) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def get_currentMarker(plMarker: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def put_currentMarker(lMarker: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def playItem(pIWMPMedia: win32more.Media.MediaPlayer.IWMPMedia_head) -> win32more.Foundation.HRESULT: ...
class IWMPControls2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPControls
    Guid = Guid('6f030d25-0890-480f-97-75-1f-7e-40-ab-5b-8e')
    @commethod(23)
    def step(lStep: Int32) -> win32more.Foundation.HRESULT: ...
class IWMPControls3(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPControls2
    Guid = Guid('a1d1110e-d545-476a-9a-78-ac-3e-4c-b1-e6-bd')
    @commethod(24)
    def get_audioLanguageCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def getAudioLanguageID(lIndex: Int32, plLangID: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def getAudioLanguageDescription(lIndex: Int32, pbstrLangDesc: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def get_currentAudioLanguage(plLangID: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(28)
    def put_currentAudioLanguage(lLangID: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def get_currentAudioLanguageIndex(plIndex: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def put_currentAudioLanguageIndex(lIndex: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def getLanguageName(lLangID: Int32, pbstrLangName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def get_currentPositionTimecode(bstrTimecode: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def put_currentPositionTimecode(bstrTimecode: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPConvert(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('d683162f-57d4-4108-83-73-4a-96-76-d1-c2-e9')
    @commethod(3)
    def ConvertFile(bstrInputFile: win32more.Foundation.BSTR, bstrDestinationFolder: win32more.Foundation.BSTR, pbstrOutputFile: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetErrorURL(pbstrURL: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPCore(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('d84cca99-cce2-11d2-9e-cc-00-00-f8-08-59-81')
    @commethod(7)
    def close() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_URL(pbstrURL: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def put_URL(bstrURL: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_openState(pwmpos: POINTER(win32more.Media.MediaPlayer.WMPOpenState)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_playState(pwmpps: POINTER(win32more.Media.MediaPlayer.WMPPlayState)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_controls(ppControl: POINTER(win32more.Media.MediaPlayer.IWMPControls_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_settings(ppSettings: POINTER(win32more.Media.MediaPlayer.IWMPSettings_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def get_currentMedia(ppMedia: POINTER(win32more.Media.MediaPlayer.IWMPMedia_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def put_currentMedia(pMedia: win32more.Media.MediaPlayer.IWMPMedia_head) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def get_mediaCollection(ppMediaCollection: POINTER(win32more.Media.MediaPlayer.IWMPMediaCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def get_playlistCollection(ppPlaylistCollection: POINTER(win32more.Media.MediaPlayer.IWMPPlaylistCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_versionInfo(pbstrVersionInfo: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def launchURL(bstrURL: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def get_network(ppQNI: POINTER(win32more.Media.MediaPlayer.IWMPNetwork_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def get_currentPlaylist(ppPL: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def put_currentPlaylist(pPL: win32more.Media.MediaPlayer.IWMPPlaylist_head) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def get_cdromCollection(ppCdromCollection: POINTER(win32more.Media.MediaPlayer.IWMPCdromCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def get_closedCaption(ppClosedCaption: POINTER(win32more.Media.MediaPlayer.IWMPClosedCaption_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def get_isOnline(pfOnline: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def get_error(ppError: POINTER(win32more.Media.MediaPlayer.IWMPError_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def get_status(pbstrStatus: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPCore2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPCore
    Guid = Guid('bc17e5b7-7561-4c18-bb-90-17-d4-85-77-56-59')
    @commethod(28)
    def get_dvd(ppDVD: POINTER(win32more.Media.MediaPlayer.IWMPDVD_head)) -> win32more.Foundation.HRESULT: ...
class IWMPCore3(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPCore2
    Guid = Guid('7587c667-628f-499f-88-e7-6a-6f-4e-88-84-64')
    @commethod(29)
    def newPlaylist(bstrName: win32more.Foundation.BSTR, bstrURL: win32more.Foundation.BSTR, ppPlaylist: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def newMedia(bstrURL: win32more.Foundation.BSTR, ppMedia: POINTER(win32more.Media.MediaPlayer.IWMPMedia_head)) -> win32more.Foundation.HRESULT: ...
class IWMPDownloadCollection(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('0a319c7f-85f9-436c-b8-8e-82-fd-88-00-0e-1c')
    @commethod(7)
    def get_id(plId: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_count(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def item(lItem: Int32, ppDownload: POINTER(win32more.Media.MediaPlayer.IWMPDownloadItem2_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def startDownload(bstrSourceURL: win32more.Foundation.BSTR, bstrType: win32more.Foundation.BSTR, ppDownload: POINTER(win32more.Media.MediaPlayer.IWMPDownloadItem2_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def removeItem(lItem: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def Clear() -> win32more.Foundation.HRESULT: ...
class IWMPDownloadItem(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('c9470e8e-3f6b-46a9-a0-a9-45-28-15-c3-42-97')
    @commethod(7)
    def get_sourceURL(pbstrURL: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_size(plSize: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_type(pbstrType: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_progress(plProgress: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_downloadState(pwmpsdls: POINTER(win32more.Media.MediaPlayer.WMPSubscriptionDownloadState)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def pause() -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def resume() -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def cancel() -> win32more.Foundation.HRESULT: ...
class IWMPDownloadItem2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPDownloadItem
    Guid = Guid('9fbb3336-6da3-479d-b8-ff-67-d4-6e-20-a9-87')
    @commethod(15)
    def getItemInfo(bstrItemName: win32more.Foundation.BSTR, pbstrVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPDownloadManager(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('e15e9ad1-8f20-4cc4-9e-c7-1a-32-8c-a8-6a-0d')
    @commethod(7)
    def getDownloadCollection(lCollectionId: Int32, ppCollection: POINTER(win32more.Media.MediaPlayer.IWMPDownloadCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def createDownloadCollection(ppCollection: POINTER(win32more.Media.MediaPlayer.IWMPDownloadCollection_head)) -> win32more.Foundation.HRESULT: ...
class IWMPDVD(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('8da61686-4668-4a5c-ae-5d-80-31-93-29-3d-be')
    @commethod(7)
    def get_isAvailable(bstrItem: win32more.Foundation.BSTR, pIsAvailable: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_domain(strDomain: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def topMenu() -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def titleMenu() -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def back() -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def resume() -> win32more.Foundation.HRESULT: ...
class IWMPEffects(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('d3984c13-c3cb-48e2-8b-e5-51-68-34-0b-4f-35')
    @commethod(3)
    def Render(pLevels: POINTER(win32more.Media.MediaPlayer.TimedLevel_head), hdc: win32more.Graphics.Gdi.HDC, prc: POINTER(win32more.Foundation.RECT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def MediaInfo(lChannelCount: Int32, lSampleRate: Int32, bstrTitle: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetCapabilities(pdwCapabilities: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetTitle(bstrTitle: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetPresetTitle(nPreset: Int32, bstrPresetTitle: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def GetPresetCount(pnPresetCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def SetCurrentPreset(nPreset: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetCurrentPreset(pnPreset: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def DisplayPropertyPage(hwndOwner: win32more.Foundation.HWND) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def GoFullscreen(fFullScreen: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def RenderFullScreen(pLevels: POINTER(win32more.Media.MediaPlayer.TimedLevel_head)) -> win32more.Foundation.HRESULT: ...
class IWMPEffects2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPEffects
    Guid = Guid('695386ec-aa3c-4618-a5-e1-dd-9a-8b-98-76-32')
    @commethod(14)
    def SetCore(pPlayer: win32more.Media.MediaPlayer.IWMPCore_head) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def Create(hwndParent: win32more.Foundation.HWND) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def Destroy() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def NotifyNewMedia(pMedia: win32more.Media.MediaPlayer.IWMPMedia_head) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def OnWindowMessage(msg: UInt32, WParam: win32more.Foundation.WPARAM, LParam: win32more.Foundation.LPARAM, plResultParam: POINTER(win32more.Foundation.LRESULT)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def RenderWindowed(pData: POINTER(win32more.Media.MediaPlayer.TimedLevel_head), fRequiredRender: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
class IWMPError(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('a12dcf7d-14ab-4c1b-a8-cd-63-90-9f-06-02-5b')
    @commethod(7)
    def clearErrorQueue() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_errorCount(plNumErrors: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_item(dwIndex: Int32, ppErrorItem: POINTER(win32more.Media.MediaPlayer.IWMPErrorItem_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def webHelp() -> win32more.Foundation.HRESULT: ...
class IWMPErrorItem(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('3614c646-3b3b-4de7-a8-1e-93-0e-3f-21-27-b3')
    @commethod(7)
    def get_errorCode(phr: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_errorDescription(pbstrDescription: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_errorContext(pvarContext: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_remedy(plRemedy: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_customUrl(pbstrCustomUrl: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPErrorItem2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPErrorItem
    Guid = Guid('f75ccec0-c67c-475c-93-1e-87-19-87-0b-ee-7d')
    @commethod(12)
    def get_condition(plCondition: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IWMPEvents(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('19a6627b-da9e-47c1-bb-23-00-b5-e6-68-23-6a')
    @commethod(3)
    def OpenStateChange(NewState: Int32) -> Void: ...
    @commethod(4)
    def PlayStateChange(NewState: Int32) -> Void: ...
    @commethod(5)
    def AudioLanguageChange(LangID: Int32) -> Void: ...
    @commethod(6)
    def StatusChange() -> Void: ...
    @commethod(7)
    def ScriptCommand(scType: win32more.Foundation.BSTR, Param: win32more.Foundation.BSTR) -> Void: ...
    @commethod(8)
    def NewStream() -> Void: ...
    @commethod(9)
    def Disconnect(Result: Int32) -> Void: ...
    @commethod(10)
    def Buffering(Start: win32more.Foundation.VARIANT_BOOL) -> Void: ...
    @commethod(11)
    def Error() -> Void: ...
    @commethod(12)
    def Warning(WarningType: Int32, Param: Int32, Description: win32more.Foundation.BSTR) -> Void: ...
    @commethod(13)
    def EndOfStream(Result: Int32) -> Void: ...
    @commethod(14)
    def PositionChange(oldPosition: Double, newPosition: Double) -> Void: ...
    @commethod(15)
    def MarkerHit(MarkerNum: Int32) -> Void: ...
    @commethod(16)
    def DurationUnitChange(NewDurationUnit: Int32) -> Void: ...
    @commethod(17)
    def CdromMediaChange(CdromNum: Int32) -> Void: ...
    @commethod(18)
    def PlaylistChange(Playlist: win32more.System.Com.IDispatch_head, change: win32more.Media.MediaPlayer.WMPPlaylistChangeEventType) -> Void: ...
    @commethod(19)
    def CurrentPlaylistChange(change: win32more.Media.MediaPlayer.WMPPlaylistChangeEventType) -> Void: ...
    @commethod(20)
    def CurrentPlaylistItemAvailable(bstrItemName: win32more.Foundation.BSTR) -> Void: ...
    @commethod(21)
    def MediaChange(Item: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(22)
    def CurrentMediaItemAvailable(bstrItemName: win32more.Foundation.BSTR) -> Void: ...
    @commethod(23)
    def CurrentItemChange(pdispMedia: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(24)
    def MediaCollectionChange() -> Void: ...
    @commethod(25)
    def MediaCollectionAttributeStringAdded(bstrAttribName: win32more.Foundation.BSTR, bstrAttribVal: win32more.Foundation.BSTR) -> Void: ...
    @commethod(26)
    def MediaCollectionAttributeStringRemoved(bstrAttribName: win32more.Foundation.BSTR, bstrAttribVal: win32more.Foundation.BSTR) -> Void: ...
    @commethod(27)
    def MediaCollectionAttributeStringChanged(bstrAttribName: win32more.Foundation.BSTR, bstrOldAttribVal: win32more.Foundation.BSTR, bstrNewAttribVal: win32more.Foundation.BSTR) -> Void: ...
    @commethod(28)
    def PlaylistCollectionChange() -> Void: ...
    @commethod(29)
    def PlaylistCollectionPlaylistAdded(bstrPlaylistName: win32more.Foundation.BSTR) -> Void: ...
    @commethod(30)
    def PlaylistCollectionPlaylistRemoved(bstrPlaylistName: win32more.Foundation.BSTR) -> Void: ...
    @commethod(31)
    def PlaylistCollectionPlaylistSetAsDeleted(bstrPlaylistName: win32more.Foundation.BSTR, varfIsDeleted: win32more.Foundation.VARIANT_BOOL) -> Void: ...
    @commethod(32)
    def ModeChange(ModeName: win32more.Foundation.BSTR, NewValue: win32more.Foundation.VARIANT_BOOL) -> Void: ...
    @commethod(33)
    def MediaError(pMediaObject: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(34)
    def OpenPlaylistSwitch(pItem: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(35)
    def DomainChange(strDomain: win32more.Foundation.BSTR) -> Void: ...
    @commethod(36)
    def SwitchedToPlayerApplication() -> Void: ...
    @commethod(37)
    def SwitchedToControl() -> Void: ...
    @commethod(38)
    def PlayerDockedStateChange() -> Void: ...
    @commethod(39)
    def PlayerReconnect() -> Void: ...
    @commethod(40)
    def Click(nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(41)
    def DoubleClick(nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(42)
    def KeyDown(nKeyCode: Int16, nShiftState: Int16) -> Void: ...
    @commethod(43)
    def KeyPress(nKeyAscii: Int16) -> Void: ...
    @commethod(44)
    def KeyUp(nKeyCode: Int16, nShiftState: Int16) -> Void: ...
    @commethod(45)
    def MouseDown(nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(46)
    def MouseMove(nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
    @commethod(47)
    def MouseUp(nButton: Int16, nShiftState: Int16, fX: Int32, fY: Int32) -> Void: ...
class IWMPEvents2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPEvents
    Guid = Guid('1e7601fa-47ea-4107-9e-a9-90-04-ed-96-84-ff')
    @commethod(48)
    def DeviceConnect(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head) -> Void: ...
    @commethod(49)
    def DeviceDisconnect(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head) -> Void: ...
    @commethod(50)
    def DeviceStatusChange(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head, NewStatus: win32more.Media.MediaPlayer.WMPDeviceStatus) -> Void: ...
    @commethod(51)
    def DeviceSyncStateChange(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head, NewState: win32more.Media.MediaPlayer.WMPSyncState) -> Void: ...
    @commethod(52)
    def DeviceSyncError(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head, pMedia: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(53)
    def CreatePartnershipComplete(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head, hrResult: win32more.Foundation.HRESULT) -> Void: ...
class IWMPEvents3(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPEvents2
    Guid = Guid('1f504270-a66b-4223-8e-96-26-a0-6c-63-d6-9f')
    @commethod(54)
    def CdromRipStateChange(pCdromRip: win32more.Media.MediaPlayer.IWMPCdromRip_head, wmprs: win32more.Media.MediaPlayer.WMPRipState) -> Void: ...
    @commethod(55)
    def CdromRipMediaError(pCdromRip: win32more.Media.MediaPlayer.IWMPCdromRip_head, pMedia: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(56)
    def CdromBurnStateChange(pCdromBurn: win32more.Media.MediaPlayer.IWMPCdromBurn_head, wmpbs: win32more.Media.MediaPlayer.WMPBurnState) -> Void: ...
    @commethod(57)
    def CdromBurnMediaError(pCdromBurn: win32more.Media.MediaPlayer.IWMPCdromBurn_head, pMedia: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(58)
    def CdromBurnError(pCdromBurn: win32more.Media.MediaPlayer.IWMPCdromBurn_head, hrError: win32more.Foundation.HRESULT) -> Void: ...
    @commethod(59)
    def LibraryConnect(pLibrary: win32more.Media.MediaPlayer.IWMPLibrary_head) -> Void: ...
    @commethod(60)
    def LibraryDisconnect(pLibrary: win32more.Media.MediaPlayer.IWMPLibrary_head) -> Void: ...
    @commethod(61)
    def FolderScanStateChange(wmpfss: win32more.Media.MediaPlayer.WMPFolderScanState) -> Void: ...
    @commethod(62)
    def StringCollectionChange(pdispStringCollection: win32more.System.Com.IDispatch_head, change: win32more.Media.MediaPlayer.WMPStringCollectionChangeEventType, lCollectionIndex: Int32) -> Void: ...
    @commethod(63)
    def MediaCollectionMediaAdded(pdispMedia: win32more.System.Com.IDispatch_head) -> Void: ...
    @commethod(64)
    def MediaCollectionMediaRemoved(pdispMedia: win32more.System.Com.IDispatch_head) -> Void: ...
class IWMPEvents4(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPEvents3
    Guid = Guid('26dabcfa-306b-404d-9a-6f-63-0a-84-05-04-8d')
    @commethod(65)
    def DeviceEstimation(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head, hrResult: win32more.Foundation.HRESULT, qwEstimatedUsedSpace: Int64, qwEstimatedSpace: Int64) -> Void: ...
class IWMPFolderMonitorServices(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('788c8743-e57f-439d-a4-68-5b-c7-7f-2e-59-c6')
    @commethod(3)
    def get_count(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def item(lIndex: Int32, pbstrFolder: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def add(bstrFolder: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def remove(lIndex: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def get_scanState(pwmpfss: POINTER(win32more.Media.MediaPlayer.WMPFolderScanState)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_currentFolder(pbstrFolder: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_scannedFilesCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_addedFilesCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_updateProgress(plProgress: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def startScan() -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def stopScan() -> win32more.Foundation.HRESULT: ...
class IWMPGraphCreation(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bfb377e5-c594-4369-a9-70-de-89-6d-5e-ce-74')
    @commethod(3)
    def GraphCreationPreRender(pFilterGraph: win32more.System.Com.IUnknown_head, pReserved: win32more.System.Com.IUnknown_head) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GraphCreationPostRender(pFilterGraph: win32more.System.Com.IUnknown_head) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetGraphCreationFlags(pdwFlags: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IWMPLibrary(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('3df47861-7df1-4c1f-a8-1b-4c-26-f0-f7-a7-c6')
    @commethod(3)
    def get_name(pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def get_type(pwmplt: POINTER(win32more.Media.MediaPlayer.WMPLibraryType)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def get_mediaCollection(ppIWMPMediaCollection: POINTER(win32more.Media.MediaPlayer.IWMPMediaCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def isIdentical(pIWMPLibrary: win32more.Media.MediaPlayer.IWMPLibrary_head, pvbool: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPLibrary2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPLibrary
    Guid = Guid('dd578a4e-79b1-426c-bf-8f-3a-dd-90-72-50-0b')
    @commethod(7)
    def getItemInfo(bstrItemName: win32more.Foundation.BSTR, pbstrVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPLibraryServices(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('39c2f8d5-1cf2-4d5e-ae-09-d7-34-92-cf-9e-aa')
    @commethod(3)
    def getCountByType(wmplt: win32more.Media.MediaPlayer.WMPLibraryType, plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def getLibraryByType(wmplt: win32more.Media.MediaPlayer.WMPLibraryType, lIndex: Int32, ppIWMPLibrary: POINTER(win32more.Media.MediaPlayer.IWMPLibrary_head)) -> win32more.Foundation.HRESULT: ...
class IWMPLibrarySharingServices(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('82cba86b-9f04-474b-a3-65-d6-dd-14-66-e5-41')
    @commethod(3)
    def isLibraryShared(pvbShared: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def isLibrarySharingEnabled(pvbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def showLibrarySharing() -> win32more.Foundation.HRESULT: ...
class IWMPMedia(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('94d55e95-3fac-11d3-b1-55-00-c0-4f-79-fa-a6')
    @commethod(7)
    def get_isIdentical(pIWMPMedia: win32more.Media.MediaPlayer.IWMPMedia_head, pvbool: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_sourceURL(pbstrSourceURL: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_name(pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def put_name(bstrName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_imageSourceWidth(pWidth: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_imageSourceHeight(pHeight: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_markerCount(pMarkerCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def getMarkerTime(MarkerNum: Int32, pMarkerTime: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def getMarkerName(MarkerNum: Int32, pbstrMarkerName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def get_duration(pDuration: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def get_durationString(pbstrDuration: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_attributeCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def getAttributeName(lIndex: Int32, pbstrItemName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def getItemInfo(bstrItemName: win32more.Foundation.BSTR, pbstrVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def setItemInfo(bstrItemName: win32more.Foundation.BSTR, bstrVal: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def getItemInfoByAtom(lAtom: Int32, pbstrVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def isMemberOf(pPlaylist: win32more.Media.MediaPlayer.IWMPPlaylist_head, pvarfIsMemberOf: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def isReadOnlyItem(bstrItemName: win32more.Foundation.BSTR, pvarfIsReadOnly: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPMedia2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPMedia
    Guid = Guid('ab7c88bb-143e-4ea4-ac-c3-e4-35-0b-21-06-c3')
    @commethod(25)
    def get_error(ppIWMPErrorItem: POINTER(win32more.Media.MediaPlayer.IWMPErrorItem_head)) -> win32more.Foundation.HRESULT: ...
class IWMPMedia3(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPMedia2
    Guid = Guid('f118efc7-f03a-4fb4-99-c9-1c-02-a5-c1-06-5b')
    @commethod(26)
    def getAttributeCountByType(bstrType: win32more.Foundation.BSTR, bstrLanguage: win32more.Foundation.BSTR, plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def getItemInfoByType(bstrType: win32more.Foundation.BSTR, bstrLanguage: win32more.Foundation.BSTR, lIndex: Int32, pvarValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
class IWMPMediaCollection(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('8363bc22-b4b4-4b19-98-9d-1c-d7-65-74-9d-d1')
    @commethod(7)
    def add(bstrURL: win32more.Foundation.BSTR, ppItem: POINTER(win32more.Media.MediaPlayer.IWMPMedia_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def getAll(ppMediaItems: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def getByName(bstrName: win32more.Foundation.BSTR, ppMediaItems: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def getByGenre(bstrGenre: win32more.Foundation.BSTR, ppMediaItems: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def getByAuthor(bstrAuthor: win32more.Foundation.BSTR, ppMediaItems: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def getByAlbum(bstrAlbum: win32more.Foundation.BSTR, ppMediaItems: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def getByAttribute(bstrAttribute: win32more.Foundation.BSTR, bstrValue: win32more.Foundation.BSTR, ppMediaItems: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def remove(pItem: win32more.Media.MediaPlayer.IWMPMedia_head, varfDeleteFile: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def getAttributeStringCollection(bstrAttribute: win32more.Foundation.BSTR, bstrMediaType: win32more.Foundation.BSTR, ppStringCollection: POINTER(win32more.Media.MediaPlayer.IWMPStringCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def getMediaAtom(bstrItemName: win32more.Foundation.BSTR, plAtom: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def setDeleted(pItem: win32more.Media.MediaPlayer.IWMPMedia_head, varfIsDeleted: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def isDeleted(pItem: win32more.Media.MediaPlayer.IWMPMedia_head, pvarfIsDeleted: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPMediaCollection2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPMediaCollection
    Guid = Guid('8ba957f5-fd8c-4791-b8-2d-f8-40-40-1e-e4-74')
    @commethod(19)
    def createQuery(ppQuery: POINTER(win32more.Media.MediaPlayer.IWMPQuery_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def getPlaylistByQuery(pQuery: win32more.Media.MediaPlayer.IWMPQuery_head, bstrMediaType: win32more.Foundation.BSTR, bstrSortAttribute: win32more.Foundation.BSTR, fSortAscending: win32more.Foundation.VARIANT_BOOL, ppPlaylist: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def getStringCollectionByQuery(bstrAttribute: win32more.Foundation.BSTR, pQuery: win32more.Media.MediaPlayer.IWMPQuery_head, bstrMediaType: win32more.Foundation.BSTR, bstrSortAttribute: win32more.Foundation.BSTR, fSortAscending: win32more.Foundation.VARIANT_BOOL, ppStringCollection: POINTER(win32more.Media.MediaPlayer.IWMPStringCollection_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def getByAttributeAndMediaType(bstrAttribute: win32more.Foundation.BSTR, bstrValue: win32more.Foundation.BSTR, bstrMediaType: win32more.Foundation.BSTR, ppMediaItems: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
class IWMPMediaPluginRegistrar(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('68e27045-05bd-40b2-97-20-23-08-8c-78-e3-90')
    @commethod(3)
    def WMPRegisterPlayerPlugin(pwszFriendlyName: win32more.Foundation.PWSTR, pwszDescription: win32more.Foundation.PWSTR, pwszUninstallString: win32more.Foundation.PWSTR, dwPriority: UInt32, guidPluginType: Guid, clsid: Guid, cMediaTypes: UInt32, pMediaTypes: c_void_p) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def WMPUnRegisterPlayerPlugin(guidPluginType: Guid, clsid: Guid) -> win32more.Foundation.HRESULT: ...
class IWMPMetadataPicture(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('5c29bbe0-f87d-4c45-aa-28-a7-0f-02-30-ff-a9')
    @commethod(7)
    def get_mimeType(pbstrMimeType: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_pictureType(pbstrPictureType: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_description(pbstrDescription: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_URL(pbstrURL: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPMetadataText(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('769a72db-13d2-45e2-9c-48-53-ca-9d-5b-74-50')
    @commethod(7)
    def get_description(pbstrDescription: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_text(pbstrText: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPNetwork(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('ec21b779-edef-462d-bb-a4-ad-9d-de-2b-29-a7')
    @commethod(7)
    def get_bandWidth(plBandwidth: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_recoveredPackets(plRecoveredPackets: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_sourceProtocol(pbstrSourceProtocol: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_receivedPackets(plReceivedPackets: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_lostPackets(plLostPackets: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_receptionQuality(plReceptionQuality: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def get_bufferingCount(plBufferingCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def get_bufferingProgress(plBufferingProgress: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def get_bufferingTime(plBufferingTime: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def put_bufferingTime(lBufferingTime: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def get_frameRate(plFrameRate: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_maxBitRate(plBitRate: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def get_bitRate(plBitRate: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def getProxySettings(bstrProtocol: win32more.Foundation.BSTR, plProxySetting: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def setProxySettings(bstrProtocol: win32more.Foundation.BSTR, lProxySetting: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def getProxyName(bstrProtocol: win32more.Foundation.BSTR, pbstrProxyName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def setProxyName(bstrProtocol: win32more.Foundation.BSTR, bstrProxyName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def getProxyPort(bstrProtocol: win32more.Foundation.BSTR, lProxyPort: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def setProxyPort(bstrProtocol: win32more.Foundation.BSTR, lProxyPort: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def getProxyExceptionList(bstrProtocol: win32more.Foundation.BSTR, pbstrExceptionList: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def setProxyExceptionList(bstrProtocol: win32more.Foundation.BSTR, pbstrExceptionList: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(28)
    def getProxyBypassForLocal(bstrProtocol: win32more.Foundation.BSTR, pfBypassForLocal: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def setProxyBypassForLocal(bstrProtocol: win32more.Foundation.BSTR, fBypassForLocal: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def get_maxBandwidth(lMaxBandwidth: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def put_maxBandwidth(lMaxBandwidth: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def get_downloadProgress(plDownloadProgress: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def get_encodedFrameRate(plFrameRate: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(34)
    def get_framesSkipped(plFrames: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
class IWMPNodeRealEstate(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('42751198-5a50-4460-bc-b4-70-9f-8b-dc-8e-59')
    @commethod(3)
    def GetDesiredSize(pSize: POINTER(win32more.Foundation.SIZE_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def SetRects(pSrc: POINTER(win32more.Foundation.RECT_head), pDest: POINTER(win32more.Foundation.RECT_head), pClip: POINTER(win32more.Foundation.RECT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetRects(pSrc: POINTER(win32more.Foundation.RECT_head), pDest: POINTER(win32more.Foundation.RECT_head), pClip: POINTER(win32more.Foundation.RECT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def SetWindowless(fWindowless: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetWindowless(pfWindowless: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def SetFullScreen(fFullScreen: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetFullScreen(pfFullScreen: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPNodeRealEstateHost(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('1491087d-2c6b-44c8-b0-19-b3-c9-29-d2-ad-a9')
    @commethod(3)
    def OnDesiredSizeChange(pSize: POINTER(win32more.Foundation.SIZE_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def OnFullScreenTransition(fFullScreen: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
class IWMPNodeWindowed(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('96740bfa-c56a-45d1-a3-a4-76-29-14-d4-ad-e9')
    @commethod(3)
    def SetOwnerWindow(hwnd: IntPtr) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetOwnerWindow(phwnd: POINTER(IntPtr)) -> win32more.Foundation.HRESULT: ...
class IWMPNodeWindowedHost(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('a300415a-54aa-4081-ad-bf-3b-13-61-0d-89-58')
    @commethod(3)
    def OnWindowMessageFromRenderer(uMsg: UInt32, wparam: win32more.Foundation.WPARAM, lparam: win32more.Foundation.LPARAM, plRet: POINTER(win32more.Foundation.LRESULT), pfHandled: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPNodeWindowless(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPWindowMessageSink
    Guid = Guid('9b9199ad-780c-4eda-b8-16-26-1e-ba-5d-15-75')
    @commethod(4)
    def OnDraw(hdc: IntPtr, prcDraw: POINTER(win32more.Foundation.RECT_head)) -> win32more.Foundation.HRESULT: ...
class IWMPNodeWindowlessHost(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('be7017c6-ce34-4901-81-06-77-03-81-aa-6e-3e')
    @commethod(3)
    def InvalidateRect(prc: POINTER(win32more.Foundation.RECT_head), fErase: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
class IWMPPlayer(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPCore
    Guid = Guid('6bf52a4f-394a-11d3-b1-53-00-c0-4f-79-fa-a6')
    @commethod(28)
    def get_enabled(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def put_enabled(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def get_fullScreen(pbFullScreen: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def put_fullScreen(bFullScreen: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def get_enableContextMenu(pbEnableContextMenu: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def put_enableContextMenu(bEnableContextMenu: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(34)
    def put_uiMode(bstrMode: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(35)
    def get_uiMode(pbstrMode: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPPlayer2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPCore
    Guid = Guid('0e6b01d1-d407-4c85-bf-5f-1c-01-f6-15-02-80')
    @commethod(28)
    def get_enabled(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def put_enabled(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def get_fullScreen(pbFullScreen: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def put_fullScreen(bFullScreen: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def get_enableContextMenu(pbEnableContextMenu: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def put_enableContextMenu(bEnableContextMenu: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(34)
    def put_uiMode(bstrMode: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(35)
    def get_uiMode(pbstrMode: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(36)
    def get_stretchToFit(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(37)
    def put_stretchToFit(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(38)
    def get_windowlessVideo(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(39)
    def put_windowlessVideo(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
class IWMPPlayer3(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPCore2
    Guid = Guid('54062b68-052a-4c25-a3-9f-8b-63-34-65-11-d4')
    @commethod(29)
    def get_enabled(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def put_enabled(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def get_fullScreen(pbFullScreen: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def put_fullScreen(bFullScreen: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def get_enableContextMenu(pbEnableContextMenu: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(34)
    def put_enableContextMenu(bEnableContextMenu: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(35)
    def put_uiMode(bstrMode: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(36)
    def get_uiMode(pbstrMode: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(37)
    def get_stretchToFit(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(38)
    def put_stretchToFit(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(39)
    def get_windowlessVideo(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(40)
    def put_windowlessVideo(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
class IWMPPlayer4(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPCore3
    Guid = Guid('6c497d62-8919-413c-82-db-e9-35-fb-3e-c5-84')
    @commethod(31)
    def get_enabled(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def put_enabled(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def get_fullScreen(pbFullScreen: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(34)
    def put_fullScreen(bFullScreen: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(35)
    def get_enableContextMenu(pbEnableContextMenu: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(36)
    def put_enableContextMenu(bEnableContextMenu: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(37)
    def put_uiMode(bstrMode: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(38)
    def get_uiMode(pbstrMode: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(39)
    def get_stretchToFit(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(40)
    def put_stretchToFit(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(41)
    def get_windowlessVideo(pbEnabled: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(42)
    def put_windowlessVideo(bEnabled: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(43)
    def get_isRemote(pvarfIsRemote: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(44)
    def get_playerApplication(ppIWMPPlayerApplication: POINTER(win32more.Media.MediaPlayer.IWMPPlayerApplication_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(45)
    def openPlayer(bstrURL: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPPlayerApplication(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('40897764-ceab-47be-ad-4a-8e-28-53-7f-9b-bf')
    @commethod(7)
    def switchToPlayerApplication() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def switchToControl() -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_playerDocked(pbPlayerDocked: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_hasDisplay(pbHasDisplay: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPPlayerServices(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('1d01fbdb-ade2-4c8d-98-42-c1-90-b9-5c-33-06')
    @commethod(3)
    def activateUIPlugin(bstrPlugin: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def setTaskPane(bstrTaskPane: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def setTaskPaneURL(bstrTaskPane: win32more.Foundation.BSTR, bstrURL: win32more.Foundation.BSTR, bstrFriendlyName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPPlayerServices2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPPlayerServices
    Guid = Guid('1bb1592f-f040-418a-9f-71-17-c7-51-2b-4d-70')
    @commethod(6)
    def setBackgroundProcessingPriority(bstrPriority: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPPlaylist(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('d5f0f4f1-130c-11d3-b1-4e-00-c0-4f-79-fa-a6')
    @commethod(7)
    def get_count(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_name(pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def put_name(bstrName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_attributeCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_attributeName(lIndex: Int32, pbstrAttributeName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_item(lIndex: Int32, ppIWMPMedia: POINTER(win32more.Media.MediaPlayer.IWMPMedia_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def getItemInfo(bstrName: win32more.Foundation.BSTR, pbstrVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def setItemInfo(bstrName: win32more.Foundation.BSTR, bstrValue: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def get_isIdentical(pIWMPPlaylist: win32more.Media.MediaPlayer.IWMPPlaylist_head, pvbool: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def clear() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def insertItem(lIndex: Int32, pIWMPMedia: win32more.Media.MediaPlayer.IWMPMedia_head) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def appendItem(pIWMPMedia: win32more.Media.MediaPlayer.IWMPMedia_head) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def removeItem(pIWMPMedia: win32more.Media.MediaPlayer.IWMPMedia_head) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def moveItem(lIndexOld: Int32, lIndexNew: Int32) -> win32more.Foundation.HRESULT: ...
class IWMPPlaylistArray(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('679409c0-99f7-11d3-9f-b7-00-10-5a-a6-20-bb')
    @commethod(7)
    def get_count(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def item(lIndex: Int32, ppItem: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
class IWMPPlaylistCollection(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('10a13217-23a7-439b-b1-c0-d8-47-c7-9b-77-74')
    @commethod(7)
    def newPlaylist(bstrName: win32more.Foundation.BSTR, ppItem: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def getAll(ppPlaylistArray: POINTER(win32more.Media.MediaPlayer.IWMPPlaylistArray_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def getByName(bstrName: win32more.Foundation.BSTR, ppPlaylistArray: POINTER(win32more.Media.MediaPlayer.IWMPPlaylistArray_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def remove(pItem: win32more.Media.MediaPlayer.IWMPPlaylist_head) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def setDeleted(pItem: win32more.Media.MediaPlayer.IWMPPlaylist_head, varfIsDeleted: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def isDeleted(pItem: win32more.Media.MediaPlayer.IWMPPlaylist_head, pvarfIsDeleted: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def importPlaylist(pItem: win32more.Media.MediaPlayer.IWMPPlaylist_head, ppImportedItem: POINTER(win32more.Media.MediaPlayer.IWMPPlaylist_head)) -> win32more.Foundation.HRESULT: ...
class IWMPPlugin(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('f1392a70-024c-42bb-a9-98-73-df-df-e7-d5-a7')
    @commethod(3)
    def Init(dwPlaybackContext: UIntPtr) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Shutdown() -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetID(pGUID: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetCaps(pdwFlags: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def AdviseWMPServices(pWMPServices: win32more.Media.MediaPlayer.IWMPServices_head) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def UnAdviseWMPServices() -> win32more.Foundation.HRESULT: ...
class IWMPPluginEnable(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('5fca444c-7ad1-479d-a4-ef-40-56-6a-53-09-d6')
    @commethod(3)
    def SetEnable(fEnable: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetEnable(pfEnable: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPPluginUI(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('4c5e8f9f-ad3e-4bf9-97-53-fc-d3-0d-6d-38-dd')
    @commethod(3)
    def SetCore(pCore: win32more.Media.MediaPlayer.IWMPCore_head) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Create(hwndParent: win32more.Foundation.HWND, phwndWindow: POINTER(win32more.Foundation.HWND)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Destroy() -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def DisplayPropertyPage(hwndParent: win32more.Foundation.HWND) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetProperty(pwszName: win32more.Foundation.PWSTR, pvarProperty: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def SetProperty(pwszName: win32more.Foundation.PWSTR, pvarProperty: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def TranslateAccelerator(lpmsg: POINTER(win32more.UI.WindowsAndMessaging.MSG_head)) -> win32more.Foundation.HRESULT: ...
class IWMPQuery(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('a00918f3-a6b0-4bfb-91-89-fd-83-4c-7b-c5-a5')
    @commethod(7)
    def addCondition(bstrAttribute: win32more.Foundation.BSTR, bstrOperator: win32more.Foundation.BSTR, bstrValue: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def beginNextGroup() -> win32more.Foundation.HRESULT: ...
class IWMPRemoteMediaServices(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('cbb92747-741f-44fe-ab-5b-f1-a4-8f-3b-2a-59')
    @commethod(3)
    def GetServiceType(pbstrType: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetApplicationName(pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def GetScriptableObject(pbstrName: POINTER(win32more.Foundation.BSTR), ppDispatch: POINTER(win32more.System.Com.IDispatch_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetCustomUIMode(pbstrFile: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPRenderConfig(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('959506c1-0314-4ec5-9e-61-85-28-db-5e-54-78')
    @commethod(3)
    def put_inProcOnly(fInProc: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def get_inProcOnly(pfInProc: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPServices(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('afb6b76b-1e20-4198-83-b3-19-1d-b6-e0-b1-49')
    @commethod(3)
    def GetStreamTime(prt: POINTER(Int64)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def GetStreamState(pState: POINTER(win32more.Media.MediaPlayer.WMPServices_StreamState)) -> win32more.Foundation.HRESULT: ...
class IWMPSettings(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('9104d1ab-80c9-4fed-ab-f0-2e-64-17-a6-df-14')
    @commethod(7)
    def get_isAvailable(bstrItem: win32more.Foundation.BSTR, pIsAvailable: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_autoStart(pfAutoStart: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def put_autoStart(fAutoStart: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_baseURL(pbstrBaseURL: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def put_baseURL(bstrBaseURL: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def get_defaultFrame(pbstrDefaultFrame: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def put_defaultFrame(bstrDefaultFrame: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def get_invokeURLs(pfInvokeURLs: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def put_invokeURLs(fInvokeURLs: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def get_mute(pfMute: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def put_mute(fMute: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def get_playCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def put_playCount(lCount: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def get_rate(pdRate: POINTER(Double)) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def put_rate(dRate: Double) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def get_balance(plBalance: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def put_balance(lBalance: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def get_volume(plVolume: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def put_volume(lVolume: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def getMode(bstrMode: win32more.Foundation.BSTR, pvarfMode: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def setMode(bstrMode: win32more.Foundation.BSTR, varfMode: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(28)
    def get_enableErrorDialogs(pfEnableErrorDialogs: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def put_enableErrorDialogs(fEnableErrorDialogs: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
class IWMPSettings2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPSettings
    Guid = Guid('fda937a4-eece-4da5-a0-b6-39-bf-89-ad-e2-c2')
    @commethod(30)
    def get_defaultAudioLanguage(plLangID: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def get_mediaAccessRights(pbstrRights: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def requestMediaAccessRights(bstrDesiredAccess: win32more.Foundation.BSTR, pvbAccepted: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPSkinManager(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('076f2fa6-ed30-448b-8c-c5-3f-3e-f3-52-9c-7a')
    @commethod(3)
    def SetVisualStyle(bstrPath: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPStringCollection(c_void_p):
    extends: win32more.System.Com.IDispatch
    Guid = Guid('4a976298-8c0d-11d3-b3-89-00-c0-4f-68-57-4b')
    @commethod(7)
    def get_count(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def item(lIndex: Int32, pbstrString: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
class IWMPStringCollection2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPStringCollection
    Guid = Guid('46ad648d-53f1-4a74-92-e2-2a-1b-68-d6-3f-d4')
    @commethod(9)
    def isIdentical(pIWMPStringCollection2: win32more.Media.MediaPlayer.IWMPStringCollection2_head, pvbool: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def getItemInfo(lCollectionIndex: Int32, bstrItemName: win32more.Foundation.BSTR, pbstrValue: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def getAttributeCountByType(lCollectionIndex: Int32, bstrType: win32more.Foundation.BSTR, bstrLanguage: win32more.Foundation.BSTR, plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def getItemInfoByType(lCollectionIndex: Int32, bstrType: win32more.Foundation.BSTR, bstrLanguage: win32more.Foundation.BSTR, lAttributeIndex: Int32, pvarValue: POINTER(win32more.System.Com.VARIANT_head)) -> win32more.Foundation.HRESULT: ...
class IWMPSubscriptionService(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('376055f8-2a59-4a73-95-01-dc-a5-27-3a-7a-10')
    @commethod(3)
    def allowPlay(hwnd: win32more.Foundation.HWND, pMedia: win32more.Media.MediaPlayer.IWMPMedia_head, pfAllowPlay: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def allowCDBurn(hwnd: win32more.Foundation.HWND, pPlaylist: win32more.Media.MediaPlayer.IWMPPlaylist_head, pfAllowBurn: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def allowPDATransfer(hwnd: win32more.Foundation.HWND, pPlaylist: win32more.Media.MediaPlayer.IWMPPlaylist_head, pfAllowTransfer: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def startBackgroundProcessing(hwnd: win32more.Foundation.HWND) -> win32more.Foundation.HRESULT: ...
class IWMPSubscriptionService2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPSubscriptionService
    Guid = Guid('a94c120e-d600-4ec6-b0-5e-ec-9d-56-d8-4d-e0')
    @commethod(7)
    def stopBackgroundProcessing() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def serviceEvent(event: win32more.Media.MediaPlayer.WMPSubscriptionServiceEvent) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def deviceAvailable(bstrDeviceName: win32more.Foundation.BSTR, pCB: win32more.Media.MediaPlayer.IWMPSubscriptionServiceCallback_head) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def prepareForSync(bstrFilename: win32more.Foundation.BSTR, bstrDeviceName: win32more.Foundation.BSTR, pCB: win32more.Media.MediaPlayer.IWMPSubscriptionServiceCallback_head) -> win32more.Foundation.HRESULT: ...
class IWMPSubscriptionServiceCallback(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('dd01d127-2dc2-4c3a-87-6e-63-31-20-79-f9-b0')
    @commethod(3)
    def onComplete(hrResult: win32more.Foundation.HRESULT) -> win32more.Foundation.HRESULT: ...
class IWMPSyncDevice(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('82a2986c-0293-4fd0-b2-79-b2-1b-86-c0-58-be')
    @commethod(3)
    def get_friendlyName(pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def put_friendlyName(bstrName: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def get_deviceName(pbstrName: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def get_deviceId(pbstrDeviceId: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def get_partnershipIndex(plIndex: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def get_connected(pvbConnected: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def get_status(pwmpds: POINTER(win32more.Media.MediaPlayer.WMPDeviceStatus)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def get_syncState(pwmpss: POINTER(win32more.Media.MediaPlayer.WMPSyncState)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def get_progress(plProgress: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def getItemInfo(bstrItemName: win32more.Foundation.BSTR, pbstrVal: POINTER(win32more.Foundation.BSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def createPartnership(vbShowUI: win32more.Foundation.VARIANT_BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def deletePartnership() -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def start() -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def stop() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def showSettings() -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def isIdentical(pDevice: win32more.Media.MediaPlayer.IWMPSyncDevice_head, pvbool: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPSyncDevice2(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPSyncDevice
    Guid = Guid('88afb4b2-140a-44d2-91-e6-45-43-da-46-7c-d1')
    @commethod(19)
    def setItemInfo(bstrItemName: win32more.Foundation.BSTR, bstrVal: win32more.Foundation.BSTR) -> win32more.Foundation.HRESULT: ...
class IWMPSyncDevice3(c_void_p):
    extends: win32more.Media.MediaPlayer.IWMPSyncDevice2
    Guid = Guid('b22c85f9-263c-4372-a0-da-b5-18-db-9b-40-98')
    @commethod(20)
    def estimateSyncSize(pNonRulePlaylist: win32more.Media.MediaPlayer.IWMPPlaylist_head, pRulesPlaylist: win32more.Media.MediaPlayer.IWMPPlaylist_head) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def cancelEstimation() -> win32more.Foundation.HRESULT: ...
class IWMPSyncServices(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('8b5050ff-e0a4-4808-b3-a8-89-3a-9e-1e-d8-94')
    @commethod(3)
    def get_deviceCount(plCount: POINTER(Int32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def getDevice(lIndex: Int32, ppDevice: POINTER(win32more.Media.MediaPlayer.IWMPSyncDevice_head)) -> win32more.Foundation.HRESULT: ...
class IWMPTranscodePolicy(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('b64cbac3-401c-4327-a3-e8-b9-fe-b3-a8-c2-5c')
    @commethod(3)
    def allowTranscode(pvbAllow: POINTER(win32more.Foundation.VARIANT_BOOL)) -> win32more.Foundation.HRESULT: ...
class IWMPUserEventSink(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('cfccfa72-c343-48c3-a2-de-b7-a4-40-2e-39-f2')
    @commethod(3)
    def NotifyUserEvent(EventCode: Int32) -> win32more.Foundation.HRESULT: ...
class IWMPVideoRenderConfig(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('6d6cf803-1ec0-4c8d-b3-ca-f1-8e-27-28-20-74')
    @commethod(3)
    def put_presenterActivate(pActivate: win32more.Media.MediaFoundation.IMFActivate_head) -> win32more.Foundation.HRESULT: ...
class IWMPWindowMessageSink(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('3a0daa30-908d-4789-ba-87-ae-d8-79-b5-c4-9b')
    @commethod(3)
    def OnWindowMessage(uMsg: UInt32, wparam: win32more.Foundation.WPARAM, lparam: win32more.Foundation.LPARAM, plRet: POINTER(win32more.Foundation.LRESULT), pfHandled: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
class IXFeed(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('a44179a4-e0f6-403b-af-8d-d0-80-f4-25-a4-51')
    @commethod(3)
    def Xml(uiItemCount: UInt32, sortProperty: win32more.Media.MediaPlayer.FEEDS_XML_SORT_PROPERTY, sortOrder: win32more.Media.MediaPlayer.FEEDS_XML_SORT_ORDER, filterFlags: win32more.Media.MediaPlayer.FEEDS_XML_FILTER_FLAGS, includeFlags: win32more.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, pps: POINTER(win32more.System.Com.IStream_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Name(ppszName: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Rename(pszName: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Url(ppszUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def SetUrl(pszUrl: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def LocalId(pguid: POINTER(Guid)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def Path(ppszPath: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def Move(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def Parent(riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def LastWriteTime(pstLastWriteTime: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def Delete() -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def Download() -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def AsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def CancelAsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def SyncSetting(pfss: POINTER(win32more.Media.MediaPlayer.FEEDS_SYNC_SETTING)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def SetSyncSetting(fss: win32more.Media.MediaPlayer.FEEDS_SYNC_SETTING) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def Interval(puiInterval: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def SetInterval(uiInterval: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(21)
    def LastDownloadTime(pstLastDownloadTime: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(22)
    def LocalEnclosurePath(ppszPath: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(23)
    def Items(ppfe: POINTER(win32more.Media.MediaPlayer.IXFeedsEnum_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(24)
    def GetItem(uiId: UInt32, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(25)
    def MarkAllItemsRead() -> win32more.Foundation.HRESULT: ...
    @commethod(26)
    def MaxItemCount(puiMaxItemCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(27)
    def SetMaxItemCount(uiMaxItemCount: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(28)
    def DownloadEnclosuresAutomatically(pbDownloadEnclosuresAutomatically: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(29)
    def SetDownloadEnclosuresAutomatically(bDownloadEnclosuresAutomatically: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(30)
    def DownloadStatus(pfds: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> win32more.Foundation.HRESULT: ...
    @commethod(31)
    def LastDownloadError(pfde: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> win32more.Foundation.HRESULT: ...
    @commethod(32)
    def Merge(pStream: win32more.System.Com.IStream_head, pszUrl: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(33)
    def DownloadUrl(ppszUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(34)
    def Title(ppszTitle: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(35)
    def Description(ppszDescription: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(36)
    def Link(ppszHomePage: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(37)
    def Image(ppszImageUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(38)
    def LastBuildDate(pstLastBuildDate: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(39)
    def PubDate(pstPubDate: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(40)
    def Ttl(puiTtl: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(41)
    def Language(ppszLanguage: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(42)
    def Copyright(ppszCopyright: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(43)
    def IsList(pbIsList: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(44)
    def GetWatcher(scope: win32more.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: win32more.Media.MediaPlayer.FEEDS_EVENTS_MASK, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(45)
    def UnreadItemCount(puiUnreadItemCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(46)
    def ItemCount(puiItemCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IXFeed2(c_void_p):
    extends: win32more.Media.MediaPlayer.IXFeed
    Guid = Guid('ce528e77-3716-4eb7-95-6d-f5-e3-75-02-e1-2a')
    @commethod(47)
    def GetItemByEffectiveId(uiEffectiveId: UInt32, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(48)
    def LastItemDownloadTime(pstLastItemDownloadTime: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(49)
    def Username(ppszUsername: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(50)
    def Password(ppszPassword: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(51)
    def SetCredentials(pszUsername: win32more.Foundation.PWSTR, pszPassword: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(52)
    def ClearCredentials() -> win32more.Foundation.HRESULT: ...
class IXFeedEnclosure(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('bfbfb953-644f-4792-b6-9c-df-ac-a4-cb-f8-9a')
    @commethod(3)
    def Url(ppszUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Type(ppszMimeType: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Length(puiLength: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def AsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def CancelAsyncDownload() -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def DownloadStatus(pfds: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_STATUS)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def LastDownloadError(pfde: POINTER(win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def LocalPath(ppszPath: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def Parent(riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def DownloadUrl(ppszUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def DownloadMimeType(ppszMimeType: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def RemoveFile() -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def SetFile(pszDownloadUrl: win32more.Foundation.PWSTR, pszDownloadFilePath: win32more.Foundation.PWSTR, pszDownloadMimeType: win32more.Foundation.PWSTR, pszEnclosureFilename: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
class IXFeedEvents(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('1630852e-1263-465b-98-e5-fe-60-ff-ec-4a-c2')
    @commethod(3)
    def Error() -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def FeedDeleted(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def FeedRenamed(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def FeedUrlChanged(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def FeedMoved(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def FeedDownloading(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def FeedDownloadCompleted(pszPath: win32more.Foundation.PWSTR, fde: win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def FeedItemCountChanged(pszPath: win32more.Foundation.PWSTR, feicfFlags: Int32) -> win32more.Foundation.HRESULT: ...
class IXFeedFolder(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('4c963678-3a51-4b88-85-31-98-b9-0b-65-08-f2')
    @commethod(3)
    def Feeds(ppfe: POINTER(win32more.Media.MediaPlayer.IXFeedsEnum_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Subfolders(ppfe: POINTER(win32more.Media.MediaPlayer.IXFeedsEnum_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def CreateFeed(pszName: win32more.Foundation.PWSTR, pszUrl: win32more.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def CreateSubfolder(pszName: win32more.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def ExistsFeed(pszName: win32more.Foundation.PWSTR, pbFeedExists: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def ExistsSubfolder(pszName: win32more.Foundation.PWSTR, pbSubfolderExists: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetFeed(pszName: win32more.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def GetSubfolder(pszName: win32more.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def Delete() -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def Name(ppszName: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def Rename(pszName: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def Path(ppszPath: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def Move(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def Parent(riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def IsRoot(pbIsRootFeedFolder: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def GetWatcher(scope: win32more.Media.MediaPlayer.FEEDS_EVENTS_SCOPE, mask: win32more.Media.MediaPlayer.FEEDS_EVENTS_MASK, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def TotalUnreadItemCount(puiTotalUnreadItemCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(20)
    def TotalItemCount(puiTotalItemCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IXFeedFolderEvents(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('7964b769-234a-4bb1-a5-f4-90-45-4c-8a-d0-7e')
    @commethod(3)
    def Error() -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def FolderAdded(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def FolderDeleted(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def FolderRenamed(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def FolderMovedFrom(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def FolderMovedTo(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def FolderItemCountChanged(pszPath: win32more.Foundation.PWSTR, feicfFlags: Int32) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def FeedAdded(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def FeedDeleted(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def FeedRenamed(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def FeedUrlChanged(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def FeedMovedFrom(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def FeedMovedTo(pszPath: win32more.Foundation.PWSTR, pszOldPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def FeedDownloading(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def FeedDownloadCompleted(pszPath: win32more.Foundation.PWSTR, fde: win32more.Media.MediaPlayer.FEEDS_DOWNLOAD_ERROR) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def FeedItemCountChanged(pszPath: win32more.Foundation.PWSTR, feicfFlags: Int32) -> win32more.Foundation.HRESULT: ...
class IXFeedItem(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('e757b2f5-e73e-434e-a1-bf-2b-d7-c3-e6-0f-cb')
    @commethod(3)
    def Xml(fxif: win32more.Media.MediaPlayer.FEEDS_XML_INCLUDE_FLAGS, pps: POINTER(win32more.System.Com.IStream_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Title(ppszTitle: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def Link(ppszUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def Guid(ppszGuid: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def Description(ppszDescription: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def PubDate(pstPubDate: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def Comments(ppszUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def Author(ppszAuthor: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def Enclosure(riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def IsRead(pbIsRead: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def SetIsRead(bIsRead: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def LocalId(puiId: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def Parent(riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def Delete() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def DownloadUrl(ppszUrl: POINTER(win32more.Foundation.PWSTR)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def LastDownloadTime(pstLastDownloadTime: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(19)
    def Modified(pstModifiedTime: POINTER(win32more.Foundation.SYSTEMTIME_head)) -> win32more.Foundation.HRESULT: ...
class IXFeedItem2(c_void_p):
    extends: win32more.Media.MediaPlayer.IXFeedItem
    Guid = Guid('6cda2dc7-9013-4522-99-70-2a-9d-d9-ea-d5-a3')
    @commethod(20)
    def EffectiveId(puiEffectiveId: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
class IXFeedsEnum(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('dc43a9d5-5015-4301-8c-96-a4-74-34-b4-d6-58')
    @commethod(3)
    def Count(puiCount: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def Item(uiIndex: UInt32, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
class IXFeedsManager(c_void_p):
    extends: win32more.System.Com.IUnknown
    Guid = Guid('5357e238-fb12-4aca-a9-30-ca-b7-83-2b-84-bf')
    @commethod(3)
    def RootFolder(riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(4)
    def IsSubscribed(pszUrl: win32more.Foundation.PWSTR, pbSubscribed: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(5)
    def ExistsFeed(pszPath: win32more.Foundation.PWSTR, pbFeedExists: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(6)
    def GetFeed(pszPath: win32more.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(7)
    def GetFeedByUrl(pszUrl: win32more.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(8)
    def ExistsFolder(pszPath: win32more.Foundation.PWSTR, pbFolderExists: POINTER(win32more.Foundation.BOOL)) -> win32more.Foundation.HRESULT: ...
    @commethod(9)
    def GetFolder(pszPath: win32more.Foundation.PWSTR, riid: POINTER(Guid), ppv: POINTER(c_void_p)) -> win32more.Foundation.HRESULT: ...
    @commethod(10)
    def DeleteFeed(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(11)
    def DeleteFolder(pszPath: win32more.Foundation.PWSTR) -> win32more.Foundation.HRESULT: ...
    @commethod(12)
    def BackgroundSync(fbsa: win32more.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_ACTION) -> win32more.Foundation.HRESULT: ...
    @commethod(13)
    def BackgroundSyncStatus(pfbss: POINTER(win32more.Media.MediaPlayer.FEEDS_BACKGROUNDSYNC_STATUS)) -> win32more.Foundation.HRESULT: ...
    @commethod(14)
    def DefaultInterval(puiInterval: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
    @commethod(15)
    def SetDefaultInterval(uiInterval: UInt32) -> win32more.Foundation.HRESULT: ...
    @commethod(16)
    def AsyncSyncAll() -> win32more.Foundation.HRESULT: ...
    @commethod(17)
    def Normalize(pStreamIn: win32more.System.Com.IStream_head, ppStreamOut: POINTER(win32more.System.Com.IStream_head)) -> win32more.Foundation.HRESULT: ...
    @commethod(18)
    def ItemCountLimit(puiItemCountLimit: POINTER(UInt32)) -> win32more.Foundation.HRESULT: ...
PlayerState = Int32
stop_state: PlayerState = 0
pause_state: PlayerState = 1
play_state: PlayerState = 2
class TimedLevel(Structure):
    frequency: Byte * 2048
    waveform: Byte * 2048
    state: Int32
    timeStamp: Int64
WindowsMediaPlayer = Guid('6bf52a52-394a-11d3-b1-53-00-c0-4f-79-fa-a6')
class WMP_WMDM_METADATA_ROUND_TRIP_DEVICE2PC(Structure):
    dwCurrentTransactionID: UInt32
    dwReturnedObjectCount: UInt32
    dwUnretrievedObjectCount: UInt32
    dwDeletedObjectStartingOffset: UInt32
    dwFlags: UInt32
    wsObjectPathnameList: Char * 1
    _pack_ = 1
class WMP_WMDM_METADATA_ROUND_TRIP_PC2DEVICE(Structure):
    dwChangesSinceTransactionID: UInt32
    dwResultSetStartingIndex: UInt32
    _pack_ = 1
WMPAccountType = Int32
WMPAccountType_wmpatBuyOnly: WMPAccountType = 1
WMPAccountType_wmpatSubscription: WMPAccountType = 2
WMPAccountType_wmpatJanus: WMPAccountType = 3
WMPBurnFormat = Int32
WMPBurnFormat_wmpbfAudioCD: WMPBurnFormat = 0
WMPBurnFormat_wmpbfDataCD: WMPBurnFormat = 1
WMPBurnState = Int32
WMPBurnState_wmpbsUnknown: WMPBurnState = 0
WMPBurnState_wmpbsBusy: WMPBurnState = 1
WMPBurnState_wmpbsReady: WMPBurnState = 2
WMPBurnState_wmpbsWaitingForDisc: WMPBurnState = 3
WMPBurnState_wmpbsRefreshStatusPending: WMPBurnState = 4
WMPBurnState_wmpbsPreparingToBurn: WMPBurnState = 5
WMPBurnState_wmpbsBurning: WMPBurnState = 6
WMPBurnState_wmpbsStopped: WMPBurnState = 7
WMPBurnState_wmpbsErasing: WMPBurnState = 8
WMPBurnState_wmpbsDownloading: WMPBurnState = 9
WMPCallbackNotification = Int32
WMPCallbackNotification_wmpcnLoginStateChange: WMPCallbackNotification = 1
WMPCallbackNotification_wmpcnAuthResult: WMPCallbackNotification = 2
WMPCallbackNotification_wmpcnLicenseUpdated: WMPCallbackNotification = 3
WMPCallbackNotification_wmpcnNewCatalogAvailable: WMPCallbackNotification = 4
WMPCallbackNotification_wmpcnNewPluginAvailable: WMPCallbackNotification = 5
WMPCallbackNotification_wmpcnDisableRadioSkipping: WMPCallbackNotification = 6
class WMPContextMenuInfo(Structure):
    dwID: UInt32
    bstrMenuText: win32more.Foundation.BSTR
    bstrHelpText: win32more.Foundation.BSTR
WMPDeviceStatus = Int32
WMPDeviceStatus_wmpdsUnknown: WMPDeviceStatus = 0
WMPDeviceStatus_wmpdsPartnershipExists: WMPDeviceStatus = 1
WMPDeviceStatus_wmpdsPartnershipDeclined: WMPDeviceStatus = 2
WMPDeviceStatus_wmpdsPartnershipAnother: WMPDeviceStatus = 3
WMPDeviceStatus_wmpdsManualDevice: WMPDeviceStatus = 4
WMPDeviceStatus_wmpdsNewDevice: WMPDeviceStatus = 5
WMPDeviceStatus_wmpdsLast: WMPDeviceStatus = 6
WMPFolderScanState = Int32
WMPFolderScanState_wmpfssUnknown: WMPFolderScanState = 0
WMPFolderScanState_wmpfssScanning: WMPFolderScanState = 1
WMPFolderScanState_wmpfssUpdating: WMPFolderScanState = 2
WMPFolderScanState_wmpfssStopped: WMPFolderScanState = 3
WMPLib = Guid('6bf52a50-394a-11d3-b1-53-00-c0-4f-79-fa-a6')
WMPLibraryType = Int32
WMPLibraryType_wmpltUnknown: WMPLibraryType = 0
WMPLibraryType_wmpltAll: WMPLibraryType = 1
WMPLibraryType_wmpltLocal: WMPLibraryType = 2
WMPLibraryType_wmpltRemote: WMPLibraryType = 3
WMPLibraryType_wmpltDisc: WMPLibraryType = 4
WMPLibraryType_wmpltPortableDevice: WMPLibraryType = 5
WMPOpenState = Int32
WMPOpenState_wmposUndefined: WMPOpenState = 0
WMPOpenState_wmposPlaylistChanging: WMPOpenState = 1
WMPOpenState_wmposPlaylistLocating: WMPOpenState = 2
WMPOpenState_wmposPlaylistConnecting: WMPOpenState = 3
WMPOpenState_wmposPlaylistLoading: WMPOpenState = 4
WMPOpenState_wmposPlaylistOpening: WMPOpenState = 5
WMPOpenState_wmposPlaylistOpenNoMedia: WMPOpenState = 6
WMPOpenState_wmposPlaylistChanged: WMPOpenState = 7
WMPOpenState_wmposMediaChanging: WMPOpenState = 8
WMPOpenState_wmposMediaLocating: WMPOpenState = 9
WMPOpenState_wmposMediaConnecting: WMPOpenState = 10
WMPOpenState_wmposMediaLoading: WMPOpenState = 11
WMPOpenState_wmposMediaOpening: WMPOpenState = 12
WMPOpenState_wmposMediaOpen: WMPOpenState = 13
WMPOpenState_wmposBeginCodecAcquisition: WMPOpenState = 14
WMPOpenState_wmposEndCodecAcquisition: WMPOpenState = 15
WMPOpenState_wmposBeginLicenseAcquisition: WMPOpenState = 16
WMPOpenState_wmposEndLicenseAcquisition: WMPOpenState = 17
WMPOpenState_wmposBeginIndividualization: WMPOpenState = 18
WMPOpenState_wmposEndIndividualization: WMPOpenState = 19
WMPOpenState_wmposMediaWaiting: WMPOpenState = 20
WMPOpenState_wmposOpeningUnknownURL: WMPOpenState = 21
WMPPartnerNotification = Int32
WMPPartnerNotification_wmpsnBackgroundProcessingBegin: WMPPartnerNotification = 1
WMPPartnerNotification_wmpsnBackgroundProcessingEnd: WMPPartnerNotification = 2
WMPPartnerNotification_wmpsnCatalogDownloadFailure: WMPPartnerNotification = 3
WMPPartnerNotification_wmpsnCatalogDownloadComplete: WMPPartnerNotification = 4
WMPPlaylistChangeEventType = Int32
WMPPlaylistChangeEventType_wmplcUnknown: WMPPlaylistChangeEventType = 0
WMPPlaylistChangeEventType_wmplcClear: WMPPlaylistChangeEventType = 1
WMPPlaylistChangeEventType_wmplcInfoChange: WMPPlaylistChangeEventType = 2
WMPPlaylistChangeEventType_wmplcMove: WMPPlaylistChangeEventType = 3
WMPPlaylistChangeEventType_wmplcDelete: WMPPlaylistChangeEventType = 4
WMPPlaylistChangeEventType_wmplcInsert: WMPPlaylistChangeEventType = 5
WMPPlaylistChangeEventType_wmplcAppend: WMPPlaylistChangeEventType = 6
WMPPlaylistChangeEventType_wmplcPrivate: WMPPlaylistChangeEventType = 7
WMPPlaylistChangeEventType_wmplcNameChange: WMPPlaylistChangeEventType = 8
WMPPlaylistChangeEventType_wmplcMorph: WMPPlaylistChangeEventType = 9
WMPPlaylistChangeEventType_wmplcSort: WMPPlaylistChangeEventType = 10
WMPPlaylistChangeEventType_wmplcLast: WMPPlaylistChangeEventType = 11
WMPPlayState = Int32
WMPPlayState_wmppsUndefined: WMPPlayState = 0
WMPPlayState_wmppsStopped: WMPPlayState = 1
WMPPlayState_wmppsPaused: WMPPlayState = 2
WMPPlayState_wmppsPlaying: WMPPlayState = 3
WMPPlayState_wmppsScanForward: WMPPlayState = 4
WMPPlayState_wmppsScanReverse: WMPPlayState = 5
WMPPlayState_wmppsBuffering: WMPPlayState = 6
WMPPlayState_wmppsWaiting: WMPPlayState = 7
WMPPlayState_wmppsMediaEnded: WMPPlayState = 8
WMPPlayState_wmppsTransitioning: WMPPlayState = 9
WMPPlayState_wmppsReady: WMPPlayState = 10
WMPPlayState_wmppsReconnecting: WMPPlayState = 11
WMPPlayState_wmppsLast: WMPPlayState = 12
WMPPlugin_Caps = Int32
WMPPlugin_Caps_CannotConvertFormats: WMPPlugin_Caps = 1
WMPRemoteMediaServices = Guid('df333473-2cf7-4be2-90-7f-9a-ad-56-61-36-4f')
WMPRipState = Int32
WMPRipState_wmprsUnknown: WMPRipState = 0
WMPRipState_wmprsRipping: WMPRipState = 1
WMPRipState_wmprsStopped: WMPRipState = 2
WMPServices_StreamState = Int32
WMPServices_StreamState_Stop: WMPServices_StreamState = 0
WMPServices_StreamState_Pause: WMPServices_StreamState = 1
WMPServices_StreamState_Play: WMPServices_StreamState = 2
WMPStreamingType = Int32
WMPStreamingType_wmpstUnknown: WMPStreamingType = 0
WMPStreamingType_wmpstMusic: WMPStreamingType = 1
WMPStreamingType_wmpstVideo: WMPStreamingType = 2
WMPStreamingType_wmpstRadio: WMPStreamingType = 3
WMPStringCollectionChangeEventType = Int32
WMPStringCollectionChangeEventType_wmpsccetUnknown: WMPStringCollectionChangeEventType = 0
WMPStringCollectionChangeEventType_wmpsccetInsert: WMPStringCollectionChangeEventType = 1
WMPStringCollectionChangeEventType_wmpsccetChange: WMPStringCollectionChangeEventType = 2
WMPStringCollectionChangeEventType_wmpsccetDelete: WMPStringCollectionChangeEventType = 3
WMPStringCollectionChangeEventType_wmpsccetClear: WMPStringCollectionChangeEventType = 4
WMPStringCollectionChangeEventType_wmpsccetBeginUpdates: WMPStringCollectionChangeEventType = 5
WMPStringCollectionChangeEventType_wmpsccetEndUpdates: WMPStringCollectionChangeEventType = 6
WMPSubscriptionDownloadState = Int32
WMPSubscriptionDownloadState_wmpsdlsDownloading: WMPSubscriptionDownloadState = 0
WMPSubscriptionDownloadState_wmpsdlsPaused: WMPSubscriptionDownloadState = 1
WMPSubscriptionDownloadState_wmpsdlsProcessing: WMPSubscriptionDownloadState = 2
WMPSubscriptionDownloadState_wmpsdlsCompleted: WMPSubscriptionDownloadState = 3
WMPSubscriptionDownloadState_wmpsdlsCancelled: WMPSubscriptionDownloadState = 4
WMPSubscriptionServiceEvent = Int32
WMPSubscriptionServiceEvent_wmpsseCurrentBegin: WMPSubscriptionServiceEvent = 1
WMPSubscriptionServiceEvent_wmpsseCurrentEnd: WMPSubscriptionServiceEvent = 2
WMPSubscriptionServiceEvent_wmpsseFullBegin: WMPSubscriptionServiceEvent = 3
WMPSubscriptionServiceEvent_wmpsseFullEnd: WMPSubscriptionServiceEvent = 4
WMPSyncState = Int32
WMPSyncState_wmpssUnknown: WMPSyncState = 0
WMPSyncState_wmpssSynchronizing: WMPSyncState = 1
WMPSyncState_wmpssStopped: WMPSyncState = 2
WMPSyncState_wmpssEstimating: WMPSyncState = 3
WMPSyncState_wmpssLast: WMPSyncState = 4
WMPTaskType = Int32
WMPTaskType_wmpttBrowse: WMPTaskType = 1
WMPTaskType_wmpttSync: WMPTaskType = 2
WMPTaskType_wmpttBurn: WMPTaskType = 3
WMPTaskType_wmpttCurrent: WMPTaskType = 4
WMPTemplateSize = Int32
WMPTemplateSize_wmptsSmall: WMPTemplateSize = 0
WMPTemplateSize_wmptsMedium: WMPTemplateSize = 1
WMPTemplateSize_wmptsLarge: WMPTemplateSize = 2
WMPTransactionType = Int32
WMPTransactionType_wmpttNoTransaction: WMPTransactionType = 0
WMPTransactionType_wmpttDownload: WMPTransactionType = 1
WMPTransactionType_wmpttBuy: WMPTransactionType = 2
make_head(_module, '_WMPOCXEvents')
make_head(_module, 'IFeed')
make_head(_module, 'IFeed2')
make_head(_module, 'IFeedEnclosure')
make_head(_module, 'IFeedEvents')
make_head(_module, 'IFeedFolder')
make_head(_module, 'IFeedFolderEvents')
make_head(_module, 'IFeedItem')
make_head(_module, 'IFeedItem2')
make_head(_module, 'IFeedsEnum')
make_head(_module, 'IFeedsManager')
make_head(_module, 'IWMPAudioRenderConfig')
make_head(_module, 'IWMPCdrom')
make_head(_module, 'IWMPCdromBurn')
make_head(_module, 'IWMPCdromCollection')
make_head(_module, 'IWMPCdromRip')
make_head(_module, 'IWMPClosedCaption')
make_head(_module, 'IWMPClosedCaption2')
make_head(_module, 'IWMPContentContainer')
make_head(_module, 'IWMPContentContainerList')
make_head(_module, 'IWMPContentPartner')
make_head(_module, 'IWMPContentPartnerCallback')
make_head(_module, 'IWMPControls')
make_head(_module, 'IWMPControls2')
make_head(_module, 'IWMPControls3')
make_head(_module, 'IWMPConvert')
make_head(_module, 'IWMPCore')
make_head(_module, 'IWMPCore2')
make_head(_module, 'IWMPCore3')
make_head(_module, 'IWMPDownloadCollection')
make_head(_module, 'IWMPDownloadItem')
make_head(_module, 'IWMPDownloadItem2')
make_head(_module, 'IWMPDownloadManager')
make_head(_module, 'IWMPDVD')
make_head(_module, 'IWMPEffects')
make_head(_module, 'IWMPEffects2')
make_head(_module, 'IWMPError')
make_head(_module, 'IWMPErrorItem')
make_head(_module, 'IWMPErrorItem2')
make_head(_module, 'IWMPEvents')
make_head(_module, 'IWMPEvents2')
make_head(_module, 'IWMPEvents3')
make_head(_module, 'IWMPEvents4')
make_head(_module, 'IWMPFolderMonitorServices')
make_head(_module, 'IWMPGraphCreation')
make_head(_module, 'IWMPLibrary')
make_head(_module, 'IWMPLibrary2')
make_head(_module, 'IWMPLibraryServices')
make_head(_module, 'IWMPLibrarySharingServices')
make_head(_module, 'IWMPMedia')
make_head(_module, 'IWMPMedia2')
make_head(_module, 'IWMPMedia3')
make_head(_module, 'IWMPMediaCollection')
make_head(_module, 'IWMPMediaCollection2')
make_head(_module, 'IWMPMediaPluginRegistrar')
make_head(_module, 'IWMPMetadataPicture')
make_head(_module, 'IWMPMetadataText')
make_head(_module, 'IWMPNetwork')
make_head(_module, 'IWMPNodeRealEstate')
make_head(_module, 'IWMPNodeRealEstateHost')
make_head(_module, 'IWMPNodeWindowed')
make_head(_module, 'IWMPNodeWindowedHost')
make_head(_module, 'IWMPNodeWindowless')
make_head(_module, 'IWMPNodeWindowlessHost')
make_head(_module, 'IWMPPlayer')
make_head(_module, 'IWMPPlayer2')
make_head(_module, 'IWMPPlayer3')
make_head(_module, 'IWMPPlayer4')
make_head(_module, 'IWMPPlayerApplication')
make_head(_module, 'IWMPPlayerServices')
make_head(_module, 'IWMPPlayerServices2')
make_head(_module, 'IWMPPlaylist')
make_head(_module, 'IWMPPlaylistArray')
make_head(_module, 'IWMPPlaylistCollection')
make_head(_module, 'IWMPPlugin')
make_head(_module, 'IWMPPluginEnable')
make_head(_module, 'IWMPPluginUI')
make_head(_module, 'IWMPQuery')
make_head(_module, 'IWMPRemoteMediaServices')
make_head(_module, 'IWMPRenderConfig')
make_head(_module, 'IWMPServices')
make_head(_module, 'IWMPSettings')
make_head(_module, 'IWMPSettings2')
make_head(_module, 'IWMPSkinManager')
make_head(_module, 'IWMPStringCollection')
make_head(_module, 'IWMPStringCollection2')
make_head(_module, 'IWMPSubscriptionService')
make_head(_module, 'IWMPSubscriptionService2')
make_head(_module, 'IWMPSubscriptionServiceCallback')
make_head(_module, 'IWMPSyncDevice')
make_head(_module, 'IWMPSyncDevice2')
make_head(_module, 'IWMPSyncDevice3')
make_head(_module, 'IWMPSyncServices')
make_head(_module, 'IWMPTranscodePolicy')
make_head(_module, 'IWMPUserEventSink')
make_head(_module, 'IWMPVideoRenderConfig')
make_head(_module, 'IWMPWindowMessageSink')
make_head(_module, 'IXFeed')
make_head(_module, 'IXFeed2')
make_head(_module, 'IXFeedEnclosure')
make_head(_module, 'IXFeedEvents')
make_head(_module, 'IXFeedFolder')
make_head(_module, 'IXFeedFolderEvents')
make_head(_module, 'IXFeedItem')
make_head(_module, 'IXFeedItem2')
make_head(_module, 'IXFeedsEnum')
make_head(_module, 'IXFeedsManager')
make_head(_module, 'TimedLevel')
make_head(_module, 'WMP_WMDM_METADATA_ROUND_TRIP_DEVICE2PC')
make_head(_module, 'WMP_WMDM_METADATA_ROUND_TRIP_PC2DEVICE')
make_head(_module, 'WMPContextMenuInfo')
__all__ = [
    "CLSID_WMPMediaPluginRegistrar",
    "CLSID_WMPSkinManager",
    "CLSID_XFeedsManager",
    "DISPID_DELTA",
    "DISPID_FEEDENCLOSURE_AsyncDownload",
    "DISPID_FEEDENCLOSURE_CancelAsyncDownload",
    "DISPID_FEEDENCLOSURE_DownloadMimeType",
    "DISPID_FEEDENCLOSURE_DownloadStatus",
    "DISPID_FEEDENCLOSURE_DownloadUrl",
    "DISPID_FEEDENCLOSURE_LastDownloadError",
    "DISPID_FEEDENCLOSURE_Length",
    "DISPID_FEEDENCLOSURE_LocalPath",
    "DISPID_FEEDENCLOSURE_Parent",
    "DISPID_FEEDENCLOSURE_RemoveFile",
    "DISPID_FEEDENCLOSURE_SetFile",
    "DISPID_FEEDENCLOSURE_Type",
    "DISPID_FEEDENCLOSURE_Url",
    "DISPID_FEEDEVENTS_Error",
    "DISPID_FEEDEVENTS_FeedDeleted",
    "DISPID_FEEDEVENTS_FeedDownloadCompleted",
    "DISPID_FEEDEVENTS_FeedDownloading",
    "DISPID_FEEDEVENTS_FeedItemCountChanged",
    "DISPID_FEEDEVENTS_FeedMoved",
    "DISPID_FEEDEVENTS_FeedRenamed",
    "DISPID_FEEDEVENTS_FeedUrlChanged",
    "DISPID_FEEDFOLDEREVENTS_Error",
    "DISPID_FEEDFOLDEREVENTS_FeedAdded",
    "DISPID_FEEDFOLDEREVENTS_FeedDeleted",
    "DISPID_FEEDFOLDEREVENTS_FeedDownloadCompleted",
    "DISPID_FEEDFOLDEREVENTS_FeedDownloading",
    "DISPID_FEEDFOLDEREVENTS_FeedItemCountChanged",
    "DISPID_FEEDFOLDEREVENTS_FeedMovedFrom",
    "DISPID_FEEDFOLDEREVENTS_FeedMovedTo",
    "DISPID_FEEDFOLDEREVENTS_FeedRenamed",
    "DISPID_FEEDFOLDEREVENTS_FeedUrlChanged",
    "DISPID_FEEDFOLDEREVENTS_FolderAdded",
    "DISPID_FEEDFOLDEREVENTS_FolderDeleted",
    "DISPID_FEEDFOLDEREVENTS_FolderItemCountChanged",
    "DISPID_FEEDFOLDEREVENTS_FolderMovedFrom",
    "DISPID_FEEDFOLDEREVENTS_FolderMovedTo",
    "DISPID_FEEDFOLDEREVENTS_FolderRenamed",
    "DISPID_FEEDFOLDER_CreateFeed",
    "DISPID_FEEDFOLDER_CreateSubfolder",
    "DISPID_FEEDFOLDER_Delete",
    "DISPID_FEEDFOLDER_ExistsFeed",
    "DISPID_FEEDFOLDER_ExistsSubfolder",
    "DISPID_FEEDFOLDER_Feeds",
    "DISPID_FEEDFOLDER_GetFeed",
    "DISPID_FEEDFOLDER_GetSubfolder",
    "DISPID_FEEDFOLDER_GetWatcher",
    "DISPID_FEEDFOLDER_IsRoot",
    "DISPID_FEEDFOLDER_Move",
    "DISPID_FEEDFOLDER_Name",
    "DISPID_FEEDFOLDER_Parent",
    "DISPID_FEEDFOLDER_Path",
    "DISPID_FEEDFOLDER_Rename",
    "DISPID_FEEDFOLDER_Subfolders",
    "DISPID_FEEDFOLDER_TotalItemCount",
    "DISPID_FEEDFOLDER_TotalUnreadItemCount",
    "DISPID_FEEDITEM_Author",
    "DISPID_FEEDITEM_Comments",
    "DISPID_FEEDITEM_Delete",
    "DISPID_FEEDITEM_Description",
    "DISPID_FEEDITEM_DownloadUrl",
    "DISPID_FEEDITEM_EffectiveId",
    "DISPID_FEEDITEM_Enclosure",
    "DISPID_FEEDITEM_Guid",
    "DISPID_FEEDITEM_IsRead",
    "DISPID_FEEDITEM_LastDownloadTime",
    "DISPID_FEEDITEM_Link",
    "DISPID_FEEDITEM_LocalId",
    "DISPID_FEEDITEM_Modified",
    "DISPID_FEEDITEM_Parent",
    "DISPID_FEEDITEM_PubDate",
    "DISPID_FEEDITEM_Title",
    "DISPID_FEEDITEM_Xml",
    "DISPID_FEEDSENUM_Count",
    "DISPID_FEEDSENUM_Item",
    "DISPID_FEEDS_AsyncSyncAll",
    "DISPID_FEEDS_BackgroundSync",
    "DISPID_FEEDS_BackgroundSyncStatus",
    "DISPID_FEEDS_DefaultInterval",
    "DISPID_FEEDS_DeleteFeed",
    "DISPID_FEEDS_DeleteFolder",
    "DISPID_FEEDS_ExistsFeed",
    "DISPID_FEEDS_ExistsFolder",
    "DISPID_FEEDS_GetFeed",
    "DISPID_FEEDS_GetFeedByUrl",
    "DISPID_FEEDS_GetFolder",
    "DISPID_FEEDS_IsSubscribed",
    "DISPID_FEEDS_ItemCountLimit",
    "DISPID_FEEDS_Normalize",
    "DISPID_FEEDS_RootFolder",
    "DISPID_FEED_AsyncDownload",
    "DISPID_FEED_CancelAsyncDownload",
    "DISPID_FEED_ClearCredentials",
    "DISPID_FEED_Copyright",
    "DISPID_FEED_Delete",
    "DISPID_FEED_Description",
    "DISPID_FEED_Download",
    "DISPID_FEED_DownloadEnclosuresAutomatically",
    "DISPID_FEED_DownloadStatus",
    "DISPID_FEED_DownloadUrl",
    "DISPID_FEED_GetItem",
    "DISPID_FEED_GetItemByEffectiveId",
    "DISPID_FEED_GetWatcher",
    "DISPID_FEED_Image",
    "DISPID_FEED_Interval",
    "DISPID_FEED_IsList",
    "DISPID_FEED_ItemCount",
    "DISPID_FEED_Items",
    "DISPID_FEED_Language",
    "DISPID_FEED_LastBuildDate",
    "DISPID_FEED_LastDownloadError",
    "DISPID_FEED_LastDownloadTime",
    "DISPID_FEED_LastItemDownloadTime",
    "DISPID_FEED_LastWriteTime",
    "DISPID_FEED_Link",
    "DISPID_FEED_LocalEnclosurePath",
    "DISPID_FEED_LocalId",
    "DISPID_FEED_MarkAllItemsRead",
    "DISPID_FEED_MaxItemCount",
    "DISPID_FEED_Merge",
    "DISPID_FEED_Move",
    "DISPID_FEED_Name",
    "DISPID_FEED_Parent",
    "DISPID_FEED_Password",
    "DISPID_FEED_Path",
    "DISPID_FEED_PubDate",
    "DISPID_FEED_Rename",
    "DISPID_FEED_SetCredentials",
    "DISPID_FEED_SyncSetting",
    "DISPID_FEED_Title",
    "DISPID_FEED_Ttl",
    "DISPID_FEED_UnreadItemCount",
    "DISPID_FEED_Url",
    "DISPID_FEED_Username",
    "DISPID_FEED_Xml",
    "DISPID_WMPCDROMCOLLECTION_BASE",
    "DISPID_WMPCDROMCOLLECTION_COUNT",
    "DISPID_WMPCDROMCOLLECTION_GETBYDRIVESPECIFIER",
    "DISPID_WMPCDROMCOLLECTION_ITEM",
    "DISPID_WMPCDROMCOLLECTION_STARTMONITORINGCDROMS",
    "DISPID_WMPCDROMCOLLECTION_STOPMONITORINGCDROMS",
    "DISPID_WMPCDROM_BASE",
    "DISPID_WMPCDROM_DRIVESPECIFIER",
    "DISPID_WMPCDROM_EJECT",
    "DISPID_WMPCDROM_PLAYLIST",
    "DISPID_WMPCLOSEDCAPTION2_GETLANGCOUNT",
    "DISPID_WMPCLOSEDCAPTION2_GETLANGID",
    "DISPID_WMPCLOSEDCAPTION2_GETLANGNAME",
    "DISPID_WMPCLOSEDCAPTION2_GETSTYLECOUNT",
    "DISPID_WMPCLOSEDCAPTION2_GETSTYLENAME",
    "DISPID_WMPCLOSEDCAPTION_BASE",
    "DISPID_WMPCLOSEDCAPTION_CAPTIONINGID",
    "DISPID_WMPCLOSEDCAPTION_SAMIFILENAME",
    "DISPID_WMPCLOSEDCAPTION_SAMILANG",
    "DISPID_WMPCLOSEDCAPTION_SAMISTYLE",
    "DISPID_WMPCONTROLS2_STEP",
    "DISPID_WMPCONTROLS3_AUDIOLANGUAGECOUNT",
    "DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGE",
    "DISPID_WMPCONTROLS3_CURRENTAUDIOLANGUAGEINDEX",
    "DISPID_WMPCONTROLS3_CURRENTPOSITIONTIMECODE",
    "DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEDESC",
    "DISPID_WMPCONTROLS3_GETAUDIOLANGUAGEID",
    "DISPID_WMPCONTROLS3_GETLANGUAGENAME",
    "DISPID_WMPCONTROLSFAKE_TIMECOMPRESSION",
    "DISPID_WMPCONTROLS_BASE",
    "DISPID_WMPCONTROLS_CURRENTITEM",
    "DISPID_WMPCONTROLS_CURRENTMARKER",
    "DISPID_WMPCONTROLS_CURRENTPOSITION",
    "DISPID_WMPCONTROLS_CURRENTPOSITIONSTRING",
    "DISPID_WMPCONTROLS_FASTFORWARD",
    "DISPID_WMPCONTROLS_FASTREVERSE",
    "DISPID_WMPCONTROLS_ISAVAILABLE",
    "DISPID_WMPCONTROLS_NEXT",
    "DISPID_WMPCONTROLS_PAUSE",
    "DISPID_WMPCONTROLS_PLAY",
    "DISPID_WMPCONTROLS_PLAYITEM",
    "DISPID_WMPCONTROLS_PREVIOUS",
    "DISPID_WMPCONTROLS_STOP",
    "DISPID_WMPCORE2_BASE",
    "DISPID_WMPCORE2_DVD",
    "DISPID_WMPCORE3_NEWMEDIA",
    "DISPID_WMPCORE3_NEWPLAYLIST",
    "DISPID_WMPCOREEVENT_AUDIOLANGUAGECHANGE",
    "DISPID_WMPCOREEVENT_BUFFERING",
    "DISPID_WMPCOREEVENT_CDROMMEDIACHANGE",
    "DISPID_WMPCOREEVENT_CURRENTITEMCHANGE",
    "DISPID_WMPCOREEVENT_CURRENTMEDIAITEMAVAILABLE",
    "DISPID_WMPCOREEVENT_CURRENTPLAYLISTCHANGE",
    "DISPID_WMPCOREEVENT_CURRENTPLAYLISTITEMAVAILABLE",
    "DISPID_WMPCOREEVENT_DISCONNECT",
    "DISPID_WMPCOREEVENT_DOMAINCHANGE",
    "DISPID_WMPCOREEVENT_DURATIONUNITCHANGE",
    "DISPID_WMPCOREEVENT_ENDOFSTREAM",
    "DISPID_WMPCOREEVENT_ERROR",
    "DISPID_WMPCOREEVENT_MARKERHIT",
    "DISPID_WMPCOREEVENT_MEDIACHANGE",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGADDED",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGCHANGED",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONATTRIBUTESTRINGREMOVED",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONCHANGE",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANADDEDITEM",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONCONTENTSCANPROGRESS",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAADDED",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONMEDIAREMOVED",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHCOMPLETE",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHFOUNDITEM",
    "DISPID_WMPCOREEVENT_MEDIACOLLECTIONSEARCHPROGRESS",
    "DISPID_WMPCOREEVENT_MEDIAERROR",
    "DISPID_WMPCOREEVENT_MODECHANGE",
    "DISPID_WMPCOREEVENT_NEWSTREAM",
    "DISPID_WMPCOREEVENT_OPENPLAYLISTSWITCH",
    "DISPID_WMPCOREEVENT_OPENSTATECHANGE",
    "DISPID_WMPCOREEVENT_PLAYLISTCHANGE",
    "DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONCHANGE",
    "DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTADDED",
    "DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTREMOVED",
    "DISPID_WMPCOREEVENT_PLAYLISTCOLLECTIONPLAYLISTSETASDELETED",
    "DISPID_WMPCOREEVENT_PLAYSTATECHANGE",
    "DISPID_WMPCOREEVENT_POSITIONCHANGE",
    "DISPID_WMPCOREEVENT_SCRIPTCOMMAND",
    "DISPID_WMPCOREEVENT_STATUSCHANGE",
    "DISPID_WMPCOREEVENT_STRINGCOLLECTIONCHANGE",
    "DISPID_WMPCOREEVENT_WARNING",
    "DISPID_WMPCORE_BASE",
    "DISPID_WMPCORE_CDROMCOLLECTION",
    "DISPID_WMPCORE_CLOSE",
    "DISPID_WMPCORE_CLOSEDCAPTION",
    "DISPID_WMPCORE_CONTROLS",
    "DISPID_WMPCORE_CURRENTMEDIA",
    "DISPID_WMPCORE_CURRENTPLAYLIST",
    "DISPID_WMPCORE_ERROR",
    "DISPID_WMPCORE_ISONLINE",
    "DISPID_WMPCORE_LAST",
    "DISPID_WMPCORE_LAUNCHURL",
    "DISPID_WMPCORE_MAX",
    "DISPID_WMPCORE_MEDIACOLLECTION",
    "DISPID_WMPCORE_MIN",
    "DISPID_WMPCORE_NETWORK",
    "DISPID_WMPCORE_OPENSTATE",
    "DISPID_WMPCORE_PLAYLISTCOLLECTION",
    "DISPID_WMPCORE_PLAYSTATE",
    "DISPID_WMPCORE_SETTINGS",
    "DISPID_WMPCORE_STATUS",
    "DISPID_WMPCORE_URL",
    "DISPID_WMPCORE_VERSIONINFO",
    "DISPID_WMPDOWNLOADCOLLECTION_BASE",
    "DISPID_WMPDOWNLOADCOLLECTION_CLEAR",
    "DISPID_WMPDOWNLOADCOLLECTION_COUNT",
    "DISPID_WMPDOWNLOADCOLLECTION_ID",
    "DISPID_WMPDOWNLOADCOLLECTION_ITEM",
    "DISPID_WMPDOWNLOADCOLLECTION_REMOVEITEM",
    "DISPID_WMPDOWNLOADCOLLECTION_STARTDOWNLOAD",
    "DISPID_WMPDOWNLOADITEM2_BASE",
    "DISPID_WMPDOWNLOADITEM2_GETITEMINFO",
    "DISPID_WMPDOWNLOADITEM_BASE",
    "DISPID_WMPDOWNLOADITEM_CANCEL",
    "DISPID_WMPDOWNLOADITEM_DOWNLOADSTATE",
    "DISPID_WMPDOWNLOADITEM_PAUSE",
    "DISPID_WMPDOWNLOADITEM_PROGRESS",
    "DISPID_WMPDOWNLOADITEM_RESUME",
    "DISPID_WMPDOWNLOADITEM_SIZE",
    "DISPID_WMPDOWNLOADITEM_SOURCEURL",
    "DISPID_WMPDOWNLOADITEM_TYPE",
    "DISPID_WMPDOWNLOADMANAGER_BASE",
    "DISPID_WMPDOWNLOADMANAGER_CREATEDOWNLOADCOLLECTION",
    "DISPID_WMPDOWNLOADMANAGER_GETDOWNLOADCOLLECTION",
    "DISPID_WMPDVD_BACK",
    "DISPID_WMPDVD_BASE",
    "DISPID_WMPDVD_DOMAIN",
    "DISPID_WMPDVD_ISAVAILABLE",
    "DISPID_WMPDVD_RESUME",
    "DISPID_WMPDVD_TITLEMENU",
    "DISPID_WMPDVD_TOPMENU",
    "DISPID_WMPERRORITEM2_CONDITION",
    "DISPID_WMPERRORITEM_BASE",
    "DISPID_WMPERRORITEM_CUSTOMURL",
    "DISPID_WMPERRORITEM_ERRORCODE",
    "DISPID_WMPERRORITEM_ERRORCONTEXT",
    "DISPID_WMPERRORITEM_ERRORDESCRIPTION",
    "DISPID_WMPERRORITEM_REMEDY",
    "DISPID_WMPERROR_BASE",
    "DISPID_WMPERROR_CLEARERRORQUEUE",
    "DISPID_WMPERROR_ERRORCOUNT",
    "DISPID_WMPERROR_ITEM",
    "DISPID_WMPERROR_WEBHELP",
    "DISPID_WMPMEDIA2_ERROR",
    "DISPID_WMPMEDIA3_GETATTRIBUTECOUNTBYTYPE",
    "DISPID_WMPMEDIA3_GETITEMINFOBYTYPE",
    "DISPID_WMPMEDIACOLLECTION2_BASE",
    "DISPID_WMPMEDIACOLLECTION2_CREATEQUERY",
    "DISPID_WMPMEDIACOLLECTION2_GETBYATTRANDMEDIATYPE",
    "DISPID_WMPMEDIACOLLECTION2_GETPLAYLISTBYQUERY",
    "DISPID_WMPMEDIACOLLECTION2_GETSTRINGCOLLBYQUERY",
    "DISPID_WMPMEDIACOLLECTION_ADD",
    "DISPID_WMPMEDIACOLLECTION_BASE",
    "DISPID_WMPMEDIACOLLECTION_FREEZECOLLECTIONCHANGE",
    "DISPID_WMPMEDIACOLLECTION_GETALL",
    "DISPID_WMPMEDIACOLLECTION_GETATTRIBUTESTRINGCOLLECTION",
    "DISPID_WMPMEDIACOLLECTION_GETBYALBUM",
    "DISPID_WMPMEDIACOLLECTION_GETBYATTRIBUTE",
    "DISPID_WMPMEDIACOLLECTION_GETBYAUTHOR",
    "DISPID_WMPMEDIACOLLECTION_GETBYGENRE",
    "DISPID_WMPMEDIACOLLECTION_GETBYNAME",
    "DISPID_WMPMEDIACOLLECTION_GETBYQUERYDESCRIPTION",
    "DISPID_WMPMEDIACOLLECTION_GETMEDIAATOM",
    "DISPID_WMPMEDIACOLLECTION_ISDELETED",
    "DISPID_WMPMEDIACOLLECTION_NEWQUERY",
    "DISPID_WMPMEDIACOLLECTION_POSTCOLLECTIONCHANGE",
    "DISPID_WMPMEDIACOLLECTION_REMOVE",
    "DISPID_WMPMEDIACOLLECTION_SETDELETED",
    "DISPID_WMPMEDIACOLLECTION_STARTCONTENTSCAN",
    "DISPID_WMPMEDIACOLLECTION_STARTMONITORING",
    "DISPID_WMPMEDIACOLLECTION_STARTSEARCH",
    "DISPID_WMPMEDIACOLLECTION_STOPCONTENTSCAN",
    "DISPID_WMPMEDIACOLLECTION_STOPMONITORING",
    "DISPID_WMPMEDIACOLLECTION_STOPSEARCH",
    "DISPID_WMPMEDIACOLLECTION_UNFREEZECOLLECTIONCHANGE",
    "DISPID_WMPMEDIACOLLECTION_UPDATEMETADATA",
    "DISPID_WMPMEDIA_ATTRIBUTECOUNT",
    "DISPID_WMPMEDIA_BASE",
    "DISPID_WMPMEDIA_DURATION",
    "DISPID_WMPMEDIA_DURATIONSTRING",
    "DISPID_WMPMEDIA_GETATTRIBUTENAME",
    "DISPID_WMPMEDIA_GETITEMINFO",
    "DISPID_WMPMEDIA_GETITEMINFOBYATOM",
    "DISPID_WMPMEDIA_GETMARKERNAME",
    "DISPID_WMPMEDIA_GETMARKERTIME",
    "DISPID_WMPMEDIA_IMAGESOURCEHEIGHT",
    "DISPID_WMPMEDIA_IMAGESOURCEWIDTH",
    "DISPID_WMPMEDIA_ISIDENTICAL",
    "DISPID_WMPMEDIA_ISMEMBEROF",
    "DISPID_WMPMEDIA_ISREADONLYITEM",
    "DISPID_WMPMEDIA_MARKERCOUNT",
    "DISPID_WMPMEDIA_NAME",
    "DISPID_WMPMEDIA_SETITEMINFO",
    "DISPID_WMPMEDIA_SOURCEURL",
    "DISPID_WMPMETADATA_BASE",
    "DISPID_WMPMETADATA_PICTURE_DESCRIPTION",
    "DISPID_WMPMETADATA_PICTURE_MIMETYPE",
    "DISPID_WMPMETADATA_PICTURE_PICTURETYPE",
    "DISPID_WMPMETADATA_PICTURE_URL",
    "DISPID_WMPMETADATA_TEXT_DESCRIPTION",
    "DISPID_WMPMETADATA_TEXT_TEXT",
    "DISPID_WMPNETWORK_BANDWIDTH",
    "DISPID_WMPNETWORK_BASE",
    "DISPID_WMPNETWORK_BITRATE",
    "DISPID_WMPNETWORK_BUFFERINGCOUNT",
    "DISPID_WMPNETWORK_BUFFERINGPROGRESS",
    "DISPID_WMPNETWORK_BUFFERINGTIME",
    "DISPID_WMPNETWORK_DOWNLOADPROGRESS",
    "DISPID_WMPNETWORK_ENCODEDFRAMERATE",
    "DISPID_WMPNETWORK_FRAMERATE",
    "DISPID_WMPNETWORK_FRAMESSKIPPED",
    "DISPID_WMPNETWORK_GETPROXYBYPASSFORLOCAL",
    "DISPID_WMPNETWORK_GETPROXYEXCEPTIONLIST",
    "DISPID_WMPNETWORK_GETPROXYNAME",
    "DISPID_WMPNETWORK_GETPROXYPORT",
    "DISPID_WMPNETWORK_GETPROXYSETTINGS",
    "DISPID_WMPNETWORK_LOSTPACKETS",
    "DISPID_WMPNETWORK_MAXBANDWIDTH",
    "DISPID_WMPNETWORK_MAXBITRATE",
    "DISPID_WMPNETWORK_RECEIVEDPACKETS",
    "DISPID_WMPNETWORK_RECEPTIONQUALITY",
    "DISPID_WMPNETWORK_RECOVEREDPACKETS",
    "DISPID_WMPNETWORK_SETPROXYBYPASSFORLOCAL",
    "DISPID_WMPNETWORK_SETPROXYEXCEPTIONLIST",
    "DISPID_WMPNETWORK_SETPROXYNAME",
    "DISPID_WMPNETWORK_SETPROXYPORT",
    "DISPID_WMPNETWORK_SETPROXYSETTINGS",
    "DISPID_WMPNETWORK_SOURCEPROTOCOL",
    "DISPID_WMPOCX2_BASE",
    "DISPID_WMPOCX2_STRETCHTOFIT",
    "DISPID_WMPOCX2_WINDOWLESSVIDEO",
    "DISPID_WMPOCX4_ISREMOTE",
    "DISPID_WMPOCX4_OPENPLAYER",
    "DISPID_WMPOCX4_PLAYERAPPLICATION",
    "DISPID_WMPOCXEVENT_CDROMBURNERROR",
    "DISPID_WMPOCXEVENT_CDROMBURNMEDIAERROR",
    "DISPID_WMPOCXEVENT_CDROMBURNSTATECHANGE",
    "DISPID_WMPOCXEVENT_CDROMRIPMEDIAERROR",
    "DISPID_WMPOCXEVENT_CDROMRIPSTATECHANGE",
    "DISPID_WMPOCXEVENT_CLICK",
    "DISPID_WMPOCXEVENT_CREATEPARTNERSHIPCOMPLETE",
    "DISPID_WMPOCXEVENT_DEVICECONNECT",
    "DISPID_WMPOCXEVENT_DEVICEDISCONNECT",
    "DISPID_WMPOCXEVENT_DEVICEESTIMATION",
    "DISPID_WMPOCXEVENT_DEVICESTATUSCHANGE",
    "DISPID_WMPOCXEVENT_DEVICESYNCERROR",
    "DISPID_WMPOCXEVENT_DEVICESYNCSTATECHANGE",
    "DISPID_WMPOCXEVENT_DOUBLECLICK",
    "DISPID_WMPOCXEVENT_FOLDERSCANSTATECHANGE",
    "DISPID_WMPOCXEVENT_KEYDOWN",
    "DISPID_WMPOCXEVENT_KEYPRESS",
    "DISPID_WMPOCXEVENT_KEYUP",
    "DISPID_WMPOCXEVENT_LIBRARYCONNECT",
    "DISPID_WMPOCXEVENT_LIBRARYDISCONNECT",
    "DISPID_WMPOCXEVENT_MOUSEDOWN",
    "DISPID_WMPOCXEVENT_MOUSEMOVE",
    "DISPID_WMPOCXEVENT_MOUSEUP",
    "DISPID_WMPOCXEVENT_PLAYERDOCKEDSTATECHANGE",
    "DISPID_WMPOCXEVENT_PLAYERRECONNECT",
    "DISPID_WMPOCXEVENT_SWITCHEDTOCONTROL",
    "DISPID_WMPOCXEVENT_SWITCHEDTOPLAYERAPPLICATION",
    "DISPID_WMPOCX_BASE",
    "DISPID_WMPOCX_ENABLECONTEXTMENU",
    "DISPID_WMPOCX_ENABLED",
    "DISPID_WMPOCX_FULLSCREEN",
    "DISPID_WMPOCX_LAST",
    "DISPID_WMPOCX_TRANSPARENTATSTART",
    "DISPID_WMPOCX_UIMODE",
    "DISPID_WMPPLAYERAPP_BASE",
    "DISPID_WMPPLAYERAPP_HASDISPLAY",
    "DISPID_WMPPLAYERAPP_PLAYERDOCKED",
    "DISPID_WMPPLAYERAPP_REMOTESTATUS",
    "DISPID_WMPPLAYERAPP_SWITCHTOCONTROL",
    "DISPID_WMPPLAYERAPP_SWITCHTOPLAYERAPPLICATION",
    "DISPID_WMPPLAYLISTARRAY_BASE",
    "DISPID_WMPPLAYLISTARRAY_COUNT",
    "DISPID_WMPPLAYLISTARRAY_ITEM",
    "DISPID_WMPPLAYLISTCOLLECTION_BASE",
    "DISPID_WMPPLAYLISTCOLLECTION_GETALL",
    "DISPID_WMPPLAYLISTCOLLECTION_GETBYNAME",
    "DISPID_WMPPLAYLISTCOLLECTION_GETBYQUERYDESCRIPTION",
    "DISPID_WMPPLAYLISTCOLLECTION_IMPORTPLAYLIST",
    "DISPID_WMPPLAYLISTCOLLECTION_ISDELETED",
    "DISPID_WMPPLAYLISTCOLLECTION_NEWPLAYLIST",
    "DISPID_WMPPLAYLISTCOLLECTION_NEWQUERY",
    "DISPID_WMPPLAYLISTCOLLECTION_REMOVE",
    "DISPID_WMPPLAYLISTCOLLECTION_SETDELETED",
    "DISPID_WMPPLAYLISTCOLLECTION_STARTMONITORING",
    "DISPID_WMPPLAYLISTCOLLECTION_STOPMONITORING",
    "DISPID_WMPPLAYLIST_APPENDITEM",
    "DISPID_WMPPLAYLIST_ATTRIBUTECOUNT",
    "DISPID_WMPPLAYLIST_ATTRIBUTENAME",
    "DISPID_WMPPLAYLIST_BASE",
    "DISPID_WMPPLAYLIST_CLEAR",
    "DISPID_WMPPLAYLIST_COUNT",
    "DISPID_WMPPLAYLIST_GETITEMINFO",
    "DISPID_WMPPLAYLIST_INSERTITEM",
    "DISPID_WMPPLAYLIST_ISIDENTICAL",
    "DISPID_WMPPLAYLIST_ITEM",
    "DISPID_WMPPLAYLIST_MOVEITEM",
    "DISPID_WMPPLAYLIST_NAME",
    "DISPID_WMPPLAYLIST_REMOVEITEM",
    "DISPID_WMPPLAYLIST_SETITEMINFO",
    "DISPID_WMPQUERY_ADDCONDITION",
    "DISPID_WMPQUERY_BASE",
    "DISPID_WMPQUERY_BEGINNEXTGROUP",
    "DISPID_WMPSETTINGS2_DEFAULTAUDIOLANGUAGE",
    "DISPID_WMPSETTINGS2_LIBRARYACCESSRIGHTS",
    "DISPID_WMPSETTINGS2_REQUESTLIBRARYACCESSRIGHTS",
    "DISPID_WMPSETTINGS_AUTOSTART",
    "DISPID_WMPSETTINGS_BALANCE",
    "DISPID_WMPSETTINGS_BASE",
    "DISPID_WMPSETTINGS_BASEURL",
    "DISPID_WMPSETTINGS_DEFAULTFRAME",
    "DISPID_WMPSETTINGS_ENABLEERRORDIALOGS",
    "DISPID_WMPSETTINGS_GETMODE",
    "DISPID_WMPSETTINGS_INVOKEURLS",
    "DISPID_WMPSETTINGS_ISAVAILABLE",
    "DISPID_WMPSETTINGS_MUTE",
    "DISPID_WMPSETTINGS_PLAYCOUNT",
    "DISPID_WMPSETTINGS_RATE",
    "DISPID_WMPSETTINGS_SETMODE",
    "DISPID_WMPSETTINGS_VOLUME",
    "DISPID_WMPSTRINGCOLLECTION2_BASE",
    "DISPID_WMPSTRINGCOLLECTION2_GETATTRCOUNTBYTYPE",
    "DISPID_WMPSTRINGCOLLECTION2_GETITEMINFO",
    "DISPID_WMPSTRINGCOLLECTION2_GETITEMINFOBYTYPE",
    "DISPID_WMPSTRINGCOLLECTION2_ISIDENTICAL",
    "DISPID_WMPSTRINGCOLLECTION_BASE",
    "DISPID_WMPSTRINGCOLLECTION_COUNT",
    "DISPID_WMPSTRINGCOLLECTION_ITEM",
    "EFFECT2_FULLSCREENEXCLUSIVE",
    "EFFECT_CANGOFULLSCREEN",
    "EFFECT_HASPROPERTYPAGE",
    "EFFECT_VARIABLEFREQSTEP",
    "EFFECT_WINDOWEDONLY",
    "FBSA_DISABLE",
    "FBSA_ENABLE",
    "FBSA_RUNNOW",
    "FBSS_DISABLED",
    "FBSS_ENABLED",
    "FDE_ACCESS_DENIED",
    "FDE_AUTH_FAILED",
    "FDE_BACKGROUND_DOWNLOAD_DISABLED",
    "FDE_CANCELED",
    "FDE_DOWNLOAD_BLOCKED",
    "FDE_DOWNLOAD_FAILED",
    "FDE_DOWNLOAD_SIZE_LIMIT_EXCEEDED",
    "FDE_INVALID_AUTH",
    "FDE_INVALID_FEED_FORMAT",
    "FDE_NONE",
    "FDE_NORMALIZATION_FAILED",
    "FDE_NOT_EXIST",
    "FDE_PERSISTENCE_FAILED",
    "FDE_UNSUPPORTED_AUTH",
    "FDE_UNSUPPORTED_DTD",
    "FDE_UNSUPPORTED_MSXML",
    "FDS_DOWNLOADED",
    "FDS_DOWNLOADING",
    "FDS_DOWNLOAD_FAILED",
    "FDS_NONE",
    "FDS_PENDING",
    "FEC_E_DOWNLOADSIZELIMITEXCEEDED",
    "FEC_E_ERRORBASE",
    "FEC_E_INVALIDMSXMLPROPERTY",
    "FEEDS_BACKGROUNDSYNC_ACTION",
    "FEEDS_BACKGROUNDSYNC_STATUS",
    "FEEDS_DOWNLOAD_ERROR",
    "FEEDS_DOWNLOAD_STATUS",
    "FEEDS_ERROR_CODE",
    "FEEDS_EVENTS_ITEM_COUNT_FLAGS",
    "FEEDS_EVENTS_MASK",
    "FEEDS_EVENTS_SCOPE",
    "FEEDS_SYNC_SETTING",
    "FEEDS_XML_FILTER_FLAGS",
    "FEEDS_XML_INCLUDE_FLAGS",
    "FEEDS_XML_SORT_ORDER",
    "FEEDS_XML_SORT_PROPERTY",
    "FEICF_READ_ITEM_COUNT_CHANGED",
    "FEICF_UNREAD_ITEM_COUNT_CHANGED",
    "FEM_FEEDEVENTS",
    "FEM_FOLDEREVENTS",
    "FES_ALL",
    "FES_SELF_AND_CHILDREN_ONLY",
    "FES_SELF_ONLY",
    "FSS_DEFAULT",
    "FSS_INTERVAL",
    "FSS_MANUAL",
    "FSS_SUGGESTED",
    "FXFF_ALL",
    "FXFF_READ",
    "FXFF_UNREAD",
    "FXIF_CF_EXTENSIONS",
    "FXIF_NONE",
    "FXSO_ASCENDING",
    "FXSO_DESCENDING",
    "FXSO_NONE",
    "FXSP_DOWNLOADTIME",
    "FXSP_NONE",
    "FXSP_PUBDATE",
    "FeedFolderWatcher",
    "FeedWatcher",
    "FeedsManager",
    "IFeed",
    "IFeed2",
    "IFeedEnclosure",
    "IFeedEvents",
    "IFeedFolder",
    "IFeedFolderEvents",
    "IFeedItem",
    "IFeedItem2",
    "IFeedsEnum",
    "IFeedsManager",
    "IOCTL_WMP_DEVICE_CAN_SYNC",
    "IOCTL_WMP_METADATA_ROUND_TRIP",
    "IWMPAudioRenderConfig",
    "IWMPCdrom",
    "IWMPCdromBurn",
    "IWMPCdromCollection",
    "IWMPCdromRip",
    "IWMPClosedCaption",
    "IWMPClosedCaption2",
    "IWMPContentContainer",
    "IWMPContentContainerList",
    "IWMPContentPartner",
    "IWMPContentPartnerCallback",
    "IWMPControls",
    "IWMPControls2",
    "IWMPControls3",
    "IWMPConvert",
    "IWMPCore",
    "IWMPCore2",
    "IWMPCore3",
    "IWMPDVD",
    "IWMPDownloadCollection",
    "IWMPDownloadItem",
    "IWMPDownloadItem2",
    "IWMPDownloadManager",
    "IWMPEffects",
    "IWMPEffects2",
    "IWMPError",
    "IWMPErrorItem",
    "IWMPErrorItem2",
    "IWMPEvents",
    "IWMPEvents2",
    "IWMPEvents3",
    "IWMPEvents4",
    "IWMPFolderMonitorServices",
    "IWMPGraphCreation",
    "IWMPLibrary",
    "IWMPLibrary2",
    "IWMPLibraryServices",
    "IWMPLibrarySharingServices",
    "IWMPMedia",
    "IWMPMedia2",
    "IWMPMedia3",
    "IWMPMediaCollection",
    "IWMPMediaCollection2",
    "IWMPMediaPluginRegistrar",
    "IWMPMetadataPicture",
    "IWMPMetadataText",
    "IWMPNetwork",
    "IWMPNodeRealEstate",
    "IWMPNodeRealEstateHost",
    "IWMPNodeWindowed",
    "IWMPNodeWindowedHost",
    "IWMPNodeWindowless",
    "IWMPNodeWindowlessHost",
    "IWMPPlayer",
    "IWMPPlayer2",
    "IWMPPlayer3",
    "IWMPPlayer4",
    "IWMPPlayerApplication",
    "IWMPPlayerServices",
    "IWMPPlayerServices2",
    "IWMPPlaylist",
    "IWMPPlaylistArray",
    "IWMPPlaylistCollection",
    "IWMPPlugin",
    "IWMPPluginEnable",
    "IWMPPluginUI",
    "IWMPQuery",
    "IWMPRemoteMediaServices",
    "IWMPRenderConfig",
    "IWMPServices",
    "IWMPSettings",
    "IWMPSettings2",
    "IWMPSkinManager",
    "IWMPStringCollection",
    "IWMPStringCollection2",
    "IWMPSubscriptionService",
    "IWMPSubscriptionService2",
    "IWMPSubscriptionServiceCallback",
    "IWMPSyncDevice",
    "IWMPSyncDevice2",
    "IWMPSyncDevice3",
    "IWMPSyncServices",
    "IWMPTranscodePolicy",
    "IWMPUserEventSink",
    "IWMPVideoRenderConfig",
    "IWMPWindowMessageSink",
    "IXFeed",
    "IXFeed2",
    "IXFeedEnclosure",
    "IXFeedEvents",
    "IXFeedFolder",
    "IXFeedFolderEvents",
    "IXFeedItem",
    "IXFeedItem2",
    "IXFeedsEnum",
    "IXFeedsManager",
    "PLUGIN_ALL_MEDIASENDTO",
    "PLUGIN_ALL_PLAYLISTSENDTO",
    "PLUGIN_FLAGS_ACCEPTSMEDIA",
    "PLUGIN_FLAGS_ACCEPTSPLAYLISTS",
    "PLUGIN_FLAGS_HASPRESETS",
    "PLUGIN_FLAGS_HASPROPERTYPAGE",
    "PLUGIN_FLAGS_HIDDEN",
    "PLUGIN_FLAGS_INSTALLAUTORUN",
    "PLUGIN_FLAGS_LAUNCHPROPERTYPAGE",
    "PLUGIN_INSTALLREGKEY",
    "PLUGIN_INSTALLREGKEY_CAPABILITIES",
    "PLUGIN_INSTALLREGKEY_DESCRIPTION",
    "PLUGIN_INSTALLREGKEY_FRIENDLYNAME",
    "PLUGIN_INSTALLREGKEY_UNINSTALL",
    "PLUGIN_MISC_CURRENTPRESET",
    "PLUGIN_MISC_PRESETCOUNT",
    "PLUGIN_MISC_PRESETNAMES",
    "PLUGIN_MISC_QUERYDESTROY",
    "PLUGIN_SEPARATEWINDOW_DEFAULTHEIGHT",
    "PLUGIN_SEPARATEWINDOW_DEFAULTWIDTH",
    "PLUGIN_SEPARATEWINDOW_MAXHEIGHT",
    "PLUGIN_SEPARATEWINDOW_MAXWIDTH",
    "PLUGIN_SEPARATEWINDOW_MINHEIGHT",
    "PLUGIN_SEPARATEWINDOW_MINWIDTH",
    "PLUGIN_SEPARATEWINDOW_RESIZABLE",
    "PLUGIN_TYPE_BACKGROUND",
    "PLUGIN_TYPE_DISPLAYAREA",
    "PLUGIN_TYPE_METADATAAREA",
    "PLUGIN_TYPE_SEPARATEWINDOW",
    "PLUGIN_TYPE_SETTINGSAREA",
    "PlayerState",
    "SA_BUFFER_SIZE",
    "SUBSCRIPTION_CAP_ALLOWCDBURN",
    "SUBSCRIPTION_CAP_ALLOWPDATRANSFER",
    "SUBSCRIPTION_CAP_ALLOWPLAY",
    "SUBSCRIPTION_CAP_ALTLOGIN",
    "SUBSCRIPTION_CAP_BACKGROUNDPROCESSING",
    "SUBSCRIPTION_CAP_DEVICEAVAILABLE",
    "SUBSCRIPTION_CAP_IS_CONTENTPARTNER",
    "SUBSCRIPTION_CAP_PREPAREFORSYNC",
    "SUBSCRIPTION_CAP_UILESSMODE_ALLOWPLAY",
    "SUBSCRIPTION_V1_CAPS",
    "TimedLevel",
    "WMPAccountType",
    "WMPAccountType_wmpatBuyOnly",
    "WMPAccountType_wmpatJanus",
    "WMPAccountType_wmpatSubscription",
    "WMPBurnFormat",
    "WMPBurnFormat_wmpbfAudioCD",
    "WMPBurnFormat_wmpbfDataCD",
    "WMPBurnState",
    "WMPBurnState_wmpbsBurning",
    "WMPBurnState_wmpbsBusy",
    "WMPBurnState_wmpbsDownloading",
    "WMPBurnState_wmpbsErasing",
    "WMPBurnState_wmpbsPreparingToBurn",
    "WMPBurnState_wmpbsReady",
    "WMPBurnState_wmpbsRefreshStatusPending",
    "WMPBurnState_wmpbsStopped",
    "WMPBurnState_wmpbsUnknown",
    "WMPBurnState_wmpbsWaitingForDisc",
    "WMPCOREEVENT_BASE",
    "WMPCOREEVENT_CDROM_BASE",
    "WMPCOREEVENT_CONTENT_BASE",
    "WMPCOREEVENT_CONTROL_BASE",
    "WMPCOREEVENT_ERROR_BASE",
    "WMPCOREEVENT_NETWORK_BASE",
    "WMPCOREEVENT_PLAYLIST_BASE",
    "WMPCOREEVENT_SEEK_BASE",
    "WMPCOREEVENT_WARNING_BASE",
    "WMPCallbackNotification",
    "WMPCallbackNotification_wmpcnAuthResult",
    "WMPCallbackNotification_wmpcnDisableRadioSkipping",
    "WMPCallbackNotification_wmpcnLicenseUpdated",
    "WMPCallbackNotification_wmpcnLoginStateChange",
    "WMPCallbackNotification_wmpcnNewCatalogAvailable",
    "WMPCallbackNotification_wmpcnNewPluginAvailable",
    "WMPContextMenuInfo",
    "WMPDeviceStatus",
    "WMPDeviceStatus_wmpdsLast",
    "WMPDeviceStatus_wmpdsManualDevice",
    "WMPDeviceStatus_wmpdsNewDevice",
    "WMPDeviceStatus_wmpdsPartnershipAnother",
    "WMPDeviceStatus_wmpdsPartnershipDeclined",
    "WMPDeviceStatus_wmpdsPartnershipExists",
    "WMPDeviceStatus_wmpdsUnknown",
    "WMPFolderScanState",
    "WMPFolderScanState_wmpfssScanning",
    "WMPFolderScanState_wmpfssStopped",
    "WMPFolderScanState_wmpfssUnknown",
    "WMPFolderScanState_wmpfssUpdating",
    "WMPGC_FLAGS_ALLOW_PREROLL",
    "WMPGC_FLAGS_DISABLE_PLUGINS",
    "WMPGC_FLAGS_IGNORE_AV_SYNC",
    "WMPGC_FLAGS_SUPPRESS_DIALOGS",
    "WMPGC_FLAGS_USE_CUSTOM_GRAPH",
    "WMPLib",
    "WMPLibraryType",
    "WMPLibraryType_wmpltAll",
    "WMPLibraryType_wmpltDisc",
    "WMPLibraryType_wmpltLocal",
    "WMPLibraryType_wmpltPortableDevice",
    "WMPLibraryType_wmpltRemote",
    "WMPLibraryType_wmpltUnknown",
    "WMPOCXEVENT_BASE",
    "WMPOpenState",
    "WMPOpenState_wmposBeginCodecAcquisition",
    "WMPOpenState_wmposBeginIndividualization",
    "WMPOpenState_wmposBeginLicenseAcquisition",
    "WMPOpenState_wmposEndCodecAcquisition",
    "WMPOpenState_wmposEndIndividualization",
    "WMPOpenState_wmposEndLicenseAcquisition",
    "WMPOpenState_wmposMediaChanging",
    "WMPOpenState_wmposMediaConnecting",
    "WMPOpenState_wmposMediaLoading",
    "WMPOpenState_wmposMediaLocating",
    "WMPOpenState_wmposMediaOpen",
    "WMPOpenState_wmposMediaOpening",
    "WMPOpenState_wmposMediaWaiting",
    "WMPOpenState_wmposOpeningUnknownURL",
    "WMPOpenState_wmposPlaylistChanged",
    "WMPOpenState_wmposPlaylistChanging",
    "WMPOpenState_wmposPlaylistConnecting",
    "WMPOpenState_wmposPlaylistLoading",
    "WMPOpenState_wmposPlaylistLocating",
    "WMPOpenState_wmposPlaylistOpenNoMedia",
    "WMPOpenState_wmposPlaylistOpening",
    "WMPOpenState_wmposUndefined",
    "WMPPartnerNotification",
    "WMPPartnerNotification_wmpsnBackgroundProcessingBegin",
    "WMPPartnerNotification_wmpsnBackgroundProcessingEnd",
    "WMPPartnerNotification_wmpsnCatalogDownloadComplete",
    "WMPPartnerNotification_wmpsnCatalogDownloadFailure",
    "WMPPlayState",
    "WMPPlayState_wmppsBuffering",
    "WMPPlayState_wmppsLast",
    "WMPPlayState_wmppsMediaEnded",
    "WMPPlayState_wmppsPaused",
    "WMPPlayState_wmppsPlaying",
    "WMPPlayState_wmppsReady",
    "WMPPlayState_wmppsReconnecting",
    "WMPPlayState_wmppsScanForward",
    "WMPPlayState_wmppsScanReverse",
    "WMPPlayState_wmppsStopped",
    "WMPPlayState_wmppsTransitioning",
    "WMPPlayState_wmppsUndefined",
    "WMPPlayState_wmppsWaiting",
    "WMPPlaylistChangeEventType",
    "WMPPlaylistChangeEventType_wmplcAppend",
    "WMPPlaylistChangeEventType_wmplcClear",
    "WMPPlaylistChangeEventType_wmplcDelete",
    "WMPPlaylistChangeEventType_wmplcInfoChange",
    "WMPPlaylistChangeEventType_wmplcInsert",
    "WMPPlaylistChangeEventType_wmplcLast",
    "WMPPlaylistChangeEventType_wmplcMorph",
    "WMPPlaylistChangeEventType_wmplcMove",
    "WMPPlaylistChangeEventType_wmplcNameChange",
    "WMPPlaylistChangeEventType_wmplcPrivate",
    "WMPPlaylistChangeEventType_wmplcSort",
    "WMPPlaylistChangeEventType_wmplcUnknown",
    "WMPPlugin_Caps",
    "WMPPlugin_Caps_CannotConvertFormats",
    "WMPRemoteMediaServices",
    "WMPRipState",
    "WMPRipState_wmprsRipping",
    "WMPRipState_wmprsStopped",
    "WMPRipState_wmprsUnknown",
    "WMPServices_StreamState",
    "WMPServices_StreamState_Pause",
    "WMPServices_StreamState_Play",
    "WMPServices_StreamState_Stop",
    "WMPStreamingType",
    "WMPStreamingType_wmpstMusic",
    "WMPStreamingType_wmpstRadio",
    "WMPStreamingType_wmpstUnknown",
    "WMPStreamingType_wmpstVideo",
    "WMPStringCollectionChangeEventType",
    "WMPStringCollectionChangeEventType_wmpsccetBeginUpdates",
    "WMPStringCollectionChangeEventType_wmpsccetChange",
    "WMPStringCollectionChangeEventType_wmpsccetClear",
    "WMPStringCollectionChangeEventType_wmpsccetDelete",
    "WMPStringCollectionChangeEventType_wmpsccetEndUpdates",
    "WMPStringCollectionChangeEventType_wmpsccetInsert",
    "WMPStringCollectionChangeEventType_wmpsccetUnknown",
    "WMPSubscriptionDownloadState",
    "WMPSubscriptionDownloadState_wmpsdlsCancelled",
    "WMPSubscriptionDownloadState_wmpsdlsCompleted",
    "WMPSubscriptionDownloadState_wmpsdlsDownloading",
    "WMPSubscriptionDownloadState_wmpsdlsPaused",
    "WMPSubscriptionDownloadState_wmpsdlsProcessing",
    "WMPSubscriptionServiceEvent",
    "WMPSubscriptionServiceEvent_wmpsseCurrentBegin",
    "WMPSubscriptionServiceEvent_wmpsseCurrentEnd",
    "WMPSubscriptionServiceEvent_wmpsseFullBegin",
    "WMPSubscriptionServiceEvent_wmpsseFullEnd",
    "WMPSyncState",
    "WMPSyncState_wmpssEstimating",
    "WMPSyncState_wmpssLast",
    "WMPSyncState_wmpssStopped",
    "WMPSyncState_wmpssSynchronizing",
    "WMPSyncState_wmpssUnknown",
    "WMPTaskType",
    "WMPTaskType_wmpttBrowse",
    "WMPTaskType_wmpttBurn",
    "WMPTaskType_wmpttCurrent",
    "WMPTaskType_wmpttSync",
    "WMPTemplateSize",
    "WMPTemplateSize_wmptsLarge",
    "WMPTemplateSize_wmptsMedium",
    "WMPTemplateSize_wmptsSmall",
    "WMPTransactionType",
    "WMPTransactionType_wmpttBuy",
    "WMPTransactionType_wmpttDownload",
    "WMPTransactionType_wmpttNoTransaction",
    "WMPUE_EC_USER",
    "WMP_MDRT_FLAGS_UNREPORTED_ADDED_ITEMS",
    "WMP_MDRT_FLAGS_UNREPORTED_DELETED_ITEMS",
    "WMP_PLUGINTYPE_DSP",
    "WMP_PLUGINTYPE_DSP_OUTOFPROC",
    "WMP_PLUGINTYPE_RENDERING",
    "WMP_SUBSCR_DL_TYPE_BACKGROUND",
    "WMP_SUBSCR_DL_TYPE_REALTIME",
    "WMP_WMDM_METADATA_ROUND_TRIP_DEVICE2PC",
    "WMP_WMDM_METADATA_ROUND_TRIP_PC2DEVICE",
    "WMProfile_V40_100Video",
    "WMProfile_V40_128Audio",
    "WMProfile_V40_16AMRadio",
    "WMProfile_V40_1MBVideo",
    "WMProfile_V40_250Video",
    "WMProfile_V40_2856100MBR",
    "WMProfile_V40_288FMRadioMono",
    "WMProfile_V40_288FMRadioStereo",
    "WMProfile_V40_288VideoAudio",
    "WMProfile_V40_288VideoVoice",
    "WMProfile_V40_288VideoWebServer",
    "WMProfile_V40_3MBVideo",
    "WMProfile_V40_512Video",
    "WMProfile_V40_56DialUpStereo",
    "WMProfile_V40_56DialUpVideo",
    "WMProfile_V40_56DialUpVideoWebServer",
    "WMProfile_V40_64Audio",
    "WMProfile_V40_6VoiceAudio",
    "WMProfile_V40_96Audio",
    "WMProfile_V40_DialUpMBR",
    "WMProfile_V40_IntranetMBR",
    "WMProfile_V70_100Video",
    "WMProfile_V70_128Audio",
    "WMProfile_V70_1500FilmContentVideo",
    "WMProfile_V70_1500Video",
    "WMProfile_V70_150VideoPDA",
    "WMProfile_V70_2000Video",
    "WMProfile_V70_225VideoPDA",
    "WMProfile_V70_256Video",
    "WMProfile_V70_2856100MBR",
    "WMProfile_V70_288FMRadioMono",
    "WMProfile_V70_288FMRadioStereo",
    "WMProfile_V70_288VideoAudio",
    "WMProfile_V70_288VideoVoice",
    "WMProfile_V70_288VideoWebServer",
    "WMProfile_V70_384Video",
    "WMProfile_V70_56DialUpStereo",
    "WMProfile_V70_56VideoWebServer",
    "WMProfile_V70_64Audio",
    "WMProfile_V70_64AudioISDN",
    "WMProfile_V70_64VideoISDN",
    "WMProfile_V70_6VoiceAudio",
    "WMProfile_V70_700FilmContentVideo",
    "WMProfile_V70_768Video",
    "WMProfile_V70_96Audio",
    "WMProfile_V70_DialUpMBR",
    "WMProfile_V70_IntranetMBR",
    "WMProfile_V80_100768VideoMBR",
    "WMProfile_V80_100Video",
    "WMProfile_V80_128StereoAudio",
    "WMProfile_V80_1400NTSCVideo",
    "WMProfile_V80_150VideoPDA",
    "WMProfile_V80_255VideoPDA",
    "WMProfile_V80_256Video",
    "WMProfile_V80_288100VideoMBR",
    "WMProfile_V80_28856VideoMBR",
    "WMProfile_V80_288MonoAudio",
    "WMProfile_V80_288StereoAudio",
    "WMProfile_V80_288Video",
    "WMProfile_V80_288VideoOnly",
    "WMProfile_V80_32StereoAudio",
    "WMProfile_V80_384PALVideo",
    "WMProfile_V80_384Video",
    "WMProfile_V80_48StereoAudio",
    "WMProfile_V80_56Video",
    "WMProfile_V80_56VideoOnly",
    "WMProfile_V80_64StereoAudio",
    "WMProfile_V80_700NTSCVideo",
    "WMProfile_V80_700PALVideo",
    "WMProfile_V80_768Video",
    "WMProfile_V80_96StereoAudio",
    "WMProfile_V80_BESTVBRVideo",
    "WMProfile_V80_FAIRVBRVideo",
    "WMProfile_V80_HIGHVBRVideo",
    "WindowsMediaPlayer",
    "_WMPOCXEvents",
    "g_szAllAuthors",
    "g_szAllCPAlbumIDs",
    "g_szAllCPAlbumSubGenreIDs",
    "g_szAllCPArtistIDs",
    "g_szAllCPGenreIDs",
    "g_szAllCPListIDs",
    "g_szAllCPRadioIDs",
    "g_szAllCPTrackIDs",
    "g_szAllReleaseDateYears",
    "g_szAllUserEffectiveRatingStarss",
    "g_szAllWMParentalRatings",
    "g_szAuthor",
    "g_szCPAlbumID",
    "g_szCPAlbumSubGenreID",
    "g_szCPArtistID",
    "g_szCPGenreID",
    "g_szCPListID",
    "g_szCPRadioID",
    "g_szCPTrackID",
    "g_szContentPartnerInfo_AccountBalance",
    "g_szContentPartnerInfo_AccountType",
    "g_szContentPartnerInfo_HasCachedCredentials",
    "g_szContentPartnerInfo_LicenseRefreshAdvanceWarning",
    "g_szContentPartnerInfo_LoginState",
    "g_szContentPartnerInfo_MaximumTrackPurchasePerPurchase",
    "g_szContentPartnerInfo_MediaPlayerAccountType",
    "g_szContentPartnerInfo_PurchasedTrackRequiresReDownload",
    "g_szContentPartnerInfo_UserName",
    "g_szContentPrice_CannotBuy",
    "g_szContentPrice_Free",
    "g_szContentPrice_Unknown",
    "g_szFlyoutMenu",
    "g_szItemInfo_ALTLoginCaption",
    "g_szItemInfo_ALTLoginURL",
    "g_szItemInfo_AlbumArtURL",
    "g_szItemInfo_ArtistArtURL",
    "g_szItemInfo_AuthenticationSuccessURL",
    "g_szItemInfo_CreateAccountURL",
    "g_szItemInfo_ErrorDescription",
    "g_szItemInfo_ErrorURL",
    "g_szItemInfo_ErrorURLLinkText",
    "g_szItemInfo_ForgetPasswordURL",
    "g_szItemInfo_GenreArtURL",
    "g_szItemInfo_HTMLViewURL",
    "g_szItemInfo_ListArtURL",
    "g_szItemInfo_LoginFailureURL",
    "g_szItemInfo_PopupCaption",
    "g_szItemInfo_PopupURL",
    "g_szItemInfo_RadioArtURL",
    "g_szItemInfo_SubGenreArtURL",
    "g_szItemInfo_TreeListIconURL",
    "g_szMediaPlayerTask_Browse",
    "g_szMediaPlayerTask_Burn",
    "g_szMediaPlayerTask_Sync",
    "g_szOnlineStore",
    "g_szRefreshLicenseBurn",
    "g_szRefreshLicensePlay",
    "g_szRefreshLicenseSync",
    "g_szReleaseDateYear",
    "g_szRootLocation",
    "g_szStationEvent_Complete",
    "g_szStationEvent_Skipped",
    "g_szStationEvent_Started",
    "g_szUnknownLocation",
    "g_szUserEffectiveRatingStars",
    "g_szUserPlaylist",
    "g_szVerifyPermissionSync",
    "g_szVideoRecent",
    "g_szVideoRoot",
    "g_szViewMode_Details",
    "g_szViewMode_Icon",
    "g_szViewMode_OrderedList",
    "g_szViewMode_Report",
    "g_szViewMode_Tile",
    "g_szWMParentalRating",
    "kfltTimedLevelMaximumFrequency",
    "kfltTimedLevelMinimumFrequency",
    "pause_state",
    "play_state",
    "stop_state",
]
