from win32more.base import *
import win32more.Foundation
import win32more.Graphics.Gdi
import win32more.Security
import win32more.System.Com
import win32more.System.Diagnostics.Debug
import win32more.System.SystemServices

import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        f = globals()[f"_define_{name}"]
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, f())
    return getattr(_module, name)
def __dir__():
    return __all__
_MM_HINT_T0 = 1
_MM_HINT_T1 = 2
_MM_HINT_T2 = 3
_MM_HINT_NTA = 0
ANYSIZE_ARRAY = 1
MEMORY_ALLOCATION_ALIGNMENT = 16
X86_CACHE_ALIGNMENT_SIZE = 64
ARM_CACHE_ALIGNMENT_SIZE = 128
SYSTEM_CACHE_ALIGNMENT_SIZE = 64
PRAGMA_DEPRECATED_DDK = 1
UCSCHAR_INVALID_CHARACTER = 4294967295
MIN_UCSCHAR = 0
MAX_UCSCHAR = 1114111
ALL_PROCESSOR_GROUPS = 65535
MAXIMUM_PROC_PER_GROUP = 64
MAXIMUM_PROCESSORS = 64
APPLICATION_ERROR_MASK = 536870912
ERROR_SEVERITY_SUCCESS = 0
ERROR_SEVERITY_INFORMATIONAL = 1073741824
ERROR_SEVERITY_WARNING = 2147483648
ERROR_SEVERITY_ERROR = 3221225472
MAXLONGLONG = 9223372036854775807
UNICODE_STRING_MAX_CHARS = 32767
MINCHAR = 128
MAXCHAR = 127
MINSHORT = 32768
MAXSHORT = 32767
MINLONG = 2147483648
MAXLONG = 2147483647
MAXBYTE = 255
MAXWORD = 65535
MAXDWORD = 4294967295
ENCLAVE_SHORT_ID_LENGTH = 16
ENCLAVE_LONG_ID_LENGTH = 32
VER_SERVER_NT = 2147483648
VER_WORKSTATION_NT = 1073741824
VER_SUITE_SMALLBUSINESS = 1
VER_SUITE_ENTERPRISE = 2
VER_SUITE_BACKOFFICE = 4
VER_SUITE_COMMUNICATIONS = 8
VER_SUITE_TERMINAL = 16
VER_SUITE_SMALLBUSINESS_RESTRICTED = 32
VER_SUITE_EMBEDDEDNT = 64
VER_SUITE_DATACENTER = 128
VER_SUITE_SINGLEUSERTS = 256
VER_SUITE_PERSONAL = 512
VER_SUITE_BLADE = 1024
VER_SUITE_EMBEDDED_RESTRICTED = 2048
VER_SUITE_SECURITY_APPLIANCE = 4096
VER_SUITE_STORAGE_SERVER = 8192
VER_SUITE_COMPUTE_SERVER = 16384
VER_SUITE_WH_SERVER = 32768
VER_SUITE_MULTIUSERTS = 131072
PRODUCT_STANDARD_SERVER_CORE = 13
PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE = 57
PRODUCT_PROFESSIONAL_EMBEDDED = 58
PRODUCT_EMBEDDED = 65
PRODUCT_EMBEDDED_AUTOMOTIVE = 85
PRODUCT_EMBEDDED_INDUSTRY_A = 86
PRODUCT_THINPC = 87
PRODUCT_EMBEDDED_A = 88
PRODUCT_EMBEDDED_INDUSTRY = 89
PRODUCT_EMBEDDED_E = 90
PRODUCT_EMBEDDED_INDUSTRY_E = 91
PRODUCT_EMBEDDED_INDUSTRY_A_E = 92
PRODUCT_CORE_ARM = 97
PRODUCT_EMBEDDED_INDUSTRY_EVAL = 105
PRODUCT_EMBEDDED_INDUSTRY_E_EVAL = 106
PRODUCT_EMBEDDED_EVAL = 107
PRODUCT_EMBEDDED_E_EVAL = 108
PRODUCT_NANO_SERVER = 109
PRODUCT_CLOUD_STORAGE_SERVER = 110
PRODUCT_CORE_CONNECTED = 111
PRODUCT_PROFESSIONAL_STUDENT = 112
PRODUCT_CORE_CONNECTED_N = 113
PRODUCT_PROFESSIONAL_STUDENT_N = 114
PRODUCT_CORE_CONNECTED_SINGLELANGUAGE = 115
PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC = 116
PRODUCT_CONNECTED_CAR = 117
PRODUCT_INDUSTRY_HANDHELD = 118
PRODUCT_PPI_PRO = 119
PRODUCT_ARM64_SERVER = 120
PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER = 124
PRODUCT_PROFESSIONAL_S = 127
PRODUCT_PROFESSIONAL_S_N = 128
PRODUCT_HOLOGRAPHIC = 135
PRODUCT_HOLOGRAPHIC_BUSINESS = 136
PRODUCT_PRO_SINGLE_LANGUAGE = 138
PRODUCT_PRO_CHINA = 139
PRODUCT_ENTERPRISE_SUBSCRIPTION = 140
PRODUCT_ENTERPRISE_SUBSCRIPTION_N = 141
PRODUCT_DATACENTER_NANO_SERVER = 143
PRODUCT_STANDARD_NANO_SERVER = 144
PRODUCT_DATACENTER_WS_SERVER_CORE = 147
PRODUCT_STANDARD_WS_SERVER_CORE = 148
PRODUCT_UTILITY_VM = 149
PRODUCT_DATACENTER_EVALUATION_SERVER_CORE = 159
PRODUCT_STANDARD_EVALUATION_SERVER_CORE = 160
PRODUCT_PRO_FOR_EDUCATION = 164
PRODUCT_PRO_FOR_EDUCATION_N = 165
PRODUCT_AZURE_SERVER_CORE = 168
PRODUCT_AZURE_NANO_SERVER = 169
PRODUCT_ENTERPRISEG = 171
PRODUCT_ENTERPRISEGN = 172
PRODUCT_SERVERRDSH = 175
PRODUCT_CLOUD = 178
PRODUCT_CLOUDN = 179
PRODUCT_HUBOS = 180
PRODUCT_ONECOREUPDATEOS = 182
PRODUCT_CLOUDE = 183
PRODUCT_IOTOS = 185
PRODUCT_CLOUDEN = 186
PRODUCT_IOTEDGEOS = 187
PRODUCT_IOTENTERPRISE = 188
PRODUCT_LITE = 189
PRODUCT_IOTENTERPRISES = 191
PRODUCT_XBOX_SYSTEMOS = 192
PRODUCT_XBOX_NATIVEOS = 193
PRODUCT_XBOX_GAMEOS = 194
PRODUCT_XBOX_ERAOS = 195
PRODUCT_XBOX_DURANGOHOSTOS = 196
PRODUCT_XBOX_SCARLETTHOSTOS = 197
PRODUCT_AZURE_SERVER_CLOUDHOST = 199
PRODUCT_AZURE_SERVER_CLOUDMOS = 200
PRODUCT_CLOUDEDITIONN = 202
PRODUCT_CLOUDEDITION = 203
PRODUCT_AZURESTACKHCI_SERVER_CORE = 406
PRODUCT_DATACENTER_SERVER_AZURE_EDITION = 407
PRODUCT_DATACENTER_SERVER_CORE_AZURE_EDITION = 408
PRODUCT_UNLICENSED = 2882382797
LANG_NEUTRAL = 0
LANG_INVARIANT = 127
LANG_AFRIKAANS = 54
LANG_ALBANIAN = 28
LANG_ALSATIAN = 132
LANG_AMHARIC = 94
LANG_ARABIC = 1
LANG_ARMENIAN = 43
LANG_ASSAMESE = 77
LANG_AZERI = 44
LANG_AZERBAIJANI = 44
LANG_BANGLA = 69
LANG_BASHKIR = 109
LANG_BASQUE = 45
LANG_BELARUSIAN = 35
LANG_BENGALI = 69
LANG_BRETON = 126
LANG_BOSNIAN = 26
LANG_BOSNIAN_NEUTRAL = 30746
LANG_BULGARIAN = 2
LANG_CATALAN = 3
LANG_CENTRAL_KURDISH = 146
LANG_CHEROKEE = 92
LANG_CHINESE = 4
LANG_CHINESE_SIMPLIFIED = 4
LANG_CHINESE_TRADITIONAL = 31748
LANG_CORSICAN = 131
LANG_CROATIAN = 26
LANG_CZECH = 5
LANG_DANISH = 6
LANG_DARI = 140
LANG_DIVEHI = 101
LANG_DUTCH = 19
LANG_ENGLISH = 9
LANG_ESTONIAN = 37
LANG_FAEROESE = 56
LANG_FARSI = 41
LANG_FILIPINO = 100
LANG_FINNISH = 11
LANG_FRENCH = 12
LANG_FRISIAN = 98
LANG_FULAH = 103
LANG_GALICIAN = 86
LANG_GEORGIAN = 55
LANG_GERMAN = 7
LANG_GREEK = 8
LANG_GREENLANDIC = 111
LANG_GUJARATI = 71
LANG_HAUSA = 104
LANG_HAWAIIAN = 117
LANG_HEBREW = 13
LANG_HINDI = 57
LANG_HUNGARIAN = 14
LANG_ICELANDIC = 15
LANG_IGBO = 112
LANG_INDONESIAN = 33
LANG_INUKTITUT = 93
LANG_IRISH = 60
LANG_ITALIAN = 16
LANG_JAPANESE = 17
LANG_KANNADA = 75
LANG_KASHMIRI = 96
LANG_KAZAK = 63
LANG_KHMER = 83
LANG_KICHE = 134
LANG_KINYARWANDA = 135
LANG_KONKANI = 87
LANG_KOREAN = 18
LANG_KYRGYZ = 64
LANG_LAO = 84
LANG_LATVIAN = 38
LANG_LITHUANIAN = 39
LANG_LOWER_SORBIAN = 46
LANG_LUXEMBOURGISH = 110
LANG_MACEDONIAN = 47
LANG_MALAY = 62
LANG_MALAYALAM = 76
LANG_MALTESE = 58
LANG_MANIPURI = 88
LANG_MAORI = 129
LANG_MAPUDUNGUN = 122
LANG_MARATHI = 78
LANG_MOHAWK = 124
LANG_MONGOLIAN = 80
LANG_NEPALI = 97
LANG_NORWEGIAN = 20
LANG_OCCITAN = 130
LANG_ODIA = 72
LANG_ORIYA = 72
LANG_PASHTO = 99
LANG_PERSIAN = 41
LANG_POLISH = 21
LANG_PORTUGUESE = 22
LANG_PULAR = 103
LANG_PUNJABI = 70
LANG_QUECHUA = 107
LANG_ROMANIAN = 24
LANG_ROMANSH = 23
LANG_RUSSIAN = 25
LANG_SAKHA = 133
LANG_SAMI = 59
LANG_SANSKRIT = 79
LANG_SCOTTISH_GAELIC = 145
LANG_SERBIAN = 26
LANG_SERBIAN_NEUTRAL = 31770
LANG_SINDHI = 89
LANG_SINHALESE = 91
LANG_SLOVAK = 27
LANG_SLOVENIAN = 36
LANG_SOTHO = 108
LANG_SPANISH = 10
LANG_SWAHILI = 65
LANG_SWEDISH = 29
LANG_SYRIAC = 90
LANG_TAJIK = 40
LANG_TAMAZIGHT = 95
LANG_TAMIL = 73
LANG_TATAR = 68
LANG_TELUGU = 74
LANG_THAI = 30
LANG_TIBETAN = 81
LANG_TIGRIGNA = 115
LANG_TIGRINYA = 115
LANG_TSWANA = 50
LANG_TURKISH = 31
LANG_TURKMEN = 66
LANG_UIGHUR = 128
LANG_UKRAINIAN = 34
LANG_UPPER_SORBIAN = 46
LANG_URDU = 32
LANG_UZBEK = 67
LANG_VALENCIAN = 3
LANG_VIETNAMESE = 42
LANG_WELSH = 82
LANG_WOLOF = 136
LANG_XHOSA = 52
LANG_YAKUT = 133
LANG_YI = 120
LANG_YORUBA = 106
LANG_ZULU = 53
SUBLANG_NEUTRAL = 0
SUBLANG_DEFAULT = 1
SUBLANG_SYS_DEFAULT = 2
SUBLANG_CUSTOM_DEFAULT = 3
SUBLANG_CUSTOM_UNSPECIFIED = 4
SUBLANG_UI_CUSTOM_DEFAULT = 5
SUBLANG_AFRIKAANS_SOUTH_AFRICA = 1
SUBLANG_ALBANIAN_ALBANIA = 1
SUBLANG_ALSATIAN_FRANCE = 1
SUBLANG_AMHARIC_ETHIOPIA = 1
SUBLANG_ARABIC_SAUDI_ARABIA = 1
SUBLANG_ARABIC_IRAQ = 2
SUBLANG_ARABIC_EGYPT = 3
SUBLANG_ARABIC_LIBYA = 4
SUBLANG_ARABIC_ALGERIA = 5
SUBLANG_ARABIC_MOROCCO = 6
SUBLANG_ARABIC_TUNISIA = 7
SUBLANG_ARABIC_OMAN = 8
SUBLANG_ARABIC_YEMEN = 9
SUBLANG_ARABIC_SYRIA = 10
SUBLANG_ARABIC_JORDAN = 11
SUBLANG_ARABIC_LEBANON = 12
SUBLANG_ARABIC_KUWAIT = 13
SUBLANG_ARABIC_UAE = 14
SUBLANG_ARABIC_BAHRAIN = 15
SUBLANG_ARABIC_QATAR = 16
SUBLANG_ARMENIAN_ARMENIA = 1
SUBLANG_ASSAMESE_INDIA = 1
SUBLANG_AZERI_LATIN = 1
SUBLANG_AZERI_CYRILLIC = 2
SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN = 1
SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC = 2
SUBLANG_BANGLA_INDIA = 1
SUBLANG_BANGLA_BANGLADESH = 2
SUBLANG_BASHKIR_RUSSIA = 1
SUBLANG_BASQUE_BASQUE = 1
SUBLANG_BELARUSIAN_BELARUS = 1
SUBLANG_BENGALI_INDIA = 1
SUBLANG_BENGALI_BANGLADESH = 2
SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN = 5
SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 8
SUBLANG_BRETON_FRANCE = 1
SUBLANG_BULGARIAN_BULGARIA = 1
SUBLANG_CATALAN_CATALAN = 1
SUBLANG_CENTRAL_KURDISH_IRAQ = 1
SUBLANG_CHEROKEE_CHEROKEE = 1
SUBLANG_CHINESE_TRADITIONAL = 1
SUBLANG_CHINESE_SIMPLIFIED = 2
SUBLANG_CHINESE_HONGKONG = 3
SUBLANG_CHINESE_SINGAPORE = 4
SUBLANG_CHINESE_MACAU = 5
SUBLANG_CORSICAN_FRANCE = 1
SUBLANG_CZECH_CZECH_REPUBLIC = 1
SUBLANG_CROATIAN_CROATIA = 1
SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN = 4
SUBLANG_DANISH_DENMARK = 1
SUBLANG_DARI_AFGHANISTAN = 1
SUBLANG_DIVEHI_MALDIVES = 1
SUBLANG_DUTCH = 1
SUBLANG_DUTCH_BELGIAN = 2
SUBLANG_ENGLISH_US = 1
SUBLANG_ENGLISH_UK = 2
SUBLANG_ENGLISH_AUS = 3
SUBLANG_ENGLISH_CAN = 4
SUBLANG_ENGLISH_NZ = 5
SUBLANG_ENGLISH_EIRE = 6
SUBLANG_ENGLISH_SOUTH_AFRICA = 7
SUBLANG_ENGLISH_JAMAICA = 8
SUBLANG_ENGLISH_CARIBBEAN = 9
SUBLANG_ENGLISH_BELIZE = 10
SUBLANG_ENGLISH_TRINIDAD = 11
SUBLANG_ENGLISH_ZIMBABWE = 12
SUBLANG_ENGLISH_PHILIPPINES = 13
SUBLANG_ENGLISH_INDIA = 16
SUBLANG_ENGLISH_MALAYSIA = 17
SUBLANG_ENGLISH_SINGAPORE = 18
SUBLANG_ESTONIAN_ESTONIA = 1
SUBLANG_FAEROESE_FAROE_ISLANDS = 1
SUBLANG_FILIPINO_PHILIPPINES = 1
SUBLANG_FINNISH_FINLAND = 1
SUBLANG_FRENCH = 1
SUBLANG_FRENCH_BELGIAN = 2
SUBLANG_FRENCH_CANADIAN = 3
SUBLANG_FRENCH_SWISS = 4
SUBLANG_FRENCH_LUXEMBOURG = 5
SUBLANG_FRENCH_MONACO = 6
SUBLANG_FRISIAN_NETHERLANDS = 1
SUBLANG_FULAH_SENEGAL = 2
SUBLANG_GALICIAN_GALICIAN = 1
SUBLANG_GEORGIAN_GEORGIA = 1
SUBLANG_GERMAN = 1
SUBLANG_GERMAN_SWISS = 2
SUBLANG_GERMAN_AUSTRIAN = 3
SUBLANG_GERMAN_LUXEMBOURG = 4
SUBLANG_GERMAN_LIECHTENSTEIN = 5
SUBLANG_GREEK_GREECE = 1
SUBLANG_GREENLANDIC_GREENLAND = 1
SUBLANG_GUJARATI_INDIA = 1
SUBLANG_HAUSA_NIGERIA_LATIN = 1
SUBLANG_HAWAIIAN_US = 1
SUBLANG_HEBREW_ISRAEL = 1
SUBLANG_HINDI_INDIA = 1
SUBLANG_HUNGARIAN_HUNGARY = 1
SUBLANG_ICELANDIC_ICELAND = 1
SUBLANG_IGBO_NIGERIA = 1
SUBLANG_INDONESIAN_INDONESIA = 1
SUBLANG_INUKTITUT_CANADA = 1
SUBLANG_INUKTITUT_CANADA_LATIN = 2
SUBLANG_IRISH_IRELAND = 2
SUBLANG_ITALIAN = 1
SUBLANG_ITALIAN_SWISS = 2
SUBLANG_JAPANESE_JAPAN = 1
SUBLANG_KANNADA_INDIA = 1
SUBLANG_KASHMIRI_SASIA = 2
SUBLANG_KASHMIRI_INDIA = 2
SUBLANG_KAZAK_KAZAKHSTAN = 1
SUBLANG_KHMER_CAMBODIA = 1
SUBLANG_KICHE_GUATEMALA = 1
SUBLANG_KINYARWANDA_RWANDA = 1
SUBLANG_KONKANI_INDIA = 1
SUBLANG_KOREAN = 1
SUBLANG_KYRGYZ_KYRGYZSTAN = 1
SUBLANG_LAO_LAO = 1
SUBLANG_LATVIAN_LATVIA = 1
SUBLANG_LITHUANIAN = 1
SUBLANG_LOWER_SORBIAN_GERMANY = 2
SUBLANG_LUXEMBOURGISH_LUXEMBOURG = 1
SUBLANG_MACEDONIAN_MACEDONIA = 1
SUBLANG_MALAY_MALAYSIA = 1
SUBLANG_MALAY_BRUNEI_DARUSSALAM = 2
SUBLANG_MALAYALAM_INDIA = 1
SUBLANG_MALTESE_MALTA = 1
SUBLANG_MAORI_NEW_ZEALAND = 1
SUBLANG_MAPUDUNGUN_CHILE = 1
SUBLANG_MARATHI_INDIA = 1
SUBLANG_MOHAWK_MOHAWK = 1
SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA = 1
SUBLANG_MONGOLIAN_PRC = 2
SUBLANG_NEPALI_INDIA = 2
SUBLANG_NEPALI_NEPAL = 1
SUBLANG_NORWEGIAN_BOKMAL = 1
SUBLANG_NORWEGIAN_NYNORSK = 2
SUBLANG_OCCITAN_FRANCE = 1
SUBLANG_ODIA_INDIA = 1
SUBLANG_ORIYA_INDIA = 1
SUBLANG_PASHTO_AFGHANISTAN = 1
SUBLANG_PERSIAN_IRAN = 1
SUBLANG_POLISH_POLAND = 1
SUBLANG_PORTUGUESE = 2
SUBLANG_PORTUGUESE_BRAZILIAN = 1
SUBLANG_PULAR_SENEGAL = 2
SUBLANG_PUNJABI_INDIA = 1
SUBLANG_PUNJABI_PAKISTAN = 2
SUBLANG_QUECHUA_BOLIVIA = 1
SUBLANG_QUECHUA_ECUADOR = 2
SUBLANG_QUECHUA_PERU = 3
SUBLANG_ROMANIAN_ROMANIA = 1
SUBLANG_ROMANSH_SWITZERLAND = 1
SUBLANG_RUSSIAN_RUSSIA = 1
SUBLANG_SAKHA_RUSSIA = 1
SUBLANG_SAMI_NORTHERN_NORWAY = 1
SUBLANG_SAMI_NORTHERN_SWEDEN = 2
SUBLANG_SAMI_NORTHERN_FINLAND = 3
SUBLANG_SAMI_LULE_NORWAY = 4
SUBLANG_SAMI_LULE_SWEDEN = 5
SUBLANG_SAMI_SOUTHERN_NORWAY = 6
SUBLANG_SAMI_SOUTHERN_SWEDEN = 7
SUBLANG_SAMI_SKOLT_FINLAND = 8
SUBLANG_SAMI_INARI_FINLAND = 9
SUBLANG_SANSKRIT_INDIA = 1
SUBLANG_SCOTTISH_GAELIC = 1
SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN = 6
SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 7
SUBLANG_SERBIAN_MONTENEGRO_LATIN = 11
SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC = 12
SUBLANG_SERBIAN_SERBIA_LATIN = 9
SUBLANG_SERBIAN_SERBIA_CYRILLIC = 10
SUBLANG_SERBIAN_CROATIA = 1
SUBLANG_SERBIAN_LATIN = 2
SUBLANG_SERBIAN_CYRILLIC = 3
SUBLANG_SINDHI_INDIA = 1
SUBLANG_SINDHI_PAKISTAN = 2
SUBLANG_SINDHI_AFGHANISTAN = 2
SUBLANG_SINHALESE_SRI_LANKA = 1
SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA = 1
SUBLANG_SLOVAK_SLOVAKIA = 1
SUBLANG_SLOVENIAN_SLOVENIA = 1
SUBLANG_SPANISH = 1
SUBLANG_SPANISH_MEXICAN = 2
SUBLANG_SPANISH_MODERN = 3
SUBLANG_SPANISH_GUATEMALA = 4
SUBLANG_SPANISH_COSTA_RICA = 5
SUBLANG_SPANISH_PANAMA = 6
SUBLANG_SPANISH_DOMINICAN_REPUBLIC = 7
SUBLANG_SPANISH_VENEZUELA = 8
SUBLANG_SPANISH_COLOMBIA = 9
SUBLANG_SPANISH_PERU = 10
SUBLANG_SPANISH_ARGENTINA = 11
SUBLANG_SPANISH_ECUADOR = 12
SUBLANG_SPANISH_CHILE = 13
SUBLANG_SPANISH_URUGUAY = 14
SUBLANG_SPANISH_PARAGUAY = 15
SUBLANG_SPANISH_BOLIVIA = 16
SUBLANG_SPANISH_EL_SALVADOR = 17
SUBLANG_SPANISH_HONDURAS = 18
SUBLANG_SPANISH_NICARAGUA = 19
SUBLANG_SPANISH_PUERTO_RICO = 20
SUBLANG_SPANISH_US = 21
SUBLANG_SWAHILI_KENYA = 1
SUBLANG_SWEDISH = 1
SUBLANG_SWEDISH_FINLAND = 2
SUBLANG_SYRIAC_SYRIA = 1
SUBLANG_TAJIK_TAJIKISTAN = 1
SUBLANG_TAMAZIGHT_ALGERIA_LATIN = 2
SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH = 4
SUBLANG_TAMIL_INDIA = 1
SUBLANG_TAMIL_SRI_LANKA = 2
SUBLANG_TATAR_RUSSIA = 1
SUBLANG_TELUGU_INDIA = 1
SUBLANG_THAI_THAILAND = 1
SUBLANG_TIBETAN_PRC = 1
SUBLANG_TIGRIGNA_ERITREA = 2
SUBLANG_TIGRINYA_ERITREA = 2
SUBLANG_TIGRINYA_ETHIOPIA = 1
SUBLANG_TSWANA_BOTSWANA = 2
SUBLANG_TSWANA_SOUTH_AFRICA = 1
SUBLANG_TURKISH_TURKEY = 1
SUBLANG_TURKMEN_TURKMENISTAN = 1
SUBLANG_UIGHUR_PRC = 1
SUBLANG_UKRAINIAN_UKRAINE = 1
SUBLANG_UPPER_SORBIAN_GERMANY = 1
SUBLANG_URDU_PAKISTAN = 1
SUBLANG_URDU_INDIA = 2
SUBLANG_UZBEK_LATIN = 1
SUBLANG_UZBEK_CYRILLIC = 2
SUBLANG_VALENCIAN_VALENCIA = 2
SUBLANG_VIETNAMESE_VIETNAM = 1
SUBLANG_WELSH_UNITED_KINGDOM = 1
SUBLANG_WOLOF_SENEGAL = 1
SUBLANG_XHOSA_SOUTH_AFRICA = 1
SUBLANG_YAKUT_RUSSIA = 1
SUBLANG_YI_PRC = 1
SUBLANG_YORUBA_NIGERIA = 1
SUBLANG_ZULU_SOUTH_AFRICA = 1
SORT_DEFAULT = 0
SORT_INVARIANT_MATH = 1
SORT_JAPANESE_XJIS = 0
SORT_JAPANESE_UNICODE = 1
SORT_JAPANESE_RADICALSTROKE = 4
SORT_CHINESE_BIG5 = 0
SORT_CHINESE_PRCP = 0
SORT_CHINESE_UNICODE = 1
SORT_CHINESE_PRC = 2
SORT_CHINESE_BOPOMOFO = 3
SORT_CHINESE_RADICALSTROKE = 4
SORT_KOREAN_KSC = 0
SORT_KOREAN_UNICODE = 1
SORT_GERMAN_PHONE_BOOK = 1
SORT_HUNGARIAN_DEFAULT = 0
SORT_HUNGARIAN_TECHNICAL = 1
SORT_GEORGIAN_TRADITIONAL = 0
SORT_GEORGIAN_MODERN = 1
NLS_VALID_LOCALE_MASK = 1048575
LOCALE_NAME_MAX_LENGTH = 85
LOCALE_TRANSIENT_KEYBOARD1 = 8192
LOCALE_TRANSIENT_KEYBOARD2 = 9216
LOCALE_TRANSIENT_KEYBOARD3 = 10240
LOCALE_TRANSIENT_KEYBOARD4 = 11264
MAXIMUM_WAIT_OBJECTS = 64
MAXIMUM_SUSPEND_COUNT = 127
PF_TEMPORAL_LEVEL_1 = 1
PF_TEMPORAL_LEVEL_2 = 2
PF_TEMPORAL_LEVEL_3 = 3
PF_NON_TEMPORAL_LEVEL_ALL = 0
EXCEPTION_READ_FAULT = 0
EXCEPTION_WRITE_FAULT = 1
EXCEPTION_EXECUTE_FAULT = 8
CONTEXT_AMD64 = 1048576
CONTEXT_KERNEL_DEBUGGER = 67108864
CONTEXT_EXCEPTION_ACTIVE = 134217728
CONTEXT_SERVICE_ACTIVE = 268435456
CONTEXT_EXCEPTION_REQUEST = 1073741824
CONTEXT_EXCEPTION_REPORTING = -2147483648
CONTEXT_UNWOUND_TO_CALL = 536870912
INITIAL_MXCSR = 8064
INITIAL_FPCSR = 639
RUNTIME_FUNCTION_INDIRECT = 1
UNW_FLAG_NO_EPILOGUE = 2147483648
UNWIND_CHAIN_LIMIT = 32
CONTEXT_ARM = 2097152
INITIAL_CPSR = 16
INITIAL_FPSCR = 0
ARM_MAX_BREAKPOINTS = 8
ARM_MAX_WATCHPOINTS = 1
ARM64_PREFETCH_PLD = 0
ARM64_PREFETCH_PLI = 8
ARM64_PREFETCH_PST = 16
ARM64_PREFETCH_L1 = 0
ARM64_PREFETCH_L2 = 2
ARM64_PREFETCH_L3 = 4
ARM64_PREFETCH_KEEP = 0
ARM64_PREFETCH_STRM = 1
ARM64_MULT_INTRINSICS_SUPPORTED = 1
CONTEXT_ARM64 = 4194304
CONTEXT_ARM64_UNWOUND_TO_CALL = 536870912
CONTEXT_ARM64_RET_TO_GUEST = 67108864
CONTEXT_RET_TO_GUEST = 67108864
ARM64_MAX_BREAKPOINTS = 8
ARM64_MAX_WATCHPOINTS = 2
NONVOL_INT_NUMREG_ARM64 = 11
NONVOL_FP_NUMREG_ARM64 = 8
BREAK_DEBUG_BASE = 524288
ASSERT_BREAKPOINT = 524291
SIZE_OF_80387_REGISTERS = 80
CONTEXT_i386 = 65536
CONTEXT_i486 = 65536
MAXIMUM_SUPPORTED_EXTENSION = 512
EXCEPTION_NONCONTINUABLE = 1
EXCEPTION_UNWINDING = 2
EXCEPTION_EXIT_UNWIND = 4
EXCEPTION_STACK_INVALID = 8
EXCEPTION_NESTED_CALL = 16
EXCEPTION_TARGET_UNWIND = 32
EXCEPTION_COLLIDED_UNWIND = 64
EXCEPTION_SOFTWARE_ORIGINATE = 128
EXCEPTION_MAXIMUM_PARAMETERS = 15
DELETE = 65536
WRITE_DAC = 262144
WRITE_OWNER = 524288
ACCESS_SYSTEM_SECURITY = 16777216
MAXIMUM_ALLOWED = 33554432
GENERIC_READ = 2147483648
GENERIC_WRITE = 1073741824
GENERIC_EXECUTE = 536870912
GENERIC_ALL = 268435456
SID_REVISION = 1
SID_MAX_SUB_AUTHORITIES = 15
SID_RECOMMENDED_SUB_AUTHORITIES = 1
SID_HASH_SIZE = 32
SECURITY_NULL_RID = 0
SECURITY_WORLD_RID = 0
SECURITY_LOCAL_RID = 0
SECURITY_LOCAL_LOGON_RID = 1
SECURITY_CREATOR_OWNER_RID = 0
SECURITY_CREATOR_GROUP_RID = 1
SECURITY_CREATOR_OWNER_SERVER_RID = 2
SECURITY_CREATOR_GROUP_SERVER_RID = 3
SECURITY_CREATOR_OWNER_RIGHTS_RID = 4
SECURITY_DIALUP_RID = 1
SECURITY_NETWORK_RID = 2
SECURITY_BATCH_RID = 3
SECURITY_INTERACTIVE_RID = 4
SECURITY_LOGON_IDS_RID = 5
SECURITY_LOGON_IDS_RID_COUNT = 3
SECURITY_SERVICE_RID = 6
SECURITY_ANONYMOUS_LOGON_RID = 7
SECURITY_PROXY_RID = 8
SECURITY_ENTERPRISE_CONTROLLERS_RID = 9
SECURITY_SERVER_LOGON_RID = 9
SECURITY_PRINCIPAL_SELF_RID = 10
SECURITY_AUTHENTICATED_USER_RID = 11
SECURITY_RESTRICTED_CODE_RID = 12
SECURITY_TERMINAL_SERVER_RID = 13
SECURITY_REMOTE_LOGON_RID = 14
SECURITY_THIS_ORGANIZATION_RID = 15
SECURITY_IUSER_RID = 17
SECURITY_LOCAL_SYSTEM_RID = 18
SECURITY_LOCAL_SERVICE_RID = 19
SECURITY_NETWORK_SERVICE_RID = 20
SECURITY_NT_NON_UNIQUE = 21
SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT = 3
SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID = 22
SECURITY_BUILTIN_DOMAIN_RID = 32
SECURITY_WRITE_RESTRICTED_CODE_RID = 33
SECURITY_PACKAGE_BASE_RID = 64
SECURITY_PACKAGE_RID_COUNT = 2
SECURITY_PACKAGE_NTLM_RID = 10
SECURITY_PACKAGE_SCHANNEL_RID = 14
SECURITY_PACKAGE_DIGEST_RID = 21
SECURITY_CRED_TYPE_BASE_RID = 65
SECURITY_CRED_TYPE_RID_COUNT = 2
SECURITY_CRED_TYPE_THIS_ORG_CERT_RID = 1
SECURITY_MIN_BASE_RID = 80
SECURITY_SERVICE_ID_BASE_RID = 80
SECURITY_SERVICE_ID_RID_COUNT = 6
SECURITY_RESERVED_ID_BASE_RID = 81
SECURITY_APPPOOL_ID_BASE_RID = 82
SECURITY_APPPOOL_ID_RID_COUNT = 6
SECURITY_VIRTUALSERVER_ID_BASE_RID = 83
SECURITY_VIRTUALSERVER_ID_RID_COUNT = 6
SECURITY_USERMODEDRIVERHOST_ID_BASE_RID = 84
SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT = 6
SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID = 85
SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT = 6
SECURITY_WMIHOST_ID_BASE_RID = 86
SECURITY_WMIHOST_ID_RID_COUNT = 6
SECURITY_TASK_ID_BASE_RID = 87
SECURITY_NFS_ID_BASE_RID = 88
SECURITY_COM_ID_BASE_RID = 89
SECURITY_WINDOW_MANAGER_BASE_RID = 90
SECURITY_RDV_GFX_BASE_RID = 91
SECURITY_DASHOST_ID_BASE_RID = 92
SECURITY_DASHOST_ID_RID_COUNT = 6
SECURITY_USERMANAGER_ID_BASE_RID = 93
SECURITY_USERMANAGER_ID_RID_COUNT = 6
SECURITY_WINRM_ID_BASE_RID = 94
SECURITY_WINRM_ID_RID_COUNT = 6
SECURITY_CCG_ID_BASE_RID = 95
SECURITY_UMFD_BASE_RID = 96
SECURITY_VIRTUALACCOUNT_ID_RID_COUNT = 6
SECURITY_MAX_BASE_RID = 111
SECURITY_MAX_ALWAYS_FILTERED = 999
SECURITY_MIN_NEVER_FILTERED = 1000
SECURITY_OTHER_ORGANIZATION_RID = 1000
SECURITY_WINDOWSMOBILE_ID_BASE_RID = 112
SECURITY_INSTALLER_GROUP_CAPABILITY_BASE = 32
SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT = 9
SECURITY_INSTALLER_CAPABILITY_RID_COUNT = 10
SECURITY_LOCAL_ACCOUNT_RID = 113
SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID = 114
DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED = 496
DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS = 497
DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS = 498
FOREST_USER_RID_MAX = 499
DOMAIN_USER_RID_ADMIN = 500
DOMAIN_USER_RID_GUEST = 501
DOMAIN_USER_RID_KRBTGT = 502
DOMAIN_USER_RID_DEFAULT_ACCOUNT = 503
DOMAIN_USER_RID_WDAG_ACCOUNT = 504
DOMAIN_USER_RID_MAX = 999
DOMAIN_GROUP_RID_ADMINS = 512
DOMAIN_GROUP_RID_USERS = 513
DOMAIN_GROUP_RID_GUESTS = 514
DOMAIN_GROUP_RID_COMPUTERS = 515
DOMAIN_GROUP_RID_CONTROLLERS = 516
DOMAIN_GROUP_RID_CERT_ADMINS = 517
DOMAIN_GROUP_RID_SCHEMA_ADMINS = 518
DOMAIN_GROUP_RID_ENTERPRISE_ADMINS = 519
DOMAIN_GROUP_RID_POLICY_ADMINS = 520
DOMAIN_GROUP_RID_READONLY_CONTROLLERS = 521
DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS = 522
DOMAIN_GROUP_RID_CDC_RESERVED = 524
DOMAIN_GROUP_RID_PROTECTED_USERS = 525
DOMAIN_GROUP_RID_KEY_ADMINS = 526
DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS = 527
DOMAIN_ALIAS_RID_ADMINS = 544
DOMAIN_ALIAS_RID_USERS = 545
DOMAIN_ALIAS_RID_GUESTS = 546
DOMAIN_ALIAS_RID_POWER_USERS = 547
DOMAIN_ALIAS_RID_ACCOUNT_OPS = 548
DOMAIN_ALIAS_RID_SYSTEM_OPS = 549
DOMAIN_ALIAS_RID_PRINT_OPS = 550
DOMAIN_ALIAS_RID_BACKUP_OPS = 551
DOMAIN_ALIAS_RID_REPLICATOR = 552
DOMAIN_ALIAS_RID_RAS_SERVERS = 553
DOMAIN_ALIAS_RID_PREW2KCOMPACCESS = 554
DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS = 555
DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS = 556
DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS = 557
DOMAIN_ALIAS_RID_MONITORING_USERS = 558
DOMAIN_ALIAS_RID_LOGGING_USERS = 559
DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS = 560
DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS = 561
DOMAIN_ALIAS_RID_DCOM_USERS = 562
DOMAIN_ALIAS_RID_IUSERS = 568
DOMAIN_ALIAS_RID_CRYPTO_OPERATORS = 569
DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP = 571
DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP = 572
DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP = 573
DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP = 574
DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS = 575
DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS = 576
DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS = 577
DOMAIN_ALIAS_RID_HYPER_V_ADMINS = 578
DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS = 579
DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS = 580
DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT = 581
DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS = 582
DOMAIN_ALIAS_RID_DEVICE_OWNERS = 583
SECURITY_APP_PACKAGE_BASE_RID = 2
SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT = 2
SECURITY_APP_PACKAGE_RID_COUNT = 8
SECURITY_CAPABILITY_BASE_RID = 3
SECURITY_CAPABILITY_APP_RID = 1024
SECURITY_BUILTIN_CAPABILITY_RID_COUNT = 2
SECURITY_CAPABILITY_RID_COUNT = 5
SECURITY_PARENT_PACKAGE_RID_COUNT = 8
SECURITY_CHILD_PACKAGE_RID_COUNT = 12
SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE = 1
SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE = 2
SECURITY_CAPABILITY_INTERNET_CLIENT = 1
SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER = 2
SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = 3
SECURITY_CAPABILITY_PICTURES_LIBRARY = 4
SECURITY_CAPABILITY_VIDEOS_LIBRARY = 5
SECURITY_CAPABILITY_MUSIC_LIBRARY = 6
SECURITY_CAPABILITY_DOCUMENTS_LIBRARY = 7
SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION = 8
SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES = 9
SECURITY_CAPABILITY_REMOVABLE_STORAGE = 10
SECURITY_CAPABILITY_APPOINTMENTS = 11
SECURITY_CAPABILITY_CONTACTS = 12
SECURITY_CAPABILITY_INTERNET_EXPLORER = 4096
SECURITY_MANDATORY_UNTRUSTED_RID = 0
SECURITY_MANDATORY_LOW_RID = 4096
SECURITY_MANDATORY_MEDIUM_RID = 8192
SECURITY_MANDATORY_MEDIUM_PLUS_RID = 8448
SECURITY_MANDATORY_HIGH_RID = 12288
SECURITY_MANDATORY_SYSTEM_RID = 16384
SECURITY_MANDATORY_PROTECTED_PROCESS_RID = 20480
SECURITY_MANDATORY_MAXIMUM_USER_RID = 16384
SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT = 1
SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID = 1
SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID = 2
SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID = 3
SECURITY_AUTHENTICATION_KEY_TRUST_RID = 4
SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID = 5
SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID = 6
SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT = 2
SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID = 1024
SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID = 512
SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID = 0
SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID = 8192
SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID = 4096
SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID = 2048
SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID = 1536
SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID = 1024
SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID = 0
SECURITY_TRUSTED_INSTALLER_RID1 = 956008885
SECURITY_TRUSTED_INSTALLER_RID2 = 3418522649
SECURITY_TRUSTED_INSTALLER_RID3 = 1831038044
SECURITY_TRUSTED_INSTALLER_RID4 = 1853292631
SECURITY_TRUSTED_INSTALLER_RID5 = 2271478464
SE_GROUP_MANDATORY = 1
SE_GROUP_ENABLED_BY_DEFAULT = 2
SE_GROUP_ENABLED = 4
SE_GROUP_OWNER = 8
SE_GROUP_USE_FOR_DENY_ONLY = 16
SE_GROUP_INTEGRITY = 32
SE_GROUP_INTEGRITY_ENABLED = 64
SE_GROUP_LOGON_ID = -1073741824
SE_GROUP_RESOURCE = 536870912
ACL_REVISION1 = 1
ACL_REVISION2 = 2
ACL_REVISION3 = 3
ACL_REVISION4 = 4
MAX_ACL_REVISION = 4
ACCESS_MIN_MS_ACE_TYPE = 0
ACCESS_ALLOWED_ACE_TYPE = 0
ACCESS_DENIED_ACE_TYPE = 1
SYSTEM_AUDIT_ACE_TYPE = 2
SYSTEM_ALARM_ACE_TYPE = 3
ACCESS_MAX_MS_V2_ACE_TYPE = 3
ACCESS_ALLOWED_COMPOUND_ACE_TYPE = 4
ACCESS_MAX_MS_V3_ACE_TYPE = 4
ACCESS_MIN_MS_OBJECT_ACE_TYPE = 5
ACCESS_ALLOWED_OBJECT_ACE_TYPE = 5
ACCESS_DENIED_OBJECT_ACE_TYPE = 6
SYSTEM_AUDIT_OBJECT_ACE_TYPE = 7
SYSTEM_ALARM_OBJECT_ACE_TYPE = 8
ACCESS_MAX_MS_OBJECT_ACE_TYPE = 8
ACCESS_MAX_MS_V4_ACE_TYPE = 8
ACCESS_MAX_MS_ACE_TYPE = 8
ACCESS_ALLOWED_CALLBACK_ACE_TYPE = 9
ACCESS_DENIED_CALLBACK_ACE_TYPE = 10
ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE = 11
ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE = 12
SYSTEM_AUDIT_CALLBACK_ACE_TYPE = 13
SYSTEM_ALARM_CALLBACK_ACE_TYPE = 14
SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE = 15
SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE = 16
SYSTEM_MANDATORY_LABEL_ACE_TYPE = 17
SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE = 18
SYSTEM_SCOPED_POLICY_ID_ACE_TYPE = 19
SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE = 20
SYSTEM_ACCESS_FILTER_ACE_TYPE = 21
ACCESS_MAX_MS_V5_ACE_TYPE = 21
VALID_INHERIT_FLAGS = 31
CRITICAL_ACE_FLAG = 32
TRUST_PROTECTED_FILTER_ACE_FLAG = 64
SYSTEM_MANDATORY_LABEL_NO_WRITE_UP = 1
SYSTEM_MANDATORY_LABEL_NO_READ_UP = 2
SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP = 4
SYSTEM_PROCESS_TRUST_LABEL_VALID_MASK = 16777215
SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK = 4294967295
SYSTEM_ACCESS_FILTER_VALID_MASK = 16777215
SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK = 4294967295
SECURITY_DESCRIPTOR_REVISION = 1
SECURITY_DESCRIPTOR_REVISION1 = 1
SE_OWNER_DEFAULTED = 1
SE_GROUP_DEFAULTED = 2
SE_DACL_PRESENT = 4
SE_DACL_DEFAULTED = 8
SE_SACL_PRESENT = 16
SE_SACL_DEFAULTED = 32
SE_DACL_AUTO_INHERIT_REQ = 256
SE_SACL_AUTO_INHERIT_REQ = 512
SE_DACL_AUTO_INHERITED = 1024
SE_SACL_AUTO_INHERITED = 2048
SE_DACL_PROTECTED = 4096
SE_SACL_PROTECTED = 8192
SE_RM_CONTROL_VALID = 16384
SE_SELF_RELATIVE = 32768
ACCESS_OBJECT_GUID = 0
ACCESS_PROPERTY_SET_GUID = 1
ACCESS_PROPERTY_GUID = 2
ACCESS_MAX_LEVEL = 4
AUDIT_ALLOW_NO_PRIVILEGE = 1
PRIVILEGE_SET_ALL_NECESSARY = 1
ACCESS_REASON_TYPE_MASK = 16711680
ACCESS_REASON_DATA_MASK = 65535
ACCESS_REASON_STAGING_MASK = 2147483648
ACCESS_REASON_EXDATA_MASK = 2130706432
SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE = 1
SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE = 2
SE_SECURITY_DESCRIPTOR_FLAG_NO_ACCESS_FILTER_ACE = 4
SE_SECURITY_DESCRIPTOR_VALID_FLAGS = 7
SE_ACCESS_CHECK_FLAG_NO_LEARNING_MODE_LOGGING = 8
SE_ACCESS_CHECK_VALID_FLAGS = 8
POLICY_AUDIT_SUBCATEGORY_COUNT = 59
TOKEN_SOURCE_LENGTH = 8
CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID = 0
CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS = 4294901760
CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 = 1
CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION = 1
PROCESS_TRUST_LABEL_SECURITY_INFORMATION = 128
ACCESS_FILTER_SECURITY_INFORMATION = 256
SE_SIGNING_LEVEL_UNCHECKED = 0
SE_SIGNING_LEVEL_UNSIGNED = 1
SE_SIGNING_LEVEL_ENTERPRISE = 2
SE_SIGNING_LEVEL_CUSTOM_1 = 3
SE_SIGNING_LEVEL_DEVELOPER = 3
SE_SIGNING_LEVEL_AUTHENTICODE = 4
SE_SIGNING_LEVEL_CUSTOM_2 = 5
SE_SIGNING_LEVEL_STORE = 6
SE_SIGNING_LEVEL_CUSTOM_3 = 7
SE_SIGNING_LEVEL_ANTIMALWARE = 7
SE_SIGNING_LEVEL_MICROSOFT = 8
SE_SIGNING_LEVEL_CUSTOM_4 = 9
SE_SIGNING_LEVEL_CUSTOM_5 = 10
SE_SIGNING_LEVEL_DYNAMIC_CODEGEN = 11
SE_SIGNING_LEVEL_WINDOWS = 12
SE_SIGNING_LEVEL_CUSTOM_7 = 13
SE_SIGNING_LEVEL_WINDOWS_TCB = 14
SE_SIGNING_LEVEL_CUSTOM_6 = 15
SE_LEARNING_MODE_FLAG_PERMISSIVE = 1
JOB_OBJECT_ASSIGN_PROCESS = 1
JOB_OBJECT_SET_ATTRIBUTES = 2
JOB_OBJECT_QUERY = 4
JOB_OBJECT_TERMINATE = 8
JOB_OBJECT_SET_SECURITY_ATTRIBUTES = 16
JOB_OBJECT_IMPERSONATE = 32
FLS_MAXIMUM_AVAILABLE = 4080
TLS_MINIMUM_AVAILABLE = 64
THREAD_DYNAMIC_CODE_ALLOW = 1
THREAD_BASE_PRIORITY_LOWRT = 15
THREAD_BASE_PRIORITY_MAX = 2
THREAD_BASE_PRIORITY_MIN = -2
THREAD_BASE_PRIORITY_IDLE = -15
COMPONENT_KTM = 1
COMPONENT_VALID_FLAGS = 1
MEMORY_PRIORITY_LOWEST = 0
DYNAMIC_EH_CONTINUATION_TARGET_ADD = 1
DYNAMIC_EH_CONTINUATION_TARGET_PROCESSED = 2
DYNAMIC_ENFORCED_ADDRESS_RANGE_ADD = 1
DYNAMIC_ENFORCED_ADDRESS_RANGE_PROCESSED = 2
QUOTA_LIMITS_HARDWS_MIN_ENABLE = 1
QUOTA_LIMITS_HARDWS_MIN_DISABLE = 2
QUOTA_LIMITS_HARDWS_MAX_ENABLE = 4
QUOTA_LIMITS_HARDWS_MAX_DISABLE = 8
QUOTA_LIMITS_USE_DEFAULT_LIMITS = 16
MAX_HW_COUNTERS = 16
THREAD_PROFILING_FLAG_DISPATCH = 1
JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG = 64
JOB_OBJECT_MSG_END_OF_JOB_TIME = 1
JOB_OBJECT_MSG_END_OF_PROCESS_TIME = 2
JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT = 3
JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO = 4
JOB_OBJECT_MSG_NEW_PROCESS = 6
JOB_OBJECT_MSG_EXIT_PROCESS = 7
JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS = 8
JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT = 9
JOB_OBJECT_MSG_JOB_MEMORY_LIMIT = 10
JOB_OBJECT_MSG_NOTIFICATION_LIMIT = 11
JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT = 12
JOB_OBJECT_MSG_SILO_TERMINATED = 13
JOB_OBJECT_MSG_MINIMUM = 1
JOB_OBJECT_MSG_MAXIMUM = 13
JOB_OBJECT_UILIMIT_ALL = 255
JOB_OBJECT_UI_VALID_FLAGS = 255
JOB_OBJECT_CPU_RATE_CONTROL_MIN_MAX_RATE = 16
JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS = 31
MEMORY_PARTITION_QUERY_ACCESS = 1
MEMORY_PARTITION_MODIFY_ACCESS = 2
EVENT_MODIFY_STATE = 2
MUTANT_QUERY_STATE = 1
SEMAPHORE_MODIFY_STATE = 2
TIMER_QUERY_STATE = 1
TIMER_MODIFY_STATE = 2
TIME_ZONE_ID_UNKNOWN = 0
TIME_ZONE_ID_STANDARD = 1
TIME_ZONE_ID_DAYLIGHT = 2
LTP_PC_SMT = 1
CACHE_FULLY_ASSOCIATIVE = 255
PROCESSOR_INTEL_386 = 386
PROCESSOR_INTEL_486 = 486
PROCESSOR_INTEL_PENTIUM = 586
PROCESSOR_INTEL_IA64 = 2200
PROCESSOR_AMD_X8664 = 8664
PROCESSOR_MIPS_R4000 = 4000
PROCESSOR_ALPHA_21064 = 21064
PROCESSOR_PPC_601 = 601
PROCESSOR_PPC_603 = 603
PROCESSOR_PPC_604 = 604
PROCESSOR_PPC_620 = 620
PROCESSOR_HITACHI_SH3 = 10003
PROCESSOR_HITACHI_SH3E = 10004
PROCESSOR_HITACHI_SH4 = 10005
PROCESSOR_MOTOROLA_821 = 821
PROCESSOR_SHx_SH3 = 103
PROCESSOR_SHx_SH4 = 104
PROCESSOR_STRONGARM = 2577
PROCESSOR_ARM720 = 1824
PROCESSOR_ARM820 = 2080
PROCESSOR_ARM920 = 2336
PROCESSOR_ARM_7TDMI = 70001
PROCESSOR_OPTIL = 18767
PROCESSOR_ARCHITECTURE_MIPS = 1
PROCESSOR_ARCHITECTURE_ALPHA = 2
PROCESSOR_ARCHITECTURE_PPC = 3
PROCESSOR_ARCHITECTURE_SHX = 4
PROCESSOR_ARCHITECTURE_ALPHA64 = 7
PROCESSOR_ARCHITECTURE_MSIL = 8
PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 = 10
PROCESSOR_ARCHITECTURE_NEUTRAL = 11
PROCESSOR_ARCHITECTURE_ARM64 = 12
PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = 13
PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 = 14
PF_PPC_MOVEMEM_64BIT_OK = 4
PF_ALPHA_BYTE_INSTRUCTIONS = 5
PF_SSE_DAZ_MODE_AVAILABLE = 11
PF_ARM_NEON_INSTRUCTIONS_AVAILABLE = 19
PF_RDRAND_INSTRUCTION_AVAILABLE = 28
PF_RDTSCP_INSTRUCTION_AVAILABLE = 32
PF_RDPID_INSTRUCTION_AVAILABLE = 33
PF_MONITORX_INSTRUCTION_AVAILABLE = 35
PF_SSSE3_INSTRUCTIONS_AVAILABLE = 36
PF_SSE4_1_INSTRUCTIONS_AVAILABLE = 37
PF_SSE4_2_INSTRUCTIONS_AVAILABLE = 38
PF_AVX_INSTRUCTIONS_AVAILABLE = 39
PF_AVX2_INSTRUCTIONS_AVAILABLE = 40
PF_AVX512F_INSTRUCTIONS_AVAILABLE = 41
PF_ERMS_AVAILABLE = 42
PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE = 43
PF_ARM_V83_JSCVT_INSTRUCTIONS_AVAILABLE = 44
XSTATE_LEGACY_FLOATING_POINT = 0
XSTATE_LEGACY_SSE = 1
XSTATE_GSSE = 2
XSTATE_AVX = 2
XSTATE_MPX_BNDREGS = 3
XSTATE_MPX_BNDCSR = 4
XSTATE_AVX512_KMASK = 5
XSTATE_AVX512_ZMM_H = 6
XSTATE_AVX512_ZMM = 7
XSTATE_IPT = 8
XSTATE_PASID = 10
XSTATE_CET_U = 11
XSTATE_CET_S = 12
XSTATE_AMX_TILE_CONFIG = 17
XSTATE_AMX_TILE_DATA = 18
XSTATE_LWP = 62
MAXIMUM_XSTATE_FEATURES = 64
XSTATE_COMPACTION_ENABLE = 63
XSTATE_ALIGN_BIT = 1
XSTATE_XFD_BIT = 2
XSTATE_CONTROLFLAG_XSAVEOPT_MASK = 1
XSTATE_CONTROLFLAG_XSAVEC_MASK = 2
XSTATE_CONTROLFLAG_XFD_MASK = 4
CFG_CALL_TARGET_VALID = 1
CFG_CALL_TARGET_PROCESSED = 2
CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID = 4
CFG_CALL_TARGET_VALID_XFG = 8
CFG_CALL_TARGET_CONVERT_XFG_TO_CFG = 16
SESSION_QUERY_ACCESS = 1
SESSION_MODIFY_ACCESS = 2
MEM_TOP_DOWN = 1048576
MEM_WRITE_WATCH = 2097152
MEM_PHYSICAL = 4194304
MEM_ROTATE = 8388608
MEM_DIFFERENT_IMAGE_BASE_OK = 8388608
MEM_4MB_PAGES = 2147483648
MEM_COALESCE_PLACEHOLDERS = 1
MEM_EXTENDED_PARAMETER_GRAPHICS = 1
MEM_EXTENDED_PARAMETER_NONPAGED = 2
MEM_EXTENDED_PARAMETER_ZERO_PAGES_OPTIONAL = 4
MEM_EXTENDED_PARAMETER_NONPAGED_LARGE = 8
MEM_EXTENDED_PARAMETER_NONPAGED_HUGE = 16
MEM_EXTENDED_PARAMETER_SOFT_FAULT_PAGES = 32
MEM_EXTENDED_PARAMETER_EC_CODE = 64
MEM_EXTENDED_PARAMETER_TYPE_BITS = 8
SEC_HUGE_PAGES = 131072
WRITE_WATCH_FLAG_RESET = 1
ENCLAVE_TYPE_SGX = 1
ENCLAVE_TYPE_SGX2 = 2
ENCLAVE_TYPE_VBS = 16
ENCLAVE_VBS_FLAG_DEBUG = 1
ENCLAVE_TYPE_VBS_BASIC = 17
VBS_BASIC_PAGE_MEASURED_DATA = 1
VBS_BASIC_PAGE_UNMEASURED_DATA = 2
VBS_BASIC_PAGE_ZERO_FILL = 3
VBS_BASIC_PAGE_THREAD_DESCRIPTOR = 4
VBS_BASIC_PAGE_SYSTEM_CALL = 5
DEDICATED_MEMORY_CACHE_ELIGIBLE = 1
TREE_CONNECT_ATTRIBUTE_PRIVACY = 16384
TREE_CONNECT_ATTRIBUTE_INTEGRITY = 32768
TREE_CONNECT_ATTRIBUTE_GLOBAL = 4
TREE_CONNECT_ATTRIBUTE_PINNED = 2
FILE_ATTRIBUTE_STRICTLY_SEQUENTIAL = 536870912
MAILSLOT_NO_MESSAGE = 4294967295
MAILSLOT_WAIT_FOREVER = 4294967295
FILE_CASE_SENSITIVE_SEARCH = 1
FILE_CASE_PRESERVED_NAMES = 2
FILE_UNICODE_ON_DISK = 4
FILE_PERSISTENT_ACLS = 8
FILE_FILE_COMPRESSION = 16
FILE_VOLUME_QUOTAS = 32
FILE_SUPPORTS_SPARSE_FILES = 64
FILE_SUPPORTS_REPARSE_POINTS = 128
FILE_SUPPORTS_REMOTE_STORAGE = 256
FILE_RETURNS_CLEANUP_RESULT_INFO = 512
FILE_SUPPORTS_POSIX_UNLINK_RENAME = 1024
FILE_SUPPORTS_BYPASS_IO = 2048
FILE_VOLUME_IS_COMPRESSED = 32768
FILE_SUPPORTS_OBJECT_IDS = 65536
FILE_SUPPORTS_ENCRYPTION = 131072
FILE_NAMED_STREAMS = 262144
FILE_READ_ONLY_VOLUME = 524288
FILE_SEQUENTIAL_WRITE_ONCE = 1048576
FILE_SUPPORTS_TRANSACTIONS = 2097152
FILE_SUPPORTS_HARD_LINKS = 4194304
FILE_SUPPORTS_EXTENDED_ATTRIBUTES = 8388608
FILE_SUPPORTS_OPEN_BY_FILE_ID = 16777216
FILE_SUPPORTS_USN_JOURNAL = 33554432
FILE_SUPPORTS_INTEGRITY_STREAMS = 67108864
FILE_SUPPORTS_BLOCK_REFCOUNTING = 134217728
FILE_SUPPORTS_SPARSE_VDL = 268435456
FILE_DAX_VOLUME = 536870912
FILE_SUPPORTS_GHOSTING = 1073741824
FILE_CS_FLAG_CASE_SENSITIVE_DIR = 1
FLUSH_FLAGS_FILE_DATA_ONLY = 1
FLUSH_FLAGS_NO_SYNC = 2
FLUSH_FLAGS_FILE_DATA_SYNC_ONLY = 4
IO_REPARSE_TAG_RESERVED_ZERO = 0
IO_REPARSE_TAG_RESERVED_ONE = 1
IO_REPARSE_TAG_RESERVED_TWO = 2
IO_REPARSE_TAG_RESERVED_RANGE = 2
IO_REPARSE_TAG_MOUNT_POINT = -1610612733
IO_REPARSE_TAG_HSM = -1073741820
IO_REPARSE_TAG_HSM2 = -2147483642
IO_REPARSE_TAG_SIS = -2147483641
IO_REPARSE_TAG_WIM = -2147483640
IO_REPARSE_TAG_CSV = -2147483639
IO_REPARSE_TAG_DFS = -2147483638
IO_REPARSE_TAG_SYMLINK = -1610612724
IO_REPARSE_TAG_DFSR = -2147483630
IO_REPARSE_TAG_DEDUP = -2147483629
IO_REPARSE_TAG_NFS = -2147483628
IO_REPARSE_TAG_FILE_PLACEHOLDER = -2147483627
IO_REPARSE_TAG_WOF = -2147483625
IO_REPARSE_TAG_WCI = -2147483624
IO_REPARSE_TAG_WCI_1 = -1879044072
IO_REPARSE_TAG_GLOBAL_REPARSE = -1610612711
IO_REPARSE_TAG_CLOUD = -1879048166
IO_REPARSE_TAG_CLOUD_1 = -1879044070
IO_REPARSE_TAG_CLOUD_2 = -1879039974
IO_REPARSE_TAG_CLOUD_3 = -1879035878
IO_REPARSE_TAG_CLOUD_4 = -1879031782
IO_REPARSE_TAG_CLOUD_5 = -1879027686
IO_REPARSE_TAG_CLOUD_6 = -1879023590
IO_REPARSE_TAG_CLOUD_7 = -1879019494
IO_REPARSE_TAG_CLOUD_8 = -1879015398
IO_REPARSE_TAG_CLOUD_9 = -1879011302
IO_REPARSE_TAG_CLOUD_A = -1879007206
IO_REPARSE_TAG_CLOUD_B = -1879003110
IO_REPARSE_TAG_CLOUD_C = -1878999014
IO_REPARSE_TAG_CLOUD_D = -1878994918
IO_REPARSE_TAG_CLOUD_E = -1878990822
IO_REPARSE_TAG_CLOUD_F = -1878986726
IO_REPARSE_TAG_CLOUD_MASK = 61440
IO_REPARSE_TAG_APPEXECLINK = -2147483621
IO_REPARSE_TAG_PROJFS = -1879048164
IO_REPARSE_TAG_STORAGE_SYNC = -2147483618
IO_REPARSE_TAG_WCI_TOMBSTONE = -1610612705
IO_REPARSE_TAG_UNHANDLED = -2147483616
IO_REPARSE_TAG_ONEDRIVE = -2147483615
IO_REPARSE_TAG_PROJFS_TOMBSTONE = -1610612702
IO_REPARSE_TAG_AF_UNIX = -2147483613
IO_REPARSE_TAG_WCI_LINK = -1610612697
IO_REPARSE_TAG_WCI_LINK_1 = -1610608601
IO_REPARSE_TAG_DATALESS_CIM = -1610612696
SCRUB_DATA_INPUT_FLAG_RESUME = 1
SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC = 2
SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA = 4
SCRUB_DATA_INPUT_FLAG_IGNORE_REDUNDANCY = 8
SCRUB_DATA_INPUT_FLAG_SKIP_DATA = 16
SCRUB_DATA_INPUT_FLAG_SCRUB_BY_OBJECT_ID = 32
SCRUB_DATA_INPUT_FLAG_OPLOCK_NOT_ACQUIRED = 64
SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE = 1
SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE = 65536
SCRUB_DATA_OUTPUT_FLAG_PARITY_EXTENT_DATA_RETURNED = 131072
SCRUB_DATA_OUTPUT_FLAG_RESUME_CONTEXT_LENGTH_SPECIFIED = 262144
SHUFFLE_FILE_FLAG_SKIP_INITIALIZING_NEW_CLUSTERS = 1
IO_COMPLETION_MODIFY_STATE = 2
NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR = 1
GUID_MAX_POWER_SAVINGS = 'a1841308-3541-4fab-bc81-f71556f20b4a'
GUID_MIN_POWER_SAVINGS = '8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c'
GUID_TYPICAL_POWER_SAVINGS = '381b4222-f694-41f0-9685-ff5bb260df2e'
NO_SUBGROUP_GUID = 'fea3413e-7e05-4911-9a71-700331f1c294'
ALL_POWERSCHEMES_GUID = '68a1e95e-13ea-41e1-8011-0c496ca490b0'
GUID_POWERSCHEME_PERSONALITY = '245d8541-3943-4422-b025-13a784f679b7'
GUID_ACTIVE_POWERSCHEME = '31f9f286-5084-42fe-b720-2b0264993763'
GUID_IDLE_RESILIENCY_SUBGROUP = '2e601130-5351-4d9d-8e04-252966bad054'
GUID_IDLE_RESILIENCY_PERIOD = 'c42b79aa-aa3a-484b-a98f-2cf32aa90a28'
GUID_DEEP_SLEEP_ENABLED = 'd502f7ee-1dc7-4efd-a55d-f04b6f5c0545'
GUID_DEEP_SLEEP_PLATFORM_STATE = 'd23f2fb8-9536-4038-9c94-1ce02e5c2152'
GUID_DISK_COALESCING_POWERDOWN_TIMEOUT = 'c36f0eb4-2988-4a70-8eee-0884fc2c2433'
GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT = '3166bc41-7e98-4e03-b34e-ec0f5f2b218e'
GUID_VIDEO_SUBGROUP = '7516b95f-f776-4464-8c53-06167f40cc99'
GUID_VIDEO_POWERDOWN_TIMEOUT = '3c0bc021-c8a8-4e07-a973-6b14cbcb2b7e'
GUID_VIDEO_ANNOYANCE_TIMEOUT = '82dbcf2d-cd67-40c5-bfdc-9f1a5ccd4663'
GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE = 'eed904df-b142-4183-b10b-5a1197a37864'
GUID_VIDEO_DIM_TIMEOUT = '17aaa29b-8b43-4b94-aafe-35f64daaf1ee'
GUID_VIDEO_ADAPTIVE_POWERDOWN = '90959d22-d6a1-49b9-af93-bce885ad335b'
GUID_MONITOR_POWER_ON = '02731015-4510-4526-99e6-e5a17ebd1aea'
GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS = 'aded5e82-b909-4619-9949-f5d71dac0bcb'
GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS = 'f1fbfde2-a960-4165-9f88-50667911ce96'
GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS = '8ffee2c6-2d01-46be-adb9-398addc5b4ff'
GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS = 'fbd9aa66-9553-4097-ba44-ed6e9d65eab8'
GUID_CONSOLE_DISPLAY_STATE = '6fe69556-704a-47a0-8f24-c28d936fda47'
GUID_ALLOW_DISPLAY_REQUIRED = 'a9ceb8da-cd46-44fb-a98b-02af69de4623'
GUID_VIDEO_CONSOLE_LOCK_TIMEOUT = '8ec4b3a5-6868-48c2-be75-4f3044be88a7'
GUID_ADVANCED_COLOR_QUALITY_BIAS = '684c3e69-a4f7-4014-8754-d45179a56167'
GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP = '8619b916-e004-4dd8-9b66-dae86f806698'
GUID_NON_ADAPTIVE_INPUT_TIMEOUT = '5adbbfbc-074e-4da1-ba38-db8b36b2c8f3'
GUID_ADAPTIVE_INPUT_CONTROLLER_STATE = '0e98fae9-f45a-4de1-a757-6031f197f6ea'
GUID_DISK_SUBGROUP = '0012ee47-9041-4b5d-9b77-535fba8b1442'
GUID_DISK_MAX_POWER = '51dea550-bb38-4bc4-991b-eacf37be5ec8'
GUID_DISK_POWERDOWN_TIMEOUT = '6738e2c4-e8a5-4a42-b16a-e040e769756e'
GUID_DISK_IDLE_TIMEOUT = '58e39ba8-b8e6-4ef6-90d0-89ae32b258d6'
GUID_DISK_BURST_IGNORE_THRESHOLD = '80e3c60e-bb94-4ad8-bbe0-0d3195efc663'
GUID_DISK_ADAPTIVE_POWERDOWN = '396a32e1-499a-40b2-9124-a96afe707667'
GUID_DISK_NVME_NOPPME = 'fc7372b6-ab2d-43ee-8797-15e9841f2cca'
GUID_SLEEP_SUBGROUP = '238c9fa8-0aad-41ed-83f4-97be242c8f20'
GUID_SLEEP_IDLE_THRESHOLD = '81cd32e0-7833-44f3-8737-7081f38d1f70'
GUID_STANDBY_TIMEOUT = '29f6c1db-86da-48c5-9fdb-f2b67b1f44da'
GUID_UNATTEND_SLEEP_TIMEOUT = '7bc4a2f9-d8fc-4469-b07b-33eb785aaca0'
GUID_HIBERNATE_TIMEOUT = '9d7815a6-7ee4-497e-8888-515a05f02364'
GUID_HIBERNATE_FASTS4_POLICY = '94ac6d29-73ce-41a6-809f-6363ba21b47e'
GUID_CRITICAL_POWER_TRANSITION = 'b7a27025-e569-46c2-a504-2b96cad225a1'
GUID_SYSTEM_AWAYMODE = '98a7f580-01f7-48aa-9c0f-44352c29e5c0'
GUID_ALLOW_AWAYMODE = '25dfa149-5dd1-4736-b5ab-e8a37b5b8187'
GUID_USER_PRESENCE_PREDICTION = '82011705-fb95-4d46-8d35-4042b1d20def'
GUID_STANDBY_BUDGET_GRACE_PERIOD = '60c07fe1-0556-45cf-9903-d56e32210242'
GUID_STANDBY_BUDGET_PERCENT = '9fe527be-1b70-48da-930d-7bcf17b44990'
GUID_STANDBY_RESERVE_GRACE_PERIOD = 'c763ee92-71e8-4127-84eb-f6ed043a3e3d'
GUID_STANDBY_RESERVE_TIME = '468fe7e5-1158-46ec-88bc-5b96c9e44fd0'
GUID_STANDBY_RESET_PERCENT = '49cb11a5-56e2-4afb-9d38-3df47872e21b'
GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT = '0a7d6ab6-ac83-4ad1-8282-eca5b58308f3'
GUID_ALLOW_STANDBY_STATES = 'abfc2519-3608-4c2a-94ea-171b0ed546ab'
GUID_ALLOW_RTC_WAKE = 'bd3b718a-0680-4d9d-8ab2-e1d2b4ac806d'
GUID_LEGACY_RTC_MITIGATION = '1a34bdc3-7e6b-442e-a9d0-64b6ef378e84'
GUID_ALLOW_SYSTEM_REQUIRED = 'a4b195f5-8225-47d8-8012-9d41369786e2'
GUID_POWER_SAVING_STATUS = 'e00958c0-c213-4ace-ac77-fecced2eeea5'
GUID_ENERGY_SAVER_SUBGROUP = 'de830923-a562-41af-a086-e3a2c6bad2da'
GUID_ENERGY_SAVER_BATTERY_THRESHOLD = 'e69653ca-cf7f-4f05-aa73-cb833fa90ad4'
GUID_ENERGY_SAVER_BRIGHTNESS = '13d09884-f74e-474a-a852-b6bde8ad03a8'
GUID_ENERGY_SAVER_POLICY = '5c5bb349-ad29-4ee2-9d0b-2b25270f7a81'
GUID_SYSTEM_BUTTON_SUBGROUP = '4f971e89-eebd-4455-a8de-9e59040e7347'
POWERBUTTON_ACTION_INDEX_NOTHING = 0
POWERBUTTON_ACTION_INDEX_SLEEP = 1
POWERBUTTON_ACTION_INDEX_HIBERNATE = 2
POWERBUTTON_ACTION_INDEX_SHUTDOWN = 3
POWERBUTTON_ACTION_INDEX_TURN_OFF_THE_DISPLAY = 4
POWERBUTTON_ACTION_VALUE_NOTHING = 0
POWERBUTTON_ACTION_VALUE_SLEEP = 2
POWERBUTTON_ACTION_VALUE_HIBERNATE = 3
POWERBUTTON_ACTION_VALUE_SHUTDOWN = 6
POWERBUTTON_ACTION_VALUE_TURN_OFF_THE_DISPLAY = 8
GUID_POWERBUTTON_ACTION = '7648efa3-dd9c-4e3e-b566-50f929386280'
GUID_SLEEPBUTTON_ACTION = '96996bc0-ad50-47ec-923b-6f41874dd9eb'
GUID_USERINTERFACEBUTTON_ACTION = 'a7066653-8d6c-40a8-910e-a1f54b84c7e5'
GUID_LIDCLOSE_ACTION = '5ca83367-6e45-459f-a27b-476b1d01c936'
GUID_LIDOPEN_POWERSTATE = '99ff10e7-23b1-4c07-a9d1-5c3206d741b4'
GUID_BATTERY_SUBGROUP = 'e73a048d-bf27-4f12-9731-8b2076e8891f'
GUID_BATTERY_DISCHARGE_ACTION_0 = '637ea02f-bbcb-4015-8e2c-a1c7b9c0b546'
GUID_BATTERY_DISCHARGE_LEVEL_0 = '9a66d8d7-4ff7-4ef9-b5a2-5a326ca2a469'
GUID_BATTERY_DISCHARGE_FLAGS_0 = '5dbb7c9f-38e9-40d2-9749-4f8a0e9f640f'
GUID_BATTERY_DISCHARGE_ACTION_1 = 'd8742dcb-3e6a-4b3c-b3fe-374623cdcf06'
GUID_BATTERY_DISCHARGE_LEVEL_1 = '8183ba9a-e910-48da-8769-14ae6dc1170a'
GUID_BATTERY_DISCHARGE_FLAGS_1 = 'bcded951-187b-4d05-bccc-f7e51960c258'
GUID_BATTERY_DISCHARGE_ACTION_2 = '421cba38-1a8e-4881-ac89-e33a8b04ece4'
GUID_BATTERY_DISCHARGE_LEVEL_2 = '07a07ca2-adaf-40d7-b077-533aaded1bfa'
GUID_BATTERY_DISCHARGE_FLAGS_2 = '7fd2f0c4-feb7-4da3-8117-e3fbedc46582'
GUID_BATTERY_DISCHARGE_ACTION_3 = '80472613-9780-455e-b308-72d3003cf2f8'
GUID_BATTERY_DISCHARGE_LEVEL_3 = '58afd5a6-c2dd-47d2-9fbf-ef70cc5c5965'
GUID_BATTERY_DISCHARGE_FLAGS_3 = '73613ccf-dbfa-4279-8356-4935f6bf62f3'
GUID_PROCESSOR_SETTINGS_SUBGROUP = '54533251-82be-4824-96c1-47b60b740d00'
GUID_PROCESSOR_THROTTLE_POLICY = '57027304-4af6-4104-9260-e3d95248fc36'
PERFSTATE_POLICY_CHANGE_IDEAL = 0
PERFSTATE_POLICY_CHANGE_SINGLE = 1
PERFSTATE_POLICY_CHANGE_ROCKET = 2
PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE = 3
PERFSTATE_POLICY_CHANGE_DECREASE_MAX = 2
PERFSTATE_POLICY_CHANGE_INCREASE_MAX = 3
GUID_PROCESSOR_THROTTLE_MAXIMUM = 'bc5038f7-23e0-4960-96da-33abaf5935ec'
GUID_PROCESSOR_THROTTLE_MAXIMUM_1 = 'bc5038f7-23e0-4960-96da-33abaf5935ed'
GUID_PROCESSOR_THROTTLE_MINIMUM = '893dee8e-2bef-41e0-89c6-b55d0929964c'
GUID_PROCESSOR_THROTTLE_MINIMUM_1 = '893dee8e-2bef-41e0-89c6-b55d0929964d'
GUID_PROCESSOR_FREQUENCY_LIMIT = '75b0ae3f-bce0-45a7-8c89-c9611c25e100'
GUID_PROCESSOR_FREQUENCY_LIMIT_1 = '75b0ae3f-bce0-45a7-8c89-c9611c25e101'
GUID_PROCESSOR_ALLOW_THROTTLING = '3b04d4fd-1cc7-4f23-ab1c-d1337819c4bb'
PROCESSOR_THROTTLE_DISABLED = 0
PROCESSOR_THROTTLE_ENABLED = 1
PROCESSOR_THROTTLE_AUTOMATIC = 2
GUID_PROCESSOR_IDLESTATE_POLICY = '68f262a7-f621-4069-b9a5-4874169be23c'
GUID_PROCESSOR_PERFSTATE_POLICY = 'bbdc3814-18e9-4463-8a55-d197327c45c0'
GUID_PROCESSOR_PERF_INCREASE_THRESHOLD = '06cadf0e-64ed-448a-8927-ce7bf90eb35d'
GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1 = '06cadf0e-64ed-448a-8927-ce7bf90eb35e'
GUID_PROCESSOR_PERF_DECREASE_THRESHOLD = '12a0ab44-fe28-4fa9-b3bd-4b64f44960a6'
GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1 = '12a0ab44-fe28-4fa9-b3bd-4b64f44960a7'
GUID_PROCESSOR_PERF_INCREASE_POLICY = '465e1f50-b610-473a-ab58-00d1077dc418'
GUID_PROCESSOR_PERF_INCREASE_POLICY_1 = '465e1f50-b610-473a-ab58-00d1077dc419'
GUID_PROCESSOR_PERF_DECREASE_POLICY = '40fbefc7-2e9d-4d25-a185-0cfd8574bac6'
GUID_PROCESSOR_PERF_DECREASE_POLICY_1 = '40fbefc7-2e9d-4d25-a185-0cfd8574bac7'
GUID_PROCESSOR_PERF_INCREASE_TIME = '984cf492-3bed-4488-a8f9-4286c97bf5aa'
GUID_PROCESSOR_PERF_INCREASE_TIME_1 = '984cf492-3bed-4488-a8f9-4286c97bf5ab'
GUID_PROCESSOR_PERF_DECREASE_TIME = 'd8edeb9b-95cf-4f95-a73c-b061973693c8'
GUID_PROCESSOR_PERF_DECREASE_TIME_1 = 'd8edeb9b-95cf-4f95-a73c-b061973693c9'
GUID_PROCESSOR_PERF_TIME_CHECK = '4d2b0152-7d5c-498b-88e2-34345392a2c5'
GUID_PROCESSOR_PERF_BOOST_POLICY = '45bcc044-d885-43e2-8605-ee0ec6e96b59'
PROCESSOR_PERF_BOOST_POLICY_DISABLED = 0
PROCESSOR_PERF_BOOST_POLICY_MAX = 100
GUID_PROCESSOR_PERF_BOOST_MODE = 'be337238-0d82-4146-a960-4f3749d470c7'
PROCESSOR_PERF_BOOST_MODE_DISABLED = 0
PROCESSOR_PERF_BOOST_MODE_ENABLED = 1
PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE = 2
PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED = 3
PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE = 4
PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE_AT_GUARANTEED = 5
PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED = 6
PROCESSOR_PERF_BOOST_MODE_MAX = 6
GUID_PROCESSOR_PERF_AUTONOMOUS_MODE = '8baa4a8a-14c6-4451-8e8b-14bdbd197537'
PROCESSOR_PERF_AUTONOMOUS_MODE_DISABLED = 0
PROCESSOR_PERF_AUTONOMOUS_MODE_ENABLED = 1
GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE = '36687f9e-e3a5-4dbf-b1dc-15eb381c6863'
GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1 = '36687f9e-e3a5-4dbf-b1dc-15eb381c6864'
PROCESSOR_PERF_PERFORMANCE_PREFERENCE = 255
PROCESSOR_PERF_ENERGY_PREFERENCE = 0
GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW = 'cfeda3d0-7697-4566-a922-a9086cd49dfa'
PROCESSOR_PERF_MINIMUM_ACTIVITY_WINDOW = 0
PROCESSOR_PERF_MAXIMUM_ACTIVITY_WINDOW = 1270000000
GUID_PROCESSOR_DUTY_CYCLING = '4e4450b3-6179-4e91-b8f1-5bb9938f81a1'
PROCESSOR_DUTY_CYCLING_DISABLED = 0
PROCESSOR_DUTY_CYCLING_ENABLED = 1
GUID_PROCESSOR_IDLE_ALLOW_SCALING = '6c2993b0-8f48-481f-bcc6-00dd2742aa06'
GUID_PROCESSOR_IDLE_DISABLE = '5d76a2ca-e8c0-402f-a133-2158492d58ad'
GUID_PROCESSOR_IDLE_STATE_MAXIMUM = '9943e905-9a30-4ec1-9b99-44dd3b76f7a2'
GUID_PROCESSOR_IDLE_TIME_CHECK = 'c4581c31-89ab-4597-8e2b-9c9cab440e6b'
GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD = '4b92d758-5a24-4851-a470-815d78aee119'
GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD = '7b224883-b3cc-4d79-819f-8374152cbe7c'
GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD = 'df142941-20f3-4edf-9a4a-9c83d3d717d1'
GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD = '68dd2f27-a4ce-4e11-8487-3794e4135dfa'
GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY = 'c7be0679-2817-4d69-9d02-519a537ed0c6'
CORE_PARKING_POLICY_CHANGE_IDEAL = 0
CORE_PARKING_POLICY_CHANGE_SINGLE = 1
CORE_PARKING_POLICY_CHANGE_ROCKET = 2
CORE_PARKING_POLICY_CHANGE_MULTISTEP = 3
CORE_PARKING_POLICY_CHANGE_MAX = 3
GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY = '71021b41-c749-4d21-be74-a00f335d582b'
GUID_PROCESSOR_CORE_PARKING_MAX_CORES = 'ea062031-0e34-4ff1-9b6d-eb1059334028'
GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1 = 'ea062031-0e34-4ff1-9b6d-eb1059334029'
GUID_PROCESSOR_CORE_PARKING_MIN_CORES = '0cc5b647-c1df-4637-891a-dec35c318583'
GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1 = '0cc5b647-c1df-4637-891a-dec35c318584'
GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME = '2ddd5a84-5a71-437e-912a-db0b8c788732'
GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME = 'dfd10d17-d5eb-45dd-877a-9a34ddd15c82'
GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR = '8f7b45e3-c393-480a-878c-f67ac3d07082'
GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD = '5b33697b-e89d-4d38-aa46-9e7dfb7cd2f9'
GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING = 'e70867f1-fa2f-4f4e-aea1-4d8a0ba23b20'
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR = '1299023c-bc28-4f0a-81ec-d3295a8d815d'
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD = '9ac18e92-aa3c-4e27-b307-01ae37307129'
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING = '8809c2d8-b155-42d4-bcda-0d345651b1db'
GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD = '943c8cb6-6f93-4227-ad87-e9a3feec08d1'
GUID_PROCESSOR_PARKING_CORE_OVERRIDE = 'a55612aa-f624-42c6-a443-7397d064c04f'
GUID_PROCESSOR_PARKING_PERF_STATE = '447235c7-6a8d-4cc0-8e24-9eaf70b96e2b'
GUID_PROCESSOR_PARKING_PERF_STATE_1 = '447235c7-6a8d-4cc0-8e24-9eaf70b96e2c'
GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD = '2430ab6f-a520-44a2-9601-f7f23b5134b1'
GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD = 'f735a673-2066-4f80-a0c5-ddee0cf1bf5d'
GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD = '4bdaf4e9-d103-46d7-a5f0-6280121616ef'
GUID_PROCESSOR_SOFT_PARKING_LATENCY = '97cfac41-2217-47eb-992d-618b1977c907'
GUID_PROCESSOR_PERF_HISTORY = '7d24baa7-0b84-480f-840c-1b0743c00f5f'
GUID_PROCESSOR_PERF_HISTORY_1 = '7d24baa7-0b84-480f-840c-1b0743c00f60'
GUID_PROCESSOR_PERF_INCREASE_HISTORY = '99b3ef01-752f-46a1-80fb-7730011f2354'
GUID_PROCESSOR_PERF_DECREASE_HISTORY = '0300f6f8-abd6-45a9-b74f-4908691a40b5'
GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY = '77d7f282-8f1a-42cd-8537-45450a839be8'
GUID_PROCESSOR_PERF_LATENCY_HINT = '0822df31-9c83-441c-a079-0de4cf009c7b'
GUID_PROCESSOR_PERF_LATENCY_HINT_PERF = '619b7505-003b-4e82-b7a6-4dd29c300971'
GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1 = '619b7505-003b-4e82-b7a6-4dd29c300972'
GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK = '616cdaa5-695e-4545-97ad-97dc2d1bdd88'
GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1 = '616cdaa5-695e-4545-97ad-97dc2d1bdd89'
GUID_PROCESSOR_DISTRIBUTE_UTILITY = 'e0007330-f589-42ed-a401-5ddb10e785d3'
GUID_PROCESSOR_HETEROGENEOUS_POLICY = '7f2f5cfa-f10c-4823-b5e1-e93ae85f46b5'
GUID_PROCESSOR_HETERO_DECREASE_TIME = '7f2492b6-60b1-45e5-ae55-773f8cd5caec'
GUID_PROCESSOR_HETERO_INCREASE_TIME = '4009efa7-e72d-4cba-9edf-91084ea8cbc3'
GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD = 'f8861c27-95e7-475c-865b-13c0cb3f9d6b'
GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD = 'b000397d-9b0b-483d-98c9-692a6060cfbf'
GUID_PROCESSOR_CLASS0_FLOOR_PERF = 'fddc842b-8364-4edc-94cf-c17f60de1c80'
GUID_PROCESSOR_CLASS1_INITIAL_PERF = '1facfc65-a930-4bc5-9f38-504ec097bbc0'
GUID_PROCESSOR_THREAD_SCHEDULING_POLICY = '93b8b6dc-0698-4d1c-9ee4-0644e900c85d'
GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY = 'bae08b81-2d5e-4688-ad6a-13243356654b'
GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD = 'd92998c2-6a48-49ca-85d4-8cceec294570'
GUID_SYSTEM_COOLING_POLICY = '94d3a615-a899-4ac5-ae2b-e4d8f634367f'
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD = '38b8383d-cce0-4c79-9e3e-56a4f17cc480'
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1 = '38b8383d-cce0-4c79-9e3e-56a4f17cc481'
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD = '3d44e256-7222-4415-a9ed-9c45fa3dd830'
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1 = '3d44e256-7222-4415-a9ed-9c45fa3dd831'
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME = 'f565999f-3fb0-411a-a226-3f0198dec130'
GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1 = 'f565999f-3fb0-411a-a226-3f0198dec131'
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME = '3d915188-7830-49ae-a79a-0fb0a1e5a200'
GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1 = '3d915188-7830-49ae-a79a-0fb0a1e5a201'
GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING = '4427c73b-9756-4a5c-b84b-c7bda79c7320'
GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1 = '4427c73b-9756-4a5c-b84b-c7bda79c7321'
GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR = 'ce8e92ee-6a86-4572-bfe0-20c21d03cd40'
GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1 = 'ce8e92ee-6a86-4572-bfe0-20c21d03cd41'
GUID_LOCK_CONSOLE_ON_WAKE = '0e796bdb-100d-47d6-a2d5-f7d2daa51f51'
GUID_DEVICE_IDLE_POLICY = '4faab71a-92e5-4726-b531-224559672d19'
POWER_DEVICE_IDLE_POLICY_PERFORMANCE = 0
POWER_DEVICE_IDLE_POLICY_CONSERVATIVE = 1
GUID_CONNECTIVITY_IN_STANDBY = 'f15576e8-98b7-4186-b944-eafa664402d9'
POWER_CONNECTIVITY_IN_STANDBY_DISABLED = 0
POWER_CONNECTIVITY_IN_STANDBY_ENABLED = 1
POWER_CONNECTIVITY_IN_STANDBY_SYSTEM_MANAGED = 2
GUID_DISCONNECTED_STANDBY_MODE = '68afb2d9-ee95-47a8-8f50-4115088073b1'
POWER_DISCONNECTED_STANDBY_MODE_NORMAL = 0
POWER_DISCONNECTED_STANDBY_MODE_AGGRESSIVE = 1
GUID_ACDC_POWER_SOURCE = '5d3e9a59-e9d5-4b00-a6bd-ff34ff516548'
GUID_LIDSWITCH_STATE_CHANGE = 'ba3e0f4d-b817-4094-a2d1-d56379e6a0f3'
GUID_LIDSWITCH_STATE_RELIABILITY = 'ae4c4ff1-d361-43f4-80aa-bbb6eb03de94'
GUID_BATTERY_PERCENTAGE_REMAINING = 'a7ad8041-b45a-4cae-87a3-eecbb468a9e1'
GUID_BATTERY_COUNT = '7d263f15-fca4-49e5-854b-a9f2bfbd5c24'
GUID_GLOBAL_USER_PRESENCE = '786e8a1d-b427-4344-9207-09e70bdcbea9'
GUID_SESSION_DISPLAY_STATUS = '2b84c20e-ad23-4ddf-93db-05ffbd7efca5'
GUID_SESSION_USER_PRESENCE = '3c0f4548-c03f-4c4d-b9f2-237ede686376'
GUID_IDLE_BACKGROUND_TASK = '515c31d8-f734-163d-a0fd-11a08c91e8f1'
GUID_BACKGROUND_TASK_NOTIFICATION = 'cf23f240-2a54-48d8-b114-de1518ff052e'
GUID_APPLAUNCH_BUTTON = '1a689231-7399-4e9a-8f99-b71f999db3fa'
GUID_PCIEXPRESS_SETTINGS_SUBGROUP = '501a4d13-42af-4429-9fd1-a8218c268e20'
GUID_PCIEXPRESS_ASPM_POLICY = 'ee12f906-d277-404b-b6da-e5fa1a576df5'
GUID_ENABLE_SWITCH_FORCED_SHUTDOWN = '833a6b62-dfa4-46d1-82f8-e09e34d029d6'
GUID_INTSTEER_SUBGROUP = '48672f38-7a9a-4bb2-8bf8-3d85be19de4e'
GUID_INTSTEER_MODE = '2bfc24f9-5ea2-4801-8213-3dbae01aa39d'
GUID_INTSTEER_LOAD_PER_PROC_TRIGGER = '73cde64d-d720-4bb2-a860-c755afe77ef2'
GUID_INTSTEER_TIME_UNPARK_TRIGGER = 'd6ba4903-386f-4c2c-8adb-5c21b3328d25'
GUID_GRAPHICS_SUBGROUP = '5fb4938d-1ee8-4b0f-9a3c-5036b0ab995c'
GUID_GPU_PREFERENCE_POLICY = 'dd848b2a-8a5d-4451-9ae2-39cd41658f6c'
GUID_MIXED_REALITY_MODE = '1e626b4e-cf04-4f8d-9cc7-c97c5b0f2391'
GUID_SPR_ACTIVE_SESSION_CHANGE = '0e24ce38-c393-4742-bdb1-744f4b9ee08e'
POWER_SYSTEM_MAXIMUM = 7
DIAGNOSTIC_REASON_VERSION = 0
DIAGNOSTIC_REASON_SIMPLE_STRING = 1
DIAGNOSTIC_REASON_DETAILED_STRING = 2
DIAGNOSTIC_REASON_NOT_SPECIFIED = 2147483648
POWER_REQUEST_CONTEXT_VERSION = 0
PDCAP_D0_SUPPORTED = 1
PDCAP_D1_SUPPORTED = 2
PDCAP_D2_SUPPORTED = 4
PDCAP_D3_SUPPORTED = 8
PDCAP_WAKE_FROM_D0_SUPPORTED = 16
PDCAP_WAKE_FROM_D1_SUPPORTED = 32
PDCAP_WAKE_FROM_D2_SUPPORTED = 64
PDCAP_WAKE_FROM_D3_SUPPORTED = 128
PDCAP_WARM_EJECT_SUPPORTED = 256
POWER_SETTING_VALUE_VERSION = 1
PROC_IDLE_BUCKET_COUNT = 6
PROC_IDLE_BUCKET_COUNT_EX = 16
ACPI_PPM_SOFTWARE_ALL = 252
ACPI_PPM_SOFTWARE_ANY = 253
ACPI_PPM_HARDWARE_ALL = 254
MS_PPM_SOFTWARE_ALL = 1
PPM_FIRMWARE_ACPI1C2 = 1
PPM_FIRMWARE_ACPI1C3 = 2
PPM_FIRMWARE_ACPI1TSTATES = 4
PPM_FIRMWARE_CST = 8
PPM_FIRMWARE_CSD = 16
PPM_FIRMWARE_PCT = 32
PPM_FIRMWARE_PSS = 64
PPM_FIRMWARE_XPSS = 128
PPM_FIRMWARE_PPC = 256
PPM_FIRMWARE_PSD = 512
PPM_FIRMWARE_PTC = 1024
PPM_FIRMWARE_TSS = 2048
PPM_FIRMWARE_TPC = 4096
PPM_FIRMWARE_TSD = 8192
PPM_FIRMWARE_PCCH = 16384
PPM_FIRMWARE_PCCP = 32768
PPM_FIRMWARE_OSC = 65536
PPM_FIRMWARE_PDC = 131072
PPM_FIRMWARE_CPC = 262144
PPM_FIRMWARE_LPI = 524288
PPM_PERFORMANCE_IMPLEMENTATION_NONE = 0
PPM_PERFORMANCE_IMPLEMENTATION_PSTATES = 1
PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 = 2
PPM_PERFORMANCE_IMPLEMENTATION_CPPC = 3
PPM_PERFORMANCE_IMPLEMENTATION_PEP = 4
PPM_IDLE_IMPLEMENTATION_NONE = 0
PPM_IDLE_IMPLEMENTATION_CSTATES = 1
PPM_IDLE_IMPLEMENTATION_PEP = 2
PPM_IDLE_IMPLEMENTATION_MICROPEP = 3
PPM_IDLE_IMPLEMENTATION_LPISTATES = 4
PPM_PERFSTATE_CHANGE_GUID = 'a5b32ddd-7f39-4abc-b892-900e43b59ebb'
PPM_PERFSTATE_DOMAIN_CHANGE_GUID = '995e6b7f-d653-497a-b978-36a30c29bf01'
PPM_IDLESTATE_CHANGE_GUID = '4838fe4f-f71c-4e51-9ecc-8430a7ac4c6c'
PPM_PERFSTATES_DATA_GUID = '5708cc20-7d40-4bf4-b4aa-2b01338d0126'
PPM_IDLESTATES_DATA_GUID = 'ba138e10-e250-4ad7-8616-cf1a7ad410e7'
PPM_IDLE_ACCOUNTING_GUID = 'e2a26f78-ae07-4ee0-a30f-ce54f55a94cd'
PPM_IDLE_ACCOUNTING_EX_GUID = 'd67abd39-81f8-4a5e-8152-72e31ec912ee'
PPM_THERMALCONSTRAINT_GUID = 'a852c2c8-1a4c-423b-8c2c-f30d82931a88'
PPM_PERFMON_PERFSTATE_GUID = '7fd18652-0cfe-40d2-b0a1-0b066a87759e'
PPM_THERMAL_POLICY_CHANGE_GUID = '48f377b8-6880-4c7b-8bdc-380176c6654d'
POWER_ACTION_QUERY_ALLOWED = 1
POWER_ACTION_UI_ALLOWED = 2
POWER_ACTION_OVERRIDE_APPS = 4
POWER_ACTION_HIBERBOOT = 8
POWER_ACTION_USER_NOTIFY = 16
POWER_ACTION_DOZE_TO_HIBERNATE = 32
POWER_ACTION_ACPI_CRITICAL = 16777216
POWER_ACTION_ACPI_USER_NOTIFY = 33554432
POWER_ACTION_DIRECTED_DRIPS = 67108864
POWER_ACTION_PSEUDO_TRANSITION = 134217728
POWER_ACTION_LIGHTEST_FIRST = 268435456
POWER_ACTION_LOCK_CONSOLE = 536870912
POWER_ACTION_DISABLE_WAKES = 1073741824
POWER_ACTION_CRITICAL = 2147483648
POWER_USER_NOTIFY_FORCED_SHUTDOWN = 32
BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK = 7
BATTERY_DISCHARGE_FLAGS_ENABLE = 2147483648
NUM_DISCHARGE_POLICIES = 4
DISCHARGE_POLICY_CRITICAL = 0
DISCHARGE_POLICY_LOW = 1
PROCESSOR_IDLESTATE_POLICY_COUNT = 3
PO_THROTTLE_NONE = 0
PO_THROTTLE_CONSTANT = 1
PO_THROTTLE_DEGRADE = 2
PO_THROTTLE_ADAPTIVE = 3
PO_THROTTLE_MAXIMUM = 4
HIBERFILE_TYPE_NONE = 0
HIBERFILE_TYPE_REDUCED = 1
HIBERFILE_TYPE_FULL = 2
HIBERFILE_TYPE_MAX = 3
IMAGE_DOS_SIGNATURE = 23117
IMAGE_OS2_SIGNATURE = 17742
IMAGE_OS2_SIGNATURE_LE = 17740
IMAGE_VXD_SIGNATURE = 17740
IMAGE_NT_SIGNATURE = 17744
IMAGE_SIZEOF_FILE_HEADER = 20
IMAGE_NUMBEROF_DIRECTORY_ENTRIES = 16
IMAGE_SIZEOF_SHORT_NAME = 8
IMAGE_SIZEOF_SECTION_HEADER = 40
IMAGE_SIZEOF_SYMBOL = 18
IMAGE_SYM_SECTION_MAX = 65279
IMAGE_SYM_SECTION_MAX_EX = 2147483647
IMAGE_SYM_TYPE_NULL = 0
IMAGE_SYM_TYPE_VOID = 1
IMAGE_SYM_TYPE_CHAR = 2
IMAGE_SYM_TYPE_SHORT = 3
IMAGE_SYM_TYPE_INT = 4
IMAGE_SYM_TYPE_LONG = 5
IMAGE_SYM_TYPE_FLOAT = 6
IMAGE_SYM_TYPE_DOUBLE = 7
IMAGE_SYM_TYPE_STRUCT = 8
IMAGE_SYM_TYPE_UNION = 9
IMAGE_SYM_TYPE_ENUM = 10
IMAGE_SYM_TYPE_MOE = 11
IMAGE_SYM_TYPE_BYTE = 12
IMAGE_SYM_TYPE_WORD = 13
IMAGE_SYM_TYPE_UINT = 14
IMAGE_SYM_TYPE_DWORD = 15
IMAGE_SYM_TYPE_PCODE = 32768
IMAGE_SYM_DTYPE_NULL = 0
IMAGE_SYM_DTYPE_POINTER = 1
IMAGE_SYM_DTYPE_FUNCTION = 2
IMAGE_SYM_DTYPE_ARRAY = 3
IMAGE_SYM_CLASS_NULL = 0
IMAGE_SYM_CLASS_AUTOMATIC = 1
IMAGE_SYM_CLASS_EXTERNAL = 2
IMAGE_SYM_CLASS_STATIC = 3
IMAGE_SYM_CLASS_REGISTER = 4
IMAGE_SYM_CLASS_EXTERNAL_DEF = 5
IMAGE_SYM_CLASS_LABEL = 6
IMAGE_SYM_CLASS_UNDEFINED_LABEL = 7
IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = 8
IMAGE_SYM_CLASS_ARGUMENT = 9
IMAGE_SYM_CLASS_STRUCT_TAG = 10
IMAGE_SYM_CLASS_MEMBER_OF_UNION = 11
IMAGE_SYM_CLASS_UNION_TAG = 12
IMAGE_SYM_CLASS_TYPE_DEFINITION = 13
IMAGE_SYM_CLASS_UNDEFINED_STATIC = 14
IMAGE_SYM_CLASS_ENUM_TAG = 15
IMAGE_SYM_CLASS_MEMBER_OF_ENUM = 16
IMAGE_SYM_CLASS_REGISTER_PARAM = 17
IMAGE_SYM_CLASS_BIT_FIELD = 18
IMAGE_SYM_CLASS_FAR_EXTERNAL = 68
IMAGE_SYM_CLASS_BLOCK = 100
IMAGE_SYM_CLASS_FUNCTION = 101
IMAGE_SYM_CLASS_END_OF_STRUCT = 102
IMAGE_SYM_CLASS_FILE = 103
IMAGE_SYM_CLASS_SECTION = 104
IMAGE_SYM_CLASS_WEAK_EXTERNAL = 105
IMAGE_SYM_CLASS_CLR_TOKEN = 107
N_BTMASK = 15
N_TMASK = 48
N_TMASK1 = 192
N_TMASK2 = 240
N_BTSHFT = 4
N_TSHIFT = 2
IMAGE_COMDAT_SELECT_NODUPLICATES = 1
IMAGE_COMDAT_SELECT_ANY = 2
IMAGE_COMDAT_SELECT_SAME_SIZE = 3
IMAGE_COMDAT_SELECT_EXACT_MATCH = 4
IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5
IMAGE_COMDAT_SELECT_LARGEST = 6
IMAGE_COMDAT_SELECT_NEWEST = 7
IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1
IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2
IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3
IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY = 4
IMAGE_REL_I386_ABSOLUTE = 0
IMAGE_REL_I386_DIR16 = 1
IMAGE_REL_I386_REL16 = 2
IMAGE_REL_I386_DIR32 = 6
IMAGE_REL_I386_DIR32NB = 7
IMAGE_REL_I386_SEG12 = 9
IMAGE_REL_I386_SECTION = 10
IMAGE_REL_I386_SECREL = 11
IMAGE_REL_I386_TOKEN = 12
IMAGE_REL_I386_SECREL7 = 13
IMAGE_REL_I386_REL32 = 20
IMAGE_REL_MIPS_ABSOLUTE = 0
IMAGE_REL_MIPS_REFHALF = 1
IMAGE_REL_MIPS_REFWORD = 2
IMAGE_REL_MIPS_JMPADDR = 3
IMAGE_REL_MIPS_REFHI = 4
IMAGE_REL_MIPS_REFLO = 5
IMAGE_REL_MIPS_GPREL = 6
IMAGE_REL_MIPS_LITERAL = 7
IMAGE_REL_MIPS_SECTION = 10
IMAGE_REL_MIPS_SECREL = 11
IMAGE_REL_MIPS_SECRELLO = 12
IMAGE_REL_MIPS_SECRELHI = 13
IMAGE_REL_MIPS_TOKEN = 14
IMAGE_REL_MIPS_JMPADDR16 = 16
IMAGE_REL_MIPS_REFWORDNB = 34
IMAGE_REL_MIPS_PAIR = 37
IMAGE_REL_ALPHA_ABSOLUTE = 0
IMAGE_REL_ALPHA_REFLONG = 1
IMAGE_REL_ALPHA_REFQUAD = 2
IMAGE_REL_ALPHA_GPREL32 = 3
IMAGE_REL_ALPHA_LITERAL = 4
IMAGE_REL_ALPHA_LITUSE = 5
IMAGE_REL_ALPHA_GPDISP = 6
IMAGE_REL_ALPHA_BRADDR = 7
IMAGE_REL_ALPHA_HINT = 8
IMAGE_REL_ALPHA_INLINE_REFLONG = 9
IMAGE_REL_ALPHA_REFHI = 10
IMAGE_REL_ALPHA_REFLO = 11
IMAGE_REL_ALPHA_PAIR = 12
IMAGE_REL_ALPHA_MATCH = 13
IMAGE_REL_ALPHA_SECTION = 14
IMAGE_REL_ALPHA_SECREL = 15
IMAGE_REL_ALPHA_REFLONGNB = 16
IMAGE_REL_ALPHA_SECRELLO = 17
IMAGE_REL_ALPHA_SECRELHI = 18
IMAGE_REL_ALPHA_REFQ3 = 19
IMAGE_REL_ALPHA_REFQ2 = 20
IMAGE_REL_ALPHA_REFQ1 = 21
IMAGE_REL_ALPHA_GPRELLO = 22
IMAGE_REL_ALPHA_GPRELHI = 23
IMAGE_REL_PPC_ABSOLUTE = 0
IMAGE_REL_PPC_ADDR64 = 1
IMAGE_REL_PPC_ADDR32 = 2
IMAGE_REL_PPC_ADDR24 = 3
IMAGE_REL_PPC_ADDR16 = 4
IMAGE_REL_PPC_ADDR14 = 5
IMAGE_REL_PPC_REL24 = 6
IMAGE_REL_PPC_REL14 = 7
IMAGE_REL_PPC_TOCREL16 = 8
IMAGE_REL_PPC_TOCREL14 = 9
IMAGE_REL_PPC_ADDR32NB = 10
IMAGE_REL_PPC_SECREL = 11
IMAGE_REL_PPC_SECTION = 12
IMAGE_REL_PPC_IFGLUE = 13
IMAGE_REL_PPC_IMGLUE = 14
IMAGE_REL_PPC_SECREL16 = 15
IMAGE_REL_PPC_REFHI = 16
IMAGE_REL_PPC_REFLO = 17
IMAGE_REL_PPC_PAIR = 18
IMAGE_REL_PPC_SECRELLO = 19
IMAGE_REL_PPC_SECRELHI = 20
IMAGE_REL_PPC_GPREL = 21
IMAGE_REL_PPC_TOKEN = 22
IMAGE_REL_PPC_TYPEMASK = 255
IMAGE_REL_PPC_NEG = 256
IMAGE_REL_PPC_BRTAKEN = 512
IMAGE_REL_PPC_BRNTAKEN = 1024
IMAGE_REL_PPC_TOCDEFN = 2048
IMAGE_REL_SH3_ABSOLUTE = 0
IMAGE_REL_SH3_DIRECT16 = 1
IMAGE_REL_SH3_DIRECT32 = 2
IMAGE_REL_SH3_DIRECT8 = 3
IMAGE_REL_SH3_DIRECT8_WORD = 4
IMAGE_REL_SH3_DIRECT8_LONG = 5
IMAGE_REL_SH3_DIRECT4 = 6
IMAGE_REL_SH3_DIRECT4_WORD = 7
IMAGE_REL_SH3_DIRECT4_LONG = 8
IMAGE_REL_SH3_PCREL8_WORD = 9
IMAGE_REL_SH3_PCREL8_LONG = 10
IMAGE_REL_SH3_PCREL12_WORD = 11
IMAGE_REL_SH3_STARTOF_SECTION = 12
IMAGE_REL_SH3_SIZEOF_SECTION = 13
IMAGE_REL_SH3_SECTION = 14
IMAGE_REL_SH3_SECREL = 15
IMAGE_REL_SH3_DIRECT32_NB = 16
IMAGE_REL_SH3_GPREL4_LONG = 17
IMAGE_REL_SH3_TOKEN = 18
IMAGE_REL_SHM_PCRELPT = 19
IMAGE_REL_SHM_REFLO = 20
IMAGE_REL_SHM_REFHALF = 21
IMAGE_REL_SHM_RELLO = 22
IMAGE_REL_SHM_RELHALF = 23
IMAGE_REL_SHM_PAIR = 24
IMAGE_REL_SH_NOMODE = 32768
IMAGE_REL_ARM_ABSOLUTE = 0
IMAGE_REL_ARM_ADDR32 = 1
IMAGE_REL_ARM_ADDR32NB = 2
IMAGE_REL_ARM_BRANCH24 = 3
IMAGE_REL_ARM_BRANCH11 = 4
IMAGE_REL_ARM_TOKEN = 5
IMAGE_REL_ARM_GPREL12 = 6
IMAGE_REL_ARM_GPREL7 = 7
IMAGE_REL_ARM_BLX24 = 8
IMAGE_REL_ARM_BLX11 = 9
IMAGE_REL_ARM_SECTION = 14
IMAGE_REL_ARM_SECREL = 15
IMAGE_REL_ARM_MOV32A = 16
IMAGE_REL_ARM_MOV32 = 16
IMAGE_REL_ARM_MOV32T = 17
IMAGE_REL_THUMB_MOV32 = 17
IMAGE_REL_ARM_BRANCH20T = 18
IMAGE_REL_THUMB_BRANCH20 = 18
IMAGE_REL_ARM_BRANCH24T = 20
IMAGE_REL_THUMB_BRANCH24 = 20
IMAGE_REL_ARM_BLX23T = 21
IMAGE_REL_THUMB_BLX23 = 21
IMAGE_REL_AM_ABSOLUTE = 0
IMAGE_REL_AM_ADDR32 = 1
IMAGE_REL_AM_ADDR32NB = 2
IMAGE_REL_AM_CALL32 = 3
IMAGE_REL_AM_FUNCINFO = 4
IMAGE_REL_AM_REL32_1 = 5
IMAGE_REL_AM_REL32_2 = 6
IMAGE_REL_AM_SECREL = 7
IMAGE_REL_AM_SECTION = 8
IMAGE_REL_AM_TOKEN = 9
IMAGE_REL_ARM64_ABSOLUTE = 0
IMAGE_REL_ARM64_ADDR32 = 1
IMAGE_REL_ARM64_ADDR32NB = 2
IMAGE_REL_ARM64_BRANCH26 = 3
IMAGE_REL_ARM64_PAGEBASE_REL21 = 4
IMAGE_REL_ARM64_REL21 = 5
IMAGE_REL_ARM64_PAGEOFFSET_12A = 6
IMAGE_REL_ARM64_PAGEOFFSET_12L = 7
IMAGE_REL_ARM64_SECREL = 8
IMAGE_REL_ARM64_SECREL_LOW12A = 9
IMAGE_REL_ARM64_SECREL_HIGH12A = 10
IMAGE_REL_ARM64_SECREL_LOW12L = 11
IMAGE_REL_ARM64_TOKEN = 12
IMAGE_REL_ARM64_SECTION = 13
IMAGE_REL_ARM64_ADDR64 = 14
IMAGE_REL_ARM64_BRANCH19 = 15
IMAGE_REL_AMD64_ABSOLUTE = 0
IMAGE_REL_AMD64_ADDR64 = 1
IMAGE_REL_AMD64_ADDR32 = 2
IMAGE_REL_AMD64_ADDR32NB = 3
IMAGE_REL_AMD64_REL32 = 4
IMAGE_REL_AMD64_REL32_1 = 5
IMAGE_REL_AMD64_REL32_2 = 6
IMAGE_REL_AMD64_REL32_3 = 7
IMAGE_REL_AMD64_REL32_4 = 8
IMAGE_REL_AMD64_REL32_5 = 9
IMAGE_REL_AMD64_SECTION = 10
IMAGE_REL_AMD64_SECREL = 11
IMAGE_REL_AMD64_SECREL7 = 12
IMAGE_REL_AMD64_TOKEN = 13
IMAGE_REL_AMD64_SREL32 = 14
IMAGE_REL_AMD64_PAIR = 15
IMAGE_REL_AMD64_SSPAN32 = 16
IMAGE_REL_AMD64_EHANDLER = 17
IMAGE_REL_AMD64_IMPORT_BR = 18
IMAGE_REL_AMD64_IMPORT_CALL = 19
IMAGE_REL_AMD64_CFG_BR = 20
IMAGE_REL_AMD64_CFG_BR_REX = 21
IMAGE_REL_AMD64_CFG_CALL = 22
IMAGE_REL_AMD64_INDIR_BR = 23
IMAGE_REL_AMD64_INDIR_BR_REX = 24
IMAGE_REL_AMD64_INDIR_CALL = 25
IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST = 32
IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST = 47
IMAGE_REL_IA64_ABSOLUTE = 0
IMAGE_REL_IA64_IMM14 = 1
IMAGE_REL_IA64_IMM22 = 2
IMAGE_REL_IA64_IMM64 = 3
IMAGE_REL_IA64_DIR32 = 4
IMAGE_REL_IA64_DIR64 = 5
IMAGE_REL_IA64_PCREL21B = 6
IMAGE_REL_IA64_PCREL21M = 7
IMAGE_REL_IA64_PCREL21F = 8
IMAGE_REL_IA64_GPREL22 = 9
IMAGE_REL_IA64_LTOFF22 = 10
IMAGE_REL_IA64_SECTION = 11
IMAGE_REL_IA64_SECREL22 = 12
IMAGE_REL_IA64_SECREL64I = 13
IMAGE_REL_IA64_SECREL32 = 14
IMAGE_REL_IA64_DIR32NB = 16
IMAGE_REL_IA64_SREL14 = 17
IMAGE_REL_IA64_SREL22 = 18
IMAGE_REL_IA64_SREL32 = 19
IMAGE_REL_IA64_UREL32 = 20
IMAGE_REL_IA64_PCREL60X = 21
IMAGE_REL_IA64_PCREL60B = 22
IMAGE_REL_IA64_PCREL60F = 23
IMAGE_REL_IA64_PCREL60I = 24
IMAGE_REL_IA64_PCREL60M = 25
IMAGE_REL_IA64_IMMGPREL64 = 26
IMAGE_REL_IA64_TOKEN = 27
IMAGE_REL_IA64_GPREL32 = 28
IMAGE_REL_IA64_ADDEND = 31
IMAGE_REL_CEF_ABSOLUTE = 0
IMAGE_REL_CEF_ADDR32 = 1
IMAGE_REL_CEF_ADDR64 = 2
IMAGE_REL_CEF_ADDR32NB = 3
IMAGE_REL_CEF_SECTION = 4
IMAGE_REL_CEF_SECREL = 5
IMAGE_REL_CEF_TOKEN = 6
IMAGE_REL_CEE_ABSOLUTE = 0
IMAGE_REL_CEE_ADDR32 = 1
IMAGE_REL_CEE_ADDR64 = 2
IMAGE_REL_CEE_ADDR32NB = 3
IMAGE_REL_CEE_SECTION = 4
IMAGE_REL_CEE_SECREL = 5
IMAGE_REL_CEE_TOKEN = 6
IMAGE_REL_M32R_ABSOLUTE = 0
IMAGE_REL_M32R_ADDR32 = 1
IMAGE_REL_M32R_ADDR32NB = 2
IMAGE_REL_M32R_ADDR24 = 3
IMAGE_REL_M32R_GPREL16 = 4
IMAGE_REL_M32R_PCREL24 = 5
IMAGE_REL_M32R_PCREL16 = 6
IMAGE_REL_M32R_PCREL8 = 7
IMAGE_REL_M32R_REFHALF = 8
IMAGE_REL_M32R_REFHI = 9
IMAGE_REL_M32R_REFLO = 10
IMAGE_REL_M32R_PAIR = 11
IMAGE_REL_M32R_SECTION = 12
IMAGE_REL_M32R_SECREL32 = 13
IMAGE_REL_M32R_TOKEN = 14
IMAGE_REL_EBC_ABSOLUTE = 0
IMAGE_REL_EBC_ADDR32NB = 1
IMAGE_REL_EBC_REL32 = 2
IMAGE_REL_EBC_SECTION = 3
IMAGE_REL_EBC_SECREL = 4
EMARCH_ENC_I17_IMM7B_INST_WORD_X = 3
EMARCH_ENC_I17_IMM7B_SIZE_X = 7
EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X = 4
EMARCH_ENC_I17_IMM7B_VAL_POS_X = 0
EMARCH_ENC_I17_IMM9D_INST_WORD_X = 3
EMARCH_ENC_I17_IMM9D_SIZE_X = 9
EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X = 18
EMARCH_ENC_I17_IMM9D_VAL_POS_X = 7
EMARCH_ENC_I17_IMM5C_INST_WORD_X = 3
EMARCH_ENC_I17_IMM5C_SIZE_X = 5
EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X = 13
EMARCH_ENC_I17_IMM5C_VAL_POS_X = 16
EMARCH_ENC_I17_IC_INST_WORD_X = 3
EMARCH_ENC_I17_IC_SIZE_X = 1
EMARCH_ENC_I17_IC_INST_WORD_POS_X = 12
EMARCH_ENC_I17_IC_VAL_POS_X = 21
EMARCH_ENC_I17_IMM41a_INST_WORD_X = 1
EMARCH_ENC_I17_IMM41a_SIZE_X = 10
EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X = 14
EMARCH_ENC_I17_IMM41a_VAL_POS_X = 22
EMARCH_ENC_I17_IMM41b_INST_WORD_X = 1
EMARCH_ENC_I17_IMM41b_SIZE_X = 8
EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X = 24
EMARCH_ENC_I17_IMM41b_VAL_POS_X = 32
EMARCH_ENC_I17_IMM41c_INST_WORD_X = 2
EMARCH_ENC_I17_IMM41c_SIZE_X = 23
EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X = 0
EMARCH_ENC_I17_IMM41c_VAL_POS_X = 40
EMARCH_ENC_I17_SIGN_INST_WORD_X = 3
EMARCH_ENC_I17_SIGN_SIZE_X = 1
EMARCH_ENC_I17_SIGN_INST_WORD_POS_X = 27
EMARCH_ENC_I17_SIGN_VAL_POS_X = 63
X3_OPCODE_INST_WORD_X = 3
X3_OPCODE_SIZE_X = 4
X3_OPCODE_INST_WORD_POS_X = 28
X3_OPCODE_SIGN_VAL_POS_X = 0
X3_I_INST_WORD_X = 3
X3_I_SIZE_X = 1
X3_I_INST_WORD_POS_X = 27
X3_I_SIGN_VAL_POS_X = 59
X3_D_WH_INST_WORD_X = 3
X3_D_WH_SIZE_X = 3
X3_D_WH_INST_WORD_POS_X = 24
X3_D_WH_SIGN_VAL_POS_X = 0
X3_IMM20_INST_WORD_X = 3
X3_IMM20_SIZE_X = 20
X3_IMM20_INST_WORD_POS_X = 4
X3_IMM20_SIGN_VAL_POS_X = 0
X3_IMM39_1_INST_WORD_X = 2
X3_IMM39_1_SIZE_X = 23
X3_IMM39_1_INST_WORD_POS_X = 0
X3_IMM39_1_SIGN_VAL_POS_X = 36
X3_IMM39_2_INST_WORD_X = 1
X3_IMM39_2_SIZE_X = 16
X3_IMM39_2_INST_WORD_POS_X = 16
X3_IMM39_2_SIGN_VAL_POS_X = 20
X3_P_INST_WORD_X = 3
X3_P_SIZE_X = 4
X3_P_INST_WORD_POS_X = 0
X3_P_SIGN_VAL_POS_X = 0
X3_TMPLT_INST_WORD_X = 0
X3_TMPLT_SIZE_X = 4
X3_TMPLT_INST_WORD_POS_X = 0
X3_TMPLT_SIGN_VAL_POS_X = 0
X3_BTYPE_QP_INST_WORD_X = 2
X3_BTYPE_QP_SIZE_X = 9
X3_BTYPE_QP_INST_WORD_POS_X = 23
X3_BTYPE_QP_INST_VAL_POS_X = 0
X3_EMPTY_INST_WORD_X = 1
X3_EMPTY_SIZE_X = 2
X3_EMPTY_INST_WORD_POS_X = 14
X3_EMPTY_INST_VAL_POS_X = 0
IMAGE_REL_BASED_ABSOLUTE = 0
IMAGE_REL_BASED_HIGH = 1
IMAGE_REL_BASED_LOW = 2
IMAGE_REL_BASED_HIGHLOW = 3
IMAGE_REL_BASED_HIGHADJ = 4
IMAGE_REL_BASED_MACHINE_SPECIFIC_5 = 5
IMAGE_REL_BASED_RESERVED = 6
IMAGE_REL_BASED_MACHINE_SPECIFIC_7 = 7
IMAGE_REL_BASED_MACHINE_SPECIFIC_8 = 8
IMAGE_REL_BASED_MACHINE_SPECIFIC_9 = 9
IMAGE_REL_BASED_DIR64 = 10
IMAGE_REL_BASED_IA64_IMM64 = 9
IMAGE_REL_BASED_MIPS_JMPADDR = 5
IMAGE_REL_BASED_MIPS_JMPADDR16 = 9
IMAGE_REL_BASED_ARM_MOV32 = 5
IMAGE_REL_BASED_THUMB_MOV32 = 7
IMAGE_ARCHIVE_START_SIZE = 8
IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 60
IMAGE_ORDINAL_FLAG64 = 9223372036854775808
IMAGE_ORDINAL_FLAG32 = 2147483648
IMAGE_ORDINAL_FLAG = 9223372036854775808
IMAGE_RESOURCE_NAME_IS_STRING = 2147483648
IMAGE_RESOURCE_DATA_IS_DIRECTORY = 2147483648
IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE = 1
IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE = 2
IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER = 3
IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER = 4
IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH = 5
IMAGE_HOT_PATCH_BASE_OBLIGATORY = 1
IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK = 2
IMAGE_HOT_PATCH_CHUNK_INVERSE = 2147483648
IMAGE_HOT_PATCH_CHUNK_OBLIGATORY = 1073741824
IMAGE_HOT_PATCH_CHUNK_RESERVED = 1072705536
IMAGE_HOT_PATCH_CHUNK_TYPE = 1032192
IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA = 32768
IMAGE_HOT_PATCH_CHUNK_TARGET_RVA = 16384
IMAGE_HOT_PATCH_CHUNK_SIZE = 4095
IMAGE_HOT_PATCH_NONE = 0
IMAGE_HOT_PATCH_FUNCTION = 114688
IMAGE_HOT_PATCH_ABSOLUTE = 180224
IMAGE_HOT_PATCH_REL32 = 245760
IMAGE_HOT_PATCH_CALL_TARGET = 278528
IMAGE_HOT_PATCH_INDIRECT = 376832
IMAGE_HOT_PATCH_NO_CALL_TARGET = 409600
IMAGE_HOT_PATCH_DYNAMIC_VALUE = 491520
IMAGE_GUARD_CF_INSTRUMENTED = 256
IMAGE_GUARD_CFW_INSTRUMENTED = 512
IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT = 1024
IMAGE_GUARD_SECURITY_COOKIE_UNUSED = 2048
IMAGE_GUARD_PROTECT_DELAYLOAD_IAT = 4096
IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION = 8192
IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT = 16384
IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION = 32768
IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT = 65536
IMAGE_GUARD_RF_INSTRUMENTED = 131072
IMAGE_GUARD_RF_ENABLE = 262144
IMAGE_GUARD_RF_STRICT = 524288
IMAGE_GUARD_RETPOLINE_PRESENT = 1048576
IMAGE_GUARD_EH_CONTINUATION_TABLE_PRESENT = 4194304
IMAGE_GUARD_XFG_ENABLED = 8388608
IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK = 4026531840
IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT = 28
IMAGE_GUARD_FLAG_FID_SUPPRESSED = 1
IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED = 2
IMAGE_GUARD_FLAG_FID_LANGEXCPTHANDLER = 4
IMAGE_GUARD_FLAG_FID_XFG = 8
IMAGE_ENCLAVE_LONG_ID_LENGTH = 32
IMAGE_ENCLAVE_SHORT_ID_LENGTH = 16
IMAGE_ENCLAVE_POLICY_DEBUGGABLE = 1
IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE = 1
IMAGE_ENCLAVE_IMPORT_MATCH_NONE = 0
IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID = 1
IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID = 2
IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID = 3
IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID = 4
IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 7
IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 8
IMAGE_DEBUG_TYPE_RESERVED10 = 10
IMAGE_DEBUG_TYPE_CLSID = 11
IMAGE_DEBUG_TYPE_VC_FEATURE = 12
IMAGE_DEBUG_TYPE_POGO = 13
IMAGE_DEBUG_TYPE_ILTCG = 14
IMAGE_DEBUG_TYPE_MPX = 15
IMAGE_DEBUG_TYPE_REPRO = 16
IMAGE_DEBUG_TYPE_EX_DLLCHARACTERISTICS = 20
FRAME_FPO = 0
FRAME_TRAP = 1
FRAME_TSS = 2
FRAME_NONFPO = 3
SIZEOF_RFPO_DATA = 16
IMAGE_DEBUG_MISC_EXENAME = 1
IMAGE_SEPARATE_DEBUG_SIGNATURE = 18756
NON_PAGED_DEBUG_SIGNATURE = 18766
IMAGE_SEPARATE_DEBUG_FLAGS_MASK = 32768
IMAGE_SEPARATE_DEBUG_MISMATCH = 32768
IMPORT_OBJECT_HDR_SIG2 = 65535
UNWIND_HISTORY_TABLE_SIZE = 12
RTL_RUN_ONCE_CHECK_ONLY = 1
RTL_RUN_ONCE_ASYNC = 2
RTL_RUN_ONCE_INIT_FAILED = 4
RTL_RUN_ONCE_CTX_RESERVED_BITS = 2
FAST_FAIL_LEGACY_GS_VIOLATION = 0
FAST_FAIL_VTGUARD_CHECK_FAILURE = 1
FAST_FAIL_STACK_COOKIE_CHECK_FAILURE = 2
FAST_FAIL_CORRUPT_LIST_ENTRY = 3
FAST_FAIL_INCORRECT_STACK = 4
FAST_FAIL_INVALID_ARG = 5
FAST_FAIL_GS_COOKIE_INIT = 6
FAST_FAIL_FATAL_APP_EXIT = 7
FAST_FAIL_RANGE_CHECK_FAILURE = 8
FAST_FAIL_UNSAFE_REGISTRY_ACCESS = 9
FAST_FAIL_GUARD_ICALL_CHECK_FAILURE = 10
FAST_FAIL_GUARD_WRITE_CHECK_FAILURE = 11
FAST_FAIL_INVALID_FIBER_SWITCH = 12
FAST_FAIL_INVALID_SET_OF_CONTEXT = 13
FAST_FAIL_INVALID_REFERENCE_COUNT = 14
FAST_FAIL_INVALID_JUMP_BUFFER = 18
FAST_FAIL_MRDATA_MODIFIED = 19
FAST_FAIL_CERTIFICATION_FAILURE = 20
FAST_FAIL_INVALID_EXCEPTION_CHAIN = 21
FAST_FAIL_CRYPTO_LIBRARY = 22
FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT = 23
FAST_FAIL_INVALID_IMAGE_BASE = 24
FAST_FAIL_DLOAD_PROTECTION_FAILURE = 25
FAST_FAIL_UNSAFE_EXTENSION_CALL = 26
FAST_FAIL_DEPRECATED_SERVICE_INVOKED = 27
FAST_FAIL_INVALID_BUFFER_ACCESS = 28
FAST_FAIL_INVALID_BALANCED_TREE = 29
FAST_FAIL_INVALID_NEXT_THREAD = 30
FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED = 31
FAST_FAIL_APCS_DISABLED = 32
FAST_FAIL_INVALID_IDLE_STATE = 33
FAST_FAIL_MRDATA_PROTECTION_FAILURE = 34
FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION = 35
FAST_FAIL_INVALID_LOCK_STATE = 36
FAST_FAIL_GUARD_JUMPTABLE = 37
FAST_FAIL_INVALID_LONGJUMP_TARGET = 38
FAST_FAIL_INVALID_DISPATCH_CONTEXT = 39
FAST_FAIL_INVALID_THREAD = 40
FAST_FAIL_INVALID_SYSCALL_NUMBER = 41
FAST_FAIL_INVALID_FILE_OPERATION = 42
FAST_FAIL_LPAC_ACCESS_DENIED = 43
FAST_FAIL_GUARD_SS_FAILURE = 44
FAST_FAIL_LOADER_CONTINUITY_FAILURE = 45
FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE = 46
FAST_FAIL_INVALID_CONTROL_STACK = 47
FAST_FAIL_SET_CONTEXT_DENIED = 48
FAST_FAIL_INVALID_IAT = 49
FAST_FAIL_HEAP_METADATA_CORRUPTION = 50
FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION = 51
FAST_FAIL_LOW_LABEL_ACCESS_DENIED = 52
FAST_FAIL_ENCLAVE_CALL_FAILURE = 53
FAST_FAIL_UNHANDLED_LSS_EXCEPTON = 54
FAST_FAIL_ADMINLESS_ACCESS_DENIED = 55
FAST_FAIL_UNEXPECTED_CALL = 56
FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS = 57
FAST_FAIL_UNEXPECTED_HOST_BEHAVIOR = 58
FAST_FAIL_FLAGS_CORRUPTION = 59
FAST_FAIL_VEH_CORRUPTION = 60
FAST_FAIL_ETW_CORRUPTION = 61
FAST_FAIL_RIO_ABORT = 62
FAST_FAIL_INVALID_PFN = 63
FAST_FAIL_GUARD_ICALL_CHECK_FAILURE_XFG = 64
FAST_FAIL_CAST_GUARD = 65
FAST_FAIL_HOST_VISIBILITY_CHANGE = 66
FAST_FAIL_KERNEL_CET_SHADOW_STACK_ASSIST = 67
FAST_FAIL_PATCH_CALLBACK_FAILED = 68
FAST_FAIL_NTDLL_PATCH_FAILED = 69
FAST_FAIL_INVALID_FLS_DATA = 70
FAST_FAIL_INVALID_FAST_FAIL_CODE = 4294967295
IS_TEXT_UNICODE_DBCS_LEADBYTE = 1024
IS_TEXT_UNICODE_UTF8 = 2048
COMPRESSION_FORMAT_NONE = 0
COMPRESSION_FORMAT_DEFAULT = 1
COMPRESSION_FORMAT_LZNT1 = 2
COMPRESSION_FORMAT_XPRESS = 3
COMPRESSION_FORMAT_XPRESS_HUFF = 4
COMPRESSION_FORMAT_XP10 = 5
COMPRESSION_ENGINE_STANDARD = 0
COMPRESSION_ENGINE_MAXIMUM = 256
COMPRESSION_ENGINE_HIBER = 512
SEF_AI_USE_EXTRA_PARAMS = 2048
SEF_FORCE_USER_MODE = 8192
MESSAGE_RESOURCE_UNICODE = 1
MESSAGE_RESOURCE_UTF8 = 2
VER_EQUAL = 1
VER_GREATER = 2
VER_GREATER_EQUAL = 3
VER_LESS = 4
VER_LESS_EQUAL = 5
VER_AND = 6
VER_OR = 7
VER_CONDITION_MASK = 7
VER_NUM_BITS_PER_CONDITION_MASK = 3
VER_NT_WORKSTATION = 1
VER_NT_DOMAIN_CONTROLLER = 2
VER_NT_SERVER = 3
RTL_UMS_VERSION = 256
VRL_PREDEFINED_CLASS_BEGIN = 1
VRL_CUSTOM_CLASS_BEGIN = 256
VRL_ENABLE_KERNEL_BREAKS = 2147483648
CTMF_INCLUDE_APPCONTAINER = 1
CTMF_INCLUDE_LPAC = 2
FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN = 1
WRITE_NV_MEMORY_FLAG_FLUSH = 1
WRITE_NV_MEMORY_FLAG_NON_TEMPORAL = 2
WRITE_NV_MEMORY_FLAG_NO_DRAIN = 256
FILL_NV_MEMORY_FLAG_FLUSH = 1
FILL_NV_MEMORY_FLAG_NON_TEMPORAL = 2
FILL_NV_MEMORY_FLAG_NO_DRAIN = 256
IMAGE_POLICY_METADATA_VERSION = 1
RTL_VIRTUAL_UNWIND2_VALIDATE_PAC = 1
RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO = 16777216
RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN = 33554432
RTL_CRITICAL_SECTION_FLAG_STATIC_INIT = 67108864
RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE = 134217728
RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO = 268435456
RTL_CRITICAL_SECTION_ALL_FLAG_BITS = 4278190080
RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT = 1
RTL_CONDITION_VARIABLE_LOCKMODE_SHARED = 1
HEAP_OPTIMIZE_RESOURCES_CURRENT_VERSION = 1
WT_EXECUTEINUITHREAD = 2
WT_EXECUTEINPERSISTENTIOTHREAD = 64
WT_EXECUTEINLONGTHREAD = 16
WT_EXECUTEDELETEWAIT = 8
ACTIVATION_CONTEXT_PATH_TYPE_NONE = 1
ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE = 2
ACTIVATION_CONTEXT_PATH_TYPE_URL = 3
ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF = 4
CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID = 1
PERFORMANCE_DATA_VERSION = 1
READ_THREAD_PROFILING_FLAG_DISPATCHING = 1
READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS = 2
UNIFIEDBUILDREVISION_MIN = 0
DLL_PROCESS_ATTACH = 1
DLL_THREAD_ATTACH = 2
DLL_THREAD_DETACH = 3
DLL_PROCESS_DETACH = 0
EVENTLOG_FORWARDS_READ = 4
EVENTLOG_BACKWARDS_READ = 8
EVENTLOG_START_PAIRED_EVENT = 1
EVENTLOG_END_PAIRED_EVENT = 2
EVENTLOG_END_ALL_PAIRED_EVENTS = 4
EVENTLOG_PAIRED_EVENT_ACTIVE = 8
EVENTLOG_PAIRED_EVENT_INACTIVE = 16
MAXLOGICALLOGNAMESIZE = 256
REG_REFRESH_HIVE = 2
REG_NO_LAZY_FLUSH = 4
REG_APP_HIVE = 16
REG_PROCESS_PRIVATE = 32
REG_START_JOURNAL = 64
REG_HIVE_EXACT_FILE_GROWTH = 128
REG_HIVE_NO_RM = 256
REG_HIVE_SINGLE_LOG = 512
REG_BOOT_HIVE = 1024
REG_LOAD_HIVE_OPEN_HANDLE = 2048
REG_FLUSH_HIVE_FILE_GROWTH = 4096
REG_OPEN_READ_ONLY = 8192
REG_IMMUTABLE = 16384
REG_NO_IMPERSONATION_FALLBACK = 32768
REG_APP_HIVE_OPEN_READ_ONLY = 8192
REG_FORCE_UNLOAD = 1
REG_UNLOAD_LEGAL_FLAGS = 1
SERVICE_USER_SERVICE = 64
SERVICE_USERSERVICE_INSTANCE = 128
SERVICE_INTERACTIVE_PROCESS = 256
SERVICE_PKG_SERVICE = 512
CM_SERVICE_NETWORK_BOOT_LOAD = 1
CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD = 2
CM_SERVICE_USB_DISK_BOOT_LOAD = 4
CM_SERVICE_SD_DISK_BOOT_LOAD = 8
CM_SERVICE_USB3_DISK_BOOT_LOAD = 16
CM_SERVICE_MEASURED_BOOT_LOAD = 32
CM_SERVICE_VERIFIER_BOOT_LOAD = 64
CM_SERVICE_WINPE_BOOT_LOAD = 128
CM_SERVICE_RAM_DISK_BOOT_LOAD = 256
TAPE_PSEUDO_LOGICAL_POSITION = 2
TAPE_PSEUDO_LOGICAL_BLOCK = 3
TAPE_DRIVE_FIXED = 1
TAPE_DRIVE_SELECT = 2
TAPE_DRIVE_INITIATOR = 4
TAPE_DRIVE_ERASE_SHORT = 16
TAPE_DRIVE_ERASE_LONG = 32
TAPE_DRIVE_ERASE_BOP_ONLY = 64
TAPE_DRIVE_ERASE_IMMEDIATE = 128
TAPE_DRIVE_TAPE_CAPACITY = 256
TAPE_DRIVE_TAPE_REMAINING = 512
TAPE_DRIVE_FIXED_BLOCK = 1024
TAPE_DRIVE_VARIABLE_BLOCK = 2048
TAPE_DRIVE_WRITE_PROTECT = 4096
TAPE_DRIVE_EOT_WZ_SIZE = 8192
TAPE_DRIVE_ECC = 65536
TAPE_DRIVE_COMPRESSION = 131072
TAPE_DRIVE_PADDING = 262144
TAPE_DRIVE_REPORT_SMKS = 524288
TAPE_DRIVE_GET_ABSOLUTE_BLK = 1048576
TAPE_DRIVE_GET_LOGICAL_BLK = 2097152
TAPE_DRIVE_SET_EOT_WZ_SIZE = 4194304
TAPE_DRIVE_EJECT_MEDIA = 16777216
TAPE_DRIVE_CLEAN_REQUESTS = 33554432
TAPE_DRIVE_SET_CMP_BOP_ONLY = 67108864
TAPE_DRIVE_RESERVED_BIT = 2147483648
TAPE_DRIVE_FORMAT = 2684354560
TAPE_DRIVE_FORMAT_IMMEDIATE = 3221225472
TAPE_DRIVE_HIGH_FEATURES = 2147483648
TAPE_QUERY_DRIVE_PARAMETERS = 0
TAPE_QUERY_MEDIA_CAPACITY = 1
TAPE_CHECK_FOR_DRIVE_PROBLEM = 2
TAPE_QUERY_IO_ERROR_DATA = 3
TAPE_QUERY_DEVICE_ERROR_DATA = 4
TRANSACTIONMANAGER_QUERY_INFORMATION = 1
TRANSACTIONMANAGER_SET_INFORMATION = 2
TRANSACTIONMANAGER_RECOVER = 4
TRANSACTIONMANAGER_RENAME = 8
TRANSACTIONMANAGER_CREATE_RM = 16
TRANSACTIONMANAGER_BIND_TRANSACTION = 32
TRANSACTION_QUERY_INFORMATION = 1
TRANSACTION_SET_INFORMATION = 2
TRANSACTION_ENLIST = 4
TRANSACTION_COMMIT = 8
TRANSACTION_ROLLBACK = 16
TRANSACTION_PROPAGATE = 32
TRANSACTION_RIGHT_RESERVED1 = 64
RESOURCEMANAGER_QUERY_INFORMATION = 1
RESOURCEMANAGER_SET_INFORMATION = 2
RESOURCEMANAGER_RECOVER = 4
RESOURCEMANAGER_ENLIST = 8
RESOURCEMANAGER_GET_NOTIFICATION = 16
RESOURCEMANAGER_REGISTER_PROTOCOL = 32
RESOURCEMANAGER_COMPLETE_PROPAGATION = 64
ENLISTMENT_QUERY_INFORMATION = 1
ENLISTMENT_SET_INFORMATION = 2
ENLISTMENT_RECOVER = 4
ENLISTMENT_SUBORDINATE_RIGHTS = 8
ENLISTMENT_SUPERIOR_RIGHTS = 16
PcTeb = 24
ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION = 1
ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION = 2
ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION = 3
ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION = 4
ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION = 5
ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION = 6
ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION = 7
ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE = 8
ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES = 9
ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS = 10
ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO = 11
ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES = 12
BSF_MSGSRV32ISOK = 2147483648
BSF_MSGSRV32ISOK_BIT = 31
DBT_APPYBEGIN = 0
DBT_APPYEND = 1
DBT_DEVNODES_CHANGED = 7
DBT_QUERYCHANGECONFIG = 23
DBT_CONFIGCHANGED = 24
DBT_CONFIGCHANGECANCELED = 25
DBT_MONITORCHANGE = 27
DBT_SHELLLOGGEDON = 32
DBT_CONFIGMGAPI32 = 34
DBT_VXDINITCOMPLETE = 35
DBT_VOLLOCKQUERYLOCK = 32833
DBT_VOLLOCKLOCKTAKEN = 32834
DBT_VOLLOCKLOCKFAILED = 32835
DBT_VOLLOCKQUERYUNLOCK = 32836
DBT_VOLLOCKLOCKRELEASED = 32837
DBT_VOLLOCKUNLOCKFAILED = 32838
LOCKP_ALLOW_WRITES = 1
LOCKP_FAIL_WRITES = 0
LOCKP_FAIL_MEM_MAPPING = 2
LOCKP_ALLOW_MEM_MAPPING = 0
LOCKP_USER_MASK = 3
LOCKP_LOCK_FOR_FORMAT = 4
LOCKF_LOGICAL_LOCK = 0
LOCKF_PHYSICAL_LOCK = 1
DBT_NO_DISK_SPACE = 71
DBT_LOW_DISK_SPACE = 72
DBT_CONFIGMGPRIVATE = 32767
DBT_DEVICEARRIVAL = 32768
DBT_DEVICEQUERYREMOVE = 32769
DBT_DEVICEQUERYREMOVEFAILED = 32770
DBT_DEVICEREMOVEPENDING = 32771
DBT_DEVICEREMOVECOMPLETE = 32772
DBT_DEVICETYPESPECIFIC = 32773
DBT_CUSTOMEVENT = 32774
DBT_DEVTYP_DEVNODE = 1
DBT_DEVTYP_NET = 4
DBTF_RESOURCE = 1
DBTF_XPORT = 2
DBTF_SLOWNET = 4
DBT_VPOWERDAPI = 33024
DBT_USERDEFINED = 65535
GUID_IO_VOLUME_CHANGE = '7373654a-812a-11d0-bec7-08002be2092f'
GUID_IO_VOLUME_DISMOUNT = 'd16a55e8-1059-11d2-8ffd-00a0c9a06d32'
GUID_IO_VOLUME_DISMOUNT_FAILED = 'e3c5b178-105d-11d2-8ffd-00a0c9a06d32'
GUID_IO_VOLUME_MOUNT = 'b5804878-1a96-11d2-8ffd-00a0c9a06d32'
GUID_IO_VOLUME_LOCK = '50708874-c9af-11d1-8fef-00a0c9a06d32'
GUID_IO_VOLUME_LOCK_FAILED = 'ae2eed10-0ba8-11d2-8ffb-00a0c9a06d32'
GUID_IO_VOLUME_UNLOCK = '9a8c3d68-d0cb-11d1-8fef-00a0c9a06d32'
GUID_IO_VOLUME_NAME_CHANGE = '2de97f83-4c06-11d2-a532-00609713055a'
GUID_IO_VOLUME_NEED_CHKDSK = '799a0960-0a0b-4e03-ad88-2fa7c6ce748a'
GUID_IO_VOLUME_WORM_NEAR_FULL = 'f3bfff82-f3de-48d2-af95-457f80b763f2'
GUID_IO_VOLUME_WEARING_OUT = '873113ca-1486-4508-82ac-c3b2e5297aaa'
GUID_IO_VOLUME_FORCE_CLOSED = '411ad84f-433e-4dc2-a5ae-4a2d1a2de654'
GUID_IO_VOLUME_INFO_MAKE_COMPAT = '3ab9a0d2-ef80-45cf-8cdc-cbe02a212906'
GUID_IO_VOLUME_PREPARING_EJECT = 'c79eb16e-0dac-4e7a-a86c-b25ceeaa88f6'
GUID_IO_VOLUME_BACKGROUND_FORMAT = 'a2e5fc86-d5cd-4038-b2e3-4445065c2377'
GUID_IO_VOLUME_PHYSICAL_CONFIGURATION_CHANGE = '2de97f84-4c06-11d2-a532-00609713055a'
GUID_IO_VOLUME_UNIQUE_ID_CHANGE = 'af39da42-6622-41f5-970b-139d092fa3d9'
GUID_IO_VOLUME_FVE_STATUS_CHANGE = '062998b2-ee1f-4b6a-b857-e76cbbe9a6da'
GUID_IO_VOLUME_DEVICE_INTERFACE = '53f5630d-b6bf-11d0-94f2-00a0c91efb8b'
GUID_IO_VOLUME_CHANGE_SIZE = '3a1625be-ad03-49f1-8ef8-6bbac182d1fd'
GUID_IO_MEDIA_ARRIVAL = 'd07433c0-a98e-11d2-917a-00a0c9068ff3'
GUID_IO_MEDIA_REMOVAL = 'd07433c1-a98e-11d2-917a-00a0c9068ff3'
GUID_IO_CDROM_EXCLUSIVE_LOCK = 'bc56c139-7a10-47ee-a294-4c6a38f0149a'
GUID_IO_CDROM_EXCLUSIVE_UNLOCK = 'a3b6d27d-5e35-4885-81e5-ee18c00ed779'
GUID_IO_DEVICE_BECOMING_READY = 'd07433f0-a98e-11d2-917a-00a0c9068ff3'
GUID_IO_DEVICE_EXTERNAL_REQUEST = 'd07433d0-a98e-11d2-917a-00a0c9068ff3'
GUID_IO_MEDIA_EJECT_REQUEST = 'd07433d1-a98e-11d2-917a-00a0c9068ff3'
GUID_IO_DRIVE_REQUIRES_CLEANING = '7207877c-90ed-44e5-a000-81428d4c79bb'
GUID_IO_TAPE_ERASE = '852d11eb-4bb8-4507-9d9b-417cc2b1b438'
GUID_DEVICE_EVENT_RBC = 'd0744792-a98e-11d2-917a-00a0c9068ff3'
GUID_IO_DISK_CLONE_ARRIVAL = '6a61885b-7c39-43dd-9b56-b8ac22a549aa'
GUID_IO_DISK_LAYOUT_CHANGE = '11dff54c-8469-41f9-b3de-ef836487c54a'
GUID_IO_DISK_HEALTH_NOTIFICATION = '0f1bd644-3916-49c5-b063-991940118fb2'
D3DNTHAL_NUMCLIPVERTICES = 20
D3DNTHAL_SCENE_CAPTURE_START = 0
D3DNTHAL_SCENE_CAPTURE_END = 1
D3DNTHAL_CONTEXT_BAD = 512
D3DNTHAL_OUTOFCONTEXTS = 513
D3DNTHAL2_CB32_SETRENDERTARGET = 1
D3DHAL_STATESETBEGIN = 0
D3DHAL_STATESETEND = 1
D3DHAL_STATESETDELETE = 2
D3DHAL_STATESETEXECUTE = 3
D3DHAL_STATESETCAPTURE = 4
D3DNTHALDP2_USERMEMVERTICES = 1
D3DNTHALDP2_EXECUTEBUFFER = 2
D3DNTHALDP2_SWAPVERTEXBUFFER = 4
D3DNTHALDP2_SWAPCOMMANDBUFFER = 8
D3DNTHALDP2_REQVERTEXBUFSIZE = 16
D3DNTHALDP2_REQCOMMANDBUFSIZE = 32
D3DNTHALDP2_VIDMEMVERTEXBUF = 64
D3DNTHALDP2_VIDMEMCOMMANDBUF = 128
D3DNTHAL3_CB32_CLEAR2 = 1
D3DNTHAL3_CB32_RESERVED = 2
D3DNTHAL3_CB32_VALIDATETEXTURESTAGESTATE = 4
D3DNTHAL3_CB32_DRAWPRIMITIVES2 = 8
D3DNTHAL_TSS_RENDERSTATEBASE = 256
D3DNTHAL_TSS_MAXSTAGES = 8
D3DNTHAL_TSS_STATESPERSTAGE = 64
D3DTSS_TEXTUREMAP = 0
D3DHAL_SAMPLER_MAXSAMP = 16
D3DHAL_SAMPLER_MAXVERTEXSAMP = 4
D3DPMISCCAPS_LINEPATTERNREP = 4
D3DRS_MAXVERTEXSHADERINST = 196
D3DRS_MAXPIXELSHADERINST = 197
D3DRENDERSTATE_EVICTMANAGEDTEXTURES = 61
D3DRENDERSTATE_SCENECAPTURE = 62
_NT_D3DRS_DELETERTPATCH = 169
D3DINFINITEINSTRUCTIONS = 4294967295
D3DNTHAL_STATESETCREATE = 5
D3DNTCLEAR_COMPUTERECTS = 8
_NT_RTPATCHFLAG_HASSEGS = 1
_NT_RTPATCHFLAG_HASINFO = 2
D3DNTHAL_ROW_WEIGHTS = 1
D3DNTHAL_COL_WEIGHTS = 2
DP2BLT_POINT = 1
DP2BLT_LINEAR = 2
DDBLT_EXTENDED_PRESENTATION_STRETCHFACTOR = 16
_NT_D3DGDI2_MAGIC = 4294967295
_NT_D3DGDI2_TYPE_GETD3DCAPS8 = 1
_NT_D3DGDI2_TYPE_GETFORMATCOUNT = 2
_NT_D3DGDI2_TYPE_GETFORMAT = 3
_NT_D3DGDI2_TYPE_DXVERSION = 4
_NT_D3DGDI2_TYPE_DEFERRED_AGP_AWARE = 24
_NT_D3DGDI2_TYPE_FREE_DEFERRED_AGP = 25
_NT_D3DGDI2_TYPE_DEFER_AGP_FREES = 32
_NT_D3DGDI2_TYPE_GETD3DCAPS9 = 16
_NT_D3DGDI2_TYPE_GETEXTENDEDMODECOUNT = 17
_NT_D3DGDI2_TYPE_GETEXTENDEDMODE = 18
_NT_D3DGDI2_TYPE_GETADAPTERGROUP = 19
_NT_D3DGDI2_TYPE_GETMULTISAMPLEQUALITYLEVELS = 22
_NT_D3DGDI2_TYPE_GETD3DQUERYCOUNT = 33
_NT_D3DGDI2_TYPE_GETD3DQUERY = 34
_NT_D3DGDI2_TYPE_GETDDIVERSION = 35
DX9_DDI_VERSION = 4
_NT_D3DDEVCAPS_HWVERTEXBUFFER = 33554432
_NT_D3DDEVCAPS_HWINDEXBUFFER = 67108864
_NT_D3DDEVCAPS_SUBVOLUMELOCK = 134217728
_NT_D3DPMISCCAPS_FOGINFVF = 8192
_NT_D3DFVF_FOG = 8192
D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE = 8388608
_NT_D3DVS_MAXINSTRUCTIONCOUNT_V1_1 = 128
_NT_D3DVS_LABEL_MAX_V3_0 = 2048
_NT_D3DVS_TCRDOUTREG_MAX_V1_1 = 8
_NT_D3DVS_TCRDOUTREG_MAX_V2_0 = 8
_NT_D3DVS_TCRDOUTREG_MAX_V2_1 = 8
_NT_D3DVS_OUTPUTREG_MAX_V3_0 = 12
_NT_D3DVS_OUTPUTREG_MAX_SW_DX9 = 16
_NT_D3DVS_ATTROUTREG_MAX_V1_1 = 2
_NT_D3DVS_ATTROUTREG_MAX_V2_0 = 2
_NT_D3DVS_ATTROUTREG_MAX_V2_1 = 2
_NT_D3DVS_INPUTREG_MAX_V1_1 = 16
_NT_D3DVS_INPUTREG_MAX_V2_0 = 16
_NT_D3DVS_INPUTREG_MAX_V2_1 = 16
_NT_D3DVS_INPUTREG_MAX_V3_0 = 16
_NT_D3DVS_TEMPREG_MAX_V1_1 = 12
_NT_D3DVS_TEMPREG_MAX_V2_0 = 12
_NT_D3DVS_TEMPREG_MAX_V2_1 = 32
_NT_D3DVS_TEMPREG_MAX_V3_0 = 32
_NT_D3DVS_CONSTREG_MAX_V1_1 = 96
_NT_D3DVS_CONSTREG_MAX_V2_0 = 8192
_NT_D3DVS_CONSTREG_MAX_V2_1 = 8192
_NT_D3DVS_CONSTREG_MAX_V3_0 = 8192
_NT_D3DVS_CONSTINTREG_MAX_SW_DX9 = 2048
_NT_D3DVS_CONSTINTREG_MAX_V2_0 = 16
_NT_D3DVS_CONSTINTREG_MAX_V2_1 = 16
_NT_D3DVS_CONSTINTREG_MAX_V3_0 = 16
_NT_D3DVS_CONSTBOOLREG_MAX_SW_DX9 = 2048
_NT_D3DVS_CONSTBOOLREG_MAX_V2_0 = 16
_NT_D3DVS_CONSTBOOLREG_MAX_V2_1 = 16
_NT_D3DVS_CONSTBOOLREG_MAX_V3_0 = 16
_NT_D3DVS_ADDRREG_MAX_V1_1 = 1
_NT_D3DVS_ADDRREG_MAX_V2_0 = 1
_NT_D3DVS_ADDRREG_MAX_V2_1 = 1
_NT_D3DVS_ADDRREG_MAX_V3_0 = 1
_NT_D3DVS_MAXLOOPSTEP_V2_0 = 128
_NT_D3DVS_MAXLOOPSTEP_V2_1 = 128
_NT_D3DVS_MAXLOOPSTEP_V3_0 = 128
_NT_D3DVS_MAXLOOPINITVALUE_V2_0 = 255
_NT_D3DVS_MAXLOOPINITVALUE_V2_1 = 255
_NT_D3DVS_MAXLOOPINITVALUE_V3_0 = 255
_NT_D3DVS_MAXLOOPITERATIONCOUNT_V2_0 = 255
_NT_D3DVS_MAXLOOPITERATIONCOUNT_V2_1 = 255
_NT_D3DVS_MAXLOOPITERATIONCOUNT_V3_0 = 255
_NT_D3DVS_PREDICATE_MAX_V2_1 = 1
_NT_D3DVS_PREDICATE_MAX_V3_0 = 1
_NT_D3DPS_INPUTREG_MAX_V1_1 = 2
_NT_D3DPS_INPUTREG_MAX_V1_2 = 2
_NT_D3DPS_INPUTREG_MAX_V1_3 = 2
_NT_D3DPS_INPUTREG_MAX_V1_4 = 2
_NT_D3DPS_INPUTREG_MAX_V2_0 = 2
_NT_D3DPS_INPUTREG_MAX_V2_1 = 2
_NT_D3DPS_INPUTREG_MAX_V3_0 = 12
_NT_D3DPS_TEMPREG_MAX_V1_1 = 2
_NT_D3DPS_TEMPREG_MAX_V1_2 = 2
_NT_D3DPS_TEMPREG_MAX_V1_3 = 2
_NT_D3DPS_TEMPREG_MAX_V1_4 = 6
_NT_D3DPS_TEMPREG_MAX_V2_0 = 12
_NT_D3DPS_TEMPREG_MAX_V2_1 = 32
_NT_D3DPS_TEMPREG_MAX_V3_0 = 32
_NT_D3DPS_TEXTUREREG_MAX_V1_1 = 4
_NT_D3DPS_TEXTUREREG_MAX_V1_2 = 4
_NT_D3DPS_TEXTUREREG_MAX_V1_3 = 4
_NT_D3DPS_TEXTUREREG_MAX_V1_4 = 6
_NT_D3DPS_TEXTUREREG_MAX_V2_0 = 8
_NT_D3DPS_TEXTUREREG_MAX_V2_1 = 8
_NT_D3DPS_TEXTUREREG_MAX_V3_0 = 0
_NT_D3DPS_COLOROUT_MAX_V2_0 = 4
_NT_D3DPS_COLOROUT_MAX_V2_1 = 4
_NT_D3DPS_COLOROUT_MAX_V3_0 = 4
_NT_D3DPS_PREDICATE_MAX_V2_1 = 1
_NT_D3DPS_PREDICATE_MAX_V3_0 = 1
_NT_D3DPS_CONSTREG_MAX_SW_DX9 = 8192
_NT_D3DPS_CONSTREG_MAX_V1_1 = 8
_NT_D3DPS_CONSTREG_MAX_V1_2 = 8
_NT_D3DPS_CONSTREG_MAX_V1_3 = 8
_NT_D3DPS_CONSTREG_MAX_V1_4 = 8
_NT_D3DPS_CONSTREG_MAX_V2_0 = 32
_NT_D3DPS_CONSTREG_MAX_V2_1 = 32
_NT_D3DPS_CONSTREG_MAX_V3_0 = 224
_NT_D3DPS_CONSTBOOLREG_MAX_SW_DX9 = 2048
_NT_D3DPS_CONSTBOOLREG_MAX_V2_1 = 16
_NT_D3DPS_CONSTBOOLREG_MAX_V3_0 = 16
_NT_D3DPS_CONSTINTREG_MAX_SW_DX9 = 2048
_NT_D3DPS_CONSTINTREG_MAX_V2_1 = 16
_NT_D3DPS_CONSTINTREG_MAX_V3_0 = 16
_NT_D3DPS_MAXLOOPSTEP_V2_1 = 128
_NT_D3DPS_MAXLOOPSTEP_V3_0 = 128
_NT_D3DPS_MAXLOOPINITVALUE_V2_1 = 255
_NT_D3DPS_MAXLOOPINITVALUE_V3_0 = 255
_NT_D3DPS_MAXLOOPITERATIONCOUNT_V2_1 = 255
_NT_D3DPS_MAXLOOPITERATIONCOUNT_V3_0 = 255
_NT_D3DPS_INPUTREG_MAX_DX8 = 8
_NT_D3DPS_TEMPREG_MAX_DX8 = 8
_NT_D3DPS_CONSTREG_MAX_DX8 = 8
_NT_D3DPS_TEXTUREREG_MAX_DX8 = 8
D3DVSDT_FLOAT1 = 0
D3DVSDT_FLOAT2 = 1
D3DVSDT_FLOAT3 = 2
D3DVSDT_FLOAT4 = 3
D3DVSDT_D3DCOLOR = 4
D3DVSDT_UBYTE4 = 5
D3DVSDT_SHORT2 = 6
D3DVSDT_SHORT4 = 7
D3DVSDE_POSITION = 0
D3DVSDE_BLENDWEIGHT = 1
D3DVSDE_BLENDINDICES = 2
D3DVSDE_NORMAL = 3
D3DVSDE_PSIZE = 4
D3DVSDE_DIFFUSE = 5
D3DVSDE_SPECULAR = 6
D3DVSDE_TEXCOORD0 = 7
D3DVSDE_TEXCOORD1 = 8
D3DVSDE_TEXCOORD2 = 9
D3DVSDE_TEXCOORD3 = 10
D3DVSDE_TEXCOORD4 = 11
D3DVSDE_TEXCOORD5 = 12
D3DVSDE_TEXCOORD6 = 13
D3DVSDE_TEXCOORD7 = 14
D3DVSDE_POSITION2 = 15
D3DVSDE_NORMAL2 = 16
D3DVSD_TOKENTYPESHIFT = 29
D3DVSD_STREAMNUMBERSHIFT = 0
D3DVSD_DATALOADTYPESHIFT = 28
D3DVSD_DATATYPESHIFT = 16
D3DVSD_SKIPCOUNTSHIFT = 16
D3DVSD_VERTEXREGSHIFT = 0
D3DVSD_VERTEXREGINSHIFT = 20
D3DVSD_CONSTCOUNTSHIFT = 25
D3DVSD_CONSTADDRESSSHIFT = 0
D3DVSD_CONSTRSSHIFT = 16
D3DVSD_EXTCOUNTSHIFT = 24
D3DVSD_EXTINFOSHIFT = 0
D3DVSD_STREAMTESSSHIFT = 28
DIRECT3D_VERSION = 1792
D3DTRANSFORMCAPS_CLIP = 1
D3DLIGHTINGMODEL_RGB = 1
D3DLIGHTINGMODEL_MONO = 2
D3DLIGHTCAPS_POINT = 1
D3DLIGHTCAPS_SPOT = 2
D3DLIGHTCAPS_DIRECTIONAL = 4
D3DLIGHTCAPS_PARALLELPOINT = 8
D3DLIGHTCAPS_GLSPOT = 16
D3DPMISCCAPS_MASKPLANES = 1
D3DPMISCCAPS_MASKZ = 2
D3DPMISCCAPS_CONFORMANT = 8
D3DPMISCCAPS_CULLNONE = 16
D3DPMISCCAPS_CULLCW = 32
D3DPMISCCAPS_CULLCCW = 64
D3DPRASTERCAPS_DITHER = 1
D3DPRASTERCAPS_ROP2 = 2
D3DPRASTERCAPS_XOR = 4
D3DPRASTERCAPS_PAT = 8
D3DPRASTERCAPS_ZTEST = 16
D3DPRASTERCAPS_SUBPIXEL = 32
D3DPRASTERCAPS_SUBPIXELX = 64
D3DPRASTERCAPS_FOGVERTEX = 128
D3DPRASTERCAPS_FOGTABLE = 256
D3DPRASTERCAPS_STIPPLE = 512
D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT = 1024
D3DPRASTERCAPS_ANTIALIASSORTINDEPENDENT = 2048
D3DPRASTERCAPS_ANTIALIASEDGES = 4096
D3DPRASTERCAPS_MIPMAPLODBIAS = 8192
D3DPRASTERCAPS_ZBIAS = 16384
D3DPRASTERCAPS_ZBUFFERLESSHSR = 32768
D3DPRASTERCAPS_FOGRANGE = 65536
D3DPRASTERCAPS_ANISOTROPY = 131072
D3DPRASTERCAPS_WBUFFER = 262144
D3DPRASTERCAPS_TRANSLUCENTSORTINDEPENDENT = 524288
D3DPRASTERCAPS_WFOG = 1048576
D3DPRASTERCAPS_ZFOG = 2097152
D3DPCMPCAPS_NEVER = 1
D3DPCMPCAPS_LESS = 2
D3DPCMPCAPS_EQUAL = 4
D3DPCMPCAPS_LESSEQUAL = 8
D3DPCMPCAPS_GREATER = 16
D3DPCMPCAPS_NOTEQUAL = 32
D3DPCMPCAPS_GREATEREQUAL = 64
D3DPCMPCAPS_ALWAYS = 128
D3DPBLENDCAPS_ZERO = 1
D3DPBLENDCAPS_ONE = 2
D3DPBLENDCAPS_SRCCOLOR = 4
D3DPBLENDCAPS_INVSRCCOLOR = 8
D3DPBLENDCAPS_SRCALPHA = 16
D3DPBLENDCAPS_INVSRCALPHA = 32
D3DPBLENDCAPS_DESTALPHA = 64
D3DPBLENDCAPS_INVDESTALPHA = 128
D3DPBLENDCAPS_DESTCOLOR = 256
D3DPBLENDCAPS_INVDESTCOLOR = 512
D3DPBLENDCAPS_SRCALPHASAT = 1024
D3DPBLENDCAPS_BOTHSRCALPHA = 2048
D3DPBLENDCAPS_BOTHINVSRCALPHA = 4096
D3DPSHADECAPS_COLORFLATMONO = 1
D3DPSHADECAPS_COLORFLATRGB = 2
D3DPSHADECAPS_COLORGOURAUDMONO = 4
D3DPSHADECAPS_COLORGOURAUDRGB = 8
D3DPSHADECAPS_COLORPHONGMONO = 16
D3DPSHADECAPS_COLORPHONGRGB = 32
D3DPSHADECAPS_SPECULARFLATMONO = 64
D3DPSHADECAPS_SPECULARFLATRGB = 128
D3DPSHADECAPS_SPECULARGOURAUDMONO = 256
D3DPSHADECAPS_SPECULARGOURAUDRGB = 512
D3DPSHADECAPS_SPECULARPHONGMONO = 1024
D3DPSHADECAPS_SPECULARPHONGRGB = 2048
D3DPSHADECAPS_ALPHAFLATBLEND = 4096
D3DPSHADECAPS_ALPHAFLATSTIPPLED = 8192
D3DPSHADECAPS_ALPHAGOURAUDBLEND = 16384
D3DPSHADECAPS_ALPHAGOURAUDSTIPPLED = 32768
D3DPSHADECAPS_ALPHAPHONGBLEND = 65536
D3DPSHADECAPS_ALPHAPHONGSTIPPLED = 131072
D3DPSHADECAPS_FOGFLAT = 262144
D3DPSHADECAPS_FOGGOURAUD = 524288
D3DPSHADECAPS_FOGPHONG = 1048576
D3DPTEXTURECAPS_PERSPECTIVE = 1
D3DPTEXTURECAPS_POW2 = 2
D3DPTEXTURECAPS_ALPHA = 4
D3DPTEXTURECAPS_TRANSPARENCY = 8
D3DPTEXTURECAPS_BORDER = 16
D3DPTEXTURECAPS_SQUAREONLY = 32
D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE = 64
D3DPTEXTURECAPS_ALPHAPALETTE = 128
D3DPTEXTURECAPS_NONPOW2CONDITIONAL = 256
D3DPTEXTURECAPS_PROJECTED = 1024
D3DPTEXTURECAPS_CUBEMAP = 2048
D3DPTEXTURECAPS_COLORKEYBLEND = 4096
D3DPTFILTERCAPS_NEAREST = 1
D3DPTFILTERCAPS_LINEAR = 2
D3DPTFILTERCAPS_MIPNEAREST = 4
D3DPTFILTERCAPS_MIPLINEAR = 8
D3DPTFILTERCAPS_LINEARMIPNEAREST = 16
D3DPTFILTERCAPS_LINEARMIPLINEAR = 32
D3DPTFILTERCAPS_MINFPOINT = 256
D3DPTFILTERCAPS_MINFLINEAR = 512
D3DPTFILTERCAPS_MINFANISOTROPIC = 1024
D3DPTFILTERCAPS_MIPFPOINT = 65536
D3DPTFILTERCAPS_MIPFLINEAR = 131072
D3DPTFILTERCAPS_MAGFPOINT = 16777216
D3DPTFILTERCAPS_MAGFLINEAR = 33554432
D3DPTFILTERCAPS_MAGFANISOTROPIC = 67108864
D3DPTFILTERCAPS_MAGFAFLATCUBIC = 134217728
D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC = 268435456
D3DPTBLENDCAPS_DECAL = 1
D3DPTBLENDCAPS_MODULATE = 2
D3DPTBLENDCAPS_DECALALPHA = 4
D3DPTBLENDCAPS_MODULATEALPHA = 8
D3DPTBLENDCAPS_DECALMASK = 16
D3DPTBLENDCAPS_MODULATEMASK = 32
D3DPTBLENDCAPS_COPY = 64
D3DPTBLENDCAPS_ADD = 128
D3DPTADDRESSCAPS_WRAP = 1
D3DPTADDRESSCAPS_MIRROR = 2
D3DPTADDRESSCAPS_CLAMP = 4
D3DPTADDRESSCAPS_BORDER = 8
D3DPTADDRESSCAPS_INDEPENDENTUV = 16
D3DSTENCILCAPS_KEEP = 1
D3DSTENCILCAPS_ZERO = 2
D3DSTENCILCAPS_REPLACE = 4
D3DSTENCILCAPS_INCRSAT = 8
D3DSTENCILCAPS_DECRSAT = 16
D3DSTENCILCAPS_INVERT = 32
D3DSTENCILCAPS_INCR = 64
D3DSTENCILCAPS_DECR = 128
D3DTEXOPCAPS_DISABLE = 1
D3DTEXOPCAPS_SELECTARG1 = 2
D3DTEXOPCAPS_SELECTARG2 = 4
D3DTEXOPCAPS_MODULATE = 8
D3DTEXOPCAPS_MODULATE2X = 16
D3DTEXOPCAPS_MODULATE4X = 32
D3DTEXOPCAPS_ADD = 64
D3DTEXOPCAPS_ADDSIGNED = 128
D3DTEXOPCAPS_ADDSIGNED2X = 256
D3DTEXOPCAPS_SUBTRACT = 512
D3DTEXOPCAPS_ADDSMOOTH = 1024
D3DTEXOPCAPS_BLENDDIFFUSEALPHA = 2048
D3DTEXOPCAPS_BLENDTEXTUREALPHA = 4096
D3DTEXOPCAPS_BLENDFACTORALPHA = 8192
D3DTEXOPCAPS_BLENDTEXTUREALPHAPM = 16384
D3DTEXOPCAPS_BLENDCURRENTALPHA = 32768
D3DTEXOPCAPS_PREMODULATE = 65536
D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR = 131072
D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA = 262144
D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR = 524288
D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA = 1048576
D3DTEXOPCAPS_BUMPENVMAP = 2097152
D3DTEXOPCAPS_BUMPENVMAPLUMINANCE = 4194304
D3DTEXOPCAPS_DOTPRODUCT3 = 8388608
D3DFVFCAPS_TEXCOORDCOUNTMASK = 65535
D3DFVFCAPS_DONOTSTRIPELEMENTS = 524288
D3DDD_COLORMODEL = 1
D3DDD_DEVCAPS = 2
D3DDD_TRANSFORMCAPS = 4
D3DDD_LIGHTINGCAPS = 8
D3DDD_BCLIPPING = 16
D3DDD_LINECAPS = 32
D3DDD_TRICAPS = 64
D3DDD_DEVICERENDERBITDEPTH = 128
D3DDD_DEVICEZBUFFERBITDEPTH = 256
D3DDD_MAXBUFFERSIZE = 512
D3DDD_MAXVERTEXCOUNT = 1024
D3DDEVCAPS_FLOATTLVERTEX = 1
D3DDEVCAPS_SORTINCREASINGZ = 2
D3DDEVCAPS_SORTDECREASINGZ = 4
D3DDEVCAPS_SORTEXACT = 8
D3DDEVCAPS_EXECUTESYSTEMMEMORY = 16
D3DDEVCAPS_EXECUTEVIDEOMEMORY = 32
D3DDEVCAPS_TLVERTEXSYSTEMMEMORY = 64
D3DDEVCAPS_TLVERTEXVIDEOMEMORY = 128
D3DDEVCAPS_TEXTURESYSTEMMEMORY = 256
D3DDEVCAPS_TEXTUREVIDEOMEMORY = 512
D3DDEVCAPS_DRAWPRIMTLVERTEX = 1024
D3DDEVCAPS_CANRENDERAFTERFLIP = 2048
D3DDEVCAPS_TEXTURENONLOCALVIDMEM = 4096
D3DDEVCAPS_DRAWPRIMITIVES2 = 8192
D3DDEVCAPS_SEPARATETEXTUREMEMORIES = 16384
D3DDEVCAPS_DRAWPRIMITIVES2EX = 32768
D3DDEVCAPS_HWTRANSFORMANDLIGHT = 65536
D3DDEVCAPS_CANBLTSYSTONONLOCAL = 131072
D3DDEVCAPS_HWRASTERIZATION = 524288
D3DVTXPCAPS_TEXGEN = 1
D3DVTXPCAPS_MATERIALSOURCE7 = 2
D3DVTXPCAPS_VERTEXFOG = 4
D3DVTXPCAPS_DIRECTIONALLIGHTS = 8
D3DVTXPCAPS_POSITIONALLIGHTS = 16
D3DVTXPCAPS_LOCALVIEWER = 32
D3DFDS_COLORMODEL = 1
D3DFDS_GUID = 2
D3DFDS_HARDWARE = 4
D3DFDS_TRIANGLES = 8
D3DFDS_LINES = 16
D3DFDS_MISCCAPS = 32
D3DFDS_RASTERCAPS = 64
D3DFDS_ZCMPCAPS = 128
D3DFDS_ALPHACMPCAPS = 256
D3DFDS_SRCBLENDCAPS = 512
D3DFDS_DSTBLENDCAPS = 1024
D3DFDS_SHADECAPS = 2048
D3DFDS_TEXTURECAPS = 4096
D3DFDS_TEXTUREFILTERCAPS = 8192
D3DFDS_TEXTUREBLENDCAPS = 16384
D3DFDS_TEXTUREADDRESSCAPS = 32768
D3DDEB_BUFSIZE = 1
D3DDEB_CAPS = 2
D3DDEB_LPDATA = 4
D3DDEBCAPS_SYSTEMMEMORY = 1
D3DDEBCAPS_VIDEOMEMORY = 2
D3DMAXUSERCLIPPLANES = 32
D3DCLIPPLANE0 = 1
D3DCLIPPLANE1 = 2
D3DCLIPPLANE2 = 4
D3DCLIPPLANE3 = 8
D3DCLIPPLANE4 = 16
D3DCLIPPLANE5 = 32
D3DCLIP_LEFT = 1
D3DCLIP_RIGHT = 2
D3DCLIP_TOP = 4
D3DCLIP_BOTTOM = 8
D3DCLIP_FRONT = 16
D3DCLIP_BACK = 32
D3DCLIP_GEN0 = 64
D3DCLIP_GEN1 = 128
D3DCLIP_GEN2 = 256
D3DCLIP_GEN3 = 512
D3DCLIP_GEN4 = 1024
D3DCLIP_GEN5 = 2048
D3DSTATUS_CLIPUNIONLEFT = 1
D3DSTATUS_CLIPUNIONRIGHT = 2
D3DSTATUS_CLIPUNIONTOP = 4
D3DSTATUS_CLIPUNIONBOTTOM = 8
D3DSTATUS_CLIPUNIONFRONT = 16
D3DSTATUS_CLIPUNIONBACK = 32
D3DSTATUS_CLIPUNIONGEN0 = 64
D3DSTATUS_CLIPUNIONGEN1 = 128
D3DSTATUS_CLIPUNIONGEN2 = 256
D3DSTATUS_CLIPUNIONGEN3 = 512
D3DSTATUS_CLIPUNIONGEN4 = 1024
D3DSTATUS_CLIPUNIONGEN5 = 2048
D3DSTATUS_CLIPINTERSECTIONLEFT = 4096
D3DSTATUS_CLIPINTERSECTIONRIGHT = 8192
D3DSTATUS_CLIPINTERSECTIONTOP = 16384
D3DSTATUS_CLIPINTERSECTIONBOTTOM = 32768
D3DSTATUS_CLIPINTERSECTIONFRONT = 65536
D3DSTATUS_CLIPINTERSECTIONBACK = 131072
D3DSTATUS_CLIPINTERSECTIONGEN0 = 262144
D3DSTATUS_CLIPINTERSECTIONGEN1 = 524288
D3DSTATUS_CLIPINTERSECTIONGEN2 = 1048576
D3DSTATUS_CLIPINTERSECTIONGEN3 = 2097152
D3DSTATUS_CLIPINTERSECTIONGEN4 = 4194304
D3DSTATUS_CLIPINTERSECTIONGEN5 = 8388608
D3DSTATUS_ZNOTVISIBLE = 16777216
D3DTRANSFORM_CLIPPED = 1
D3DTRANSFORM_UNCLIPPED = 2
D3DLIGHT_ACTIVE = 1
D3DLIGHT_NO_SPECULAR = 2
D3DCOLOR_MONO = 1
D3DCOLOR_RGB = 2
D3DCLEAR_TARGET = 1
D3DCLEAR_ZBUFFER = 2
D3DCLEAR_STENCIL = 4
D3DSTATE_OVERRIDE_BIAS = 256
D3DRENDERSTATE_WRAPBIAS = 128
D3DWRAP_U = 1
D3DWRAP_V = 2
D3DWRAPCOORD_0 = 1
D3DWRAPCOORD_1 = 2
D3DWRAPCOORD_2 = 4
D3DWRAPCOORD_3 = 8
D3DPROCESSVERTICES_TRANSFORMLIGHT = 0
D3DPROCESSVERTICES_TRANSFORM = 1
D3DPROCESSVERTICES_COPY = 2
D3DPROCESSVERTICES_OPMASK = 7
D3DPROCESSVERTICES_UPDATEEXTENTS = 8
D3DPROCESSVERTICES_NOCOLOR = 16
D3DTSS_TCI_PASSTHRU = 0
D3DTSS_TCI_CAMERASPACENORMAL = 65536
D3DTSS_TCI_CAMERASPACEPOSITION = 131072
D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR = 196608
D3DTA_SELECTMASK = 15
D3DTA_DIFFUSE = 0
D3DTA_CURRENT = 1
D3DTA_TEXTURE = 2
D3DTA_TFACTOR = 3
D3DTA_SPECULAR = 4
D3DTA_COMPLEMENT = 16
D3DTA_ALPHAREPLICATE = 32
D3DTRIFLAG_START = 0
D3DTRIFLAG_ODD = 30
D3DTRIFLAG_EVEN = 31
D3DTRIFLAG_EDGEENABLE1 = 256
D3DTRIFLAG_EDGEENABLE2 = 512
D3DTRIFLAG_EDGEENABLE3 = 1024
D3DSETSTATUS_STATUS = 1
D3DSETSTATUS_EXTENTS = 2
D3DCLIPSTATUS_STATUS = 1
D3DCLIPSTATUS_EXTENTS2 = 2
D3DCLIPSTATUS_EXTENTS3 = 4
D3DEXECUTE_CLIPPED = 1
D3DEXECUTE_UNCLIPPED = 2
D3DPAL_FREE = 0
D3DPAL_READONLY = 64
D3DPAL_RESERVED = 128
D3DVBCAPS_SYSTEMMEMORY = 2048
D3DVBCAPS_WRITEONLY = 65536
D3DVBCAPS_OPTIMIZED = -2147483648
D3DVBCAPS_DONOTCLIP = 1
D3DVOP_LIGHT = 1024
D3DVOP_TRANSFORM = 1
D3DVOP_CLIP = 4
D3DVOP_EXTENTS = 8
D3DPV_DONOTCOPYDATA = 1
D3DFVF_RESERVED0 = 1
D3DFVF_POSITION_MASK = 14
D3DFVF_XYZ = 2
D3DFVF_XYZRHW = 4
D3DFVF_XYZB1 = 6
D3DFVF_XYZB2 = 8
D3DFVF_XYZB3 = 10
D3DFVF_XYZB4 = 12
D3DFVF_XYZB5 = 14
D3DFVF_NORMAL = 16
D3DFVF_RESERVED1 = 32
D3DFVF_DIFFUSE = 64
D3DFVF_SPECULAR = 128
D3DFVF_TEXCOUNT_MASK = 3840
D3DFVF_TEXCOUNT_SHIFT = 8
D3DFVF_TEX0 = 0
D3DFVF_TEX1 = 256
D3DFVF_TEX2 = 512
D3DFVF_TEX3 = 768
D3DFVF_TEX4 = 1024
D3DFVF_TEX5 = 1280
D3DFVF_TEX6 = 1536
D3DFVF_TEX7 = 1792
D3DFVF_TEX8 = 2048
D3DFVF_RESERVED2 = 61440
D3DDP_MAXTEXCOORD = 8
D3DVIS_INSIDE_FRUSTUM = 0
D3DVIS_INTERSECT_FRUSTUM = 1
D3DVIS_OUTSIDE_FRUSTUM = 2
D3DVIS_INSIDE_LEFT = 0
D3DVIS_INTERSECT_LEFT = 4
D3DVIS_OUTSIDE_LEFT = 8
D3DVIS_INSIDE_RIGHT = 0
D3DVIS_INTERSECT_RIGHT = 16
D3DVIS_OUTSIDE_RIGHT = 32
D3DVIS_INSIDE_TOP = 0
D3DVIS_INTERSECT_TOP = 64
D3DVIS_OUTSIDE_TOP = 128
D3DVIS_INSIDE_BOTTOM = 0
D3DVIS_INTERSECT_BOTTOM = 256
D3DVIS_OUTSIDE_BOTTOM = 512
D3DVIS_INSIDE_NEAR = 0
D3DVIS_INTERSECT_NEAR = 1024
D3DVIS_OUTSIDE_NEAR = 2048
D3DVIS_INSIDE_FAR = 0
D3DVIS_INTERSECT_FAR = 4096
D3DVIS_OUTSIDE_FAR = 8192
D3DVIS_MASK_FRUSTUM = 3
D3DVIS_MASK_LEFT = 12
D3DVIS_MASK_RIGHT = 48
D3DVIS_MASK_TOP = 192
D3DVIS_MASK_BOTTOM = 768
D3DVIS_MASK_NEAR = 3072
D3DVIS_MASK_FAR = 12288
D3DDEVINFOID_TEXTUREMANAGER = 1
D3DDEVINFOID_D3DTEXTUREMANAGER = 2
D3DDEVINFOID_TEXTURING = 3
D3DFVF_TEXTUREFORMAT2 = 0
D3DFVF_TEXTUREFORMAT1 = 3
D3DFVF_TEXTUREFORMAT3 = 1
D3DFVF_TEXTUREFORMAT4 = 2
ROTFLAGS_REGISTRATIONKEEPSALIVE = 1
ROTFLAGS_ALLOWANYCLIENT = 2
ROT_COMPARE_MAX = 2048
WDT_INPROC_CALL = 1215587415
WDT_REMOTE_CALL = 1383359575
WDT_INPROC64_CALL = 1349805143
PROCESS_HEAP_REGION = 1
PROCESS_HEAP_UNCOMMITTED_RANGE = 2
PROCESS_HEAP_ENTRY_BUSY = 4
PROCESS_HEAP_SEG_ALLOC = 8
PROCESS_HEAP_ENTRY_MOVEABLE = 16
PROCESS_HEAP_ENTRY_DDESHARE = 32
LMEM_NOCOMPACT = 16
LMEM_NODISCARD = 32
LMEM_MODIFY = 128
LMEM_DISCARDABLE = 3840
LMEM_VALID_FLAGS = 3954
LMEM_INVALID_HANDLE = 32768
LMEM_DISCARDED = 16384
LMEM_LOCKCOUNT = 255
NUMA_NO_PREFERRED_NODE = 4294967295
REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO_VERSION = 1
FACILITY_MCA_ERROR_CODE = 5
IO_ERR_INSUFFICIENT_RESOURCES = -1073479678
IO_ERR_DRIVER_ERROR = -1073479676
IO_ERR_SEEK_ERROR = -1073479674
IO_ERR_BAD_BLOCK = -1073479673
IO_ERR_TIMEOUT = -1073479671
IO_ERR_CONTROLLER_ERROR = -1073479669
IO_ERR_NOT_READY = -1073479665
IO_ERR_INVALID_REQUEST = -1073479664
IO_ERR_RESET = -1073479661
IO_ERR_BAD_FIRMWARE = -1073479655
IO_WRN_BAD_FIRMWARE = -2147221478
IO_WRITE_CACHE_ENABLED = -2147221472
IO_RECOVERED_VIA_ECC = -2147221471
IO_WRITE_CACHE_DISABLED = -2147221470
IO_WARNING_PAGING_FAILURE = -2147221453
IO_WRN_FAILURE_PREDICTED = -2147221452
IO_WARNING_ALLOCATION_FAILED = -2147221448
IO_WARNING_DUPLICATE_SIGNATURE = -2147221446
IO_WARNING_DUPLICATE_PATH = -2147221445
IO_WARNING_WRITE_FUA_PROBLEM = -2147221372
IO_WARNING_VOLUME_LOST_DISK_EXTENT = -2147221362
IO_WARNING_DEVICE_HAS_INTERNAL_DUMP = -2147221361
IO_WARNING_SOFT_THRESHOLD_REACHED = -2147221360
IO_WARNING_SOFT_THRESHOLD_REACHED_EX = -2147221359
IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_LUN = -2147221358
IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_POOL = -2147221357
IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_LUN = -2147221356
IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_POOL = -2147221355
IO_ERROR_DISK_RESOURCES_EXHAUSTED = -1073479530
IO_WARNING_DISK_CAPACITY_CHANGED = -2147221353
IO_WARNING_DISK_PROVISIONING_TYPE_CHANGED = -2147221352
IO_WARNING_IO_OPERATION_RETRIED = -2147221351
IO_ERROR_IO_HARDWARE_ERROR = -1073479526
IO_WARNING_COMPLETION_TIME = -2147221349
IO_WARNING_DISK_SURPRISE_REMOVED = -2147221347
IO_WARNING_REPEATED_DISK_GUID = -2147221346
IO_WARNING_DISK_FIRMWARE_UPDATED = 1074004127
IO_ERR_RETRY_SUCCEEDED = 262145
IO_DUMP_CREATION_SUCCESS = 262306
IO_FILE_QUOTA_THRESHOLD = 1074004004
IO_FILE_QUOTA_LIMIT = 1074004005
IO_FILE_QUOTA_STARTED = 1074004006
IO_FILE_QUOTA_SUCCEEDED = 1074004007
IO_INFO_THROTTLE_COMPLETE = 1074004087
IO_CDROM_EXCLUSIVE_LOCK = 1074004101
IO_WARNING_ADAPTER_FIRMWARE_UPDATED = 1074004128
IO_FILE_QUOTA_FAILED = -2147221464
IO_LOST_DELAYED_WRITE = -2147221454
IO_WARNING_INTERRUPT_STILL_PENDING = -2147221451
IO_DRIVER_CANCEL_TIMEOUT = -2147221450
IO_WARNING_LOG_FLUSH_FAILED = -2147221447
IO_WARNING_BUS_RESET = -2147221386
IO_WARNING_RESET = -2147221375
IO_LOST_DELAYED_WRITE_NETWORK_DISCONNECTED = -2147221365
IO_LOST_DELAYED_WRITE_NETWORK_SERVER_ERROR = -2147221364
IO_LOST_DELAYED_WRITE_NETWORK_LOCAL_DISK_ERROR = -2147221363
IO_WARNING_DUMP_DISABLED_DEVICE_GONE = -2147221348
IO_ERR_CONFIGURATION_ERROR = -1073479677
IO_ERR_PARITY = -1073479675
IO_ERR_OVERRUN_ERROR = -1073479672
IO_ERR_SEQUENCE = -1073479670
IO_ERR_INTERNAL_ERROR = -1073479668
IO_ERR_INCORRECT_IRQL = -1073479667
IO_ERR_INVALID_IOBASE = -1073479666
IO_ERR_VERSION = -1073479663
IO_ERR_LAYERED_FAILURE = -1073479662
IO_ERR_PROTOCOL = -1073479660
IO_ERR_MEMORY_CONFLICT_DETECTED = -1073479659
IO_ERR_PORT_CONFLICT_DETECTED = -1073479658
IO_ERR_DMA_CONFLICT_DETECTED = -1073479657
IO_ERR_IRQ_CONFLICT_DETECTED = -1073479656
IO_ERR_DMA_RESOURCE_CONFLICT = -1073479653
IO_ERR_INTERRUPT_RESOURCE_CONFLICT = -1073479652
IO_ERR_MEMORY_RESOURCE_CONFLICT = -1073479651
IO_ERR_PORT_RESOURCE_CONFLICT = -1073479650
IO_BAD_BLOCK_WITH_NAME = -1073479649
IO_FILE_SYSTEM_CORRUPT = -1073479639
IO_FILE_QUOTA_CORRUPT = -1073479638
IO_SYSTEM_SLEEP_FAILED = -1073479637
IO_DUMP_POINTER_FAILURE = -1073479636
IO_DUMP_DRIVER_LOAD_FAILURE = -1073479635
IO_DUMP_INITIALIZATION_FAILURE = -1073479634
IO_DUMP_DUMPFILE_CONFLICT = -1073479633
IO_DUMP_DIRECT_CONFIG_FAILED = -1073479632
IO_DUMP_PAGE_CONFIG_FAILED = -1073479631
IO_FILE_SYSTEM_CORRUPT_WITH_NAME = -1073479625
IO_ERR_THREAD_STUCK_IN_DEVICE_DRIVER = -1073479572
IO_ERR_PORT_TIMEOUT = -1073479563
IO_ERROR_DUMP_CREATION_ERROR = -1073479519
IO_DUMP_CALLBACK_EXCEPTION = -1073479517
MCA_INFO_CPU_THERMAL_THROTTLING_REMOVED = 1074069616
MCA_INFO_NO_MORE_CORRECTED_ERROR_LOGS = 1074069619
MCA_INFO_MEMORY_PAGE_MARKED_BAD = 1074069620
MCA_WARNING_CACHE = -2147155908
MCA_WARNING_TLB = -2147155906
MCA_WARNING_CPU_BUS = -2147155904
MCA_WARNING_REGISTER_FILE = -2147155902
MCA_WARNING_MAS = -2147155900
MCA_WARNING_MEM_UNKNOWN = -2147155898
MCA_WARNING_MEM_1_2 = -2147155896
MCA_WARNING_MEM_1_2_5 = -2147155894
MCA_WARNING_MEM_1_2_5_4 = -2147155892
MCA_WARNING_SYSTEM_EVENT = -2147155890
MCA_WARNING_PCI_BUS_PARITY = -2147155888
MCA_WARNING_PCI_BUS_PARITY_NO_INFO = -2147155886
MCA_WARNING_PCI_BUS_SERR = -2147155884
MCA_WARNING_PCI_BUS_SERR_NO_INFO = -2147155882
MCA_WARNING_PCI_BUS_MASTER_ABORT = -2147155880
MCA_WARNING_PCI_BUS_MASTER_ABORT_NO_INFO = -2147155878
MCA_WARNING_PCI_BUS_TIMEOUT = -2147155876
MCA_WARNING_PCI_BUS_TIMEOUT_NO_INFO = -2147155874
MCA_WARNING_PCI_BUS_UNKNOWN = -2147155872
MCA_WARNING_PCI_DEVICE = -2147155870
MCA_WARNING_SMBIOS = -2147155868
MCA_WARNING_PLATFORM_SPECIFIC = -2147155866
MCA_WARNING_UNKNOWN = -2147155864
MCA_WARNING_UNKNOWN_NO_CPU = -2147155862
MCA_WARNING_CMC_THRESHOLD_EXCEEDED = -2147155859
MCA_WARNING_CPE_THRESHOLD_EXCEEDED = -2147155858
MCA_WARNING_CPU_THERMAL_THROTTLED = -2147155857
MCA_WARNING_CPU = -2147155855
MCA_ERROR_CACHE = -1073414083
MCA_ERROR_TLB = -1073414081
MCA_ERROR_CPU_BUS = -1073414079
MCA_ERROR_REGISTER_FILE = -1073414077
MCA_ERROR_MAS = -1073414075
MCA_ERROR_MEM_UNKNOWN = -1073414073
MCA_ERROR_MEM_1_2 = -1073414071
MCA_ERROR_MEM_1_2_5 = -1073414069
MCA_ERROR_MEM_1_2_5_4 = -1073414067
MCA_ERROR_SYSTEM_EVENT = -1073414065
MCA_ERROR_PCI_BUS_PARITY = -1073414063
MCA_ERROR_PCI_BUS_PARITY_NO_INFO = -1073414061
MCA_ERROR_PCI_BUS_SERR = -1073414059
MCA_ERROR_PCI_BUS_SERR_NO_INFO = -1073414057
MCA_ERROR_PCI_BUS_MASTER_ABORT = -1073414055
MCA_ERROR_PCI_BUS_MASTER_ABORT_NO_INFO = -1073414053
MCA_ERROR_PCI_BUS_TIMEOUT = -1073414051
MCA_ERROR_PCI_BUS_TIMEOUT_NO_INFO = -1073414049
MCA_ERROR_PCI_BUS_UNKNOWN = -1073414047
MCA_ERROR_PCI_DEVICE = -1073414045
MCA_ERROR_SMBIOS = -1073414043
MCA_ERROR_PLATFORM_SPECIFIC = -1073414041
MCA_ERROR_UNKNOWN = -1073414039
MCA_ERROR_UNKNOWN_NO_CPU = -1073414037
MCA_ERROR_CPU = -1073414030
MCA_MEMORYHIERARCHY_ERROR = -1073414024
MCA_TLB_ERROR = -1073414023
MCA_BUS_ERROR = -1073414022
MCA_BUS_TIMEOUT_ERROR = -1073414021
MCA_INTERNALTIMER_ERROR = -1073414020
MCA_MICROCODE_ROM_PARITY_ERROR = -1073414018
MCA_EXTERNAL_ERROR = -1073414017
MCA_FRC_ERROR = -1073414016
VOLMGR_KSR_ERROR = -2143813631
VOLMGR_KSR_READ_ERROR = -2143813630
VOLMGR_KSR_BYPASS = -2143813629
GUID_DEVINTERFACE_DMR = 'd0875fb4-2196-4c7a-a63d-e416addd60a1'
GUID_DEVINTERFACE_DMP = '25b4e268-2a05-496e-803b-266837fbda4b'
GUID_DEVINTERFACE_DMS = 'c96037ae-a558-4470-b432-115a31b85553'
ALERT_SYSTEM_SEV = UInt32
ALERT_SYSTEM_INFORMATIONAL = 1
ALERT_SYSTEM_WARNING = 2
ALERT_SYSTEM_ERROR = 3
ALERT_SYSTEM_QUERY = 4
ALERT_SYSTEM_CRITICAL = 5
APPCOMMAND_ID = UInt32
APPCOMMAND_BROWSER_BACKWARD = 1
APPCOMMAND_BROWSER_FORWARD = 2
APPCOMMAND_BROWSER_REFRESH = 3
APPCOMMAND_BROWSER_STOP = 4
APPCOMMAND_BROWSER_SEARCH = 5
APPCOMMAND_BROWSER_FAVORITES = 6
APPCOMMAND_BROWSER_HOME = 7
APPCOMMAND_VOLUME_MUTE = 8
APPCOMMAND_VOLUME_DOWN = 9
APPCOMMAND_VOLUME_UP = 10
APPCOMMAND_MEDIA_NEXTTRACK = 11
APPCOMMAND_MEDIA_PREVIOUSTRACK = 12
APPCOMMAND_MEDIA_STOP = 13
APPCOMMAND_MEDIA_PLAY_PAUSE = 14
APPCOMMAND_LAUNCH_MAIL = 15
APPCOMMAND_LAUNCH_MEDIA_SELECT = 16
APPCOMMAND_LAUNCH_APP1 = 17
APPCOMMAND_LAUNCH_APP2 = 18
APPCOMMAND_BASS_DOWN = 19
APPCOMMAND_BASS_BOOST = 20
APPCOMMAND_BASS_UP = 21
APPCOMMAND_TREBLE_DOWN = 22
APPCOMMAND_TREBLE_UP = 23
APPCOMMAND_MICROPHONE_VOLUME_MUTE = 24
APPCOMMAND_MICROPHONE_VOLUME_DOWN = 25
APPCOMMAND_MICROPHONE_VOLUME_UP = 26
APPCOMMAND_HELP = 27
APPCOMMAND_FIND = 28
APPCOMMAND_NEW = 29
APPCOMMAND_OPEN = 30
APPCOMMAND_CLOSE = 31
APPCOMMAND_SAVE = 32
APPCOMMAND_PRINT = 33
APPCOMMAND_UNDO = 34
APPCOMMAND_REDO = 35
APPCOMMAND_COPY = 36
APPCOMMAND_CUT = 37
APPCOMMAND_PASTE = 38
APPCOMMAND_REPLY_TO_MAIL = 39
APPCOMMAND_FORWARD_MAIL = 40
APPCOMMAND_SEND_MAIL = 41
APPCOMMAND_SPELL_CHECK = 42
APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE = 43
APPCOMMAND_MIC_ON_OFF_TOGGLE = 44
APPCOMMAND_CORRECTION_LIST = 45
APPCOMMAND_MEDIA_PLAY = 46
APPCOMMAND_MEDIA_PAUSE = 47
APPCOMMAND_MEDIA_RECORD = 48
APPCOMMAND_MEDIA_FAST_FORWARD = 49
APPCOMMAND_MEDIA_REWIND = 50
APPCOMMAND_MEDIA_CHANNEL_UP = 51
APPCOMMAND_MEDIA_CHANNEL_DOWN = 52
APPCOMMAND_DELETE = 53
APPCOMMAND_DWM_FLIP3D = 54
ATF_FLAGS = UInt32
ATF_TIMEOUTON = 1
ATF_ONOFFFEEDBACK = 2
CHOOSECOLOR_FLAGS = UInt32
CC_RGBINIT = 1
CC_FULLOPEN = 2
CC_PREVENTFULLOPEN = 4
CC_SHOWHELP = 8
CC_ENABLEHOOK = 16
CC_ENABLETEMPLATE = 32
CC_ENABLETEMPLATEHANDLE = 64
CC_SOLIDCOLOR = 128
CC_ANYCOLOR = 256
CLIPBOARD_FORMATS = UInt32
CF_TEXT = 1
CF_BITMAP = 2
CF_METAFILEPICT = 3
CF_SYLK = 4
CF_DIF = 5
CF_TIFF = 6
CF_OEMTEXT = 7
CF_DIB = 8
CF_PALETTE = 9
CF_PENDATA = 10
CF_RIFF = 11
CF_WAVE = 12
CF_UNICODETEXT = 13
CF_ENHMETAFILE = 14
CF_HDROP = 15
CF_LOCALE = 16
CF_DIBV5 = 17
CF_MAX = 18
CF_OWNERDISPLAY = 128
CF_DSPTEXT = 129
CF_DSPBITMAP = 130
CF_DSPMETAFILEPICT = 131
CF_DSPENHMETAFILE = 142
CF_PRIVATEFIRST = 512
CF_PRIVATELAST = 767
CF_GDIOBJFIRST = 768
CF_GDIOBJLAST = 1023
GESTURECONFIG_FLAGS = UInt32
GC_ALLGESTURES = 1
GC_ZOOM = 1
GC_PAN = 1
GC_PAN_WITH_SINGLE_FINGER_VERTICALLY = 2
GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY = 4
GC_PAN_WITH_GUTTER = 8
GC_PAN_WITH_INERTIA = 16
GC_ROTATE = 1
GC_TWOFINGERTAP = 1
GC_PRESSANDTAP = 1
GC_ROLLOVER = 1
CFE_UNDERLINE = UInt32
CFU_CF1UNDERLINE = 255
CFU_INVERT = 254
CFU_UNDERLINETHICKLONGDASH = 18
CFU_UNDERLINETHICKDOTTED = 17
CFU_UNDERLINETHICKDASHDOTDOT = 16
CFU_UNDERLINETHICKDASHDOT = 15
CFU_UNDERLINETHICKDASH = 14
CFU_UNDERLINELONGDASH = 13
CFU_UNDERLINEHEAVYWAVE = 12
CFU_UNDERLINEDOUBLEWAVE = 11
CFU_UNDERLINEHAIRLINE = 10
CFU_UNDERLINETHICK = 9
CFU_UNDERLINEWAVE = 8
CFU_UNDERLINEDASHDOTDOT = 7
CFU_UNDERLINEDASHDOT = 6
CFU_UNDERLINEDASH = 5
CFU_UNDERLINEDOTTED = 4
CFU_UNDERLINEDOUBLE = 3
CFU_UNDERLINEWORD = 2
CFU_UNDERLINE = 1
CFU_UNDERLINENONE = 0
IGP_ID = UInt32
IGP_GETIMEVERSION = 4294967292
IGP_PROPERTY = 4
IGP_CONVERSION = 8
IGP_SENTENCE = 12
IGP_UI = 16
IGP_SETCOMPSTR = 20
IGP_SELECT = 24
SECTION_FLAGS = UInt32
SECTION_ALL_ACCESS = 983071
SECTION_QUERY = 1
SECTION_MAP_WRITE = 2
SECTION_MAP_READ = 4
SECTION_MAP_EXECUTE = 8
SECTION_EXTEND_SIZE = 16
SECTION_MAP_EXECUTE_EXPLICIT = 32
TAPE_GET_DRIVE_PARAMETERS_FEATURES_HIGH = UInt32
TAPE_DRIVE_ABS_BLK_IMMED = 2147491840
TAPE_DRIVE_ABSOLUTE_BLK = 2147487744
TAPE_DRIVE_END_OF_DATA = 2147549184
TAPE_DRIVE_FILEMARKS = 2147745792
TAPE_DRIVE_LOAD_UNLOAD = 2147483649
TAPE_DRIVE_LOAD_UNLD_IMMED = 2147483680
TAPE_DRIVE_LOCK_UNLOCK = 2147483652
TAPE_DRIVE_LOCK_UNLK_IMMED = 2147483776
TAPE_DRIVE_LOG_BLK_IMMED = 2147516416
TAPE_DRIVE_LOGICAL_BLK = 2147500032
TAPE_DRIVE_RELATIVE_BLKS = 2147614720
TAPE_DRIVE_REVERSE_POSITION = 2151677952
TAPE_DRIVE_REWIND_IMMEDIATE = 2147483656
TAPE_DRIVE_SEQUENTIAL_FMKS = 2148007936
TAPE_DRIVE_SEQUENTIAL_SMKS = 2149580800
TAPE_DRIVE_SET_BLOCK_SIZE = 2147483664
TAPE_DRIVE_SET_COMPRESSION = 2147484160
TAPE_DRIVE_SET_ECC = 2147483904
TAPE_DRIVE_SET_PADDING = 2147484672
TAPE_DRIVE_SET_REPORT_SMKS = 2147485696
TAPE_DRIVE_SETMARKS = 2148532224
TAPE_DRIVE_SPACE_IMMEDIATE = 2155872256
TAPE_DRIVE_TENSION = 2147483650
TAPE_DRIVE_TENSION_IMMED = 2147483712
TAPE_DRIVE_WRITE_FILEMARKS = 2181038080
TAPE_DRIVE_WRITE_LONG_FMKS = 2281701376
TAPE_DRIVE_WRITE_MARK_IMMED = 2415919104
TAPE_DRIVE_WRITE_SETMARKS = 2164260864
TAPE_DRIVE_WRITE_SHORT_FMKS = 2214592512
DEV_BROADCAST_HDR_DEVICE_TYPE = UInt32
DBT_DEVTYP_DEVICEINTERFACE = 5
DBT_DEVTYP_HANDLE = 6
DBT_DEVTYP_OEM = 0
DBT_DEVTYP_PORT = 3
DBT_DEVTYP_VOLUME = 2
DEV_BROADCAST_VOLUME_FLAGS = UInt16
DBTF_MEDIA = 1
DBTF_NET = 2
def _define_PUMS_SCHEDULER_ENTRY_POINT():
    return CFUNCTYPE(Void,win32more.System.SystemServices.RTL_UMS_SCHEDULER_REASON,UIntPtr,c_void_p, use_last_error=False)
def _define_TP_POOL_head():
    class TP_POOL(Structure):
        pass
    return TP_POOL
def _define_TP_POOL():
    TP_POOL = win32more.System.SystemServices.TP_POOL_head
    return TP_POOL
def _define_TP_CLEANUP_GROUP_head():
    class TP_CLEANUP_GROUP(Structure):
        pass
    return TP_CLEANUP_GROUP
def _define_TP_CLEANUP_GROUP():
    TP_CLEANUP_GROUP = win32more.System.SystemServices.TP_CLEANUP_GROUP_head
    return TP_CLEANUP_GROUP
def _define_TEB_head():
    class TEB(Structure):
        pass
    return TEB
def _define_TEB():
    TEB = win32more.System.SystemServices.TEB_head
    return TEB
def _define_RemHGLOBAL_head():
    class RemHGLOBAL(Structure):
        pass
    return RemHGLOBAL
def _define_RemHGLOBAL():
    RemHGLOBAL = win32more.System.SystemServices.RemHGLOBAL_head
    RemHGLOBAL._fields_ = [
        ("fNullHGlobal", Int32),
        ("cbData", UInt32),
        ("data", Byte * 0),
    ]
    return RemHGLOBAL
def _define_RemHMETAFILEPICT_head():
    class RemHMETAFILEPICT(Structure):
        pass
    return RemHMETAFILEPICT
def _define_RemHMETAFILEPICT():
    RemHMETAFILEPICT = win32more.System.SystemServices.RemHMETAFILEPICT_head
    RemHMETAFILEPICT._fields_ = [
        ("mm", Int32),
        ("xExt", Int32),
        ("yExt", Int32),
        ("cbData", UInt32),
        ("data", Byte * 0),
    ]
    return RemHMETAFILEPICT
def _define_RemHENHMETAFILE_head():
    class RemHENHMETAFILE(Structure):
        pass
    return RemHENHMETAFILE
def _define_RemHENHMETAFILE():
    RemHENHMETAFILE = win32more.System.SystemServices.RemHENHMETAFILE_head
    RemHENHMETAFILE._fields_ = [
        ("cbData", UInt32),
        ("data", Byte * 0),
    ]
    return RemHENHMETAFILE
def _define_RemHBITMAP_head():
    class RemHBITMAP(Structure):
        pass
    return RemHBITMAP
def _define_RemHBITMAP():
    RemHBITMAP = win32more.System.SystemServices.RemHBITMAP_head
    RemHBITMAP._fields_ = [
        ("cbData", UInt32),
        ("data", Byte * 0),
    ]
    return RemHBITMAP
def _define_RemHPALETTE_head():
    class RemHPALETTE(Structure):
        pass
    return RemHPALETTE
def _define_RemHPALETTE():
    RemHPALETTE = win32more.System.SystemServices.RemHPALETTE_head
    RemHPALETTE._fields_ = [
        ("cbData", UInt32),
        ("data", Byte * 0),
    ]
    return RemHPALETTE
def _define_RemBRUSH_head():
    class RemBRUSH(Structure):
        pass
    return RemBRUSH
def _define_RemBRUSH():
    RemBRUSH = win32more.System.SystemServices.RemBRUSH_head
    RemBRUSH._fields_ = [
        ("cbData", UInt32),
        ("data", Byte * 0),
    ]
    return RemBRUSH
def _define_userCLIPFORMAT_head():
    class userCLIPFORMAT(Structure):
        pass
    return userCLIPFORMAT
def _define_userCLIPFORMAT():
    userCLIPFORMAT = win32more.System.SystemServices.userCLIPFORMAT_head
    class userCLIPFORMAT__u_e__Struct(Union):
        pass
    userCLIPFORMAT__u_e__Struct._fields_ = [
        ("dwValue", UInt32),
        ("pwszName", win32more.Foundation.PWSTR),
    ]
    userCLIPFORMAT._fields_ = [
        ("fContext", Int32),
        ("u", userCLIPFORMAT__u_e__Struct),
    ]
    return userCLIPFORMAT
def _define_GDI_NONREMOTE_head():
    class GDI_NONREMOTE(Structure):
        pass
    return GDI_NONREMOTE
def _define_GDI_NONREMOTE():
    GDI_NONREMOTE = win32more.System.SystemServices.GDI_NONREMOTE_head
    class GDI_NONREMOTE__u_e__Struct(Union):
        pass
    GDI_NONREMOTE__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", POINTER(win32more.System.Com.DWORD_BLOB_head)),
    ]
    GDI_NONREMOTE._fields_ = [
        ("fContext", Int32),
        ("u", GDI_NONREMOTE__u_e__Struct),
    ]
    return GDI_NONREMOTE
def _define_userHGLOBAL_head():
    class userHGLOBAL(Structure):
        pass
    return userHGLOBAL
def _define_userHGLOBAL():
    userHGLOBAL = win32more.System.SystemServices.userHGLOBAL_head
    class userHGLOBAL__u_e__Struct(Union):
        pass
    userHGLOBAL__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", POINTER(win32more.System.Com.FLAGGED_BYTE_BLOB_head)),
        ("hInproc64", Int64),
    ]
    userHGLOBAL._fields_ = [
        ("fContext", Int32),
        ("u", userHGLOBAL__u_e__Struct),
    ]
    return userHGLOBAL
def _define_userHMETAFILE_head():
    class userHMETAFILE(Structure):
        pass
    return userHMETAFILE
def _define_userHMETAFILE():
    userHMETAFILE = win32more.System.SystemServices.userHMETAFILE_head
    class userHMETAFILE__u_e__Struct(Union):
        pass
    userHMETAFILE__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", POINTER(win32more.System.Com.BYTE_BLOB_head)),
        ("hInproc64", Int64),
    ]
    userHMETAFILE._fields_ = [
        ("fContext", Int32),
        ("u", userHMETAFILE__u_e__Struct),
    ]
    return userHMETAFILE
def _define_remoteMETAFILEPICT_head():
    class remoteMETAFILEPICT(Structure):
        pass
    return remoteMETAFILEPICT
def _define_remoteMETAFILEPICT():
    remoteMETAFILEPICT = win32more.System.SystemServices.remoteMETAFILEPICT_head
    remoteMETAFILEPICT._fields_ = [
        ("mm", Int32),
        ("xExt", Int32),
        ("yExt", Int32),
        ("hMF", POINTER(win32more.System.SystemServices.userHMETAFILE_head)),
    ]
    return remoteMETAFILEPICT
def _define_userHMETAFILEPICT_head():
    class userHMETAFILEPICT(Structure):
        pass
    return userHMETAFILEPICT
def _define_userHMETAFILEPICT():
    userHMETAFILEPICT = win32more.System.SystemServices.userHMETAFILEPICT_head
    class userHMETAFILEPICT__u_e__Struct(Union):
        pass
    userHMETAFILEPICT__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", POINTER(win32more.System.SystemServices.remoteMETAFILEPICT_head)),
        ("hInproc64", Int64),
    ]
    userHMETAFILEPICT._fields_ = [
        ("fContext", Int32),
        ("u", userHMETAFILEPICT__u_e__Struct),
    ]
    return userHMETAFILEPICT
def _define_userHENHMETAFILE_head():
    class userHENHMETAFILE(Structure):
        pass
    return userHENHMETAFILE
def _define_userHENHMETAFILE():
    userHENHMETAFILE = win32more.System.SystemServices.userHENHMETAFILE_head
    class userHENHMETAFILE__u_e__Struct(Union):
        pass
    userHENHMETAFILE__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", POINTER(win32more.System.Com.BYTE_BLOB_head)),
        ("hInproc64", Int64),
    ]
    userHENHMETAFILE._fields_ = [
        ("fContext", Int32),
        ("u", userHENHMETAFILE__u_e__Struct),
    ]
    return userHENHMETAFILE
def _define_userBITMAP_head():
    class userBITMAP(Structure):
        pass
    return userBITMAP
def _define_userBITMAP():
    userBITMAP = win32more.System.SystemServices.userBITMAP_head
    userBITMAP._fields_ = [
        ("bmType", Int32),
        ("bmWidth", Int32),
        ("bmHeight", Int32),
        ("bmWidthBytes", Int32),
        ("bmPlanes", UInt16),
        ("bmBitsPixel", UInt16),
        ("cbSize", UInt32),
        ("pBuffer", Byte * 0),
    ]
    return userBITMAP
def _define_userHBITMAP_head():
    class userHBITMAP(Structure):
        pass
    return userHBITMAP
def _define_userHBITMAP():
    userHBITMAP = win32more.System.SystemServices.userHBITMAP_head
    class userHBITMAP__u_e__Struct(Union):
        pass
    userHBITMAP__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", POINTER(win32more.System.SystemServices.userBITMAP_head)),
        ("hInproc64", Int64),
    ]
    userHBITMAP._fields_ = [
        ("fContext", Int32),
        ("u", userHBITMAP__u_e__Struct),
    ]
    return userHBITMAP
def _define_userHPALETTE_head():
    class userHPALETTE(Structure):
        pass
    return userHPALETTE
def _define_userHPALETTE():
    userHPALETTE = win32more.System.SystemServices.userHPALETTE_head
    class userHPALETTE__u_e__Struct(Union):
        pass
    userHPALETTE__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", POINTER(win32more.Graphics.Gdi.LOGPALETTE_head)),
        ("hInproc64", Int64),
    ]
    userHPALETTE._fields_ = [
        ("fContext", Int32),
        ("u", userHPALETTE__u_e__Struct),
    ]
    return userHPALETTE
def _define_RemotableHandle_head():
    class RemotableHandle(Structure):
        pass
    return RemotableHandle
def _define_RemotableHandle():
    RemotableHandle = win32more.System.SystemServices.RemotableHandle_head
    class RemotableHandle__u_e__Struct(Union):
        pass
    RemotableHandle__u_e__Struct._fields_ = [
        ("hInproc", Int32),
        ("hRemote", Int32),
    ]
    RemotableHandle._fields_ = [
        ("fContext", Int32),
        ("u", RemotableHandle__u_e__Struct),
    ]
    return RemotableHandle
def _define_DEVICE_EVENT_MOUNT_head():
    class DEVICE_EVENT_MOUNT(Structure):
        pass
    return DEVICE_EVENT_MOUNT
def _define_DEVICE_EVENT_MOUNT():
    DEVICE_EVENT_MOUNT = win32more.System.SystemServices.DEVICE_EVENT_MOUNT_head
    DEVICE_EVENT_MOUNT._fields_ = [
        ("Version", UInt32),
        ("Flags", UInt32),
        ("FileSystemNameLength", UInt32),
        ("FileSystemNameOffset", UInt32),
    ]
    return DEVICE_EVENT_MOUNT
def _define_DEVICE_EVENT_BECOMING_READY_head():
    class DEVICE_EVENT_BECOMING_READY(Structure):
        pass
    return DEVICE_EVENT_BECOMING_READY
def _define_DEVICE_EVENT_BECOMING_READY():
    DEVICE_EVENT_BECOMING_READY = win32more.System.SystemServices.DEVICE_EVENT_BECOMING_READY_head
    DEVICE_EVENT_BECOMING_READY._fields_ = [
        ("Version", UInt32),
        ("Reason", UInt32),
        ("Estimated100msToReady", UInt32),
    ]
    return DEVICE_EVENT_BECOMING_READY
def _define_DEVICE_EVENT_EXTERNAL_REQUEST_head():
    class DEVICE_EVENT_EXTERNAL_REQUEST(Structure):
        pass
    return DEVICE_EVENT_EXTERNAL_REQUEST
def _define_DEVICE_EVENT_EXTERNAL_REQUEST():
    DEVICE_EVENT_EXTERNAL_REQUEST = win32more.System.SystemServices.DEVICE_EVENT_EXTERNAL_REQUEST_head
    DEVICE_EVENT_EXTERNAL_REQUEST._fields_ = [
        ("Version", UInt32),
        ("DeviceClass", UInt32),
        ("ButtonStatus", UInt16),
        ("Request", UInt16),
        ("SystemTime", win32more.Foundation.LARGE_INTEGER),
    ]
    return DEVICE_EVENT_EXTERNAL_REQUEST
def _define_DEVICE_EVENT_GENERIC_DATA_head():
    class DEVICE_EVENT_GENERIC_DATA(Structure):
        pass
    return DEVICE_EVENT_GENERIC_DATA
def _define_DEVICE_EVENT_GENERIC_DATA():
    DEVICE_EVENT_GENERIC_DATA = win32more.System.SystemServices.DEVICE_EVENT_GENERIC_DATA_head
    DEVICE_EVENT_GENERIC_DATA._fields_ = [
        ("EventNumber", UInt32),
    ]
    return DEVICE_EVENT_GENERIC_DATA
def _define_DEVICE_EVENT_RBC_DATA_head():
    class DEVICE_EVENT_RBC_DATA(Structure):
        pass
    return DEVICE_EVENT_RBC_DATA
def _define_DEVICE_EVENT_RBC_DATA():
    DEVICE_EVENT_RBC_DATA = win32more.System.SystemServices.DEVICE_EVENT_RBC_DATA_head
    DEVICE_EVENT_RBC_DATA._fields_ = [
        ("EventNumber", UInt32),
        ("SenseQualifier", Byte),
        ("SenseCode", Byte),
        ("SenseKey", Byte),
        ("Reserved", Byte),
        ("Information", UInt32),
    ]
    return DEVICE_EVENT_RBC_DATA
def _define_GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION_head():
    class GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION(Structure):
        pass
    return GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION
def _define_GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION():
    GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION = win32more.System.SystemServices.GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION_head
    GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION._fields_ = [
        ("DiskNumber", UInt32),
    ]
    return GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION
def _define_DISK_HEALTH_NOTIFICATION_DATA_head():
    class DISK_HEALTH_NOTIFICATION_DATA(Structure):
        pass
    return DISK_HEALTH_NOTIFICATION_DATA
def _define_DISK_HEALTH_NOTIFICATION_DATA():
    DISK_HEALTH_NOTIFICATION_DATA = win32more.System.SystemServices.DISK_HEALTH_NOTIFICATION_DATA_head
    DISK_HEALTH_NOTIFICATION_DATA._fields_ = [
        ("DeviceGuid", Guid),
    ]
    return DISK_HEALTH_NOTIFICATION_DATA
def _define_REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO_head():
    class REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO(Structure):
        pass
    return REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO
def _define_REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO():
    REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO = win32more.System.SystemServices.REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO_head
    REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO._fields_ = [
        ("Version", UInt32),
        ("Accurate", UInt32),
        ("Supported", UInt32),
        ("AccurateMask0", UInt32),
    ]
    return REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO
def _define_DEV_BROADCAST_HDR_head():
    class DEV_BROADCAST_HDR(Structure):
        pass
    return DEV_BROADCAST_HDR
def _define_DEV_BROADCAST_HDR():
    DEV_BROADCAST_HDR = win32more.System.SystemServices.DEV_BROADCAST_HDR_head
    DEV_BROADCAST_HDR._fields_ = [
        ("dbch_size", UInt32),
        ("dbch_devicetype", win32more.System.SystemServices.DEV_BROADCAST_HDR_DEVICE_TYPE),
        ("dbch_reserved", UInt32),
    ]
    return DEV_BROADCAST_HDR
def _define_VolLockBroadcast_head():
    class VolLockBroadcast(Structure):
        pass
    return VolLockBroadcast
def _define_VolLockBroadcast():
    VolLockBroadcast = win32more.System.SystemServices.VolLockBroadcast_head
    VolLockBroadcast._fields_ = [
        ("vlb_dbh", win32more.System.SystemServices.DEV_BROADCAST_HDR),
        ("vlb_owner", UInt32),
        ("vlb_perms", Byte),
        ("vlb_lockType", Byte),
        ("vlb_drive", Byte),
        ("vlb_flags", Byte),
    ]
    return VolLockBroadcast
def _define__DEV_BROADCAST_HEADER_head():
    class _DEV_BROADCAST_HEADER(Structure):
        pass
    return _DEV_BROADCAST_HEADER
def _define__DEV_BROADCAST_HEADER():
    _DEV_BROADCAST_HEADER = win32more.System.SystemServices._DEV_BROADCAST_HEADER_head
    _DEV_BROADCAST_HEADER._fields_ = [
        ("dbcd_size", UInt32),
        ("dbcd_devicetype", UInt32),
        ("dbcd_reserved", UInt32),
    ]
    return _DEV_BROADCAST_HEADER
def _define_DEV_BROADCAST_OEM_head():
    class DEV_BROADCAST_OEM(Structure):
        pass
    return DEV_BROADCAST_OEM
def _define_DEV_BROADCAST_OEM():
    DEV_BROADCAST_OEM = win32more.System.SystemServices.DEV_BROADCAST_OEM_head
    DEV_BROADCAST_OEM._fields_ = [
        ("dbco_size", UInt32),
        ("dbco_devicetype", UInt32),
        ("dbco_reserved", UInt32),
        ("dbco_identifier", UInt32),
        ("dbco_suppfunc", UInt32),
    ]
    return DEV_BROADCAST_OEM
def _define_DEV_BROADCAST_DEVNODE_head():
    class DEV_BROADCAST_DEVNODE(Structure):
        pass
    return DEV_BROADCAST_DEVNODE
def _define_DEV_BROADCAST_DEVNODE():
    DEV_BROADCAST_DEVNODE = win32more.System.SystemServices.DEV_BROADCAST_DEVNODE_head
    DEV_BROADCAST_DEVNODE._fields_ = [
        ("dbcd_size", UInt32),
        ("dbcd_devicetype", UInt32),
        ("dbcd_reserved", UInt32),
        ("dbcd_devnode", UInt32),
    ]
    return DEV_BROADCAST_DEVNODE
def _define_DEV_BROADCAST_VOLUME_head():
    class DEV_BROADCAST_VOLUME(Structure):
        pass
    return DEV_BROADCAST_VOLUME
def _define_DEV_BROADCAST_VOLUME():
    DEV_BROADCAST_VOLUME = win32more.System.SystemServices.DEV_BROADCAST_VOLUME_head
    DEV_BROADCAST_VOLUME._fields_ = [
        ("dbcv_size", UInt32),
        ("dbcv_devicetype", UInt32),
        ("dbcv_reserved", UInt32),
        ("dbcv_unitmask", UInt32),
        ("dbcv_flags", win32more.System.SystemServices.DEV_BROADCAST_VOLUME_FLAGS),
    ]
    return DEV_BROADCAST_VOLUME
def _define_DEV_BROADCAST_PORT_A_head():
    class DEV_BROADCAST_PORT_A(Structure):
        pass
    return DEV_BROADCAST_PORT_A
def _define_DEV_BROADCAST_PORT_A():
    DEV_BROADCAST_PORT_A = win32more.System.SystemServices.DEV_BROADCAST_PORT_A_head
    DEV_BROADCAST_PORT_A._fields_ = [
        ("dbcp_size", UInt32),
        ("dbcp_devicetype", UInt32),
        ("dbcp_reserved", UInt32),
        ("dbcp_name", win32more.Foundation.CHAR * 0),
    ]
    return DEV_BROADCAST_PORT_A
def _define_DEV_BROADCAST_PORT_W_head():
    class DEV_BROADCAST_PORT_W(Structure):
        pass
    return DEV_BROADCAST_PORT_W
def _define_DEV_BROADCAST_PORT_W():
    DEV_BROADCAST_PORT_W = win32more.System.SystemServices.DEV_BROADCAST_PORT_W_head
    DEV_BROADCAST_PORT_W._fields_ = [
        ("dbcp_size", UInt32),
        ("dbcp_devicetype", UInt32),
        ("dbcp_reserved", UInt32),
        ("dbcp_name", Char * 0),
    ]
    return DEV_BROADCAST_PORT_W
def _define_DEV_BROADCAST_NET_head():
    class DEV_BROADCAST_NET(Structure):
        pass
    return DEV_BROADCAST_NET
def _define_DEV_BROADCAST_NET():
    DEV_BROADCAST_NET = win32more.System.SystemServices.DEV_BROADCAST_NET_head
    DEV_BROADCAST_NET._fields_ = [
        ("dbcn_size", UInt32),
        ("dbcn_devicetype", UInt32),
        ("dbcn_reserved", UInt32),
        ("dbcn_resource", UInt32),
        ("dbcn_flags", UInt32),
    ]
    return DEV_BROADCAST_NET
def _define_DEV_BROADCAST_DEVICEINTERFACE_A_head():
    class DEV_BROADCAST_DEVICEINTERFACE_A(Structure):
        pass
    return DEV_BROADCAST_DEVICEINTERFACE_A
def _define_DEV_BROADCAST_DEVICEINTERFACE_A():
    DEV_BROADCAST_DEVICEINTERFACE_A = win32more.System.SystemServices.DEV_BROADCAST_DEVICEINTERFACE_A_head
    DEV_BROADCAST_DEVICEINTERFACE_A._fields_ = [
        ("dbcc_size", UInt32),
        ("dbcc_devicetype", UInt32),
        ("dbcc_reserved", UInt32),
        ("dbcc_classguid", Guid),
        ("dbcc_name", win32more.Foundation.CHAR * 0),
    ]
    return DEV_BROADCAST_DEVICEINTERFACE_A
def _define_DEV_BROADCAST_DEVICEINTERFACE_W_head():
    class DEV_BROADCAST_DEVICEINTERFACE_W(Structure):
        pass
    return DEV_BROADCAST_DEVICEINTERFACE_W
def _define_DEV_BROADCAST_DEVICEINTERFACE_W():
    DEV_BROADCAST_DEVICEINTERFACE_W = win32more.System.SystemServices.DEV_BROADCAST_DEVICEINTERFACE_W_head
    DEV_BROADCAST_DEVICEINTERFACE_W._fields_ = [
        ("dbcc_size", UInt32),
        ("dbcc_devicetype", UInt32),
        ("dbcc_reserved", UInt32),
        ("dbcc_classguid", Guid),
        ("dbcc_name", Char * 0),
    ]
    return DEV_BROADCAST_DEVICEINTERFACE_W
def _define_DEV_BROADCAST_HANDLE_head():
    class DEV_BROADCAST_HANDLE(Structure):
        pass
    return DEV_BROADCAST_HANDLE
def _define_DEV_BROADCAST_HANDLE():
    DEV_BROADCAST_HANDLE = win32more.System.SystemServices.DEV_BROADCAST_HANDLE_head
    DEV_BROADCAST_HANDLE._fields_ = [
        ("dbch_size", UInt32),
        ("dbch_devicetype", UInt32),
        ("dbch_reserved", UInt32),
        ("dbch_handle", win32more.Foundation.HANDLE),
        ("dbch_hdevnotify", c_void_p),
        ("dbch_eventguid", Guid),
        ("dbch_nameoffset", Int32),
        ("dbch_data", Byte * 0),
    ]
    return DEV_BROADCAST_HANDLE
def _define_DEV_BROADCAST_HANDLE32_head():
    class DEV_BROADCAST_HANDLE32(Structure):
        pass
    return DEV_BROADCAST_HANDLE32
def _define_DEV_BROADCAST_HANDLE32():
    DEV_BROADCAST_HANDLE32 = win32more.System.SystemServices.DEV_BROADCAST_HANDLE32_head
    DEV_BROADCAST_HANDLE32._fields_ = [
        ("dbch_size", UInt32),
        ("dbch_devicetype", UInt32),
        ("dbch_reserved", UInt32),
        ("dbch_handle", UInt32),
        ("dbch_hdevnotify", UInt32),
        ("dbch_eventguid", Guid),
        ("dbch_nameoffset", Int32),
        ("dbch_data", Byte * 0),
    ]
    return DEV_BROADCAST_HANDLE32
def _define_DEV_BROADCAST_HANDLE64_head():
    class DEV_BROADCAST_HANDLE64(Structure):
        pass
    return DEV_BROADCAST_HANDLE64
def _define_DEV_BROADCAST_HANDLE64():
    DEV_BROADCAST_HANDLE64 = win32more.System.SystemServices.DEV_BROADCAST_HANDLE64_head
    DEV_BROADCAST_HANDLE64._fields_ = [
        ("dbch_size", UInt32),
        ("dbch_devicetype", UInt32),
        ("dbch_reserved", UInt32),
        ("dbch_handle", UInt64),
        ("dbch_hdevnotify", UInt64),
        ("dbch_eventguid", Guid),
        ("dbch_nameoffset", Int32),
        ("dbch_data", Byte * 0),
    ]
    return DEV_BROADCAST_HANDLE64
def _define__DEV_BROADCAST_USERDEFINED_head():
    class _DEV_BROADCAST_USERDEFINED(Structure):
        pass
    return _DEV_BROADCAST_USERDEFINED
def _define__DEV_BROADCAST_USERDEFINED():
    _DEV_BROADCAST_USERDEFINED = win32more.System.SystemServices._DEV_BROADCAST_USERDEFINED_head
    _DEV_BROADCAST_USERDEFINED._fields_ = [
        ("dbud_dbh", win32more.System.SystemServices.DEV_BROADCAST_HDR),
        ("dbud_szName", win32more.Foundation.CHAR * 0),
    ]
    return _DEV_BROADCAST_USERDEFINED
def _define_AtlThunkData_t_head():
    class AtlThunkData_t(Structure):
        pass
    return AtlThunkData_t
def _define_AtlThunkData_t():
    AtlThunkData_t = win32more.System.SystemServices.AtlThunkData_t_head
    return AtlThunkData_t
def _define_XSAVE_CET_U_FORMAT_head():
    class XSAVE_CET_U_FORMAT(Structure):
        pass
    return XSAVE_CET_U_FORMAT
def _define_XSAVE_CET_U_FORMAT():
    XSAVE_CET_U_FORMAT = win32more.System.SystemServices.XSAVE_CET_U_FORMAT_head
    XSAVE_CET_U_FORMAT._fields_ = [
        ("Ia32CetUMsr", UInt64),
        ("Ia32Pl3SspMsr", UInt64),
    ]
    return XSAVE_CET_U_FORMAT
def _define_KERNEL_CET_CONTEXT_head():
    class KERNEL_CET_CONTEXT(Structure):
        pass
    return KERNEL_CET_CONTEXT
def _define_KERNEL_CET_CONTEXT():
    KERNEL_CET_CONTEXT = win32more.System.SystemServices.KERNEL_CET_CONTEXT_head
    class KERNEL_CET_CONTEXT__Anonymous_e__Union(Union):
        pass
    class KERNEL_CET_CONTEXT__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    KERNEL_CET_CONTEXT__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt16),
    ]
    KERNEL_CET_CONTEXT__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    KERNEL_CET_CONTEXT__Anonymous_e__Union._fields_ = [
        ("AllFlags", UInt16),
        ("Anonymous", KERNEL_CET_CONTEXT__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    KERNEL_CET_CONTEXT._anonymous_ = [
        'Anonymous',
    ]
    KERNEL_CET_CONTEXT._fields_ = [
        ("Ssp", UInt64),
        ("Rip", UInt64),
        ("SegCs", UInt16),
        ("Anonymous", KERNEL_CET_CONTEXT__Anonymous_e__Union),
        ("Fill", UInt16 * 2),
    ]
    return KERNEL_CET_CONTEXT
def _define_SCOPE_TABLE_AMD64_head():
    class SCOPE_TABLE_AMD64(Structure):
        pass
    return SCOPE_TABLE_AMD64
def _define_SCOPE_TABLE_AMD64():
    SCOPE_TABLE_AMD64 = win32more.System.SystemServices.SCOPE_TABLE_AMD64_head
    class SCOPE_TABLE_AMD64__Anonymous_e__Struct(Structure):
        pass
    SCOPE_TABLE_AMD64__Anonymous_e__Struct._fields_ = [
        ("BeginAddress", UInt32),
        ("EndAddress", UInt32),
        ("HandlerAddress", UInt32),
        ("JumpTarget", UInt32),
    ]
    SCOPE_TABLE_AMD64._fields_ = [
        ("Count", UInt32),
        ("ScopeRecord", SCOPE_TABLE_AMD64__Anonymous_e__Struct * 0),
    ]
    return SCOPE_TABLE_AMD64
def _define_POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK():
    return CFUNCTYPE(UInt32,win32more.Foundation.HANDLE,c_void_p,POINTER(UInt32),POINTER(POINTER(win32more.System.Diagnostics.Debug.IMAGE_RUNTIME_FUNCTION_ENTRY_head)), use_last_error=False)
def _define_PEXCEPTION_FILTER():
    return CFUNCTYPE(Int32,POINTER(win32more.System.Diagnostics.Debug.EXCEPTION_POINTERS_head),c_void_p, use_last_error=False)
def _define_PTERMINATION_HANDLER():
    return CFUNCTYPE(Void,win32more.Foundation.BOOLEAN,c_void_p, use_last_error=False)
def _define_SCOPE_TABLE_ARM_head():
    class SCOPE_TABLE_ARM(Structure):
        pass
    return SCOPE_TABLE_ARM
def _define_SCOPE_TABLE_ARM():
    SCOPE_TABLE_ARM = win32more.System.SystemServices.SCOPE_TABLE_ARM_head
    class SCOPE_TABLE_ARM__Anonymous_e__Struct(Structure):
        pass
    SCOPE_TABLE_ARM__Anonymous_e__Struct._fields_ = [
        ("BeginAddress", UInt32),
        ("EndAddress", UInt32),
        ("HandlerAddress", UInt32),
        ("JumpTarget", UInt32),
    ]
    SCOPE_TABLE_ARM._fields_ = [
        ("Count", UInt32),
        ("ScopeRecord", SCOPE_TABLE_ARM__Anonymous_e__Struct * 0),
    ]
    return SCOPE_TABLE_ARM
def _define_SCOPE_TABLE_ARM64_head():
    class SCOPE_TABLE_ARM64(Structure):
        pass
    return SCOPE_TABLE_ARM64
def _define_SCOPE_TABLE_ARM64():
    SCOPE_TABLE_ARM64 = win32more.System.SystemServices.SCOPE_TABLE_ARM64_head
    class SCOPE_TABLE_ARM64__Anonymous_e__Struct(Structure):
        pass
    SCOPE_TABLE_ARM64__Anonymous_e__Struct._fields_ = [
        ("BeginAddress", UInt32),
        ("EndAddress", UInt32),
        ("HandlerAddress", UInt32),
        ("JumpTarget", UInt32),
    ]
    SCOPE_TABLE_ARM64._fields_ = [
        ("Count", UInt32),
        ("ScopeRecord", SCOPE_TABLE_ARM64__Anonymous_e__Struct * 0),
    ]
    return SCOPE_TABLE_ARM64
def _define_DISPATCHER_CONTEXT_NONVOLREG_ARM64_head():
    class DISPATCHER_CONTEXT_NONVOLREG_ARM64(Union):
        pass
    return DISPATCHER_CONTEXT_NONVOLREG_ARM64
def _define_DISPATCHER_CONTEXT_NONVOLREG_ARM64():
    DISPATCHER_CONTEXT_NONVOLREG_ARM64 = win32more.System.SystemServices.DISPATCHER_CONTEXT_NONVOLREG_ARM64_head
    class DISPATCHER_CONTEXT_NONVOLREG_ARM64__Anonymous_e__Struct(Structure):
        pass
    DISPATCHER_CONTEXT_NONVOLREG_ARM64__Anonymous_e__Struct._fields_ = [
        ("GpNvRegs", UInt64 * 11),
        ("FpNvRegs", Double * 8),
    ]
    DISPATCHER_CONTEXT_NONVOLREG_ARM64._anonymous_ = [
        'Anonymous',
    ]
    DISPATCHER_CONTEXT_NONVOLREG_ARM64._fields_ = [
        ("Buffer", Byte * 152),
        ("Anonymous", DISPATCHER_CONTEXT_NONVOLREG_ARM64__Anonymous_e__Struct),
    ]
    return DISPATCHER_CONTEXT_NONVOLREG_ARM64
def _define_SECURITY_DESCRIPTOR_RELATIVE_head():
    class SECURITY_DESCRIPTOR_RELATIVE(Structure):
        pass
    return SECURITY_DESCRIPTOR_RELATIVE
def _define_SECURITY_DESCRIPTOR_RELATIVE():
    SECURITY_DESCRIPTOR_RELATIVE = win32more.System.SystemServices.SECURITY_DESCRIPTOR_RELATIVE_head
    SECURITY_DESCRIPTOR_RELATIVE._fields_ = [
        ("Revision", Byte),
        ("Sbz1", Byte),
        ("Control", UInt16),
        ("Owner", UInt32),
        ("Group", UInt32),
        ("Sacl", UInt32),
        ("Dacl", UInt32),
    ]
    return SECURITY_DESCRIPTOR_RELATIVE
def _define_SECURITY_OBJECT_AI_PARAMS_head():
    class SECURITY_OBJECT_AI_PARAMS(Structure):
        pass
    return SECURITY_OBJECT_AI_PARAMS
def _define_SECURITY_OBJECT_AI_PARAMS():
    SECURITY_OBJECT_AI_PARAMS = win32more.System.SystemServices.SECURITY_OBJECT_AI_PARAMS_head
    SECURITY_OBJECT_AI_PARAMS._fields_ = [
        ("Size", UInt32),
        ("ConstraintMask", UInt32),
    ]
    return SECURITY_OBJECT_AI_PARAMS
ACCESS_REASON_TYPE = Int32
ACCESS_REASON_TYPE_AccessReasonNone = 0
ACCESS_REASON_TYPE_AccessReasonAllowedAce = 65536
ACCESS_REASON_TYPE_AccessReasonDeniedAce = 131072
ACCESS_REASON_TYPE_AccessReasonAllowedParentAce = 196608
ACCESS_REASON_TYPE_AccessReasonDeniedParentAce = 262144
ACCESS_REASON_TYPE_AccessReasonNotGrantedByCape = 327680
ACCESS_REASON_TYPE_AccessReasonNotGrantedByParentCape = 393216
ACCESS_REASON_TYPE_AccessReasonNotGrantedToAppContainer = 458752
ACCESS_REASON_TYPE_AccessReasonMissingPrivilege = 1048576
ACCESS_REASON_TYPE_AccessReasonFromPrivilege = 2097152
ACCESS_REASON_TYPE_AccessReasonIntegrityLevel = 3145728
ACCESS_REASON_TYPE_AccessReasonOwnership = 4194304
ACCESS_REASON_TYPE_AccessReasonNullDacl = 5242880
ACCESS_REASON_TYPE_AccessReasonEmptyDacl = 6291456
ACCESS_REASON_TYPE_AccessReasonNoSD = 7340032
ACCESS_REASON_TYPE_AccessReasonNoGrant = 8388608
ACCESS_REASON_TYPE_AccessReasonTrustLabel = 9437184
ACCESS_REASON_TYPE_AccessReasonFilterAce = 10485760
def _define_SE_TOKEN_USER_head():
    class SE_TOKEN_USER(Structure):
        pass
    return SE_TOKEN_USER
def _define_SE_TOKEN_USER():
    SE_TOKEN_USER = win32more.System.SystemServices.SE_TOKEN_USER_head
    class SE_TOKEN_USER__Anonymous2_e__Union(Union):
        pass
    SE_TOKEN_USER__Anonymous2_e__Union._fields_ = [
        ("Sid", win32more.Security.SID),
        ("Buffer", Byte * 68),
    ]
    class SE_TOKEN_USER__Anonymous1_e__Union(Union):
        pass
    SE_TOKEN_USER__Anonymous1_e__Union._fields_ = [
        ("TokenUser", win32more.Security.TOKEN_USER),
        ("User", win32more.Security.SID_AND_ATTRIBUTES),
    ]
    SE_TOKEN_USER._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    SE_TOKEN_USER._fields_ = [
        ("Anonymous1", SE_TOKEN_USER__Anonymous1_e__Union),
        ("Anonymous2", SE_TOKEN_USER__Anonymous2_e__Union),
    ]
    return SE_TOKEN_USER
def _define_TOKEN_SID_INFORMATION_head():
    class TOKEN_SID_INFORMATION(Structure):
        pass
    return TOKEN_SID_INFORMATION
def _define_TOKEN_SID_INFORMATION():
    TOKEN_SID_INFORMATION = win32more.System.SystemServices.TOKEN_SID_INFORMATION_head
    TOKEN_SID_INFORMATION._fields_ = [
        ("Sid", win32more.Foundation.PSID),
    ]
    return TOKEN_SID_INFORMATION
def _define_TOKEN_BNO_ISOLATION_INFORMATION_head():
    class TOKEN_BNO_ISOLATION_INFORMATION(Structure):
        pass
    return TOKEN_BNO_ISOLATION_INFORMATION
def _define_TOKEN_BNO_ISOLATION_INFORMATION():
    TOKEN_BNO_ISOLATION_INFORMATION = win32more.System.SystemServices.TOKEN_BNO_ISOLATION_INFORMATION_head
    TOKEN_BNO_ISOLATION_INFORMATION._fields_ = [
        ("IsolationPrefix", win32more.Foundation.PWSTR),
        ("IsolationEnabled", win32more.Foundation.BOOLEAN),
    ]
    return TOKEN_BNO_ISOLATION_INFORMATION
SE_IMAGE_SIGNATURE_TYPE = Int32
SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureNone = 0
SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureEmbedded = 1
SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCache = 2
SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCatalogCached = 3
SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCatalogNotCached = 4
SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCatalogHint = 5
SE_IMAGE_SIGNATURE_TYPE_SeImageSignaturePackageCatalog = 6
SE_IMAGE_SIGNATURE_TYPE_SeImageSignaturePplMitigated = 7
SE_LEARNING_MODE_DATA_TYPE = Int32
SE_LEARNING_MODE_DATA_TYPE_SeLearningModeInvalidType = 0
SE_LEARNING_MODE_DATA_TYPE_SeLearningModeSettings = 1
SE_LEARNING_MODE_DATA_TYPE_SeLearningModeMax = 2
def _define_NT_TIB32_head():
    class NT_TIB32(Structure):
        pass
    return NT_TIB32
def _define_NT_TIB32():
    NT_TIB32 = win32more.System.SystemServices.NT_TIB32_head
    class NT_TIB32__Anonymous_e__Union(Union):
        pass
    NT_TIB32__Anonymous_e__Union._fields_ = [
        ("FiberData", UInt32),
        ("Version", UInt32),
    ]
    NT_TIB32._anonymous_ = [
        'Anonymous',
    ]
    NT_TIB32._fields_ = [
        ("ExceptionList", UInt32),
        ("StackBase", UInt32),
        ("StackLimit", UInt32),
        ("SubSystemTib", UInt32),
        ("Anonymous", NT_TIB32__Anonymous_e__Union),
        ("ArbitraryUserPointer", UInt32),
        ("Self", UInt32),
    ]
    return NT_TIB32
def _define_NT_TIB64_head():
    class NT_TIB64(Structure):
        pass
    return NT_TIB64
def _define_NT_TIB64():
    NT_TIB64 = win32more.System.SystemServices.NT_TIB64_head
    class NT_TIB64__Anonymous_e__Union(Union):
        pass
    NT_TIB64__Anonymous_e__Union._fields_ = [
        ("FiberData", UInt64),
        ("Version", UInt32),
    ]
    NT_TIB64._anonymous_ = [
        'Anonymous',
    ]
    NT_TIB64._fields_ = [
        ("ExceptionList", UInt64),
        ("StackBase", UInt64),
        ("StackLimit", UInt64),
        ("SubSystemTib", UInt64),
        ("Anonymous", NT_TIB64__Anonymous_e__Union),
        ("ArbitraryUserPointer", UInt64),
        ("Self", UInt64),
    ]
    return NT_TIB64
def _define_UMS_CREATE_THREAD_ATTRIBUTES_head():
    class UMS_CREATE_THREAD_ATTRIBUTES(Structure):
        pass
    return UMS_CREATE_THREAD_ATTRIBUTES
def _define_UMS_CREATE_THREAD_ATTRIBUTES():
    UMS_CREATE_THREAD_ATTRIBUTES = win32more.System.SystemServices.UMS_CREATE_THREAD_ATTRIBUTES_head
    UMS_CREATE_THREAD_ATTRIBUTES._fields_ = [
        ("UmsVersion", UInt32),
        ("UmsContext", c_void_p),
        ("UmsCompletionList", c_void_p),
    ]
    return UMS_CREATE_THREAD_ATTRIBUTES
def _define_COMPONENT_FILTER_head():
    class COMPONENT_FILTER(Structure):
        pass
    return COMPONENT_FILTER
def _define_COMPONENT_FILTER():
    COMPONENT_FILTER = win32more.System.SystemServices.COMPONENT_FILTER_head
    COMPONENT_FILTER._fields_ = [
        ("ComponentFlags", UInt32),
    ]
    return COMPONENT_FILTER
def _define_RATE_QUOTA_LIMIT_head():
    class RATE_QUOTA_LIMIT(Union):
        pass
    return RATE_QUOTA_LIMIT
def _define_RATE_QUOTA_LIMIT():
    RATE_QUOTA_LIMIT = win32more.System.SystemServices.RATE_QUOTA_LIMIT_head
    class RATE_QUOTA_LIMIT__Anonymous_e__Struct(Structure):
        pass
    RATE_QUOTA_LIMIT__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    RATE_QUOTA_LIMIT._anonymous_ = [
        'Anonymous',
    ]
    RATE_QUOTA_LIMIT._fields_ = [
        ("RateData", UInt32),
        ("Anonymous", RATE_QUOTA_LIMIT__Anonymous_e__Struct),
    ]
    return RATE_QUOTA_LIMIT
def _define_QUOTA_LIMITS_EX_head():
    class QUOTA_LIMITS_EX(Structure):
        pass
    return QUOTA_LIMITS_EX
def _define_QUOTA_LIMITS_EX():
    QUOTA_LIMITS_EX = win32more.System.SystemServices.QUOTA_LIMITS_EX_head
    QUOTA_LIMITS_EX._fields_ = [
        ("PagedPoolLimit", UIntPtr),
        ("NonPagedPoolLimit", UIntPtr),
        ("MinimumWorkingSetSize", UIntPtr),
        ("MaximumWorkingSetSize", UIntPtr),
        ("PagefileLimit", UIntPtr),
        ("TimeLimit", win32more.Foundation.LARGE_INTEGER),
        ("WorkingSetLimit", UIntPtr),
        ("Reserved2", UIntPtr),
        ("Reserved3", UIntPtr),
        ("Reserved4", UIntPtr),
        ("Flags", UInt32),
        ("CpuRateLimit", win32more.System.SystemServices.RATE_QUOTA_LIMIT),
    ]
    return QUOTA_LIMITS_EX
def _define_PROCESS_MITIGATION_ASLR_POLICY_head():
    class PROCESS_MITIGATION_ASLR_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_ASLR_POLICY
def _define_PROCESS_MITIGATION_ASLR_POLICY():
    PROCESS_MITIGATION_ASLR_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_ASLR_POLICY_head
    class PROCESS_MITIGATION_ASLR_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_ASLR_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_ASLR_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_ASLR_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_ASLR_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_ASLR_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_ASLR_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_ASLR_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_ASLR_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_ASLR_POLICY
def _define_PROCESS_MITIGATION_DEP_POLICY_head():
    class PROCESS_MITIGATION_DEP_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_DEP_POLICY
def _define_PROCESS_MITIGATION_DEP_POLICY():
    PROCESS_MITIGATION_DEP_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_DEP_POLICY_head
    class PROCESS_MITIGATION_DEP_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_DEP_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_DEP_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_DEP_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_DEP_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_DEP_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_DEP_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_DEP_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_DEP_POLICY__Anonymous_e__Union),
        ("Permanent", win32more.Foundation.BOOLEAN),
    ]
    return PROCESS_MITIGATION_DEP_POLICY
def _define_PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY_head():
    class PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
def _define_PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY():
    PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY_head
    class PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
def _define_PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY_head():
    class PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
def _define_PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY():
    PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY_head
    class PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
def _define_PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY_head():
    class PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
def _define_PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY():
    PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY_head
    class PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
def _define_PROCESS_MITIGATION_DYNAMIC_CODE_POLICY_head():
    class PROCESS_MITIGATION_DYNAMIC_CODE_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
def _define_PROCESS_MITIGATION_DYNAMIC_CODE_POLICY():
    PROCESS_MITIGATION_DYNAMIC_CODE_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_DYNAMIC_CODE_POLICY_head
    class PROCESS_MITIGATION_DYNAMIC_CODE_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_DYNAMIC_CODE_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_DYNAMIC_CODE_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_DYNAMIC_CODE_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_DYNAMIC_CODE_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_DYNAMIC_CODE_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_DYNAMIC_CODE_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_DYNAMIC_CODE_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_DYNAMIC_CODE_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
def _define_PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY_head():
    class PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
def _define_PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY():
    PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY_head
    class PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
def _define_PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY_head():
    class PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
def _define_PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY():
    PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY_head
    class PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
def _define_PROCESS_MITIGATION_FONT_DISABLE_POLICY_head():
    class PROCESS_MITIGATION_FONT_DISABLE_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_FONT_DISABLE_POLICY
def _define_PROCESS_MITIGATION_FONT_DISABLE_POLICY():
    PROCESS_MITIGATION_FONT_DISABLE_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_FONT_DISABLE_POLICY_head
    class PROCESS_MITIGATION_FONT_DISABLE_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_FONT_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_FONT_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_FONT_DISABLE_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_FONT_DISABLE_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_FONT_DISABLE_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_FONT_DISABLE_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_FONT_DISABLE_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_FONT_DISABLE_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_FONT_DISABLE_POLICY
def _define_PROCESS_MITIGATION_IMAGE_LOAD_POLICY_head():
    class PROCESS_MITIGATION_IMAGE_LOAD_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_IMAGE_LOAD_POLICY
def _define_PROCESS_MITIGATION_IMAGE_LOAD_POLICY():
    PROCESS_MITIGATION_IMAGE_LOAD_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_IMAGE_LOAD_POLICY_head
    class PROCESS_MITIGATION_IMAGE_LOAD_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_IMAGE_LOAD_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_IMAGE_LOAD_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_IMAGE_LOAD_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_IMAGE_LOAD_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_IMAGE_LOAD_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_IMAGE_LOAD_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_IMAGE_LOAD_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_IMAGE_LOAD_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_IMAGE_LOAD_POLICY
def _define_PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY_head():
    class PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
def _define_PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY():
    PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY_head
    class PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
def _define_PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY_head():
    class PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
def _define_PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY():
    PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY_head
    class PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
def _define_PROCESS_MITIGATION_CHILD_PROCESS_POLICY_head():
    class PROCESS_MITIGATION_CHILD_PROCESS_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_CHILD_PROCESS_POLICY
def _define_PROCESS_MITIGATION_CHILD_PROCESS_POLICY():
    PROCESS_MITIGATION_CHILD_PROCESS_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_CHILD_PROCESS_POLICY_head
    class PROCESS_MITIGATION_CHILD_PROCESS_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_CHILD_PROCESS_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_CHILD_PROCESS_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_CHILD_PROCESS_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_CHILD_PROCESS_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_CHILD_PROCESS_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_CHILD_PROCESS_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_CHILD_PROCESS_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_CHILD_PROCESS_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_CHILD_PROCESS_POLICY
def _define_PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY_head():
    class PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
def _define_PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY():
    PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY_head
    class PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
def _define_PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY_head():
    class PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
def _define_PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY():
    PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY_head
    class PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
def _define_PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY_head():
    class PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY(Structure):
        pass
    return PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
def _define_PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY():
    PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY = win32more.System.SystemServices.PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY_head
    class PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY__Anonymous_e__Union._fields_ = [
        ("Flags", UInt32),
        ("Anonymous", PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY._fields_ = [
        ("Anonymous", PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY__Anonymous_e__Union),
    ]
    return PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
def _define_SILOOBJECT_BASIC_INFORMATION_head():
    class SILOOBJECT_BASIC_INFORMATION(Structure):
        pass
    return SILOOBJECT_BASIC_INFORMATION
def _define_SILOOBJECT_BASIC_INFORMATION():
    SILOOBJECT_BASIC_INFORMATION = win32more.System.SystemServices.SILOOBJECT_BASIC_INFORMATION_head
    SILOOBJECT_BASIC_INFORMATION._fields_ = [
        ("SiloId", UInt32),
        ("SiloParentId", UInt32),
        ("NumberOfProcesses", UInt32),
        ("IsInServerSilo", win32more.Foundation.BOOLEAN),
        ("Reserved", Byte * 3),
    ]
    return SILOOBJECT_BASIC_INFORMATION
SERVERSILO_STATE = Int32
SERVERSILO_INITING = 0
SERVERSILO_STARTED = 1
SERVERSILO_SHUTTING_DOWN = 2
SERVERSILO_TERMINATING = 3
SERVERSILO_TERMINATED = 4
def _define_SERVERSILO_BASIC_INFORMATION_head():
    class SERVERSILO_BASIC_INFORMATION(Structure):
        pass
    return SERVERSILO_BASIC_INFORMATION
def _define_SERVERSILO_BASIC_INFORMATION():
    SERVERSILO_BASIC_INFORMATION = win32more.System.SystemServices.SERVERSILO_BASIC_INFORMATION_head
    SERVERSILO_BASIC_INFORMATION._fields_ = [
        ("ServiceSessionId", UInt32),
        ("State", win32more.System.SystemServices.SERVERSILO_STATE),
        ("ExitStatus", UInt32),
        ("IsDownlevelContainer", win32more.Foundation.BOOLEAN),
        ("ApiSetSchema", c_void_p),
        ("HostApiSetSchema", c_void_p),
    ]
    return SERVERSILO_BASIC_INFORMATION
def _define_MEM_ADDRESS_REQUIREMENTS_head():
    class MEM_ADDRESS_REQUIREMENTS(Structure):
        pass
    return MEM_ADDRESS_REQUIREMENTS
def _define_MEM_ADDRESS_REQUIREMENTS():
    MEM_ADDRESS_REQUIREMENTS = win32more.System.SystemServices.MEM_ADDRESS_REQUIREMENTS_head
    MEM_ADDRESS_REQUIREMENTS._fields_ = [
        ("LowestStartingAddress", c_void_p),
        ("HighestEndingAddress", c_void_p),
        ("Alignment", UIntPtr),
    ]
    return MEM_ADDRESS_REQUIREMENTS
MEM_DEDICATED_ATTRIBUTE_TYPE = Int32
MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeReadBandwidth = 0
MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeReadLatency = 1
MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeWriteBandwidth = 2
MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeWriteLatency = 3
MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeMax = 4
MEM_SECTION_EXTENDED_PARAMETER_TYPE = Int32
MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterInvalidType = 0
MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterUserPhysicalFlags = 1
MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterNumaNode = 2
MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterSigningLevel = 3
MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterMax = 4
def _define_MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE_head():
    class MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE(Structure):
        pass
    return MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE
def _define_MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE():
    MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE = win32more.System.SystemServices.MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE_head
    MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE._fields_ = [
        ("Type", win32more.System.SystemServices.MEM_DEDICATED_ATTRIBUTE_TYPE),
        ("Reserved", UInt32),
        ("Value", UInt64),
    ]
    return MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE
def _define_MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION_head():
    class MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION(Structure):
        pass
    return MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION
def _define_MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION():
    MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION = win32more.System.SystemServices.MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION_head
    MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION._fields_ = [
        ("NextEntryOffset", UInt32),
        ("SizeOfInformation", UInt32),
        ("Flags", UInt32),
        ("AttributesOffset", UInt32),
        ("AttributeCount", UInt32),
        ("Reserved", UInt32),
        ("TypeId", UInt64),
    ]
    return MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION
def _define_SCRUB_DATA_INPUT_head():
    class SCRUB_DATA_INPUT(Structure):
        pass
    return SCRUB_DATA_INPUT
def _define_SCRUB_DATA_INPUT():
    SCRUB_DATA_INPUT = win32more.System.SystemServices.SCRUB_DATA_INPUT_head
    SCRUB_DATA_INPUT._fields_ = [
        ("Size", UInt32),
        ("Flags", UInt32),
        ("MaximumIos", UInt32),
        ("ObjectId", UInt32 * 4),
        ("Reserved", UInt32 * 41),
        ("ResumeContext", Byte * 1040),
    ]
    return SCRUB_DATA_INPUT
def _define_SCRUB_PARITY_EXTENT_head():
    class SCRUB_PARITY_EXTENT(Structure):
        pass
    return SCRUB_PARITY_EXTENT
def _define_SCRUB_PARITY_EXTENT():
    SCRUB_PARITY_EXTENT = win32more.System.SystemServices.SCRUB_PARITY_EXTENT_head
    SCRUB_PARITY_EXTENT._fields_ = [
        ("Offset", Int64),
        ("Length", UInt64),
    ]
    return SCRUB_PARITY_EXTENT
def _define_SCRUB_PARITY_EXTENT_DATA_head():
    class SCRUB_PARITY_EXTENT_DATA(Structure):
        pass
    return SCRUB_PARITY_EXTENT_DATA
def _define_SCRUB_PARITY_EXTENT_DATA():
    SCRUB_PARITY_EXTENT_DATA = win32more.System.SystemServices.SCRUB_PARITY_EXTENT_DATA_head
    SCRUB_PARITY_EXTENT_DATA._fields_ = [
        ("Size", UInt16),
        ("Flags", UInt16),
        ("NumberOfParityExtents", UInt16),
        ("MaximumNumberOfParityExtents", UInt16),
        ("ParityExtents", win32more.System.SystemServices.SCRUB_PARITY_EXTENT * 0),
    ]
    return SCRUB_PARITY_EXTENT_DATA
def _define_SCRUB_DATA_OUTPUT_head():
    class SCRUB_DATA_OUTPUT(Structure):
        pass
    return SCRUB_DATA_OUTPUT
def _define_SCRUB_DATA_OUTPUT():
    SCRUB_DATA_OUTPUT = win32more.System.SystemServices.SCRUB_DATA_OUTPUT_head
    SCRUB_DATA_OUTPUT._fields_ = [
        ("Size", UInt32),
        ("Flags", UInt32),
        ("Status", UInt32),
        ("ErrorFileOffset", UInt64),
        ("ErrorLength", UInt64),
        ("NumberOfBytesRepaired", UInt64),
        ("NumberOfBytesFailed", UInt64),
        ("InternalFileReference", UInt64),
        ("ResumeContextLength", UInt16),
        ("ParityExtentDataOffset", UInt16),
        ("Reserved", UInt32 * 9),
        ("NumberOfMetadataBytesProcessed", UInt64),
        ("NumberOfDataBytesProcessed", UInt64),
        ("TotalNumberOfMetadataBytesInUse", UInt64),
        ("TotalNumberOfDataBytesInUse", UInt64),
        ("DataBytesSkippedDueToNoAllocation", UInt64),
        ("DataBytesSkippedDueToInvalidRun", UInt64),
        ("DataBytesSkippedDueToIntegrityStream", UInt64),
        ("DataBytesSkippedDueToRegionBeingClean", UInt64),
        ("DataBytesSkippedDueToLockConflict", UInt64),
        ("DataBytesSkippedDueToNoScrubDataFlag", UInt64),
        ("DataBytesSkippedDueToNoScrubNonIntegrityStreamFlag", UInt64),
        ("DataBytesScrubbed", UInt64),
        ("ResumeContext", Byte * 1040),
    ]
    return SCRUB_DATA_OUTPUT
SharedVirtualDiskSupportType = Int32
SharedVirtualDiskSupportType_SharedVirtualDisksUnsupported = 0
SharedVirtualDiskSupportType_SharedVirtualDisksSupported = 1
SharedVirtualDiskSupportType_SharedVirtualDiskSnapshotsSupported = 3
SharedVirtualDiskSupportType_SharedVirtualDiskCDPSnapshotsSupported = 7
SharedVirtualDiskHandleState = Int32
SharedVirtualDiskHandleState_SharedVirtualDiskHandleStateNone = 0
SharedVirtualDiskHandleState_SharedVirtualDiskHandleStateFileShared = 1
SharedVirtualDiskHandleState_SharedVirtualDiskHandleStateHandleShared = 3
def _define_SHARED_VIRTUAL_DISK_SUPPORT_head():
    class SHARED_VIRTUAL_DISK_SUPPORT(Structure):
        pass
    return SHARED_VIRTUAL_DISK_SUPPORT
def _define_SHARED_VIRTUAL_DISK_SUPPORT():
    SHARED_VIRTUAL_DISK_SUPPORT = win32more.System.SystemServices.SHARED_VIRTUAL_DISK_SUPPORT_head
    SHARED_VIRTUAL_DISK_SUPPORT._fields_ = [
        ("SharedVirtualDiskSupport", win32more.System.SystemServices.SharedVirtualDiskSupportType),
        ("HandleState", win32more.System.SystemServices.SharedVirtualDiskHandleState),
    ]
    return SHARED_VIRTUAL_DISK_SUPPORT
def _define_REARRANGE_FILE_DATA_head():
    class REARRANGE_FILE_DATA(Structure):
        pass
    return REARRANGE_FILE_DATA
def _define_REARRANGE_FILE_DATA():
    REARRANGE_FILE_DATA = win32more.System.SystemServices.REARRANGE_FILE_DATA_head
    REARRANGE_FILE_DATA._fields_ = [
        ("SourceStartingOffset", UInt64),
        ("TargetOffset", UInt64),
        ("SourceFileHandle", win32more.Foundation.HANDLE),
        ("Length", UInt32),
        ("Flags", UInt32),
    ]
    return REARRANGE_FILE_DATA
def _define_REARRANGE_FILE_DATA32_head():
    class REARRANGE_FILE_DATA32(Structure):
        pass
    return REARRANGE_FILE_DATA32
def _define_REARRANGE_FILE_DATA32():
    REARRANGE_FILE_DATA32 = win32more.System.SystemServices.REARRANGE_FILE_DATA32_head
    REARRANGE_FILE_DATA32._fields_ = [
        ("SourceStartingOffset", UInt64),
        ("TargetOffset", UInt64),
        ("SourceFileHandle", UInt32),
        ("Length", UInt32),
        ("Flags", UInt32),
    ]
    return REARRANGE_FILE_DATA32
def _define_SHUFFLE_FILE_DATA_head():
    class SHUFFLE_FILE_DATA(Structure):
        pass
    return SHUFFLE_FILE_DATA
def _define_SHUFFLE_FILE_DATA():
    SHUFFLE_FILE_DATA = win32more.System.SystemServices.SHUFFLE_FILE_DATA_head
    SHUFFLE_FILE_DATA._fields_ = [
        ("StartingOffset", Int64),
        ("Length", Int64),
        ("Flags", UInt32),
    ]
    return SHUFFLE_FILE_DATA
def _define_NETWORK_APP_INSTANCE_EA_head():
    class NETWORK_APP_INSTANCE_EA(Structure):
        pass
    return NETWORK_APP_INSTANCE_EA
def _define_NETWORK_APP_INSTANCE_EA():
    NETWORK_APP_INSTANCE_EA = win32more.System.SystemServices.NETWORK_APP_INSTANCE_EA_head
    NETWORK_APP_INSTANCE_EA._fields_ = [
        ("AppInstanceID", Guid),
        ("CsvFlags", UInt32),
    ]
    return NETWORK_APP_INSTANCE_EA
MONITOR_DISPLAY_STATE = Int32
MONITOR_DISPLAY_STATE_PowerMonitorOff = 0
MONITOR_DISPLAY_STATE_PowerMonitorOn = 1
MONITOR_DISPLAY_STATE_PowerMonitorDim = 2
USER_ACTIVITY_PRESENCE = Int32
USER_ACTIVITY_PRESENCE_PowerUserPresent = 0
USER_ACTIVITY_PRESENCE_PowerUserNotPresent = 1
USER_ACTIVITY_PRESENCE_PowerUserInactive = 2
USER_ACTIVITY_PRESENCE_PowerUserMaximum = 3
USER_ACTIVITY_PRESENCE_PowerUserInvalid = 3
POWER_USER_PRESENCE_TYPE = Int32
POWER_USER_PRESENCE_TYPE_UserNotPresent = 0
POWER_USER_PRESENCE_TYPE_UserPresent = 1
POWER_USER_PRESENCE_TYPE_UserUnknown = 255
def _define_POWER_USER_PRESENCE_head():
    class POWER_USER_PRESENCE(Structure):
        pass
    return POWER_USER_PRESENCE
def _define_POWER_USER_PRESENCE():
    POWER_USER_PRESENCE = win32more.System.SystemServices.POWER_USER_PRESENCE_head
    POWER_USER_PRESENCE._fields_ = [
        ("UserPresence", win32more.System.SystemServices.POWER_USER_PRESENCE_TYPE),
    ]
    return POWER_USER_PRESENCE
def _define_POWER_SESSION_CONNECT_head():
    class POWER_SESSION_CONNECT(Structure):
        pass
    return POWER_SESSION_CONNECT
def _define_POWER_SESSION_CONNECT():
    POWER_SESSION_CONNECT = win32more.System.SystemServices.POWER_SESSION_CONNECT_head
    POWER_SESSION_CONNECT._fields_ = [
        ("Connected", win32more.Foundation.BOOLEAN),
        ("Console", win32more.Foundation.BOOLEAN),
    ]
    return POWER_SESSION_CONNECT
def _define_POWER_SESSION_TIMEOUTS_head():
    class POWER_SESSION_TIMEOUTS(Structure):
        pass
    return POWER_SESSION_TIMEOUTS
def _define_POWER_SESSION_TIMEOUTS():
    POWER_SESSION_TIMEOUTS = win32more.System.SystemServices.POWER_SESSION_TIMEOUTS_head
    POWER_SESSION_TIMEOUTS._fields_ = [
        ("InputTimeout", UInt32),
        ("DisplayTimeout", UInt32),
    ]
    return POWER_SESSION_TIMEOUTS
def _define_POWER_SESSION_RIT_STATE_head():
    class POWER_SESSION_RIT_STATE(Structure):
        pass
    return POWER_SESSION_RIT_STATE
def _define_POWER_SESSION_RIT_STATE():
    POWER_SESSION_RIT_STATE = win32more.System.SystemServices.POWER_SESSION_RIT_STATE_head
    POWER_SESSION_RIT_STATE._fields_ = [
        ("Active", win32more.Foundation.BOOLEAN),
        ("LastInputTime", UInt64),
    ]
    return POWER_SESSION_RIT_STATE
def _define_POWER_SESSION_WINLOGON_head():
    class POWER_SESSION_WINLOGON(Structure):
        pass
    return POWER_SESSION_WINLOGON
def _define_POWER_SESSION_WINLOGON():
    POWER_SESSION_WINLOGON = win32more.System.SystemServices.POWER_SESSION_WINLOGON_head
    POWER_SESSION_WINLOGON._fields_ = [
        ("SessionId", UInt32),
        ("Console", win32more.Foundation.BOOLEAN),
        ("Locked", win32more.Foundation.BOOLEAN),
    ]
    return POWER_SESSION_WINLOGON
def _define_POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES_head():
    class POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES(Structure):
        pass
    return POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES
def _define_POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES():
    POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES = win32more.System.SystemServices.POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES_head
    POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES._fields_ = [
        ("IsAllowed", win32more.Foundation.BOOLEAN),
    ]
    return POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES
def _define_POWER_IDLE_RESILIENCY_head():
    class POWER_IDLE_RESILIENCY(Structure):
        pass
    return POWER_IDLE_RESILIENCY
def _define_POWER_IDLE_RESILIENCY():
    POWER_IDLE_RESILIENCY = win32more.System.SystemServices.POWER_IDLE_RESILIENCY_head
    POWER_IDLE_RESILIENCY._fields_ = [
        ("CoalescingTimeout", UInt32),
        ("IdleResiliencyPeriod", UInt32),
    ]
    return POWER_IDLE_RESILIENCY
POWER_MONITOR_REQUEST_REASON = Int32
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUnknown = 0
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPowerButton = 1
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonRemoteConnection = 2
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonScMonitorpower = 3
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInput = 4
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonAcDcDisplayBurst = 5
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserDisplayBurst = 6
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPoSetSystemState = 7
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSetThreadExecutionState = 8
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonFullWake = 9
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSessionUnlock = 10
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonScreenOffRequest = 11
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonIdleTimeout = 12
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPolicyChange = 13
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSleepButton = 14
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonLid = 15
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBatteryCountChange = 16
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonGracePeriod = 17
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPnP = 18
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDP = 19
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSxTransition = 20
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSystemIdle = 21
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonNearProximity = 22
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonThermalStandby = 23
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonResumePdc = 24
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonResumeS4 = 25
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonTerminal = 26
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignal = 27
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonAcDcDisplayBurstSuppressed = 28
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSystemStateEntered = 29
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonWinrt = 30
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputKeyboard = 31
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputMouse = 32
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputTouchpad = 33
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputPen = 34
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputAccelerometer = 35
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputHid = 36
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputPoUserPresent = 37
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputSessionSwitch = 38
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputInitialization = 39
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 40
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalWindowsMobileShell = 41
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalHeyCortana = 42
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalHolographicShell = 43
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalFingerprint = 44
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDirectedDrips = 45
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDim = 46
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBuiltinPanel = 47
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDisplayRequiredUnDim = 48
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBatteryCountChangeSuppressed = 49
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonResumeModernStandby = 50
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonTerminalInit = 51
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalSensorsHumanPresence = 52
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBatteryPreCritical = 53
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputTouch = 54
POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonMax = 55
POWER_MONITOR_REQUEST_TYPE = Int32
POWER_MONITOR_REQUEST_TYPE_MonitorRequestTypeOff = 0
POWER_MONITOR_REQUEST_TYPE_MonitorRequestTypeOnAndPresent = 1
POWER_MONITOR_REQUEST_TYPE_MonitorRequestTypeToggleOn = 2
def _define_POWER_MONITOR_INVOCATION_head():
    class POWER_MONITOR_INVOCATION(Structure):
        pass
    return POWER_MONITOR_INVOCATION
def _define_POWER_MONITOR_INVOCATION():
    POWER_MONITOR_INVOCATION = win32more.System.SystemServices.POWER_MONITOR_INVOCATION_head
    POWER_MONITOR_INVOCATION._fields_ = [
        ("Console", win32more.Foundation.BOOLEAN),
        ("RequestReason", win32more.System.SystemServices.POWER_MONITOR_REQUEST_REASON),
    ]
    return POWER_MONITOR_INVOCATION
def _define_RESUME_PERFORMANCE_head():
    class RESUME_PERFORMANCE(Structure):
        pass
    return RESUME_PERFORMANCE
def _define_RESUME_PERFORMANCE():
    RESUME_PERFORMANCE = win32more.System.SystemServices.RESUME_PERFORMANCE_head
    RESUME_PERFORMANCE._fields_ = [
        ("PostTimeMs", UInt32),
        ("TotalResumeTimeMs", UInt64),
        ("ResumeCompleteTimestamp", UInt64),
    ]
    return RESUME_PERFORMANCE
def _define_NOTIFY_USER_POWER_SETTING_head():
    class NOTIFY_USER_POWER_SETTING(Structure):
        pass
    return NOTIFY_USER_POWER_SETTING
def _define_NOTIFY_USER_POWER_SETTING():
    NOTIFY_USER_POWER_SETTING = win32more.System.SystemServices.NOTIFY_USER_POWER_SETTING_head
    NOTIFY_USER_POWER_SETTING._fields_ = [
        ("Guid", Guid),
    ]
    return NOTIFY_USER_POWER_SETTING
def _define_APPLICATIONLAUNCH_SETTING_VALUE_head():
    class APPLICATIONLAUNCH_SETTING_VALUE(Structure):
        pass
    return APPLICATIONLAUNCH_SETTING_VALUE
def _define_APPLICATIONLAUNCH_SETTING_VALUE():
    APPLICATIONLAUNCH_SETTING_VALUE = win32more.System.SystemServices.APPLICATIONLAUNCH_SETTING_VALUE_head
    APPLICATIONLAUNCH_SETTING_VALUE._fields_ = [
        ("ActivationTime", win32more.Foundation.LARGE_INTEGER),
        ("Flags", UInt32),
        ("ButtonInstanceID", UInt32),
    ]
    return APPLICATIONLAUNCH_SETTING_VALUE
def _define_POWER_PLATFORM_INFORMATION_head():
    class POWER_PLATFORM_INFORMATION(Structure):
        pass
    return POWER_PLATFORM_INFORMATION
def _define_POWER_PLATFORM_INFORMATION():
    POWER_PLATFORM_INFORMATION = win32more.System.SystemServices.POWER_PLATFORM_INFORMATION_head
    POWER_PLATFORM_INFORMATION._fields_ = [
        ("AoAc", win32more.Foundation.BOOLEAN),
    ]
    return POWER_PLATFORM_INFORMATION
POWER_SETTING_ALTITUDE = Int32
ALTITUDE_GROUP_POLICY = 0
ALTITUDE_USER = 1
ALTITUDE_RUNTIME_OVERRIDE = 2
ALTITUDE_PROVISIONING = 3
ALTITUDE_OEM_CUSTOMIZATION = 4
ALTITUDE_INTERNAL_OVERRIDE = 5
ALTITUDE_OS_DEFAULT = 6
def _define_PPM_WMI_LEGACY_PERFSTATE_head():
    class PPM_WMI_LEGACY_PERFSTATE(Structure):
        pass
    return PPM_WMI_LEGACY_PERFSTATE
def _define_PPM_WMI_LEGACY_PERFSTATE():
    PPM_WMI_LEGACY_PERFSTATE = win32more.System.SystemServices.PPM_WMI_LEGACY_PERFSTATE_head
    PPM_WMI_LEGACY_PERFSTATE._fields_ = [
        ("Frequency", UInt32),
        ("Flags", UInt32),
        ("PercentFrequency", UInt32),
    ]
    return PPM_WMI_LEGACY_PERFSTATE
def _define_PPM_WMI_IDLE_STATE_head():
    class PPM_WMI_IDLE_STATE(Structure):
        pass
    return PPM_WMI_IDLE_STATE
def _define_PPM_WMI_IDLE_STATE():
    PPM_WMI_IDLE_STATE = win32more.System.SystemServices.PPM_WMI_IDLE_STATE_head
    PPM_WMI_IDLE_STATE._fields_ = [
        ("Latency", UInt32),
        ("Power", UInt32),
        ("TimeCheck", UInt32),
        ("PromotePercent", Byte),
        ("DemotePercent", Byte),
        ("StateType", Byte),
        ("Reserved", Byte),
        ("StateFlags", UInt32),
        ("Context", UInt32),
        ("IdleHandler", UInt32),
        ("Reserved1", UInt32),
    ]
    return PPM_WMI_IDLE_STATE
def _define_PPM_WMI_IDLE_STATES_head():
    class PPM_WMI_IDLE_STATES(Structure):
        pass
    return PPM_WMI_IDLE_STATES
def _define_PPM_WMI_IDLE_STATES():
    PPM_WMI_IDLE_STATES = win32more.System.SystemServices.PPM_WMI_IDLE_STATES_head
    PPM_WMI_IDLE_STATES._fields_ = [
        ("Type", UInt32),
        ("Count", UInt32),
        ("TargetState", UInt32),
        ("OldState", UInt32),
        ("TargetProcessors", UInt64),
        ("State", win32more.System.SystemServices.PPM_WMI_IDLE_STATE * 0),
    ]
    return PPM_WMI_IDLE_STATES
def _define_PPM_WMI_IDLE_STATES_EX_head():
    class PPM_WMI_IDLE_STATES_EX(Structure):
        pass
    return PPM_WMI_IDLE_STATES_EX
def _define_PPM_WMI_IDLE_STATES_EX():
    PPM_WMI_IDLE_STATES_EX = win32more.System.SystemServices.PPM_WMI_IDLE_STATES_EX_head
    PPM_WMI_IDLE_STATES_EX._fields_ = [
        ("Type", UInt32),
        ("Count", UInt32),
        ("TargetState", UInt32),
        ("OldState", UInt32),
        ("TargetProcessors", c_void_p),
        ("State", win32more.System.SystemServices.PPM_WMI_IDLE_STATE * 0),
    ]
    return PPM_WMI_IDLE_STATES_EX
def _define_PPM_WMI_PERF_STATE_head():
    class PPM_WMI_PERF_STATE(Structure):
        pass
    return PPM_WMI_PERF_STATE
def _define_PPM_WMI_PERF_STATE():
    PPM_WMI_PERF_STATE = win32more.System.SystemServices.PPM_WMI_PERF_STATE_head
    PPM_WMI_PERF_STATE._fields_ = [
        ("Frequency", UInt32),
        ("Power", UInt32),
        ("PercentFrequency", Byte),
        ("IncreaseLevel", Byte),
        ("DecreaseLevel", Byte),
        ("Type", Byte),
        ("IncreaseTime", UInt32),
        ("DecreaseTime", UInt32),
        ("Control", UInt64),
        ("Status", UInt64),
        ("HitCount", UInt32),
        ("Reserved1", UInt32),
        ("Reserved2", UInt64),
        ("Reserved3", UInt64),
    ]
    return PPM_WMI_PERF_STATE
def _define_PPM_WMI_PERF_STATES_head():
    class PPM_WMI_PERF_STATES(Structure):
        pass
    return PPM_WMI_PERF_STATES
def _define_PPM_WMI_PERF_STATES():
    PPM_WMI_PERF_STATES = win32more.System.SystemServices.PPM_WMI_PERF_STATES_head
    PPM_WMI_PERF_STATES._fields_ = [
        ("Count", UInt32),
        ("MaxFrequency", UInt32),
        ("CurrentState", UInt32),
        ("MaxPerfState", UInt32),
        ("MinPerfState", UInt32),
        ("LowestPerfState", UInt32),
        ("ThermalConstraint", UInt32),
        ("BusyAdjThreshold", Byte),
        ("PolicyType", Byte),
        ("Type", Byte),
        ("Reserved", Byte),
        ("TimerInterval", UInt32),
        ("TargetProcessors", UInt64),
        ("PStateHandler", UInt32),
        ("PStateContext", UInt32),
        ("TStateHandler", UInt32),
        ("TStateContext", UInt32),
        ("FeedbackHandler", UInt32),
        ("Reserved1", UInt32),
        ("Reserved2", UInt64),
        ("State", win32more.System.SystemServices.PPM_WMI_PERF_STATE * 0),
    ]
    return PPM_WMI_PERF_STATES
def _define_PPM_WMI_PERF_STATES_EX_head():
    class PPM_WMI_PERF_STATES_EX(Structure):
        pass
    return PPM_WMI_PERF_STATES_EX
def _define_PPM_WMI_PERF_STATES_EX():
    PPM_WMI_PERF_STATES_EX = win32more.System.SystemServices.PPM_WMI_PERF_STATES_EX_head
    PPM_WMI_PERF_STATES_EX._fields_ = [
        ("Count", UInt32),
        ("MaxFrequency", UInt32),
        ("CurrentState", UInt32),
        ("MaxPerfState", UInt32),
        ("MinPerfState", UInt32),
        ("LowestPerfState", UInt32),
        ("ThermalConstraint", UInt32),
        ("BusyAdjThreshold", Byte),
        ("PolicyType", Byte),
        ("Type", Byte),
        ("Reserved", Byte),
        ("TimerInterval", UInt32),
        ("TargetProcessors", c_void_p),
        ("PStateHandler", UInt32),
        ("PStateContext", UInt32),
        ("TStateHandler", UInt32),
        ("TStateContext", UInt32),
        ("FeedbackHandler", UInt32),
        ("Reserved1", UInt32),
        ("Reserved2", UInt64),
        ("State", win32more.System.SystemServices.PPM_WMI_PERF_STATE * 0),
    ]
    return PPM_WMI_PERF_STATES_EX
def _define_PPM_IDLE_STATE_ACCOUNTING_head():
    class PPM_IDLE_STATE_ACCOUNTING(Structure):
        pass
    return PPM_IDLE_STATE_ACCOUNTING
def _define_PPM_IDLE_STATE_ACCOUNTING():
    PPM_IDLE_STATE_ACCOUNTING = win32more.System.SystemServices.PPM_IDLE_STATE_ACCOUNTING_head
    PPM_IDLE_STATE_ACCOUNTING._fields_ = [
        ("IdleTransitions", UInt32),
        ("FailedTransitions", UInt32),
        ("InvalidBucketIndex", UInt32),
        ("TotalTime", UInt64),
        ("IdleTimeBuckets", UInt32 * 6),
    ]
    return PPM_IDLE_STATE_ACCOUNTING
def _define_PPM_IDLE_ACCOUNTING_head():
    class PPM_IDLE_ACCOUNTING(Structure):
        pass
    return PPM_IDLE_ACCOUNTING
def _define_PPM_IDLE_ACCOUNTING():
    PPM_IDLE_ACCOUNTING = win32more.System.SystemServices.PPM_IDLE_ACCOUNTING_head
    PPM_IDLE_ACCOUNTING._fields_ = [
        ("StateCount", UInt32),
        ("TotalTransitions", UInt32),
        ("ResetCount", UInt32),
        ("StartTime", UInt64),
        ("State", win32more.System.SystemServices.PPM_IDLE_STATE_ACCOUNTING * 0),
    ]
    return PPM_IDLE_ACCOUNTING
def _define_PPM_IDLE_STATE_BUCKET_EX_head():
    class PPM_IDLE_STATE_BUCKET_EX(Structure):
        pass
    return PPM_IDLE_STATE_BUCKET_EX
def _define_PPM_IDLE_STATE_BUCKET_EX():
    PPM_IDLE_STATE_BUCKET_EX = win32more.System.SystemServices.PPM_IDLE_STATE_BUCKET_EX_head
    PPM_IDLE_STATE_BUCKET_EX._fields_ = [
        ("TotalTimeUs", UInt64),
        ("MinTimeUs", UInt32),
        ("MaxTimeUs", UInt32),
        ("Count", UInt32),
    ]
    return PPM_IDLE_STATE_BUCKET_EX
def _define_PPM_IDLE_STATE_ACCOUNTING_EX_head():
    class PPM_IDLE_STATE_ACCOUNTING_EX(Structure):
        pass
    return PPM_IDLE_STATE_ACCOUNTING_EX
def _define_PPM_IDLE_STATE_ACCOUNTING_EX():
    PPM_IDLE_STATE_ACCOUNTING_EX = win32more.System.SystemServices.PPM_IDLE_STATE_ACCOUNTING_EX_head
    PPM_IDLE_STATE_ACCOUNTING_EX._fields_ = [
        ("TotalTime", UInt64),
        ("IdleTransitions", UInt32),
        ("FailedTransitions", UInt32),
        ("InvalidBucketIndex", UInt32),
        ("MinTimeUs", UInt32),
        ("MaxTimeUs", UInt32),
        ("CancelledTransitions", UInt32),
        ("IdleTimeBuckets", win32more.System.SystemServices.PPM_IDLE_STATE_BUCKET_EX * 16),
    ]
    return PPM_IDLE_STATE_ACCOUNTING_EX
def _define_PPM_IDLE_ACCOUNTING_EX_head():
    class PPM_IDLE_ACCOUNTING_EX(Structure):
        pass
    return PPM_IDLE_ACCOUNTING_EX
def _define_PPM_IDLE_ACCOUNTING_EX():
    PPM_IDLE_ACCOUNTING_EX = win32more.System.SystemServices.PPM_IDLE_ACCOUNTING_EX_head
    PPM_IDLE_ACCOUNTING_EX._fields_ = [
        ("StateCount", UInt32),
        ("TotalTransitions", UInt32),
        ("ResetCount", UInt32),
        ("AbortCount", UInt32),
        ("StartTime", UInt64),
        ("State", win32more.System.SystemServices.PPM_IDLE_STATE_ACCOUNTING_EX * 0),
    ]
    return PPM_IDLE_ACCOUNTING_EX
def _define_PPM_PERFSTATE_EVENT_head():
    class PPM_PERFSTATE_EVENT(Structure):
        pass
    return PPM_PERFSTATE_EVENT
def _define_PPM_PERFSTATE_EVENT():
    PPM_PERFSTATE_EVENT = win32more.System.SystemServices.PPM_PERFSTATE_EVENT_head
    PPM_PERFSTATE_EVENT._fields_ = [
        ("State", UInt32),
        ("Status", UInt32),
        ("Latency", UInt32),
        ("Speed", UInt32),
        ("Processor", UInt32),
    ]
    return PPM_PERFSTATE_EVENT
def _define_PPM_PERFSTATE_DOMAIN_EVENT_head():
    class PPM_PERFSTATE_DOMAIN_EVENT(Structure):
        pass
    return PPM_PERFSTATE_DOMAIN_EVENT
def _define_PPM_PERFSTATE_DOMAIN_EVENT():
    PPM_PERFSTATE_DOMAIN_EVENT = win32more.System.SystemServices.PPM_PERFSTATE_DOMAIN_EVENT_head
    PPM_PERFSTATE_DOMAIN_EVENT._fields_ = [
        ("State", UInt32),
        ("Latency", UInt32),
        ("Speed", UInt32),
        ("Processors", UInt64),
    ]
    return PPM_PERFSTATE_DOMAIN_EVENT
def _define_PPM_IDLESTATE_EVENT_head():
    class PPM_IDLESTATE_EVENT(Structure):
        pass
    return PPM_IDLESTATE_EVENT
def _define_PPM_IDLESTATE_EVENT():
    PPM_IDLESTATE_EVENT = win32more.System.SystemServices.PPM_IDLESTATE_EVENT_head
    PPM_IDLESTATE_EVENT._fields_ = [
        ("NewState", UInt32),
        ("OldState", UInt32),
        ("Processors", UInt64),
    ]
    return PPM_IDLESTATE_EVENT
def _define_PPM_THERMALCHANGE_EVENT_head():
    class PPM_THERMALCHANGE_EVENT(Structure):
        pass
    return PPM_THERMALCHANGE_EVENT
def _define_PPM_THERMALCHANGE_EVENT():
    PPM_THERMALCHANGE_EVENT = win32more.System.SystemServices.PPM_THERMALCHANGE_EVENT_head
    PPM_THERMALCHANGE_EVENT._fields_ = [
        ("ThermalConstraint", UInt32),
        ("Processors", UInt64),
    ]
    return PPM_THERMALCHANGE_EVENT
def _define_PPM_THERMAL_POLICY_EVENT_head():
    class PPM_THERMAL_POLICY_EVENT(Structure):
        pass
    return PPM_THERMAL_POLICY_EVENT
def _define_PPM_THERMAL_POLICY_EVENT():
    PPM_THERMAL_POLICY_EVENT = win32more.System.SystemServices.PPM_THERMAL_POLICY_EVENT_head
    PPM_THERMAL_POLICY_EVENT._fields_ = [
        ("Mode", Byte),
        ("Processors", UInt64),
    ]
    return PPM_THERMAL_POLICY_EVENT
def _define_PROCESSOR_IDLESTATE_INFO_head():
    class PROCESSOR_IDLESTATE_INFO(Structure):
        pass
    return PROCESSOR_IDLESTATE_INFO
def _define_PROCESSOR_IDLESTATE_INFO():
    PROCESSOR_IDLESTATE_INFO = win32more.System.SystemServices.PROCESSOR_IDLESTATE_INFO_head
    PROCESSOR_IDLESTATE_INFO._fields_ = [
        ("TimeCheck", UInt32),
        ("DemotePercent", Byte),
        ("PromotePercent", Byte),
        ("Spare", Byte * 2),
    ]
    return PROCESSOR_IDLESTATE_INFO
def _define_PROCESSOR_IDLESTATE_POLICY_head():
    class PROCESSOR_IDLESTATE_POLICY(Structure):
        pass
    return PROCESSOR_IDLESTATE_POLICY
def _define_PROCESSOR_IDLESTATE_POLICY():
    PROCESSOR_IDLESTATE_POLICY = win32more.System.SystemServices.PROCESSOR_IDLESTATE_POLICY_head
    class PROCESSOR_IDLESTATE_POLICY__Flags_e__Union(Union):
        pass
    class PROCESSOR_IDLESTATE_POLICY__Flags_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESSOR_IDLESTATE_POLICY__Flags_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt16),
    ]
    PROCESSOR_IDLESTATE_POLICY__Flags_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESSOR_IDLESTATE_POLICY__Flags_e__Union._fields_ = [
        ("AsWORD", UInt16),
        ("Anonymous", PROCESSOR_IDLESTATE_POLICY__Flags_e__Union__Anonymous_e__Struct),
    ]
    PROCESSOR_IDLESTATE_POLICY._fields_ = [
        ("Revision", UInt16),
        ("Flags", PROCESSOR_IDLESTATE_POLICY__Flags_e__Union),
        ("PolicyCount", UInt32),
        ("Policy", win32more.System.SystemServices.PROCESSOR_IDLESTATE_INFO * 3),
    ]
    return PROCESSOR_IDLESTATE_POLICY
def _define_PROCESSOR_PERFSTATE_POLICY_head():
    class PROCESSOR_PERFSTATE_POLICY(Structure):
        pass
    return PROCESSOR_PERFSTATE_POLICY
def _define_PROCESSOR_PERFSTATE_POLICY():
    PROCESSOR_PERFSTATE_POLICY = win32more.System.SystemServices.PROCESSOR_PERFSTATE_POLICY_head
    class PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union(Union):
        pass
    class PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union__Flags_e__Union(Union):
        pass
    class PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union__Flags_e__Union__Anonymous_e__Struct(Structure):
        pass
    PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union__Flags_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", Byte),
    ]
    PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union__Flags_e__Union._anonymous_ = [
        'Anonymous',
    ]
    PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union__Flags_e__Union._fields_ = [
        ("AsBYTE", Byte),
        ("Anonymous", PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union__Flags_e__Union__Anonymous_e__Struct),
    ]
    PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union._fields_ = [
        ("Spare", Byte),
        ("Flags", PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union__Flags_e__Union),
    ]
    PROCESSOR_PERFSTATE_POLICY._anonymous_ = [
        'Anonymous',
    ]
    PROCESSOR_PERFSTATE_POLICY._fields_ = [
        ("Revision", UInt32),
        ("MaxThrottle", Byte),
        ("MinThrottle", Byte),
        ("BusyAdjThreshold", Byte),
        ("Anonymous", PROCESSOR_PERFSTATE_POLICY__Anonymous_e__Union),
        ("TimeCheck", UInt32),
        ("IncreaseTime", UInt32),
        ("DecreaseTime", UInt32),
        ("IncreasePercent", UInt32),
        ("DecreasePercent", UInt32),
    ]
    return PROCESSOR_PERFSTATE_POLICY
HIBERFILE_BUCKET_SIZE = Int32
HIBERFILE_BUCKET_SIZE_HiberFileBucket1GB = 0
HIBERFILE_BUCKET_SIZE_HiberFileBucket2GB = 1
HIBERFILE_BUCKET_SIZE_HiberFileBucket4GB = 2
HIBERFILE_BUCKET_SIZE_HiberFileBucket8GB = 3
HIBERFILE_BUCKET_SIZE_HiberFileBucket16GB = 4
HIBERFILE_BUCKET_SIZE_HiberFileBucket32GB = 5
HIBERFILE_BUCKET_SIZE_HiberFileBucketUnlimited = 6
HIBERFILE_BUCKET_SIZE_HiberFileBucketMax = 7
def _define_HIBERFILE_BUCKET_head():
    class HIBERFILE_BUCKET(Structure):
        pass
    return HIBERFILE_BUCKET
def _define_HIBERFILE_BUCKET():
    HIBERFILE_BUCKET = win32more.System.SystemServices.HIBERFILE_BUCKET_head
    HIBERFILE_BUCKET._fields_ = [
        ("MaxPhysicalMemory", UInt64),
        ("PhysicalMemoryPercent", UInt32 * 3),
    ]
    return HIBERFILE_BUCKET
def _define_IMAGE_DOS_HEADER_head():
    class IMAGE_DOS_HEADER(Structure):
        pass
    return IMAGE_DOS_HEADER
def _define_IMAGE_DOS_HEADER():
    IMAGE_DOS_HEADER = win32more.System.SystemServices.IMAGE_DOS_HEADER_head
    IMAGE_DOS_HEADER._pack_ = 2
    IMAGE_DOS_HEADER._fields_ = [
        ("e_magic", UInt16),
        ("e_cblp", UInt16),
        ("e_cp", UInt16),
        ("e_crlc", UInt16),
        ("e_cparhdr", UInt16),
        ("e_minalloc", UInt16),
        ("e_maxalloc", UInt16),
        ("e_ss", UInt16),
        ("e_sp", UInt16),
        ("e_csum", UInt16),
        ("e_ip", UInt16),
        ("e_cs", UInt16),
        ("e_lfarlc", UInt16),
        ("e_ovno", UInt16),
        ("e_res", UInt16 * 4),
        ("e_oemid", UInt16),
        ("e_oeminfo", UInt16),
        ("e_res2", UInt16 * 10),
        ("e_lfanew", Int32),
    ]
    return IMAGE_DOS_HEADER
def _define_IMAGE_OS2_HEADER_head():
    class IMAGE_OS2_HEADER(Structure):
        pass
    return IMAGE_OS2_HEADER
def _define_IMAGE_OS2_HEADER():
    IMAGE_OS2_HEADER = win32more.System.SystemServices.IMAGE_OS2_HEADER_head
    IMAGE_OS2_HEADER._pack_ = 2
    IMAGE_OS2_HEADER._fields_ = [
        ("ne_magic", UInt16),
        ("ne_ver", win32more.Foundation.CHAR),
        ("ne_rev", win32more.Foundation.CHAR),
        ("ne_enttab", UInt16),
        ("ne_cbenttab", UInt16),
        ("ne_crc", Int32),
        ("ne_flags", UInt16),
        ("ne_autodata", UInt16),
        ("ne_heap", UInt16),
        ("ne_stack", UInt16),
        ("ne_csip", Int32),
        ("ne_sssp", Int32),
        ("ne_cseg", UInt16),
        ("ne_cmod", UInt16),
        ("ne_cbnrestab", UInt16),
        ("ne_segtab", UInt16),
        ("ne_rsrctab", UInt16),
        ("ne_restab", UInt16),
        ("ne_modtab", UInt16),
        ("ne_imptab", UInt16),
        ("ne_nrestab", Int32),
        ("ne_cmovent", UInt16),
        ("ne_align", UInt16),
        ("ne_cres", UInt16),
        ("ne_exetyp", Byte),
        ("ne_flagsothers", Byte),
        ("ne_pretthunks", UInt16),
        ("ne_psegrefbytes", UInt16),
        ("ne_swaparea", UInt16),
        ("ne_expver", UInt16),
    ]
    return IMAGE_OS2_HEADER
def _define_IMAGE_VXD_HEADER_head():
    class IMAGE_VXD_HEADER(Structure):
        pass
    return IMAGE_VXD_HEADER
def _define_IMAGE_VXD_HEADER():
    IMAGE_VXD_HEADER = win32more.System.SystemServices.IMAGE_VXD_HEADER_head
    IMAGE_VXD_HEADER._pack_ = 2
    IMAGE_VXD_HEADER._fields_ = [
        ("e32_magic", UInt16),
        ("e32_border", Byte),
        ("e32_worder", Byte),
        ("e32_level", UInt32),
        ("e32_cpu", UInt16),
        ("e32_os", UInt16),
        ("e32_ver", UInt32),
        ("e32_mflags", UInt32),
        ("e32_mpages", UInt32),
        ("e32_startobj", UInt32),
        ("e32_eip", UInt32),
        ("e32_stackobj", UInt32),
        ("e32_esp", UInt32),
        ("e32_pagesize", UInt32),
        ("e32_lastpagesize", UInt32),
        ("e32_fixupsize", UInt32),
        ("e32_fixupsum", UInt32),
        ("e32_ldrsize", UInt32),
        ("e32_ldrsum", UInt32),
        ("e32_objtab", UInt32),
        ("e32_objcnt", UInt32),
        ("e32_objmap", UInt32),
        ("e32_itermap", UInt32),
        ("e32_rsrctab", UInt32),
        ("e32_rsrccnt", UInt32),
        ("e32_restab", UInt32),
        ("e32_enttab", UInt32),
        ("e32_dirtab", UInt32),
        ("e32_dircnt", UInt32),
        ("e32_fpagetab", UInt32),
        ("e32_frectab", UInt32),
        ("e32_impmod", UInt32),
        ("e32_impmodcnt", UInt32),
        ("e32_impproc", UInt32),
        ("e32_pagesum", UInt32),
        ("e32_datapage", UInt32),
        ("e32_preload", UInt32),
        ("e32_nrestab", UInt32),
        ("e32_cbnrestab", UInt32),
        ("e32_nressum", UInt32),
        ("e32_autodata", UInt32),
        ("e32_debuginfo", UInt32),
        ("e32_debuglen", UInt32),
        ("e32_instpreload", UInt32),
        ("e32_instdemand", UInt32),
        ("e32_heapsize", UInt32),
        ("e32_res3", Byte * 12),
        ("e32_winresoff", UInt32),
        ("e32_winreslen", UInt32),
        ("e32_devid", UInt16),
        ("e32_ddkver", UInt16),
    ]
    return IMAGE_VXD_HEADER
def _define_ANON_OBJECT_HEADER_head():
    class ANON_OBJECT_HEADER(Structure):
        pass
    return ANON_OBJECT_HEADER
def _define_ANON_OBJECT_HEADER():
    ANON_OBJECT_HEADER = win32more.System.SystemServices.ANON_OBJECT_HEADER_head
    ANON_OBJECT_HEADER._fields_ = [
        ("Sig1", UInt16),
        ("Sig2", UInt16),
        ("Version", UInt16),
        ("Machine", UInt16),
        ("TimeDateStamp", UInt32),
        ("ClassID", Guid),
        ("SizeOfData", UInt32),
    ]
    return ANON_OBJECT_HEADER
def _define_ANON_OBJECT_HEADER_V2_head():
    class ANON_OBJECT_HEADER_V2(Structure):
        pass
    return ANON_OBJECT_HEADER_V2
def _define_ANON_OBJECT_HEADER_V2():
    ANON_OBJECT_HEADER_V2 = win32more.System.SystemServices.ANON_OBJECT_HEADER_V2_head
    ANON_OBJECT_HEADER_V2._fields_ = [
        ("Sig1", UInt16),
        ("Sig2", UInt16),
        ("Version", UInt16),
        ("Machine", UInt16),
        ("TimeDateStamp", UInt32),
        ("ClassID", Guid),
        ("SizeOfData", UInt32),
        ("Flags", UInt32),
        ("MetaDataSize", UInt32),
        ("MetaDataOffset", UInt32),
    ]
    return ANON_OBJECT_HEADER_V2
def _define_ANON_OBJECT_HEADER_BIGOBJ_head():
    class ANON_OBJECT_HEADER_BIGOBJ(Structure):
        pass
    return ANON_OBJECT_HEADER_BIGOBJ
def _define_ANON_OBJECT_HEADER_BIGOBJ():
    ANON_OBJECT_HEADER_BIGOBJ = win32more.System.SystemServices.ANON_OBJECT_HEADER_BIGOBJ_head
    ANON_OBJECT_HEADER_BIGOBJ._fields_ = [
        ("Sig1", UInt16),
        ("Sig2", UInt16),
        ("Version", UInt16),
        ("Machine", UInt16),
        ("TimeDateStamp", UInt32),
        ("ClassID", Guid),
        ("SizeOfData", UInt32),
        ("Flags", UInt32),
        ("MetaDataSize", UInt32),
        ("MetaDataOffset", UInt32),
        ("NumberOfSections", UInt32),
        ("PointerToSymbolTable", UInt32),
        ("NumberOfSymbols", UInt32),
    ]
    return ANON_OBJECT_HEADER_BIGOBJ
def _define_IMAGE_SYMBOL_head():
    class IMAGE_SYMBOL(Structure):
        pass
    return IMAGE_SYMBOL
def _define_IMAGE_SYMBOL():
    IMAGE_SYMBOL = win32more.System.SystemServices.IMAGE_SYMBOL_head
    class IMAGE_SYMBOL__N_e__Union(Union):
        pass
    class IMAGE_SYMBOL__N_e__Union__Name_e__Struct(Structure):
        pass
    IMAGE_SYMBOL__N_e__Union__Name_e__Struct._pack_ = 2
    IMAGE_SYMBOL__N_e__Union__Name_e__Struct._fields_ = [
        ("Short", UInt32),
        ("Long", UInt32),
    ]
    IMAGE_SYMBOL__N_e__Union._pack_ = 2
    IMAGE_SYMBOL__N_e__Union._fields_ = [
        ("ShortName", Byte * 8),
        ("Name", IMAGE_SYMBOL__N_e__Union__Name_e__Struct),
        ("LongName", UInt32 * 2),
    ]
    IMAGE_SYMBOL._pack_ = 2
    IMAGE_SYMBOL._fields_ = [
        ("N", IMAGE_SYMBOL__N_e__Union),
        ("Value", UInt32),
        ("SectionNumber", Int16),
        ("Type", UInt16),
        ("StorageClass", Byte),
        ("NumberOfAuxSymbols", Byte),
    ]
    return IMAGE_SYMBOL
def _define_IMAGE_SYMBOL_EX_head():
    class IMAGE_SYMBOL_EX(Structure):
        pass
    return IMAGE_SYMBOL_EX
def _define_IMAGE_SYMBOL_EX():
    IMAGE_SYMBOL_EX = win32more.System.SystemServices.IMAGE_SYMBOL_EX_head
    class IMAGE_SYMBOL_EX__N_e__Union(Union):
        pass
    class IMAGE_SYMBOL_EX__N_e__Union__Name_e__Struct(Structure):
        pass
    IMAGE_SYMBOL_EX__N_e__Union__Name_e__Struct._pack_ = 2
    IMAGE_SYMBOL_EX__N_e__Union__Name_e__Struct._fields_ = [
        ("Short", UInt32),
        ("Long", UInt32),
    ]
    IMAGE_SYMBOL_EX__N_e__Union._pack_ = 2
    IMAGE_SYMBOL_EX__N_e__Union._fields_ = [
        ("ShortName", Byte * 8),
        ("Name", IMAGE_SYMBOL_EX__N_e__Union__Name_e__Struct),
        ("LongName", UInt32 * 2),
    ]
    IMAGE_SYMBOL_EX._pack_ = 2
    IMAGE_SYMBOL_EX._fields_ = [
        ("N", IMAGE_SYMBOL_EX__N_e__Union),
        ("Value", UInt32),
        ("SectionNumber", Int32),
        ("Type", UInt16),
        ("StorageClass", Byte),
        ("NumberOfAuxSymbols", Byte),
    ]
    return IMAGE_SYMBOL_EX
def _define_IMAGE_AUX_SYMBOL_TOKEN_DEF_head():
    class IMAGE_AUX_SYMBOL_TOKEN_DEF(Structure):
        pass
    return IMAGE_AUX_SYMBOL_TOKEN_DEF
def _define_IMAGE_AUX_SYMBOL_TOKEN_DEF():
    IMAGE_AUX_SYMBOL_TOKEN_DEF = win32more.System.SystemServices.IMAGE_AUX_SYMBOL_TOKEN_DEF_head
    IMAGE_AUX_SYMBOL_TOKEN_DEF._pack_ = 2
    IMAGE_AUX_SYMBOL_TOKEN_DEF._fields_ = [
        ("bAuxType", Byte),
        ("bReserved", Byte),
        ("SymbolTableIndex", UInt32),
        ("rgbReserved", Byte * 12),
    ]
    return IMAGE_AUX_SYMBOL_TOKEN_DEF
def _define_IMAGE_AUX_SYMBOL_head():
    class IMAGE_AUX_SYMBOL(Union):
        pass
    return IMAGE_AUX_SYMBOL
def _define_IMAGE_AUX_SYMBOL():
    IMAGE_AUX_SYMBOL = win32more.System.SystemServices.IMAGE_AUX_SYMBOL_head
    class IMAGE_AUX_SYMBOL__CRC_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL__CRC_e__Struct._pack_ = 2
    IMAGE_AUX_SYMBOL__CRC_e__Struct._fields_ = [
        ("crc", UInt32),
        ("rgbReserved", Byte * 14),
    ]
    class IMAGE_AUX_SYMBOL__File_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL__File_e__Struct._fields_ = [
        ("Name", Byte * 18),
    ]
    class IMAGE_AUX_SYMBOL__Sym_e__Struct(Structure):
        pass
    class IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union(Union):
        pass
    class IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union__Array_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union__Array_e__Struct._fields_ = [
        ("Dimension", UInt16 * 4),
    ]
    class IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union__Function_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union__Function_e__Struct._pack_ = 2
    IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union__Function_e__Struct._fields_ = [
        ("PointerToLinenumber", UInt32),
        ("PointerToNextFunction", UInt32),
    ]
    IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union._fields_ = [
        ("Function", IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union__Function_e__Struct),
        ("Array", IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union__Array_e__Struct),
    ]
    class IMAGE_AUX_SYMBOL__Sym_e__Struct__Misc_e__Union(Union):
        pass
    class IMAGE_AUX_SYMBOL__Sym_e__Struct__Misc_e__Union__LnSz_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL__Sym_e__Struct__Misc_e__Union__LnSz_e__Struct._fields_ = [
        ("Linenumber", UInt16),
        ("Size", UInt16),
    ]
    IMAGE_AUX_SYMBOL__Sym_e__Struct__Misc_e__Union._pack_ = 2
    IMAGE_AUX_SYMBOL__Sym_e__Struct__Misc_e__Union._fields_ = [
        ("LnSz", IMAGE_AUX_SYMBOL__Sym_e__Struct__Misc_e__Union__LnSz_e__Struct),
        ("TotalSize", UInt32),
    ]
    IMAGE_AUX_SYMBOL__Sym_e__Struct._pack_ = 2
    IMAGE_AUX_SYMBOL__Sym_e__Struct._fields_ = [
        ("TagIndex", UInt32),
        ("Misc", IMAGE_AUX_SYMBOL__Sym_e__Struct__Misc_e__Union),
        ("FcnAry", IMAGE_AUX_SYMBOL__Sym_e__Struct__FcnAry_e__Union),
        ("TvIndex", UInt16),
    ]
    class IMAGE_AUX_SYMBOL__Section_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL__Section_e__Struct._pack_ = 2
    IMAGE_AUX_SYMBOL__Section_e__Struct._fields_ = [
        ("Length", UInt32),
        ("NumberOfRelocations", UInt16),
        ("NumberOfLinenumbers", UInt16),
        ("CheckSum", UInt32),
        ("Number", Int16),
        ("Selection", Byte),
        ("bReserved", Byte),
        ("HighNumber", Int16),
    ]
    IMAGE_AUX_SYMBOL._fields_ = [
        ("Sym", IMAGE_AUX_SYMBOL__Sym_e__Struct),
        ("File", IMAGE_AUX_SYMBOL__File_e__Struct),
        ("Section", IMAGE_AUX_SYMBOL__Section_e__Struct),
        ("TokenDef", win32more.System.SystemServices.IMAGE_AUX_SYMBOL_TOKEN_DEF),
        ("CRC", IMAGE_AUX_SYMBOL__CRC_e__Struct),
    ]
    return IMAGE_AUX_SYMBOL
def _define_IMAGE_AUX_SYMBOL_EX_head():
    class IMAGE_AUX_SYMBOL_EX(Union):
        pass
    return IMAGE_AUX_SYMBOL_EX
def _define_IMAGE_AUX_SYMBOL_EX():
    IMAGE_AUX_SYMBOL_EX = win32more.System.SystemServices.IMAGE_AUX_SYMBOL_EX_head
    class IMAGE_AUX_SYMBOL_EX__Anonymous_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL_EX__Anonymous_e__Struct._fields_ = [
        ("TokenDef", win32more.System.SystemServices.IMAGE_AUX_SYMBOL_TOKEN_DEF),
        ("rgbReserved", Byte * 2),
    ]
    class IMAGE_AUX_SYMBOL_EX__File_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL_EX__File_e__Struct._fields_ = [
        ("Name", Byte * 20),
    ]
    class IMAGE_AUX_SYMBOL_EX__CRC_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL_EX__CRC_e__Struct._pack_ = 2
    IMAGE_AUX_SYMBOL_EX__CRC_e__Struct._fields_ = [
        ("crc", UInt32),
        ("rgbReserved", Byte * 16),
    ]
    class IMAGE_AUX_SYMBOL_EX__Sym_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL_EX__Sym_e__Struct._pack_ = 2
    IMAGE_AUX_SYMBOL_EX__Sym_e__Struct._fields_ = [
        ("WeakDefaultSymIndex", UInt32),
        ("WeakSearchType", UInt32),
        ("rgbReserved", Byte * 12),
    ]
    class IMAGE_AUX_SYMBOL_EX__Section_e__Struct(Structure):
        pass
    IMAGE_AUX_SYMBOL_EX__Section_e__Struct._pack_ = 2
    IMAGE_AUX_SYMBOL_EX__Section_e__Struct._fields_ = [
        ("Length", UInt32),
        ("NumberOfRelocations", UInt16),
        ("NumberOfLinenumbers", UInt16),
        ("CheckSum", UInt32),
        ("Number", Int16),
        ("Selection", Byte),
        ("bReserved", Byte),
        ("HighNumber", Int16),
        ("rgbReserved", Byte * 2),
    ]
    IMAGE_AUX_SYMBOL_EX._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_AUX_SYMBOL_EX._fields_ = [
        ("Sym", IMAGE_AUX_SYMBOL_EX__Sym_e__Struct),
        ("File", IMAGE_AUX_SYMBOL_EX__File_e__Struct),
        ("Section", IMAGE_AUX_SYMBOL_EX__Section_e__Struct),
        ("Anonymous", IMAGE_AUX_SYMBOL_EX__Anonymous_e__Struct),
        ("CRC", IMAGE_AUX_SYMBOL_EX__CRC_e__Struct),
    ]
    return IMAGE_AUX_SYMBOL_EX
IMAGE_AUX_SYMBOL_TYPE = Int32
IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1
def _define_IMAGE_RELOCATION_head():
    class IMAGE_RELOCATION(Structure):
        pass
    return IMAGE_RELOCATION
def _define_IMAGE_RELOCATION():
    IMAGE_RELOCATION = win32more.System.SystemServices.IMAGE_RELOCATION_head
    class IMAGE_RELOCATION__Anonymous_e__Union(Union):
        pass
    IMAGE_RELOCATION__Anonymous_e__Union._pack_ = 2
    IMAGE_RELOCATION__Anonymous_e__Union._fields_ = [
        ("VirtualAddress", UInt32),
        ("RelocCount", UInt32),
    ]
    IMAGE_RELOCATION._pack_ = 2
    IMAGE_RELOCATION._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_RELOCATION._fields_ = [
        ("Anonymous", IMAGE_RELOCATION__Anonymous_e__Union),
        ("SymbolTableIndex", UInt32),
        ("Type", UInt16),
    ]
    return IMAGE_RELOCATION
def _define_IMAGE_LINENUMBER_head():
    class IMAGE_LINENUMBER(Structure):
        pass
    return IMAGE_LINENUMBER
def _define_IMAGE_LINENUMBER():
    IMAGE_LINENUMBER = win32more.System.SystemServices.IMAGE_LINENUMBER_head
    class IMAGE_LINENUMBER__Type_e__Union(Union):
        pass
    IMAGE_LINENUMBER__Type_e__Union._pack_ = 2
    IMAGE_LINENUMBER__Type_e__Union._fields_ = [
        ("SymbolTableIndex", UInt32),
        ("VirtualAddress", UInt32),
    ]
    IMAGE_LINENUMBER._fields_ = [
        ("Type", IMAGE_LINENUMBER__Type_e__Union),
        ("Linenumber", UInt16),
    ]
    return IMAGE_LINENUMBER
def _define_IMAGE_BASE_RELOCATION_head():
    class IMAGE_BASE_RELOCATION(Structure):
        pass
    return IMAGE_BASE_RELOCATION
def _define_IMAGE_BASE_RELOCATION():
    IMAGE_BASE_RELOCATION = win32more.System.SystemServices.IMAGE_BASE_RELOCATION_head
    IMAGE_BASE_RELOCATION._fields_ = [
        ("VirtualAddress", UInt32),
        ("SizeOfBlock", UInt32),
    ]
    return IMAGE_BASE_RELOCATION
def _define_IMAGE_ARCHIVE_MEMBER_HEADER_head():
    class IMAGE_ARCHIVE_MEMBER_HEADER(Structure):
        pass
    return IMAGE_ARCHIVE_MEMBER_HEADER
def _define_IMAGE_ARCHIVE_MEMBER_HEADER():
    IMAGE_ARCHIVE_MEMBER_HEADER = win32more.System.SystemServices.IMAGE_ARCHIVE_MEMBER_HEADER_head
    IMAGE_ARCHIVE_MEMBER_HEADER._fields_ = [
        ("Name", Byte * 16),
        ("Date", Byte * 12),
        ("UserID", Byte * 6),
        ("GroupID", Byte * 6),
        ("Mode", Byte * 8),
        ("Size", Byte * 10),
        ("EndHeader", Byte * 2),
    ]
    return IMAGE_ARCHIVE_MEMBER_HEADER
def _define_IMAGE_EXPORT_DIRECTORY_head():
    class IMAGE_EXPORT_DIRECTORY(Structure):
        pass
    return IMAGE_EXPORT_DIRECTORY
def _define_IMAGE_EXPORT_DIRECTORY():
    IMAGE_EXPORT_DIRECTORY = win32more.System.SystemServices.IMAGE_EXPORT_DIRECTORY_head
    IMAGE_EXPORT_DIRECTORY._fields_ = [
        ("Characteristics", UInt32),
        ("TimeDateStamp", UInt32),
        ("MajorVersion", UInt16),
        ("MinorVersion", UInt16),
        ("Name", UInt32),
        ("Base", UInt32),
        ("NumberOfFunctions", UInt32),
        ("NumberOfNames", UInt32),
        ("AddressOfFunctions", UInt32),
        ("AddressOfNames", UInt32),
        ("AddressOfNameOrdinals", UInt32),
    ]
    return IMAGE_EXPORT_DIRECTORY
def _define_IMAGE_IMPORT_BY_NAME_head():
    class IMAGE_IMPORT_BY_NAME(Structure):
        pass
    return IMAGE_IMPORT_BY_NAME
def _define_IMAGE_IMPORT_BY_NAME():
    IMAGE_IMPORT_BY_NAME = win32more.System.SystemServices.IMAGE_IMPORT_BY_NAME_head
    IMAGE_IMPORT_BY_NAME._fields_ = [
        ("Hint", UInt16),
        ("Name", win32more.Foundation.CHAR * 0),
    ]
    return IMAGE_IMPORT_BY_NAME
def _define_PIMAGE_TLS_CALLBACK():
    return CFUNCTYPE(Void,c_void_p,UInt32,c_void_p, use_last_error=False)
def _define_IMAGE_TLS_DIRECTORY64_head():
    class IMAGE_TLS_DIRECTORY64(Structure):
        pass
    return IMAGE_TLS_DIRECTORY64
def _define_IMAGE_TLS_DIRECTORY64():
    IMAGE_TLS_DIRECTORY64 = win32more.System.SystemServices.IMAGE_TLS_DIRECTORY64_head
    class IMAGE_TLS_DIRECTORY64__Anonymous_e__Union(Union):
        pass
    class IMAGE_TLS_DIRECTORY64__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    IMAGE_TLS_DIRECTORY64__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    IMAGE_TLS_DIRECTORY64__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_TLS_DIRECTORY64__Anonymous_e__Union._fields_ = [
        ("Characteristics", UInt32),
        ("Anonymous", IMAGE_TLS_DIRECTORY64__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    IMAGE_TLS_DIRECTORY64._pack_ = 4
    IMAGE_TLS_DIRECTORY64._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_TLS_DIRECTORY64._fields_ = [
        ("StartAddressOfRawData", UInt64),
        ("EndAddressOfRawData", UInt64),
        ("AddressOfIndex", UInt64),
        ("AddressOfCallBacks", UInt64),
        ("SizeOfZeroFill", UInt32),
        ("Anonymous", IMAGE_TLS_DIRECTORY64__Anonymous_e__Union),
    ]
    return IMAGE_TLS_DIRECTORY64
def _define_IMAGE_TLS_DIRECTORY32_head():
    class IMAGE_TLS_DIRECTORY32(Structure):
        pass
    return IMAGE_TLS_DIRECTORY32
def _define_IMAGE_TLS_DIRECTORY32():
    IMAGE_TLS_DIRECTORY32 = win32more.System.SystemServices.IMAGE_TLS_DIRECTORY32_head
    class IMAGE_TLS_DIRECTORY32__Anonymous_e__Union(Union):
        pass
    class IMAGE_TLS_DIRECTORY32__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    IMAGE_TLS_DIRECTORY32__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    IMAGE_TLS_DIRECTORY32__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_TLS_DIRECTORY32__Anonymous_e__Union._fields_ = [
        ("Characteristics", UInt32),
        ("Anonymous", IMAGE_TLS_DIRECTORY32__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    IMAGE_TLS_DIRECTORY32._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_TLS_DIRECTORY32._fields_ = [
        ("StartAddressOfRawData", UInt32),
        ("EndAddressOfRawData", UInt32),
        ("AddressOfIndex", UInt32),
        ("AddressOfCallBacks", UInt32),
        ("SizeOfZeroFill", UInt32),
        ("Anonymous", IMAGE_TLS_DIRECTORY32__Anonymous_e__Union),
    ]
    return IMAGE_TLS_DIRECTORY32
def _define_IMAGE_IMPORT_DESCRIPTOR_head():
    class IMAGE_IMPORT_DESCRIPTOR(Structure):
        pass
    return IMAGE_IMPORT_DESCRIPTOR
def _define_IMAGE_IMPORT_DESCRIPTOR():
    IMAGE_IMPORT_DESCRIPTOR = win32more.System.SystemServices.IMAGE_IMPORT_DESCRIPTOR_head
    class IMAGE_IMPORT_DESCRIPTOR__Anonymous_e__Union(Union):
        pass
    IMAGE_IMPORT_DESCRIPTOR__Anonymous_e__Union._fields_ = [
        ("Characteristics", UInt32),
        ("OriginalFirstThunk", UInt32),
    ]
    IMAGE_IMPORT_DESCRIPTOR._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_IMPORT_DESCRIPTOR._fields_ = [
        ("Anonymous", IMAGE_IMPORT_DESCRIPTOR__Anonymous_e__Union),
        ("TimeDateStamp", UInt32),
        ("ForwarderChain", UInt32),
        ("Name", UInt32),
        ("FirstThunk", UInt32),
    ]
    return IMAGE_IMPORT_DESCRIPTOR
def _define_IMAGE_BOUND_IMPORT_DESCRIPTOR_head():
    class IMAGE_BOUND_IMPORT_DESCRIPTOR(Structure):
        pass
    return IMAGE_BOUND_IMPORT_DESCRIPTOR
def _define_IMAGE_BOUND_IMPORT_DESCRIPTOR():
    IMAGE_BOUND_IMPORT_DESCRIPTOR = win32more.System.SystemServices.IMAGE_BOUND_IMPORT_DESCRIPTOR_head
    IMAGE_BOUND_IMPORT_DESCRIPTOR._fields_ = [
        ("TimeDateStamp", UInt32),
        ("OffsetModuleName", UInt16),
        ("NumberOfModuleForwarderRefs", UInt16),
    ]
    return IMAGE_BOUND_IMPORT_DESCRIPTOR
def _define_IMAGE_BOUND_FORWARDER_REF_head():
    class IMAGE_BOUND_FORWARDER_REF(Structure):
        pass
    return IMAGE_BOUND_FORWARDER_REF
def _define_IMAGE_BOUND_FORWARDER_REF():
    IMAGE_BOUND_FORWARDER_REF = win32more.System.SystemServices.IMAGE_BOUND_FORWARDER_REF_head
    IMAGE_BOUND_FORWARDER_REF._fields_ = [
        ("TimeDateStamp", UInt32),
        ("OffsetModuleName", UInt16),
        ("Reserved", UInt16),
    ]
    return IMAGE_BOUND_FORWARDER_REF
def _define_IMAGE_RESOURCE_DIRECTORY_head():
    class IMAGE_RESOURCE_DIRECTORY(Structure):
        pass
    return IMAGE_RESOURCE_DIRECTORY
def _define_IMAGE_RESOURCE_DIRECTORY():
    IMAGE_RESOURCE_DIRECTORY = win32more.System.SystemServices.IMAGE_RESOURCE_DIRECTORY_head
    IMAGE_RESOURCE_DIRECTORY._fields_ = [
        ("Characteristics", UInt32),
        ("TimeDateStamp", UInt32),
        ("MajorVersion", UInt16),
        ("MinorVersion", UInt16),
        ("NumberOfNamedEntries", UInt16),
        ("NumberOfIdEntries", UInt16),
    ]
    return IMAGE_RESOURCE_DIRECTORY
def _define_IMAGE_RESOURCE_DIRECTORY_ENTRY_head():
    class IMAGE_RESOURCE_DIRECTORY_ENTRY(Structure):
        pass
    return IMAGE_RESOURCE_DIRECTORY_ENTRY
def _define_IMAGE_RESOURCE_DIRECTORY_ENTRY():
    IMAGE_RESOURCE_DIRECTORY_ENTRY = win32more.System.SystemServices.IMAGE_RESOURCE_DIRECTORY_ENTRY_head
    class IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous2_e__Union(Union):
        pass
    class IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous2_e__Union__Anonymous_e__Struct(Structure):
        pass
    IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous2_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous2_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous2_e__Union._fields_ = [
        ("OffsetToData", UInt32),
        ("Anonymous", IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous2_e__Union__Anonymous_e__Struct),
    ]
    class IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous1_e__Union(Union):
        pass
    class IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous1_e__Union__Anonymous_e__Struct(Structure):
        pass
    IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous1_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous1_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous1_e__Union._fields_ = [
        ("Anonymous", IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous1_e__Union__Anonymous_e__Struct),
        ("Name", UInt32),
        ("Id", UInt16),
    ]
    IMAGE_RESOURCE_DIRECTORY_ENTRY._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    IMAGE_RESOURCE_DIRECTORY_ENTRY._fields_ = [
        ("Anonymous1", IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous1_e__Union),
        ("Anonymous2", IMAGE_RESOURCE_DIRECTORY_ENTRY__Anonymous2_e__Union),
    ]
    return IMAGE_RESOURCE_DIRECTORY_ENTRY
def _define_IMAGE_RESOURCE_DIRECTORY_STRING_head():
    class IMAGE_RESOURCE_DIRECTORY_STRING(Structure):
        pass
    return IMAGE_RESOURCE_DIRECTORY_STRING
def _define_IMAGE_RESOURCE_DIRECTORY_STRING():
    IMAGE_RESOURCE_DIRECTORY_STRING = win32more.System.SystemServices.IMAGE_RESOURCE_DIRECTORY_STRING_head
    IMAGE_RESOURCE_DIRECTORY_STRING._fields_ = [
        ("Length", UInt16),
        ("NameString", win32more.Foundation.CHAR * 0),
    ]
    return IMAGE_RESOURCE_DIRECTORY_STRING
def _define_IMAGE_RESOURCE_DIR_STRING_U_head():
    class IMAGE_RESOURCE_DIR_STRING_U(Structure):
        pass
    return IMAGE_RESOURCE_DIR_STRING_U
def _define_IMAGE_RESOURCE_DIR_STRING_U():
    IMAGE_RESOURCE_DIR_STRING_U = win32more.System.SystemServices.IMAGE_RESOURCE_DIR_STRING_U_head
    IMAGE_RESOURCE_DIR_STRING_U._fields_ = [
        ("Length", UInt16),
        ("NameString", Char * 0),
    ]
    return IMAGE_RESOURCE_DIR_STRING_U
def _define_IMAGE_RESOURCE_DATA_ENTRY_head():
    class IMAGE_RESOURCE_DATA_ENTRY(Structure):
        pass
    return IMAGE_RESOURCE_DATA_ENTRY
def _define_IMAGE_RESOURCE_DATA_ENTRY():
    IMAGE_RESOURCE_DATA_ENTRY = win32more.System.SystemServices.IMAGE_RESOURCE_DATA_ENTRY_head
    IMAGE_RESOURCE_DATA_ENTRY._fields_ = [
        ("OffsetToData", UInt32),
        ("Size", UInt32),
        ("CodePage", UInt32),
        ("Reserved", UInt32),
    ]
    return IMAGE_RESOURCE_DATA_ENTRY
def _define_IMAGE_DYNAMIC_RELOCATION_TABLE_head():
    class IMAGE_DYNAMIC_RELOCATION_TABLE(Structure):
        pass
    return IMAGE_DYNAMIC_RELOCATION_TABLE
def _define_IMAGE_DYNAMIC_RELOCATION_TABLE():
    IMAGE_DYNAMIC_RELOCATION_TABLE = win32more.System.SystemServices.IMAGE_DYNAMIC_RELOCATION_TABLE_head
    IMAGE_DYNAMIC_RELOCATION_TABLE._fields_ = [
        ("Version", UInt32),
        ("Size", UInt32),
    ]
    return IMAGE_DYNAMIC_RELOCATION_TABLE
def _define_IMAGE_DYNAMIC_RELOCATION32_head():
    class IMAGE_DYNAMIC_RELOCATION32(Structure):
        pass
    return IMAGE_DYNAMIC_RELOCATION32
def _define_IMAGE_DYNAMIC_RELOCATION32():
    IMAGE_DYNAMIC_RELOCATION32 = win32more.System.SystemServices.IMAGE_DYNAMIC_RELOCATION32_head
    IMAGE_DYNAMIC_RELOCATION32._pack_ = 1
    IMAGE_DYNAMIC_RELOCATION32._fields_ = [
        ("Symbol", UInt32),
        ("BaseRelocSize", UInt32),
    ]
    return IMAGE_DYNAMIC_RELOCATION32
def _define_IMAGE_DYNAMIC_RELOCATION64_head():
    class IMAGE_DYNAMIC_RELOCATION64(Structure):
        pass
    return IMAGE_DYNAMIC_RELOCATION64
def _define_IMAGE_DYNAMIC_RELOCATION64():
    IMAGE_DYNAMIC_RELOCATION64 = win32more.System.SystemServices.IMAGE_DYNAMIC_RELOCATION64_head
    IMAGE_DYNAMIC_RELOCATION64._pack_ = 1
    IMAGE_DYNAMIC_RELOCATION64._fields_ = [
        ("Symbol", UInt64),
        ("BaseRelocSize", UInt32),
    ]
    return IMAGE_DYNAMIC_RELOCATION64
def _define_IMAGE_DYNAMIC_RELOCATION32_V2_head():
    class IMAGE_DYNAMIC_RELOCATION32_V2(Structure):
        pass
    return IMAGE_DYNAMIC_RELOCATION32_V2
def _define_IMAGE_DYNAMIC_RELOCATION32_V2():
    IMAGE_DYNAMIC_RELOCATION32_V2 = win32more.System.SystemServices.IMAGE_DYNAMIC_RELOCATION32_V2_head
    IMAGE_DYNAMIC_RELOCATION32_V2._pack_ = 1
    IMAGE_DYNAMIC_RELOCATION32_V2._fields_ = [
        ("HeaderSize", UInt32),
        ("FixupInfoSize", UInt32),
        ("Symbol", UInt32),
        ("SymbolGroup", UInt32),
        ("Flags", UInt32),
    ]
    return IMAGE_DYNAMIC_RELOCATION32_V2
def _define_IMAGE_DYNAMIC_RELOCATION64_V2_head():
    class IMAGE_DYNAMIC_RELOCATION64_V2(Structure):
        pass
    return IMAGE_DYNAMIC_RELOCATION64_V2
def _define_IMAGE_DYNAMIC_RELOCATION64_V2():
    IMAGE_DYNAMIC_RELOCATION64_V2 = win32more.System.SystemServices.IMAGE_DYNAMIC_RELOCATION64_V2_head
    IMAGE_DYNAMIC_RELOCATION64_V2._pack_ = 1
    IMAGE_DYNAMIC_RELOCATION64_V2._fields_ = [
        ("HeaderSize", UInt32),
        ("FixupInfoSize", UInt32),
        ("Symbol", UInt64),
        ("SymbolGroup", UInt32),
        ("Flags", UInt32),
    ]
    return IMAGE_DYNAMIC_RELOCATION64_V2
def _define_IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER_head():
    class IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER(Structure):
        pass
    return IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
def _define_IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER():
    IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER = win32more.System.SystemServices.IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER_head
    IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER._fields_ = [
        ("PrologueByteCount", Byte),
    ]
    return IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
def _define_IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER_head():
    class IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER(Structure):
        pass
    return IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
def _define_IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER():
    IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER = win32more.System.SystemServices.IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER_head
    IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER._pack_ = 1
    IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER._fields_ = [
        ("EpilogueCount", UInt32),
        ("EpilogueByteCount", Byte),
        ("BranchDescriptorElementSize", Byte),
        ("BranchDescriptorCount", UInt16),
    ]
    return IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
def _define_IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION_head():
    class IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION(Structure):
        pass
    return IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION
def _define_IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION():
    IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION = win32more.System.SystemServices.IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION_head
    IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION._pack_ = 1
    IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION._fields_ = [
        ("_bitfield", UInt32),
    ]
    return IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION
def _define_IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION_head():
    class IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION(Structure):
        pass
    return IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION
def _define_IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION():
    IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION = win32more.System.SystemServices.IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION_head
    IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION._pack_ = 1
    IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION._fields_ = [
        ("_bitfield", UInt16),
    ]
    return IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION
def _define_IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION_head():
    class IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION(Structure):
        pass
    return IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION
def _define_IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION():
    IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION = win32more.System.SystemServices.IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION_head
    IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION._pack_ = 1
    IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION._fields_ = [
        ("_bitfield", UInt16),
    ]
    return IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION
def _define_IMAGE_HOT_PATCH_INFO_head():
    class IMAGE_HOT_PATCH_INFO(Structure):
        pass
    return IMAGE_HOT_PATCH_INFO
def _define_IMAGE_HOT_PATCH_INFO():
    IMAGE_HOT_PATCH_INFO = win32more.System.SystemServices.IMAGE_HOT_PATCH_INFO_head
    IMAGE_HOT_PATCH_INFO._fields_ = [
        ("Version", UInt32),
        ("Size", UInt32),
        ("SequenceNumber", UInt32),
        ("BaseImageList", UInt32),
        ("BaseImageCount", UInt32),
        ("BufferOffset", UInt32),
        ("ExtraPatchSize", UInt32),
    ]
    return IMAGE_HOT_PATCH_INFO
def _define_IMAGE_HOT_PATCH_BASE_head():
    class IMAGE_HOT_PATCH_BASE(Structure):
        pass
    return IMAGE_HOT_PATCH_BASE
def _define_IMAGE_HOT_PATCH_BASE():
    IMAGE_HOT_PATCH_BASE = win32more.System.SystemServices.IMAGE_HOT_PATCH_BASE_head
    IMAGE_HOT_PATCH_BASE._fields_ = [
        ("SequenceNumber", UInt32),
        ("Flags", UInt32),
        ("OriginalTimeDateStamp", UInt32),
        ("OriginalCheckSum", UInt32),
        ("CodeIntegrityInfo", UInt32),
        ("CodeIntegritySize", UInt32),
        ("PatchTable", UInt32),
        ("BufferOffset", UInt32),
    ]
    return IMAGE_HOT_PATCH_BASE
def _define_IMAGE_HOT_PATCH_HASHES_head():
    class IMAGE_HOT_PATCH_HASHES(Structure):
        pass
    return IMAGE_HOT_PATCH_HASHES
def _define_IMAGE_HOT_PATCH_HASHES():
    IMAGE_HOT_PATCH_HASHES = win32more.System.SystemServices.IMAGE_HOT_PATCH_HASHES_head
    IMAGE_HOT_PATCH_HASHES._fields_ = [
        ("SHA256", Byte * 32),
        ("SHA1", Byte * 20),
    ]
    return IMAGE_HOT_PATCH_HASHES
def _define_IMAGE_CE_RUNTIME_FUNCTION_ENTRY_head():
    class IMAGE_CE_RUNTIME_FUNCTION_ENTRY(Structure):
        pass
    return IMAGE_CE_RUNTIME_FUNCTION_ENTRY
def _define_IMAGE_CE_RUNTIME_FUNCTION_ENTRY():
    IMAGE_CE_RUNTIME_FUNCTION_ENTRY = win32more.System.SystemServices.IMAGE_CE_RUNTIME_FUNCTION_ENTRY_head
    IMAGE_CE_RUNTIME_FUNCTION_ENTRY._fields_ = [
        ("FuncStart", UInt32),
        ("_bitfield", UInt32),
    ]
    return IMAGE_CE_RUNTIME_FUNCTION_ENTRY
def _define_IMAGE_ARM_RUNTIME_FUNCTION_ENTRY_head():
    class IMAGE_ARM_RUNTIME_FUNCTION_ENTRY(Structure):
        pass
    return IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
def _define_IMAGE_ARM_RUNTIME_FUNCTION_ENTRY():
    IMAGE_ARM_RUNTIME_FUNCTION_ENTRY = win32more.System.SystemServices.IMAGE_ARM_RUNTIME_FUNCTION_ENTRY_head
    class IMAGE_ARM_RUNTIME_FUNCTION_ENTRY__Anonymous_e__Union(Union):
        pass
    class IMAGE_ARM_RUNTIME_FUNCTION_ENTRY__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    IMAGE_ARM_RUNTIME_FUNCTION_ENTRY__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    IMAGE_ARM_RUNTIME_FUNCTION_ENTRY__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_ARM_RUNTIME_FUNCTION_ENTRY__Anonymous_e__Union._fields_ = [
        ("UnwindData", UInt32),
        ("Anonymous", IMAGE_ARM_RUNTIME_FUNCTION_ENTRY__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    IMAGE_ARM_RUNTIME_FUNCTION_ENTRY._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_ARM_RUNTIME_FUNCTION_ENTRY._fields_ = [
        ("BeginAddress", UInt32),
        ("Anonymous", IMAGE_ARM_RUNTIME_FUNCTION_ENTRY__Anonymous_e__Union),
    ]
    return IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
ARM64_FNPDATA_FLAGS = Int32
ARM64_FNPDATA_FLAGS_PdataRefToFullXdata = 0
ARM64_FNPDATA_FLAGS_PdataPackedUnwindFunction = 1
ARM64_FNPDATA_FLAGS_PdataPackedUnwindFragment = 2
ARM64_FNPDATA_CR = Int32
ARM64_FNPDATA_CR_PdataCrUnchained = 0
ARM64_FNPDATA_CR_PdataCrUnchainedSavedLr = 1
ARM64_FNPDATA_CR_PdataCrChainedWithPac = 2
ARM64_FNPDATA_CR_PdataCrChained = 3
def _define_IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA_head():
    class IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA(Union):
        pass
    return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA
def _define_IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA():
    IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA = win32more.System.SystemServices.IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA_head
    class IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA__Anonymous_e__Struct(Structure):
        pass
    IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA._anonymous_ = [
        'Anonymous',
    ]
    IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA._fields_ = [
        ("HeaderData", UInt32),
        ("Anonymous", IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA__Anonymous_e__Struct),
    ]
    return IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA
def _define_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY_head():
    class IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY(Structure):
        pass
    return IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
def _define_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY():
    IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY = win32more.System.SystemServices.IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY_head
    IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY._pack_ = 4
    IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY._fields_ = [
        ("BeginAddress", UInt64),
        ("EndAddress", UInt64),
        ("ExceptionHandler", UInt64),
        ("HandlerData", UInt64),
        ("PrologEndAddress", UInt64),
    ]
    return IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
def _define_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY_head():
    class IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY(Structure):
        pass
    return IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
def _define_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY():
    IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY = win32more.System.SystemServices.IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY_head
    IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY._fields_ = [
        ("BeginAddress", UInt32),
        ("EndAddress", UInt32),
        ("ExceptionHandler", UInt32),
        ("HandlerData", UInt32),
        ("PrologEndAddress", UInt32),
    ]
    return IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
def _define_IMAGE_DEBUG_MISC_head():
    class IMAGE_DEBUG_MISC(Structure):
        pass
    return IMAGE_DEBUG_MISC
def _define_IMAGE_DEBUG_MISC():
    IMAGE_DEBUG_MISC = win32more.System.SystemServices.IMAGE_DEBUG_MISC_head
    IMAGE_DEBUG_MISC._fields_ = [
        ("DataType", UInt32),
        ("Length", UInt32),
        ("Unicode", win32more.Foundation.BOOLEAN),
        ("Reserved", Byte * 3),
        ("Data", Byte * 0),
    ]
    return IMAGE_DEBUG_MISC
def _define_IMAGE_SEPARATE_DEBUG_HEADER_head():
    class IMAGE_SEPARATE_DEBUG_HEADER(Structure):
        pass
    return IMAGE_SEPARATE_DEBUG_HEADER
def _define_IMAGE_SEPARATE_DEBUG_HEADER():
    IMAGE_SEPARATE_DEBUG_HEADER = win32more.System.SystemServices.IMAGE_SEPARATE_DEBUG_HEADER_head
    IMAGE_SEPARATE_DEBUG_HEADER._fields_ = [
        ("Signature", UInt16),
        ("Flags", UInt16),
        ("Machine", UInt16),
        ("Characteristics", UInt16),
        ("TimeDateStamp", UInt32),
        ("CheckSum", UInt32),
        ("ImageBase", UInt32),
        ("SizeOfImage", UInt32),
        ("NumberOfSections", UInt32),
        ("ExportedNamesSize", UInt32),
        ("DebugDirectorySize", UInt32),
        ("SectionAlignment", UInt32),
        ("Reserved", UInt32 * 2),
    ]
    return IMAGE_SEPARATE_DEBUG_HEADER
def _define_NON_PAGED_DEBUG_INFO_head():
    class NON_PAGED_DEBUG_INFO(Structure):
        pass
    return NON_PAGED_DEBUG_INFO
def _define_NON_PAGED_DEBUG_INFO():
    NON_PAGED_DEBUG_INFO = win32more.System.SystemServices.NON_PAGED_DEBUG_INFO_head
    NON_PAGED_DEBUG_INFO._pack_ = 4
    NON_PAGED_DEBUG_INFO._fields_ = [
        ("Signature", UInt16),
        ("Flags", UInt16),
        ("Size", UInt32),
        ("Machine", UInt16),
        ("Characteristics", UInt16),
        ("TimeDateStamp", UInt32),
        ("CheckSum", UInt32),
        ("SizeOfImage", UInt32),
        ("ImageBase", UInt64),
    ]
    return NON_PAGED_DEBUG_INFO
def _define_IMAGE_ARCHITECTURE_HEADER_head():
    class IMAGE_ARCHITECTURE_HEADER(Structure):
        pass
    return IMAGE_ARCHITECTURE_HEADER
def _define_IMAGE_ARCHITECTURE_HEADER():
    IMAGE_ARCHITECTURE_HEADER = win32more.System.SystemServices.IMAGE_ARCHITECTURE_HEADER_head
    IMAGE_ARCHITECTURE_HEADER._fields_ = [
        ("_bitfield", UInt32),
        ("FirstEntryRVA", UInt32),
    ]
    return IMAGE_ARCHITECTURE_HEADER
def _define_IMAGE_ARCHITECTURE_ENTRY_head():
    class IMAGE_ARCHITECTURE_ENTRY(Structure):
        pass
    return IMAGE_ARCHITECTURE_ENTRY
def _define_IMAGE_ARCHITECTURE_ENTRY():
    IMAGE_ARCHITECTURE_ENTRY = win32more.System.SystemServices.IMAGE_ARCHITECTURE_ENTRY_head
    IMAGE_ARCHITECTURE_ENTRY._fields_ = [
        ("FixupInstRVA", UInt32),
        ("NewInst", UInt32),
    ]
    return IMAGE_ARCHITECTURE_ENTRY
def _define_IMPORT_OBJECT_HEADER_head():
    class IMPORT_OBJECT_HEADER(Structure):
        pass
    return IMPORT_OBJECT_HEADER
def _define_IMPORT_OBJECT_HEADER():
    IMPORT_OBJECT_HEADER = win32more.System.SystemServices.IMPORT_OBJECT_HEADER_head
    class IMPORT_OBJECT_HEADER__Anonymous_e__Union(Union):
        pass
    IMPORT_OBJECT_HEADER__Anonymous_e__Union._fields_ = [
        ("Ordinal", UInt16),
        ("Hint", UInt16),
    ]
    IMPORT_OBJECT_HEADER._anonymous_ = [
        'Anonymous',
    ]
    IMPORT_OBJECT_HEADER._fields_ = [
        ("Sig1", UInt16),
        ("Sig2", UInt16),
        ("Version", UInt16),
        ("Machine", UInt16),
        ("TimeDateStamp", UInt32),
        ("SizeOfData", UInt32),
        ("Anonymous", IMPORT_OBJECT_HEADER__Anonymous_e__Union),
        ("_bitfield", UInt16),
    ]
    return IMPORT_OBJECT_HEADER
IMPORT_OBJECT_TYPE = Int32
IMPORT_OBJECT_CODE = 0
IMPORT_OBJECT_DATA = 1
IMPORT_OBJECT_CONST = 2
IMPORT_OBJECT_NAME_TYPE = Int32
IMPORT_OBJECT_ORDINAL = 0
IMPORT_OBJECT_NAME = 1
IMPORT_OBJECT_NAME_NO_PREFIX = 2
IMPORT_OBJECT_NAME_UNDECORATE = 3
IMPORT_OBJECT_NAME_EXPORTAS = 4
ReplacesCorHdrNumericDefines = Int32
COMIMAGE_FLAGS_ILONLY = 1
COMIMAGE_FLAGS_32BITREQUIRED = 2
COMIMAGE_FLAGS_IL_LIBRARY = 4
COMIMAGE_FLAGS_STRONGNAMESIGNED = 8
COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16
COMIMAGE_FLAGS_TRACKDEBUGDATA = 65536
COMIMAGE_FLAGS_32BITPREFERRED = 131072
COR_VERSION_MAJOR_V2 = 2
COR_VERSION_MAJOR = 2
COR_VERSION_MINOR = 5
COR_DELETED_NAME_LENGTH = 8
COR_VTABLEGAP_NAME_LENGTH = 8
NATIVE_TYPE_MAX_CB = 1
COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255
IMAGE_COR_MIH_METHODRVA = 1
IMAGE_COR_MIH_EHRVA = 2
IMAGE_COR_MIH_BASICBLOCK = 8
COR_VTABLE_32BIT = 1
COR_VTABLE_64BIT = 2
COR_VTABLE_FROM_UNMANAGED = 4
COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8
COR_VTABLE_CALL_MOST_DERIVED = 16
IMAGE_COR_EATJ_THUNK_SIZE = 32
MAX_CLASS_NAME = 1024
MAX_PACKAGE_NAME = 1024
RTL_UMS_SCHEDULER_REASON = Int32
RTL_UMS_SCHEDULER_REASON_UmsSchedulerStartup = 0
RTL_UMS_SCHEDULER_REASON_UmsSchedulerThreadBlocked = 1
RTL_UMS_SCHEDULER_REASON_UmsSchedulerThreadYield = 2
IMAGE_POLICY_ENTRY_TYPE = Int32
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeNone = 0
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeBool = 1
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt8 = 2
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt8 = 3
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt16 = 4
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt16 = 5
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt32 = 6
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt32 = 7
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt64 = 8
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt64 = 9
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeAnsiString = 10
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUnicodeString = 11
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeOverride = 12
IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeMaximum = 13
IMAGE_POLICY_ID = Int32
IMAGE_POLICY_ID_ImagePolicyIdNone = 0
IMAGE_POLICY_ID_ImagePolicyIdEtw = 1
IMAGE_POLICY_ID_ImagePolicyIdDebug = 2
IMAGE_POLICY_ID_ImagePolicyIdCrashDump = 3
IMAGE_POLICY_ID_ImagePolicyIdCrashDumpKey = 4
IMAGE_POLICY_ID_ImagePolicyIdCrashDumpKeyGuid = 5
IMAGE_POLICY_ID_ImagePolicyIdParentSd = 6
IMAGE_POLICY_ID_ImagePolicyIdParentSdRev = 7
IMAGE_POLICY_ID_ImagePolicyIdSvn = 8
IMAGE_POLICY_ID_ImagePolicyIdDeviceId = 9
IMAGE_POLICY_ID_ImagePolicyIdCapability = 10
IMAGE_POLICY_ID_ImagePolicyIdScenarioId = 11
IMAGE_POLICY_ID_ImagePolicyIdMaximum = 12
def _define_IMAGE_POLICY_ENTRY_head():
    class IMAGE_POLICY_ENTRY(Structure):
        pass
    return IMAGE_POLICY_ENTRY
def _define_IMAGE_POLICY_ENTRY():
    IMAGE_POLICY_ENTRY = win32more.System.SystemServices.IMAGE_POLICY_ENTRY_head
    class IMAGE_POLICY_ENTRY__u_e__Union(Union):
        pass
    IMAGE_POLICY_ENTRY__u_e__Union._fields_ = [
        ("None", c_void_p),
        ("BoolValue", win32more.Foundation.BOOLEAN),
        ("Int8Value", SByte),
        ("UInt8Value", Byte),
        ("Int16Value", Int16),
        ("UInt16Value", UInt16),
        ("Int32Value", Int32),
        ("UInt32Value", UInt32),
        ("Int64Value", Int64),
        ("UInt64Value", UInt64),
        ("AnsiStringValue", win32more.Foundation.PSTR),
        ("UnicodeStringValue", win32more.Foundation.PWSTR),
    ]
    IMAGE_POLICY_ENTRY._fields_ = [
        ("Type", win32more.System.SystemServices.IMAGE_POLICY_ENTRY_TYPE),
        ("PolicyId", win32more.System.SystemServices.IMAGE_POLICY_ID),
        ("u", IMAGE_POLICY_ENTRY__u_e__Union),
    ]
    return IMAGE_POLICY_ENTRY
def _define_IMAGE_POLICY_METADATA_head():
    class IMAGE_POLICY_METADATA(Structure):
        pass
    return IMAGE_POLICY_METADATA
def _define_IMAGE_POLICY_METADATA():
    IMAGE_POLICY_METADATA = win32more.System.SystemServices.IMAGE_POLICY_METADATA_head
    IMAGE_POLICY_METADATA._fields_ = [
        ("Version", Byte),
        ("Reserved0", Byte * 7),
        ("ApplicationId", UInt64),
        ("Policies", win32more.System.SystemServices.IMAGE_POLICY_ENTRY * 0),
    ]
    return IMAGE_POLICY_METADATA
def _define_HEAP_OPTIMIZE_RESOURCES_INFORMATION_head():
    class HEAP_OPTIMIZE_RESOURCES_INFORMATION(Structure):
        pass
    return HEAP_OPTIMIZE_RESOURCES_INFORMATION
def _define_HEAP_OPTIMIZE_RESOURCES_INFORMATION():
    HEAP_OPTIMIZE_RESOURCES_INFORMATION = win32more.System.SystemServices.HEAP_OPTIMIZE_RESOURCES_INFORMATION_head
    HEAP_OPTIMIZE_RESOURCES_INFORMATION._fields_ = [
        ("Version", UInt32),
        ("Flags", UInt32),
    ]
    return HEAP_OPTIMIZE_RESOURCES_INFORMATION
def _define_WORKERCALLBACKFUNC():
    return CFUNCTYPE(Void,c_void_p, use_last_error=False)
def _define_APC_CALLBACK_FUNCTION():
    return CFUNCTYPE(Void,UInt32,c_void_p,c_void_p, use_last_error=False)
ACTIVATION_CONTEXT_INFO_CLASS = Int32
ACTIVATION_CONTEXT_INFO_CLASS_ActivationContextBasicInformation = 1
ACTIVATION_CONTEXT_INFO_CLASS_ActivationContextDetailedInformation = 2
ACTIVATION_CONTEXT_INFO_CLASS_AssemblyDetailedInformationInActivationContext = 3
ACTIVATION_CONTEXT_INFO_CLASS_FileInformationInAssemblyOfAssemblyInActivationContext = 4
ACTIVATION_CONTEXT_INFO_CLASS_RunlevelInformationInActivationContext = 5
ACTIVATION_CONTEXT_INFO_CLASS_CompatibilityInformationInActivationContext = 6
ACTIVATION_CONTEXT_INFO_CLASS_ActivationContextManifestResourceName = 7
ACTIVATION_CONTEXT_INFO_CLASS_MaxActivationContextInfoClass = 8
ACTIVATION_CONTEXT_INFO_CLASS_AssemblyDetailedInformationInActivationContxt = 3
ACTIVATION_CONTEXT_INFO_CLASS_FileInformationInAssemblyOfAssemblyInActivationContxt = 4
def _define_SUPPORTED_OS_INFO_head():
    class SUPPORTED_OS_INFO(Structure):
        pass
    return SUPPORTED_OS_INFO
def _define_SUPPORTED_OS_INFO():
    SUPPORTED_OS_INFO = win32more.System.SystemServices.SUPPORTED_OS_INFO_head
    SUPPORTED_OS_INFO._fields_ = [
        ("MajorVersion", UInt16),
        ("MinorVersion", UInt16),
    ]
    return SUPPORTED_OS_INFO
def _define_MAXVERSIONTESTED_INFO_head():
    class MAXVERSIONTESTED_INFO(Structure):
        pass
    return MAXVERSIONTESTED_INFO
def _define_MAXVERSIONTESTED_INFO():
    MAXVERSIONTESTED_INFO = win32more.System.SystemServices.MAXVERSIONTESTED_INFO_head
    MAXVERSIONTESTED_INFO._fields_ = [
        ("MaxVersionTested", UInt64),
    ]
    return MAXVERSIONTESTED_INFO
def _define_PACKEDEVENTINFO_head():
    class PACKEDEVENTINFO(Structure):
        pass
    return PACKEDEVENTINFO
def _define_PACKEDEVENTINFO():
    PACKEDEVENTINFO = win32more.System.SystemServices.PACKEDEVENTINFO_head
    PACKEDEVENTINFO._fields_ = [
        ("ulSize", UInt32),
        ("ulNumEventsForLogFile", UInt32),
        ("ulOffsets", UInt32 * 0),
    ]
    return PACKEDEVENTINFO
CM_SERVICE_NODE_TYPE = Int32
CM_SERVICE_NODE_TYPE_DriverType = 1
CM_SERVICE_NODE_TYPE_FileSystemType = 2
CM_SERVICE_NODE_TYPE_Win32ServiceOwnProcess = 16
CM_SERVICE_NODE_TYPE_Win32ServiceShareProcess = 32
CM_SERVICE_NODE_TYPE_AdapterType = 4
CM_SERVICE_NODE_TYPE_RecognizerType = 8
CM_SERVICE_LOAD_TYPE = Int32
CM_SERVICE_LOAD_TYPE_BootLoad = 0
CM_SERVICE_LOAD_TYPE_SystemLoad = 1
CM_SERVICE_LOAD_TYPE_AutoLoad = 2
CM_SERVICE_LOAD_TYPE_DemandLoad = 3
CM_SERVICE_LOAD_TYPE_DisableLoad = 4
CM_ERROR_CONTROL_TYPE = Int32
CM_ERROR_CONTROL_TYPE_IgnoreError = 0
CM_ERROR_CONTROL_TYPE_NormalError = 1
CM_ERROR_CONTROL_TYPE_SevereError = 2
CM_ERROR_CONTROL_TYPE_CriticalError = 3
def _define_TAPE_GET_DRIVE_PARAMETERS_head():
    class TAPE_GET_DRIVE_PARAMETERS(Structure):
        pass
    return TAPE_GET_DRIVE_PARAMETERS
def _define_TAPE_GET_DRIVE_PARAMETERS():
    TAPE_GET_DRIVE_PARAMETERS = win32more.System.SystemServices.TAPE_GET_DRIVE_PARAMETERS_head
    TAPE_GET_DRIVE_PARAMETERS._fields_ = [
        ("ECC", win32more.Foundation.BOOLEAN),
        ("Compression", win32more.Foundation.BOOLEAN),
        ("DataPadding", win32more.Foundation.BOOLEAN),
        ("ReportSetmarks", win32more.Foundation.BOOLEAN),
        ("DefaultBlockSize", UInt32),
        ("MaximumBlockSize", UInt32),
        ("MinimumBlockSize", UInt32),
        ("MaximumPartitionCount", UInt32),
        ("FeaturesLow", UInt32),
        ("FeaturesHigh", win32more.System.SystemServices.TAPE_GET_DRIVE_PARAMETERS_FEATURES_HIGH),
        ("EOTWarningZoneSize", UInt32),
    ]
    return TAPE_GET_DRIVE_PARAMETERS
def _define_TAPE_SET_DRIVE_PARAMETERS_head():
    class TAPE_SET_DRIVE_PARAMETERS(Structure):
        pass
    return TAPE_SET_DRIVE_PARAMETERS
def _define_TAPE_SET_DRIVE_PARAMETERS():
    TAPE_SET_DRIVE_PARAMETERS = win32more.System.SystemServices.TAPE_SET_DRIVE_PARAMETERS_head
    TAPE_SET_DRIVE_PARAMETERS._fields_ = [
        ("ECC", win32more.Foundation.BOOLEAN),
        ("Compression", win32more.Foundation.BOOLEAN),
        ("DataPadding", win32more.Foundation.BOOLEAN),
        ("ReportSetmarks", win32more.Foundation.BOOLEAN),
        ("EOTWarningZoneSize", UInt32),
    ]
    return TAPE_SET_DRIVE_PARAMETERS
def _define_TAPE_GET_MEDIA_PARAMETERS_head():
    class TAPE_GET_MEDIA_PARAMETERS(Structure):
        pass
    return TAPE_GET_MEDIA_PARAMETERS
def _define_TAPE_GET_MEDIA_PARAMETERS():
    TAPE_GET_MEDIA_PARAMETERS = win32more.System.SystemServices.TAPE_GET_MEDIA_PARAMETERS_head
    TAPE_GET_MEDIA_PARAMETERS._fields_ = [
        ("Capacity", win32more.Foundation.LARGE_INTEGER),
        ("Remaining", win32more.Foundation.LARGE_INTEGER),
        ("BlockSize", UInt32),
        ("PartitionCount", UInt32),
        ("WriteProtected", win32more.Foundation.BOOLEAN),
    ]
    return TAPE_GET_MEDIA_PARAMETERS
def _define_TAPE_SET_MEDIA_PARAMETERS_head():
    class TAPE_SET_MEDIA_PARAMETERS(Structure):
        pass
    return TAPE_SET_MEDIA_PARAMETERS
def _define_TAPE_SET_MEDIA_PARAMETERS():
    TAPE_SET_MEDIA_PARAMETERS = win32more.System.SystemServices.TAPE_SET_MEDIA_PARAMETERS_head
    TAPE_SET_MEDIA_PARAMETERS._fields_ = [
        ("BlockSize", UInt32),
    ]
    return TAPE_SET_MEDIA_PARAMETERS
def _define_TAPE_CREATE_PARTITION_head():
    class TAPE_CREATE_PARTITION(Structure):
        pass
    return TAPE_CREATE_PARTITION
def _define_TAPE_CREATE_PARTITION():
    TAPE_CREATE_PARTITION = win32more.System.SystemServices.TAPE_CREATE_PARTITION_head
    TAPE_CREATE_PARTITION._fields_ = [
        ("Method", UInt32),
        ("Count", UInt32),
        ("Size", UInt32),
    ]
    return TAPE_CREATE_PARTITION
def _define_TAPE_WMI_OPERATIONS_head():
    class TAPE_WMI_OPERATIONS(Structure):
        pass
    return TAPE_WMI_OPERATIONS
def _define_TAPE_WMI_OPERATIONS():
    TAPE_WMI_OPERATIONS = win32more.System.SystemServices.TAPE_WMI_OPERATIONS_head
    TAPE_WMI_OPERATIONS._fields_ = [
        ("Method", UInt32),
        ("DataBufferSize", UInt32),
        ("DataBuffer", c_void_p),
    ]
    return TAPE_WMI_OPERATIONS
TAPE_DRIVE_PROBLEM_TYPE = Int32
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveProblemNone = 0
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadWriteWarning = 1
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadWriteError = 2
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadWarning = 3
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveWriteWarning = 4
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadError = 5
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveWriteError = 6
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveHardwareError = 7
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveUnsupportedMedia = 8
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveScsiConnectionError = 9
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveTimetoClean = 10
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveCleanDriveNow = 11
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveMediaLifeExpired = 12
TAPE_DRIVE_PROBLEM_TYPE_TapeDriveSnappedTape = 13
TRANSACTION_STATE = Int32
TRANSACTION_STATE_TransactionStateNormal = 1
TRANSACTION_STATE_TransactionStateIndoubt = 2
TRANSACTION_STATE_TransactionStateCommittedNotify = 3
def _define_TRANSACTION_BASIC_INFORMATION_head():
    class TRANSACTION_BASIC_INFORMATION(Structure):
        pass
    return TRANSACTION_BASIC_INFORMATION
def _define_TRANSACTION_BASIC_INFORMATION():
    TRANSACTION_BASIC_INFORMATION = win32more.System.SystemServices.TRANSACTION_BASIC_INFORMATION_head
    TRANSACTION_BASIC_INFORMATION._fields_ = [
        ("TransactionId", Guid),
        ("State", UInt32),
        ("Outcome", UInt32),
    ]
    return TRANSACTION_BASIC_INFORMATION
def _define_TRANSACTIONMANAGER_BASIC_INFORMATION_head():
    class TRANSACTIONMANAGER_BASIC_INFORMATION(Structure):
        pass
    return TRANSACTIONMANAGER_BASIC_INFORMATION
def _define_TRANSACTIONMANAGER_BASIC_INFORMATION():
    TRANSACTIONMANAGER_BASIC_INFORMATION = win32more.System.SystemServices.TRANSACTIONMANAGER_BASIC_INFORMATION_head
    TRANSACTIONMANAGER_BASIC_INFORMATION._fields_ = [
        ("TmIdentity", Guid),
        ("VirtualClock", win32more.Foundation.LARGE_INTEGER),
    ]
    return TRANSACTIONMANAGER_BASIC_INFORMATION
def _define_TRANSACTIONMANAGER_LOG_INFORMATION_head():
    class TRANSACTIONMANAGER_LOG_INFORMATION(Structure):
        pass
    return TRANSACTIONMANAGER_LOG_INFORMATION
def _define_TRANSACTIONMANAGER_LOG_INFORMATION():
    TRANSACTIONMANAGER_LOG_INFORMATION = win32more.System.SystemServices.TRANSACTIONMANAGER_LOG_INFORMATION_head
    TRANSACTIONMANAGER_LOG_INFORMATION._fields_ = [
        ("LogIdentity", Guid),
    ]
    return TRANSACTIONMANAGER_LOG_INFORMATION
def _define_TRANSACTIONMANAGER_LOGPATH_INFORMATION_head():
    class TRANSACTIONMANAGER_LOGPATH_INFORMATION(Structure):
        pass
    return TRANSACTIONMANAGER_LOGPATH_INFORMATION
def _define_TRANSACTIONMANAGER_LOGPATH_INFORMATION():
    TRANSACTIONMANAGER_LOGPATH_INFORMATION = win32more.System.SystemServices.TRANSACTIONMANAGER_LOGPATH_INFORMATION_head
    TRANSACTIONMANAGER_LOGPATH_INFORMATION._fields_ = [
        ("LogPathLength", UInt32),
        ("LogPath", Char * 0),
    ]
    return TRANSACTIONMANAGER_LOGPATH_INFORMATION
def _define_TRANSACTIONMANAGER_RECOVERY_INFORMATION_head():
    class TRANSACTIONMANAGER_RECOVERY_INFORMATION(Structure):
        pass
    return TRANSACTIONMANAGER_RECOVERY_INFORMATION
def _define_TRANSACTIONMANAGER_RECOVERY_INFORMATION():
    TRANSACTIONMANAGER_RECOVERY_INFORMATION = win32more.System.SystemServices.TRANSACTIONMANAGER_RECOVERY_INFORMATION_head
    TRANSACTIONMANAGER_RECOVERY_INFORMATION._fields_ = [
        ("LastRecoveredLsn", UInt64),
    ]
    return TRANSACTIONMANAGER_RECOVERY_INFORMATION
def _define_TRANSACTIONMANAGER_OLDEST_INFORMATION_head():
    class TRANSACTIONMANAGER_OLDEST_INFORMATION(Structure):
        pass
    return TRANSACTIONMANAGER_OLDEST_INFORMATION
def _define_TRANSACTIONMANAGER_OLDEST_INFORMATION():
    TRANSACTIONMANAGER_OLDEST_INFORMATION = win32more.System.SystemServices.TRANSACTIONMANAGER_OLDEST_INFORMATION_head
    TRANSACTIONMANAGER_OLDEST_INFORMATION._fields_ = [
        ("OldestTransactionGuid", Guid),
    ]
    return TRANSACTIONMANAGER_OLDEST_INFORMATION
def _define_TRANSACTION_PROPERTIES_INFORMATION_head():
    class TRANSACTION_PROPERTIES_INFORMATION(Structure):
        pass
    return TRANSACTION_PROPERTIES_INFORMATION
def _define_TRANSACTION_PROPERTIES_INFORMATION():
    TRANSACTION_PROPERTIES_INFORMATION = win32more.System.SystemServices.TRANSACTION_PROPERTIES_INFORMATION_head
    TRANSACTION_PROPERTIES_INFORMATION._fields_ = [
        ("IsolationLevel", UInt32),
        ("IsolationFlags", UInt32),
        ("Timeout", win32more.Foundation.LARGE_INTEGER),
        ("Outcome", UInt32),
        ("DescriptionLength", UInt32),
        ("Description", Char * 0),
    ]
    return TRANSACTION_PROPERTIES_INFORMATION
def _define_TRANSACTION_BIND_INFORMATION_head():
    class TRANSACTION_BIND_INFORMATION(Structure):
        pass
    return TRANSACTION_BIND_INFORMATION
def _define_TRANSACTION_BIND_INFORMATION():
    TRANSACTION_BIND_INFORMATION = win32more.System.SystemServices.TRANSACTION_BIND_INFORMATION_head
    TRANSACTION_BIND_INFORMATION._fields_ = [
        ("TmHandle", win32more.Foundation.HANDLE),
    ]
    return TRANSACTION_BIND_INFORMATION
def _define_TRANSACTION_ENLISTMENT_PAIR_head():
    class TRANSACTION_ENLISTMENT_PAIR(Structure):
        pass
    return TRANSACTION_ENLISTMENT_PAIR
def _define_TRANSACTION_ENLISTMENT_PAIR():
    TRANSACTION_ENLISTMENT_PAIR = win32more.System.SystemServices.TRANSACTION_ENLISTMENT_PAIR_head
    TRANSACTION_ENLISTMENT_PAIR._fields_ = [
        ("EnlistmentId", Guid),
        ("ResourceManagerId", Guid),
    ]
    return TRANSACTION_ENLISTMENT_PAIR
def _define_TRANSACTION_ENLISTMENTS_INFORMATION_head():
    class TRANSACTION_ENLISTMENTS_INFORMATION(Structure):
        pass
    return TRANSACTION_ENLISTMENTS_INFORMATION
def _define_TRANSACTION_ENLISTMENTS_INFORMATION():
    TRANSACTION_ENLISTMENTS_INFORMATION = win32more.System.SystemServices.TRANSACTION_ENLISTMENTS_INFORMATION_head
    TRANSACTION_ENLISTMENTS_INFORMATION._fields_ = [
        ("NumberOfEnlistments", UInt32),
        ("EnlistmentPair", win32more.System.SystemServices.TRANSACTION_ENLISTMENT_PAIR * 0),
    ]
    return TRANSACTION_ENLISTMENTS_INFORMATION
def _define_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION_head():
    class TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION(Structure):
        pass
    return TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
def _define_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION():
    TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION = win32more.System.SystemServices.TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION_head
    TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION._fields_ = [
        ("SuperiorEnlistmentPair", win32more.System.SystemServices.TRANSACTION_ENLISTMENT_PAIR),
    ]
    return TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
def _define_RESOURCEMANAGER_BASIC_INFORMATION_head():
    class RESOURCEMANAGER_BASIC_INFORMATION(Structure):
        pass
    return RESOURCEMANAGER_BASIC_INFORMATION
def _define_RESOURCEMANAGER_BASIC_INFORMATION():
    RESOURCEMANAGER_BASIC_INFORMATION = win32more.System.SystemServices.RESOURCEMANAGER_BASIC_INFORMATION_head
    RESOURCEMANAGER_BASIC_INFORMATION._fields_ = [
        ("ResourceManagerId", Guid),
        ("DescriptionLength", UInt32),
        ("Description", Char * 0),
    ]
    return RESOURCEMANAGER_BASIC_INFORMATION
def _define_RESOURCEMANAGER_COMPLETION_INFORMATION_head():
    class RESOURCEMANAGER_COMPLETION_INFORMATION(Structure):
        pass
    return RESOURCEMANAGER_COMPLETION_INFORMATION
def _define_RESOURCEMANAGER_COMPLETION_INFORMATION():
    RESOURCEMANAGER_COMPLETION_INFORMATION = win32more.System.SystemServices.RESOURCEMANAGER_COMPLETION_INFORMATION_head
    RESOURCEMANAGER_COMPLETION_INFORMATION._fields_ = [
        ("IoCompletionPortHandle", win32more.Foundation.HANDLE),
        ("CompletionKey", UIntPtr),
    ]
    return RESOURCEMANAGER_COMPLETION_INFORMATION
TRANSACTION_INFORMATION_CLASS = Int32
TRANSACTION_INFORMATION_CLASS_TransactionBasicInformation = 0
TRANSACTION_INFORMATION_CLASS_TransactionPropertiesInformation = 1
TRANSACTION_INFORMATION_CLASS_TransactionEnlistmentInformation = 2
TRANSACTION_INFORMATION_CLASS_TransactionSuperiorEnlistmentInformation = 3
TRANSACTION_INFORMATION_CLASS_TransactionBindInformation = 4
TRANSACTION_INFORMATION_CLASS_TransactionDTCPrivateInformation = 5
TRANSACTIONMANAGER_INFORMATION_CLASS = Int32
TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerBasicInformation = 0
TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerLogInformation = 1
TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerLogPathInformation = 2
TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerRecoveryInformation = 4
TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerOnlineProbeInformation = 3
TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerOldestTransactionInformation = 5
RESOURCEMANAGER_INFORMATION_CLASS = Int32
RESOURCEMANAGER_INFORMATION_CLASS_ResourceManagerBasicInformation = 0
RESOURCEMANAGER_INFORMATION_CLASS_ResourceManagerCompletionInformation = 1
def _define_ENLISTMENT_BASIC_INFORMATION_head():
    class ENLISTMENT_BASIC_INFORMATION(Structure):
        pass
    return ENLISTMENT_BASIC_INFORMATION
def _define_ENLISTMENT_BASIC_INFORMATION():
    ENLISTMENT_BASIC_INFORMATION = win32more.System.SystemServices.ENLISTMENT_BASIC_INFORMATION_head
    ENLISTMENT_BASIC_INFORMATION._fields_ = [
        ("EnlistmentId", Guid),
        ("TransactionId", Guid),
        ("ResourceManagerId", Guid),
    ]
    return ENLISTMENT_BASIC_INFORMATION
def _define_ENLISTMENT_CRM_INFORMATION_head():
    class ENLISTMENT_CRM_INFORMATION(Structure):
        pass
    return ENLISTMENT_CRM_INFORMATION
def _define_ENLISTMENT_CRM_INFORMATION():
    ENLISTMENT_CRM_INFORMATION = win32more.System.SystemServices.ENLISTMENT_CRM_INFORMATION_head
    ENLISTMENT_CRM_INFORMATION._fields_ = [
        ("CrmTransactionManagerId", Guid),
        ("CrmResourceManagerId", Guid),
        ("CrmEnlistmentId", Guid),
    ]
    return ENLISTMENT_CRM_INFORMATION
ENLISTMENT_INFORMATION_CLASS = Int32
ENLISTMENT_INFORMATION_CLASS_EnlistmentBasicInformation = 0
ENLISTMENT_INFORMATION_CLASS_EnlistmentRecoveryInformation = 1
ENLISTMENT_INFORMATION_CLASS_EnlistmentCrmInformation = 2
def _define_TRANSACTION_LIST_ENTRY_head():
    class TRANSACTION_LIST_ENTRY(Structure):
        pass
    return TRANSACTION_LIST_ENTRY
def _define_TRANSACTION_LIST_ENTRY():
    TRANSACTION_LIST_ENTRY = win32more.System.SystemServices.TRANSACTION_LIST_ENTRY_head
    TRANSACTION_LIST_ENTRY._fields_ = [
        ("UOW", Guid),
    ]
    return TRANSACTION_LIST_ENTRY
def _define_TRANSACTION_LIST_INFORMATION_head():
    class TRANSACTION_LIST_INFORMATION(Structure):
        pass
    return TRANSACTION_LIST_INFORMATION
def _define_TRANSACTION_LIST_INFORMATION():
    TRANSACTION_LIST_INFORMATION = win32more.System.SystemServices.TRANSACTION_LIST_INFORMATION_head
    TRANSACTION_LIST_INFORMATION._fields_ = [
        ("NumberOfTransactions", UInt32),
        ("TransactionInformation", win32more.System.SystemServices.TRANSACTION_LIST_ENTRY * 0),
    ]
    return TRANSACTION_LIST_INFORMATION
KTMOBJECT_TYPE = Int32
KTMOBJECT_TRANSACTION = 0
KTMOBJECT_TRANSACTION_MANAGER = 1
KTMOBJECT_RESOURCE_MANAGER = 2
KTMOBJECT_ENLISTMENT = 3
KTMOBJECT_INVALID = 4
def _define_KTMOBJECT_CURSOR_head():
    class KTMOBJECT_CURSOR(Structure):
        pass
    return KTMOBJECT_CURSOR
def _define_KTMOBJECT_CURSOR():
    KTMOBJECT_CURSOR = win32more.System.SystemServices.KTMOBJECT_CURSOR_head
    KTMOBJECT_CURSOR._fields_ = [
        ("LastQuery", Guid),
        ("ObjectIdCount", UInt32),
        ("ObjectIds", Guid * 0),
    ]
    return KTMOBJECT_CURSOR
def _define_UnregisterDeviceNotification():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,c_void_p, use_last_error=True)(("UnregisterDeviceNotification", windll["USER32"]), ((1, 'Handle'),))
    except (FileNotFoundError, AttributeError):
        return None
__all__ = [
    "_MM_HINT_T0",
    "_MM_HINT_T1",
    "_MM_HINT_T2",
    "_MM_HINT_NTA",
    "ANYSIZE_ARRAY",
    "MEMORY_ALLOCATION_ALIGNMENT",
    "X86_CACHE_ALIGNMENT_SIZE",
    "ARM_CACHE_ALIGNMENT_SIZE",
    "SYSTEM_CACHE_ALIGNMENT_SIZE",
    "PRAGMA_DEPRECATED_DDK",
    "UCSCHAR_INVALID_CHARACTER",
    "MIN_UCSCHAR",
    "MAX_UCSCHAR",
    "ALL_PROCESSOR_GROUPS",
    "MAXIMUM_PROC_PER_GROUP",
    "MAXIMUM_PROCESSORS",
    "APPLICATION_ERROR_MASK",
    "ERROR_SEVERITY_SUCCESS",
    "ERROR_SEVERITY_INFORMATIONAL",
    "ERROR_SEVERITY_WARNING",
    "ERROR_SEVERITY_ERROR",
    "MAXLONGLONG",
    "UNICODE_STRING_MAX_CHARS",
    "MINCHAR",
    "MAXCHAR",
    "MINSHORT",
    "MAXSHORT",
    "MINLONG",
    "MAXLONG",
    "MAXBYTE",
    "MAXWORD",
    "MAXDWORD",
    "ENCLAVE_SHORT_ID_LENGTH",
    "ENCLAVE_LONG_ID_LENGTH",
    "VER_SERVER_NT",
    "VER_WORKSTATION_NT",
    "VER_SUITE_SMALLBUSINESS",
    "VER_SUITE_ENTERPRISE",
    "VER_SUITE_BACKOFFICE",
    "VER_SUITE_COMMUNICATIONS",
    "VER_SUITE_TERMINAL",
    "VER_SUITE_SMALLBUSINESS_RESTRICTED",
    "VER_SUITE_EMBEDDEDNT",
    "VER_SUITE_DATACENTER",
    "VER_SUITE_SINGLEUSERTS",
    "VER_SUITE_PERSONAL",
    "VER_SUITE_BLADE",
    "VER_SUITE_EMBEDDED_RESTRICTED",
    "VER_SUITE_SECURITY_APPLIANCE",
    "VER_SUITE_STORAGE_SERVER",
    "VER_SUITE_COMPUTE_SERVER",
    "VER_SUITE_WH_SERVER",
    "VER_SUITE_MULTIUSERTS",
    "PRODUCT_STANDARD_SERVER_CORE",
    "PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE",
    "PRODUCT_PROFESSIONAL_EMBEDDED",
    "PRODUCT_EMBEDDED",
    "PRODUCT_EMBEDDED_AUTOMOTIVE",
    "PRODUCT_EMBEDDED_INDUSTRY_A",
    "PRODUCT_THINPC",
    "PRODUCT_EMBEDDED_A",
    "PRODUCT_EMBEDDED_INDUSTRY",
    "PRODUCT_EMBEDDED_E",
    "PRODUCT_EMBEDDED_INDUSTRY_E",
    "PRODUCT_EMBEDDED_INDUSTRY_A_E",
    "PRODUCT_CORE_ARM",
    "PRODUCT_EMBEDDED_INDUSTRY_EVAL",
    "PRODUCT_EMBEDDED_INDUSTRY_E_EVAL",
    "PRODUCT_EMBEDDED_EVAL",
    "PRODUCT_EMBEDDED_E_EVAL",
    "PRODUCT_NANO_SERVER",
    "PRODUCT_CLOUD_STORAGE_SERVER",
    "PRODUCT_CORE_CONNECTED",
    "PRODUCT_PROFESSIONAL_STUDENT",
    "PRODUCT_CORE_CONNECTED_N",
    "PRODUCT_PROFESSIONAL_STUDENT_N",
    "PRODUCT_CORE_CONNECTED_SINGLELANGUAGE",
    "PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC",
    "PRODUCT_CONNECTED_CAR",
    "PRODUCT_INDUSTRY_HANDHELD",
    "PRODUCT_PPI_PRO",
    "PRODUCT_ARM64_SERVER",
    "PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER",
    "PRODUCT_PROFESSIONAL_S",
    "PRODUCT_PROFESSIONAL_S_N",
    "PRODUCT_HOLOGRAPHIC",
    "PRODUCT_HOLOGRAPHIC_BUSINESS",
    "PRODUCT_PRO_SINGLE_LANGUAGE",
    "PRODUCT_PRO_CHINA",
    "PRODUCT_ENTERPRISE_SUBSCRIPTION",
    "PRODUCT_ENTERPRISE_SUBSCRIPTION_N",
    "PRODUCT_DATACENTER_NANO_SERVER",
    "PRODUCT_STANDARD_NANO_SERVER",
    "PRODUCT_DATACENTER_WS_SERVER_CORE",
    "PRODUCT_STANDARD_WS_SERVER_CORE",
    "PRODUCT_UTILITY_VM",
    "PRODUCT_DATACENTER_EVALUATION_SERVER_CORE",
    "PRODUCT_STANDARD_EVALUATION_SERVER_CORE",
    "PRODUCT_PRO_FOR_EDUCATION",
    "PRODUCT_PRO_FOR_EDUCATION_N",
    "PRODUCT_AZURE_SERVER_CORE",
    "PRODUCT_AZURE_NANO_SERVER",
    "PRODUCT_ENTERPRISEG",
    "PRODUCT_ENTERPRISEGN",
    "PRODUCT_SERVERRDSH",
    "PRODUCT_CLOUD",
    "PRODUCT_CLOUDN",
    "PRODUCT_HUBOS",
    "PRODUCT_ONECOREUPDATEOS",
    "PRODUCT_CLOUDE",
    "PRODUCT_IOTOS",
    "PRODUCT_CLOUDEN",
    "PRODUCT_IOTEDGEOS",
    "PRODUCT_IOTENTERPRISE",
    "PRODUCT_LITE",
    "PRODUCT_IOTENTERPRISES",
    "PRODUCT_XBOX_SYSTEMOS",
    "PRODUCT_XBOX_NATIVEOS",
    "PRODUCT_XBOX_GAMEOS",
    "PRODUCT_XBOX_ERAOS",
    "PRODUCT_XBOX_DURANGOHOSTOS",
    "PRODUCT_XBOX_SCARLETTHOSTOS",
    "PRODUCT_AZURE_SERVER_CLOUDHOST",
    "PRODUCT_AZURE_SERVER_CLOUDMOS",
    "PRODUCT_CLOUDEDITIONN",
    "PRODUCT_CLOUDEDITION",
    "PRODUCT_AZURESTACKHCI_SERVER_CORE",
    "PRODUCT_DATACENTER_SERVER_AZURE_EDITION",
    "PRODUCT_DATACENTER_SERVER_CORE_AZURE_EDITION",
    "PRODUCT_UNLICENSED",
    "LANG_NEUTRAL",
    "LANG_INVARIANT",
    "LANG_AFRIKAANS",
    "LANG_ALBANIAN",
    "LANG_ALSATIAN",
    "LANG_AMHARIC",
    "LANG_ARABIC",
    "LANG_ARMENIAN",
    "LANG_ASSAMESE",
    "LANG_AZERI",
    "LANG_AZERBAIJANI",
    "LANG_BANGLA",
    "LANG_BASHKIR",
    "LANG_BASQUE",
    "LANG_BELARUSIAN",
    "LANG_BENGALI",
    "LANG_BRETON",
    "LANG_BOSNIAN",
    "LANG_BOSNIAN_NEUTRAL",
    "LANG_BULGARIAN",
    "LANG_CATALAN",
    "LANG_CENTRAL_KURDISH",
    "LANG_CHEROKEE",
    "LANG_CHINESE",
    "LANG_CHINESE_SIMPLIFIED",
    "LANG_CHINESE_TRADITIONAL",
    "LANG_CORSICAN",
    "LANG_CROATIAN",
    "LANG_CZECH",
    "LANG_DANISH",
    "LANG_DARI",
    "LANG_DIVEHI",
    "LANG_DUTCH",
    "LANG_ENGLISH",
    "LANG_ESTONIAN",
    "LANG_FAEROESE",
    "LANG_FARSI",
    "LANG_FILIPINO",
    "LANG_FINNISH",
    "LANG_FRENCH",
    "LANG_FRISIAN",
    "LANG_FULAH",
    "LANG_GALICIAN",
    "LANG_GEORGIAN",
    "LANG_GERMAN",
    "LANG_GREEK",
    "LANG_GREENLANDIC",
    "LANG_GUJARATI",
    "LANG_HAUSA",
    "LANG_HAWAIIAN",
    "LANG_HEBREW",
    "LANG_HINDI",
    "LANG_HUNGARIAN",
    "LANG_ICELANDIC",
    "LANG_IGBO",
    "LANG_INDONESIAN",
    "LANG_INUKTITUT",
    "LANG_IRISH",
    "LANG_ITALIAN",
    "LANG_JAPANESE",
    "LANG_KANNADA",
    "LANG_KASHMIRI",
    "LANG_KAZAK",
    "LANG_KHMER",
    "LANG_KICHE",
    "LANG_KINYARWANDA",
    "LANG_KONKANI",
    "LANG_KOREAN",
    "LANG_KYRGYZ",
    "LANG_LAO",
    "LANG_LATVIAN",
    "LANG_LITHUANIAN",
    "LANG_LOWER_SORBIAN",
    "LANG_LUXEMBOURGISH",
    "LANG_MACEDONIAN",
    "LANG_MALAY",
    "LANG_MALAYALAM",
    "LANG_MALTESE",
    "LANG_MANIPURI",
    "LANG_MAORI",
    "LANG_MAPUDUNGUN",
    "LANG_MARATHI",
    "LANG_MOHAWK",
    "LANG_MONGOLIAN",
    "LANG_NEPALI",
    "LANG_NORWEGIAN",
    "LANG_OCCITAN",
    "LANG_ODIA",
    "LANG_ORIYA",
    "LANG_PASHTO",
    "LANG_PERSIAN",
    "LANG_POLISH",
    "LANG_PORTUGUESE",
    "LANG_PULAR",
    "LANG_PUNJABI",
    "LANG_QUECHUA",
    "LANG_ROMANIAN",
    "LANG_ROMANSH",
    "LANG_RUSSIAN",
    "LANG_SAKHA",
    "LANG_SAMI",
    "LANG_SANSKRIT",
    "LANG_SCOTTISH_GAELIC",
    "LANG_SERBIAN",
    "LANG_SERBIAN_NEUTRAL",
    "LANG_SINDHI",
    "LANG_SINHALESE",
    "LANG_SLOVAK",
    "LANG_SLOVENIAN",
    "LANG_SOTHO",
    "LANG_SPANISH",
    "LANG_SWAHILI",
    "LANG_SWEDISH",
    "LANG_SYRIAC",
    "LANG_TAJIK",
    "LANG_TAMAZIGHT",
    "LANG_TAMIL",
    "LANG_TATAR",
    "LANG_TELUGU",
    "LANG_THAI",
    "LANG_TIBETAN",
    "LANG_TIGRIGNA",
    "LANG_TIGRINYA",
    "LANG_TSWANA",
    "LANG_TURKISH",
    "LANG_TURKMEN",
    "LANG_UIGHUR",
    "LANG_UKRAINIAN",
    "LANG_UPPER_SORBIAN",
    "LANG_URDU",
    "LANG_UZBEK",
    "LANG_VALENCIAN",
    "LANG_VIETNAMESE",
    "LANG_WELSH",
    "LANG_WOLOF",
    "LANG_XHOSA",
    "LANG_YAKUT",
    "LANG_YI",
    "LANG_YORUBA",
    "LANG_ZULU",
    "SUBLANG_NEUTRAL",
    "SUBLANG_DEFAULT",
    "SUBLANG_SYS_DEFAULT",
    "SUBLANG_CUSTOM_DEFAULT",
    "SUBLANG_CUSTOM_UNSPECIFIED",
    "SUBLANG_UI_CUSTOM_DEFAULT",
    "SUBLANG_AFRIKAANS_SOUTH_AFRICA",
    "SUBLANG_ALBANIAN_ALBANIA",
    "SUBLANG_ALSATIAN_FRANCE",
    "SUBLANG_AMHARIC_ETHIOPIA",
    "SUBLANG_ARABIC_SAUDI_ARABIA",
    "SUBLANG_ARABIC_IRAQ",
    "SUBLANG_ARABIC_EGYPT",
    "SUBLANG_ARABIC_LIBYA",
    "SUBLANG_ARABIC_ALGERIA",
    "SUBLANG_ARABIC_MOROCCO",
    "SUBLANG_ARABIC_TUNISIA",
    "SUBLANG_ARABIC_OMAN",
    "SUBLANG_ARABIC_YEMEN",
    "SUBLANG_ARABIC_SYRIA",
    "SUBLANG_ARABIC_JORDAN",
    "SUBLANG_ARABIC_LEBANON",
    "SUBLANG_ARABIC_KUWAIT",
    "SUBLANG_ARABIC_UAE",
    "SUBLANG_ARABIC_BAHRAIN",
    "SUBLANG_ARABIC_QATAR",
    "SUBLANG_ARMENIAN_ARMENIA",
    "SUBLANG_ASSAMESE_INDIA",
    "SUBLANG_AZERI_LATIN",
    "SUBLANG_AZERI_CYRILLIC",
    "SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN",
    "SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC",
    "SUBLANG_BANGLA_INDIA",
    "SUBLANG_BANGLA_BANGLADESH",
    "SUBLANG_BASHKIR_RUSSIA",
    "SUBLANG_BASQUE_BASQUE",
    "SUBLANG_BELARUSIAN_BELARUS",
    "SUBLANG_BENGALI_INDIA",
    "SUBLANG_BENGALI_BANGLADESH",
    "SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN",
    "SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC",
    "SUBLANG_BRETON_FRANCE",
    "SUBLANG_BULGARIAN_BULGARIA",
    "SUBLANG_CATALAN_CATALAN",
    "SUBLANG_CENTRAL_KURDISH_IRAQ",
    "SUBLANG_CHEROKEE_CHEROKEE",
    "SUBLANG_CHINESE_TRADITIONAL",
    "SUBLANG_CHINESE_SIMPLIFIED",
    "SUBLANG_CHINESE_HONGKONG",
    "SUBLANG_CHINESE_SINGAPORE",
    "SUBLANG_CHINESE_MACAU",
    "SUBLANG_CORSICAN_FRANCE",
    "SUBLANG_CZECH_CZECH_REPUBLIC",
    "SUBLANG_CROATIAN_CROATIA",
    "SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN",
    "SUBLANG_DANISH_DENMARK",
    "SUBLANG_DARI_AFGHANISTAN",
    "SUBLANG_DIVEHI_MALDIVES",
    "SUBLANG_DUTCH",
    "SUBLANG_DUTCH_BELGIAN",
    "SUBLANG_ENGLISH_US",
    "SUBLANG_ENGLISH_UK",
    "SUBLANG_ENGLISH_AUS",
    "SUBLANG_ENGLISH_CAN",
    "SUBLANG_ENGLISH_NZ",
    "SUBLANG_ENGLISH_EIRE",
    "SUBLANG_ENGLISH_SOUTH_AFRICA",
    "SUBLANG_ENGLISH_JAMAICA",
    "SUBLANG_ENGLISH_CARIBBEAN",
    "SUBLANG_ENGLISH_BELIZE",
    "SUBLANG_ENGLISH_TRINIDAD",
    "SUBLANG_ENGLISH_ZIMBABWE",
    "SUBLANG_ENGLISH_PHILIPPINES",
    "SUBLANG_ENGLISH_INDIA",
    "SUBLANG_ENGLISH_MALAYSIA",
    "SUBLANG_ENGLISH_SINGAPORE",
    "SUBLANG_ESTONIAN_ESTONIA",
    "SUBLANG_FAEROESE_FAROE_ISLANDS",
    "SUBLANG_FILIPINO_PHILIPPINES",
    "SUBLANG_FINNISH_FINLAND",
    "SUBLANG_FRENCH",
    "SUBLANG_FRENCH_BELGIAN",
    "SUBLANG_FRENCH_CANADIAN",
    "SUBLANG_FRENCH_SWISS",
    "SUBLANG_FRENCH_LUXEMBOURG",
    "SUBLANG_FRENCH_MONACO",
    "SUBLANG_FRISIAN_NETHERLANDS",
    "SUBLANG_FULAH_SENEGAL",
    "SUBLANG_GALICIAN_GALICIAN",
    "SUBLANG_GEORGIAN_GEORGIA",
    "SUBLANG_GERMAN",
    "SUBLANG_GERMAN_SWISS",
    "SUBLANG_GERMAN_AUSTRIAN",
    "SUBLANG_GERMAN_LUXEMBOURG",
    "SUBLANG_GERMAN_LIECHTENSTEIN",
    "SUBLANG_GREEK_GREECE",
    "SUBLANG_GREENLANDIC_GREENLAND",
    "SUBLANG_GUJARATI_INDIA",
    "SUBLANG_HAUSA_NIGERIA_LATIN",
    "SUBLANG_HAWAIIAN_US",
    "SUBLANG_HEBREW_ISRAEL",
    "SUBLANG_HINDI_INDIA",
    "SUBLANG_HUNGARIAN_HUNGARY",
    "SUBLANG_ICELANDIC_ICELAND",
    "SUBLANG_IGBO_NIGERIA",
    "SUBLANG_INDONESIAN_INDONESIA",
    "SUBLANG_INUKTITUT_CANADA",
    "SUBLANG_INUKTITUT_CANADA_LATIN",
    "SUBLANG_IRISH_IRELAND",
    "SUBLANG_ITALIAN",
    "SUBLANG_ITALIAN_SWISS",
    "SUBLANG_JAPANESE_JAPAN",
    "SUBLANG_KANNADA_INDIA",
    "SUBLANG_KASHMIRI_SASIA",
    "SUBLANG_KASHMIRI_INDIA",
    "SUBLANG_KAZAK_KAZAKHSTAN",
    "SUBLANG_KHMER_CAMBODIA",
    "SUBLANG_KICHE_GUATEMALA",
    "SUBLANG_KINYARWANDA_RWANDA",
    "SUBLANG_KONKANI_INDIA",
    "SUBLANG_KOREAN",
    "SUBLANG_KYRGYZ_KYRGYZSTAN",
    "SUBLANG_LAO_LAO",
    "SUBLANG_LATVIAN_LATVIA",
    "SUBLANG_LITHUANIAN",
    "SUBLANG_LOWER_SORBIAN_GERMANY",
    "SUBLANG_LUXEMBOURGISH_LUXEMBOURG",
    "SUBLANG_MACEDONIAN_MACEDONIA",
    "SUBLANG_MALAY_MALAYSIA",
    "SUBLANG_MALAY_BRUNEI_DARUSSALAM",
    "SUBLANG_MALAYALAM_INDIA",
    "SUBLANG_MALTESE_MALTA",
    "SUBLANG_MAORI_NEW_ZEALAND",
    "SUBLANG_MAPUDUNGUN_CHILE",
    "SUBLANG_MARATHI_INDIA",
    "SUBLANG_MOHAWK_MOHAWK",
    "SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA",
    "SUBLANG_MONGOLIAN_PRC",
    "SUBLANG_NEPALI_INDIA",
    "SUBLANG_NEPALI_NEPAL",
    "SUBLANG_NORWEGIAN_BOKMAL",
    "SUBLANG_NORWEGIAN_NYNORSK",
    "SUBLANG_OCCITAN_FRANCE",
    "SUBLANG_ODIA_INDIA",
    "SUBLANG_ORIYA_INDIA",
    "SUBLANG_PASHTO_AFGHANISTAN",
    "SUBLANG_PERSIAN_IRAN",
    "SUBLANG_POLISH_POLAND",
    "SUBLANG_PORTUGUESE",
    "SUBLANG_PORTUGUESE_BRAZILIAN",
    "SUBLANG_PULAR_SENEGAL",
    "SUBLANG_PUNJABI_INDIA",
    "SUBLANG_PUNJABI_PAKISTAN",
    "SUBLANG_QUECHUA_BOLIVIA",
    "SUBLANG_QUECHUA_ECUADOR",
    "SUBLANG_QUECHUA_PERU",
    "SUBLANG_ROMANIAN_ROMANIA",
    "SUBLANG_ROMANSH_SWITZERLAND",
    "SUBLANG_RUSSIAN_RUSSIA",
    "SUBLANG_SAKHA_RUSSIA",
    "SUBLANG_SAMI_NORTHERN_NORWAY",
    "SUBLANG_SAMI_NORTHERN_SWEDEN",
    "SUBLANG_SAMI_NORTHERN_FINLAND",
    "SUBLANG_SAMI_LULE_NORWAY",
    "SUBLANG_SAMI_LULE_SWEDEN",
    "SUBLANG_SAMI_SOUTHERN_NORWAY",
    "SUBLANG_SAMI_SOUTHERN_SWEDEN",
    "SUBLANG_SAMI_SKOLT_FINLAND",
    "SUBLANG_SAMI_INARI_FINLAND",
    "SUBLANG_SANSKRIT_INDIA",
    "SUBLANG_SCOTTISH_GAELIC",
    "SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN",
    "SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC",
    "SUBLANG_SERBIAN_MONTENEGRO_LATIN",
    "SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC",
    "SUBLANG_SERBIAN_SERBIA_LATIN",
    "SUBLANG_SERBIAN_SERBIA_CYRILLIC",
    "SUBLANG_SERBIAN_CROATIA",
    "SUBLANG_SERBIAN_LATIN",
    "SUBLANG_SERBIAN_CYRILLIC",
    "SUBLANG_SINDHI_INDIA",
    "SUBLANG_SINDHI_PAKISTAN",
    "SUBLANG_SINDHI_AFGHANISTAN",
    "SUBLANG_SINHALESE_SRI_LANKA",
    "SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA",
    "SUBLANG_SLOVAK_SLOVAKIA",
    "SUBLANG_SLOVENIAN_SLOVENIA",
    "SUBLANG_SPANISH",
    "SUBLANG_SPANISH_MEXICAN",
    "SUBLANG_SPANISH_MODERN",
    "SUBLANG_SPANISH_GUATEMALA",
    "SUBLANG_SPANISH_COSTA_RICA",
    "SUBLANG_SPANISH_PANAMA",
    "SUBLANG_SPANISH_DOMINICAN_REPUBLIC",
    "SUBLANG_SPANISH_VENEZUELA",
    "SUBLANG_SPANISH_COLOMBIA",
    "SUBLANG_SPANISH_PERU",
    "SUBLANG_SPANISH_ARGENTINA",
    "SUBLANG_SPANISH_ECUADOR",
    "SUBLANG_SPANISH_CHILE",
    "SUBLANG_SPANISH_URUGUAY",
    "SUBLANG_SPANISH_PARAGUAY",
    "SUBLANG_SPANISH_BOLIVIA",
    "SUBLANG_SPANISH_EL_SALVADOR",
    "SUBLANG_SPANISH_HONDURAS",
    "SUBLANG_SPANISH_NICARAGUA",
    "SUBLANG_SPANISH_PUERTO_RICO",
    "SUBLANG_SPANISH_US",
    "SUBLANG_SWAHILI_KENYA",
    "SUBLANG_SWEDISH",
    "SUBLANG_SWEDISH_FINLAND",
    "SUBLANG_SYRIAC_SYRIA",
    "SUBLANG_TAJIK_TAJIKISTAN",
    "SUBLANG_TAMAZIGHT_ALGERIA_LATIN",
    "SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH",
    "SUBLANG_TAMIL_INDIA",
    "SUBLANG_TAMIL_SRI_LANKA",
    "SUBLANG_TATAR_RUSSIA",
    "SUBLANG_TELUGU_INDIA",
    "SUBLANG_THAI_THAILAND",
    "SUBLANG_TIBETAN_PRC",
    "SUBLANG_TIGRIGNA_ERITREA",
    "SUBLANG_TIGRINYA_ERITREA",
    "SUBLANG_TIGRINYA_ETHIOPIA",
    "SUBLANG_TSWANA_BOTSWANA",
    "SUBLANG_TSWANA_SOUTH_AFRICA",
    "SUBLANG_TURKISH_TURKEY",
    "SUBLANG_TURKMEN_TURKMENISTAN",
    "SUBLANG_UIGHUR_PRC",
    "SUBLANG_UKRAINIAN_UKRAINE",
    "SUBLANG_UPPER_SORBIAN_GERMANY",
    "SUBLANG_URDU_PAKISTAN",
    "SUBLANG_URDU_INDIA",
    "SUBLANG_UZBEK_LATIN",
    "SUBLANG_UZBEK_CYRILLIC",
    "SUBLANG_VALENCIAN_VALENCIA",
    "SUBLANG_VIETNAMESE_VIETNAM",
    "SUBLANG_WELSH_UNITED_KINGDOM",
    "SUBLANG_WOLOF_SENEGAL",
    "SUBLANG_XHOSA_SOUTH_AFRICA",
    "SUBLANG_YAKUT_RUSSIA",
    "SUBLANG_YI_PRC",
    "SUBLANG_YORUBA_NIGERIA",
    "SUBLANG_ZULU_SOUTH_AFRICA",
    "SORT_DEFAULT",
    "SORT_INVARIANT_MATH",
    "SORT_JAPANESE_XJIS",
    "SORT_JAPANESE_UNICODE",
    "SORT_JAPANESE_RADICALSTROKE",
    "SORT_CHINESE_BIG5",
    "SORT_CHINESE_PRCP",
    "SORT_CHINESE_UNICODE",
    "SORT_CHINESE_PRC",
    "SORT_CHINESE_BOPOMOFO",
    "SORT_CHINESE_RADICALSTROKE",
    "SORT_KOREAN_KSC",
    "SORT_KOREAN_UNICODE",
    "SORT_GERMAN_PHONE_BOOK",
    "SORT_HUNGARIAN_DEFAULT",
    "SORT_HUNGARIAN_TECHNICAL",
    "SORT_GEORGIAN_TRADITIONAL",
    "SORT_GEORGIAN_MODERN",
    "NLS_VALID_LOCALE_MASK",
    "LOCALE_NAME_MAX_LENGTH",
    "LOCALE_TRANSIENT_KEYBOARD1",
    "LOCALE_TRANSIENT_KEYBOARD2",
    "LOCALE_TRANSIENT_KEYBOARD3",
    "LOCALE_TRANSIENT_KEYBOARD4",
    "MAXIMUM_WAIT_OBJECTS",
    "MAXIMUM_SUSPEND_COUNT",
    "PF_TEMPORAL_LEVEL_1",
    "PF_TEMPORAL_LEVEL_2",
    "PF_TEMPORAL_LEVEL_3",
    "PF_NON_TEMPORAL_LEVEL_ALL",
    "EXCEPTION_READ_FAULT",
    "EXCEPTION_WRITE_FAULT",
    "EXCEPTION_EXECUTE_FAULT",
    "CONTEXT_AMD64",
    "CONTEXT_KERNEL_DEBUGGER",
    "CONTEXT_EXCEPTION_ACTIVE",
    "CONTEXT_SERVICE_ACTIVE",
    "CONTEXT_EXCEPTION_REQUEST",
    "CONTEXT_EXCEPTION_REPORTING",
    "CONTEXT_UNWOUND_TO_CALL",
    "INITIAL_MXCSR",
    "INITIAL_FPCSR",
    "RUNTIME_FUNCTION_INDIRECT",
    "UNW_FLAG_NO_EPILOGUE",
    "UNWIND_CHAIN_LIMIT",
    "CONTEXT_ARM",
    "INITIAL_CPSR",
    "INITIAL_FPSCR",
    "ARM_MAX_BREAKPOINTS",
    "ARM_MAX_WATCHPOINTS",
    "ARM64_PREFETCH_PLD",
    "ARM64_PREFETCH_PLI",
    "ARM64_PREFETCH_PST",
    "ARM64_PREFETCH_L1",
    "ARM64_PREFETCH_L2",
    "ARM64_PREFETCH_L3",
    "ARM64_PREFETCH_KEEP",
    "ARM64_PREFETCH_STRM",
    "ARM64_MULT_INTRINSICS_SUPPORTED",
    "CONTEXT_ARM64",
    "CONTEXT_ARM64_UNWOUND_TO_CALL",
    "CONTEXT_ARM64_RET_TO_GUEST",
    "CONTEXT_RET_TO_GUEST",
    "ARM64_MAX_BREAKPOINTS",
    "ARM64_MAX_WATCHPOINTS",
    "NONVOL_INT_NUMREG_ARM64",
    "NONVOL_FP_NUMREG_ARM64",
    "BREAK_DEBUG_BASE",
    "ASSERT_BREAKPOINT",
    "SIZE_OF_80387_REGISTERS",
    "CONTEXT_i386",
    "CONTEXT_i486",
    "MAXIMUM_SUPPORTED_EXTENSION",
    "EXCEPTION_NONCONTINUABLE",
    "EXCEPTION_UNWINDING",
    "EXCEPTION_EXIT_UNWIND",
    "EXCEPTION_STACK_INVALID",
    "EXCEPTION_NESTED_CALL",
    "EXCEPTION_TARGET_UNWIND",
    "EXCEPTION_COLLIDED_UNWIND",
    "EXCEPTION_SOFTWARE_ORIGINATE",
    "EXCEPTION_MAXIMUM_PARAMETERS",
    "DELETE",
    "WRITE_DAC",
    "WRITE_OWNER",
    "ACCESS_SYSTEM_SECURITY",
    "MAXIMUM_ALLOWED",
    "GENERIC_READ",
    "GENERIC_WRITE",
    "GENERIC_EXECUTE",
    "GENERIC_ALL",
    "SID_REVISION",
    "SID_MAX_SUB_AUTHORITIES",
    "SID_RECOMMENDED_SUB_AUTHORITIES",
    "SID_HASH_SIZE",
    "SECURITY_NULL_RID",
    "SECURITY_WORLD_RID",
    "SECURITY_LOCAL_RID",
    "SECURITY_LOCAL_LOGON_RID",
    "SECURITY_CREATOR_OWNER_RID",
    "SECURITY_CREATOR_GROUP_RID",
    "SECURITY_CREATOR_OWNER_SERVER_RID",
    "SECURITY_CREATOR_GROUP_SERVER_RID",
    "SECURITY_CREATOR_OWNER_RIGHTS_RID",
    "SECURITY_DIALUP_RID",
    "SECURITY_NETWORK_RID",
    "SECURITY_BATCH_RID",
    "SECURITY_INTERACTIVE_RID",
    "SECURITY_LOGON_IDS_RID",
    "SECURITY_LOGON_IDS_RID_COUNT",
    "SECURITY_SERVICE_RID",
    "SECURITY_ANONYMOUS_LOGON_RID",
    "SECURITY_PROXY_RID",
    "SECURITY_ENTERPRISE_CONTROLLERS_RID",
    "SECURITY_SERVER_LOGON_RID",
    "SECURITY_PRINCIPAL_SELF_RID",
    "SECURITY_AUTHENTICATED_USER_RID",
    "SECURITY_RESTRICTED_CODE_RID",
    "SECURITY_TERMINAL_SERVER_RID",
    "SECURITY_REMOTE_LOGON_RID",
    "SECURITY_THIS_ORGANIZATION_RID",
    "SECURITY_IUSER_RID",
    "SECURITY_LOCAL_SYSTEM_RID",
    "SECURITY_LOCAL_SERVICE_RID",
    "SECURITY_NETWORK_SERVICE_RID",
    "SECURITY_NT_NON_UNIQUE",
    "SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT",
    "SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID",
    "SECURITY_BUILTIN_DOMAIN_RID",
    "SECURITY_WRITE_RESTRICTED_CODE_RID",
    "SECURITY_PACKAGE_BASE_RID",
    "SECURITY_PACKAGE_RID_COUNT",
    "SECURITY_PACKAGE_NTLM_RID",
    "SECURITY_PACKAGE_SCHANNEL_RID",
    "SECURITY_PACKAGE_DIGEST_RID",
    "SECURITY_CRED_TYPE_BASE_RID",
    "SECURITY_CRED_TYPE_RID_COUNT",
    "SECURITY_CRED_TYPE_THIS_ORG_CERT_RID",
    "SECURITY_MIN_BASE_RID",
    "SECURITY_SERVICE_ID_BASE_RID",
    "SECURITY_SERVICE_ID_RID_COUNT",
    "SECURITY_RESERVED_ID_BASE_RID",
    "SECURITY_APPPOOL_ID_BASE_RID",
    "SECURITY_APPPOOL_ID_RID_COUNT",
    "SECURITY_VIRTUALSERVER_ID_BASE_RID",
    "SECURITY_VIRTUALSERVER_ID_RID_COUNT",
    "SECURITY_USERMODEDRIVERHOST_ID_BASE_RID",
    "SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT",
    "SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID",
    "SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT",
    "SECURITY_WMIHOST_ID_BASE_RID",
    "SECURITY_WMIHOST_ID_RID_COUNT",
    "SECURITY_TASK_ID_BASE_RID",
    "SECURITY_NFS_ID_BASE_RID",
    "SECURITY_COM_ID_BASE_RID",
    "SECURITY_WINDOW_MANAGER_BASE_RID",
    "SECURITY_RDV_GFX_BASE_RID",
    "SECURITY_DASHOST_ID_BASE_RID",
    "SECURITY_DASHOST_ID_RID_COUNT",
    "SECURITY_USERMANAGER_ID_BASE_RID",
    "SECURITY_USERMANAGER_ID_RID_COUNT",
    "SECURITY_WINRM_ID_BASE_RID",
    "SECURITY_WINRM_ID_RID_COUNT",
    "SECURITY_CCG_ID_BASE_RID",
    "SECURITY_UMFD_BASE_RID",
    "SECURITY_VIRTUALACCOUNT_ID_RID_COUNT",
    "SECURITY_MAX_BASE_RID",
    "SECURITY_MAX_ALWAYS_FILTERED",
    "SECURITY_MIN_NEVER_FILTERED",
    "SECURITY_OTHER_ORGANIZATION_RID",
    "SECURITY_WINDOWSMOBILE_ID_BASE_RID",
    "SECURITY_INSTALLER_GROUP_CAPABILITY_BASE",
    "SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT",
    "SECURITY_INSTALLER_CAPABILITY_RID_COUNT",
    "SECURITY_LOCAL_ACCOUNT_RID",
    "SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID",
    "DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED",
    "DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS",
    "DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS",
    "FOREST_USER_RID_MAX",
    "DOMAIN_USER_RID_ADMIN",
    "DOMAIN_USER_RID_GUEST",
    "DOMAIN_USER_RID_KRBTGT",
    "DOMAIN_USER_RID_DEFAULT_ACCOUNT",
    "DOMAIN_USER_RID_WDAG_ACCOUNT",
    "DOMAIN_USER_RID_MAX",
    "DOMAIN_GROUP_RID_ADMINS",
    "DOMAIN_GROUP_RID_USERS",
    "DOMAIN_GROUP_RID_GUESTS",
    "DOMAIN_GROUP_RID_COMPUTERS",
    "DOMAIN_GROUP_RID_CONTROLLERS",
    "DOMAIN_GROUP_RID_CERT_ADMINS",
    "DOMAIN_GROUP_RID_SCHEMA_ADMINS",
    "DOMAIN_GROUP_RID_ENTERPRISE_ADMINS",
    "DOMAIN_GROUP_RID_POLICY_ADMINS",
    "DOMAIN_GROUP_RID_READONLY_CONTROLLERS",
    "DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS",
    "DOMAIN_GROUP_RID_CDC_RESERVED",
    "DOMAIN_GROUP_RID_PROTECTED_USERS",
    "DOMAIN_GROUP_RID_KEY_ADMINS",
    "DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS",
    "DOMAIN_ALIAS_RID_ADMINS",
    "DOMAIN_ALIAS_RID_USERS",
    "DOMAIN_ALIAS_RID_GUESTS",
    "DOMAIN_ALIAS_RID_POWER_USERS",
    "DOMAIN_ALIAS_RID_ACCOUNT_OPS",
    "DOMAIN_ALIAS_RID_SYSTEM_OPS",
    "DOMAIN_ALIAS_RID_PRINT_OPS",
    "DOMAIN_ALIAS_RID_BACKUP_OPS",
    "DOMAIN_ALIAS_RID_REPLICATOR",
    "DOMAIN_ALIAS_RID_RAS_SERVERS",
    "DOMAIN_ALIAS_RID_PREW2KCOMPACCESS",
    "DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS",
    "DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS",
    "DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS",
    "DOMAIN_ALIAS_RID_MONITORING_USERS",
    "DOMAIN_ALIAS_RID_LOGGING_USERS",
    "DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS",
    "DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS",
    "DOMAIN_ALIAS_RID_DCOM_USERS",
    "DOMAIN_ALIAS_RID_IUSERS",
    "DOMAIN_ALIAS_RID_CRYPTO_OPERATORS",
    "DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP",
    "DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP",
    "DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP",
    "DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP",
    "DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS",
    "DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS",
    "DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS",
    "DOMAIN_ALIAS_RID_HYPER_V_ADMINS",
    "DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS",
    "DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS",
    "DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT",
    "DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS",
    "DOMAIN_ALIAS_RID_DEVICE_OWNERS",
    "SECURITY_APP_PACKAGE_BASE_RID",
    "SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT",
    "SECURITY_APP_PACKAGE_RID_COUNT",
    "SECURITY_CAPABILITY_BASE_RID",
    "SECURITY_CAPABILITY_APP_RID",
    "SECURITY_BUILTIN_CAPABILITY_RID_COUNT",
    "SECURITY_CAPABILITY_RID_COUNT",
    "SECURITY_PARENT_PACKAGE_RID_COUNT",
    "SECURITY_CHILD_PACKAGE_RID_COUNT",
    "SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE",
    "SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE",
    "SECURITY_CAPABILITY_INTERNET_CLIENT",
    "SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER",
    "SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER",
    "SECURITY_CAPABILITY_PICTURES_LIBRARY",
    "SECURITY_CAPABILITY_VIDEOS_LIBRARY",
    "SECURITY_CAPABILITY_MUSIC_LIBRARY",
    "SECURITY_CAPABILITY_DOCUMENTS_LIBRARY",
    "SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION",
    "SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES",
    "SECURITY_CAPABILITY_REMOVABLE_STORAGE",
    "SECURITY_CAPABILITY_APPOINTMENTS",
    "SECURITY_CAPABILITY_CONTACTS",
    "SECURITY_CAPABILITY_INTERNET_EXPLORER",
    "SECURITY_MANDATORY_UNTRUSTED_RID",
    "SECURITY_MANDATORY_LOW_RID",
    "SECURITY_MANDATORY_MEDIUM_RID",
    "SECURITY_MANDATORY_MEDIUM_PLUS_RID",
    "SECURITY_MANDATORY_HIGH_RID",
    "SECURITY_MANDATORY_SYSTEM_RID",
    "SECURITY_MANDATORY_PROTECTED_PROCESS_RID",
    "SECURITY_MANDATORY_MAXIMUM_USER_RID",
    "SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT",
    "SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID",
    "SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID",
    "SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID",
    "SECURITY_AUTHENTICATION_KEY_TRUST_RID",
    "SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID",
    "SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID",
    "SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT",
    "SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID",
    "SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID",
    "SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID",
    "SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID",
    "SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID",
    "SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID",
    "SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID",
    "SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID",
    "SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID",
    "SECURITY_TRUSTED_INSTALLER_RID1",
    "SECURITY_TRUSTED_INSTALLER_RID2",
    "SECURITY_TRUSTED_INSTALLER_RID3",
    "SECURITY_TRUSTED_INSTALLER_RID4",
    "SECURITY_TRUSTED_INSTALLER_RID5",
    "SE_GROUP_MANDATORY",
    "SE_GROUP_ENABLED_BY_DEFAULT",
    "SE_GROUP_ENABLED",
    "SE_GROUP_OWNER",
    "SE_GROUP_USE_FOR_DENY_ONLY",
    "SE_GROUP_INTEGRITY",
    "SE_GROUP_INTEGRITY_ENABLED",
    "SE_GROUP_LOGON_ID",
    "SE_GROUP_RESOURCE",
    "ACL_REVISION1",
    "ACL_REVISION2",
    "ACL_REVISION3",
    "ACL_REVISION4",
    "MAX_ACL_REVISION",
    "ACCESS_MIN_MS_ACE_TYPE",
    "ACCESS_ALLOWED_ACE_TYPE",
    "ACCESS_DENIED_ACE_TYPE",
    "SYSTEM_AUDIT_ACE_TYPE",
    "SYSTEM_ALARM_ACE_TYPE",
    "ACCESS_MAX_MS_V2_ACE_TYPE",
    "ACCESS_ALLOWED_COMPOUND_ACE_TYPE",
    "ACCESS_MAX_MS_V3_ACE_TYPE",
    "ACCESS_MIN_MS_OBJECT_ACE_TYPE",
    "ACCESS_ALLOWED_OBJECT_ACE_TYPE",
    "ACCESS_DENIED_OBJECT_ACE_TYPE",
    "SYSTEM_AUDIT_OBJECT_ACE_TYPE",
    "SYSTEM_ALARM_OBJECT_ACE_TYPE",
    "ACCESS_MAX_MS_OBJECT_ACE_TYPE",
    "ACCESS_MAX_MS_V4_ACE_TYPE",
    "ACCESS_MAX_MS_ACE_TYPE",
    "ACCESS_ALLOWED_CALLBACK_ACE_TYPE",
    "ACCESS_DENIED_CALLBACK_ACE_TYPE",
    "ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE",
    "ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE",
    "SYSTEM_AUDIT_CALLBACK_ACE_TYPE",
    "SYSTEM_ALARM_CALLBACK_ACE_TYPE",
    "SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE",
    "SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE",
    "SYSTEM_MANDATORY_LABEL_ACE_TYPE",
    "SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE",
    "SYSTEM_SCOPED_POLICY_ID_ACE_TYPE",
    "SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE",
    "SYSTEM_ACCESS_FILTER_ACE_TYPE",
    "ACCESS_MAX_MS_V5_ACE_TYPE",
    "VALID_INHERIT_FLAGS",
    "CRITICAL_ACE_FLAG",
    "TRUST_PROTECTED_FILTER_ACE_FLAG",
    "SYSTEM_MANDATORY_LABEL_NO_WRITE_UP",
    "SYSTEM_MANDATORY_LABEL_NO_READ_UP",
    "SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP",
    "SYSTEM_PROCESS_TRUST_LABEL_VALID_MASK",
    "SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK",
    "SYSTEM_ACCESS_FILTER_VALID_MASK",
    "SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK",
    "SECURITY_DESCRIPTOR_REVISION",
    "SECURITY_DESCRIPTOR_REVISION1",
    "SE_OWNER_DEFAULTED",
    "SE_GROUP_DEFAULTED",
    "SE_DACL_PRESENT",
    "SE_DACL_DEFAULTED",
    "SE_SACL_PRESENT",
    "SE_SACL_DEFAULTED",
    "SE_DACL_AUTO_INHERIT_REQ",
    "SE_SACL_AUTO_INHERIT_REQ",
    "SE_DACL_AUTO_INHERITED",
    "SE_SACL_AUTO_INHERITED",
    "SE_DACL_PROTECTED",
    "SE_SACL_PROTECTED",
    "SE_RM_CONTROL_VALID",
    "SE_SELF_RELATIVE",
    "ACCESS_OBJECT_GUID",
    "ACCESS_PROPERTY_SET_GUID",
    "ACCESS_PROPERTY_GUID",
    "ACCESS_MAX_LEVEL",
    "AUDIT_ALLOW_NO_PRIVILEGE",
    "PRIVILEGE_SET_ALL_NECESSARY",
    "ACCESS_REASON_TYPE_MASK",
    "ACCESS_REASON_DATA_MASK",
    "ACCESS_REASON_STAGING_MASK",
    "ACCESS_REASON_EXDATA_MASK",
    "SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE",
    "SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE",
    "SE_SECURITY_DESCRIPTOR_FLAG_NO_ACCESS_FILTER_ACE",
    "SE_SECURITY_DESCRIPTOR_VALID_FLAGS",
    "SE_ACCESS_CHECK_FLAG_NO_LEARNING_MODE_LOGGING",
    "SE_ACCESS_CHECK_VALID_FLAGS",
    "POLICY_AUDIT_SUBCATEGORY_COUNT",
    "TOKEN_SOURCE_LENGTH",
    "CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID",
    "CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS",
    "CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1",
    "CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION",
    "PROCESS_TRUST_LABEL_SECURITY_INFORMATION",
    "ACCESS_FILTER_SECURITY_INFORMATION",
    "SE_SIGNING_LEVEL_UNCHECKED",
    "SE_SIGNING_LEVEL_UNSIGNED",
    "SE_SIGNING_LEVEL_ENTERPRISE",
    "SE_SIGNING_LEVEL_CUSTOM_1",
    "SE_SIGNING_LEVEL_DEVELOPER",
    "SE_SIGNING_LEVEL_AUTHENTICODE",
    "SE_SIGNING_LEVEL_CUSTOM_2",
    "SE_SIGNING_LEVEL_STORE",
    "SE_SIGNING_LEVEL_CUSTOM_3",
    "SE_SIGNING_LEVEL_ANTIMALWARE",
    "SE_SIGNING_LEVEL_MICROSOFT",
    "SE_SIGNING_LEVEL_CUSTOM_4",
    "SE_SIGNING_LEVEL_CUSTOM_5",
    "SE_SIGNING_LEVEL_DYNAMIC_CODEGEN",
    "SE_SIGNING_LEVEL_WINDOWS",
    "SE_SIGNING_LEVEL_CUSTOM_7",
    "SE_SIGNING_LEVEL_WINDOWS_TCB",
    "SE_SIGNING_LEVEL_CUSTOM_6",
    "SE_LEARNING_MODE_FLAG_PERMISSIVE",
    "JOB_OBJECT_ASSIGN_PROCESS",
    "JOB_OBJECT_SET_ATTRIBUTES",
    "JOB_OBJECT_QUERY",
    "JOB_OBJECT_TERMINATE",
    "JOB_OBJECT_SET_SECURITY_ATTRIBUTES",
    "JOB_OBJECT_IMPERSONATE",
    "FLS_MAXIMUM_AVAILABLE",
    "TLS_MINIMUM_AVAILABLE",
    "THREAD_DYNAMIC_CODE_ALLOW",
    "THREAD_BASE_PRIORITY_LOWRT",
    "THREAD_BASE_PRIORITY_MAX",
    "THREAD_BASE_PRIORITY_MIN",
    "THREAD_BASE_PRIORITY_IDLE",
    "COMPONENT_KTM",
    "COMPONENT_VALID_FLAGS",
    "MEMORY_PRIORITY_LOWEST",
    "DYNAMIC_EH_CONTINUATION_TARGET_ADD",
    "DYNAMIC_EH_CONTINUATION_TARGET_PROCESSED",
    "DYNAMIC_ENFORCED_ADDRESS_RANGE_ADD",
    "DYNAMIC_ENFORCED_ADDRESS_RANGE_PROCESSED",
    "QUOTA_LIMITS_HARDWS_MIN_ENABLE",
    "QUOTA_LIMITS_HARDWS_MIN_DISABLE",
    "QUOTA_LIMITS_HARDWS_MAX_ENABLE",
    "QUOTA_LIMITS_HARDWS_MAX_DISABLE",
    "QUOTA_LIMITS_USE_DEFAULT_LIMITS",
    "MAX_HW_COUNTERS",
    "THREAD_PROFILING_FLAG_DISPATCH",
    "JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG",
    "JOB_OBJECT_MSG_END_OF_JOB_TIME",
    "JOB_OBJECT_MSG_END_OF_PROCESS_TIME",
    "JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT",
    "JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO",
    "JOB_OBJECT_MSG_NEW_PROCESS",
    "JOB_OBJECT_MSG_EXIT_PROCESS",
    "JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS",
    "JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT",
    "JOB_OBJECT_MSG_JOB_MEMORY_LIMIT",
    "JOB_OBJECT_MSG_NOTIFICATION_LIMIT",
    "JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT",
    "JOB_OBJECT_MSG_SILO_TERMINATED",
    "JOB_OBJECT_MSG_MINIMUM",
    "JOB_OBJECT_MSG_MAXIMUM",
    "JOB_OBJECT_UILIMIT_ALL",
    "JOB_OBJECT_UI_VALID_FLAGS",
    "JOB_OBJECT_CPU_RATE_CONTROL_MIN_MAX_RATE",
    "JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS",
    "MEMORY_PARTITION_QUERY_ACCESS",
    "MEMORY_PARTITION_MODIFY_ACCESS",
    "EVENT_MODIFY_STATE",
    "MUTANT_QUERY_STATE",
    "SEMAPHORE_MODIFY_STATE",
    "TIMER_QUERY_STATE",
    "TIMER_MODIFY_STATE",
    "TIME_ZONE_ID_UNKNOWN",
    "TIME_ZONE_ID_STANDARD",
    "TIME_ZONE_ID_DAYLIGHT",
    "LTP_PC_SMT",
    "CACHE_FULLY_ASSOCIATIVE",
    "PROCESSOR_INTEL_386",
    "PROCESSOR_INTEL_486",
    "PROCESSOR_INTEL_PENTIUM",
    "PROCESSOR_INTEL_IA64",
    "PROCESSOR_AMD_X8664",
    "PROCESSOR_MIPS_R4000",
    "PROCESSOR_ALPHA_21064",
    "PROCESSOR_PPC_601",
    "PROCESSOR_PPC_603",
    "PROCESSOR_PPC_604",
    "PROCESSOR_PPC_620",
    "PROCESSOR_HITACHI_SH3",
    "PROCESSOR_HITACHI_SH3E",
    "PROCESSOR_HITACHI_SH4",
    "PROCESSOR_MOTOROLA_821",
    "PROCESSOR_SHx_SH3",
    "PROCESSOR_SHx_SH4",
    "PROCESSOR_STRONGARM",
    "PROCESSOR_ARM720",
    "PROCESSOR_ARM820",
    "PROCESSOR_ARM920",
    "PROCESSOR_ARM_7TDMI",
    "PROCESSOR_OPTIL",
    "PROCESSOR_ARCHITECTURE_MIPS",
    "PROCESSOR_ARCHITECTURE_ALPHA",
    "PROCESSOR_ARCHITECTURE_PPC",
    "PROCESSOR_ARCHITECTURE_SHX",
    "PROCESSOR_ARCHITECTURE_ALPHA64",
    "PROCESSOR_ARCHITECTURE_MSIL",
    "PROCESSOR_ARCHITECTURE_IA32_ON_WIN64",
    "PROCESSOR_ARCHITECTURE_NEUTRAL",
    "PROCESSOR_ARCHITECTURE_ARM64",
    "PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64",
    "PROCESSOR_ARCHITECTURE_IA32_ON_ARM64",
    "PF_PPC_MOVEMEM_64BIT_OK",
    "PF_ALPHA_BYTE_INSTRUCTIONS",
    "PF_SSE_DAZ_MODE_AVAILABLE",
    "PF_ARM_NEON_INSTRUCTIONS_AVAILABLE",
    "PF_RDRAND_INSTRUCTION_AVAILABLE",
    "PF_RDTSCP_INSTRUCTION_AVAILABLE",
    "PF_RDPID_INSTRUCTION_AVAILABLE",
    "PF_MONITORX_INSTRUCTION_AVAILABLE",
    "PF_SSSE3_INSTRUCTIONS_AVAILABLE",
    "PF_SSE4_1_INSTRUCTIONS_AVAILABLE",
    "PF_SSE4_2_INSTRUCTIONS_AVAILABLE",
    "PF_AVX_INSTRUCTIONS_AVAILABLE",
    "PF_AVX2_INSTRUCTIONS_AVAILABLE",
    "PF_AVX512F_INSTRUCTIONS_AVAILABLE",
    "PF_ERMS_AVAILABLE",
    "PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE",
    "PF_ARM_V83_JSCVT_INSTRUCTIONS_AVAILABLE",
    "XSTATE_LEGACY_FLOATING_POINT",
    "XSTATE_LEGACY_SSE",
    "XSTATE_GSSE",
    "XSTATE_AVX",
    "XSTATE_MPX_BNDREGS",
    "XSTATE_MPX_BNDCSR",
    "XSTATE_AVX512_KMASK",
    "XSTATE_AVX512_ZMM_H",
    "XSTATE_AVX512_ZMM",
    "XSTATE_IPT",
    "XSTATE_PASID",
    "XSTATE_CET_U",
    "XSTATE_CET_S",
    "XSTATE_AMX_TILE_CONFIG",
    "XSTATE_AMX_TILE_DATA",
    "XSTATE_LWP",
    "MAXIMUM_XSTATE_FEATURES",
    "XSTATE_COMPACTION_ENABLE",
    "XSTATE_ALIGN_BIT",
    "XSTATE_XFD_BIT",
    "XSTATE_CONTROLFLAG_XSAVEOPT_MASK",
    "XSTATE_CONTROLFLAG_XSAVEC_MASK",
    "XSTATE_CONTROLFLAG_XFD_MASK",
    "CFG_CALL_TARGET_VALID",
    "CFG_CALL_TARGET_PROCESSED",
    "CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID",
    "CFG_CALL_TARGET_VALID_XFG",
    "CFG_CALL_TARGET_CONVERT_XFG_TO_CFG",
    "SESSION_QUERY_ACCESS",
    "SESSION_MODIFY_ACCESS",
    "MEM_TOP_DOWN",
    "MEM_WRITE_WATCH",
    "MEM_PHYSICAL",
    "MEM_ROTATE",
    "MEM_DIFFERENT_IMAGE_BASE_OK",
    "MEM_4MB_PAGES",
    "MEM_COALESCE_PLACEHOLDERS",
    "MEM_EXTENDED_PARAMETER_GRAPHICS",
    "MEM_EXTENDED_PARAMETER_NONPAGED",
    "MEM_EXTENDED_PARAMETER_ZERO_PAGES_OPTIONAL",
    "MEM_EXTENDED_PARAMETER_NONPAGED_LARGE",
    "MEM_EXTENDED_PARAMETER_NONPAGED_HUGE",
    "MEM_EXTENDED_PARAMETER_SOFT_FAULT_PAGES",
    "MEM_EXTENDED_PARAMETER_EC_CODE",
    "MEM_EXTENDED_PARAMETER_TYPE_BITS",
    "SEC_HUGE_PAGES",
    "WRITE_WATCH_FLAG_RESET",
    "ENCLAVE_TYPE_SGX",
    "ENCLAVE_TYPE_SGX2",
    "ENCLAVE_TYPE_VBS",
    "ENCLAVE_VBS_FLAG_DEBUG",
    "ENCLAVE_TYPE_VBS_BASIC",
    "VBS_BASIC_PAGE_MEASURED_DATA",
    "VBS_BASIC_PAGE_UNMEASURED_DATA",
    "VBS_BASIC_PAGE_ZERO_FILL",
    "VBS_BASIC_PAGE_THREAD_DESCRIPTOR",
    "VBS_BASIC_PAGE_SYSTEM_CALL",
    "DEDICATED_MEMORY_CACHE_ELIGIBLE",
    "TREE_CONNECT_ATTRIBUTE_PRIVACY",
    "TREE_CONNECT_ATTRIBUTE_INTEGRITY",
    "TREE_CONNECT_ATTRIBUTE_GLOBAL",
    "TREE_CONNECT_ATTRIBUTE_PINNED",
    "FILE_ATTRIBUTE_STRICTLY_SEQUENTIAL",
    "MAILSLOT_NO_MESSAGE",
    "MAILSLOT_WAIT_FOREVER",
    "FILE_CASE_SENSITIVE_SEARCH",
    "FILE_CASE_PRESERVED_NAMES",
    "FILE_UNICODE_ON_DISK",
    "FILE_PERSISTENT_ACLS",
    "FILE_FILE_COMPRESSION",
    "FILE_VOLUME_QUOTAS",
    "FILE_SUPPORTS_SPARSE_FILES",
    "FILE_SUPPORTS_REPARSE_POINTS",
    "FILE_SUPPORTS_REMOTE_STORAGE",
    "FILE_RETURNS_CLEANUP_RESULT_INFO",
    "FILE_SUPPORTS_POSIX_UNLINK_RENAME",
    "FILE_SUPPORTS_BYPASS_IO",
    "FILE_VOLUME_IS_COMPRESSED",
    "FILE_SUPPORTS_OBJECT_IDS",
    "FILE_SUPPORTS_ENCRYPTION",
    "FILE_NAMED_STREAMS",
    "FILE_READ_ONLY_VOLUME",
    "FILE_SEQUENTIAL_WRITE_ONCE",
    "FILE_SUPPORTS_TRANSACTIONS",
    "FILE_SUPPORTS_HARD_LINKS",
    "FILE_SUPPORTS_EXTENDED_ATTRIBUTES",
    "FILE_SUPPORTS_OPEN_BY_FILE_ID",
    "FILE_SUPPORTS_USN_JOURNAL",
    "FILE_SUPPORTS_INTEGRITY_STREAMS",
    "FILE_SUPPORTS_BLOCK_REFCOUNTING",
    "FILE_SUPPORTS_SPARSE_VDL",
    "FILE_DAX_VOLUME",
    "FILE_SUPPORTS_GHOSTING",
    "FILE_CS_FLAG_CASE_SENSITIVE_DIR",
    "FLUSH_FLAGS_FILE_DATA_ONLY",
    "FLUSH_FLAGS_NO_SYNC",
    "FLUSH_FLAGS_FILE_DATA_SYNC_ONLY",
    "IO_REPARSE_TAG_RESERVED_ZERO",
    "IO_REPARSE_TAG_RESERVED_ONE",
    "IO_REPARSE_TAG_RESERVED_TWO",
    "IO_REPARSE_TAG_RESERVED_RANGE",
    "IO_REPARSE_TAG_MOUNT_POINT",
    "IO_REPARSE_TAG_HSM",
    "IO_REPARSE_TAG_HSM2",
    "IO_REPARSE_TAG_SIS",
    "IO_REPARSE_TAG_WIM",
    "IO_REPARSE_TAG_CSV",
    "IO_REPARSE_TAG_DFS",
    "IO_REPARSE_TAG_SYMLINK",
    "IO_REPARSE_TAG_DFSR",
    "IO_REPARSE_TAG_DEDUP",
    "IO_REPARSE_TAG_NFS",
    "IO_REPARSE_TAG_FILE_PLACEHOLDER",
    "IO_REPARSE_TAG_WOF",
    "IO_REPARSE_TAG_WCI",
    "IO_REPARSE_TAG_WCI_1",
    "IO_REPARSE_TAG_GLOBAL_REPARSE",
    "IO_REPARSE_TAG_CLOUD",
    "IO_REPARSE_TAG_CLOUD_1",
    "IO_REPARSE_TAG_CLOUD_2",
    "IO_REPARSE_TAG_CLOUD_3",
    "IO_REPARSE_TAG_CLOUD_4",
    "IO_REPARSE_TAG_CLOUD_5",
    "IO_REPARSE_TAG_CLOUD_6",
    "IO_REPARSE_TAG_CLOUD_7",
    "IO_REPARSE_TAG_CLOUD_8",
    "IO_REPARSE_TAG_CLOUD_9",
    "IO_REPARSE_TAG_CLOUD_A",
    "IO_REPARSE_TAG_CLOUD_B",
    "IO_REPARSE_TAG_CLOUD_C",
    "IO_REPARSE_TAG_CLOUD_D",
    "IO_REPARSE_TAG_CLOUD_E",
    "IO_REPARSE_TAG_CLOUD_F",
    "IO_REPARSE_TAG_CLOUD_MASK",
    "IO_REPARSE_TAG_APPEXECLINK",
    "IO_REPARSE_TAG_PROJFS",
    "IO_REPARSE_TAG_STORAGE_SYNC",
    "IO_REPARSE_TAG_WCI_TOMBSTONE",
    "IO_REPARSE_TAG_UNHANDLED",
    "IO_REPARSE_TAG_ONEDRIVE",
    "IO_REPARSE_TAG_PROJFS_TOMBSTONE",
    "IO_REPARSE_TAG_AF_UNIX",
    "IO_REPARSE_TAG_WCI_LINK",
    "IO_REPARSE_TAG_WCI_LINK_1",
    "IO_REPARSE_TAG_DATALESS_CIM",
    "SCRUB_DATA_INPUT_FLAG_RESUME",
    "SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC",
    "SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA",
    "SCRUB_DATA_INPUT_FLAG_IGNORE_REDUNDANCY",
    "SCRUB_DATA_INPUT_FLAG_SKIP_DATA",
    "SCRUB_DATA_INPUT_FLAG_SCRUB_BY_OBJECT_ID",
    "SCRUB_DATA_INPUT_FLAG_OPLOCK_NOT_ACQUIRED",
    "SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE",
    "SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE",
    "SCRUB_DATA_OUTPUT_FLAG_PARITY_EXTENT_DATA_RETURNED",
    "SCRUB_DATA_OUTPUT_FLAG_RESUME_CONTEXT_LENGTH_SPECIFIED",
    "SHUFFLE_FILE_FLAG_SKIP_INITIALIZING_NEW_CLUSTERS",
    "IO_COMPLETION_MODIFY_STATE",
    "NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR",
    "GUID_MAX_POWER_SAVINGS",
    "GUID_MIN_POWER_SAVINGS",
    "GUID_TYPICAL_POWER_SAVINGS",
    "NO_SUBGROUP_GUID",
    "ALL_POWERSCHEMES_GUID",
    "GUID_POWERSCHEME_PERSONALITY",
    "GUID_ACTIVE_POWERSCHEME",
    "GUID_IDLE_RESILIENCY_SUBGROUP",
    "GUID_IDLE_RESILIENCY_PERIOD",
    "GUID_DEEP_SLEEP_ENABLED",
    "GUID_DEEP_SLEEP_PLATFORM_STATE",
    "GUID_DISK_COALESCING_POWERDOWN_TIMEOUT",
    "GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT",
    "GUID_VIDEO_SUBGROUP",
    "GUID_VIDEO_POWERDOWN_TIMEOUT",
    "GUID_VIDEO_ANNOYANCE_TIMEOUT",
    "GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE",
    "GUID_VIDEO_DIM_TIMEOUT",
    "GUID_VIDEO_ADAPTIVE_POWERDOWN",
    "GUID_MONITOR_POWER_ON",
    "GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS",
    "GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS",
    "GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS",
    "GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS",
    "GUID_CONSOLE_DISPLAY_STATE",
    "GUID_ALLOW_DISPLAY_REQUIRED",
    "GUID_VIDEO_CONSOLE_LOCK_TIMEOUT",
    "GUID_ADVANCED_COLOR_QUALITY_BIAS",
    "GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP",
    "GUID_NON_ADAPTIVE_INPUT_TIMEOUT",
    "GUID_ADAPTIVE_INPUT_CONTROLLER_STATE",
    "GUID_DISK_SUBGROUP",
    "GUID_DISK_MAX_POWER",
    "GUID_DISK_POWERDOWN_TIMEOUT",
    "GUID_DISK_IDLE_TIMEOUT",
    "GUID_DISK_BURST_IGNORE_THRESHOLD",
    "GUID_DISK_ADAPTIVE_POWERDOWN",
    "GUID_DISK_NVME_NOPPME",
    "GUID_SLEEP_SUBGROUP",
    "GUID_SLEEP_IDLE_THRESHOLD",
    "GUID_STANDBY_TIMEOUT",
    "GUID_UNATTEND_SLEEP_TIMEOUT",
    "GUID_HIBERNATE_TIMEOUT",
    "GUID_HIBERNATE_FASTS4_POLICY",
    "GUID_CRITICAL_POWER_TRANSITION",
    "GUID_SYSTEM_AWAYMODE",
    "GUID_ALLOW_AWAYMODE",
    "GUID_USER_PRESENCE_PREDICTION",
    "GUID_STANDBY_BUDGET_GRACE_PERIOD",
    "GUID_STANDBY_BUDGET_PERCENT",
    "GUID_STANDBY_RESERVE_GRACE_PERIOD",
    "GUID_STANDBY_RESERVE_TIME",
    "GUID_STANDBY_RESET_PERCENT",
    "GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT",
    "GUID_ALLOW_STANDBY_STATES",
    "GUID_ALLOW_RTC_WAKE",
    "GUID_LEGACY_RTC_MITIGATION",
    "GUID_ALLOW_SYSTEM_REQUIRED",
    "GUID_POWER_SAVING_STATUS",
    "GUID_ENERGY_SAVER_SUBGROUP",
    "GUID_ENERGY_SAVER_BATTERY_THRESHOLD",
    "GUID_ENERGY_SAVER_BRIGHTNESS",
    "GUID_ENERGY_SAVER_POLICY",
    "GUID_SYSTEM_BUTTON_SUBGROUP",
    "POWERBUTTON_ACTION_INDEX_NOTHING",
    "POWERBUTTON_ACTION_INDEX_SLEEP",
    "POWERBUTTON_ACTION_INDEX_HIBERNATE",
    "POWERBUTTON_ACTION_INDEX_SHUTDOWN",
    "POWERBUTTON_ACTION_INDEX_TURN_OFF_THE_DISPLAY",
    "POWERBUTTON_ACTION_VALUE_NOTHING",
    "POWERBUTTON_ACTION_VALUE_SLEEP",
    "POWERBUTTON_ACTION_VALUE_HIBERNATE",
    "POWERBUTTON_ACTION_VALUE_SHUTDOWN",
    "POWERBUTTON_ACTION_VALUE_TURN_OFF_THE_DISPLAY",
    "GUID_POWERBUTTON_ACTION",
    "GUID_SLEEPBUTTON_ACTION",
    "GUID_USERINTERFACEBUTTON_ACTION",
    "GUID_LIDCLOSE_ACTION",
    "GUID_LIDOPEN_POWERSTATE",
    "GUID_BATTERY_SUBGROUP",
    "GUID_BATTERY_DISCHARGE_ACTION_0",
    "GUID_BATTERY_DISCHARGE_LEVEL_0",
    "GUID_BATTERY_DISCHARGE_FLAGS_0",
    "GUID_BATTERY_DISCHARGE_ACTION_1",
    "GUID_BATTERY_DISCHARGE_LEVEL_1",
    "GUID_BATTERY_DISCHARGE_FLAGS_1",
    "GUID_BATTERY_DISCHARGE_ACTION_2",
    "GUID_BATTERY_DISCHARGE_LEVEL_2",
    "GUID_BATTERY_DISCHARGE_FLAGS_2",
    "GUID_BATTERY_DISCHARGE_ACTION_3",
    "GUID_BATTERY_DISCHARGE_LEVEL_3",
    "GUID_BATTERY_DISCHARGE_FLAGS_3",
    "GUID_PROCESSOR_SETTINGS_SUBGROUP",
    "GUID_PROCESSOR_THROTTLE_POLICY",
    "PERFSTATE_POLICY_CHANGE_IDEAL",
    "PERFSTATE_POLICY_CHANGE_SINGLE",
    "PERFSTATE_POLICY_CHANGE_ROCKET",
    "PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE",
    "PERFSTATE_POLICY_CHANGE_DECREASE_MAX",
    "PERFSTATE_POLICY_CHANGE_INCREASE_MAX",
    "GUID_PROCESSOR_THROTTLE_MAXIMUM",
    "GUID_PROCESSOR_THROTTLE_MAXIMUM_1",
    "GUID_PROCESSOR_THROTTLE_MINIMUM",
    "GUID_PROCESSOR_THROTTLE_MINIMUM_1",
    "GUID_PROCESSOR_FREQUENCY_LIMIT",
    "GUID_PROCESSOR_FREQUENCY_LIMIT_1",
    "GUID_PROCESSOR_ALLOW_THROTTLING",
    "PROCESSOR_THROTTLE_DISABLED",
    "PROCESSOR_THROTTLE_ENABLED",
    "PROCESSOR_THROTTLE_AUTOMATIC",
    "GUID_PROCESSOR_IDLESTATE_POLICY",
    "GUID_PROCESSOR_PERFSTATE_POLICY",
    "GUID_PROCESSOR_PERF_INCREASE_THRESHOLD",
    "GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1",
    "GUID_PROCESSOR_PERF_DECREASE_THRESHOLD",
    "GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1",
    "GUID_PROCESSOR_PERF_INCREASE_POLICY",
    "GUID_PROCESSOR_PERF_INCREASE_POLICY_1",
    "GUID_PROCESSOR_PERF_DECREASE_POLICY",
    "GUID_PROCESSOR_PERF_DECREASE_POLICY_1",
    "GUID_PROCESSOR_PERF_INCREASE_TIME",
    "GUID_PROCESSOR_PERF_INCREASE_TIME_1",
    "GUID_PROCESSOR_PERF_DECREASE_TIME",
    "GUID_PROCESSOR_PERF_DECREASE_TIME_1",
    "GUID_PROCESSOR_PERF_TIME_CHECK",
    "GUID_PROCESSOR_PERF_BOOST_POLICY",
    "PROCESSOR_PERF_BOOST_POLICY_DISABLED",
    "PROCESSOR_PERF_BOOST_POLICY_MAX",
    "GUID_PROCESSOR_PERF_BOOST_MODE",
    "PROCESSOR_PERF_BOOST_MODE_DISABLED",
    "PROCESSOR_PERF_BOOST_MODE_ENABLED",
    "PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE",
    "PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED",
    "PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE",
    "PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE_AT_GUARANTEED",
    "PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED",
    "PROCESSOR_PERF_BOOST_MODE_MAX",
    "GUID_PROCESSOR_PERF_AUTONOMOUS_MODE",
    "PROCESSOR_PERF_AUTONOMOUS_MODE_DISABLED",
    "PROCESSOR_PERF_AUTONOMOUS_MODE_ENABLED",
    "GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE",
    "GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1",
    "PROCESSOR_PERF_PERFORMANCE_PREFERENCE",
    "PROCESSOR_PERF_ENERGY_PREFERENCE",
    "GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW",
    "PROCESSOR_PERF_MINIMUM_ACTIVITY_WINDOW",
    "PROCESSOR_PERF_MAXIMUM_ACTIVITY_WINDOW",
    "GUID_PROCESSOR_DUTY_CYCLING",
    "PROCESSOR_DUTY_CYCLING_DISABLED",
    "PROCESSOR_DUTY_CYCLING_ENABLED",
    "GUID_PROCESSOR_IDLE_ALLOW_SCALING",
    "GUID_PROCESSOR_IDLE_DISABLE",
    "GUID_PROCESSOR_IDLE_STATE_MAXIMUM",
    "GUID_PROCESSOR_IDLE_TIME_CHECK",
    "GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD",
    "GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD",
    "GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD",
    "GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD",
    "GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY",
    "CORE_PARKING_POLICY_CHANGE_IDEAL",
    "CORE_PARKING_POLICY_CHANGE_SINGLE",
    "CORE_PARKING_POLICY_CHANGE_ROCKET",
    "CORE_PARKING_POLICY_CHANGE_MULTISTEP",
    "CORE_PARKING_POLICY_CHANGE_MAX",
    "GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY",
    "GUID_PROCESSOR_CORE_PARKING_MAX_CORES",
    "GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1",
    "GUID_PROCESSOR_CORE_PARKING_MIN_CORES",
    "GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1",
    "GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME",
    "GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME",
    "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR",
    "GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD",
    "GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING",
    "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR",
    "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD",
    "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING",
    "GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD",
    "GUID_PROCESSOR_PARKING_CORE_OVERRIDE",
    "GUID_PROCESSOR_PARKING_PERF_STATE",
    "GUID_PROCESSOR_PARKING_PERF_STATE_1",
    "GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD",
    "GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD",
    "GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD",
    "GUID_PROCESSOR_SOFT_PARKING_LATENCY",
    "GUID_PROCESSOR_PERF_HISTORY",
    "GUID_PROCESSOR_PERF_HISTORY_1",
    "GUID_PROCESSOR_PERF_INCREASE_HISTORY",
    "GUID_PROCESSOR_PERF_DECREASE_HISTORY",
    "GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY",
    "GUID_PROCESSOR_PERF_LATENCY_HINT",
    "GUID_PROCESSOR_PERF_LATENCY_HINT_PERF",
    "GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1",
    "GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK",
    "GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1",
    "GUID_PROCESSOR_DISTRIBUTE_UTILITY",
    "GUID_PROCESSOR_HETEROGENEOUS_POLICY",
    "GUID_PROCESSOR_HETERO_DECREASE_TIME",
    "GUID_PROCESSOR_HETERO_INCREASE_TIME",
    "GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD",
    "GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD",
    "GUID_PROCESSOR_CLASS0_FLOOR_PERF",
    "GUID_PROCESSOR_CLASS1_INITIAL_PERF",
    "GUID_PROCESSOR_THREAD_SCHEDULING_POLICY",
    "GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY",
    "GUID_PROCESSOR_SHORT_THREAD_RUNTIME_THRESHOLD",
    "GUID_SYSTEM_COOLING_POLICY",
    "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD",
    "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1",
    "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD",
    "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1",
    "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME",
    "GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1",
    "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME",
    "GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1",
    "GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING",
    "GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1",
    "GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR",
    "GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1",
    "GUID_LOCK_CONSOLE_ON_WAKE",
    "GUID_DEVICE_IDLE_POLICY",
    "POWER_DEVICE_IDLE_POLICY_PERFORMANCE",
    "POWER_DEVICE_IDLE_POLICY_CONSERVATIVE",
    "GUID_CONNECTIVITY_IN_STANDBY",
    "POWER_CONNECTIVITY_IN_STANDBY_DISABLED",
    "POWER_CONNECTIVITY_IN_STANDBY_ENABLED",
    "POWER_CONNECTIVITY_IN_STANDBY_SYSTEM_MANAGED",
    "GUID_DISCONNECTED_STANDBY_MODE",
    "POWER_DISCONNECTED_STANDBY_MODE_NORMAL",
    "POWER_DISCONNECTED_STANDBY_MODE_AGGRESSIVE",
    "GUID_ACDC_POWER_SOURCE",
    "GUID_LIDSWITCH_STATE_CHANGE",
    "GUID_LIDSWITCH_STATE_RELIABILITY",
    "GUID_BATTERY_PERCENTAGE_REMAINING",
    "GUID_BATTERY_COUNT",
    "GUID_GLOBAL_USER_PRESENCE",
    "GUID_SESSION_DISPLAY_STATUS",
    "GUID_SESSION_USER_PRESENCE",
    "GUID_IDLE_BACKGROUND_TASK",
    "GUID_BACKGROUND_TASK_NOTIFICATION",
    "GUID_APPLAUNCH_BUTTON",
    "GUID_PCIEXPRESS_SETTINGS_SUBGROUP",
    "GUID_PCIEXPRESS_ASPM_POLICY",
    "GUID_ENABLE_SWITCH_FORCED_SHUTDOWN",
    "GUID_INTSTEER_SUBGROUP",
    "GUID_INTSTEER_MODE",
    "GUID_INTSTEER_LOAD_PER_PROC_TRIGGER",
    "GUID_INTSTEER_TIME_UNPARK_TRIGGER",
    "GUID_GRAPHICS_SUBGROUP",
    "GUID_GPU_PREFERENCE_POLICY",
    "GUID_MIXED_REALITY_MODE",
    "GUID_SPR_ACTIVE_SESSION_CHANGE",
    "POWER_SYSTEM_MAXIMUM",
    "DIAGNOSTIC_REASON_VERSION",
    "DIAGNOSTIC_REASON_SIMPLE_STRING",
    "DIAGNOSTIC_REASON_DETAILED_STRING",
    "DIAGNOSTIC_REASON_NOT_SPECIFIED",
    "POWER_REQUEST_CONTEXT_VERSION",
    "PDCAP_D0_SUPPORTED",
    "PDCAP_D1_SUPPORTED",
    "PDCAP_D2_SUPPORTED",
    "PDCAP_D3_SUPPORTED",
    "PDCAP_WAKE_FROM_D0_SUPPORTED",
    "PDCAP_WAKE_FROM_D1_SUPPORTED",
    "PDCAP_WAKE_FROM_D2_SUPPORTED",
    "PDCAP_WAKE_FROM_D3_SUPPORTED",
    "PDCAP_WARM_EJECT_SUPPORTED",
    "POWER_SETTING_VALUE_VERSION",
    "PROC_IDLE_BUCKET_COUNT",
    "PROC_IDLE_BUCKET_COUNT_EX",
    "ACPI_PPM_SOFTWARE_ALL",
    "ACPI_PPM_SOFTWARE_ANY",
    "ACPI_PPM_HARDWARE_ALL",
    "MS_PPM_SOFTWARE_ALL",
    "PPM_FIRMWARE_ACPI1C2",
    "PPM_FIRMWARE_ACPI1C3",
    "PPM_FIRMWARE_ACPI1TSTATES",
    "PPM_FIRMWARE_CST",
    "PPM_FIRMWARE_CSD",
    "PPM_FIRMWARE_PCT",
    "PPM_FIRMWARE_PSS",
    "PPM_FIRMWARE_XPSS",
    "PPM_FIRMWARE_PPC",
    "PPM_FIRMWARE_PSD",
    "PPM_FIRMWARE_PTC",
    "PPM_FIRMWARE_TSS",
    "PPM_FIRMWARE_TPC",
    "PPM_FIRMWARE_TSD",
    "PPM_FIRMWARE_PCCH",
    "PPM_FIRMWARE_PCCP",
    "PPM_FIRMWARE_OSC",
    "PPM_FIRMWARE_PDC",
    "PPM_FIRMWARE_CPC",
    "PPM_FIRMWARE_LPI",
    "PPM_PERFORMANCE_IMPLEMENTATION_NONE",
    "PPM_PERFORMANCE_IMPLEMENTATION_PSTATES",
    "PPM_PERFORMANCE_IMPLEMENTATION_PCCV1",
    "PPM_PERFORMANCE_IMPLEMENTATION_CPPC",
    "PPM_PERFORMANCE_IMPLEMENTATION_PEP",
    "PPM_IDLE_IMPLEMENTATION_NONE",
    "PPM_IDLE_IMPLEMENTATION_CSTATES",
    "PPM_IDLE_IMPLEMENTATION_PEP",
    "PPM_IDLE_IMPLEMENTATION_MICROPEP",
    "PPM_IDLE_IMPLEMENTATION_LPISTATES",
    "PPM_PERFSTATE_CHANGE_GUID",
    "PPM_PERFSTATE_DOMAIN_CHANGE_GUID",
    "PPM_IDLESTATE_CHANGE_GUID",
    "PPM_PERFSTATES_DATA_GUID",
    "PPM_IDLESTATES_DATA_GUID",
    "PPM_IDLE_ACCOUNTING_GUID",
    "PPM_IDLE_ACCOUNTING_EX_GUID",
    "PPM_THERMALCONSTRAINT_GUID",
    "PPM_PERFMON_PERFSTATE_GUID",
    "PPM_THERMAL_POLICY_CHANGE_GUID",
    "POWER_ACTION_QUERY_ALLOWED",
    "POWER_ACTION_UI_ALLOWED",
    "POWER_ACTION_OVERRIDE_APPS",
    "POWER_ACTION_HIBERBOOT",
    "POWER_ACTION_USER_NOTIFY",
    "POWER_ACTION_DOZE_TO_HIBERNATE",
    "POWER_ACTION_ACPI_CRITICAL",
    "POWER_ACTION_ACPI_USER_NOTIFY",
    "POWER_ACTION_DIRECTED_DRIPS",
    "POWER_ACTION_PSEUDO_TRANSITION",
    "POWER_ACTION_LIGHTEST_FIRST",
    "POWER_ACTION_LOCK_CONSOLE",
    "POWER_ACTION_DISABLE_WAKES",
    "POWER_ACTION_CRITICAL",
    "POWER_USER_NOTIFY_FORCED_SHUTDOWN",
    "BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK",
    "BATTERY_DISCHARGE_FLAGS_ENABLE",
    "NUM_DISCHARGE_POLICIES",
    "DISCHARGE_POLICY_CRITICAL",
    "DISCHARGE_POLICY_LOW",
    "PROCESSOR_IDLESTATE_POLICY_COUNT",
    "PO_THROTTLE_NONE",
    "PO_THROTTLE_CONSTANT",
    "PO_THROTTLE_DEGRADE",
    "PO_THROTTLE_ADAPTIVE",
    "PO_THROTTLE_MAXIMUM",
    "HIBERFILE_TYPE_NONE",
    "HIBERFILE_TYPE_REDUCED",
    "HIBERFILE_TYPE_FULL",
    "HIBERFILE_TYPE_MAX",
    "IMAGE_DOS_SIGNATURE",
    "IMAGE_OS2_SIGNATURE",
    "IMAGE_OS2_SIGNATURE_LE",
    "IMAGE_VXD_SIGNATURE",
    "IMAGE_NT_SIGNATURE",
    "IMAGE_SIZEOF_FILE_HEADER",
    "IMAGE_NUMBEROF_DIRECTORY_ENTRIES",
    "IMAGE_SIZEOF_SHORT_NAME",
    "IMAGE_SIZEOF_SECTION_HEADER",
    "IMAGE_SIZEOF_SYMBOL",
    "IMAGE_SYM_SECTION_MAX",
    "IMAGE_SYM_SECTION_MAX_EX",
    "IMAGE_SYM_TYPE_NULL",
    "IMAGE_SYM_TYPE_VOID",
    "IMAGE_SYM_TYPE_CHAR",
    "IMAGE_SYM_TYPE_SHORT",
    "IMAGE_SYM_TYPE_INT",
    "IMAGE_SYM_TYPE_LONG",
    "IMAGE_SYM_TYPE_FLOAT",
    "IMAGE_SYM_TYPE_DOUBLE",
    "IMAGE_SYM_TYPE_STRUCT",
    "IMAGE_SYM_TYPE_UNION",
    "IMAGE_SYM_TYPE_ENUM",
    "IMAGE_SYM_TYPE_MOE",
    "IMAGE_SYM_TYPE_BYTE",
    "IMAGE_SYM_TYPE_WORD",
    "IMAGE_SYM_TYPE_UINT",
    "IMAGE_SYM_TYPE_DWORD",
    "IMAGE_SYM_TYPE_PCODE",
    "IMAGE_SYM_DTYPE_NULL",
    "IMAGE_SYM_DTYPE_POINTER",
    "IMAGE_SYM_DTYPE_FUNCTION",
    "IMAGE_SYM_DTYPE_ARRAY",
    "IMAGE_SYM_CLASS_NULL",
    "IMAGE_SYM_CLASS_AUTOMATIC",
    "IMAGE_SYM_CLASS_EXTERNAL",
    "IMAGE_SYM_CLASS_STATIC",
    "IMAGE_SYM_CLASS_REGISTER",
    "IMAGE_SYM_CLASS_EXTERNAL_DEF",
    "IMAGE_SYM_CLASS_LABEL",
    "IMAGE_SYM_CLASS_UNDEFINED_LABEL",
    "IMAGE_SYM_CLASS_MEMBER_OF_STRUCT",
    "IMAGE_SYM_CLASS_ARGUMENT",
    "IMAGE_SYM_CLASS_STRUCT_TAG",
    "IMAGE_SYM_CLASS_MEMBER_OF_UNION",
    "IMAGE_SYM_CLASS_UNION_TAG",
    "IMAGE_SYM_CLASS_TYPE_DEFINITION",
    "IMAGE_SYM_CLASS_UNDEFINED_STATIC",
    "IMAGE_SYM_CLASS_ENUM_TAG",
    "IMAGE_SYM_CLASS_MEMBER_OF_ENUM",
    "IMAGE_SYM_CLASS_REGISTER_PARAM",
    "IMAGE_SYM_CLASS_BIT_FIELD",
    "IMAGE_SYM_CLASS_FAR_EXTERNAL",
    "IMAGE_SYM_CLASS_BLOCK",
    "IMAGE_SYM_CLASS_FUNCTION",
    "IMAGE_SYM_CLASS_END_OF_STRUCT",
    "IMAGE_SYM_CLASS_FILE",
    "IMAGE_SYM_CLASS_SECTION",
    "IMAGE_SYM_CLASS_WEAK_EXTERNAL",
    "IMAGE_SYM_CLASS_CLR_TOKEN",
    "N_BTMASK",
    "N_TMASK",
    "N_TMASK1",
    "N_TMASK2",
    "N_BTSHFT",
    "N_TSHIFT",
    "IMAGE_COMDAT_SELECT_NODUPLICATES",
    "IMAGE_COMDAT_SELECT_ANY",
    "IMAGE_COMDAT_SELECT_SAME_SIZE",
    "IMAGE_COMDAT_SELECT_EXACT_MATCH",
    "IMAGE_COMDAT_SELECT_ASSOCIATIVE",
    "IMAGE_COMDAT_SELECT_LARGEST",
    "IMAGE_COMDAT_SELECT_NEWEST",
    "IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY",
    "IMAGE_WEAK_EXTERN_SEARCH_LIBRARY",
    "IMAGE_WEAK_EXTERN_SEARCH_ALIAS",
    "IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY",
    "IMAGE_REL_I386_ABSOLUTE",
    "IMAGE_REL_I386_DIR16",
    "IMAGE_REL_I386_REL16",
    "IMAGE_REL_I386_DIR32",
    "IMAGE_REL_I386_DIR32NB",
    "IMAGE_REL_I386_SEG12",
    "IMAGE_REL_I386_SECTION",
    "IMAGE_REL_I386_SECREL",
    "IMAGE_REL_I386_TOKEN",
    "IMAGE_REL_I386_SECREL7",
    "IMAGE_REL_I386_REL32",
    "IMAGE_REL_MIPS_ABSOLUTE",
    "IMAGE_REL_MIPS_REFHALF",
    "IMAGE_REL_MIPS_REFWORD",
    "IMAGE_REL_MIPS_JMPADDR",
    "IMAGE_REL_MIPS_REFHI",
    "IMAGE_REL_MIPS_REFLO",
    "IMAGE_REL_MIPS_GPREL",
    "IMAGE_REL_MIPS_LITERAL",
    "IMAGE_REL_MIPS_SECTION",
    "IMAGE_REL_MIPS_SECREL",
    "IMAGE_REL_MIPS_SECRELLO",
    "IMAGE_REL_MIPS_SECRELHI",
    "IMAGE_REL_MIPS_TOKEN",
    "IMAGE_REL_MIPS_JMPADDR16",
    "IMAGE_REL_MIPS_REFWORDNB",
    "IMAGE_REL_MIPS_PAIR",
    "IMAGE_REL_ALPHA_ABSOLUTE",
    "IMAGE_REL_ALPHA_REFLONG",
    "IMAGE_REL_ALPHA_REFQUAD",
    "IMAGE_REL_ALPHA_GPREL32",
    "IMAGE_REL_ALPHA_LITERAL",
    "IMAGE_REL_ALPHA_LITUSE",
    "IMAGE_REL_ALPHA_GPDISP",
    "IMAGE_REL_ALPHA_BRADDR",
    "IMAGE_REL_ALPHA_HINT",
    "IMAGE_REL_ALPHA_INLINE_REFLONG",
    "IMAGE_REL_ALPHA_REFHI",
    "IMAGE_REL_ALPHA_REFLO",
    "IMAGE_REL_ALPHA_PAIR",
    "IMAGE_REL_ALPHA_MATCH",
    "IMAGE_REL_ALPHA_SECTION",
    "IMAGE_REL_ALPHA_SECREL",
    "IMAGE_REL_ALPHA_REFLONGNB",
    "IMAGE_REL_ALPHA_SECRELLO",
    "IMAGE_REL_ALPHA_SECRELHI",
    "IMAGE_REL_ALPHA_REFQ3",
    "IMAGE_REL_ALPHA_REFQ2",
    "IMAGE_REL_ALPHA_REFQ1",
    "IMAGE_REL_ALPHA_GPRELLO",
    "IMAGE_REL_ALPHA_GPRELHI",
    "IMAGE_REL_PPC_ABSOLUTE",
    "IMAGE_REL_PPC_ADDR64",
    "IMAGE_REL_PPC_ADDR32",
    "IMAGE_REL_PPC_ADDR24",
    "IMAGE_REL_PPC_ADDR16",
    "IMAGE_REL_PPC_ADDR14",
    "IMAGE_REL_PPC_REL24",
    "IMAGE_REL_PPC_REL14",
    "IMAGE_REL_PPC_TOCREL16",
    "IMAGE_REL_PPC_TOCREL14",
    "IMAGE_REL_PPC_ADDR32NB",
    "IMAGE_REL_PPC_SECREL",
    "IMAGE_REL_PPC_SECTION",
    "IMAGE_REL_PPC_IFGLUE",
    "IMAGE_REL_PPC_IMGLUE",
    "IMAGE_REL_PPC_SECREL16",
    "IMAGE_REL_PPC_REFHI",
    "IMAGE_REL_PPC_REFLO",
    "IMAGE_REL_PPC_PAIR",
    "IMAGE_REL_PPC_SECRELLO",
    "IMAGE_REL_PPC_SECRELHI",
    "IMAGE_REL_PPC_GPREL",
    "IMAGE_REL_PPC_TOKEN",
    "IMAGE_REL_PPC_TYPEMASK",
    "IMAGE_REL_PPC_NEG",
    "IMAGE_REL_PPC_BRTAKEN",
    "IMAGE_REL_PPC_BRNTAKEN",
    "IMAGE_REL_PPC_TOCDEFN",
    "IMAGE_REL_SH3_ABSOLUTE",
    "IMAGE_REL_SH3_DIRECT16",
    "IMAGE_REL_SH3_DIRECT32",
    "IMAGE_REL_SH3_DIRECT8",
    "IMAGE_REL_SH3_DIRECT8_WORD",
    "IMAGE_REL_SH3_DIRECT8_LONG",
    "IMAGE_REL_SH3_DIRECT4",
    "IMAGE_REL_SH3_DIRECT4_WORD",
    "IMAGE_REL_SH3_DIRECT4_LONG",
    "IMAGE_REL_SH3_PCREL8_WORD",
    "IMAGE_REL_SH3_PCREL8_LONG",
    "IMAGE_REL_SH3_PCREL12_WORD",
    "IMAGE_REL_SH3_STARTOF_SECTION",
    "IMAGE_REL_SH3_SIZEOF_SECTION",
    "IMAGE_REL_SH3_SECTION",
    "IMAGE_REL_SH3_SECREL",
    "IMAGE_REL_SH3_DIRECT32_NB",
    "IMAGE_REL_SH3_GPREL4_LONG",
    "IMAGE_REL_SH3_TOKEN",
    "IMAGE_REL_SHM_PCRELPT",
    "IMAGE_REL_SHM_REFLO",
    "IMAGE_REL_SHM_REFHALF",
    "IMAGE_REL_SHM_RELLO",
    "IMAGE_REL_SHM_RELHALF",
    "IMAGE_REL_SHM_PAIR",
    "IMAGE_REL_SH_NOMODE",
    "IMAGE_REL_ARM_ABSOLUTE",
    "IMAGE_REL_ARM_ADDR32",
    "IMAGE_REL_ARM_ADDR32NB",
    "IMAGE_REL_ARM_BRANCH24",
    "IMAGE_REL_ARM_BRANCH11",
    "IMAGE_REL_ARM_TOKEN",
    "IMAGE_REL_ARM_GPREL12",
    "IMAGE_REL_ARM_GPREL7",
    "IMAGE_REL_ARM_BLX24",
    "IMAGE_REL_ARM_BLX11",
    "IMAGE_REL_ARM_SECTION",
    "IMAGE_REL_ARM_SECREL",
    "IMAGE_REL_ARM_MOV32A",
    "IMAGE_REL_ARM_MOV32",
    "IMAGE_REL_ARM_MOV32T",
    "IMAGE_REL_THUMB_MOV32",
    "IMAGE_REL_ARM_BRANCH20T",
    "IMAGE_REL_THUMB_BRANCH20",
    "IMAGE_REL_ARM_BRANCH24T",
    "IMAGE_REL_THUMB_BRANCH24",
    "IMAGE_REL_ARM_BLX23T",
    "IMAGE_REL_THUMB_BLX23",
    "IMAGE_REL_AM_ABSOLUTE",
    "IMAGE_REL_AM_ADDR32",
    "IMAGE_REL_AM_ADDR32NB",
    "IMAGE_REL_AM_CALL32",
    "IMAGE_REL_AM_FUNCINFO",
    "IMAGE_REL_AM_REL32_1",
    "IMAGE_REL_AM_REL32_2",
    "IMAGE_REL_AM_SECREL",
    "IMAGE_REL_AM_SECTION",
    "IMAGE_REL_AM_TOKEN",
    "IMAGE_REL_ARM64_ABSOLUTE",
    "IMAGE_REL_ARM64_ADDR32",
    "IMAGE_REL_ARM64_ADDR32NB",
    "IMAGE_REL_ARM64_BRANCH26",
    "IMAGE_REL_ARM64_PAGEBASE_REL21",
    "IMAGE_REL_ARM64_REL21",
    "IMAGE_REL_ARM64_PAGEOFFSET_12A",
    "IMAGE_REL_ARM64_PAGEOFFSET_12L",
    "IMAGE_REL_ARM64_SECREL",
    "IMAGE_REL_ARM64_SECREL_LOW12A",
    "IMAGE_REL_ARM64_SECREL_HIGH12A",
    "IMAGE_REL_ARM64_SECREL_LOW12L",
    "IMAGE_REL_ARM64_TOKEN",
    "IMAGE_REL_ARM64_SECTION",
    "IMAGE_REL_ARM64_ADDR64",
    "IMAGE_REL_ARM64_BRANCH19",
    "IMAGE_REL_AMD64_ABSOLUTE",
    "IMAGE_REL_AMD64_ADDR64",
    "IMAGE_REL_AMD64_ADDR32",
    "IMAGE_REL_AMD64_ADDR32NB",
    "IMAGE_REL_AMD64_REL32",
    "IMAGE_REL_AMD64_REL32_1",
    "IMAGE_REL_AMD64_REL32_2",
    "IMAGE_REL_AMD64_REL32_3",
    "IMAGE_REL_AMD64_REL32_4",
    "IMAGE_REL_AMD64_REL32_5",
    "IMAGE_REL_AMD64_SECTION",
    "IMAGE_REL_AMD64_SECREL",
    "IMAGE_REL_AMD64_SECREL7",
    "IMAGE_REL_AMD64_TOKEN",
    "IMAGE_REL_AMD64_SREL32",
    "IMAGE_REL_AMD64_PAIR",
    "IMAGE_REL_AMD64_SSPAN32",
    "IMAGE_REL_AMD64_EHANDLER",
    "IMAGE_REL_AMD64_IMPORT_BR",
    "IMAGE_REL_AMD64_IMPORT_CALL",
    "IMAGE_REL_AMD64_CFG_BR",
    "IMAGE_REL_AMD64_CFG_BR_REX",
    "IMAGE_REL_AMD64_CFG_CALL",
    "IMAGE_REL_AMD64_INDIR_BR",
    "IMAGE_REL_AMD64_INDIR_BR_REX",
    "IMAGE_REL_AMD64_INDIR_CALL",
    "IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST",
    "IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST",
    "IMAGE_REL_IA64_ABSOLUTE",
    "IMAGE_REL_IA64_IMM14",
    "IMAGE_REL_IA64_IMM22",
    "IMAGE_REL_IA64_IMM64",
    "IMAGE_REL_IA64_DIR32",
    "IMAGE_REL_IA64_DIR64",
    "IMAGE_REL_IA64_PCREL21B",
    "IMAGE_REL_IA64_PCREL21M",
    "IMAGE_REL_IA64_PCREL21F",
    "IMAGE_REL_IA64_GPREL22",
    "IMAGE_REL_IA64_LTOFF22",
    "IMAGE_REL_IA64_SECTION",
    "IMAGE_REL_IA64_SECREL22",
    "IMAGE_REL_IA64_SECREL64I",
    "IMAGE_REL_IA64_SECREL32",
    "IMAGE_REL_IA64_DIR32NB",
    "IMAGE_REL_IA64_SREL14",
    "IMAGE_REL_IA64_SREL22",
    "IMAGE_REL_IA64_SREL32",
    "IMAGE_REL_IA64_UREL32",
    "IMAGE_REL_IA64_PCREL60X",
    "IMAGE_REL_IA64_PCREL60B",
    "IMAGE_REL_IA64_PCREL60F",
    "IMAGE_REL_IA64_PCREL60I",
    "IMAGE_REL_IA64_PCREL60M",
    "IMAGE_REL_IA64_IMMGPREL64",
    "IMAGE_REL_IA64_TOKEN",
    "IMAGE_REL_IA64_GPREL32",
    "IMAGE_REL_IA64_ADDEND",
    "IMAGE_REL_CEF_ABSOLUTE",
    "IMAGE_REL_CEF_ADDR32",
    "IMAGE_REL_CEF_ADDR64",
    "IMAGE_REL_CEF_ADDR32NB",
    "IMAGE_REL_CEF_SECTION",
    "IMAGE_REL_CEF_SECREL",
    "IMAGE_REL_CEF_TOKEN",
    "IMAGE_REL_CEE_ABSOLUTE",
    "IMAGE_REL_CEE_ADDR32",
    "IMAGE_REL_CEE_ADDR64",
    "IMAGE_REL_CEE_ADDR32NB",
    "IMAGE_REL_CEE_SECTION",
    "IMAGE_REL_CEE_SECREL",
    "IMAGE_REL_CEE_TOKEN",
    "IMAGE_REL_M32R_ABSOLUTE",
    "IMAGE_REL_M32R_ADDR32",
    "IMAGE_REL_M32R_ADDR32NB",
    "IMAGE_REL_M32R_ADDR24",
    "IMAGE_REL_M32R_GPREL16",
    "IMAGE_REL_M32R_PCREL24",
    "IMAGE_REL_M32R_PCREL16",
    "IMAGE_REL_M32R_PCREL8",
    "IMAGE_REL_M32R_REFHALF",
    "IMAGE_REL_M32R_REFHI",
    "IMAGE_REL_M32R_REFLO",
    "IMAGE_REL_M32R_PAIR",
    "IMAGE_REL_M32R_SECTION",
    "IMAGE_REL_M32R_SECREL32",
    "IMAGE_REL_M32R_TOKEN",
    "IMAGE_REL_EBC_ABSOLUTE",
    "IMAGE_REL_EBC_ADDR32NB",
    "IMAGE_REL_EBC_REL32",
    "IMAGE_REL_EBC_SECTION",
    "IMAGE_REL_EBC_SECREL",
    "EMARCH_ENC_I17_IMM7B_INST_WORD_X",
    "EMARCH_ENC_I17_IMM7B_SIZE_X",
    "EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X",
    "EMARCH_ENC_I17_IMM7B_VAL_POS_X",
    "EMARCH_ENC_I17_IMM9D_INST_WORD_X",
    "EMARCH_ENC_I17_IMM9D_SIZE_X",
    "EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X",
    "EMARCH_ENC_I17_IMM9D_VAL_POS_X",
    "EMARCH_ENC_I17_IMM5C_INST_WORD_X",
    "EMARCH_ENC_I17_IMM5C_SIZE_X",
    "EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X",
    "EMARCH_ENC_I17_IMM5C_VAL_POS_X",
    "EMARCH_ENC_I17_IC_INST_WORD_X",
    "EMARCH_ENC_I17_IC_SIZE_X",
    "EMARCH_ENC_I17_IC_INST_WORD_POS_X",
    "EMARCH_ENC_I17_IC_VAL_POS_X",
    "EMARCH_ENC_I17_IMM41a_INST_WORD_X",
    "EMARCH_ENC_I17_IMM41a_SIZE_X",
    "EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X",
    "EMARCH_ENC_I17_IMM41a_VAL_POS_X",
    "EMARCH_ENC_I17_IMM41b_INST_WORD_X",
    "EMARCH_ENC_I17_IMM41b_SIZE_X",
    "EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X",
    "EMARCH_ENC_I17_IMM41b_VAL_POS_X",
    "EMARCH_ENC_I17_IMM41c_INST_WORD_X",
    "EMARCH_ENC_I17_IMM41c_SIZE_X",
    "EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X",
    "EMARCH_ENC_I17_IMM41c_VAL_POS_X",
    "EMARCH_ENC_I17_SIGN_INST_WORD_X",
    "EMARCH_ENC_I17_SIGN_SIZE_X",
    "EMARCH_ENC_I17_SIGN_INST_WORD_POS_X",
    "EMARCH_ENC_I17_SIGN_VAL_POS_X",
    "X3_OPCODE_INST_WORD_X",
    "X3_OPCODE_SIZE_X",
    "X3_OPCODE_INST_WORD_POS_X",
    "X3_OPCODE_SIGN_VAL_POS_X",
    "X3_I_INST_WORD_X",
    "X3_I_SIZE_X",
    "X3_I_INST_WORD_POS_X",
    "X3_I_SIGN_VAL_POS_X",
    "X3_D_WH_INST_WORD_X",
    "X3_D_WH_SIZE_X",
    "X3_D_WH_INST_WORD_POS_X",
    "X3_D_WH_SIGN_VAL_POS_X",
    "X3_IMM20_INST_WORD_X",
    "X3_IMM20_SIZE_X",
    "X3_IMM20_INST_WORD_POS_X",
    "X3_IMM20_SIGN_VAL_POS_X",
    "X3_IMM39_1_INST_WORD_X",
    "X3_IMM39_1_SIZE_X",
    "X3_IMM39_1_INST_WORD_POS_X",
    "X3_IMM39_1_SIGN_VAL_POS_X",
    "X3_IMM39_2_INST_WORD_X",
    "X3_IMM39_2_SIZE_X",
    "X3_IMM39_2_INST_WORD_POS_X",
    "X3_IMM39_2_SIGN_VAL_POS_X",
    "X3_P_INST_WORD_X",
    "X3_P_SIZE_X",
    "X3_P_INST_WORD_POS_X",
    "X3_P_SIGN_VAL_POS_X",
    "X3_TMPLT_INST_WORD_X",
    "X3_TMPLT_SIZE_X",
    "X3_TMPLT_INST_WORD_POS_X",
    "X3_TMPLT_SIGN_VAL_POS_X",
    "X3_BTYPE_QP_INST_WORD_X",
    "X3_BTYPE_QP_SIZE_X",
    "X3_BTYPE_QP_INST_WORD_POS_X",
    "X3_BTYPE_QP_INST_VAL_POS_X",
    "X3_EMPTY_INST_WORD_X",
    "X3_EMPTY_SIZE_X",
    "X3_EMPTY_INST_WORD_POS_X",
    "X3_EMPTY_INST_VAL_POS_X",
    "IMAGE_REL_BASED_ABSOLUTE",
    "IMAGE_REL_BASED_HIGH",
    "IMAGE_REL_BASED_LOW",
    "IMAGE_REL_BASED_HIGHLOW",
    "IMAGE_REL_BASED_HIGHADJ",
    "IMAGE_REL_BASED_MACHINE_SPECIFIC_5",
    "IMAGE_REL_BASED_RESERVED",
    "IMAGE_REL_BASED_MACHINE_SPECIFIC_7",
    "IMAGE_REL_BASED_MACHINE_SPECIFIC_8",
    "IMAGE_REL_BASED_MACHINE_SPECIFIC_9",
    "IMAGE_REL_BASED_DIR64",
    "IMAGE_REL_BASED_IA64_IMM64",
    "IMAGE_REL_BASED_MIPS_JMPADDR",
    "IMAGE_REL_BASED_MIPS_JMPADDR16",
    "IMAGE_REL_BASED_ARM_MOV32",
    "IMAGE_REL_BASED_THUMB_MOV32",
    "IMAGE_ARCHIVE_START_SIZE",
    "IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR",
    "IMAGE_ORDINAL_FLAG64",
    "IMAGE_ORDINAL_FLAG32",
    "IMAGE_ORDINAL_FLAG",
    "IMAGE_RESOURCE_NAME_IS_STRING",
    "IMAGE_RESOURCE_DATA_IS_DIRECTORY",
    "IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE",
    "IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE",
    "IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER",
    "IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER",
    "IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH",
    "IMAGE_HOT_PATCH_BASE_OBLIGATORY",
    "IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK",
    "IMAGE_HOT_PATCH_CHUNK_INVERSE",
    "IMAGE_HOT_PATCH_CHUNK_OBLIGATORY",
    "IMAGE_HOT_PATCH_CHUNK_RESERVED",
    "IMAGE_HOT_PATCH_CHUNK_TYPE",
    "IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA",
    "IMAGE_HOT_PATCH_CHUNK_TARGET_RVA",
    "IMAGE_HOT_PATCH_CHUNK_SIZE",
    "IMAGE_HOT_PATCH_NONE",
    "IMAGE_HOT_PATCH_FUNCTION",
    "IMAGE_HOT_PATCH_ABSOLUTE",
    "IMAGE_HOT_PATCH_REL32",
    "IMAGE_HOT_PATCH_CALL_TARGET",
    "IMAGE_HOT_PATCH_INDIRECT",
    "IMAGE_HOT_PATCH_NO_CALL_TARGET",
    "IMAGE_HOT_PATCH_DYNAMIC_VALUE",
    "IMAGE_GUARD_CF_INSTRUMENTED",
    "IMAGE_GUARD_CFW_INSTRUMENTED",
    "IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT",
    "IMAGE_GUARD_SECURITY_COOKIE_UNUSED",
    "IMAGE_GUARD_PROTECT_DELAYLOAD_IAT",
    "IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION",
    "IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT",
    "IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION",
    "IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT",
    "IMAGE_GUARD_RF_INSTRUMENTED",
    "IMAGE_GUARD_RF_ENABLE",
    "IMAGE_GUARD_RF_STRICT",
    "IMAGE_GUARD_RETPOLINE_PRESENT",
    "IMAGE_GUARD_EH_CONTINUATION_TABLE_PRESENT",
    "IMAGE_GUARD_XFG_ENABLED",
    "IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK",
    "IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT",
    "IMAGE_GUARD_FLAG_FID_SUPPRESSED",
    "IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED",
    "IMAGE_GUARD_FLAG_FID_LANGEXCPTHANDLER",
    "IMAGE_GUARD_FLAG_FID_XFG",
    "IMAGE_ENCLAVE_LONG_ID_LENGTH",
    "IMAGE_ENCLAVE_SHORT_ID_LENGTH",
    "IMAGE_ENCLAVE_POLICY_DEBUGGABLE",
    "IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE",
    "IMAGE_ENCLAVE_IMPORT_MATCH_NONE",
    "IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID",
    "IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID",
    "IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID",
    "IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID",
    "IMAGE_DEBUG_TYPE_OMAP_TO_SRC",
    "IMAGE_DEBUG_TYPE_OMAP_FROM_SRC",
    "IMAGE_DEBUG_TYPE_RESERVED10",
    "IMAGE_DEBUG_TYPE_CLSID",
    "IMAGE_DEBUG_TYPE_VC_FEATURE",
    "IMAGE_DEBUG_TYPE_POGO",
    "IMAGE_DEBUG_TYPE_ILTCG",
    "IMAGE_DEBUG_TYPE_MPX",
    "IMAGE_DEBUG_TYPE_REPRO",
    "IMAGE_DEBUG_TYPE_EX_DLLCHARACTERISTICS",
    "FRAME_FPO",
    "FRAME_TRAP",
    "FRAME_TSS",
    "FRAME_NONFPO",
    "SIZEOF_RFPO_DATA",
    "IMAGE_DEBUG_MISC_EXENAME",
    "IMAGE_SEPARATE_DEBUG_SIGNATURE",
    "NON_PAGED_DEBUG_SIGNATURE",
    "IMAGE_SEPARATE_DEBUG_FLAGS_MASK",
    "IMAGE_SEPARATE_DEBUG_MISMATCH",
    "IMPORT_OBJECT_HDR_SIG2",
    "UNWIND_HISTORY_TABLE_SIZE",
    "RTL_RUN_ONCE_CHECK_ONLY",
    "RTL_RUN_ONCE_ASYNC",
    "RTL_RUN_ONCE_INIT_FAILED",
    "RTL_RUN_ONCE_CTX_RESERVED_BITS",
    "FAST_FAIL_LEGACY_GS_VIOLATION",
    "FAST_FAIL_VTGUARD_CHECK_FAILURE",
    "FAST_FAIL_STACK_COOKIE_CHECK_FAILURE",
    "FAST_FAIL_CORRUPT_LIST_ENTRY",
    "FAST_FAIL_INCORRECT_STACK",
    "FAST_FAIL_INVALID_ARG",
    "FAST_FAIL_GS_COOKIE_INIT",
    "FAST_FAIL_FATAL_APP_EXIT",
    "FAST_FAIL_RANGE_CHECK_FAILURE",
    "FAST_FAIL_UNSAFE_REGISTRY_ACCESS",
    "FAST_FAIL_GUARD_ICALL_CHECK_FAILURE",
    "FAST_FAIL_GUARD_WRITE_CHECK_FAILURE",
    "FAST_FAIL_INVALID_FIBER_SWITCH",
    "FAST_FAIL_INVALID_SET_OF_CONTEXT",
    "FAST_FAIL_INVALID_REFERENCE_COUNT",
    "FAST_FAIL_INVALID_JUMP_BUFFER",
    "FAST_FAIL_MRDATA_MODIFIED",
    "FAST_FAIL_CERTIFICATION_FAILURE",
    "FAST_FAIL_INVALID_EXCEPTION_CHAIN",
    "FAST_FAIL_CRYPTO_LIBRARY",
    "FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT",
    "FAST_FAIL_INVALID_IMAGE_BASE",
    "FAST_FAIL_DLOAD_PROTECTION_FAILURE",
    "FAST_FAIL_UNSAFE_EXTENSION_CALL",
    "FAST_FAIL_DEPRECATED_SERVICE_INVOKED",
    "FAST_FAIL_INVALID_BUFFER_ACCESS",
    "FAST_FAIL_INVALID_BALANCED_TREE",
    "FAST_FAIL_INVALID_NEXT_THREAD",
    "FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED",
    "FAST_FAIL_APCS_DISABLED",
    "FAST_FAIL_INVALID_IDLE_STATE",
    "FAST_FAIL_MRDATA_PROTECTION_FAILURE",
    "FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION",
    "FAST_FAIL_INVALID_LOCK_STATE",
    "FAST_FAIL_GUARD_JUMPTABLE",
    "FAST_FAIL_INVALID_LONGJUMP_TARGET",
    "FAST_FAIL_INVALID_DISPATCH_CONTEXT",
    "FAST_FAIL_INVALID_THREAD",
    "FAST_FAIL_INVALID_SYSCALL_NUMBER",
    "FAST_FAIL_INVALID_FILE_OPERATION",
    "FAST_FAIL_LPAC_ACCESS_DENIED",
    "FAST_FAIL_GUARD_SS_FAILURE",
    "FAST_FAIL_LOADER_CONTINUITY_FAILURE",
    "FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE",
    "FAST_FAIL_INVALID_CONTROL_STACK",
    "FAST_FAIL_SET_CONTEXT_DENIED",
    "FAST_FAIL_INVALID_IAT",
    "FAST_FAIL_HEAP_METADATA_CORRUPTION",
    "FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION",
    "FAST_FAIL_LOW_LABEL_ACCESS_DENIED",
    "FAST_FAIL_ENCLAVE_CALL_FAILURE",
    "FAST_FAIL_UNHANDLED_LSS_EXCEPTON",
    "FAST_FAIL_ADMINLESS_ACCESS_DENIED",
    "FAST_FAIL_UNEXPECTED_CALL",
    "FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS",
    "FAST_FAIL_UNEXPECTED_HOST_BEHAVIOR",
    "FAST_FAIL_FLAGS_CORRUPTION",
    "FAST_FAIL_VEH_CORRUPTION",
    "FAST_FAIL_ETW_CORRUPTION",
    "FAST_FAIL_RIO_ABORT",
    "FAST_FAIL_INVALID_PFN",
    "FAST_FAIL_GUARD_ICALL_CHECK_FAILURE_XFG",
    "FAST_FAIL_CAST_GUARD",
    "FAST_FAIL_HOST_VISIBILITY_CHANGE",
    "FAST_FAIL_KERNEL_CET_SHADOW_STACK_ASSIST",
    "FAST_FAIL_PATCH_CALLBACK_FAILED",
    "FAST_FAIL_NTDLL_PATCH_FAILED",
    "FAST_FAIL_INVALID_FLS_DATA",
    "FAST_FAIL_INVALID_FAST_FAIL_CODE",
    "IS_TEXT_UNICODE_DBCS_LEADBYTE",
    "IS_TEXT_UNICODE_UTF8",
    "COMPRESSION_FORMAT_NONE",
    "COMPRESSION_FORMAT_DEFAULT",
    "COMPRESSION_FORMAT_LZNT1",
    "COMPRESSION_FORMAT_XPRESS",
    "COMPRESSION_FORMAT_XPRESS_HUFF",
    "COMPRESSION_FORMAT_XP10",
    "COMPRESSION_ENGINE_STANDARD",
    "COMPRESSION_ENGINE_MAXIMUM",
    "COMPRESSION_ENGINE_HIBER",
    "SEF_AI_USE_EXTRA_PARAMS",
    "SEF_FORCE_USER_MODE",
    "MESSAGE_RESOURCE_UNICODE",
    "MESSAGE_RESOURCE_UTF8",
    "VER_EQUAL",
    "VER_GREATER",
    "VER_GREATER_EQUAL",
    "VER_LESS",
    "VER_LESS_EQUAL",
    "VER_AND",
    "VER_OR",
    "VER_CONDITION_MASK",
    "VER_NUM_BITS_PER_CONDITION_MASK",
    "VER_NT_WORKSTATION",
    "VER_NT_DOMAIN_CONTROLLER",
    "VER_NT_SERVER",
    "RTL_UMS_VERSION",
    "VRL_PREDEFINED_CLASS_BEGIN",
    "VRL_CUSTOM_CLASS_BEGIN",
    "VRL_ENABLE_KERNEL_BREAKS",
    "CTMF_INCLUDE_APPCONTAINER",
    "CTMF_INCLUDE_LPAC",
    "FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN",
    "WRITE_NV_MEMORY_FLAG_FLUSH",
    "WRITE_NV_MEMORY_FLAG_NON_TEMPORAL",
    "WRITE_NV_MEMORY_FLAG_NO_DRAIN",
    "FILL_NV_MEMORY_FLAG_FLUSH",
    "FILL_NV_MEMORY_FLAG_NON_TEMPORAL",
    "FILL_NV_MEMORY_FLAG_NO_DRAIN",
    "IMAGE_POLICY_METADATA_VERSION",
    "RTL_VIRTUAL_UNWIND2_VALIDATE_PAC",
    "RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO",
    "RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN",
    "RTL_CRITICAL_SECTION_FLAG_STATIC_INIT",
    "RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE",
    "RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO",
    "RTL_CRITICAL_SECTION_ALL_FLAG_BITS",
    "RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT",
    "RTL_CONDITION_VARIABLE_LOCKMODE_SHARED",
    "HEAP_OPTIMIZE_RESOURCES_CURRENT_VERSION",
    "WT_EXECUTEINUITHREAD",
    "WT_EXECUTEINPERSISTENTIOTHREAD",
    "WT_EXECUTEINLONGTHREAD",
    "WT_EXECUTEDELETEWAIT",
    "ACTIVATION_CONTEXT_PATH_TYPE_NONE",
    "ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE",
    "ACTIVATION_CONTEXT_PATH_TYPE_URL",
    "ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF",
    "CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID",
    "PERFORMANCE_DATA_VERSION",
    "READ_THREAD_PROFILING_FLAG_DISPATCHING",
    "READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS",
    "UNIFIEDBUILDREVISION_MIN",
    "DLL_PROCESS_ATTACH",
    "DLL_THREAD_ATTACH",
    "DLL_THREAD_DETACH",
    "DLL_PROCESS_DETACH",
    "EVENTLOG_FORWARDS_READ",
    "EVENTLOG_BACKWARDS_READ",
    "EVENTLOG_START_PAIRED_EVENT",
    "EVENTLOG_END_PAIRED_EVENT",
    "EVENTLOG_END_ALL_PAIRED_EVENTS",
    "EVENTLOG_PAIRED_EVENT_ACTIVE",
    "EVENTLOG_PAIRED_EVENT_INACTIVE",
    "MAXLOGICALLOGNAMESIZE",
    "REG_REFRESH_HIVE",
    "REG_NO_LAZY_FLUSH",
    "REG_APP_HIVE",
    "REG_PROCESS_PRIVATE",
    "REG_START_JOURNAL",
    "REG_HIVE_EXACT_FILE_GROWTH",
    "REG_HIVE_NO_RM",
    "REG_HIVE_SINGLE_LOG",
    "REG_BOOT_HIVE",
    "REG_LOAD_HIVE_OPEN_HANDLE",
    "REG_FLUSH_HIVE_FILE_GROWTH",
    "REG_OPEN_READ_ONLY",
    "REG_IMMUTABLE",
    "REG_NO_IMPERSONATION_FALLBACK",
    "REG_APP_HIVE_OPEN_READ_ONLY",
    "REG_FORCE_UNLOAD",
    "REG_UNLOAD_LEGAL_FLAGS",
    "SERVICE_USER_SERVICE",
    "SERVICE_USERSERVICE_INSTANCE",
    "SERVICE_INTERACTIVE_PROCESS",
    "SERVICE_PKG_SERVICE",
    "CM_SERVICE_NETWORK_BOOT_LOAD",
    "CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD",
    "CM_SERVICE_USB_DISK_BOOT_LOAD",
    "CM_SERVICE_SD_DISK_BOOT_LOAD",
    "CM_SERVICE_USB3_DISK_BOOT_LOAD",
    "CM_SERVICE_MEASURED_BOOT_LOAD",
    "CM_SERVICE_VERIFIER_BOOT_LOAD",
    "CM_SERVICE_WINPE_BOOT_LOAD",
    "CM_SERVICE_RAM_DISK_BOOT_LOAD",
    "TAPE_PSEUDO_LOGICAL_POSITION",
    "TAPE_PSEUDO_LOGICAL_BLOCK",
    "TAPE_DRIVE_FIXED",
    "TAPE_DRIVE_SELECT",
    "TAPE_DRIVE_INITIATOR",
    "TAPE_DRIVE_ERASE_SHORT",
    "TAPE_DRIVE_ERASE_LONG",
    "TAPE_DRIVE_ERASE_BOP_ONLY",
    "TAPE_DRIVE_ERASE_IMMEDIATE",
    "TAPE_DRIVE_TAPE_CAPACITY",
    "TAPE_DRIVE_TAPE_REMAINING",
    "TAPE_DRIVE_FIXED_BLOCK",
    "TAPE_DRIVE_VARIABLE_BLOCK",
    "TAPE_DRIVE_WRITE_PROTECT",
    "TAPE_DRIVE_EOT_WZ_SIZE",
    "TAPE_DRIVE_ECC",
    "TAPE_DRIVE_COMPRESSION",
    "TAPE_DRIVE_PADDING",
    "TAPE_DRIVE_REPORT_SMKS",
    "TAPE_DRIVE_GET_ABSOLUTE_BLK",
    "TAPE_DRIVE_GET_LOGICAL_BLK",
    "TAPE_DRIVE_SET_EOT_WZ_SIZE",
    "TAPE_DRIVE_EJECT_MEDIA",
    "TAPE_DRIVE_CLEAN_REQUESTS",
    "TAPE_DRIVE_SET_CMP_BOP_ONLY",
    "TAPE_DRIVE_RESERVED_BIT",
    "TAPE_DRIVE_FORMAT",
    "TAPE_DRIVE_FORMAT_IMMEDIATE",
    "TAPE_DRIVE_HIGH_FEATURES",
    "TAPE_QUERY_DRIVE_PARAMETERS",
    "TAPE_QUERY_MEDIA_CAPACITY",
    "TAPE_CHECK_FOR_DRIVE_PROBLEM",
    "TAPE_QUERY_IO_ERROR_DATA",
    "TAPE_QUERY_DEVICE_ERROR_DATA",
    "TRANSACTIONMANAGER_QUERY_INFORMATION",
    "TRANSACTIONMANAGER_SET_INFORMATION",
    "TRANSACTIONMANAGER_RECOVER",
    "TRANSACTIONMANAGER_RENAME",
    "TRANSACTIONMANAGER_CREATE_RM",
    "TRANSACTIONMANAGER_BIND_TRANSACTION",
    "TRANSACTION_QUERY_INFORMATION",
    "TRANSACTION_SET_INFORMATION",
    "TRANSACTION_ENLIST",
    "TRANSACTION_COMMIT",
    "TRANSACTION_ROLLBACK",
    "TRANSACTION_PROPAGATE",
    "TRANSACTION_RIGHT_RESERVED1",
    "RESOURCEMANAGER_QUERY_INFORMATION",
    "RESOURCEMANAGER_SET_INFORMATION",
    "RESOURCEMANAGER_RECOVER",
    "RESOURCEMANAGER_ENLIST",
    "RESOURCEMANAGER_GET_NOTIFICATION",
    "RESOURCEMANAGER_REGISTER_PROTOCOL",
    "RESOURCEMANAGER_COMPLETE_PROPAGATION",
    "ENLISTMENT_QUERY_INFORMATION",
    "ENLISTMENT_SET_INFORMATION",
    "ENLISTMENT_RECOVER",
    "ENLISTMENT_SUBORDINATE_RIGHTS",
    "ENLISTMENT_SUPERIOR_RIGHTS",
    "PcTeb",
    "ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION",
    "ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION",
    "ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION",
    "ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION",
    "ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION",
    "ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION",
    "ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION",
    "ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE",
    "ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES",
    "ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS",
    "ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO",
    "ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES",
    "BSF_MSGSRV32ISOK",
    "BSF_MSGSRV32ISOK_BIT",
    "DBT_APPYBEGIN",
    "DBT_APPYEND",
    "DBT_DEVNODES_CHANGED",
    "DBT_QUERYCHANGECONFIG",
    "DBT_CONFIGCHANGED",
    "DBT_CONFIGCHANGECANCELED",
    "DBT_MONITORCHANGE",
    "DBT_SHELLLOGGEDON",
    "DBT_CONFIGMGAPI32",
    "DBT_VXDINITCOMPLETE",
    "DBT_VOLLOCKQUERYLOCK",
    "DBT_VOLLOCKLOCKTAKEN",
    "DBT_VOLLOCKLOCKFAILED",
    "DBT_VOLLOCKQUERYUNLOCK",
    "DBT_VOLLOCKLOCKRELEASED",
    "DBT_VOLLOCKUNLOCKFAILED",
    "LOCKP_ALLOW_WRITES",
    "LOCKP_FAIL_WRITES",
    "LOCKP_FAIL_MEM_MAPPING",
    "LOCKP_ALLOW_MEM_MAPPING",
    "LOCKP_USER_MASK",
    "LOCKP_LOCK_FOR_FORMAT",
    "LOCKF_LOGICAL_LOCK",
    "LOCKF_PHYSICAL_LOCK",
    "DBT_NO_DISK_SPACE",
    "DBT_LOW_DISK_SPACE",
    "DBT_CONFIGMGPRIVATE",
    "DBT_DEVICEARRIVAL",
    "DBT_DEVICEQUERYREMOVE",
    "DBT_DEVICEQUERYREMOVEFAILED",
    "DBT_DEVICEREMOVEPENDING",
    "DBT_DEVICEREMOVECOMPLETE",
    "DBT_DEVICETYPESPECIFIC",
    "DBT_CUSTOMEVENT",
    "DBT_DEVTYP_DEVNODE",
    "DBT_DEVTYP_NET",
    "DBTF_RESOURCE",
    "DBTF_XPORT",
    "DBTF_SLOWNET",
    "DBT_VPOWERDAPI",
    "DBT_USERDEFINED",
    "GUID_IO_VOLUME_CHANGE",
    "GUID_IO_VOLUME_DISMOUNT",
    "GUID_IO_VOLUME_DISMOUNT_FAILED",
    "GUID_IO_VOLUME_MOUNT",
    "GUID_IO_VOLUME_LOCK",
    "GUID_IO_VOLUME_LOCK_FAILED",
    "GUID_IO_VOLUME_UNLOCK",
    "GUID_IO_VOLUME_NAME_CHANGE",
    "GUID_IO_VOLUME_NEED_CHKDSK",
    "GUID_IO_VOLUME_WORM_NEAR_FULL",
    "GUID_IO_VOLUME_WEARING_OUT",
    "GUID_IO_VOLUME_FORCE_CLOSED",
    "GUID_IO_VOLUME_INFO_MAKE_COMPAT",
    "GUID_IO_VOLUME_PREPARING_EJECT",
    "GUID_IO_VOLUME_BACKGROUND_FORMAT",
    "GUID_IO_VOLUME_PHYSICAL_CONFIGURATION_CHANGE",
    "GUID_IO_VOLUME_UNIQUE_ID_CHANGE",
    "GUID_IO_VOLUME_FVE_STATUS_CHANGE",
    "GUID_IO_VOLUME_DEVICE_INTERFACE",
    "GUID_IO_VOLUME_CHANGE_SIZE",
    "GUID_IO_MEDIA_ARRIVAL",
    "GUID_IO_MEDIA_REMOVAL",
    "GUID_IO_CDROM_EXCLUSIVE_LOCK",
    "GUID_IO_CDROM_EXCLUSIVE_UNLOCK",
    "GUID_IO_DEVICE_BECOMING_READY",
    "GUID_IO_DEVICE_EXTERNAL_REQUEST",
    "GUID_IO_MEDIA_EJECT_REQUEST",
    "GUID_IO_DRIVE_REQUIRES_CLEANING",
    "GUID_IO_TAPE_ERASE",
    "GUID_DEVICE_EVENT_RBC",
    "GUID_IO_DISK_CLONE_ARRIVAL",
    "GUID_IO_DISK_LAYOUT_CHANGE",
    "GUID_IO_DISK_HEALTH_NOTIFICATION",
    "D3DNTHAL_NUMCLIPVERTICES",
    "D3DNTHAL_SCENE_CAPTURE_START",
    "D3DNTHAL_SCENE_CAPTURE_END",
    "D3DNTHAL_CONTEXT_BAD",
    "D3DNTHAL_OUTOFCONTEXTS",
    "D3DNTHAL2_CB32_SETRENDERTARGET",
    "D3DHAL_STATESETBEGIN",
    "D3DHAL_STATESETEND",
    "D3DHAL_STATESETDELETE",
    "D3DHAL_STATESETEXECUTE",
    "D3DHAL_STATESETCAPTURE",
    "D3DNTHALDP2_USERMEMVERTICES",
    "D3DNTHALDP2_EXECUTEBUFFER",
    "D3DNTHALDP2_SWAPVERTEXBUFFER",
    "D3DNTHALDP2_SWAPCOMMANDBUFFER",
    "D3DNTHALDP2_REQVERTEXBUFSIZE",
    "D3DNTHALDP2_REQCOMMANDBUFSIZE",
    "D3DNTHALDP2_VIDMEMVERTEXBUF",
    "D3DNTHALDP2_VIDMEMCOMMANDBUF",
    "D3DNTHAL3_CB32_CLEAR2",
    "D3DNTHAL3_CB32_RESERVED",
    "D3DNTHAL3_CB32_VALIDATETEXTURESTAGESTATE",
    "D3DNTHAL3_CB32_DRAWPRIMITIVES2",
    "D3DNTHAL_TSS_RENDERSTATEBASE",
    "D3DNTHAL_TSS_MAXSTAGES",
    "D3DNTHAL_TSS_STATESPERSTAGE",
    "D3DTSS_TEXTUREMAP",
    "D3DHAL_SAMPLER_MAXSAMP",
    "D3DHAL_SAMPLER_MAXVERTEXSAMP",
    "D3DPMISCCAPS_LINEPATTERNREP",
    "D3DRS_MAXVERTEXSHADERINST",
    "D3DRS_MAXPIXELSHADERINST",
    "D3DRENDERSTATE_EVICTMANAGEDTEXTURES",
    "D3DRENDERSTATE_SCENECAPTURE",
    "_NT_D3DRS_DELETERTPATCH",
    "D3DINFINITEINSTRUCTIONS",
    "D3DNTHAL_STATESETCREATE",
    "D3DNTCLEAR_COMPUTERECTS",
    "_NT_RTPATCHFLAG_HASSEGS",
    "_NT_RTPATCHFLAG_HASINFO",
    "D3DNTHAL_ROW_WEIGHTS",
    "D3DNTHAL_COL_WEIGHTS",
    "DP2BLT_POINT",
    "DP2BLT_LINEAR",
    "DDBLT_EXTENDED_PRESENTATION_STRETCHFACTOR",
    "_NT_D3DGDI2_MAGIC",
    "_NT_D3DGDI2_TYPE_GETD3DCAPS8",
    "_NT_D3DGDI2_TYPE_GETFORMATCOUNT",
    "_NT_D3DGDI2_TYPE_GETFORMAT",
    "_NT_D3DGDI2_TYPE_DXVERSION",
    "_NT_D3DGDI2_TYPE_DEFERRED_AGP_AWARE",
    "_NT_D3DGDI2_TYPE_FREE_DEFERRED_AGP",
    "_NT_D3DGDI2_TYPE_DEFER_AGP_FREES",
    "_NT_D3DGDI2_TYPE_GETD3DCAPS9",
    "_NT_D3DGDI2_TYPE_GETEXTENDEDMODECOUNT",
    "_NT_D3DGDI2_TYPE_GETEXTENDEDMODE",
    "_NT_D3DGDI2_TYPE_GETADAPTERGROUP",
    "_NT_D3DGDI2_TYPE_GETMULTISAMPLEQUALITYLEVELS",
    "_NT_D3DGDI2_TYPE_GETD3DQUERYCOUNT",
    "_NT_D3DGDI2_TYPE_GETD3DQUERY",
    "_NT_D3DGDI2_TYPE_GETDDIVERSION",
    "DX9_DDI_VERSION",
    "_NT_D3DDEVCAPS_HWVERTEXBUFFER",
    "_NT_D3DDEVCAPS_HWINDEXBUFFER",
    "_NT_D3DDEVCAPS_SUBVOLUMELOCK",
    "_NT_D3DPMISCCAPS_FOGINFVF",
    "_NT_D3DFVF_FOG",
    "D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE",
    "_NT_D3DVS_MAXINSTRUCTIONCOUNT_V1_1",
    "_NT_D3DVS_LABEL_MAX_V3_0",
    "_NT_D3DVS_TCRDOUTREG_MAX_V1_1",
    "_NT_D3DVS_TCRDOUTREG_MAX_V2_0",
    "_NT_D3DVS_TCRDOUTREG_MAX_V2_1",
    "_NT_D3DVS_OUTPUTREG_MAX_V3_0",
    "_NT_D3DVS_OUTPUTREG_MAX_SW_DX9",
    "_NT_D3DVS_ATTROUTREG_MAX_V1_1",
    "_NT_D3DVS_ATTROUTREG_MAX_V2_0",
    "_NT_D3DVS_ATTROUTREG_MAX_V2_1",
    "_NT_D3DVS_INPUTREG_MAX_V1_1",
    "_NT_D3DVS_INPUTREG_MAX_V2_0",
    "_NT_D3DVS_INPUTREG_MAX_V2_1",
    "_NT_D3DVS_INPUTREG_MAX_V3_0",
    "_NT_D3DVS_TEMPREG_MAX_V1_1",
    "_NT_D3DVS_TEMPREG_MAX_V2_0",
    "_NT_D3DVS_TEMPREG_MAX_V2_1",
    "_NT_D3DVS_TEMPREG_MAX_V3_0",
    "_NT_D3DVS_CONSTREG_MAX_V1_1",
    "_NT_D3DVS_CONSTREG_MAX_V2_0",
    "_NT_D3DVS_CONSTREG_MAX_V2_1",
    "_NT_D3DVS_CONSTREG_MAX_V3_0",
    "_NT_D3DVS_CONSTINTREG_MAX_SW_DX9",
    "_NT_D3DVS_CONSTINTREG_MAX_V2_0",
    "_NT_D3DVS_CONSTINTREG_MAX_V2_1",
    "_NT_D3DVS_CONSTINTREG_MAX_V3_0",
    "_NT_D3DVS_CONSTBOOLREG_MAX_SW_DX9",
    "_NT_D3DVS_CONSTBOOLREG_MAX_V2_0",
    "_NT_D3DVS_CONSTBOOLREG_MAX_V2_1",
    "_NT_D3DVS_CONSTBOOLREG_MAX_V3_0",
    "_NT_D3DVS_ADDRREG_MAX_V1_1",
    "_NT_D3DVS_ADDRREG_MAX_V2_0",
    "_NT_D3DVS_ADDRREG_MAX_V2_1",
    "_NT_D3DVS_ADDRREG_MAX_V3_0",
    "_NT_D3DVS_MAXLOOPSTEP_V2_0",
    "_NT_D3DVS_MAXLOOPSTEP_V2_1",
    "_NT_D3DVS_MAXLOOPSTEP_V3_0",
    "_NT_D3DVS_MAXLOOPINITVALUE_V2_0",
    "_NT_D3DVS_MAXLOOPINITVALUE_V2_1",
    "_NT_D3DVS_MAXLOOPINITVALUE_V3_0",
    "_NT_D3DVS_MAXLOOPITERATIONCOUNT_V2_0",
    "_NT_D3DVS_MAXLOOPITERATIONCOUNT_V2_1",
    "_NT_D3DVS_MAXLOOPITERATIONCOUNT_V3_0",
    "_NT_D3DVS_PREDICATE_MAX_V2_1",
    "_NT_D3DVS_PREDICATE_MAX_V3_0",
    "_NT_D3DPS_INPUTREG_MAX_V1_1",
    "_NT_D3DPS_INPUTREG_MAX_V1_2",
    "_NT_D3DPS_INPUTREG_MAX_V1_3",
    "_NT_D3DPS_INPUTREG_MAX_V1_4",
    "_NT_D3DPS_INPUTREG_MAX_V2_0",
    "_NT_D3DPS_INPUTREG_MAX_V2_1",
    "_NT_D3DPS_INPUTREG_MAX_V3_0",
    "_NT_D3DPS_TEMPREG_MAX_V1_1",
    "_NT_D3DPS_TEMPREG_MAX_V1_2",
    "_NT_D3DPS_TEMPREG_MAX_V1_3",
    "_NT_D3DPS_TEMPREG_MAX_V1_4",
    "_NT_D3DPS_TEMPREG_MAX_V2_0",
    "_NT_D3DPS_TEMPREG_MAX_V2_1",
    "_NT_D3DPS_TEMPREG_MAX_V3_0",
    "_NT_D3DPS_TEXTUREREG_MAX_V1_1",
    "_NT_D3DPS_TEXTUREREG_MAX_V1_2",
    "_NT_D3DPS_TEXTUREREG_MAX_V1_3",
    "_NT_D3DPS_TEXTUREREG_MAX_V1_4",
    "_NT_D3DPS_TEXTUREREG_MAX_V2_0",
    "_NT_D3DPS_TEXTUREREG_MAX_V2_1",
    "_NT_D3DPS_TEXTUREREG_MAX_V3_0",
    "_NT_D3DPS_COLOROUT_MAX_V2_0",
    "_NT_D3DPS_COLOROUT_MAX_V2_1",
    "_NT_D3DPS_COLOROUT_MAX_V3_0",
    "_NT_D3DPS_PREDICATE_MAX_V2_1",
    "_NT_D3DPS_PREDICATE_MAX_V3_0",
    "_NT_D3DPS_CONSTREG_MAX_SW_DX9",
    "_NT_D3DPS_CONSTREG_MAX_V1_1",
    "_NT_D3DPS_CONSTREG_MAX_V1_2",
    "_NT_D3DPS_CONSTREG_MAX_V1_3",
    "_NT_D3DPS_CONSTREG_MAX_V1_4",
    "_NT_D3DPS_CONSTREG_MAX_V2_0",
    "_NT_D3DPS_CONSTREG_MAX_V2_1",
    "_NT_D3DPS_CONSTREG_MAX_V3_0",
    "_NT_D3DPS_CONSTBOOLREG_MAX_SW_DX9",
    "_NT_D3DPS_CONSTBOOLREG_MAX_V2_1",
    "_NT_D3DPS_CONSTBOOLREG_MAX_V3_0",
    "_NT_D3DPS_CONSTINTREG_MAX_SW_DX9",
    "_NT_D3DPS_CONSTINTREG_MAX_V2_1",
    "_NT_D3DPS_CONSTINTREG_MAX_V3_0",
    "_NT_D3DPS_MAXLOOPSTEP_V2_1",
    "_NT_D3DPS_MAXLOOPSTEP_V3_0",
    "_NT_D3DPS_MAXLOOPINITVALUE_V2_1",
    "_NT_D3DPS_MAXLOOPINITVALUE_V3_0",
    "_NT_D3DPS_MAXLOOPITERATIONCOUNT_V2_1",
    "_NT_D3DPS_MAXLOOPITERATIONCOUNT_V3_0",
    "_NT_D3DPS_INPUTREG_MAX_DX8",
    "_NT_D3DPS_TEMPREG_MAX_DX8",
    "_NT_D3DPS_CONSTREG_MAX_DX8",
    "_NT_D3DPS_TEXTUREREG_MAX_DX8",
    "D3DVSDT_FLOAT1",
    "D3DVSDT_FLOAT2",
    "D3DVSDT_FLOAT3",
    "D3DVSDT_FLOAT4",
    "D3DVSDT_D3DCOLOR",
    "D3DVSDT_UBYTE4",
    "D3DVSDT_SHORT2",
    "D3DVSDT_SHORT4",
    "D3DVSDE_POSITION",
    "D3DVSDE_BLENDWEIGHT",
    "D3DVSDE_BLENDINDICES",
    "D3DVSDE_NORMAL",
    "D3DVSDE_PSIZE",
    "D3DVSDE_DIFFUSE",
    "D3DVSDE_SPECULAR",
    "D3DVSDE_TEXCOORD0",
    "D3DVSDE_TEXCOORD1",
    "D3DVSDE_TEXCOORD2",
    "D3DVSDE_TEXCOORD3",
    "D3DVSDE_TEXCOORD4",
    "D3DVSDE_TEXCOORD5",
    "D3DVSDE_TEXCOORD6",
    "D3DVSDE_TEXCOORD7",
    "D3DVSDE_POSITION2",
    "D3DVSDE_NORMAL2",
    "D3DVSD_TOKENTYPESHIFT",
    "D3DVSD_STREAMNUMBERSHIFT",
    "D3DVSD_DATALOADTYPESHIFT",
    "D3DVSD_DATATYPESHIFT",
    "D3DVSD_SKIPCOUNTSHIFT",
    "D3DVSD_VERTEXREGSHIFT",
    "D3DVSD_VERTEXREGINSHIFT",
    "D3DVSD_CONSTCOUNTSHIFT",
    "D3DVSD_CONSTADDRESSSHIFT",
    "D3DVSD_CONSTRSSHIFT",
    "D3DVSD_EXTCOUNTSHIFT",
    "D3DVSD_EXTINFOSHIFT",
    "D3DVSD_STREAMTESSSHIFT",
    "DIRECT3D_VERSION",
    "D3DTRANSFORMCAPS_CLIP",
    "D3DLIGHTINGMODEL_RGB",
    "D3DLIGHTINGMODEL_MONO",
    "D3DLIGHTCAPS_POINT",
    "D3DLIGHTCAPS_SPOT",
    "D3DLIGHTCAPS_DIRECTIONAL",
    "D3DLIGHTCAPS_PARALLELPOINT",
    "D3DLIGHTCAPS_GLSPOT",
    "D3DPMISCCAPS_MASKPLANES",
    "D3DPMISCCAPS_MASKZ",
    "D3DPMISCCAPS_CONFORMANT",
    "D3DPMISCCAPS_CULLNONE",
    "D3DPMISCCAPS_CULLCW",
    "D3DPMISCCAPS_CULLCCW",
    "D3DPRASTERCAPS_DITHER",
    "D3DPRASTERCAPS_ROP2",
    "D3DPRASTERCAPS_XOR",
    "D3DPRASTERCAPS_PAT",
    "D3DPRASTERCAPS_ZTEST",
    "D3DPRASTERCAPS_SUBPIXEL",
    "D3DPRASTERCAPS_SUBPIXELX",
    "D3DPRASTERCAPS_FOGVERTEX",
    "D3DPRASTERCAPS_FOGTABLE",
    "D3DPRASTERCAPS_STIPPLE",
    "D3DPRASTERCAPS_ANTIALIASSORTDEPENDENT",
    "D3DPRASTERCAPS_ANTIALIASSORTINDEPENDENT",
    "D3DPRASTERCAPS_ANTIALIASEDGES",
    "D3DPRASTERCAPS_MIPMAPLODBIAS",
    "D3DPRASTERCAPS_ZBIAS",
    "D3DPRASTERCAPS_ZBUFFERLESSHSR",
    "D3DPRASTERCAPS_FOGRANGE",
    "D3DPRASTERCAPS_ANISOTROPY",
    "D3DPRASTERCAPS_WBUFFER",
    "D3DPRASTERCAPS_TRANSLUCENTSORTINDEPENDENT",
    "D3DPRASTERCAPS_WFOG",
    "D3DPRASTERCAPS_ZFOG",
    "D3DPCMPCAPS_NEVER",
    "D3DPCMPCAPS_LESS",
    "D3DPCMPCAPS_EQUAL",
    "D3DPCMPCAPS_LESSEQUAL",
    "D3DPCMPCAPS_GREATER",
    "D3DPCMPCAPS_NOTEQUAL",
    "D3DPCMPCAPS_GREATEREQUAL",
    "D3DPCMPCAPS_ALWAYS",
    "D3DPBLENDCAPS_ZERO",
    "D3DPBLENDCAPS_ONE",
    "D3DPBLENDCAPS_SRCCOLOR",
    "D3DPBLENDCAPS_INVSRCCOLOR",
    "D3DPBLENDCAPS_SRCALPHA",
    "D3DPBLENDCAPS_INVSRCALPHA",
    "D3DPBLENDCAPS_DESTALPHA",
    "D3DPBLENDCAPS_INVDESTALPHA",
    "D3DPBLENDCAPS_DESTCOLOR",
    "D3DPBLENDCAPS_INVDESTCOLOR",
    "D3DPBLENDCAPS_SRCALPHASAT",
    "D3DPBLENDCAPS_BOTHSRCALPHA",
    "D3DPBLENDCAPS_BOTHINVSRCALPHA",
    "D3DPSHADECAPS_COLORFLATMONO",
    "D3DPSHADECAPS_COLORFLATRGB",
    "D3DPSHADECAPS_COLORGOURAUDMONO",
    "D3DPSHADECAPS_COLORGOURAUDRGB",
    "D3DPSHADECAPS_COLORPHONGMONO",
    "D3DPSHADECAPS_COLORPHONGRGB",
    "D3DPSHADECAPS_SPECULARFLATMONO",
    "D3DPSHADECAPS_SPECULARFLATRGB",
    "D3DPSHADECAPS_SPECULARGOURAUDMONO",
    "D3DPSHADECAPS_SPECULARGOURAUDRGB",
    "D3DPSHADECAPS_SPECULARPHONGMONO",
    "D3DPSHADECAPS_SPECULARPHONGRGB",
    "D3DPSHADECAPS_ALPHAFLATBLEND",
    "D3DPSHADECAPS_ALPHAFLATSTIPPLED",
    "D3DPSHADECAPS_ALPHAGOURAUDBLEND",
    "D3DPSHADECAPS_ALPHAGOURAUDSTIPPLED",
    "D3DPSHADECAPS_ALPHAPHONGBLEND",
    "D3DPSHADECAPS_ALPHAPHONGSTIPPLED",
    "D3DPSHADECAPS_FOGFLAT",
    "D3DPSHADECAPS_FOGGOURAUD",
    "D3DPSHADECAPS_FOGPHONG",
    "D3DPTEXTURECAPS_PERSPECTIVE",
    "D3DPTEXTURECAPS_POW2",
    "D3DPTEXTURECAPS_ALPHA",
    "D3DPTEXTURECAPS_TRANSPARENCY",
    "D3DPTEXTURECAPS_BORDER",
    "D3DPTEXTURECAPS_SQUAREONLY",
    "D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE",
    "D3DPTEXTURECAPS_ALPHAPALETTE",
    "D3DPTEXTURECAPS_NONPOW2CONDITIONAL",
    "D3DPTEXTURECAPS_PROJECTED",
    "D3DPTEXTURECAPS_CUBEMAP",
    "D3DPTEXTURECAPS_COLORKEYBLEND",
    "D3DPTFILTERCAPS_NEAREST",
    "D3DPTFILTERCAPS_LINEAR",
    "D3DPTFILTERCAPS_MIPNEAREST",
    "D3DPTFILTERCAPS_MIPLINEAR",
    "D3DPTFILTERCAPS_LINEARMIPNEAREST",
    "D3DPTFILTERCAPS_LINEARMIPLINEAR",
    "D3DPTFILTERCAPS_MINFPOINT",
    "D3DPTFILTERCAPS_MINFLINEAR",
    "D3DPTFILTERCAPS_MINFANISOTROPIC",
    "D3DPTFILTERCAPS_MIPFPOINT",
    "D3DPTFILTERCAPS_MIPFLINEAR",
    "D3DPTFILTERCAPS_MAGFPOINT",
    "D3DPTFILTERCAPS_MAGFLINEAR",
    "D3DPTFILTERCAPS_MAGFANISOTROPIC",
    "D3DPTFILTERCAPS_MAGFAFLATCUBIC",
    "D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC",
    "D3DPTBLENDCAPS_DECAL",
    "D3DPTBLENDCAPS_MODULATE",
    "D3DPTBLENDCAPS_DECALALPHA",
    "D3DPTBLENDCAPS_MODULATEALPHA",
    "D3DPTBLENDCAPS_DECALMASK",
    "D3DPTBLENDCAPS_MODULATEMASK",
    "D3DPTBLENDCAPS_COPY",
    "D3DPTBLENDCAPS_ADD",
    "D3DPTADDRESSCAPS_WRAP",
    "D3DPTADDRESSCAPS_MIRROR",
    "D3DPTADDRESSCAPS_CLAMP",
    "D3DPTADDRESSCAPS_BORDER",
    "D3DPTADDRESSCAPS_INDEPENDENTUV",
    "D3DSTENCILCAPS_KEEP",
    "D3DSTENCILCAPS_ZERO",
    "D3DSTENCILCAPS_REPLACE",
    "D3DSTENCILCAPS_INCRSAT",
    "D3DSTENCILCAPS_DECRSAT",
    "D3DSTENCILCAPS_INVERT",
    "D3DSTENCILCAPS_INCR",
    "D3DSTENCILCAPS_DECR",
    "D3DTEXOPCAPS_DISABLE",
    "D3DTEXOPCAPS_SELECTARG1",
    "D3DTEXOPCAPS_SELECTARG2",
    "D3DTEXOPCAPS_MODULATE",
    "D3DTEXOPCAPS_MODULATE2X",
    "D3DTEXOPCAPS_MODULATE4X",
    "D3DTEXOPCAPS_ADD",
    "D3DTEXOPCAPS_ADDSIGNED",
    "D3DTEXOPCAPS_ADDSIGNED2X",
    "D3DTEXOPCAPS_SUBTRACT",
    "D3DTEXOPCAPS_ADDSMOOTH",
    "D3DTEXOPCAPS_BLENDDIFFUSEALPHA",
    "D3DTEXOPCAPS_BLENDTEXTUREALPHA",
    "D3DTEXOPCAPS_BLENDFACTORALPHA",
    "D3DTEXOPCAPS_BLENDTEXTUREALPHAPM",
    "D3DTEXOPCAPS_BLENDCURRENTALPHA",
    "D3DTEXOPCAPS_PREMODULATE",
    "D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR",
    "D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA",
    "D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR",
    "D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA",
    "D3DTEXOPCAPS_BUMPENVMAP",
    "D3DTEXOPCAPS_BUMPENVMAPLUMINANCE",
    "D3DTEXOPCAPS_DOTPRODUCT3",
    "D3DFVFCAPS_TEXCOORDCOUNTMASK",
    "D3DFVFCAPS_DONOTSTRIPELEMENTS",
    "D3DDD_COLORMODEL",
    "D3DDD_DEVCAPS",
    "D3DDD_TRANSFORMCAPS",
    "D3DDD_LIGHTINGCAPS",
    "D3DDD_BCLIPPING",
    "D3DDD_LINECAPS",
    "D3DDD_TRICAPS",
    "D3DDD_DEVICERENDERBITDEPTH",
    "D3DDD_DEVICEZBUFFERBITDEPTH",
    "D3DDD_MAXBUFFERSIZE",
    "D3DDD_MAXVERTEXCOUNT",
    "D3DDEVCAPS_FLOATTLVERTEX",
    "D3DDEVCAPS_SORTINCREASINGZ",
    "D3DDEVCAPS_SORTDECREASINGZ",
    "D3DDEVCAPS_SORTEXACT",
    "D3DDEVCAPS_EXECUTESYSTEMMEMORY",
    "D3DDEVCAPS_EXECUTEVIDEOMEMORY",
    "D3DDEVCAPS_TLVERTEXSYSTEMMEMORY",
    "D3DDEVCAPS_TLVERTEXVIDEOMEMORY",
    "D3DDEVCAPS_TEXTURESYSTEMMEMORY",
    "D3DDEVCAPS_TEXTUREVIDEOMEMORY",
    "D3DDEVCAPS_DRAWPRIMTLVERTEX",
    "D3DDEVCAPS_CANRENDERAFTERFLIP",
    "D3DDEVCAPS_TEXTURENONLOCALVIDMEM",
    "D3DDEVCAPS_DRAWPRIMITIVES2",
    "D3DDEVCAPS_SEPARATETEXTUREMEMORIES",
    "D3DDEVCAPS_DRAWPRIMITIVES2EX",
    "D3DDEVCAPS_HWTRANSFORMANDLIGHT",
    "D3DDEVCAPS_CANBLTSYSTONONLOCAL",
    "D3DDEVCAPS_HWRASTERIZATION",
    "D3DVTXPCAPS_TEXGEN",
    "D3DVTXPCAPS_MATERIALSOURCE7",
    "D3DVTXPCAPS_VERTEXFOG",
    "D3DVTXPCAPS_DIRECTIONALLIGHTS",
    "D3DVTXPCAPS_POSITIONALLIGHTS",
    "D3DVTXPCAPS_LOCALVIEWER",
    "D3DFDS_COLORMODEL",
    "D3DFDS_GUID",
    "D3DFDS_HARDWARE",
    "D3DFDS_TRIANGLES",
    "D3DFDS_LINES",
    "D3DFDS_MISCCAPS",
    "D3DFDS_RASTERCAPS",
    "D3DFDS_ZCMPCAPS",
    "D3DFDS_ALPHACMPCAPS",
    "D3DFDS_SRCBLENDCAPS",
    "D3DFDS_DSTBLENDCAPS",
    "D3DFDS_SHADECAPS",
    "D3DFDS_TEXTURECAPS",
    "D3DFDS_TEXTUREFILTERCAPS",
    "D3DFDS_TEXTUREBLENDCAPS",
    "D3DFDS_TEXTUREADDRESSCAPS",
    "D3DDEB_BUFSIZE",
    "D3DDEB_CAPS",
    "D3DDEB_LPDATA",
    "D3DDEBCAPS_SYSTEMMEMORY",
    "D3DDEBCAPS_VIDEOMEMORY",
    "D3DMAXUSERCLIPPLANES",
    "D3DCLIPPLANE0",
    "D3DCLIPPLANE1",
    "D3DCLIPPLANE2",
    "D3DCLIPPLANE3",
    "D3DCLIPPLANE4",
    "D3DCLIPPLANE5",
    "D3DCLIP_LEFT",
    "D3DCLIP_RIGHT",
    "D3DCLIP_TOP",
    "D3DCLIP_BOTTOM",
    "D3DCLIP_FRONT",
    "D3DCLIP_BACK",
    "D3DCLIP_GEN0",
    "D3DCLIP_GEN1",
    "D3DCLIP_GEN2",
    "D3DCLIP_GEN3",
    "D3DCLIP_GEN4",
    "D3DCLIP_GEN5",
    "D3DSTATUS_CLIPUNIONLEFT",
    "D3DSTATUS_CLIPUNIONRIGHT",
    "D3DSTATUS_CLIPUNIONTOP",
    "D3DSTATUS_CLIPUNIONBOTTOM",
    "D3DSTATUS_CLIPUNIONFRONT",
    "D3DSTATUS_CLIPUNIONBACK",
    "D3DSTATUS_CLIPUNIONGEN0",
    "D3DSTATUS_CLIPUNIONGEN1",
    "D3DSTATUS_CLIPUNIONGEN2",
    "D3DSTATUS_CLIPUNIONGEN3",
    "D3DSTATUS_CLIPUNIONGEN4",
    "D3DSTATUS_CLIPUNIONGEN5",
    "D3DSTATUS_CLIPINTERSECTIONLEFT",
    "D3DSTATUS_CLIPINTERSECTIONRIGHT",
    "D3DSTATUS_CLIPINTERSECTIONTOP",
    "D3DSTATUS_CLIPINTERSECTIONBOTTOM",
    "D3DSTATUS_CLIPINTERSECTIONFRONT",
    "D3DSTATUS_CLIPINTERSECTIONBACK",
    "D3DSTATUS_CLIPINTERSECTIONGEN0",
    "D3DSTATUS_CLIPINTERSECTIONGEN1",
    "D3DSTATUS_CLIPINTERSECTIONGEN2",
    "D3DSTATUS_CLIPINTERSECTIONGEN3",
    "D3DSTATUS_CLIPINTERSECTIONGEN4",
    "D3DSTATUS_CLIPINTERSECTIONGEN5",
    "D3DSTATUS_ZNOTVISIBLE",
    "D3DTRANSFORM_CLIPPED",
    "D3DTRANSFORM_UNCLIPPED",
    "D3DLIGHT_ACTIVE",
    "D3DLIGHT_NO_SPECULAR",
    "D3DCOLOR_MONO",
    "D3DCOLOR_RGB",
    "D3DCLEAR_TARGET",
    "D3DCLEAR_ZBUFFER",
    "D3DCLEAR_STENCIL",
    "D3DSTATE_OVERRIDE_BIAS",
    "D3DRENDERSTATE_WRAPBIAS",
    "D3DWRAP_U",
    "D3DWRAP_V",
    "D3DWRAPCOORD_0",
    "D3DWRAPCOORD_1",
    "D3DWRAPCOORD_2",
    "D3DWRAPCOORD_3",
    "D3DPROCESSVERTICES_TRANSFORMLIGHT",
    "D3DPROCESSVERTICES_TRANSFORM",
    "D3DPROCESSVERTICES_COPY",
    "D3DPROCESSVERTICES_OPMASK",
    "D3DPROCESSVERTICES_UPDATEEXTENTS",
    "D3DPROCESSVERTICES_NOCOLOR",
    "D3DTSS_TCI_PASSTHRU",
    "D3DTSS_TCI_CAMERASPACENORMAL",
    "D3DTSS_TCI_CAMERASPACEPOSITION",
    "D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR",
    "D3DTA_SELECTMASK",
    "D3DTA_DIFFUSE",
    "D3DTA_CURRENT",
    "D3DTA_TEXTURE",
    "D3DTA_TFACTOR",
    "D3DTA_SPECULAR",
    "D3DTA_COMPLEMENT",
    "D3DTA_ALPHAREPLICATE",
    "D3DTRIFLAG_START",
    "D3DTRIFLAG_ODD",
    "D3DTRIFLAG_EVEN",
    "D3DTRIFLAG_EDGEENABLE1",
    "D3DTRIFLAG_EDGEENABLE2",
    "D3DTRIFLAG_EDGEENABLE3",
    "D3DSETSTATUS_STATUS",
    "D3DSETSTATUS_EXTENTS",
    "D3DCLIPSTATUS_STATUS",
    "D3DCLIPSTATUS_EXTENTS2",
    "D3DCLIPSTATUS_EXTENTS3",
    "D3DEXECUTE_CLIPPED",
    "D3DEXECUTE_UNCLIPPED",
    "D3DPAL_FREE",
    "D3DPAL_READONLY",
    "D3DPAL_RESERVED",
    "D3DVBCAPS_SYSTEMMEMORY",
    "D3DVBCAPS_WRITEONLY",
    "D3DVBCAPS_OPTIMIZED",
    "D3DVBCAPS_DONOTCLIP",
    "D3DVOP_LIGHT",
    "D3DVOP_TRANSFORM",
    "D3DVOP_CLIP",
    "D3DVOP_EXTENTS",
    "D3DPV_DONOTCOPYDATA",
    "D3DFVF_RESERVED0",
    "D3DFVF_POSITION_MASK",
    "D3DFVF_XYZ",
    "D3DFVF_XYZRHW",
    "D3DFVF_XYZB1",
    "D3DFVF_XYZB2",
    "D3DFVF_XYZB3",
    "D3DFVF_XYZB4",
    "D3DFVF_XYZB5",
    "D3DFVF_NORMAL",
    "D3DFVF_RESERVED1",
    "D3DFVF_DIFFUSE",
    "D3DFVF_SPECULAR",
    "D3DFVF_TEXCOUNT_MASK",
    "D3DFVF_TEXCOUNT_SHIFT",
    "D3DFVF_TEX0",
    "D3DFVF_TEX1",
    "D3DFVF_TEX2",
    "D3DFVF_TEX3",
    "D3DFVF_TEX4",
    "D3DFVF_TEX5",
    "D3DFVF_TEX6",
    "D3DFVF_TEX7",
    "D3DFVF_TEX8",
    "D3DFVF_RESERVED2",
    "D3DDP_MAXTEXCOORD",
    "D3DVIS_INSIDE_FRUSTUM",
    "D3DVIS_INTERSECT_FRUSTUM",
    "D3DVIS_OUTSIDE_FRUSTUM",
    "D3DVIS_INSIDE_LEFT",
    "D3DVIS_INTERSECT_LEFT",
    "D3DVIS_OUTSIDE_LEFT",
    "D3DVIS_INSIDE_RIGHT",
    "D3DVIS_INTERSECT_RIGHT",
    "D3DVIS_OUTSIDE_RIGHT",
    "D3DVIS_INSIDE_TOP",
    "D3DVIS_INTERSECT_TOP",
    "D3DVIS_OUTSIDE_TOP",
    "D3DVIS_INSIDE_BOTTOM",
    "D3DVIS_INTERSECT_BOTTOM",
    "D3DVIS_OUTSIDE_BOTTOM",
    "D3DVIS_INSIDE_NEAR",
    "D3DVIS_INTERSECT_NEAR",
    "D3DVIS_OUTSIDE_NEAR",
    "D3DVIS_INSIDE_FAR",
    "D3DVIS_INTERSECT_FAR",
    "D3DVIS_OUTSIDE_FAR",
    "D3DVIS_MASK_FRUSTUM",
    "D3DVIS_MASK_LEFT",
    "D3DVIS_MASK_RIGHT",
    "D3DVIS_MASK_TOP",
    "D3DVIS_MASK_BOTTOM",
    "D3DVIS_MASK_NEAR",
    "D3DVIS_MASK_FAR",
    "D3DDEVINFOID_TEXTUREMANAGER",
    "D3DDEVINFOID_D3DTEXTUREMANAGER",
    "D3DDEVINFOID_TEXTURING",
    "D3DFVF_TEXTUREFORMAT2",
    "D3DFVF_TEXTUREFORMAT1",
    "D3DFVF_TEXTUREFORMAT3",
    "D3DFVF_TEXTUREFORMAT4",
    "ROTFLAGS_REGISTRATIONKEEPSALIVE",
    "ROTFLAGS_ALLOWANYCLIENT",
    "ROT_COMPARE_MAX",
    "WDT_INPROC_CALL",
    "WDT_REMOTE_CALL",
    "WDT_INPROC64_CALL",
    "PROCESS_HEAP_REGION",
    "PROCESS_HEAP_UNCOMMITTED_RANGE",
    "PROCESS_HEAP_ENTRY_BUSY",
    "PROCESS_HEAP_SEG_ALLOC",
    "PROCESS_HEAP_ENTRY_MOVEABLE",
    "PROCESS_HEAP_ENTRY_DDESHARE",
    "LMEM_NOCOMPACT",
    "LMEM_NODISCARD",
    "LMEM_MODIFY",
    "LMEM_DISCARDABLE",
    "LMEM_VALID_FLAGS",
    "LMEM_INVALID_HANDLE",
    "LMEM_DISCARDED",
    "LMEM_LOCKCOUNT",
    "NUMA_NO_PREFERRED_NODE",
    "REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO_VERSION",
    "FACILITY_MCA_ERROR_CODE",
    "IO_ERR_INSUFFICIENT_RESOURCES",
    "IO_ERR_DRIVER_ERROR",
    "IO_ERR_SEEK_ERROR",
    "IO_ERR_BAD_BLOCK",
    "IO_ERR_TIMEOUT",
    "IO_ERR_CONTROLLER_ERROR",
    "IO_ERR_NOT_READY",
    "IO_ERR_INVALID_REQUEST",
    "IO_ERR_RESET",
    "IO_ERR_BAD_FIRMWARE",
    "IO_WRN_BAD_FIRMWARE",
    "IO_WRITE_CACHE_ENABLED",
    "IO_RECOVERED_VIA_ECC",
    "IO_WRITE_CACHE_DISABLED",
    "IO_WARNING_PAGING_FAILURE",
    "IO_WRN_FAILURE_PREDICTED",
    "IO_WARNING_ALLOCATION_FAILED",
    "IO_WARNING_DUPLICATE_SIGNATURE",
    "IO_WARNING_DUPLICATE_PATH",
    "IO_WARNING_WRITE_FUA_PROBLEM",
    "IO_WARNING_VOLUME_LOST_DISK_EXTENT",
    "IO_WARNING_DEVICE_HAS_INTERNAL_DUMP",
    "IO_WARNING_SOFT_THRESHOLD_REACHED",
    "IO_WARNING_SOFT_THRESHOLD_REACHED_EX",
    "IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_LUN",
    "IO_WARNING_SOFT_THRESHOLD_REACHED_EX_LUN_POOL",
    "IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_LUN",
    "IO_WARNING_SOFT_THRESHOLD_REACHED_EX_POOL_POOL",
    "IO_ERROR_DISK_RESOURCES_EXHAUSTED",
    "IO_WARNING_DISK_CAPACITY_CHANGED",
    "IO_WARNING_DISK_PROVISIONING_TYPE_CHANGED",
    "IO_WARNING_IO_OPERATION_RETRIED",
    "IO_ERROR_IO_HARDWARE_ERROR",
    "IO_WARNING_COMPLETION_TIME",
    "IO_WARNING_DISK_SURPRISE_REMOVED",
    "IO_WARNING_REPEATED_DISK_GUID",
    "IO_WARNING_DISK_FIRMWARE_UPDATED",
    "IO_ERR_RETRY_SUCCEEDED",
    "IO_DUMP_CREATION_SUCCESS",
    "IO_FILE_QUOTA_THRESHOLD",
    "IO_FILE_QUOTA_LIMIT",
    "IO_FILE_QUOTA_STARTED",
    "IO_FILE_QUOTA_SUCCEEDED",
    "IO_INFO_THROTTLE_COMPLETE",
    "IO_CDROM_EXCLUSIVE_LOCK",
    "IO_WARNING_ADAPTER_FIRMWARE_UPDATED",
    "IO_FILE_QUOTA_FAILED",
    "IO_LOST_DELAYED_WRITE",
    "IO_WARNING_INTERRUPT_STILL_PENDING",
    "IO_DRIVER_CANCEL_TIMEOUT",
    "IO_WARNING_LOG_FLUSH_FAILED",
    "IO_WARNING_BUS_RESET",
    "IO_WARNING_RESET",
    "IO_LOST_DELAYED_WRITE_NETWORK_DISCONNECTED",
    "IO_LOST_DELAYED_WRITE_NETWORK_SERVER_ERROR",
    "IO_LOST_DELAYED_WRITE_NETWORK_LOCAL_DISK_ERROR",
    "IO_WARNING_DUMP_DISABLED_DEVICE_GONE",
    "IO_ERR_CONFIGURATION_ERROR",
    "IO_ERR_PARITY",
    "IO_ERR_OVERRUN_ERROR",
    "IO_ERR_SEQUENCE",
    "IO_ERR_INTERNAL_ERROR",
    "IO_ERR_INCORRECT_IRQL",
    "IO_ERR_INVALID_IOBASE",
    "IO_ERR_VERSION",
    "IO_ERR_LAYERED_FAILURE",
    "IO_ERR_PROTOCOL",
    "IO_ERR_MEMORY_CONFLICT_DETECTED",
    "IO_ERR_PORT_CONFLICT_DETECTED",
    "IO_ERR_DMA_CONFLICT_DETECTED",
    "IO_ERR_IRQ_CONFLICT_DETECTED",
    "IO_ERR_DMA_RESOURCE_CONFLICT",
    "IO_ERR_INTERRUPT_RESOURCE_CONFLICT",
    "IO_ERR_MEMORY_RESOURCE_CONFLICT",
    "IO_ERR_PORT_RESOURCE_CONFLICT",
    "IO_BAD_BLOCK_WITH_NAME",
    "IO_FILE_SYSTEM_CORRUPT",
    "IO_FILE_QUOTA_CORRUPT",
    "IO_SYSTEM_SLEEP_FAILED",
    "IO_DUMP_POINTER_FAILURE",
    "IO_DUMP_DRIVER_LOAD_FAILURE",
    "IO_DUMP_INITIALIZATION_FAILURE",
    "IO_DUMP_DUMPFILE_CONFLICT",
    "IO_DUMP_DIRECT_CONFIG_FAILED",
    "IO_DUMP_PAGE_CONFIG_FAILED",
    "IO_FILE_SYSTEM_CORRUPT_WITH_NAME",
    "IO_ERR_THREAD_STUCK_IN_DEVICE_DRIVER",
    "IO_ERR_PORT_TIMEOUT",
    "IO_ERROR_DUMP_CREATION_ERROR",
    "IO_DUMP_CALLBACK_EXCEPTION",
    "MCA_INFO_CPU_THERMAL_THROTTLING_REMOVED",
    "MCA_INFO_NO_MORE_CORRECTED_ERROR_LOGS",
    "MCA_INFO_MEMORY_PAGE_MARKED_BAD",
    "MCA_WARNING_CACHE",
    "MCA_WARNING_TLB",
    "MCA_WARNING_CPU_BUS",
    "MCA_WARNING_REGISTER_FILE",
    "MCA_WARNING_MAS",
    "MCA_WARNING_MEM_UNKNOWN",
    "MCA_WARNING_MEM_1_2",
    "MCA_WARNING_MEM_1_2_5",
    "MCA_WARNING_MEM_1_2_5_4",
    "MCA_WARNING_SYSTEM_EVENT",
    "MCA_WARNING_PCI_BUS_PARITY",
    "MCA_WARNING_PCI_BUS_PARITY_NO_INFO",
    "MCA_WARNING_PCI_BUS_SERR",
    "MCA_WARNING_PCI_BUS_SERR_NO_INFO",
    "MCA_WARNING_PCI_BUS_MASTER_ABORT",
    "MCA_WARNING_PCI_BUS_MASTER_ABORT_NO_INFO",
    "MCA_WARNING_PCI_BUS_TIMEOUT",
    "MCA_WARNING_PCI_BUS_TIMEOUT_NO_INFO",
    "MCA_WARNING_PCI_BUS_UNKNOWN",
    "MCA_WARNING_PCI_DEVICE",
    "MCA_WARNING_SMBIOS",
    "MCA_WARNING_PLATFORM_SPECIFIC",
    "MCA_WARNING_UNKNOWN",
    "MCA_WARNING_UNKNOWN_NO_CPU",
    "MCA_WARNING_CMC_THRESHOLD_EXCEEDED",
    "MCA_WARNING_CPE_THRESHOLD_EXCEEDED",
    "MCA_WARNING_CPU_THERMAL_THROTTLED",
    "MCA_WARNING_CPU",
    "MCA_ERROR_CACHE",
    "MCA_ERROR_TLB",
    "MCA_ERROR_CPU_BUS",
    "MCA_ERROR_REGISTER_FILE",
    "MCA_ERROR_MAS",
    "MCA_ERROR_MEM_UNKNOWN",
    "MCA_ERROR_MEM_1_2",
    "MCA_ERROR_MEM_1_2_5",
    "MCA_ERROR_MEM_1_2_5_4",
    "MCA_ERROR_SYSTEM_EVENT",
    "MCA_ERROR_PCI_BUS_PARITY",
    "MCA_ERROR_PCI_BUS_PARITY_NO_INFO",
    "MCA_ERROR_PCI_BUS_SERR",
    "MCA_ERROR_PCI_BUS_SERR_NO_INFO",
    "MCA_ERROR_PCI_BUS_MASTER_ABORT",
    "MCA_ERROR_PCI_BUS_MASTER_ABORT_NO_INFO",
    "MCA_ERROR_PCI_BUS_TIMEOUT",
    "MCA_ERROR_PCI_BUS_TIMEOUT_NO_INFO",
    "MCA_ERROR_PCI_BUS_UNKNOWN",
    "MCA_ERROR_PCI_DEVICE",
    "MCA_ERROR_SMBIOS",
    "MCA_ERROR_PLATFORM_SPECIFIC",
    "MCA_ERROR_UNKNOWN",
    "MCA_ERROR_UNKNOWN_NO_CPU",
    "MCA_ERROR_CPU",
    "MCA_MEMORYHIERARCHY_ERROR",
    "MCA_TLB_ERROR",
    "MCA_BUS_ERROR",
    "MCA_BUS_TIMEOUT_ERROR",
    "MCA_INTERNALTIMER_ERROR",
    "MCA_MICROCODE_ROM_PARITY_ERROR",
    "MCA_EXTERNAL_ERROR",
    "MCA_FRC_ERROR",
    "VOLMGR_KSR_ERROR",
    "VOLMGR_KSR_READ_ERROR",
    "VOLMGR_KSR_BYPASS",
    "GUID_DEVINTERFACE_DMR",
    "GUID_DEVINTERFACE_DMP",
    "GUID_DEVINTERFACE_DMS",
    "ALERT_SYSTEM_SEV",
    "ALERT_SYSTEM_INFORMATIONAL",
    "ALERT_SYSTEM_WARNING",
    "ALERT_SYSTEM_ERROR",
    "ALERT_SYSTEM_QUERY",
    "ALERT_SYSTEM_CRITICAL",
    "APPCOMMAND_ID",
    "APPCOMMAND_BROWSER_BACKWARD",
    "APPCOMMAND_BROWSER_FORWARD",
    "APPCOMMAND_BROWSER_REFRESH",
    "APPCOMMAND_BROWSER_STOP",
    "APPCOMMAND_BROWSER_SEARCH",
    "APPCOMMAND_BROWSER_FAVORITES",
    "APPCOMMAND_BROWSER_HOME",
    "APPCOMMAND_VOLUME_MUTE",
    "APPCOMMAND_VOLUME_DOWN",
    "APPCOMMAND_VOLUME_UP",
    "APPCOMMAND_MEDIA_NEXTTRACK",
    "APPCOMMAND_MEDIA_PREVIOUSTRACK",
    "APPCOMMAND_MEDIA_STOP",
    "APPCOMMAND_MEDIA_PLAY_PAUSE",
    "APPCOMMAND_LAUNCH_MAIL",
    "APPCOMMAND_LAUNCH_MEDIA_SELECT",
    "APPCOMMAND_LAUNCH_APP1",
    "APPCOMMAND_LAUNCH_APP2",
    "APPCOMMAND_BASS_DOWN",
    "APPCOMMAND_BASS_BOOST",
    "APPCOMMAND_BASS_UP",
    "APPCOMMAND_TREBLE_DOWN",
    "APPCOMMAND_TREBLE_UP",
    "APPCOMMAND_MICROPHONE_VOLUME_MUTE",
    "APPCOMMAND_MICROPHONE_VOLUME_DOWN",
    "APPCOMMAND_MICROPHONE_VOLUME_UP",
    "APPCOMMAND_HELP",
    "APPCOMMAND_FIND",
    "APPCOMMAND_NEW",
    "APPCOMMAND_OPEN",
    "APPCOMMAND_CLOSE",
    "APPCOMMAND_SAVE",
    "APPCOMMAND_PRINT",
    "APPCOMMAND_UNDO",
    "APPCOMMAND_REDO",
    "APPCOMMAND_COPY",
    "APPCOMMAND_CUT",
    "APPCOMMAND_PASTE",
    "APPCOMMAND_REPLY_TO_MAIL",
    "APPCOMMAND_FORWARD_MAIL",
    "APPCOMMAND_SEND_MAIL",
    "APPCOMMAND_SPELL_CHECK",
    "APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE",
    "APPCOMMAND_MIC_ON_OFF_TOGGLE",
    "APPCOMMAND_CORRECTION_LIST",
    "APPCOMMAND_MEDIA_PLAY",
    "APPCOMMAND_MEDIA_PAUSE",
    "APPCOMMAND_MEDIA_RECORD",
    "APPCOMMAND_MEDIA_FAST_FORWARD",
    "APPCOMMAND_MEDIA_REWIND",
    "APPCOMMAND_MEDIA_CHANNEL_UP",
    "APPCOMMAND_MEDIA_CHANNEL_DOWN",
    "APPCOMMAND_DELETE",
    "APPCOMMAND_DWM_FLIP3D",
    "ATF_FLAGS",
    "ATF_TIMEOUTON",
    "ATF_ONOFFFEEDBACK",
    "CHOOSECOLOR_FLAGS",
    "CC_RGBINIT",
    "CC_FULLOPEN",
    "CC_PREVENTFULLOPEN",
    "CC_SHOWHELP",
    "CC_ENABLEHOOK",
    "CC_ENABLETEMPLATE",
    "CC_ENABLETEMPLATEHANDLE",
    "CC_SOLIDCOLOR",
    "CC_ANYCOLOR",
    "CLIPBOARD_FORMATS",
    "CF_TEXT",
    "CF_BITMAP",
    "CF_METAFILEPICT",
    "CF_SYLK",
    "CF_DIF",
    "CF_TIFF",
    "CF_OEMTEXT",
    "CF_DIB",
    "CF_PALETTE",
    "CF_PENDATA",
    "CF_RIFF",
    "CF_WAVE",
    "CF_UNICODETEXT",
    "CF_ENHMETAFILE",
    "CF_HDROP",
    "CF_LOCALE",
    "CF_DIBV5",
    "CF_MAX",
    "CF_OWNERDISPLAY",
    "CF_DSPTEXT",
    "CF_DSPBITMAP",
    "CF_DSPMETAFILEPICT",
    "CF_DSPENHMETAFILE",
    "CF_PRIVATEFIRST",
    "CF_PRIVATELAST",
    "CF_GDIOBJFIRST",
    "CF_GDIOBJLAST",
    "GESTURECONFIG_FLAGS",
    "GC_ALLGESTURES",
    "GC_ZOOM",
    "GC_PAN",
    "GC_PAN_WITH_SINGLE_FINGER_VERTICALLY",
    "GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY",
    "GC_PAN_WITH_GUTTER",
    "GC_PAN_WITH_INERTIA",
    "GC_ROTATE",
    "GC_TWOFINGERTAP",
    "GC_PRESSANDTAP",
    "GC_ROLLOVER",
    "CFE_UNDERLINE",
    "CFU_CF1UNDERLINE",
    "CFU_INVERT",
    "CFU_UNDERLINETHICKLONGDASH",
    "CFU_UNDERLINETHICKDOTTED",
    "CFU_UNDERLINETHICKDASHDOTDOT",
    "CFU_UNDERLINETHICKDASHDOT",
    "CFU_UNDERLINETHICKDASH",
    "CFU_UNDERLINELONGDASH",
    "CFU_UNDERLINEHEAVYWAVE",
    "CFU_UNDERLINEDOUBLEWAVE",
    "CFU_UNDERLINEHAIRLINE",
    "CFU_UNDERLINETHICK",
    "CFU_UNDERLINEWAVE",
    "CFU_UNDERLINEDASHDOTDOT",
    "CFU_UNDERLINEDASHDOT",
    "CFU_UNDERLINEDASH",
    "CFU_UNDERLINEDOTTED",
    "CFU_UNDERLINEDOUBLE",
    "CFU_UNDERLINEWORD",
    "CFU_UNDERLINE",
    "CFU_UNDERLINENONE",
    "IGP_ID",
    "IGP_GETIMEVERSION",
    "IGP_PROPERTY",
    "IGP_CONVERSION",
    "IGP_SENTENCE",
    "IGP_UI",
    "IGP_SETCOMPSTR",
    "IGP_SELECT",
    "SECTION_FLAGS",
    "SECTION_ALL_ACCESS",
    "SECTION_QUERY",
    "SECTION_MAP_WRITE",
    "SECTION_MAP_READ",
    "SECTION_MAP_EXECUTE",
    "SECTION_EXTEND_SIZE",
    "SECTION_MAP_EXECUTE_EXPLICIT",
    "TAPE_GET_DRIVE_PARAMETERS_FEATURES_HIGH",
    "TAPE_DRIVE_ABS_BLK_IMMED",
    "TAPE_DRIVE_ABSOLUTE_BLK",
    "TAPE_DRIVE_END_OF_DATA",
    "TAPE_DRIVE_FILEMARKS",
    "TAPE_DRIVE_LOAD_UNLOAD",
    "TAPE_DRIVE_LOAD_UNLD_IMMED",
    "TAPE_DRIVE_LOCK_UNLOCK",
    "TAPE_DRIVE_LOCK_UNLK_IMMED",
    "TAPE_DRIVE_LOG_BLK_IMMED",
    "TAPE_DRIVE_LOGICAL_BLK",
    "TAPE_DRIVE_RELATIVE_BLKS",
    "TAPE_DRIVE_REVERSE_POSITION",
    "TAPE_DRIVE_REWIND_IMMEDIATE",
    "TAPE_DRIVE_SEQUENTIAL_FMKS",
    "TAPE_DRIVE_SEQUENTIAL_SMKS",
    "TAPE_DRIVE_SET_BLOCK_SIZE",
    "TAPE_DRIVE_SET_COMPRESSION",
    "TAPE_DRIVE_SET_ECC",
    "TAPE_DRIVE_SET_PADDING",
    "TAPE_DRIVE_SET_REPORT_SMKS",
    "TAPE_DRIVE_SETMARKS",
    "TAPE_DRIVE_SPACE_IMMEDIATE",
    "TAPE_DRIVE_TENSION",
    "TAPE_DRIVE_TENSION_IMMED",
    "TAPE_DRIVE_WRITE_FILEMARKS",
    "TAPE_DRIVE_WRITE_LONG_FMKS",
    "TAPE_DRIVE_WRITE_MARK_IMMED",
    "TAPE_DRIVE_WRITE_SETMARKS",
    "TAPE_DRIVE_WRITE_SHORT_FMKS",
    "DEV_BROADCAST_HDR_DEVICE_TYPE",
    "DBT_DEVTYP_DEVICEINTERFACE",
    "DBT_DEVTYP_HANDLE",
    "DBT_DEVTYP_OEM",
    "DBT_DEVTYP_PORT",
    "DBT_DEVTYP_VOLUME",
    "DEV_BROADCAST_VOLUME_FLAGS",
    "DBTF_MEDIA",
    "DBTF_NET",
    "PUMS_SCHEDULER_ENTRY_POINT",
    "TP_POOL",
    "TP_CLEANUP_GROUP",
    "TEB",
    "RemHGLOBAL",
    "RemHMETAFILEPICT",
    "RemHENHMETAFILE",
    "RemHBITMAP",
    "RemHPALETTE",
    "RemBRUSH",
    "userCLIPFORMAT",
    "GDI_NONREMOTE",
    "userHGLOBAL",
    "userHMETAFILE",
    "remoteMETAFILEPICT",
    "userHMETAFILEPICT",
    "userHENHMETAFILE",
    "userBITMAP",
    "userHBITMAP",
    "userHPALETTE",
    "RemotableHandle",
    "DEVICE_EVENT_MOUNT",
    "DEVICE_EVENT_BECOMING_READY",
    "DEVICE_EVENT_EXTERNAL_REQUEST",
    "DEVICE_EVENT_GENERIC_DATA",
    "DEVICE_EVENT_RBC_DATA",
    "GUID_IO_DISK_CLONE_ARRIVAL_INFORMATION",
    "DISK_HEALTH_NOTIFICATION_DATA",
    "REDBOOK_DIGITAL_AUDIO_EXTRACTION_INFO",
    "DEV_BROADCAST_HDR",
    "VolLockBroadcast",
    "_DEV_BROADCAST_HEADER",
    "DEV_BROADCAST_OEM",
    "DEV_BROADCAST_DEVNODE",
    "DEV_BROADCAST_VOLUME",
    "DEV_BROADCAST_PORT_A",
    "DEV_BROADCAST_PORT_W",
    "DEV_BROADCAST_NET",
    "DEV_BROADCAST_DEVICEINTERFACE_A",
    "DEV_BROADCAST_DEVICEINTERFACE_W",
    "DEV_BROADCAST_HANDLE",
    "DEV_BROADCAST_HANDLE32",
    "DEV_BROADCAST_HANDLE64",
    "_DEV_BROADCAST_USERDEFINED",
    "AtlThunkData_t",
    "XSAVE_CET_U_FORMAT",
    "KERNEL_CET_CONTEXT",
    "SCOPE_TABLE_AMD64",
    "POUT_OF_PROCESS_FUNCTION_TABLE_CALLBACK",
    "PEXCEPTION_FILTER",
    "PTERMINATION_HANDLER",
    "SCOPE_TABLE_ARM",
    "SCOPE_TABLE_ARM64",
    "DISPATCHER_CONTEXT_NONVOLREG_ARM64",
    "SECURITY_DESCRIPTOR_RELATIVE",
    "SECURITY_OBJECT_AI_PARAMS",
    "ACCESS_REASON_TYPE",
    "ACCESS_REASON_TYPE_AccessReasonNone",
    "ACCESS_REASON_TYPE_AccessReasonAllowedAce",
    "ACCESS_REASON_TYPE_AccessReasonDeniedAce",
    "ACCESS_REASON_TYPE_AccessReasonAllowedParentAce",
    "ACCESS_REASON_TYPE_AccessReasonDeniedParentAce",
    "ACCESS_REASON_TYPE_AccessReasonNotGrantedByCape",
    "ACCESS_REASON_TYPE_AccessReasonNotGrantedByParentCape",
    "ACCESS_REASON_TYPE_AccessReasonNotGrantedToAppContainer",
    "ACCESS_REASON_TYPE_AccessReasonMissingPrivilege",
    "ACCESS_REASON_TYPE_AccessReasonFromPrivilege",
    "ACCESS_REASON_TYPE_AccessReasonIntegrityLevel",
    "ACCESS_REASON_TYPE_AccessReasonOwnership",
    "ACCESS_REASON_TYPE_AccessReasonNullDacl",
    "ACCESS_REASON_TYPE_AccessReasonEmptyDacl",
    "ACCESS_REASON_TYPE_AccessReasonNoSD",
    "ACCESS_REASON_TYPE_AccessReasonNoGrant",
    "ACCESS_REASON_TYPE_AccessReasonTrustLabel",
    "ACCESS_REASON_TYPE_AccessReasonFilterAce",
    "SE_TOKEN_USER",
    "TOKEN_SID_INFORMATION",
    "TOKEN_BNO_ISOLATION_INFORMATION",
    "SE_IMAGE_SIGNATURE_TYPE",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureNone",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureEmbedded",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCache",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCatalogCached",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCatalogNotCached",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignatureCatalogHint",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignaturePackageCatalog",
    "SE_IMAGE_SIGNATURE_TYPE_SeImageSignaturePplMitigated",
    "SE_LEARNING_MODE_DATA_TYPE",
    "SE_LEARNING_MODE_DATA_TYPE_SeLearningModeInvalidType",
    "SE_LEARNING_MODE_DATA_TYPE_SeLearningModeSettings",
    "SE_LEARNING_MODE_DATA_TYPE_SeLearningModeMax",
    "NT_TIB32",
    "NT_TIB64",
    "UMS_CREATE_THREAD_ATTRIBUTES",
    "COMPONENT_FILTER",
    "RATE_QUOTA_LIMIT",
    "QUOTA_LIMITS_EX",
    "PROCESS_MITIGATION_ASLR_POLICY",
    "PROCESS_MITIGATION_DEP_POLICY",
    "PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY",
    "PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY",
    "PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY",
    "PROCESS_MITIGATION_DYNAMIC_CODE_POLICY",
    "PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY",
    "PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY",
    "PROCESS_MITIGATION_FONT_DISABLE_POLICY",
    "PROCESS_MITIGATION_IMAGE_LOAD_POLICY",
    "PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY",
    "PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY",
    "PROCESS_MITIGATION_CHILD_PROCESS_POLICY",
    "PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY",
    "PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY",
    "PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY",
    "SILOOBJECT_BASIC_INFORMATION",
    "SERVERSILO_STATE",
    "SERVERSILO_INITING",
    "SERVERSILO_STARTED",
    "SERVERSILO_SHUTTING_DOWN",
    "SERVERSILO_TERMINATING",
    "SERVERSILO_TERMINATED",
    "SERVERSILO_BASIC_INFORMATION",
    "MEM_ADDRESS_REQUIREMENTS",
    "MEM_DEDICATED_ATTRIBUTE_TYPE",
    "MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeReadBandwidth",
    "MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeReadLatency",
    "MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeWriteBandwidth",
    "MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeWriteLatency",
    "MEM_DEDICATED_ATTRIBUTE_TYPE_MemDedicatedAttributeMax",
    "MEM_SECTION_EXTENDED_PARAMETER_TYPE",
    "MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterInvalidType",
    "MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterUserPhysicalFlags",
    "MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterNumaNode",
    "MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterSigningLevel",
    "MEM_SECTION_EXTENDED_PARAMETER_TYPE_MemSectionExtendedParameterMax",
    "MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE",
    "MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION",
    "SCRUB_DATA_INPUT",
    "SCRUB_PARITY_EXTENT",
    "SCRUB_PARITY_EXTENT_DATA",
    "SCRUB_DATA_OUTPUT",
    "SharedVirtualDiskSupportType",
    "SharedVirtualDiskSupportType_SharedVirtualDisksUnsupported",
    "SharedVirtualDiskSupportType_SharedVirtualDisksSupported",
    "SharedVirtualDiskSupportType_SharedVirtualDiskSnapshotsSupported",
    "SharedVirtualDiskSupportType_SharedVirtualDiskCDPSnapshotsSupported",
    "SharedVirtualDiskHandleState",
    "SharedVirtualDiskHandleState_SharedVirtualDiskHandleStateNone",
    "SharedVirtualDiskHandleState_SharedVirtualDiskHandleStateFileShared",
    "SharedVirtualDiskHandleState_SharedVirtualDiskHandleStateHandleShared",
    "SHARED_VIRTUAL_DISK_SUPPORT",
    "REARRANGE_FILE_DATA",
    "REARRANGE_FILE_DATA32",
    "SHUFFLE_FILE_DATA",
    "NETWORK_APP_INSTANCE_EA",
    "MONITOR_DISPLAY_STATE",
    "MONITOR_DISPLAY_STATE_PowerMonitorOff",
    "MONITOR_DISPLAY_STATE_PowerMonitorOn",
    "MONITOR_DISPLAY_STATE_PowerMonitorDim",
    "USER_ACTIVITY_PRESENCE",
    "USER_ACTIVITY_PRESENCE_PowerUserPresent",
    "USER_ACTIVITY_PRESENCE_PowerUserNotPresent",
    "USER_ACTIVITY_PRESENCE_PowerUserInactive",
    "USER_ACTIVITY_PRESENCE_PowerUserMaximum",
    "USER_ACTIVITY_PRESENCE_PowerUserInvalid",
    "POWER_USER_PRESENCE_TYPE",
    "POWER_USER_PRESENCE_TYPE_UserNotPresent",
    "POWER_USER_PRESENCE_TYPE_UserPresent",
    "POWER_USER_PRESENCE_TYPE_UserUnknown",
    "POWER_USER_PRESENCE",
    "POWER_SESSION_CONNECT",
    "POWER_SESSION_TIMEOUTS",
    "POWER_SESSION_RIT_STATE",
    "POWER_SESSION_WINLOGON",
    "POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES",
    "POWER_IDLE_RESILIENCY",
    "POWER_MONITOR_REQUEST_REASON",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUnknown",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPowerButton",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonRemoteConnection",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonScMonitorpower",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInput",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonAcDcDisplayBurst",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserDisplayBurst",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPoSetSystemState",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSetThreadExecutionState",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonFullWake",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSessionUnlock",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonScreenOffRequest",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonIdleTimeout",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPolicyChange",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSleepButton",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonLid",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBatteryCountChange",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonGracePeriod",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPnP",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDP",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSxTransition",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSystemIdle",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonNearProximity",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonThermalStandby",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonResumePdc",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonResumeS4",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonTerminal",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignal",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonAcDcDisplayBurstSuppressed",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonSystemStateEntered",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonWinrt",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputKeyboard",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputMouse",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputTouchpad",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputPen",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputAccelerometer",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputHid",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputPoUserPresent",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputSessionSwitch",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputInitialization",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalWindowsMobilePwrNotif",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalWindowsMobileShell",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalHeyCortana",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalHolographicShell",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalFingerprint",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDirectedDrips",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDim",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBuiltinPanel",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonDisplayRequiredUnDim",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBatteryCountChangeSuppressed",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonResumeModernStandby",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonTerminalInit",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonPdcSignalSensorsHumanPresence",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonBatteryPreCritical",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonUserInputTouch",
    "POWER_MONITOR_REQUEST_REASON_MonitorRequestReasonMax",
    "POWER_MONITOR_REQUEST_TYPE",
    "POWER_MONITOR_REQUEST_TYPE_MonitorRequestTypeOff",
    "POWER_MONITOR_REQUEST_TYPE_MonitorRequestTypeOnAndPresent",
    "POWER_MONITOR_REQUEST_TYPE_MonitorRequestTypeToggleOn",
    "POWER_MONITOR_INVOCATION",
    "RESUME_PERFORMANCE",
    "NOTIFY_USER_POWER_SETTING",
    "APPLICATIONLAUNCH_SETTING_VALUE",
    "POWER_PLATFORM_INFORMATION",
    "POWER_SETTING_ALTITUDE",
    "ALTITUDE_GROUP_POLICY",
    "ALTITUDE_USER",
    "ALTITUDE_RUNTIME_OVERRIDE",
    "ALTITUDE_PROVISIONING",
    "ALTITUDE_OEM_CUSTOMIZATION",
    "ALTITUDE_INTERNAL_OVERRIDE",
    "ALTITUDE_OS_DEFAULT",
    "PPM_WMI_LEGACY_PERFSTATE",
    "PPM_WMI_IDLE_STATE",
    "PPM_WMI_IDLE_STATES",
    "PPM_WMI_IDLE_STATES_EX",
    "PPM_WMI_PERF_STATE",
    "PPM_WMI_PERF_STATES",
    "PPM_WMI_PERF_STATES_EX",
    "PPM_IDLE_STATE_ACCOUNTING",
    "PPM_IDLE_ACCOUNTING",
    "PPM_IDLE_STATE_BUCKET_EX",
    "PPM_IDLE_STATE_ACCOUNTING_EX",
    "PPM_IDLE_ACCOUNTING_EX",
    "PPM_PERFSTATE_EVENT",
    "PPM_PERFSTATE_DOMAIN_EVENT",
    "PPM_IDLESTATE_EVENT",
    "PPM_THERMALCHANGE_EVENT",
    "PPM_THERMAL_POLICY_EVENT",
    "PROCESSOR_IDLESTATE_INFO",
    "PROCESSOR_IDLESTATE_POLICY",
    "PROCESSOR_PERFSTATE_POLICY",
    "HIBERFILE_BUCKET_SIZE",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucket1GB",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucket2GB",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucket4GB",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucket8GB",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucket16GB",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucket32GB",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucketUnlimited",
    "HIBERFILE_BUCKET_SIZE_HiberFileBucketMax",
    "HIBERFILE_BUCKET",
    "IMAGE_DOS_HEADER",
    "IMAGE_OS2_HEADER",
    "IMAGE_VXD_HEADER",
    "ANON_OBJECT_HEADER",
    "ANON_OBJECT_HEADER_V2",
    "ANON_OBJECT_HEADER_BIGOBJ",
    "IMAGE_SYMBOL",
    "IMAGE_SYMBOL_EX",
    "IMAGE_AUX_SYMBOL_TOKEN_DEF",
    "IMAGE_AUX_SYMBOL",
    "IMAGE_AUX_SYMBOL_EX",
    "IMAGE_AUX_SYMBOL_TYPE",
    "IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF",
    "IMAGE_RELOCATION",
    "IMAGE_LINENUMBER",
    "IMAGE_BASE_RELOCATION",
    "IMAGE_ARCHIVE_MEMBER_HEADER",
    "IMAGE_EXPORT_DIRECTORY",
    "IMAGE_IMPORT_BY_NAME",
    "PIMAGE_TLS_CALLBACK",
    "IMAGE_TLS_DIRECTORY64",
    "IMAGE_TLS_DIRECTORY32",
    "IMAGE_IMPORT_DESCRIPTOR",
    "IMAGE_BOUND_IMPORT_DESCRIPTOR",
    "IMAGE_BOUND_FORWARDER_REF",
    "IMAGE_RESOURCE_DIRECTORY",
    "IMAGE_RESOURCE_DIRECTORY_ENTRY",
    "IMAGE_RESOURCE_DIRECTORY_STRING",
    "IMAGE_RESOURCE_DIR_STRING_U",
    "IMAGE_RESOURCE_DATA_ENTRY",
    "IMAGE_DYNAMIC_RELOCATION_TABLE",
    "IMAGE_DYNAMIC_RELOCATION32",
    "IMAGE_DYNAMIC_RELOCATION64",
    "IMAGE_DYNAMIC_RELOCATION32_V2",
    "IMAGE_DYNAMIC_RELOCATION64_V2",
    "IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER",
    "IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER",
    "IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION",
    "IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION",
    "IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION",
    "IMAGE_HOT_PATCH_INFO",
    "IMAGE_HOT_PATCH_BASE",
    "IMAGE_HOT_PATCH_HASHES",
    "IMAGE_CE_RUNTIME_FUNCTION_ENTRY",
    "IMAGE_ARM_RUNTIME_FUNCTION_ENTRY",
    "ARM64_FNPDATA_FLAGS",
    "ARM64_FNPDATA_FLAGS_PdataRefToFullXdata",
    "ARM64_FNPDATA_FLAGS_PdataPackedUnwindFunction",
    "ARM64_FNPDATA_FLAGS_PdataPackedUnwindFragment",
    "ARM64_FNPDATA_CR",
    "ARM64_FNPDATA_CR_PdataCrUnchained",
    "ARM64_FNPDATA_CR_PdataCrUnchainedSavedLr",
    "ARM64_FNPDATA_CR_PdataCrChainedWithPac",
    "ARM64_FNPDATA_CR_PdataCrChained",
    "IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA",
    "IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY",
    "IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY",
    "IMAGE_DEBUG_MISC",
    "IMAGE_SEPARATE_DEBUG_HEADER",
    "NON_PAGED_DEBUG_INFO",
    "IMAGE_ARCHITECTURE_HEADER",
    "IMAGE_ARCHITECTURE_ENTRY",
    "IMPORT_OBJECT_HEADER",
    "IMPORT_OBJECT_TYPE",
    "IMPORT_OBJECT_CODE",
    "IMPORT_OBJECT_DATA",
    "IMPORT_OBJECT_CONST",
    "IMPORT_OBJECT_NAME_TYPE",
    "IMPORT_OBJECT_ORDINAL",
    "IMPORT_OBJECT_NAME",
    "IMPORT_OBJECT_NAME_NO_PREFIX",
    "IMPORT_OBJECT_NAME_UNDECORATE",
    "IMPORT_OBJECT_NAME_EXPORTAS",
    "ReplacesCorHdrNumericDefines",
    "COMIMAGE_FLAGS_ILONLY",
    "COMIMAGE_FLAGS_32BITREQUIRED",
    "COMIMAGE_FLAGS_IL_LIBRARY",
    "COMIMAGE_FLAGS_STRONGNAMESIGNED",
    "COMIMAGE_FLAGS_NATIVE_ENTRYPOINT",
    "COMIMAGE_FLAGS_TRACKDEBUGDATA",
    "COMIMAGE_FLAGS_32BITPREFERRED",
    "COR_VERSION_MAJOR_V2",
    "COR_VERSION_MAJOR",
    "COR_VERSION_MINOR",
    "COR_DELETED_NAME_LENGTH",
    "COR_VTABLEGAP_NAME_LENGTH",
    "NATIVE_TYPE_MAX_CB",
    "COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE",
    "IMAGE_COR_MIH_METHODRVA",
    "IMAGE_COR_MIH_EHRVA",
    "IMAGE_COR_MIH_BASICBLOCK",
    "COR_VTABLE_32BIT",
    "COR_VTABLE_64BIT",
    "COR_VTABLE_FROM_UNMANAGED",
    "COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN",
    "COR_VTABLE_CALL_MOST_DERIVED",
    "IMAGE_COR_EATJ_THUNK_SIZE",
    "MAX_CLASS_NAME",
    "MAX_PACKAGE_NAME",
    "RTL_UMS_SCHEDULER_REASON",
    "RTL_UMS_SCHEDULER_REASON_UmsSchedulerStartup",
    "RTL_UMS_SCHEDULER_REASON_UmsSchedulerThreadBlocked",
    "RTL_UMS_SCHEDULER_REASON_UmsSchedulerThreadYield",
    "IMAGE_POLICY_ENTRY_TYPE",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeNone",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeBool",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt8",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt8",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt16",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt16",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt32",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt32",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeInt64",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUInt64",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeAnsiString",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeUnicodeString",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeOverride",
    "IMAGE_POLICY_ENTRY_TYPE_ImagePolicyEntryTypeMaximum",
    "IMAGE_POLICY_ID",
    "IMAGE_POLICY_ID_ImagePolicyIdNone",
    "IMAGE_POLICY_ID_ImagePolicyIdEtw",
    "IMAGE_POLICY_ID_ImagePolicyIdDebug",
    "IMAGE_POLICY_ID_ImagePolicyIdCrashDump",
    "IMAGE_POLICY_ID_ImagePolicyIdCrashDumpKey",
    "IMAGE_POLICY_ID_ImagePolicyIdCrashDumpKeyGuid",
    "IMAGE_POLICY_ID_ImagePolicyIdParentSd",
    "IMAGE_POLICY_ID_ImagePolicyIdParentSdRev",
    "IMAGE_POLICY_ID_ImagePolicyIdSvn",
    "IMAGE_POLICY_ID_ImagePolicyIdDeviceId",
    "IMAGE_POLICY_ID_ImagePolicyIdCapability",
    "IMAGE_POLICY_ID_ImagePolicyIdScenarioId",
    "IMAGE_POLICY_ID_ImagePolicyIdMaximum",
    "IMAGE_POLICY_ENTRY",
    "IMAGE_POLICY_METADATA",
    "HEAP_OPTIMIZE_RESOURCES_INFORMATION",
    "WORKERCALLBACKFUNC",
    "APC_CALLBACK_FUNCTION",
    "ACTIVATION_CONTEXT_INFO_CLASS",
    "ACTIVATION_CONTEXT_INFO_CLASS_ActivationContextBasicInformation",
    "ACTIVATION_CONTEXT_INFO_CLASS_ActivationContextDetailedInformation",
    "ACTIVATION_CONTEXT_INFO_CLASS_AssemblyDetailedInformationInActivationContext",
    "ACTIVATION_CONTEXT_INFO_CLASS_FileInformationInAssemblyOfAssemblyInActivationContext",
    "ACTIVATION_CONTEXT_INFO_CLASS_RunlevelInformationInActivationContext",
    "ACTIVATION_CONTEXT_INFO_CLASS_CompatibilityInformationInActivationContext",
    "ACTIVATION_CONTEXT_INFO_CLASS_ActivationContextManifestResourceName",
    "ACTIVATION_CONTEXT_INFO_CLASS_MaxActivationContextInfoClass",
    "ACTIVATION_CONTEXT_INFO_CLASS_AssemblyDetailedInformationInActivationContxt",
    "ACTIVATION_CONTEXT_INFO_CLASS_FileInformationInAssemblyOfAssemblyInActivationContxt",
    "SUPPORTED_OS_INFO",
    "MAXVERSIONTESTED_INFO",
    "PACKEDEVENTINFO",
    "CM_SERVICE_NODE_TYPE",
    "CM_SERVICE_NODE_TYPE_DriverType",
    "CM_SERVICE_NODE_TYPE_FileSystemType",
    "CM_SERVICE_NODE_TYPE_Win32ServiceOwnProcess",
    "CM_SERVICE_NODE_TYPE_Win32ServiceShareProcess",
    "CM_SERVICE_NODE_TYPE_AdapterType",
    "CM_SERVICE_NODE_TYPE_RecognizerType",
    "CM_SERVICE_LOAD_TYPE",
    "CM_SERVICE_LOAD_TYPE_BootLoad",
    "CM_SERVICE_LOAD_TYPE_SystemLoad",
    "CM_SERVICE_LOAD_TYPE_AutoLoad",
    "CM_SERVICE_LOAD_TYPE_DemandLoad",
    "CM_SERVICE_LOAD_TYPE_DisableLoad",
    "CM_ERROR_CONTROL_TYPE",
    "CM_ERROR_CONTROL_TYPE_IgnoreError",
    "CM_ERROR_CONTROL_TYPE_NormalError",
    "CM_ERROR_CONTROL_TYPE_SevereError",
    "CM_ERROR_CONTROL_TYPE_CriticalError",
    "TAPE_GET_DRIVE_PARAMETERS",
    "TAPE_SET_DRIVE_PARAMETERS",
    "TAPE_GET_MEDIA_PARAMETERS",
    "TAPE_SET_MEDIA_PARAMETERS",
    "TAPE_CREATE_PARTITION",
    "TAPE_WMI_OPERATIONS",
    "TAPE_DRIVE_PROBLEM_TYPE",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveProblemNone",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadWriteWarning",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadWriteError",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadWarning",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveWriteWarning",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveReadError",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveWriteError",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveHardwareError",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveUnsupportedMedia",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveScsiConnectionError",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveTimetoClean",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveCleanDriveNow",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveMediaLifeExpired",
    "TAPE_DRIVE_PROBLEM_TYPE_TapeDriveSnappedTape",
    "TRANSACTION_STATE",
    "TRANSACTION_STATE_TransactionStateNormal",
    "TRANSACTION_STATE_TransactionStateIndoubt",
    "TRANSACTION_STATE_TransactionStateCommittedNotify",
    "TRANSACTION_BASIC_INFORMATION",
    "TRANSACTIONMANAGER_BASIC_INFORMATION",
    "TRANSACTIONMANAGER_LOG_INFORMATION",
    "TRANSACTIONMANAGER_LOGPATH_INFORMATION",
    "TRANSACTIONMANAGER_RECOVERY_INFORMATION",
    "TRANSACTIONMANAGER_OLDEST_INFORMATION",
    "TRANSACTION_PROPERTIES_INFORMATION",
    "TRANSACTION_BIND_INFORMATION",
    "TRANSACTION_ENLISTMENT_PAIR",
    "TRANSACTION_ENLISTMENTS_INFORMATION",
    "TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION",
    "RESOURCEMANAGER_BASIC_INFORMATION",
    "RESOURCEMANAGER_COMPLETION_INFORMATION",
    "TRANSACTION_INFORMATION_CLASS",
    "TRANSACTION_INFORMATION_CLASS_TransactionBasicInformation",
    "TRANSACTION_INFORMATION_CLASS_TransactionPropertiesInformation",
    "TRANSACTION_INFORMATION_CLASS_TransactionEnlistmentInformation",
    "TRANSACTION_INFORMATION_CLASS_TransactionSuperiorEnlistmentInformation",
    "TRANSACTION_INFORMATION_CLASS_TransactionBindInformation",
    "TRANSACTION_INFORMATION_CLASS_TransactionDTCPrivateInformation",
    "TRANSACTIONMANAGER_INFORMATION_CLASS",
    "TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerBasicInformation",
    "TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerLogInformation",
    "TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerLogPathInformation",
    "TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerRecoveryInformation",
    "TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerOnlineProbeInformation",
    "TRANSACTIONMANAGER_INFORMATION_CLASS_TransactionManagerOldestTransactionInformation",
    "RESOURCEMANAGER_INFORMATION_CLASS",
    "RESOURCEMANAGER_INFORMATION_CLASS_ResourceManagerBasicInformation",
    "RESOURCEMANAGER_INFORMATION_CLASS_ResourceManagerCompletionInformation",
    "ENLISTMENT_BASIC_INFORMATION",
    "ENLISTMENT_CRM_INFORMATION",
    "ENLISTMENT_INFORMATION_CLASS",
    "ENLISTMENT_INFORMATION_CLASS_EnlistmentBasicInformation",
    "ENLISTMENT_INFORMATION_CLASS_EnlistmentRecoveryInformation",
    "ENLISTMENT_INFORMATION_CLASS_EnlistmentCrmInformation",
    "TRANSACTION_LIST_ENTRY",
    "TRANSACTION_LIST_INFORMATION",
    "KTMOBJECT_TYPE",
    "KTMOBJECT_TRANSACTION",
    "KTMOBJECT_TRANSACTION_MANAGER",
    "KTMOBJECT_RESOURCE_MANAGER",
    "KTMOBJECT_ENLISTMENT",
    "KTMOBJECT_INVALID",
    "KTMOBJECT_CURSOR",
    "UnregisterDeviceNotification",
]
