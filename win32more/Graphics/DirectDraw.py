from win32more import *
import win32more.Graphics.DirectDraw
import win32more.Foundation
import win32more.Graphics.Gdi
import win32more.System.Com

def __getattr__(name):
    if name == "__path__":
        raise AttributeError()
    setattr(win32more.Graphics.DirectDraw, name, eval(f"_define_{name}()"))
    return getattr(win32more.Graphics.DirectDraw, name)
DIRECTDRAW_VERSION = 1792
_FACDD = 2166
CLSID_DirectDraw = 'd7b70ee0-4340-11cf-b063-0020afc2cd35'
CLSID_DirectDraw7 = '3c305196-50db-11d3-9cfe-00c04fd930c5'
CLSID_DirectDrawClipper = '593817a0-7db3-11cf-a2de-00aa00b93356'
DDENUM_ATTACHEDSECONDARYDEVICES = 1
DDENUM_DETACHEDSECONDARYDEVICES = 2
DDENUM_NONDISPLAYDEVICES = 4
DDCREATE_HARDWAREONLY = 1
DDCREATE_EMULATIONONLY = 2
MAX_DDDEVICEID_STRING = 512
DDGDI_GETHOSTIDENTIFIER = 1
DDSD_CAPS = 1
DDSD_HEIGHT = 2
DDSD_WIDTH = 4
DDSD_PITCH = 8
DDSD_BACKBUFFERCOUNT = 32
DDSD_ZBUFFERBITDEPTH = 64
DDSD_ALPHABITDEPTH = 128
DDSD_LPSURFACE = 2048
DDSD_PIXELFORMAT = 4096
DDSD_CKDESTOVERLAY = 8192
DDSD_CKDESTBLT = 16384
DDSD_CKSRCOVERLAY = 32768
DDSD_CKSRCBLT = 65536
DDSD_MIPMAPCOUNT = 131072
DDSD_REFRESHRATE = 262144
DDSD_LINEARSIZE = 524288
DDSD_TEXTURESTAGE = 1048576
DDSD_FVF = 2097152
DDSD_SRCVBHANDLE = 4194304
DDSD_DEPTH = 8388608
DDSD_ALL = 16775662
DDOSD_GUID = 1
DDOSD_COMPRESSION_RATIO = 2
DDOSD_SCAPS = 4
DDOSD_OSCAPS = 8
DDOSD_ALL = 15
DDOSDCAPS_OPTCOMPRESSED = 1
DDOSDCAPS_OPTREORDERED = 2
DDOSDCAPS_MONOLITHICMIPMAP = 4
DDOSDCAPS_VALIDSCAPS = 805324800
DDOSDCAPS_VALIDOSCAPS = 7
DDCOLOR_BRIGHTNESS = 1
DDCOLOR_CONTRAST = 2
DDCOLOR_HUE = 4
DDCOLOR_SATURATION = 8
DDCOLOR_SHARPNESS = 16
DDCOLOR_GAMMA = 32
DDCOLOR_COLORENABLE = 64
DDSCAPS_RESERVED1 = 1
DDSCAPS_ALPHA = 2
DDSCAPS_BACKBUFFER = 4
DDSCAPS_COMPLEX = 8
DDSCAPS_FLIP = 16
DDSCAPS_FRONTBUFFER = 32
DDSCAPS_OFFSCREENPLAIN = 64
DDSCAPS_OVERLAY = 128
DDSCAPS_PALETTE = 256
DDSCAPS_PRIMARYSURFACE = 512
DDSCAPS_RESERVED3 = 1024
DDSCAPS_PRIMARYSURFACELEFT = 0
DDSCAPS_SYSTEMMEMORY = 2048
DDSCAPS_TEXTURE = 4096
DDSCAPS_3DDEVICE = 8192
DDSCAPS_VIDEOMEMORY = 16384
DDSCAPS_VISIBLE = 32768
DDSCAPS_WRITEONLY = 65536
DDSCAPS_ZBUFFER = 131072
DDSCAPS_OWNDC = 262144
DDSCAPS_LIVEVIDEO = 524288
DDSCAPS_HWCODEC = 1048576
DDSCAPS_MODEX = 2097152
DDSCAPS_MIPMAP = 4194304
DDSCAPS_RESERVED2 = 8388608
DDSCAPS_ALLOCONLOAD = 67108864
DDSCAPS_VIDEOPORT = 134217728
DDSCAPS_LOCALVIDMEM = 268435456
DDSCAPS_NONLOCALVIDMEM = 536870912
DDSCAPS_STANDARDVGAMODE = 1073741824
DDSCAPS_OPTIMIZED = -2147483648
DDSCAPS2_RESERVED4 = 2
DDSCAPS2_HARDWAREDEINTERLACE = 0
DDSCAPS2_HINTDYNAMIC = 4
DDSCAPS2_HINTSTATIC = 8
DDSCAPS2_TEXTUREMANAGE = 16
DDSCAPS2_RESERVED1 = 32
DDSCAPS2_RESERVED2 = 64
DDSCAPS2_OPAQUE = 128
DDSCAPS2_HINTANTIALIASING = 256
DDSCAPS2_CUBEMAP = 512
DDSCAPS2_CUBEMAP_POSITIVEX = 1024
DDSCAPS2_CUBEMAP_NEGATIVEX = 2048
DDSCAPS2_CUBEMAP_POSITIVEY = 4096
DDSCAPS2_CUBEMAP_NEGATIVEY = 8192
DDSCAPS2_CUBEMAP_POSITIVEZ = 16384
DDSCAPS2_CUBEMAP_NEGATIVEZ = 32768
DDSCAPS2_MIPMAPSUBLEVEL = 65536
DDSCAPS2_D3DTEXTUREMANAGE = 131072
DDSCAPS2_DONOTPERSIST = 262144
DDSCAPS2_STEREOSURFACELEFT = 524288
DDSCAPS2_VOLUME = 2097152
DDSCAPS2_NOTUSERLOCKABLE = 4194304
DDSCAPS2_POINTS = 8388608
DDSCAPS2_RTPATCHES = 16777216
DDSCAPS2_NPATCHES = 33554432
DDSCAPS2_RESERVED3 = 67108864
DDSCAPS2_DISCARDBACKBUFFER = 268435456
DDSCAPS2_ENABLEALPHACHANNEL = 536870912
DDSCAPS2_EXTENDEDFORMATPRIMARY = 1073741824
DDSCAPS2_ADDITIONALPRIMARY = -2147483648
DDSCAPS3_MULTISAMPLE_MASK = 31
DDSCAPS3_MULTISAMPLE_QUALITY_MASK = 224
DDSCAPS3_MULTISAMPLE_QUALITY_SHIFT = 5
DDSCAPS3_RESERVED1 = 256
DDSCAPS3_RESERVED2 = 512
DDSCAPS3_LIGHTWEIGHTMIPMAP = 1024
DDSCAPS3_AUTOGENMIPMAP = 2048
DDSCAPS3_DMAP = 4096
DDSCAPS3_CREATESHAREDRESOURCE = 8192
DDSCAPS3_READONLYRESOURCE = 16384
DDSCAPS3_OPENSHAREDRESOURCE = 32768
DDCAPS_3D = 1
DDCAPS_ALIGNBOUNDARYDEST = 2
DDCAPS_ALIGNSIZEDEST = 4
DDCAPS_ALIGNBOUNDARYSRC = 8
DDCAPS_ALIGNSIZESRC = 16
DDCAPS_ALIGNSTRIDE = 32
DDCAPS_BLT = 64
DDCAPS_BLTQUEUE = 128
DDCAPS_BLTFOURCC = 256
DDCAPS_BLTSTRETCH = 512
DDCAPS_GDI = 1024
DDCAPS_OVERLAY = 2048
DDCAPS_OVERLAYCANTCLIP = 4096
DDCAPS_OVERLAYFOURCC = 8192
DDCAPS_OVERLAYSTRETCH = 16384
DDCAPS_PALETTE = 32768
DDCAPS_PALETTEVSYNC = 65536
DDCAPS_READSCANLINE = 131072
DDCAPS_RESERVED1 = 262144
DDCAPS_VBI = 524288
DDCAPS_ZBLTS = 1048576
DDCAPS_ZOVERLAYS = 2097152
DDCAPS_COLORKEY = 4194304
DDCAPS_ALPHA = 8388608
DDCAPS_COLORKEYHWASSIST = 16777216
DDCAPS_NOHARDWARE = 33554432
DDCAPS_BLTCOLORFILL = 67108864
DDCAPS_BANKSWITCHED = 134217728
DDCAPS_BLTDEPTHFILL = 268435456
DDCAPS_CANCLIP = 536870912
DDCAPS_CANCLIPSTRETCHED = 1073741824
DDCAPS_CANBLTSYSMEM = -2147483648
DDCAPS2_CERTIFIED = 1
DDCAPS2_NO2DDURING3DSCENE = 2
DDCAPS2_VIDEOPORT = 4
DDCAPS2_AUTOFLIPOVERLAY = 8
DDCAPS2_CANBOBINTERLEAVED = 16
DDCAPS2_CANBOBNONINTERLEAVED = 32
DDCAPS2_COLORCONTROLOVERLAY = 64
DDCAPS2_COLORCONTROLPRIMARY = 128
DDCAPS2_CANDROPZ16BIT = 256
DDCAPS2_NONLOCALVIDMEM = 512
DDCAPS2_NONLOCALVIDMEMCAPS = 1024
DDCAPS2_NOPAGELOCKREQUIRED = 2048
DDCAPS2_WIDESURFACES = 4096
DDCAPS2_CANFLIPODDEVEN = 8192
DDCAPS2_CANBOBHARDWARE = 16384
DDCAPS2_COPYFOURCC = 32768
DDCAPS2_PRIMARYGAMMA = 131072
DDCAPS2_CANRENDERWINDOWED = 524288
DDCAPS2_CANCALIBRATEGAMMA = 1048576
DDCAPS2_FLIPINTERVAL = 2097152
DDCAPS2_FLIPNOVSYNC = 4194304
DDCAPS2_CANMANAGETEXTURE = 8388608
DDCAPS2_TEXMANINNONLOCALVIDMEM = 16777216
DDCAPS2_STEREO = 33554432
DDCAPS2_SYSTONONLOCAL_AS_SYSTOLOCAL = 67108864
DDCAPS2_RESERVED1 = 134217728
DDCAPS2_CANMANAGERESOURCE = 268435456
DDCAPS2_DYNAMICTEXTURES = 536870912
DDCAPS2_CANAUTOGENMIPMAP = 1073741824
DDCAPS2_CANSHARERESOURCE = -2147483648
DDFXALPHACAPS_BLTALPHAEDGEBLEND = 1
DDFXALPHACAPS_BLTALPHAPIXELS = 2
DDFXALPHACAPS_BLTALPHAPIXELSNEG = 4
DDFXALPHACAPS_BLTALPHASURFACES = 8
DDFXALPHACAPS_BLTALPHASURFACESNEG = 16
DDFXALPHACAPS_OVERLAYALPHAEDGEBLEND = 32
DDFXALPHACAPS_OVERLAYALPHAPIXELS = 64
DDFXALPHACAPS_OVERLAYALPHAPIXELSNEG = 128
DDFXALPHACAPS_OVERLAYALPHASURFACES = 256
DDFXALPHACAPS_OVERLAYALPHASURFACESNEG = 512
DDFXCAPS_BLTARITHSTRETCHY = 32
DDFXCAPS_BLTARITHSTRETCHYN = 16
DDFXCAPS_BLTMIRRORLEFTRIGHT = 64
DDFXCAPS_BLTMIRRORUPDOWN = 128
DDFXCAPS_BLTROTATION = 256
DDFXCAPS_BLTROTATION90 = 512
DDFXCAPS_BLTSHRINKX = 1024
DDFXCAPS_BLTSHRINKXN = 2048
DDFXCAPS_BLTSHRINKY = 4096
DDFXCAPS_BLTSHRINKYN = 8192
DDFXCAPS_BLTSTRETCHX = 16384
DDFXCAPS_BLTSTRETCHXN = 32768
DDFXCAPS_BLTSTRETCHY = 65536
DDFXCAPS_BLTSTRETCHYN = 131072
DDFXCAPS_OVERLAYARITHSTRETCHY = 262144
DDFXCAPS_OVERLAYARITHSTRETCHYN = 8
DDFXCAPS_OVERLAYSHRINKX = 524288
DDFXCAPS_OVERLAYSHRINKXN = 1048576
DDFXCAPS_OVERLAYSHRINKY = 2097152
DDFXCAPS_OVERLAYSHRINKYN = 4194304
DDFXCAPS_OVERLAYSTRETCHX = 8388608
DDFXCAPS_OVERLAYSTRETCHXN = 16777216
DDFXCAPS_OVERLAYSTRETCHY = 33554432
DDFXCAPS_OVERLAYSTRETCHYN = 67108864
DDFXCAPS_OVERLAYMIRRORLEFTRIGHT = 134217728
DDFXCAPS_OVERLAYMIRRORUPDOWN = 268435456
DDFXCAPS_OVERLAYDEINTERLACE = 536870912
DDFXCAPS_BLTALPHA = 1
DDFXCAPS_BLTFILTER = 32
DDFXCAPS_OVERLAYALPHA = 4
DDFXCAPS_OVERLAYFILTER = 262144
DDSVCAPS_RESERVED1 = 1
DDSVCAPS_RESERVED2 = 2
DDSVCAPS_RESERVED3 = 4
DDSVCAPS_RESERVED4 = 8
DDSVCAPS_STEREOSEQUENTIAL = 16
DDPCAPS_4BIT = 1
DDPCAPS_8BITENTRIES = 2
DDPCAPS_8BIT = 4
DDPCAPS_INITIALIZE = 0
DDPCAPS_PRIMARYSURFACE = 16
DDPCAPS_PRIMARYSURFACELEFT = 32
DDPCAPS_ALLOW256 = 64
DDPCAPS_VSYNC = 128
DDPCAPS_1BIT = 256
DDPCAPS_2BIT = 512
DDPCAPS_ALPHA = 1024
DDSPD_IUNKNOWNPOINTER = 1
DDSPD_VOLATILE = 2
DDBD_1 = 16384
DDBD_2 = 8192
DDBD_4 = 4096
DDBD_8 = 2048
DDBD_16 = 1024
DDBD_24 = 512
DDBD_32 = 256
DDCKEY_COLORSPACE = 1
DDCKEY_DESTBLT = 2
DDCKEY_DESTOVERLAY = 4
DDCKEY_SRCBLT = 8
DDCKEY_SRCOVERLAY = 16
DDCKEYCAPS_DESTBLT = 1
DDCKEYCAPS_DESTBLTCLRSPACE = 2
DDCKEYCAPS_DESTBLTCLRSPACEYUV = 4
DDCKEYCAPS_DESTBLTYUV = 8
DDCKEYCAPS_DESTOVERLAY = 16
DDCKEYCAPS_DESTOVERLAYCLRSPACE = 32
DDCKEYCAPS_DESTOVERLAYCLRSPACEYUV = 64
DDCKEYCAPS_DESTOVERLAYONEACTIVE = 128
DDCKEYCAPS_DESTOVERLAYYUV = 256
DDCKEYCAPS_SRCBLT = 512
DDCKEYCAPS_SRCBLTCLRSPACE = 1024
DDCKEYCAPS_SRCBLTCLRSPACEYUV = 2048
DDCKEYCAPS_SRCBLTYUV = 4096
DDCKEYCAPS_SRCOVERLAY = 8192
DDCKEYCAPS_SRCOVERLAYCLRSPACE = 16384
DDCKEYCAPS_SRCOVERLAYCLRSPACEYUV = 32768
DDCKEYCAPS_SRCOVERLAYONEACTIVE = 65536
DDCKEYCAPS_SRCOVERLAYYUV = 131072
DDCKEYCAPS_NOCOSTOVERLAY = 262144
DDPF_ALPHAPIXELS = 1
DDPF_ALPHA = 2
DDPF_FOURCC = 4
DDPF_PALETTEINDEXED4 = 8
DDPF_PALETTEINDEXEDTO8 = 16
DDPF_PALETTEINDEXED8 = 32
DDPF_RGB = 64
DDPF_COMPRESSED = 128
DDPF_RGBTOYUV = 256
DDPF_YUV = 512
DDPF_ZBUFFER = 1024
DDPF_PALETTEINDEXED1 = 2048
DDPF_PALETTEINDEXED2 = 4096
DDPF_ZPIXELS = 8192
DDPF_STENCILBUFFER = 16384
DDPF_ALPHAPREMULT = 32768
DDPF_LUMINANCE = 131072
DDPF_BUMPLUMINANCE = 262144
DDPF_BUMPDUDV = 524288
DDENUMSURFACES_ALL = 1
DDENUMSURFACES_MATCH = 2
DDENUMSURFACES_NOMATCH = 4
DDENUMSURFACES_CANBECREATED = 8
DDENUMSURFACES_DOESEXIST = 16
DDSDM_STANDARDVGAMODE = 1
DDEDM_REFRESHRATES = 1
DDEDM_STANDARDVGAMODES = 2
DDSCL_FULLSCREEN = 1
DDSCL_ALLOWREBOOT = 2
DDSCL_NOWINDOWCHANGES = 4
DDSCL_NORMAL = 8
DDSCL_EXCLUSIVE = 16
DDSCL_ALLOWMODEX = 64
DDSCL_SETFOCUSWINDOW = 128
DDSCL_SETDEVICEWINDOW = 256
DDSCL_CREATEDEVICEWINDOW = 512
DDSCL_MULTITHREADED = 1024
DDSCL_FPUSETUP = 2048
DDSCL_FPUPRESERVE = 4096
DDBLT_ALPHADEST = 1
DDBLT_ALPHADESTCONSTOVERRIDE = 2
DDBLT_ALPHADESTNEG = 4
DDBLT_ALPHADESTSURFACEOVERRIDE = 8
DDBLT_ALPHAEDGEBLEND = 16
DDBLT_ALPHASRC = 32
DDBLT_ALPHASRCCONSTOVERRIDE = 64
DDBLT_ALPHASRCNEG = 128
DDBLT_ALPHASRCSURFACEOVERRIDE = 256
DDBLT_ASYNC = 512
DDBLT_COLORFILL = 1024
DDBLT_DDFX = 2048
DDBLT_DDROPS = 4096
DDBLT_KEYDEST = 8192
DDBLT_KEYDESTOVERRIDE = 16384
DDBLT_KEYSRC = 32768
DDBLT_KEYSRCOVERRIDE = 65536
DDBLT_ROP = 131072
DDBLT_ROTATIONANGLE = 262144
DDBLT_ZBUFFER = 524288
DDBLT_ZBUFFERDESTCONSTOVERRIDE = 1048576
DDBLT_ZBUFFERDESTOVERRIDE = 2097152
DDBLT_ZBUFFERSRCCONSTOVERRIDE = 4194304
DDBLT_ZBUFFERSRCOVERRIDE = 8388608
DDBLT_WAIT = 16777216
DDBLT_DEPTHFILL = 33554432
DDBLT_DONOTWAIT = 134217728
DDBLT_PRESENTATION = 268435456
DDBLT_LAST_PRESENTATION = 536870912
DDBLT_EXTENDED_FLAGS = 1073741824
DDBLT_EXTENDED_LINEAR_CONTENT = 4
DDBLTFAST_NOCOLORKEY = 0
DDBLTFAST_SRCCOLORKEY = 1
DDBLTFAST_DESTCOLORKEY = 2
DDBLTFAST_WAIT = 16
DDBLTFAST_DONOTWAIT = 32
DDFLIP_WAIT = 1
DDFLIP_EVEN = 2
DDFLIP_ODD = 4
DDFLIP_NOVSYNC = 8
DDFLIP_INTERVAL2 = 33554432
DDFLIP_INTERVAL3 = 50331648
DDFLIP_INTERVAL4 = 67108864
DDFLIP_STEREO = 16
DDFLIP_DONOTWAIT = 32
DDOVER_ALPHADEST = 1
DDOVER_ALPHADESTCONSTOVERRIDE = 2
DDOVER_ALPHADESTNEG = 4
DDOVER_ALPHADESTSURFACEOVERRIDE = 8
DDOVER_ALPHAEDGEBLEND = 16
DDOVER_ALPHASRC = 32
DDOVER_ALPHASRCCONSTOVERRIDE = 64
DDOVER_ALPHASRCNEG = 128
DDOVER_ALPHASRCSURFACEOVERRIDE = 256
DDOVER_HIDE = 512
DDOVER_KEYDEST = 1024
DDOVER_KEYDESTOVERRIDE = 2048
DDOVER_KEYSRC = 4096
DDOVER_KEYSRCOVERRIDE = 8192
DDOVER_SHOW = 16384
DDOVER_ADDDIRTYRECT = 32768
DDOVER_REFRESHDIRTYRECTS = 65536
DDOVER_REFRESHALL = 131072
DDOVER_DDFX = 524288
DDOVER_AUTOFLIP = 1048576
DDOVER_BOB = 2097152
DDOVER_OVERRIDEBOBWEAVE = 4194304
DDOVER_INTERLEAVED = 8388608
DDOVER_BOBHARDWARE = 16777216
DDOVER_ARGBSCALEFACTORS = 33554432
DDOVER_DEGRADEARGBSCALING = 67108864
DDSETSURFACEDESC_RECREATEDC = 0
DDSETSURFACEDESC_PRESERVEDC = 1
DDLOCK_SURFACEMEMORYPTR = 0
DDLOCK_WAIT = 1
DDLOCK_EVENT = 2
DDLOCK_READONLY = 16
DDLOCK_WRITEONLY = 32
DDLOCK_NOSYSLOCK = 2048
DDLOCK_NOOVERWRITE = 4096
DDLOCK_DISCARDCONTENTS = 8192
DDLOCK_OKTOSWAP = 8192
DDLOCK_DONOTWAIT = 16384
DDLOCK_HASVOLUMETEXTUREBOXRECT = 32768
DDLOCK_NODIRTYUPDATE = 65536
DDBLTFX_ARITHSTRETCHY = 1
DDBLTFX_MIRRORLEFTRIGHT = 2
DDBLTFX_MIRRORUPDOWN = 4
DDBLTFX_NOTEARING = 8
DDBLTFX_ROTATE180 = 16
DDBLTFX_ROTATE270 = 32
DDBLTFX_ROTATE90 = 64
DDBLTFX_ZBUFFERRANGE = 128
DDBLTFX_ZBUFFERBASEDEST = 256
DDOVERFX_ARITHSTRETCHY = 1
DDOVERFX_MIRRORLEFTRIGHT = 2
DDOVERFX_MIRRORUPDOWN = 4
DDOVERFX_DEINTERLACE = 8
DDWAITVB_BLOCKBEGIN = 1
DDWAITVB_BLOCKBEGINEVENT = 2
DDWAITVB_BLOCKEND = 4
DDGFS_CANFLIP = 1
DDGFS_ISFLIPDONE = 2
DDGBS_CANBLT = 1
DDGBS_ISBLTDONE = 2
DDENUMOVERLAYZ_BACKTOFRONT = 0
DDENUMOVERLAYZ_FRONTTOBACK = 1
DDOVERZ_SENDTOFRONT = 0
DDOVERZ_SENDTOBACK = 1
DDOVERZ_MOVEFORWARD = 2
DDOVERZ_MOVEBACKWARD = 3
DDOVERZ_INSERTINFRONTOF = 4
DDOVERZ_INSERTINBACKOF = 5
DDSGR_CALIBRATE = 1
DDSMT_ISTESTREQUIRED = 1
DDEM_MODEPASSED = 1
DDEM_MODEFAILED = 2
DDENUMRET_CANCEL = 0
DDENUMRET_OK = 1
DDERR_NOTINITIALIZED = -2147221008
OBJECT_ISROOT = -2147483648
DDUNSUPPORTEDMODE = 4294967295
GUID_MiscellaneousCallbacks = 'efd60cc0-49e7-11d0-889d-00aa00bbb76a'
GUID_VideoPortCallbacks = 'efd60cc1-49e7-11d0-889d-00aa00bbb76a'
GUID_ColorControlCallbacks = 'efd60cc2-49e7-11d0-889d-00aa00bbb76a'
GUID_VideoPortCaps = 'efd60cc3-49e7-11d0-889d-00aa00bbb76a'
GUID_D3DCallbacks2 = '0ba584e1-70b6-11d0-889d-00aa00bbb76a'
GUID_D3DCallbacks3 = 'ddf41230-ec0a-11d0-a9b6-00aa00c0993e'
GUID_NonLocalVidMemCaps = '86c4fa80-8d84-11d0-94e8-00c04fc34137'
GUID_KernelCallbacks = '80863800-6b06-11d0-9b06-00a0c903a3b8'
GUID_KernelCaps = 'ffaa7540-7aa8-11d0-9b06-00a0c903a3b8'
GUID_D3DExtendedCaps = '7de41f80-9d93-11d0-89ab-00a0c9054129'
GUID_ZPixelFormats = '93869880-36cf-11d1-9b1b-00aa00bbb8ae'
GUID_DDMoreSurfaceCaps = '3b8a0466-f269-11d1-880b-00c04fd930c5'
GUID_DDStereoMode = 'f828169c-a8e8-11d2-a1f2-00a0c983eaf6'
GUID_OptSurfaceKmodeInfo = 'e05c8472-51d4-11d1-8cce-00a0c90629a8'
GUID_OptSurfaceUmodeInfo = '9d792804-5fa8-11d1-8cd0-00a0c90629a8'
GUID_UserModeDriverInfo = 'f0b0e8e2-5f97-11d1-8cd0-00a0c90629a8'
GUID_UserModeDriverPassword = '97f861b6-60a1-11d1-8cd0-00a0c90629a8'
GUID_D3DParseUnknownCommandCallback = '2e04ffa0-98e4-11d1-8ce1-00a0c90629a8'
GUID_MotionCompCallbacks = 'b1122b40-5da5-11d1-8fcf-00c04fc29b4e'
GUID_Miscellaneous2Callbacks = '406b2f00-3e5a-11d1-b640-00aa00a1f96a'
DDPF_NOVEL_TEXTURE_FORMAT = 1048576
DDPF_D3DFORMAT = 2097152
D3DFORMAT_OP_TEXTURE = 1
D3DFORMAT_OP_VOLUMETEXTURE = 2
D3DFORMAT_OP_CUBETEXTURE = 4
D3DFORMAT_OP_OFFSCREEN_RENDERTARGET = 8
D3DFORMAT_OP_SAME_FORMAT_RENDERTARGET = 16
D3DFORMAT_OP_ZSTENCIL = 64
D3DFORMAT_OP_ZSTENCIL_WITH_ARBITRARY_COLOR_DEPTH = 128
D3DFORMAT_OP_SAME_FORMAT_UP_TO_ALPHA_RENDERTARGET = 256
D3DFORMAT_OP_DISPLAYMODE = 1024
D3DFORMAT_OP_3DACCELERATION = 2048
D3DFORMAT_OP_PIXELSIZE = 4096
D3DFORMAT_OP_CONVERT_TO_ARGB = 8192
D3DFORMAT_OP_OFFSCREENPLAIN = 16384
D3DFORMAT_OP_SRGBREAD = 32768
D3DFORMAT_OP_BUMPMAP = 65536
D3DFORMAT_OP_DMAP = 131072
D3DFORMAT_OP_NOFILTER = 262144
D3DFORMAT_MEMBEROFGROUP_ARGB = 524288
D3DFORMAT_OP_SRGBWRITE = 1048576
D3DFORMAT_OP_NOALPHABLEND = 2097152
D3DFORMAT_OP_AUTOGENMIPMAP = 4194304
D3DFORMAT_OP_VERTEXTEXTURE = 8388608
D3DFORMAT_OP_NOTEXCOORDWRAPNORMIP = 16777216
DELETED_OK = 0
DELETED_LASTONE = 1
DELETED_NOTFOUND = 2
DCICOMMAND = 3075
DD_VERSION = 512
DD_RUNTIME_VERSION = 2306
DD_HAL_VERSION = 256
DDCREATEDRIVEROBJECT = 10
DDGET32BITDRIVERNAME = 11
DDNEWCALLBACKFNS = 12
DDVERSIONINFO = 13
CCHDEVICENAME = 32
MAX_DRIVER_NAME = 32
MAX_PALETTE_SIZE = 256
MAX_AUTOFLIP_BUFFERS = 10
DDSCAPS_EXECUTEBUFFER = 8388608
DDSCAPS2_VERTEXBUFFER = 32
DDSCAPS2_COMMANDBUFFER = 64
DDSCAPS2_INDEXBUFFER = 67108864
DDSCAPS3_VIDEO = 512
D3DFMT_INTERNAL_D32 = 71
D3DFMT_INTERNAL_S1D15 = 72
D3DFMT_INTERNAL_D15S1 = 73
D3DFMT_INTERNAL_S8D24 = 74
D3DFMT_INTERNAL_D24S8 = 75
D3DFMT_INTERNAL_X8D24 = 76
D3DFMT_INTERNAL_D24X8 = 77
DDHAL_PLEASEALLOC_BLOCKSIZE = 2
DDHAL_PLEASEALLOC_LINEARSIZE = 3
VIDMEM_ISLINEAR = 1
VIDMEM_ISRECTANGULAR = 2
VIDMEM_ISHEAP = 4
VIDMEM_ISNONLOCAL = 8
VIDMEM_ISWC = 16
VIDMEM_HEAPDISABLED = 32
HEAPALIASINFO_MAPPEDREAL = 1
HEAPALIASINFO_MAPPEDDUMMY = 2
DDHAL_CB32_DESTROYDRIVER = 1
DDHAL_CB32_CREATESURFACE = 2
DDHAL_CB32_SETCOLORKEY = 4
DDHAL_CB32_SETMODE = 8
DDHAL_CB32_WAITFORVERTICALBLANK = 16
DDHAL_CB32_CANCREATESURFACE = 32
DDHAL_CB32_CREATEPALETTE = 64
DDHAL_CB32_GETSCANLINE = 128
DDHAL_CB32_SETEXCLUSIVEMODE = 256
DDHAL_CB32_FLIPTOGDISURFACE = 512
DDHAL_PALCB32_DESTROYPALETTE = 1
DDHAL_PALCB32_SETENTRIES = 2
DDHAL_SURFCB32_DESTROYSURFACE = 1
DDHAL_SURFCB32_FLIP = 2
DDHAL_SURFCB32_SETCLIPLIST = 4
DDHAL_SURFCB32_LOCK = 8
DDHAL_SURFCB32_UNLOCK = 16
DDHAL_SURFCB32_BLT = 32
DDHAL_SURFCB32_SETCOLORKEY = 64
DDHAL_SURFCB32_ADDATTACHEDSURFACE = 128
DDHAL_SURFCB32_GETBLTSTATUS = 256
DDHAL_SURFCB32_GETFLIPSTATUS = 512
DDHAL_SURFCB32_UPDATEOVERLAY = 1024
DDHAL_SURFCB32_SETOVERLAYPOSITION = 2048
DDHAL_SURFCB32_RESERVED4 = 4096
DDHAL_SURFCB32_SETPALETTE = 8192
DDHAL_MISCCB32_GETAVAILDRIVERMEMORY = 1
DDHAL_MISCCB32_UPDATENONLOCALHEAP = 2
DDHAL_MISCCB32_GETHEAPALIGNMENT = 4
DDHAL_MISCCB32_GETSYSMEMBLTSTATUS = 8
DDHAL_MISC2CB32_CREATESURFACEEX = 2
DDHAL_MISC2CB32_GETDRIVERSTATE = 4
DDHAL_MISC2CB32_DESTROYDDLOCAL = 8
DDHAL_EXEBUFCB32_CANCREATEEXEBUF = 1
DDHAL_EXEBUFCB32_CREATEEXEBUF = 2
DDHAL_EXEBUFCB32_DESTROYEXEBUF = 4
DDHAL_EXEBUFCB32_LOCKEXEBUF = 8
DDHAL_EXEBUFCB32_UNLOCKEXEBUF = 16
DDHAL_VPORT32_CANCREATEVIDEOPORT = 1
DDHAL_VPORT32_CREATEVIDEOPORT = 2
DDHAL_VPORT32_FLIP = 4
DDHAL_VPORT32_GETBANDWIDTH = 8
DDHAL_VPORT32_GETINPUTFORMATS = 16
DDHAL_VPORT32_GETOUTPUTFORMATS = 32
DDHAL_VPORT32_GETFIELD = 128
DDHAL_VPORT32_GETLINE = 256
DDHAL_VPORT32_GETCONNECT = 512
DDHAL_VPORT32_DESTROY = 1024
DDHAL_VPORT32_GETFLIPSTATUS = 2048
DDHAL_VPORT32_UPDATE = 4096
DDHAL_VPORT32_WAITFORSYNC = 8192
DDHAL_VPORT32_GETSIGNALSTATUS = 16384
DDHAL_VPORT32_COLORCONTROL = 32768
DDHAL_COLOR_COLORCONTROL = 1
DDHAL_KERNEL_SYNCSURFACEDATA = 1
DDHAL_KERNEL_SYNCVIDEOPORTDATA = 2
DDHAL_MOCOMP32_GETGUIDS = 1
DDHAL_MOCOMP32_GETFORMATS = 2
DDHAL_MOCOMP32_CREATE = 4
DDHAL_MOCOMP32_GETCOMPBUFFINFO = 8
DDHAL_MOCOMP32_GETINTERNALINFO = 16
DDHAL_MOCOMP32_BEGINFRAME = 32
DDHAL_MOCOMP32_ENDFRAME = 64
DDHAL_MOCOMP32_RENDER = 128
DDHAL_MOCOMP32_QUERYSTATUS = 256
DDHAL_MOCOMP32_DESTROY = 512
DDHAL_DRIVER_NOTHANDLED = 0
DDHAL_DRIVER_HANDLED = 1
DDHAL_DRIVER_NOCKEYHW = 2
DDRAWIPAL_256 = 1
DDRAWIPAL_16 = 2
DDRAWIPAL_GDI = 4
DDRAWIPAL_STORED_8 = 8
DDRAWIPAL_STORED_16 = 16
DDRAWIPAL_STORED_24 = 32
DDRAWIPAL_EXCLUSIVE = 64
DDRAWIPAL_INHEL = 128
DDRAWIPAL_DIRTY = 256
DDRAWIPAL_ALLOW256 = 512
DDRAWIPAL_4 = 1024
DDRAWIPAL_2 = 2048
DDRAWIPAL_STORED_8INDEX = 4096
DDRAWIPAL_ALPHA = 8192
DDRAWICLIP_WATCHWINDOW = 1
DDRAWICLIP_ISINITIALIZED = 2
DDRAWICLIP_INMASTERSPRITELIST = 4
DDAL_IMPLICIT = 1
ACCESSRECT_VRAMSTYLE = 1
ACCESSRECT_NOTHOLDINGWIN16LOCK = 2
ACCESSRECT_BROKEN = 4
PFINDEX_UNINITIALIZED = 0
DDRAWISURFGBL_MEMFREE = 1
DDRAWISURFGBL_SYSMEMREQUESTED = 2
DDRAWISURFGBL_ISGDISURFACE = 4
DDRAWISURFGBL_SOFTWAREAUTOFLIP = 8
DDRAWISURFGBL_LOCKNOTHOLDINGWIN16LOCK = 16
DDRAWISURFGBL_LOCKVRAMSTYLE = 32
DDRAWISURFGBL_LOCKBROKEN = 64
DDRAWISURFGBL_IMPLICITHANDLE = 128
DDRAWISURFGBL_ISCLIENTMEM = 256
DDRAWISURFGBL_HARDWAREOPSOURCE = 512
DDRAWISURFGBL_HARDWAREOPDEST = 1024
DDRAWISURFGBL_VPORTINTERLEAVED = 2048
DDRAWISURFGBL_VPORTDATA = 4096
DDRAWISURFGBL_LATEALLOCATELINEAR = 8192
DDRAWISURFGBL_SYSMEMEXECUTEBUFFER = 16384
DDRAWISURFGBL_FASTLOCKHELD = 32768
DDRAWISURFGBL_READONLYLOCKHELD = 65536
DDRAWISURFGBL_DX8SURFACE = 524288
DDRAWISURFGBL_DDHELDONTFREE = 1048576
DDRAWISURFGBL_NOTIFYWHENUNLOCKED = 2097152
DDRAWISURFGBL_RESERVED0 = -2147483648
DDRAWISURF_ATTACHED = 1
DDRAWISURF_IMPLICITCREATE = 2
DDRAWISURF_ISFREE = 4
DDRAWISURF_ATTACHED_FROM = 8
DDRAWISURF_IMPLICITROOT = 16
DDRAWISURF_PARTOFPRIMARYCHAIN = 32
DDRAWISURF_DATAISALIASED = 64
DDRAWISURF_HASDC = 128
DDRAWISURF_HASCKEYDESTOVERLAY = 256
DDRAWISURF_HASCKEYDESTBLT = 512
DDRAWISURF_HASCKEYSRCOVERLAY = 1024
DDRAWISURF_HASCKEYSRCBLT = 2048
DDRAWISURF_LOCKEXCLUDEDCURSOR = 4096
DDRAWISURF_HASPIXELFORMAT = 8192
DDRAWISURF_HASOVERLAYDATA = 16384
DDRAWISURF_SETGAMMA = 32768
DDRAWISURF_SW_CKEYDESTOVERLAY = 65536
DDRAWISURF_SW_CKEYDESTBLT = 131072
DDRAWISURF_SW_CKEYSRCOVERLAY = 262144
DDRAWISURF_SW_CKEYSRCBLT = 524288
DDRAWISURF_HW_CKEYDESTOVERLAY = 1048576
DDRAWISURF_HW_CKEYDESTBLT = 2097152
DDRAWISURF_HW_CKEYSRCOVERLAY = 4194304
DDRAWISURF_HW_CKEYSRCBLT = 8388608
DDRAWISURF_INMASTERSPRITELIST = 16777216
DDRAWISURF_HELCB = 33554432
DDRAWISURF_FRONTBUFFER = 67108864
DDRAWISURF_BACKBUFFER = 134217728
DDRAWISURF_INVALID = 268435456
DDRAWISURF_DCIBUSY = 536870912
DDRAWISURF_GETDCNULL = 1073741824
DDRAWISURF_STEREOSURFACELEFT = 536870912
DDRAWISURF_DRIVERMANAGED = 1073741824
DDRAWISURF_DCILOCK = -2147483648
ROP_HAS_SOURCE = 1
ROP_HAS_PATTERN = 2
DDMODEINFO_PALETTIZED = 1
DDMODEINFO_MODEX = 2
DDMODEINFO_UNSUPPORTED = 4
DDMODEINFO_STANDARDVGA = 8
DDMODEINFO_MAXREFRESH = 16
DDMODEINFO_STEREO = 32
DDRAWILCL_HASEXCLUSIVEMODE = 1
DDRAWILCL_ISFULLSCREEN = 2
DDRAWILCL_SETCOOPCALLED = 4
DDRAWILCL_ACTIVEYES = 8
DDRAWILCL_ACTIVENO = 16
DDRAWILCL_HOOKEDHWND = 32
DDRAWILCL_ALLOWMODEX = 64
DDRAWILCL_V1SCLBEHAVIOUR = 128
DDRAWILCL_MODEHASBEENCHANGED = 256
DDRAWILCL_CREATEDWINDOW = 512
DDRAWILCL_DIRTYDC = 1024
DDRAWILCL_DISABLEINACTIVATE = 2048
DDRAWILCL_CURSORCLIPPED = 4096
DDRAWILCL_EXPLICITMONITOR = 8192
DDRAWILCL_MULTITHREADED = 16384
DDRAWILCL_FPUSETUP = 32768
DDRAWILCL_POWEREDDOWN = 65536
DDRAWILCL_DIRECTDRAW7 = 131072
DDRAWILCL_ATTEMPTEDD3DCONTEXT = 262144
DDRAWILCL_FPUPRESERVE = 524288
DDRAWILCL_DX8DRIVER = 1048576
DDRAWILCL_DIRECTDRAW8 = 2097152
DDRAWI_xxxxxxxxx1 = 1
DDRAWI_xxxxxxxxx2 = 2
DDRAWI_VIRTUALDESKTOP = 8
DDRAWI_MODEX = 16
DDRAWI_DISPLAYDRV = 32
DDRAWI_FULLSCREEN = 64
DDRAWI_MODECHANGED = 128
DDRAWI_NOHARDWARE = 256
DDRAWI_PALETTEINIT = 512
DDRAWI_NOEMULATION = 1024
DDRAWI_HASCKEYDESTOVERLAY = 2048
DDRAWI_HASCKEYSRCOVERLAY = 4096
DDRAWI_HASGDIPALETTE = 8192
DDRAWI_EMULATIONINITIALIZED = 16384
DDRAWI_HASGDIPALETTE_EXCLUSIVE = 32768
DDRAWI_MODEXILLEGAL = 65536
DDRAWI_FLIPPEDTOGDI = 131072
DDRAWI_NEEDSWIN16FORVRAMLOCK = 262144
DDRAWI_PDEVICEVRAMBITCLEARED = 524288
DDRAWI_STANDARDVGA = 1048576
DDRAWI_EXTENDEDALIGNMENT = 2097152
DDRAWI_CHANGINGMODE = 4194304
DDRAWI_GDIDRV = 8388608
DDRAWI_ATTACHEDTODESKTOP = 16777216
DDRAWI_UMODELOADED = 33554432
DDRAWI_DDRAWDATANOTFETCHED = 67108864
DDRAWI_SECONDARYDRIVERLOADED = 134217728
DDRAWI_TESTINGMODES = 268435456
DDRAWI_DRIVERINFO2 = 536870912
DDRAWI_BADPDEV = 1073741824
DDRAWIVPORT_ON = 1
DDRAWIVPORT_SOFTWARE_AUTOFLIP = 2
DDRAWIVPORT_COLORKEYANDINTERP = 4
DDRAWIVPORT_NOKERNELHANDLES = 8
DDRAWIVPORT_SOFTWARE_BOB = 16
DDRAWIVPORT_VBION = 32
DDRAWIVPORT_VIDEOON = 64
DDHALINFO_ISPRIMARYDISPLAY = 1
DDHALINFO_MODEXILLEGAL = 2
DDHALINFO_GETDRIVERINFOSET = 4
DDHALINFO_GETDRIVERINFO2 = 8
DDWAITVB_I_TESTVB = -2147483642
DDRAWI_VPORTSTART = 1
DDRAWI_VPORTSTOP = 2
DDRAWI_VPORTUPDATE = 3
DDRAWI_VPORTGETCOLOR = 1
DDRAWI_VPORTSETCOLOR = 2
DDRAWI_GETCOLOR = 1
DDRAWI_SETCOLOR = 2
DDMCQUERY_READ = 1
GUID_D3DCaps = '7bf06991-8794-11d0-9139-080036d2ef02'
GUID_D3DCallbacks = '7bf06990-8794-11d0-9139-080036d2ef02'
GUID_DDMoreCaps = '880baf30-b030-11d0-8ea7-00609797ea5b'
GUID_NTCallbacks = '6fe9ecde-df89-11d1-9db0-0060082771ba'
GUID_GetHeapAlignment = '42e02f16-7b41-11d2-8bff-00a0c983eaf6'
GUID_UpdateNonLocalHeap = '42e02f17-7b41-11d2-8bff-00a0c983eaf6'
GUID_NTPrivateDriverCaps = 'fad16a23-7b66-11d2-83d7-00c04f7ce58c'
GUID_VPE2Callbacks = '52882147-2d47-469a-a0d1-03455890f6c8'
DDSCAPS_COMMANDBUFFER = 1024
DDHAL_PLEASEALLOC_USERMEM = 4
DDHAL_CB32_MAPMEMORY = -2147483648
DDHAL_MISC2CB32_ALPHABLT = 1
DDHAL_CREATESURFACEEX_SWAPHANDLES = 1
DDHAL_NTCB32_FREEDRIVERMEMORY = 1
DDHAL_NTCB32_SETEXCLUSIVEMODE = 2
DDHAL_NTCB32_FLIPTOGDISURFACE = 4
DDHAL_VPORT32_GETAUTOFLIPSURF = 64
DDHAL_D3DBUFCB32_CANCREATED3DBUF = 1
DDHAL_D3DBUFCB32_CREATED3DBUF = 2
DDHAL_D3DBUFCB32_DESTROYD3DBUF = 4
DDHAL_D3DBUFCB32_LOCKD3DBUF = 8
DDHAL_D3DBUFCB32_UNLOCKD3DBUF = 16
DDHAL_PRIVATECAP_ATOMICSURFACECREATION = 1
DDHAL_PRIVATECAP_NOTIFYPRIMARYCREATION = 2
DDHAL_PRIVATECAP_RESERVED1 = 4
DDBLT_AFLAGS = -2147483648
DDABLT_SRCOVERDEST = 1
DDKERNELCAPS_SKIPFIELDS = 1
DDKERNELCAPS_AUTOFLIP = 2
DDKERNELCAPS_SETSTATE = 4
DDKERNELCAPS_LOCK = 8
DDKERNELCAPS_FLIPVIDEOPORT = 16
DDKERNELCAPS_FLIPOVERLAY = 32
DDKERNELCAPS_CAPTURE_SYSMEM = 64
DDKERNELCAPS_CAPTURE_NONLOCALVIDMEM = 128
DDKERNELCAPS_FIELDPOLARITY = 256
DDKERNELCAPS_CAPTURE_INVERTED = 512
DDIRQ_DISPLAY_VSYNC = 1
DDIRQ_RESERVED1 = 2
DDIRQ_VPORT0_VSYNC = 4
DDIRQ_VPORT0_LINE = 8
DDIRQ_VPORT1_VSYNC = 16
DDIRQ_VPORT1_LINE = 32
DDIRQ_VPORT2_VSYNC = 64
DDIRQ_VPORT2_LINE = 128
DDIRQ_VPORT3_VSYNC = 256
DDIRQ_VPORT3_LINE = 512
DDIRQ_VPORT4_VSYNC = 1024
DDIRQ_VPORT4_LINE = 2048
DDIRQ_VPORT5_VSYNC = 4096
DDIRQ_VPORT5_LINE = 8192
DDIRQ_VPORT6_VSYNC = 16384
DDIRQ_VPORT6_LINE = 32768
DDIRQ_VPORT7_VSYNC = 65536
DDIRQ_VPORT7_LINE = 131072
DDIRQ_VPORT8_VSYNC = 262144
DDIRQ_VPORT8_LINE = 524288
DDIRQ_VPORT9_VSYNC = 65536
DDIRQ_VPORT9_LINE = 131072
SURFACEALIGN_DISCARDABLE = 1
VMEMHEAP_LINEAR = 1
VMEMHEAP_RECTANGULAR = 2
VMEMHEAP_ALIGNMENT = 4
DDVPTYPE_E_HREFH_VREFH = '54f39980-da60-11cf-9b06-00a0c903a3b8'
DDVPTYPE_E_HREFH_VREFL = '92783220-da60-11cf-9b06-00a0c903a3b8'
DDVPTYPE_E_HREFL_VREFH = 'a07a02e0-da60-11cf-9b06-00a0c903a3b8'
DDVPTYPE_E_HREFL_VREFL = 'e09c77e0-da60-11cf-9b06-00a0c903a3b8'
DDVPTYPE_CCIR656 = 'fca326a0-da60-11cf-9b06-00a0c903a3b8'
DDVPTYPE_BROOKTREE = '1352a560-da61-11cf-9b06-00a0c903a3b8'
DDVPTYPE_PHILIPS = '332cf160-da61-11cf-9b06-00a0c903a3b8'
DDVPD_WIDTH = 1
DDVPD_HEIGHT = 2
DDVPD_ID = 4
DDVPD_CAPS = 8
DDVPD_FX = 16
DDVPD_AUTOFLIP = 32
DDVPD_ALIGN = 64
DDVPD_PREFERREDAUTOFLIP = 128
DDVPD_FILTERQUALITY = 256
DDVPCONNECT_DOUBLECLOCK = 1
DDVPCONNECT_VACT = 2
DDVPCONNECT_INVERTPOLARITY = 4
DDVPCONNECT_DISCARDSVREFDATA = 8
DDVPCONNECT_HALFLINE = 16
DDVPCONNECT_INTERLACED = 32
DDVPCONNECT_SHAREEVEN = 64
DDVPCONNECT_SHAREODD = 128
DDVPCAPS_AUTOFLIP = 1
DDVPCAPS_INTERLACED = 2
DDVPCAPS_NONINTERLACED = 4
DDVPCAPS_READBACKFIELD = 8
DDVPCAPS_READBACKLINE = 16
DDVPCAPS_SHAREABLE = 32
DDVPCAPS_SKIPEVENFIELDS = 64
DDVPCAPS_SKIPODDFIELDS = 128
DDVPCAPS_SYNCMASTER = 256
DDVPCAPS_VBISURFACE = 512
DDVPCAPS_COLORCONTROL = 1024
DDVPCAPS_OVERSAMPLEDVBI = 2048
DDVPCAPS_SYSTEMMEMORY = 4096
DDVPCAPS_VBIANDVIDEOINDEPENDENT = 8192
DDVPCAPS_HARDWAREDEINTERLACE = 16384
DDVPFX_CROPTOPDATA = 1
DDVPFX_CROPX = 2
DDVPFX_CROPY = 4
DDVPFX_INTERLEAVE = 8
DDVPFX_MIRRORLEFTRIGHT = 16
DDVPFX_MIRRORUPDOWN = 32
DDVPFX_PRESHRINKX = 64
DDVPFX_PRESHRINKY = 128
DDVPFX_PRESHRINKXB = 256
DDVPFX_PRESHRINKYB = 512
DDVPFX_PRESHRINKXS = 1024
DDVPFX_PRESHRINKYS = 2048
DDVPFX_PRESTRETCHX = 4096
DDVPFX_PRESTRETCHY = 8192
DDVPFX_PRESTRETCHXN = 16384
DDVPFX_PRESTRETCHYN = 32768
DDVPFX_VBICONVERT = 65536
DDVPFX_VBINOSCALE = 131072
DDVPFX_IGNOREVBIXCROP = 262144
DDVPFX_VBINOINTERLEAVE = 524288
DDVP_AUTOFLIP = 1
DDVP_CONVERT = 2
DDVP_CROP = 4
DDVP_INTERLEAVE = 8
DDVP_MIRRORLEFTRIGHT = 16
DDVP_MIRRORUPDOWN = 32
DDVP_PRESCALE = 64
DDVP_SKIPEVENFIELDS = 128
DDVP_SKIPODDFIELDS = 256
DDVP_SYNCMASTER = 512
DDVP_VBICONVERT = 1024
DDVP_VBINOSCALE = 2048
DDVP_OVERRIDEBOBWEAVE = 4096
DDVP_IGNOREVBIXCROP = 8192
DDVP_VBINOINTERLEAVE = 16384
DDVP_HARDWAREDEINTERLACE = 32768
DDVPFORMAT_VIDEO = 1
DDVPFORMAT_VBI = 2
DDVPTARGET_VIDEO = 1
DDVPTARGET_VBI = 2
DDVPWAIT_BEGIN = 1
DDVPWAIT_END = 2
DDVPWAIT_LINE = 3
DDVPFLIP_VIDEO = 1
DDVPFLIP_VBI = 2
DDVPSQ_NOSIGNAL = 1
DDVPSQ_SIGNALOK = 2
DDVPB_VIDEOPORT = 1
DDVPB_OVERLAY = 2
DDVPB_TYPE = 4
DDVPBCAPS_SOURCE = 1
DDVPBCAPS_DESTINATION = 2
DDVPCREATE_VBIONLY = 1
DDVPCREATE_VIDEOONLY = 2
DDVPSTATUS_VBIONLY = 1
DDVPSTATUS_VIDEOONLY = 2
GUID_DxApi = '8a79bef0-b915-11d0-9144-080036d2ef02'
MDL_MAPPED_TO_SYSTEM_VA = 1
MDL_PAGES_LOCKED = 2
MDL_SOURCE_IS_NONPAGED_POOL = 4
MDL_ALLOCATED_FIXED_SIZE = 8
MDL_PARTIAL = 16
MDL_PARTIAL_HAS_BEEN_MAPPED = 32
MDL_IO_PAGE_READ = 64
MDL_WRITE_OPERATION = 128
MDL_PARENT_MAPPED_SYSTEM_VA = 256
MDL_LOCK_HELD = 512
MDL_SCATTER_GATHER_VA = 1024
MDL_IO_SPACE = 2048
MDL_NETWORK_HEADER = 4096
MDL_MAPPING_CAN_FAIL = 8192
MDL_ALLOCATED_MUST_SUCCEED = 16384
MDL_64_BIT_VA = 32768
DX_OK = 0
DXERR_UNSUPPORTED = 2147500033
DXERR_GENERIC = 2147500037
DXERR_OUTOFCAPS = 2289434984
DDIRQ_BUSMASTER = 2
IRQINFO_HANDLED = 1
IRQINFO_NOTHANDLED = 2
DDSKIP_SKIPNEXT = 1
DDSKIP_ENABLENEXT = 2
DDTRANSFER_SYSTEMMEMORY = 1
DDTRANSFER_NONLOCALVIDMEM = 2
DDTRANSFER_INVERT = 4
DDTRANSFER_CANCEL = 128
DDTRANSFER_HALFLINES = 256
DXAPI_HALVERSION = 1
def _define__DDFXROP_head():
    class _DDFXROP(Structure):
        pass
    return _DDFXROP
def _define__DDFXROP():
    _DDFXROP = win32more.Graphics.DirectDraw._DDFXROP_head
    return _DDFXROP
def _define_LPDDENUMCALLBACKA():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(Guid),win32more.Foundation.PSTR,win32more.Foundation.PSTR,c_void_p, use_last_error=False)
def _define_LPDDENUMCALLBACKW():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(Guid),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,c_void_p, use_last_error=False)
def _define_LPDDENUMCALLBACKEXA():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(Guid),win32more.Foundation.PSTR,win32more.Foundation.PSTR,c_void_p,win32more.Graphics.Gdi.HMONITOR, use_last_error=False)
def _define_LPDDENUMCALLBACKEXW():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(Guid),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,c_void_p,win32more.Graphics.Gdi.HMONITOR, use_last_error=False)
def _define_LPDIRECTDRAWENUMERATEEXA():
    return CFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.LPDDENUMCALLBACKEXA,c_void_p,UInt32, use_last_error=False)
def _define_LPDIRECTDRAWENUMERATEEXW():
    return CFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.LPDDENUMCALLBACKEXW,c_void_p,UInt32, use_last_error=False)
def _define_LPDDENUMMODESCALLBACK():
    return CFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),c_void_p, use_last_error=False)
def _define_LPDDENUMMODESCALLBACK2():
    return CFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),c_void_p, use_last_error=False)
def _define_LPDDENUMSURFACESCALLBACK():
    return CFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),c_void_p, use_last_error=False)
def _define_LPDDENUMSURFACESCALLBACK2():
    return CFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface4_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),c_void_p, use_last_error=False)
def _define_LPDDENUMSURFACESCALLBACK7():
    return CFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface7_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),c_void_p, use_last_error=False)
def _define_DDARGB_head():
    class DDARGB(Structure):
        pass
    return DDARGB
def _define_DDARGB():
    DDARGB = win32more.Graphics.DirectDraw.DDARGB_head
    DDARGB._fields_ = [
        ("blue", Byte),
        ("green", Byte),
        ("red", Byte),
        ("alpha", Byte),
    ]
    return DDARGB
def _define_DDRGBA_head():
    class DDRGBA(Structure):
        pass
    return DDRGBA
def _define_DDRGBA():
    DDRGBA = win32more.Graphics.DirectDraw.DDRGBA_head
    DDRGBA._fields_ = [
        ("red", Byte),
        ("green", Byte),
        ("blue", Byte),
        ("alpha", Byte),
    ]
    return DDRGBA
def _define_DDCOLORKEY_head():
    class DDCOLORKEY(Structure):
        pass
    return DDCOLORKEY
def _define_DDCOLORKEY():
    DDCOLORKEY = win32more.Graphics.DirectDraw.DDCOLORKEY_head
    DDCOLORKEY._fields_ = [
        ("dwColorSpaceLowValue", UInt32),
        ("dwColorSpaceHighValue", UInt32),
    ]
    return DDCOLORKEY
def _define_DDBLTFX_head():
    class DDBLTFX(Structure):
        pass
    return DDBLTFX
def _define_DDBLTFX():
    DDBLTFX = win32more.Graphics.DirectDraw.DDBLTFX_head
    class DDBLTFX__Anonymous4_e__Union(Union):
        pass
    DDBLTFX__Anonymous4_e__Union._fields_ = [
        ("dwAlphaSrcConst", UInt32),
        ("lpDDSAlphaSrc", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
    ]
    class DDBLTFX__Anonymous2_e__Union(Union):
        pass
    DDBLTFX__Anonymous2_e__Union._fields_ = [
        ("dwZSrcConst", UInt32),
        ("lpDDSZBufferSrc", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
    ]
    class DDBLTFX__Anonymous5_e__Union(Union):
        pass
    DDBLTFX__Anonymous5_e__Union._fields_ = [
        ("dwFillColor", UInt32),
        ("dwFillDepth", UInt32),
        ("dwFillPixel", UInt32),
        ("lpDDSPattern", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
    ]
    class DDBLTFX__Anonymous1_e__Union(Union):
        pass
    DDBLTFX__Anonymous1_e__Union._fields_ = [
        ("dwZDestConst", UInt32),
        ("lpDDSZBufferDest", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
    ]
    class DDBLTFX__Anonymous3_e__Union(Union):
        pass
    DDBLTFX__Anonymous3_e__Union._fields_ = [
        ("dwAlphaDestConst", UInt32),
        ("lpDDSAlphaDest", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
    ]
    DDBLTFX._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
        'Anonymous4',
        'Anonymous5',
    ]
    DDBLTFX._fields_ = [
        ("dwSize", UInt32),
        ("dwDDFX", UInt32),
        ("dwROP", UInt32),
        ("dwDDROP", UInt32),
        ("dwRotationAngle", UInt32),
        ("dwZBufferOpCode", UInt32),
        ("dwZBufferLow", UInt32),
        ("dwZBufferHigh", UInt32),
        ("dwZBufferBaseDest", UInt32),
        ("dwZDestConstBitDepth", UInt32),
        ("Anonymous1", DDBLTFX__Anonymous1_e__Union),
        ("dwZSrcConstBitDepth", UInt32),
        ("Anonymous2", DDBLTFX__Anonymous2_e__Union),
        ("dwAlphaEdgeBlendBitDepth", UInt32),
        ("dwAlphaEdgeBlend", UInt32),
        ("dwReserved", UInt32),
        ("dwAlphaDestConstBitDepth", UInt32),
        ("Anonymous3", DDBLTFX__Anonymous3_e__Union),
        ("dwAlphaSrcConstBitDepth", UInt32),
        ("Anonymous4", DDBLTFX__Anonymous4_e__Union),
        ("Anonymous5", DDBLTFX__Anonymous5_e__Union),
        ("ddckDestColorkey", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckSrcColorkey", win32more.Graphics.DirectDraw.DDCOLORKEY),
    ]
    return DDBLTFX
def _define_DDSCAPS_head():
    class DDSCAPS(Structure):
        pass
    return DDSCAPS
def _define_DDSCAPS():
    DDSCAPS = win32more.Graphics.DirectDraw.DDSCAPS_head
    DDSCAPS._fields_ = [
        ("dwCaps", UInt32),
    ]
    return DDSCAPS
def _define_DDOSCAPS_head():
    class DDOSCAPS(Structure):
        pass
    return DDOSCAPS
def _define_DDOSCAPS():
    DDOSCAPS = win32more.Graphics.DirectDraw.DDOSCAPS_head
    DDOSCAPS._fields_ = [
        ("dwCaps", UInt32),
    ]
    return DDOSCAPS
def _define_DDSCAPSEX_head():
    class DDSCAPSEX(Structure):
        pass
    return DDSCAPSEX
def _define_DDSCAPSEX():
    DDSCAPSEX = win32more.Graphics.DirectDraw.DDSCAPSEX_head
    class DDSCAPSEX__Anonymous_e__Union(Union):
        pass
    DDSCAPSEX__Anonymous_e__Union._fields_ = [
        ("dwCaps4", UInt32),
        ("dwVolumeDepth", UInt32),
    ]
    DDSCAPSEX._anonymous_ = [
        'Anonymous',
    ]
    DDSCAPSEX._fields_ = [
        ("dwCaps2", UInt32),
        ("dwCaps3", UInt32),
        ("Anonymous", DDSCAPSEX__Anonymous_e__Union),
    ]
    return DDSCAPSEX
def _define_DDSCAPS2_head():
    class DDSCAPS2(Structure):
        pass
    return DDSCAPS2
def _define_DDSCAPS2():
    DDSCAPS2 = win32more.Graphics.DirectDraw.DDSCAPS2_head
    class DDSCAPS2__Anonymous_e__Union(Union):
        pass
    DDSCAPS2__Anonymous_e__Union._fields_ = [
        ("dwCaps4", UInt32),
        ("dwVolumeDepth", UInt32),
    ]
    DDSCAPS2._anonymous_ = [
        'Anonymous',
    ]
    DDSCAPS2._fields_ = [
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCaps3", UInt32),
        ("Anonymous", DDSCAPS2__Anonymous_e__Union),
    ]
    return DDSCAPS2
def _define_DDCAPS_DX1_head():
    class DDCAPS_DX1(Structure):
        pass
    return DDCAPS_DX1
def _define_DDCAPS_DX1():
    DDCAPS_DX1 = win32more.Graphics.DirectDraw.DDCAPS_DX1_head
    DDCAPS_DX1._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCKeyCaps", UInt32),
        ("dwFXCaps", UInt32),
        ("dwFXAlphaCaps", UInt32),
        ("dwPalCaps", UInt32),
        ("dwSVCaps", UInt32),
        ("dwAlphaBltConstBitDepths", UInt32),
        ("dwAlphaBltPixelBitDepths", UInt32),
        ("dwAlphaBltSurfaceBitDepths", UInt32),
        ("dwAlphaOverlayConstBitDepths", UInt32),
        ("dwAlphaOverlayPixelBitDepths", UInt32),
        ("dwAlphaOverlaySurfaceBitDepths", UInt32),
        ("dwZBufferBitDepths", UInt32),
        ("dwVidMemTotal", UInt32),
        ("dwVidMemFree", UInt32),
        ("dwMaxVisibleOverlays", UInt32),
        ("dwCurrVisibleOverlays", UInt32),
        ("dwNumFourCCCodes", UInt32),
        ("dwAlignBoundarySrc", UInt32),
        ("dwAlignSizeSrc", UInt32),
        ("dwAlignBoundaryDest", UInt32),
        ("dwAlignSizeDest", UInt32),
        ("dwAlignStrideAlign", UInt32),
        ("dwRops", UInt32 * 8),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwMinOverlayStretch", UInt32),
        ("dwMaxOverlayStretch", UInt32),
        ("dwMinLiveVideoStretch", UInt32),
        ("dwMaxLiveVideoStretch", UInt32),
        ("dwMinHwCodecStretch", UInt32),
        ("dwMaxHwCodecStretch", UInt32),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dwReserved3", UInt32),
    ]
    return DDCAPS_DX1
def _define_DDCAPS_DX3_head():
    class DDCAPS_DX3(Structure):
        pass
    return DDCAPS_DX3
def _define_DDCAPS_DX3():
    DDCAPS_DX3 = win32more.Graphics.DirectDraw.DDCAPS_DX3_head
    DDCAPS_DX3._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCKeyCaps", UInt32),
        ("dwFXCaps", UInt32),
        ("dwFXAlphaCaps", UInt32),
        ("dwPalCaps", UInt32),
        ("dwSVCaps", UInt32),
        ("dwAlphaBltConstBitDepths", UInt32),
        ("dwAlphaBltPixelBitDepths", UInt32),
        ("dwAlphaBltSurfaceBitDepths", UInt32),
        ("dwAlphaOverlayConstBitDepths", UInt32),
        ("dwAlphaOverlayPixelBitDepths", UInt32),
        ("dwAlphaOverlaySurfaceBitDepths", UInt32),
        ("dwZBufferBitDepths", UInt32),
        ("dwVidMemTotal", UInt32),
        ("dwVidMemFree", UInt32),
        ("dwMaxVisibleOverlays", UInt32),
        ("dwCurrVisibleOverlays", UInt32),
        ("dwNumFourCCCodes", UInt32),
        ("dwAlignBoundarySrc", UInt32),
        ("dwAlignSizeSrc", UInt32),
        ("dwAlignBoundaryDest", UInt32),
        ("dwAlignSizeDest", UInt32),
        ("dwAlignStrideAlign", UInt32),
        ("dwRops", UInt32 * 8),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwMinOverlayStretch", UInt32),
        ("dwMaxOverlayStretch", UInt32),
        ("dwMinLiveVideoStretch", UInt32),
        ("dwMaxLiveVideoStretch", UInt32),
        ("dwMinHwCodecStretch", UInt32),
        ("dwMaxHwCodecStretch", UInt32),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dwReserved3", UInt32),
        ("dwSVBCaps", UInt32),
        ("dwSVBCKeyCaps", UInt32),
        ("dwSVBFXCaps", UInt32),
        ("dwSVBRops", UInt32 * 8),
        ("dwVSBCaps", UInt32),
        ("dwVSBCKeyCaps", UInt32),
        ("dwVSBFXCaps", UInt32),
        ("dwVSBRops", UInt32 * 8),
        ("dwSSBCaps", UInt32),
        ("dwSSBCKeyCaps", UInt32),
        ("dwSSBFXCaps", UInt32),
        ("dwSSBRops", UInt32 * 8),
        ("dwReserved4", UInt32),
        ("dwReserved5", UInt32),
        ("dwReserved6", UInt32),
    ]
    return DDCAPS_DX3
def _define_DDCAPS_DX5_head():
    class DDCAPS_DX5(Structure):
        pass
    return DDCAPS_DX5
def _define_DDCAPS_DX5():
    DDCAPS_DX5 = win32more.Graphics.DirectDraw.DDCAPS_DX5_head
    DDCAPS_DX5._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCKeyCaps", UInt32),
        ("dwFXCaps", UInt32),
        ("dwFXAlphaCaps", UInt32),
        ("dwPalCaps", UInt32),
        ("dwSVCaps", UInt32),
        ("dwAlphaBltConstBitDepths", UInt32),
        ("dwAlphaBltPixelBitDepths", UInt32),
        ("dwAlphaBltSurfaceBitDepths", UInt32),
        ("dwAlphaOverlayConstBitDepths", UInt32),
        ("dwAlphaOverlayPixelBitDepths", UInt32),
        ("dwAlphaOverlaySurfaceBitDepths", UInt32),
        ("dwZBufferBitDepths", UInt32),
        ("dwVidMemTotal", UInt32),
        ("dwVidMemFree", UInt32),
        ("dwMaxVisibleOverlays", UInt32),
        ("dwCurrVisibleOverlays", UInt32),
        ("dwNumFourCCCodes", UInt32),
        ("dwAlignBoundarySrc", UInt32),
        ("dwAlignSizeSrc", UInt32),
        ("dwAlignBoundaryDest", UInt32),
        ("dwAlignSizeDest", UInt32),
        ("dwAlignStrideAlign", UInt32),
        ("dwRops", UInt32 * 8),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwMinOverlayStretch", UInt32),
        ("dwMaxOverlayStretch", UInt32),
        ("dwMinLiveVideoStretch", UInt32),
        ("dwMaxLiveVideoStretch", UInt32),
        ("dwMinHwCodecStretch", UInt32),
        ("dwMaxHwCodecStretch", UInt32),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dwReserved3", UInt32),
        ("dwSVBCaps", UInt32),
        ("dwSVBCKeyCaps", UInt32),
        ("dwSVBFXCaps", UInt32),
        ("dwSVBRops", UInt32 * 8),
        ("dwVSBCaps", UInt32),
        ("dwVSBCKeyCaps", UInt32),
        ("dwVSBFXCaps", UInt32),
        ("dwVSBRops", UInt32 * 8),
        ("dwSSBCaps", UInt32),
        ("dwSSBCKeyCaps", UInt32),
        ("dwSSBFXCaps", UInt32),
        ("dwSSBRops", UInt32 * 8),
        ("dwMaxVideoPorts", UInt32),
        ("dwCurrVideoPorts", UInt32),
        ("dwSVBCaps2", UInt32),
        ("dwNLVBCaps", UInt32),
        ("dwNLVBCaps2", UInt32),
        ("dwNLVBCKeyCaps", UInt32),
        ("dwNLVBFXCaps", UInt32),
        ("dwNLVBRops", UInt32 * 8),
    ]
    return DDCAPS_DX5
def _define_DDCAPS_DX6_head():
    class DDCAPS_DX6(Structure):
        pass
    return DDCAPS_DX6
def _define_DDCAPS_DX6():
    DDCAPS_DX6 = win32more.Graphics.DirectDraw.DDCAPS_DX6_head
    DDCAPS_DX6._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCKeyCaps", UInt32),
        ("dwFXCaps", UInt32),
        ("dwFXAlphaCaps", UInt32),
        ("dwPalCaps", UInt32),
        ("dwSVCaps", UInt32),
        ("dwAlphaBltConstBitDepths", UInt32),
        ("dwAlphaBltPixelBitDepths", UInt32),
        ("dwAlphaBltSurfaceBitDepths", UInt32),
        ("dwAlphaOverlayConstBitDepths", UInt32),
        ("dwAlphaOverlayPixelBitDepths", UInt32),
        ("dwAlphaOverlaySurfaceBitDepths", UInt32),
        ("dwZBufferBitDepths", UInt32),
        ("dwVidMemTotal", UInt32),
        ("dwVidMemFree", UInt32),
        ("dwMaxVisibleOverlays", UInt32),
        ("dwCurrVisibleOverlays", UInt32),
        ("dwNumFourCCCodes", UInt32),
        ("dwAlignBoundarySrc", UInt32),
        ("dwAlignSizeSrc", UInt32),
        ("dwAlignBoundaryDest", UInt32),
        ("dwAlignSizeDest", UInt32),
        ("dwAlignStrideAlign", UInt32),
        ("dwRops", UInt32 * 8),
        ("ddsOldCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwMinOverlayStretch", UInt32),
        ("dwMaxOverlayStretch", UInt32),
        ("dwMinLiveVideoStretch", UInt32),
        ("dwMaxLiveVideoStretch", UInt32),
        ("dwMinHwCodecStretch", UInt32),
        ("dwMaxHwCodecStretch", UInt32),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dwReserved3", UInt32),
        ("dwSVBCaps", UInt32),
        ("dwSVBCKeyCaps", UInt32),
        ("dwSVBFXCaps", UInt32),
        ("dwSVBRops", UInt32 * 8),
        ("dwVSBCaps", UInt32),
        ("dwVSBCKeyCaps", UInt32),
        ("dwVSBFXCaps", UInt32),
        ("dwVSBRops", UInt32 * 8),
        ("dwSSBCaps", UInt32),
        ("dwSSBCKeyCaps", UInt32),
        ("dwSSBFXCaps", UInt32),
        ("dwSSBRops", UInt32 * 8),
        ("dwMaxVideoPorts", UInt32),
        ("dwCurrVideoPorts", UInt32),
        ("dwSVBCaps2", UInt32),
        ("dwNLVBCaps", UInt32),
        ("dwNLVBCaps2", UInt32),
        ("dwNLVBCKeyCaps", UInt32),
        ("dwNLVBFXCaps", UInt32),
        ("dwNLVBRops", UInt32 * 8),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS2),
    ]
    return DDCAPS_DX6
def _define_DDCAPS_DX7_head():
    class DDCAPS_DX7(Structure):
        pass
    return DDCAPS_DX7
def _define_DDCAPS_DX7():
    DDCAPS_DX7 = win32more.Graphics.DirectDraw.DDCAPS_DX7_head
    DDCAPS_DX7._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCKeyCaps", UInt32),
        ("dwFXCaps", UInt32),
        ("dwFXAlphaCaps", UInt32),
        ("dwPalCaps", UInt32),
        ("dwSVCaps", UInt32),
        ("dwAlphaBltConstBitDepths", UInt32),
        ("dwAlphaBltPixelBitDepths", UInt32),
        ("dwAlphaBltSurfaceBitDepths", UInt32),
        ("dwAlphaOverlayConstBitDepths", UInt32),
        ("dwAlphaOverlayPixelBitDepths", UInt32),
        ("dwAlphaOverlaySurfaceBitDepths", UInt32),
        ("dwZBufferBitDepths", UInt32),
        ("dwVidMemTotal", UInt32),
        ("dwVidMemFree", UInt32),
        ("dwMaxVisibleOverlays", UInt32),
        ("dwCurrVisibleOverlays", UInt32),
        ("dwNumFourCCCodes", UInt32),
        ("dwAlignBoundarySrc", UInt32),
        ("dwAlignSizeSrc", UInt32),
        ("dwAlignBoundaryDest", UInt32),
        ("dwAlignSizeDest", UInt32),
        ("dwAlignStrideAlign", UInt32),
        ("dwRops", UInt32 * 8),
        ("ddsOldCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwMinOverlayStretch", UInt32),
        ("dwMaxOverlayStretch", UInt32),
        ("dwMinLiveVideoStretch", UInt32),
        ("dwMaxLiveVideoStretch", UInt32),
        ("dwMinHwCodecStretch", UInt32),
        ("dwMaxHwCodecStretch", UInt32),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dwReserved3", UInt32),
        ("dwSVBCaps", UInt32),
        ("dwSVBCKeyCaps", UInt32),
        ("dwSVBFXCaps", UInt32),
        ("dwSVBRops", UInt32 * 8),
        ("dwVSBCaps", UInt32),
        ("dwVSBCKeyCaps", UInt32),
        ("dwVSBFXCaps", UInt32),
        ("dwVSBRops", UInt32 * 8),
        ("dwSSBCaps", UInt32),
        ("dwSSBCKeyCaps", UInt32),
        ("dwSSBFXCaps", UInt32),
        ("dwSSBRops", UInt32 * 8),
        ("dwMaxVideoPorts", UInt32),
        ("dwCurrVideoPorts", UInt32),
        ("dwSVBCaps2", UInt32),
        ("dwNLVBCaps", UInt32),
        ("dwNLVBCaps2", UInt32),
        ("dwNLVBCKeyCaps", UInt32),
        ("dwNLVBFXCaps", UInt32),
        ("dwNLVBRops", UInt32 * 8),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS2),
    ]
    return DDCAPS_DX7
def _define_DDPIXELFORMAT_head():
    class DDPIXELFORMAT(Structure):
        pass
    return DDPIXELFORMAT
def _define_DDPIXELFORMAT():
    DDPIXELFORMAT = win32more.Graphics.DirectDraw.DDPIXELFORMAT_head
    class DDPIXELFORMAT__Anonymous5_e__Union(Union):
        pass
    DDPIXELFORMAT__Anonymous5_e__Union._fields_ = [
        ("dwRGBAlphaBitMask", UInt32),
        ("dwYUVAlphaBitMask", UInt32),
        ("dwLuminanceAlphaBitMask", UInt32),
        ("dwRGBZBitMask", UInt32),
        ("dwYUVZBitMask", UInt32),
    ]
    class DDPIXELFORMAT__Anonymous3_e__Union(Union):
        pass
    class DDPIXELFORMAT__Anonymous3_e__Union__MultiSampleCaps_e__Struct(Structure):
        pass
    DDPIXELFORMAT__Anonymous3_e__Union__MultiSampleCaps_e__Struct._fields_ = [
        ("wFlipMSTypes", UInt16),
        ("wBltMSTypes", UInt16),
    ]
    DDPIXELFORMAT__Anonymous3_e__Union._fields_ = [
        ("dwGBitMask", UInt32),
        ("dwUBitMask", UInt32),
        ("dwZBitMask", UInt32),
        ("dwBumpDvBitMask", UInt32),
        ("MultiSampleCaps", DDPIXELFORMAT__Anonymous3_e__Union__MultiSampleCaps_e__Struct),
    ]
    class DDPIXELFORMAT__Anonymous1_e__Union(Union):
        pass
    DDPIXELFORMAT__Anonymous1_e__Union._fields_ = [
        ("dwRGBBitCount", UInt32),
        ("dwYUVBitCount", UInt32),
        ("dwZBufferBitDepth", UInt32),
        ("dwAlphaBitDepth", UInt32),
        ("dwLuminanceBitCount", UInt32),
        ("dwBumpBitCount", UInt32),
        ("dwPrivateFormatBitCount", UInt32),
    ]
    class DDPIXELFORMAT__Anonymous4_e__Union(Union):
        pass
    DDPIXELFORMAT__Anonymous4_e__Union._fields_ = [
        ("dwBBitMask", UInt32),
        ("dwVBitMask", UInt32),
        ("dwStencilBitMask", UInt32),
        ("dwBumpLuminanceBitMask", UInt32),
    ]
    class DDPIXELFORMAT__Anonymous2_e__Union(Union):
        pass
    DDPIXELFORMAT__Anonymous2_e__Union._fields_ = [
        ("dwRBitMask", UInt32),
        ("dwYBitMask", UInt32),
        ("dwStencilBitDepth", UInt32),
        ("dwLuminanceBitMask", UInt32),
        ("dwBumpDuBitMask", UInt32),
        ("dwOperations", UInt32),
    ]
    DDPIXELFORMAT._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
        'Anonymous4',
        'Anonymous5',
    ]
    DDPIXELFORMAT._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwFourCC", UInt32),
        ("Anonymous1", DDPIXELFORMAT__Anonymous1_e__Union),
        ("Anonymous2", DDPIXELFORMAT__Anonymous2_e__Union),
        ("Anonymous3", DDPIXELFORMAT__Anonymous3_e__Union),
        ("Anonymous4", DDPIXELFORMAT__Anonymous4_e__Union),
        ("Anonymous5", DDPIXELFORMAT__Anonymous5_e__Union),
    ]
    return DDPIXELFORMAT
def _define_DDOVERLAYFX_head():
    class DDOVERLAYFX(Structure):
        pass
    return DDOVERLAYFX
def _define_DDOVERLAYFX():
    DDOVERLAYFX = win32more.Graphics.DirectDraw.DDOVERLAYFX_head
    class DDOVERLAYFX__Anonymous2_e__Union(Union):
        pass
    DDOVERLAYFX__Anonymous2_e__Union._fields_ = [
        ("dwAlphaSrcConst", UInt32),
        ("lpDDSAlphaSrc", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
    ]
    class DDOVERLAYFX__Anonymous1_e__Union(Union):
        pass
    DDOVERLAYFX__Anonymous1_e__Union._fields_ = [
        ("dwAlphaDestConst", UInt32),
        ("lpDDSAlphaDest", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
    ]
    DDOVERLAYFX._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    DDOVERLAYFX._fields_ = [
        ("dwSize", UInt32),
        ("dwAlphaEdgeBlendBitDepth", UInt32),
        ("dwAlphaEdgeBlend", UInt32),
        ("dwReserved", UInt32),
        ("dwAlphaDestConstBitDepth", UInt32),
        ("Anonymous1", DDOVERLAYFX__Anonymous1_e__Union),
        ("dwAlphaSrcConstBitDepth", UInt32),
        ("Anonymous2", DDOVERLAYFX__Anonymous2_e__Union),
        ("dckDestColorkey", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("dckSrcColorkey", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("dwDDFX", UInt32),
        ("dwFlags", UInt32),
    ]
    return DDOVERLAYFX
def _define_DDBLTBATCH_head():
    class DDBLTBATCH(Structure):
        pass
    return DDBLTBATCH
def _define_DDBLTBATCH():
    DDBLTBATCH = win32more.Graphics.DirectDraw.DDBLTBATCH_head
    DDBLTBATCH._fields_ = [
        ("lprDest", POINTER(win32more.Foundation.RECT_head)),
        ("lpDDSSrc", win32more.Graphics.DirectDraw.IDirectDrawSurface_head),
        ("lprSrc", POINTER(win32more.Foundation.RECT_head)),
        ("dwFlags", UInt32),
        ("lpDDBltFx", POINTER(win32more.Graphics.DirectDraw.DDBLTFX_head)),
    ]
    return DDBLTBATCH
def _define_DDGAMMARAMP_head():
    class DDGAMMARAMP(Structure):
        pass
    return DDGAMMARAMP
def _define_DDGAMMARAMP():
    DDGAMMARAMP = win32more.Graphics.DirectDraw.DDGAMMARAMP_head
    DDGAMMARAMP._fields_ = [
        ("red", UInt16 * 256),
        ("green", UInt16 * 256),
        ("blue", UInt16 * 256),
    ]
    return DDGAMMARAMP
def _define_DDDEVICEIDENTIFIER_head():
    class DDDEVICEIDENTIFIER(Structure):
        pass
    return DDDEVICEIDENTIFIER
def _define_DDDEVICEIDENTIFIER():
    DDDEVICEIDENTIFIER = win32more.Graphics.DirectDraw.DDDEVICEIDENTIFIER_head
    DDDEVICEIDENTIFIER._fields_ = [
        ("szDriver", win32more.Foundation.CHAR * 512),
        ("szDescription", win32more.Foundation.CHAR * 512),
        ("liDriverVersion", win32more.Foundation.LARGE_INTEGER),
        ("dwVendorId", UInt32),
        ("dwDeviceId", UInt32),
        ("dwSubSysId", UInt32),
        ("dwRevision", UInt32),
        ("guidDeviceIdentifier", Guid),
    ]
    return DDDEVICEIDENTIFIER
def _define_DDDEVICEIDENTIFIER2_head():
    class DDDEVICEIDENTIFIER2(Structure):
        pass
    return DDDEVICEIDENTIFIER2
def _define_DDDEVICEIDENTIFIER2():
    DDDEVICEIDENTIFIER2 = win32more.Graphics.DirectDraw.DDDEVICEIDENTIFIER2_head
    DDDEVICEIDENTIFIER2._fields_ = [
        ("szDriver", win32more.Foundation.CHAR * 512),
        ("szDescription", win32more.Foundation.CHAR * 512),
        ("liDriverVersion", win32more.Foundation.LARGE_INTEGER),
        ("dwVendorId", UInt32),
        ("dwDeviceId", UInt32),
        ("dwSubSysId", UInt32),
        ("dwRevision", UInt32),
        ("guidDeviceIdentifier", Guid),
        ("dwWHQLLevel", UInt32),
    ]
    return DDDEVICEIDENTIFIER2
def _define_LPCLIPPERCALLBACK():
    return CFUNCTYPE(UInt32,win32more.Graphics.DirectDraw.IDirectDrawClipper_head,win32more.Foundation.HWND,UInt32,c_void_p, use_last_error=False)
def _define_IDirectDraw_head():
    class IDirectDraw(win32more.System.Com.IUnknown_head):
        Guid = Guid('6c14db80-a733-11ce-a521-0020af0be560')
    return IDirectDraw
def _define_IDirectDraw():
    IDirectDraw = win32more.Graphics.DirectDraw.IDirectDraw_head
    IDirectDraw.Compact = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(3, 'Compact', ()))
    IDirectDraw.CreateClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head),win32more.System.Com.IUnknown_head, use_last_error=False)(4, 'CreateClipper', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw.CreatePalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head),win32more.System.Com.IUnknown_head, use_last_error=False)(5, 'CreatePalette', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw.CreateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface_head),win32more.System.Com.IUnknown_head, use_last_error=False)(6, 'CreateSurface', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw.DuplicateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface_head,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface_head), use_last_error=False)(7, 'DuplicateSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw.EnumDisplayModes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMMODESCALLBACK, use_last_error=False)(8, 'EnumDisplayModes', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw.EnumSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(9, 'EnumSurfaces', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw.FlipToGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(10, 'FlipToGDISurface', ()))
    IDirectDraw.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head),POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head), use_last_error=False)(11, 'GetCaps', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw.GetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(12, 'GetDisplayMode', ((1, 'param0'),)))
    IDirectDraw.GetFourCCCodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32),POINTER(UInt32), use_last_error=False)(13, 'GetFourCCCodes', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw.GetGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface_head), use_last_error=False)(14, 'GetGDISurface', ((1, 'param0'),)))
    IDirectDraw.GetMonitorFrequency = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(15, 'GetMonitorFrequency', ((1, 'param0'),)))
    IDirectDraw.GetScanLine = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(16, 'GetScanLine', ((1, 'param0'),)))
    IDirectDraw.GetVerticalBlankStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32), use_last_error=False)(17, 'GetVerticalBlankStatus', ((1, 'param0'),)))
    IDirectDraw.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(18, 'Initialize', ((1, 'param0'),)))
    IDirectDraw.RestoreDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(19, 'RestoreDisplayMode', ()))
    IDirectDraw.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(20, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw.SetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32, use_last_error=False)(21, 'SetDisplayMode', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw.WaitForVerticalBlank = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Foundation.HANDLE, use_last_error=False)(22, 'WaitForVerticalBlank', ((1, 'param0'),(1, 'param1'),)))
    return IDirectDraw
def _define_IDirectDraw2_head():
    class IDirectDraw2(win32more.System.Com.IUnknown_head):
        Guid = Guid('b3a6f3e0-2b43-11cf-a2de-00aa00b93356')
    return IDirectDraw2
def _define_IDirectDraw2():
    IDirectDraw2 = win32more.Graphics.DirectDraw.IDirectDraw2_head
    IDirectDraw2.Compact = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(3, 'Compact', ()))
    IDirectDraw2.CreateClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head),win32more.System.Com.IUnknown_head, use_last_error=False)(4, 'CreateClipper', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw2.CreatePalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head),win32more.System.Com.IUnknown_head, use_last_error=False)(5, 'CreatePalette', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw2.CreateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface_head),win32more.System.Com.IUnknown_head, use_last_error=False)(6, 'CreateSurface', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw2.DuplicateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface_head,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface_head), use_last_error=False)(7, 'DuplicateSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw2.EnumDisplayModes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMMODESCALLBACK, use_last_error=False)(8, 'EnumDisplayModes', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw2.EnumSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(9, 'EnumSurfaces', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw2.FlipToGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(10, 'FlipToGDISurface', ()))
    IDirectDraw2.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head),POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head), use_last_error=False)(11, 'GetCaps', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw2.GetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(12, 'GetDisplayMode', ((1, 'param0'),)))
    IDirectDraw2.GetFourCCCodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32),POINTER(UInt32), use_last_error=False)(13, 'GetFourCCCodes', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw2.GetGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface_head), use_last_error=False)(14, 'GetGDISurface', ((1, 'param0'),)))
    IDirectDraw2.GetMonitorFrequency = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(15, 'GetMonitorFrequency', ((1, 'param0'),)))
    IDirectDraw2.GetScanLine = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(16, 'GetScanLine', ((1, 'param0'),)))
    IDirectDraw2.GetVerticalBlankStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32), use_last_error=False)(17, 'GetVerticalBlankStatus', ((1, 'param0'),)))
    IDirectDraw2.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(18, 'Initialize', ((1, 'param0'),)))
    IDirectDraw2.RestoreDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(19, 'RestoreDisplayMode', ()))
    IDirectDraw2.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(20, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw2.SetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,UInt32,UInt32, use_last_error=False)(21, 'SetDisplayMode', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDraw2.WaitForVerticalBlank = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Foundation.HANDLE, use_last_error=False)(22, 'WaitForVerticalBlank', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw2.GetAvailableVidMem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS_head),POINTER(UInt32),POINTER(UInt32), use_last_error=False)(23, 'GetAvailableVidMem', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectDraw2
def _define_IDirectDraw4_head():
    class IDirectDraw4(win32more.System.Com.IUnknown_head):
        Guid = Guid('9c59509a-39bd-11d1-8c4a-00c04fd930c5')
    return IDirectDraw4
def _define_IDirectDraw4():
    IDirectDraw4 = win32more.Graphics.DirectDraw.IDirectDraw4_head
    IDirectDraw4.Compact = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(3, 'Compact', ()))
    IDirectDraw4.CreateClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head),win32more.System.Com.IUnknown_head, use_last_error=False)(4, 'CreateClipper', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw4.CreatePalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head),win32more.System.Com.IUnknown_head, use_last_error=False)(5, 'CreatePalette', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw4.CreateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface4_head),win32more.System.Com.IUnknown_head, use_last_error=False)(6, 'CreateSurface', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw4.DuplicateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface4_head,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface4_head), use_last_error=False)(7, 'DuplicateSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw4.EnumDisplayModes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMMODESCALLBACK2, use_last_error=False)(8, 'EnumDisplayModes', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw4.EnumSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK2, use_last_error=False)(9, 'EnumSurfaces', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw4.FlipToGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(10, 'FlipToGDISurface', ()))
    IDirectDraw4.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head),POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head), use_last_error=False)(11, 'GetCaps', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw4.GetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head), use_last_error=False)(12, 'GetDisplayMode', ((1, 'param0'),)))
    IDirectDraw4.GetFourCCCodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32),POINTER(UInt32), use_last_error=False)(13, 'GetFourCCCodes', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw4.GetGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface4_head), use_last_error=False)(14, 'GetGDISurface', ((1, 'param0'),)))
    IDirectDraw4.GetMonitorFrequency = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(15, 'GetMonitorFrequency', ((1, 'param0'),)))
    IDirectDraw4.GetScanLine = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(16, 'GetScanLine', ((1, 'param0'),)))
    IDirectDraw4.GetVerticalBlankStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32), use_last_error=False)(17, 'GetVerticalBlankStatus', ((1, 'param0'),)))
    IDirectDraw4.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(18, 'Initialize', ((1, 'param0'),)))
    IDirectDraw4.RestoreDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(19, 'RestoreDisplayMode', ()))
    IDirectDraw4.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(20, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw4.SetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,UInt32,UInt32, use_last_error=False)(21, 'SetDisplayMode', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDraw4.WaitForVerticalBlank = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Foundation.HANDLE, use_last_error=False)(22, 'WaitForVerticalBlank', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw4.GetAvailableVidMem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS2_head),POINTER(UInt32),POINTER(UInt32), use_last_error=False)(23, 'GetAvailableVidMem', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw4.GetSurfaceFromDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface4_head), use_last_error=False)(24, 'GetSurfaceFromDC', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw4.RestoreAllSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(25, 'RestoreAllSurfaces', ()))
    IDirectDraw4.TestCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(26, 'TestCooperativeLevel', ()))
    IDirectDraw4.GetDeviceIdentifier = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDDEVICEIDENTIFIER_head),UInt32, use_last_error=False)(27, 'GetDeviceIdentifier', ((1, 'param0'),(1, 'param1'),)))
    return IDirectDraw4
def _define_IDirectDraw7_head():
    class IDirectDraw7(win32more.System.Com.IUnknown_head):
        Guid = Guid('15e65ec0-3b9c-11d2-b92f-00609797ea5b')
    return IDirectDraw7
def _define_IDirectDraw7():
    IDirectDraw7 = win32more.Graphics.DirectDraw.IDirectDraw7_head
    IDirectDraw7.Compact = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(3, 'Compact', ()))
    IDirectDraw7.CreateClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head),win32more.System.Com.IUnknown_head, use_last_error=False)(4, 'CreateClipper', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw7.CreatePalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head),win32more.System.Com.IUnknown_head, use_last_error=False)(5, 'CreatePalette', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw7.CreateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface7_head),win32more.System.Com.IUnknown_head, use_last_error=False)(6, 'CreateSurface', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw7.DuplicateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface7_head,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface7_head), use_last_error=False)(7, 'DuplicateSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw7.EnumDisplayModes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMMODESCALLBACK2, use_last_error=False)(8, 'EnumDisplayModes', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw7.EnumSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK7, use_last_error=False)(9, 'EnumSurfaces', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDraw7.FlipToGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(10, 'FlipToGDISurface', ()))
    IDirectDraw7.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head),POINTER(win32more.Graphics.DirectDraw.DDCAPS_DX7_head), use_last_error=False)(11, 'GetCaps', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw7.GetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head), use_last_error=False)(12, 'GetDisplayMode', ((1, 'param0'),)))
    IDirectDraw7.GetFourCCCodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32),POINTER(UInt32), use_last_error=False)(13, 'GetFourCCCodes', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw7.GetGDISurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface7_head), use_last_error=False)(14, 'GetGDISurface', ((1, 'param0'),)))
    IDirectDraw7.GetMonitorFrequency = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(15, 'GetMonitorFrequency', ((1, 'param0'),)))
    IDirectDraw7.GetScanLine = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(16, 'GetScanLine', ((1, 'param0'),)))
    IDirectDraw7.GetVerticalBlankStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32), use_last_error=False)(17, 'GetVerticalBlankStatus', ((1, 'param0'),)))
    IDirectDraw7.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(18, 'Initialize', ((1, 'param0'),)))
    IDirectDraw7.RestoreDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(19, 'RestoreDisplayMode', ()))
    IDirectDraw7.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(20, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw7.SetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,UInt32,UInt32, use_last_error=False)(21, 'SetDisplayMode', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDraw7.WaitForVerticalBlank = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Foundation.HANDLE, use_last_error=False)(22, 'WaitForVerticalBlank', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw7.GetAvailableVidMem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS2_head),POINTER(UInt32),POINTER(UInt32), use_last_error=False)(23, 'GetAvailableVidMem', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw7.GetSurfaceFromDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC,POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface7_head), use_last_error=False)(24, 'GetSurfaceFromDC', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw7.RestoreAllSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(25, 'RestoreAllSurfaces', ()))
    IDirectDraw7.TestCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(26, 'TestCooperativeLevel', ()))
    IDirectDraw7.GetDeviceIdentifier = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDDEVICEIDENTIFIER2_head),UInt32, use_last_error=False)(27, 'GetDeviceIdentifier', ((1, 'param0'),(1, 'param1'),)))
    IDirectDraw7.StartModeTest = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.SIZE_head),UInt32,UInt32, use_last_error=False)(28, 'StartModeTest', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDraw7.EvaluateMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(UInt32), use_last_error=False)(29, 'EvaluateMode', ((1, 'param0'),(1, 'param1'),)))
    return IDirectDraw7
def _define_IDirectDrawPalette_head():
    class IDirectDrawPalette(win32more.System.Com.IUnknown_head):
        Guid = Guid('6c14db84-a733-11ce-a521-0020af0be560')
    return IDirectDrawPalette
def _define_IDirectDrawPalette():
    IDirectDrawPalette = win32more.Graphics.DirectDraw.IDirectDrawPalette_head
    IDirectDrawPalette.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(3, 'GetCaps', ((1, 'param0'),)))
    IDirectDrawPalette.GetEntries = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head), use_last_error=False)(4, 'GetEntries', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawPalette.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDraw_head,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head), use_last_error=False)(5, 'Initialize', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawPalette.SetEntries = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head), use_last_error=False)(6, 'SetEntries', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectDrawPalette
def _define_IDirectDrawClipper_head():
    class IDirectDrawClipper(win32more.System.Com.IUnknown_head):
        Guid = Guid('6c14db85-a733-11ce-a521-0020af0be560')
    return IDirectDrawClipper
def _define_IDirectDrawClipper():
    IDirectDrawClipper = win32more.Graphics.DirectDraw.IDirectDrawClipper_head
    IDirectDrawClipper.GetClipList = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Graphics.Gdi.RGNDATA_head),POINTER(UInt32), use_last_error=False)(3, 'GetClipList', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawClipper.GetHWnd = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.HWND), use_last_error=False)(4, 'GetHWnd', ((1, 'param0'),)))
    IDirectDrawClipper.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDraw_head,UInt32, use_last_error=False)(5, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawClipper.IsClipListChanged = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BOOL), use_last_error=False)(6, 'IsClipListChanged', ((1, 'param0'),)))
    IDirectDrawClipper.SetClipList = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Gdi.RGNDATA_head),UInt32, use_last_error=False)(7, 'SetClipList', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawClipper.SetHWnd = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Foundation.HWND, use_last_error=False)(8, 'SetHWnd', ((1, 'param0'),(1, 'param1'),)))
    return IDirectDrawClipper
def _define_IDirectDrawSurface_head():
    class IDirectDrawSurface(win32more.System.Com.IUnknown_head):
        Guid = Guid('6c14db81-a733-11ce-a521-0020af0be560')
    return IDirectDrawSurface
def _define_IDirectDrawSurface():
    IDirectDrawSurface = win32more.Graphics.DirectDraw.IDirectDrawSurface_head
    IDirectDrawSurface.AddAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface_head, use_last_error=False)(3, 'AddAttachedSurface', ((1, 'param0'),)))
    IDirectDrawSurface.AddOverlayDirtyRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(4, 'AddOverlayDirtyRect', ((1, 'param0'),)))
    IDirectDrawSurface.Blt = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDBLTFX_head), use_last_error=False)(5, 'Blt', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface.BltBatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDBLTBATCH_head),UInt32,UInt32, use_last_error=False)(6, 'BltBatch', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface.BltFast = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface_head,POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(7, 'BltFast', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface.DeleteAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface_head, use_last_error=False)(8, 'DeleteAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.EnumAttachedSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(9, 'EnumAttachedSurfaces', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.EnumOverlayZOrders = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(10, 'EnumOverlayZOrders', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface.Flip = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface_head,UInt32, use_last_error=False)(11, 'Flip', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.GetAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface_head), use_last_error=False)(12, 'GetAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.GetBltStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(13, 'GetBltStatus', ((1, 'param0'),)))
    IDirectDrawSurface.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS_head), use_last_error=False)(14, 'GetCaps', ((1, 'param0'),)))
    IDirectDrawSurface.GetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head), use_last_error=False)(15, 'GetClipper', ((1, 'param0'),)))
    IDirectDrawSurface.GetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(16, 'GetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.GetDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Gdi.HDC), use_last_error=False)(17, 'GetDC', ((1, 'param0'),)))
    IDirectDrawSurface.GetFlipStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(18, 'GetFlipStatus', ((1, 'param0'),)))
    IDirectDrawSurface.GetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),POINTER(Int32), use_last_error=False)(19, 'GetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.GetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head), use_last_error=False)(20, 'GetPalette', ((1, 'param0'),)))
    IDirectDrawSurface.GetPixelFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head), use_last_error=False)(21, 'GetPixelFormat', ((1, 'param0'),)))
    IDirectDrawSurface.GetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(22, 'GetSurfaceDesc', ((1, 'param0'),)))
    IDirectDrawSurface.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDraw_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(23, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.IsLost = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(24, 'IsLost', ()))
    IDirectDrawSurface.Lock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),UInt32,win32more.Foundation.HANDLE, use_last_error=False)(25, 'Lock', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawSurface.ReleaseDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC, use_last_error=False)(26, 'ReleaseDC', ((1, 'param0'),)))
    IDirectDrawSurface.Restore = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(27, 'Restore', ()))
    IDirectDrawSurface.SetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawClipper_head, use_last_error=False)(28, 'SetClipper', ((1, 'param0'),)))
    IDirectDrawSurface.SetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(29, 'SetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.SetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32, use_last_error=False)(30, 'SetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface.SetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawPalette_head, use_last_error=False)(31, 'SetPalette', ((1, 'param0'),)))
    IDirectDrawSurface.Unlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p, use_last_error=False)(32, 'Unlock', ((1, 'param0'),)))
    IDirectDrawSurface.UpdateOverlay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDOVERLAYFX_head), use_last_error=False)(33, 'UpdateOverlay', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface.UpdateOverlayDisplay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(34, 'UpdateOverlayDisplay', ((1, 'param0'),)))
    IDirectDrawSurface.UpdateOverlayZOrder = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface_head, use_last_error=False)(35, 'UpdateOverlayZOrder', ((1, 'param0'),(1, 'param1'),)))
    return IDirectDrawSurface
def _define_IDirectDrawSurface2_head():
    class IDirectDrawSurface2(win32more.System.Com.IUnknown_head):
        Guid = Guid('57805885-6eec-11cf-9441-a82303c10e27')
    return IDirectDrawSurface2
def _define_IDirectDrawSurface2():
    IDirectDrawSurface2 = win32more.Graphics.DirectDraw.IDirectDrawSurface2_head
    IDirectDrawSurface2.AddAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface2_head, use_last_error=False)(3, 'AddAttachedSurface', ((1, 'param0'),)))
    IDirectDrawSurface2.AddOverlayDirtyRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(4, 'AddOverlayDirtyRect', ((1, 'param0'),)))
    IDirectDrawSurface2.Blt = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface2_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDBLTFX_head), use_last_error=False)(5, 'Blt', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface2.BltBatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDBLTBATCH_head),UInt32,UInt32, use_last_error=False)(6, 'BltBatch', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface2.BltFast = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface2_head,POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(7, 'BltFast', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface2.DeleteAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface2_head, use_last_error=False)(8, 'DeleteAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.EnumAttachedSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(9, 'EnumAttachedSurfaces', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.EnumOverlayZOrders = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(10, 'EnumOverlayZOrders', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface2.Flip = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface2_head,UInt32, use_last_error=False)(11, 'Flip', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.GetAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface2_head), use_last_error=False)(12, 'GetAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.GetBltStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(13, 'GetBltStatus', ((1, 'param0'),)))
    IDirectDrawSurface2.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS_head), use_last_error=False)(14, 'GetCaps', ((1, 'param0'),)))
    IDirectDrawSurface2.GetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head), use_last_error=False)(15, 'GetClipper', ((1, 'param0'),)))
    IDirectDrawSurface2.GetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(16, 'GetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.GetDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Gdi.HDC), use_last_error=False)(17, 'GetDC', ((1, 'param0'),)))
    IDirectDrawSurface2.GetFlipStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(18, 'GetFlipStatus', ((1, 'param0'),)))
    IDirectDrawSurface2.GetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),POINTER(Int32), use_last_error=False)(19, 'GetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.GetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head), use_last_error=False)(20, 'GetPalette', ((1, 'param0'),)))
    IDirectDrawSurface2.GetPixelFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head), use_last_error=False)(21, 'GetPixelFormat', ((1, 'param0'),)))
    IDirectDrawSurface2.GetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(22, 'GetSurfaceDesc', ((1, 'param0'),)))
    IDirectDrawSurface2.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDraw_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(23, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.IsLost = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(24, 'IsLost', ()))
    IDirectDrawSurface2.Lock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),UInt32,win32more.Foundation.HANDLE, use_last_error=False)(25, 'Lock', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawSurface2.ReleaseDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC, use_last_error=False)(26, 'ReleaseDC', ((1, 'param0'),)))
    IDirectDrawSurface2.Restore = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(27, 'Restore', ()))
    IDirectDrawSurface2.SetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawClipper_head, use_last_error=False)(28, 'SetClipper', ((1, 'param0'),)))
    IDirectDrawSurface2.SetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(29, 'SetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.SetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32, use_last_error=False)(30, 'SetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.SetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawPalette_head, use_last_error=False)(31, 'SetPalette', ((1, 'param0'),)))
    IDirectDrawSurface2.Unlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p, use_last_error=False)(32, 'Unlock', ((1, 'param0'),)))
    IDirectDrawSurface2.UpdateOverlay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface2_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDOVERLAYFX_head), use_last_error=False)(33, 'UpdateOverlay', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface2.UpdateOverlayDisplay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(34, 'UpdateOverlayDisplay', ((1, 'param0'),)))
    IDirectDrawSurface2.UpdateOverlayZOrder = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface2_head, use_last_error=False)(35, 'UpdateOverlayZOrder', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface2.GetDDInterface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(c_void_p), use_last_error=False)(36, 'GetDDInterface', ((1, 'param0'),)))
    IDirectDrawSurface2.PageLock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(37, 'PageLock', ((1, 'param0'),)))
    IDirectDrawSurface2.PageUnlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(38, 'PageUnlock', ((1, 'param0'),)))
    return IDirectDrawSurface2
def _define_IDirectDrawSurface3_head():
    class IDirectDrawSurface3(win32more.System.Com.IUnknown_head):
        Guid = Guid('da044e00-69b2-11d0-a1d5-00aa00b8dfbb')
    return IDirectDrawSurface3
def _define_IDirectDrawSurface3():
    IDirectDrawSurface3 = win32more.Graphics.DirectDraw.IDirectDrawSurface3_head
    IDirectDrawSurface3.AddAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface3_head, use_last_error=False)(3, 'AddAttachedSurface', ((1, 'param0'),)))
    IDirectDrawSurface3.AddOverlayDirtyRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(4, 'AddOverlayDirtyRect', ((1, 'param0'),)))
    IDirectDrawSurface3.Blt = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface3_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDBLTFX_head), use_last_error=False)(5, 'Blt', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface3.BltBatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDBLTBATCH_head),UInt32,UInt32, use_last_error=False)(6, 'BltBatch', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface3.BltFast = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface3_head,POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(7, 'BltFast', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface3.DeleteAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface3_head, use_last_error=False)(8, 'DeleteAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.EnumAttachedSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(9, 'EnumAttachedSurfaces', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.EnumOverlayZOrders = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK, use_last_error=False)(10, 'EnumOverlayZOrders', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface3.Flip = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface3_head,UInt32, use_last_error=False)(11, 'Flip', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.GetAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface3_head), use_last_error=False)(12, 'GetAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.GetBltStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(13, 'GetBltStatus', ((1, 'param0'),)))
    IDirectDrawSurface3.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS_head), use_last_error=False)(14, 'GetCaps', ((1, 'param0'),)))
    IDirectDrawSurface3.GetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head), use_last_error=False)(15, 'GetClipper', ((1, 'param0'),)))
    IDirectDrawSurface3.GetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(16, 'GetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.GetDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Gdi.HDC), use_last_error=False)(17, 'GetDC', ((1, 'param0'),)))
    IDirectDrawSurface3.GetFlipStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(18, 'GetFlipStatus', ((1, 'param0'),)))
    IDirectDrawSurface3.GetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),POINTER(Int32), use_last_error=False)(19, 'GetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.GetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head), use_last_error=False)(20, 'GetPalette', ((1, 'param0'),)))
    IDirectDrawSurface3.GetPixelFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head), use_last_error=False)(21, 'GetPixelFormat', ((1, 'param0'),)))
    IDirectDrawSurface3.GetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(22, 'GetSurfaceDesc', ((1, 'param0'),)))
    IDirectDrawSurface3.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDraw_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head), use_last_error=False)(23, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.IsLost = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(24, 'IsLost', ()))
    IDirectDrawSurface3.Lock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),UInt32,win32more.Foundation.HANDLE, use_last_error=False)(25, 'Lock', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawSurface3.ReleaseDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC, use_last_error=False)(26, 'ReleaseDC', ((1, 'param0'),)))
    IDirectDrawSurface3.Restore = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(27, 'Restore', ()))
    IDirectDrawSurface3.SetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawClipper_head, use_last_error=False)(28, 'SetClipper', ((1, 'param0'),)))
    IDirectDrawSurface3.SetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(29, 'SetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.SetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32, use_last_error=False)(30, 'SetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.SetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawPalette_head, use_last_error=False)(31, 'SetPalette', ((1, 'param0'),)))
    IDirectDrawSurface3.Unlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p, use_last_error=False)(32, 'Unlock', ((1, 'param0'),)))
    IDirectDrawSurface3.UpdateOverlay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface3_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDOVERLAYFX_head), use_last_error=False)(33, 'UpdateOverlay', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface3.UpdateOverlayDisplay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(34, 'UpdateOverlayDisplay', ((1, 'param0'),)))
    IDirectDrawSurface3.UpdateOverlayZOrder = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface3_head, use_last_error=False)(35, 'UpdateOverlayZOrder', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface3.GetDDInterface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(c_void_p), use_last_error=False)(36, 'GetDDInterface', ((1, 'param0'),)))
    IDirectDrawSurface3.PageLock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(37, 'PageLock', ((1, 'param0'),)))
    IDirectDrawSurface3.PageUnlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(38, 'PageUnlock', ((1, 'param0'),)))
    IDirectDrawSurface3.SetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head),UInt32, use_last_error=False)(39, 'SetSurfaceDesc', ((1, 'param0'),(1, 'param1'),)))
    return IDirectDrawSurface3
def _define_IDirectDrawSurface4_head():
    class IDirectDrawSurface4(win32more.System.Com.IUnknown_head):
        Guid = Guid('0b2b8630-ad35-11d0-8ea6-00609797ea5b')
    return IDirectDrawSurface4
def _define_IDirectDrawSurface4():
    IDirectDrawSurface4 = win32more.Graphics.DirectDraw.IDirectDrawSurface4_head
    IDirectDrawSurface4.AddAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface4_head, use_last_error=False)(3, 'AddAttachedSurface', ((1, 'param0'),)))
    IDirectDrawSurface4.AddOverlayDirtyRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(4, 'AddOverlayDirtyRect', ((1, 'param0'),)))
    IDirectDrawSurface4.Blt = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface4_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDBLTFX_head), use_last_error=False)(5, 'Blt', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface4.BltBatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDBLTBATCH_head),UInt32,UInt32, use_last_error=False)(6, 'BltBatch', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface4.BltFast = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface4_head,POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(7, 'BltFast', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface4.DeleteAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface4_head, use_last_error=False)(8, 'DeleteAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.EnumAttachedSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK2, use_last_error=False)(9, 'EnumAttachedSurfaces', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.EnumOverlayZOrders = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK2, use_last_error=False)(10, 'EnumOverlayZOrders', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface4.Flip = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface4_head,UInt32, use_last_error=False)(11, 'Flip', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.GetAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS2_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface4_head), use_last_error=False)(12, 'GetAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.GetBltStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(13, 'GetBltStatus', ((1, 'param0'),)))
    IDirectDrawSurface4.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS2_head), use_last_error=False)(14, 'GetCaps', ((1, 'param0'),)))
    IDirectDrawSurface4.GetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head), use_last_error=False)(15, 'GetClipper', ((1, 'param0'),)))
    IDirectDrawSurface4.GetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(16, 'GetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.GetDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Gdi.HDC), use_last_error=False)(17, 'GetDC', ((1, 'param0'),)))
    IDirectDrawSurface4.GetFlipStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(18, 'GetFlipStatus', ((1, 'param0'),)))
    IDirectDrawSurface4.GetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),POINTER(Int32), use_last_error=False)(19, 'GetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.GetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head), use_last_error=False)(20, 'GetPalette', ((1, 'param0'),)))
    IDirectDrawSurface4.GetPixelFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head), use_last_error=False)(21, 'GetPixelFormat', ((1, 'param0'),)))
    IDirectDrawSurface4.GetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head), use_last_error=False)(22, 'GetSurfaceDesc', ((1, 'param0'),)))
    IDirectDrawSurface4.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDraw_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head), use_last_error=False)(23, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.IsLost = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(24, 'IsLost', ()))
    IDirectDrawSurface4.Lock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),UInt32,win32more.Foundation.HANDLE, use_last_error=False)(25, 'Lock', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawSurface4.ReleaseDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC, use_last_error=False)(26, 'ReleaseDC', ((1, 'param0'),)))
    IDirectDrawSurface4.Restore = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(27, 'Restore', ()))
    IDirectDrawSurface4.SetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawClipper_head, use_last_error=False)(28, 'SetClipper', ((1, 'param0'),)))
    IDirectDrawSurface4.SetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(29, 'SetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.SetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32, use_last_error=False)(30, 'SetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.SetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawPalette_head, use_last_error=False)(31, 'SetPalette', ((1, 'param0'),)))
    IDirectDrawSurface4.Unlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(32, 'Unlock', ((1, 'param0'),)))
    IDirectDrawSurface4.UpdateOverlay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface4_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDOVERLAYFX_head), use_last_error=False)(33, 'UpdateOverlay', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface4.UpdateOverlayDisplay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(34, 'UpdateOverlayDisplay', ((1, 'param0'),)))
    IDirectDrawSurface4.UpdateOverlayZOrder = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface4_head, use_last_error=False)(35, 'UpdateOverlayZOrder', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.GetDDInterface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(c_void_p), use_last_error=False)(36, 'GetDDInterface', ((1, 'param0'),)))
    IDirectDrawSurface4.PageLock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(37, 'PageLock', ((1, 'param0'),)))
    IDirectDrawSurface4.PageUnlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(38, 'PageUnlock', ((1, 'param0'),)))
    IDirectDrawSurface4.SetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),UInt32, use_last_error=False)(39, 'SetSurfaceDesc', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface4.SetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,UInt32,UInt32, use_last_error=False)(40, 'SetPrivateData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawSurface4.GetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,POINTER(UInt32), use_last_error=False)(41, 'GetPrivateData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface4.FreePrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(42, 'FreePrivateData', ((1, 'param0'),)))
    IDirectDrawSurface4.GetUniquenessValue = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(43, 'GetUniquenessValue', ((1, 'param0'),)))
    IDirectDrawSurface4.ChangeUniquenessValue = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(44, 'ChangeUniquenessValue', ()))
    return IDirectDrawSurface4
def _define_IDirectDrawSurface7_head():
    class IDirectDrawSurface7(win32more.System.Com.IUnknown_head):
        Guid = Guid('06675a80-3b9b-11d2-b92f-00609797ea5b')
    return IDirectDrawSurface7
def _define_IDirectDrawSurface7():
    IDirectDrawSurface7 = win32more.Graphics.DirectDraw.IDirectDrawSurface7_head
    IDirectDrawSurface7.AddAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface7_head, use_last_error=False)(3, 'AddAttachedSurface', ((1, 'param0'),)))
    IDirectDrawSurface7.AddOverlayDirtyRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(4, 'AddOverlayDirtyRect', ((1, 'param0'),)))
    IDirectDrawSurface7.Blt = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface7_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDBLTFX_head), use_last_error=False)(5, 'Blt', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface7.BltBatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDBLTBATCH_head),UInt32,UInt32, use_last_error=False)(6, 'BltBatch', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface7.BltFast = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface7_head,POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(7, 'BltFast', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface7.DeleteAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface7_head, use_last_error=False)(8, 'DeleteAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.EnumAttachedSurfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK7, use_last_error=False)(9, 'EnumAttachedSurfaces', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.EnumOverlayZOrders = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p,win32more.Graphics.DirectDraw.LPDDENUMSURFACESCALLBACK7, use_last_error=False)(10, 'EnumOverlayZOrders', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface7.Flip = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface7_head,UInt32, use_last_error=False)(11, 'Flip', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.GetAttachedSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS2_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawSurface7_head), use_last_error=False)(12, 'GetAttachedSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.GetBltStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(13, 'GetBltStatus', ((1, 'param0'),)))
    IDirectDrawSurface7.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSCAPS2_head), use_last_error=False)(14, 'GetCaps', ((1, 'param0'),)))
    IDirectDrawSurface7.GetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head), use_last_error=False)(15, 'GetClipper', ((1, 'param0'),)))
    IDirectDrawSurface7.GetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(16, 'GetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.GetDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Gdi.HDC), use_last_error=False)(17, 'GetDC', ((1, 'param0'),)))
    IDirectDrawSurface7.GetFlipStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(18, 'GetFlipStatus', ((1, 'param0'),)))
    IDirectDrawSurface7.GetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),POINTER(Int32), use_last_error=False)(19, 'GetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.GetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.IDirectDrawPalette_head), use_last_error=False)(20, 'GetPalette', ((1, 'param0'),)))
    IDirectDrawSurface7.GetPixelFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head), use_last_error=False)(21, 'GetPixelFormat', ((1, 'param0'),)))
    IDirectDrawSurface7.GetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head), use_last_error=False)(22, 'GetSurfaceDesc', ((1, 'param0'),)))
    IDirectDrawSurface7.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDraw_head,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head), use_last_error=False)(23, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.IsLost = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(24, 'IsLost', ()))
    IDirectDrawSurface7.Lock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),UInt32,win32more.Foundation.HANDLE, use_last_error=False)(25, 'Lock', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawSurface7.ReleaseDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC, use_last_error=False)(26, 'ReleaseDC', ((1, 'param0'),)))
    IDirectDrawSurface7.Restore = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(27, 'Restore', ()))
    IDirectDrawSurface7.SetClipper = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawClipper_head, use_last_error=False)(28, 'SetClipper', ((1, 'param0'),)))
    IDirectDrawSurface7.SetColorKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDCOLORKEY_head), use_last_error=False)(29, 'SetColorKey', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.SetOverlayPosition = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32, use_last_error=False)(30, 'SetOverlayPosition', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.SetPalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawPalette_head, use_last_error=False)(31, 'SetPalette', ((1, 'param0'),)))
    IDirectDrawSurface7.Unlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(32, 'Unlock', ((1, 'param0'),)))
    IDirectDrawSurface7.UpdateOverlay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.DirectDraw.IDirectDrawSurface7_head,POINTER(win32more.Foundation.RECT_head),UInt32,POINTER(win32more.Graphics.DirectDraw.DDOVERLAYFX_head), use_last_error=False)(33, 'UpdateOverlay', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawSurface7.UpdateOverlayDisplay = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(34, 'UpdateOverlayDisplay', ((1, 'param0'),)))
    IDirectDrawSurface7.UpdateOverlayZOrder = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.DirectDraw.IDirectDrawSurface7_head, use_last_error=False)(35, 'UpdateOverlayZOrder', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.GetDDInterface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(c_void_p), use_last_error=False)(36, 'GetDDInterface', ((1, 'param0'),)))
    IDirectDrawSurface7.PageLock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(37, 'PageLock', ((1, 'param0'),)))
    IDirectDrawSurface7.PageUnlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(38, 'PageUnlock', ((1, 'param0'),)))
    IDirectDrawSurface7.SetSurfaceDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head),UInt32, use_last_error=False)(39, 'SetSurfaceDesc', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawSurface7.SetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,UInt32,UInt32, use_last_error=False)(40, 'SetPrivateData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawSurface7.GetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,POINTER(UInt32), use_last_error=False)(41, 'GetPrivateData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawSurface7.FreePrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(42, 'FreePrivateData', ((1, 'param0'),)))
    IDirectDrawSurface7.GetUniquenessValue = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(43, 'GetUniquenessValue', ((1, 'param0'),)))
    IDirectDrawSurface7.ChangeUniquenessValue = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(44, 'ChangeUniquenessValue', ()))
    IDirectDrawSurface7.SetPriority = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(45, 'SetPriority', ((1, 'param0'),)))
    IDirectDrawSurface7.GetPriority = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(46, 'GetPriority', ((1, 'param0'),)))
    IDirectDrawSurface7.SetLOD = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(47, 'SetLOD', ((1, 'param0'),)))
    IDirectDrawSurface7.GetLOD = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(48, 'GetLOD', ((1, 'param0'),)))
    return IDirectDrawSurface7
def _define_IDirectDrawColorControl_head():
    class IDirectDrawColorControl(win32more.System.Com.IUnknown_head):
        Guid = Guid('4b9f0ee0-0d7e-11d0-9b06-00a0c903a3b8')
    return IDirectDrawColorControl
def _define_IDirectDrawColorControl():
    IDirectDrawColorControl = win32more.Graphics.DirectDraw.IDirectDrawColorControl_head
    IDirectDrawColorControl.GetColorControls = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head), use_last_error=False)(3, 'GetColorControls', ((1, 'param0'),)))
    IDirectDrawColorControl.SetColorControls = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head), use_last_error=False)(4, 'SetColorControls', ((1, 'param0'),)))
    return IDirectDrawColorControl
def _define_IDirectDrawGammaControl_head():
    class IDirectDrawGammaControl(win32more.System.Com.IUnknown_head):
        Guid = Guid('69c11c3e-b46b-11d1-ad7a-00c04fc29b4e')
    return IDirectDrawGammaControl
def _define_IDirectDrawGammaControl():
    IDirectDrawGammaControl = win32more.Graphics.DirectDraw.IDirectDrawGammaControl_head
    IDirectDrawGammaControl.GetGammaRamp = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDGAMMARAMP_head), use_last_error=False)(3, 'GetGammaRamp', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawGammaControl.SetGammaRamp = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDGAMMARAMP_head), use_last_error=False)(4, 'SetGammaRamp', ((1, 'param0'),(1, 'param1'),)))
    return IDirectDrawGammaControl
def _define_DDSURFACEDESC_head():
    class DDSURFACEDESC(Structure):
        pass
    return DDSURFACEDESC
def _define_DDSURFACEDESC():
    DDSURFACEDESC = win32more.Graphics.DirectDraw.DDSURFACEDESC_head
    class DDSURFACEDESC__Anonymous2_e__Union(Union):
        pass
    DDSURFACEDESC__Anonymous2_e__Union._fields_ = [
        ("dwMipMapCount", UInt32),
        ("dwZBufferBitDepth", UInt32),
        ("dwRefreshRate", UInt32),
    ]
    class DDSURFACEDESC__Anonymous1_e__Union(Union):
        pass
    DDSURFACEDESC__Anonymous1_e__Union._fields_ = [
        ("lPitch", Int32),
        ("dwLinearSize", UInt32),
    ]
    DDSURFACEDESC._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    DDSURFACEDESC._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwHeight", UInt32),
        ("dwWidth", UInt32),
        ("Anonymous1", DDSURFACEDESC__Anonymous1_e__Union),
        ("dwBackBufferCount", UInt32),
        ("Anonymous2", DDSURFACEDESC__Anonymous2_e__Union),
        ("dwAlphaBitDepth", UInt32),
        ("dwReserved", UInt32),
        ("lpSurface", c_void_p),
        ("ddckCKDestOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKDestBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKSrcOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKSrcBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddpfPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
    ]
    return DDSURFACEDESC
def _define_DDSURFACEDESC2_head():
    class DDSURFACEDESC2(Structure):
        pass
    return DDSURFACEDESC2
def _define_DDSURFACEDESC2():
    DDSURFACEDESC2 = win32more.Graphics.DirectDraw.DDSURFACEDESC2_head
    class DDSURFACEDESC2__Anonymous4_e__Union(Union):
        pass
    DDSURFACEDESC2__Anonymous4_e__Union._fields_ = [
        ("ddckCKDestOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("dwEmptyFaceColor", UInt32),
    ]
    class DDSURFACEDESC2__Anonymous2_e__Union(Union):
        pass
    DDSURFACEDESC2__Anonymous2_e__Union._fields_ = [
        ("dwBackBufferCount", UInt32),
        ("dwDepth", UInt32),
    ]
    class DDSURFACEDESC2__Anonymous3_e__Union(Union):
        pass
    DDSURFACEDESC2__Anonymous3_e__Union._fields_ = [
        ("dwMipMapCount", UInt32),
        ("dwRefreshRate", UInt32),
        ("dwSrcVBHandle", UInt32),
    ]
    class DDSURFACEDESC2__Anonymous1_e__Union(Union):
        pass
    DDSURFACEDESC2__Anonymous1_e__Union._fields_ = [
        ("lPitch", Int32),
        ("dwLinearSize", UInt32),
    ]
    class DDSURFACEDESC2__Anonymous5_e__Union(Union):
        pass
    DDSURFACEDESC2__Anonymous5_e__Union._fields_ = [
        ("ddpfPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwFVF", UInt32),
    ]
    DDSURFACEDESC2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
        'Anonymous4',
        'Anonymous5',
    ]
    DDSURFACEDESC2._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwHeight", UInt32),
        ("dwWidth", UInt32),
        ("Anonymous1", DDSURFACEDESC2__Anonymous1_e__Union),
        ("Anonymous2", DDSURFACEDESC2__Anonymous2_e__Union),
        ("Anonymous3", DDSURFACEDESC2__Anonymous3_e__Union),
        ("dwAlphaBitDepth", UInt32),
        ("dwReserved", UInt32),
        ("lpSurface", c_void_p),
        ("Anonymous4", DDSURFACEDESC2__Anonymous4_e__Union),
        ("ddckCKDestBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKSrcOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKSrcBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("Anonymous5", DDSURFACEDESC2__Anonymous5_e__Union),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS2),
        ("dwTextureStage", UInt32),
    ]
    return DDSURFACEDESC2
def _define_DDOPTSURFACEDESC_head():
    class DDOPTSURFACEDESC(Structure):
        pass
    return DDOPTSURFACEDESC
def _define_DDOPTSURFACEDESC():
    DDOPTSURFACEDESC = win32more.Graphics.DirectDraw.DDOPTSURFACEDESC_head
    DDOPTSURFACEDESC._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("ddSCaps", win32more.Graphics.DirectDraw.DDSCAPS2),
        ("ddOSCaps", win32more.Graphics.DirectDraw.DDOSCAPS),
        ("guid", Guid),
        ("dwCompressionRatio", UInt32),
    ]
    return DDOPTSURFACEDESC
def _define_DDCOLORCONTROL_head():
    class DDCOLORCONTROL(Structure):
        pass
    return DDCOLORCONTROL
def _define_DDCOLORCONTROL():
    DDCOLORCONTROL = win32more.Graphics.DirectDraw.DDCOLORCONTROL_head
    DDCOLORCONTROL._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("lBrightness", Int32),
        ("lContrast", Int32),
        ("lHue", Int32),
        ("lSaturation", Int32),
        ("lSharpness", Int32),
        ("lGamma", Int32),
        ("lColorEnable", Int32),
        ("dwReserved1", UInt32),
    ]
    return DDCOLORCONTROL
def _define_IDDVideoPortContainerVtbl_head():
    class IDDVideoPortContainerVtbl(Structure):
        pass
    return IDDVideoPortContainerVtbl
def _define_IDDVideoPortContainerVtbl():
    IDDVideoPortContainerVtbl = win32more.Graphics.DirectDraw.IDDVideoPortContainerVtbl_head
    return IDDVideoPortContainerVtbl
def _define_IDirectDrawVideoPortVtbl_head():
    class IDirectDrawVideoPortVtbl(Structure):
        pass
    return IDirectDrawVideoPortVtbl
def _define_IDirectDrawVideoPortVtbl():
    IDirectDrawVideoPortVtbl = win32more.Graphics.DirectDraw.IDirectDrawVideoPortVtbl_head
    return IDirectDrawVideoPortVtbl
def _define_IDirectDrawVideoPortNotifyVtbl_head():
    class IDirectDrawVideoPortNotifyVtbl(Structure):
        pass
    return IDirectDrawVideoPortNotifyVtbl
def _define_IDirectDrawVideoPortNotifyVtbl():
    IDirectDrawVideoPortNotifyVtbl = win32more.Graphics.DirectDraw.IDirectDrawVideoPortNotifyVtbl_head
    return IDirectDrawVideoPortNotifyVtbl
def _define_LPDDENUMVIDEOCALLBACK():
    return CFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTCAPS_head),c_void_p, use_last_error=False)
def _define_IDDVideoPortContainer_head():
    class IDDVideoPortContainer(win32more.System.Com.IUnknown_head):
        Guid = Guid('6c142760-a733-11ce-a521-0020af0be560')
    return IDDVideoPortContainer
def _define_IDDVideoPortContainer():
    IDDVideoPortContainer = win32more.Graphics.DirectDraw.IDDVideoPortContainer_head
    IDDVideoPortContainer.CreateVideoPort = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head),POINTER(win32more.Graphics.DirectDraw.IDirectDrawVideoPort_head),win32more.System.Com.IUnknown_head, use_last_error=False)(3, 'CreateVideoPort', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDDVideoPortContainer.EnumVideoPorts = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTCAPS_head),c_void_p,win32more.Graphics.DirectDraw.LPDDENUMVIDEOCALLBACK, use_last_error=False)(4, 'EnumVideoPorts', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDDVideoPortContainer.GetVideoPortConnectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(UInt32),POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTCONNECT), use_last_error=False)(5, 'GetVideoPortConnectInfo', ((1, 'param0'),(1, 'pcInfo'),(1, 'param2'),)))
    IDDVideoPortContainer.QueryVideoPortStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTSTATUS_head), use_last_error=False)(6, 'QueryVideoPortStatus', ((1, 'param0'),(1, 'param1'),)))
    return IDDVideoPortContainer
def _define_IDirectDrawVideoPort_head():
    class IDirectDrawVideoPort(win32more.System.Com.IUnknown_head):
        Guid = Guid('b36d93e0-2b43-11cf-a2de-00aa00b93356')
    return IDirectDrawVideoPort
def _define_IDirectDrawVideoPort():
    IDirectDrawVideoPort = win32more.Graphics.DirectDraw.IDirectDrawVideoPort_head
    IDirectDrawVideoPort.Flip = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface_head,UInt32, use_last_error=False)(3, 'Flip', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawVideoPort.GetBandwidthInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head),UInt32,UInt32,UInt32,POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTBANDWIDTH_head), use_last_error=False)(4, 'GetBandwidthInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectDrawVideoPort.GetColorControls = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head), use_last_error=False)(5, 'GetColorControls', ((1, 'param0'),)))
    IDirectDrawVideoPort.GetInputFormats = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32),POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT),UInt32, use_last_error=False)(6, 'GetInputFormats', ((1, 'lpNumFormats'),(1, 'param1'),(1, 'param2'),)))
    IDirectDrawVideoPort.GetOutputFormats = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head),POINTER(UInt32),POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT),UInt32, use_last_error=False)(7, 'GetOutputFormats', ((1, 'param0'),(1, 'lpNumFormats'),(1, 'param2'),(1, 'param3'),)))
    IDirectDrawVideoPort.GetFieldPolarity = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32), use_last_error=False)(8, 'GetFieldPolarity', ((1, 'param0'),)))
    IDirectDrawVideoPort.GetVideoLine = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(9, 'GetVideoLine', ((1, 'param0'),)))
    IDirectDrawVideoPort.GetVideoSignalStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(10, 'GetVideoSignalStatus', ((1, 'param0'),)))
    IDirectDrawVideoPort.SetColorControls = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head), use_last_error=False)(11, 'SetColorControls', ((1, 'param0'),)))
    IDirectDrawVideoPort.SetTargetSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.IDirectDrawSurface_head,UInt32, use_last_error=False)(12, 'SetTargetSurface', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawVideoPort.StartVideo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTINFO_head), use_last_error=False)(13, 'StartVideo', ((1, 'param0'),)))
    IDirectDrawVideoPort.StopVideo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(14, 'StopVideo', ()))
    IDirectDrawVideoPort.UpdateVideo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTINFO_head), use_last_error=False)(15, 'UpdateVideo', ((1, 'param0'),)))
    IDirectDrawVideoPort.WaitForSync = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32, use_last_error=False)(16, 'WaitForSync', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectDrawVideoPort
def _define_IDirectDrawVideoPortNotify_head():
    class IDirectDrawVideoPortNotify(win32more.System.Com.IUnknown_head):
        Guid = Guid('a655fb94-0589-4e57-b333-567a89468c88')
    return IDirectDrawVideoPortNotify
def _define_IDirectDrawVideoPortNotify():
    IDirectDrawVideoPortNotify = win32more.Graphics.DirectDraw.IDirectDrawVideoPortNotify_head
    IDirectDrawVideoPortNotify.AcquireNotification = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.HANDLE),POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTNOTIFY_head), use_last_error=False)(3, 'AcquireNotification', ((1, 'param0'),(1, 'param1'),)))
    IDirectDrawVideoPortNotify.ReleaseNotification = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HANDLE, use_last_error=False)(4, 'ReleaseNotification', ((1, 'param0'),)))
    return IDirectDrawVideoPortNotify
def _define_DDVIDEOPORTCONNECT_head():
    class DDVIDEOPORTCONNECT(Structure):
        pass
    return DDVIDEOPORTCONNECT
def _define_DDVIDEOPORTCONNECT():
    DDVIDEOPORTCONNECT = win32more.Graphics.DirectDraw.DDVIDEOPORTCONNECT_head
    DDVIDEOPORTCONNECT._fields_ = [
        ("dwSize", UInt32),
        ("dwPortWidth", UInt32),
        ("guidTypeID", Guid),
        ("dwFlags", UInt32),
        ("dwReserved1", UIntPtr),
    ]
    return DDVIDEOPORTCONNECT
def _define_DDVIDEOPORTCAPS_head():
    class DDVIDEOPORTCAPS(Structure):
        pass
    return DDVIDEOPORTCAPS
def _define_DDVIDEOPORTCAPS():
    DDVIDEOPORTCAPS = win32more.Graphics.DirectDraw.DDVIDEOPORTCAPS_head
    DDVIDEOPORTCAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwMaxWidth", UInt32),
        ("dwMaxVBIWidth", UInt32),
        ("dwMaxHeight", UInt32),
        ("dwVideoPortID", UInt32),
        ("dwCaps", UInt32),
        ("dwFX", UInt32),
        ("dwNumAutoFlipSurfaces", UInt32),
        ("dwAlignVideoPortBoundary", UInt32),
        ("dwAlignVideoPortPrescaleWidth", UInt32),
        ("dwAlignVideoPortCropBoundary", UInt32),
        ("dwAlignVideoPortCropWidth", UInt32),
        ("dwPreshrinkXStep", UInt32),
        ("dwPreshrinkYStep", UInt32),
        ("dwNumVBIAutoFlipSurfaces", UInt32),
        ("dwNumPreferredAutoflip", UInt32),
        ("wNumFilterTapsX", UInt16),
        ("wNumFilterTapsY", UInt16),
    ]
    return DDVIDEOPORTCAPS
def _define_DDVIDEOPORTDESC_head():
    class DDVIDEOPORTDESC(Structure):
        pass
    return DDVIDEOPORTDESC
def _define_DDVIDEOPORTDESC():
    DDVIDEOPORTDESC = win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head
    DDVIDEOPORTDESC._fields_ = [
        ("dwSize", UInt32),
        ("dwFieldWidth", UInt32),
        ("dwVBIWidth", UInt32),
        ("dwFieldHeight", UInt32),
        ("dwMicrosecondsPerField", UInt32),
        ("dwMaxPixelsPerSecond", UInt32),
        ("dwVideoPortID", UInt32),
        ("dwReserved1", UInt32),
        ("VideoPortType", win32more.Graphics.DirectDraw.DDVIDEOPORTCONNECT),
        ("dwReserved2", UIntPtr),
        ("dwReserved3", UIntPtr),
    ]
    return DDVIDEOPORTDESC
def _define_DDVIDEOPORTINFO_head():
    class DDVIDEOPORTINFO(Structure):
        pass
    return DDVIDEOPORTINFO
def _define_DDVIDEOPORTINFO():
    DDVIDEOPORTINFO = win32more.Graphics.DirectDraw.DDVIDEOPORTINFO_head
    DDVIDEOPORTINFO._fields_ = [
        ("dwSize", UInt32),
        ("dwOriginX", UInt32),
        ("dwOriginY", UInt32),
        ("dwVPFlags", UInt32),
        ("rCrop", win32more.Foundation.RECT),
        ("dwPrescaleWidth", UInt32),
        ("dwPrescaleHeight", UInt32),
        ("lpddpfInputFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("lpddpfVBIInputFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("lpddpfVBIOutputFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("dwVBIHeight", UInt32),
        ("dwReserved1", UIntPtr),
        ("dwReserved2", UIntPtr),
    ]
    return DDVIDEOPORTINFO
def _define_DDVIDEOPORTBANDWIDTH_head():
    class DDVIDEOPORTBANDWIDTH(Structure):
        pass
    return DDVIDEOPORTBANDWIDTH
def _define_DDVIDEOPORTBANDWIDTH():
    DDVIDEOPORTBANDWIDTH = win32more.Graphics.DirectDraw.DDVIDEOPORTBANDWIDTH_head
    DDVIDEOPORTBANDWIDTH._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwOverlay", UInt32),
        ("dwColorkey", UInt32),
        ("dwYInterpolate", UInt32),
        ("dwYInterpAndColorkey", UInt32),
        ("dwReserved1", UIntPtr),
        ("dwReserved2", UIntPtr),
    ]
    return DDVIDEOPORTBANDWIDTH
def _define_DDVIDEOPORTSTATUS_head():
    class DDVIDEOPORTSTATUS(Structure):
        pass
    return DDVIDEOPORTSTATUS
def _define_DDVIDEOPORTSTATUS():
    DDVIDEOPORTSTATUS = win32more.Graphics.DirectDraw.DDVIDEOPORTSTATUS_head
    DDVIDEOPORTSTATUS._fields_ = [
        ("dwSize", UInt32),
        ("bInUse", win32more.Foundation.BOOL),
        ("dwFlags", UInt32),
        ("dwReserved1", UInt32),
        ("VideoPortType", win32more.Graphics.DirectDraw.DDVIDEOPORTCONNECT),
        ("dwReserved2", UIntPtr),
        ("dwReserved3", UIntPtr),
    ]
    return DDVIDEOPORTSTATUS
def _define_DDVIDEOPORTNOTIFY_head():
    class DDVIDEOPORTNOTIFY(Structure):
        pass
    return DDVIDEOPORTNOTIFY
def _define_DDVIDEOPORTNOTIFY():
    DDVIDEOPORTNOTIFY = win32more.Graphics.DirectDraw.DDVIDEOPORTNOTIFY_head
    DDVIDEOPORTNOTIFY._fields_ = [
        ("ApproximateTimeStamp", win32more.Foundation.LARGE_INTEGER),
        ("lField", Int32),
        ("dwSurfaceIndex", UInt32),
        ("lDone", Int32),
    ]
    return DDVIDEOPORTNOTIFY
def _define_IDirectDrawKernel_head():
    class IDirectDrawKernel(win32more.System.Com.IUnknown_head):
        Guid = Guid('8d56c120-6a08-11d0-9b06-00a0c903a3b8')
    return IDirectDrawKernel
def _define_IDirectDrawKernel():
    IDirectDrawKernel = win32more.Graphics.DirectDraw.IDirectDrawKernel_head
    IDirectDrawKernel.GetCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDKERNELCAPS_head), use_last_error=False)(3, 'GetCaps', ((1, 'param0'),)))
    IDirectDrawKernel.GetKernelHandle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr), use_last_error=False)(4, 'GetKernelHandle', ((1, 'param0'),)))
    IDirectDrawKernel.ReleaseKernelHandle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(5, 'ReleaseKernelHandle', ()))
    return IDirectDrawKernel
def _define_IDirectDrawSurfaceKernel_head():
    class IDirectDrawSurfaceKernel(win32more.System.Com.IUnknown_head):
        Guid = Guid('60755da0-6a40-11d0-9b06-00a0c903a3b8')
    return IDirectDrawSurfaceKernel
def _define_IDirectDrawSurfaceKernel():
    IDirectDrawSurfaceKernel = win32more.Graphics.DirectDraw.IDirectDrawSurfaceKernel_head
    IDirectDrawSurfaceKernel.GetKernelHandle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr), use_last_error=False)(3, 'GetKernelHandle', ((1, 'param0'),)))
    IDirectDrawSurfaceKernel.ReleaseKernelHandle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(4, 'ReleaseKernelHandle', ()))
    return IDirectDrawSurfaceKernel
def _define_DDKERNELCAPS_head():
    class DDKERNELCAPS(Structure):
        pass
    return DDKERNELCAPS
def _define_DDKERNELCAPS():
    DDKERNELCAPS = win32more.Graphics.DirectDraw.DDKERNELCAPS_head
    DDKERNELCAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwIRQCaps", UInt32),
    ]
    return DDKERNELCAPS
def _define_SURFACEALIGNMENT_head():
    class SURFACEALIGNMENT(Structure):
        pass
    return SURFACEALIGNMENT
def _define_SURFACEALIGNMENT():
    SURFACEALIGNMENT = win32more.Graphics.DirectDraw.SURFACEALIGNMENT_head
    class SURFACEALIGNMENT__Anonymous_e__Union(Union):
        pass
    class SURFACEALIGNMENT__Anonymous_e__Union__Linear_e__Struct(Structure):
        pass
    SURFACEALIGNMENT__Anonymous_e__Union__Linear_e__Struct._fields_ = [
        ("dwStartAlignment", UInt32),
        ("dwPitchAlignment", UInt32),
        ("dwFlags", UInt32),
        ("dwReserved2", UInt32),
    ]
    class SURFACEALIGNMENT__Anonymous_e__Union__Rectangular_e__Struct(Structure):
        pass
    SURFACEALIGNMENT__Anonymous_e__Union__Rectangular_e__Struct._fields_ = [
        ("dwXAlignment", UInt32),
        ("dwYAlignment", UInt32),
        ("dwFlags", UInt32),
        ("dwReserved2", UInt32),
    ]
    SURFACEALIGNMENT__Anonymous_e__Union._fields_ = [
        ("Linear", SURFACEALIGNMENT__Anonymous_e__Union__Linear_e__Struct),
        ("Rectangular", SURFACEALIGNMENT__Anonymous_e__Union__Rectangular_e__Struct),
    ]
    SURFACEALIGNMENT._anonymous_ = [
        'Anonymous',
    ]
    SURFACEALIGNMENT._fields_ = [
        ("Anonymous", SURFACEALIGNMENT__Anonymous_e__Union),
    ]
    return SURFACEALIGNMENT
def _define_HEAPALIGNMENT_head():
    class HEAPALIGNMENT(Structure):
        pass
    return HEAPALIGNMENT
def _define_HEAPALIGNMENT():
    HEAPALIGNMENT = win32more.Graphics.DirectDraw.HEAPALIGNMENT_head
    HEAPALIGNMENT._fields_ = [
        ("dwSize", UInt32),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwReserved", UInt32),
        ("ExecuteBuffer", win32more.Graphics.DirectDraw.SURFACEALIGNMENT),
        ("Overlay", win32more.Graphics.DirectDraw.SURFACEALIGNMENT),
        ("Texture", win32more.Graphics.DirectDraw.SURFACEALIGNMENT),
        ("ZBuffer", win32more.Graphics.DirectDraw.SURFACEALIGNMENT),
        ("AlphaBuffer", win32more.Graphics.DirectDraw.SURFACEALIGNMENT),
        ("Offscreen", win32more.Graphics.DirectDraw.SURFACEALIGNMENT),
        ("FlipTarget", win32more.Graphics.DirectDraw.SURFACEALIGNMENT),
    ]
    return HEAPALIGNMENT
def _define_DD_GETHEAPALIGNMENTDATA_head():
    class DD_GETHEAPALIGNMENTDATA(Structure):
        pass
    return DD_GETHEAPALIGNMENTDATA
def _define_DD_GETHEAPALIGNMENTDATA():
    DD_GETHEAPALIGNMENTDATA = win32more.Graphics.DirectDraw.DD_GETHEAPALIGNMENTDATA_head
    DD_GETHEAPALIGNMENTDATA._fields_ = [
        ("dwInstance", UIntPtr),
        ("dwHeap", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetHeapAlignment", c_void_p),
        ("Alignment", win32more.Graphics.DirectDraw.HEAPALIGNMENT),
    ]
    return DD_GETHEAPALIGNMENTDATA
def _define_VMEML_head():
    class VMEML(Structure):
        pass
    return VMEML
def _define_VMEML():
    VMEML = win32more.Graphics.DirectDraw.VMEML_head
    VMEML._fields_ = [
        ("next", POINTER(win32more.Graphics.DirectDraw.VMEML_head)),
        ("ptr", UIntPtr),
        ("size", UInt32),
        ("bDiscardable", win32more.Foundation.BOOL),
    ]
    return VMEML
def _define_VMEMR_head():
    class VMEMR(Structure):
        pass
    return VMEMR
def _define_VMEMR():
    VMEMR = win32more.Graphics.DirectDraw.VMEMR_head
    VMEMR._fields_ = [
        ("next", POINTER(win32more.Graphics.DirectDraw.VMEMR_head)),
        ("prev", POINTER(win32more.Graphics.DirectDraw.VMEMR_head)),
        ("pUp", POINTER(win32more.Graphics.DirectDraw.VMEMR_head)),
        ("pDown", POINTER(win32more.Graphics.DirectDraw.VMEMR_head)),
        ("pLeft", POINTER(win32more.Graphics.DirectDraw.VMEMR_head)),
        ("pRight", POINTER(win32more.Graphics.DirectDraw.VMEMR_head)),
        ("ptr", UIntPtr),
        ("size", UInt32),
        ("x", UInt32),
        ("y", UInt32),
        ("cx", UInt32),
        ("cy", UInt32),
        ("flags", UInt32),
        ("pBits", UIntPtr),
        ("bDiscardable", win32more.Foundation.BOOL),
    ]
    return VMEMR
def _define_VMEMHEAP_head():
    class VMEMHEAP(Structure):
        pass
    return VMEMHEAP
def _define_VMEMHEAP():
    VMEMHEAP = win32more.Graphics.DirectDraw.VMEMHEAP_head
    VMEMHEAP._fields_ = [
        ("dwFlags", UInt32),
        ("stride", UInt32),
        ("freeList", c_void_p),
        ("allocList", c_void_p),
        ("dwTotalSize", UInt32),
        ("fpGARTLin", UIntPtr),
        ("fpGARTDev", UIntPtr),
        ("dwCommitedSize", UInt32),
        ("dwCoalesceCount", UInt32),
        ("Alignment", win32more.Graphics.DirectDraw.HEAPALIGNMENT),
        ("ddsCapsEx", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("ddsCapsExAlt", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("liPhysAGPBase", win32more.Foundation.LARGE_INTEGER),
        ("hdevAGP", win32more.Foundation.HANDLE),
        ("pvPhysRsrv", c_void_p),
        ("pAgpCommitMask", c_char_p_no),
        ("dwAgpCommitMaskSize", UInt32),
    ]
    return VMEMHEAP
def _define_PROCESS_LIST_head():
    class PROCESS_LIST(Structure):
        pass
    return PROCESS_LIST
def _define_PROCESS_LIST():
    PROCESS_LIST = win32more.Graphics.DirectDraw.PROCESS_LIST_head
    PROCESS_LIST._fields_ = [
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.PROCESS_LIST_head)),
        ("dwProcessId", UInt32),
        ("dwRefCnt", UInt32),
        ("dwAlphaDepth", UInt32),
        ("dwZDepth", UInt32),
    ]
    return PROCESS_LIST
def _define_DDMONITORINFO_head():
    class DDMONITORINFO(Structure):
        pass
    return DDMONITORINFO
def _define_DDMONITORINFO():
    DDMONITORINFO = win32more.Graphics.DirectDraw.DDMONITORINFO_head
    DDMONITORINFO._fields_ = [
        ("Manufacturer", UInt16),
        ("Product", UInt16),
        ("SerialNumber", UInt32),
        ("DeviceIdentifier", Guid),
        ("Mode640x480", Int32),
        ("Mode800x600", Int32),
        ("Mode1024x768", Int32),
        ("Mode1280x1024", Int32),
        ("Mode1600x1200", Int32),
        ("ModeReserved1", Int32),
        ("ModeReserved2", Int32),
        ("ModeReserved3", Int32),
    ]
    return DDMONITORINFO
def _define_IDirectDrawClipperVtbl_head():
    class IDirectDrawClipperVtbl(Structure):
        pass
    return IDirectDrawClipperVtbl
def _define_IDirectDrawClipperVtbl():
    IDirectDrawClipperVtbl = win32more.Graphics.DirectDraw.IDirectDrawClipperVtbl_head
    return IDirectDrawClipperVtbl
def _define_IDirectDrawPaletteVtbl_head():
    class IDirectDrawPaletteVtbl(Structure):
        pass
    return IDirectDrawPaletteVtbl
def _define_IDirectDrawPaletteVtbl():
    IDirectDrawPaletteVtbl = win32more.Graphics.DirectDraw.IDirectDrawPaletteVtbl_head
    return IDirectDrawPaletteVtbl
def _define_IDirectDrawSurfaceVtbl_head():
    class IDirectDrawSurfaceVtbl(Structure):
        pass
    return IDirectDrawSurfaceVtbl
def _define_IDirectDrawSurfaceVtbl():
    IDirectDrawSurfaceVtbl = win32more.Graphics.DirectDraw.IDirectDrawSurfaceVtbl_head
    return IDirectDrawSurfaceVtbl
def _define_IDirectDrawSurface2Vtbl_head():
    class IDirectDrawSurface2Vtbl(Structure):
        pass
    return IDirectDrawSurface2Vtbl
def _define_IDirectDrawSurface2Vtbl():
    IDirectDrawSurface2Vtbl = win32more.Graphics.DirectDraw.IDirectDrawSurface2Vtbl_head
    return IDirectDrawSurface2Vtbl
def _define_IDirectDrawSurface3Vtbl_head():
    class IDirectDrawSurface3Vtbl(Structure):
        pass
    return IDirectDrawSurface3Vtbl
def _define_IDirectDrawSurface3Vtbl():
    IDirectDrawSurface3Vtbl = win32more.Graphics.DirectDraw.IDirectDrawSurface3Vtbl_head
    return IDirectDrawSurface3Vtbl
def _define_IDirectDrawSurface4Vtbl_head():
    class IDirectDrawSurface4Vtbl(Structure):
        pass
    return IDirectDrawSurface4Vtbl
def _define_IDirectDrawSurface4Vtbl():
    IDirectDrawSurface4Vtbl = win32more.Graphics.DirectDraw.IDirectDrawSurface4Vtbl_head
    return IDirectDrawSurface4Vtbl
def _define_IDirectDrawSurface7Vtbl_head():
    class IDirectDrawSurface7Vtbl(Structure):
        pass
    return IDirectDrawSurface7Vtbl
def _define_IDirectDrawSurface7Vtbl():
    IDirectDrawSurface7Vtbl = win32more.Graphics.DirectDraw.IDirectDrawSurface7Vtbl_head
    return IDirectDrawSurface7Vtbl
def _define_IDirectDrawColorControlVtbl_head():
    class IDirectDrawColorControlVtbl(Structure):
        pass
    return IDirectDrawColorControlVtbl
def _define_IDirectDrawColorControlVtbl():
    IDirectDrawColorControlVtbl = win32more.Graphics.DirectDraw.IDirectDrawColorControlVtbl_head
    return IDirectDrawColorControlVtbl
def _define_IDirectDrawVtbl_head():
    class IDirectDrawVtbl(Structure):
        pass
    return IDirectDrawVtbl
def _define_IDirectDrawVtbl():
    IDirectDrawVtbl = win32more.Graphics.DirectDraw.IDirectDrawVtbl_head
    return IDirectDrawVtbl
def _define_IDirectDraw2Vtbl_head():
    class IDirectDraw2Vtbl(Structure):
        pass
    return IDirectDraw2Vtbl
def _define_IDirectDraw2Vtbl():
    IDirectDraw2Vtbl = win32more.Graphics.DirectDraw.IDirectDraw2Vtbl_head
    return IDirectDraw2Vtbl
def _define_IDirectDraw4Vtbl_head():
    class IDirectDraw4Vtbl(Structure):
        pass
    return IDirectDraw4Vtbl
def _define_IDirectDraw4Vtbl():
    IDirectDraw4Vtbl = win32more.Graphics.DirectDraw.IDirectDraw4Vtbl_head
    return IDirectDraw4Vtbl
def _define_IDirectDraw7Vtbl_head():
    class IDirectDraw7Vtbl(Structure):
        pass
    return IDirectDraw7Vtbl
def _define_IDirectDraw7Vtbl():
    IDirectDraw7Vtbl = win32more.Graphics.DirectDraw.IDirectDraw7Vtbl_head
    return IDirectDraw7Vtbl
def _define_IDirectDrawKernelVtbl_head():
    class IDirectDrawKernelVtbl(Structure):
        pass
    return IDirectDrawKernelVtbl
def _define_IDirectDrawKernelVtbl():
    IDirectDrawKernelVtbl = win32more.Graphics.DirectDraw.IDirectDrawKernelVtbl_head
    return IDirectDrawKernelVtbl
def _define_IDirectDrawSurfaceKernelVtbl_head():
    class IDirectDrawSurfaceKernelVtbl(Structure):
        pass
    return IDirectDrawSurfaceKernelVtbl
def _define_IDirectDrawSurfaceKernelVtbl():
    IDirectDrawSurfaceKernelVtbl = win32more.Graphics.DirectDraw.IDirectDrawSurfaceKernelVtbl_head
    return IDirectDrawSurfaceKernelVtbl
def _define_IDirectDrawGammaControlVtbl_head():
    class IDirectDrawGammaControlVtbl(Structure):
        pass
    return IDirectDrawGammaControlVtbl
def _define_IDirectDrawGammaControlVtbl():
    IDirectDrawGammaControlVtbl = win32more.Graphics.DirectDraw.IDirectDrawGammaControlVtbl_head
    return IDirectDrawGammaControlVtbl
def _define_DD32BITDRIVERDATA_head():
    class DD32BITDRIVERDATA(Structure):
        pass
    return DD32BITDRIVERDATA
def _define_DD32BITDRIVERDATA():
    DD32BITDRIVERDATA = win32more.Graphics.DirectDraw.DD32BITDRIVERDATA_head
    DD32BITDRIVERDATA._fields_ = [
        ("szName", win32more.Foundation.CHAR * 260),
        ("szEntryPoint", win32more.Foundation.CHAR * 64),
        ("dwContext", UInt32),
    ]
    return DD32BITDRIVERDATA
def _define_DDVERSIONDATA_head():
    class DDVERSIONDATA(Structure):
        pass
    return DDVERSIONDATA
def _define_DDVERSIONDATA():
    DDVERSIONDATA = win32more.Graphics.DirectDraw.DDVERSIONDATA_head
    DDVERSIONDATA._fields_ = [
        ("dwHALVersion", UInt32),
        ("dwReserved1", UIntPtr),
        ("dwReserved2", UIntPtr),
    ]
    return DDVERSIONDATA
def _define_LPDD32BITDRIVERINIT():
    return CFUNCTYPE(UInt32,UInt32, use_last_error=False)
def _define_VIDMEM_head():
    class VIDMEM(Structure):
        pass
    return VIDMEM
def _define_VIDMEM():
    VIDMEM = win32more.Graphics.DirectDraw.VIDMEM_head
    class VIDMEM__Anonymous1_e__Union(Union):
        pass
    VIDMEM__Anonymous1_e__Union._fields_ = [
        ("fpEnd", UIntPtr),
        ("dwWidth", UInt32),
    ]
    class VIDMEM__Anonymous2_e__Union(Union):
        pass
    VIDMEM__Anonymous2_e__Union._fields_ = [
        ("lpHeap", POINTER(win32more.Graphics.DirectDraw.VMEMHEAP_head)),
        ("dwHeight", UInt32),
    ]
    VIDMEM._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    VIDMEM._fields_ = [
        ("dwFlags", UInt32),
        ("fpStart", UIntPtr),
        ("Anonymous1", VIDMEM__Anonymous1_e__Union),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("ddsCapsAlt", win32more.Graphics.DirectDraw.DDSCAPS),
        ("Anonymous2", VIDMEM__Anonymous2_e__Union),
    ]
    return VIDMEM
def _define_VIDMEMINFO_head():
    class VIDMEMINFO(Structure):
        pass
    return VIDMEMINFO
def _define_VIDMEMINFO():
    VIDMEMINFO = win32more.Graphics.DirectDraw.VIDMEMINFO_head
    VIDMEMINFO._fields_ = [
        ("fpPrimary", UIntPtr),
        ("dwFlags", UInt32),
        ("dwDisplayWidth", UInt32),
        ("dwDisplayHeight", UInt32),
        ("lDisplayPitch", Int32),
        ("ddpfDisplay", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwOffscreenAlign", UInt32),
        ("dwOverlayAlign", UInt32),
        ("dwTextureAlign", UInt32),
        ("dwZBufferAlign", UInt32),
        ("dwAlphaAlign", UInt32),
        ("dwNumHeaps", UInt32),
        ("pvmList", POINTER(win32more.Graphics.DirectDraw.VIDMEM_head)),
    ]
    return VIDMEMINFO
def _define_HEAPALIAS_head():
    class HEAPALIAS(Structure):
        pass
    return HEAPALIAS
def _define_HEAPALIAS():
    HEAPALIAS = win32more.Graphics.DirectDraw.HEAPALIAS_head
    HEAPALIAS._fields_ = [
        ("fpVidMem", UIntPtr),
        ("lpAlias", c_void_p),
        ("dwAliasSize", UInt32),
    ]
    return HEAPALIAS
def _define_HEAPALIASINFO_head():
    class HEAPALIASINFO(Structure):
        pass
    return HEAPALIASINFO
def _define_HEAPALIASINFO():
    HEAPALIASINFO = win32more.Graphics.DirectDraw.HEAPALIASINFO_head
    HEAPALIASINFO._fields_ = [
        ("dwRefCnt", UInt32),
        ("dwFlags", UInt32),
        ("dwNumHeaps", UInt32),
        ("lpAliases", POINTER(win32more.Graphics.DirectDraw.HEAPALIAS_head)),
    ]
    return HEAPALIASINFO
def _define_IUNKNOWN_LIST_head():
    class IUNKNOWN_LIST(Structure):
        pass
    return IUNKNOWN_LIST
def _define_IUNKNOWN_LIST():
    IUNKNOWN_LIST = win32more.Graphics.DirectDraw.IUNKNOWN_LIST_head
    IUNKNOWN_LIST._fields_ = [
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.IUNKNOWN_LIST_head)),
        ("lpGuid", POINTER(Guid)),
        ("lpIUnknown", win32more.System.Com.IUnknown_head),
    ]
    return IUNKNOWN_LIST
def _define_LPDDHEL_INIT():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head),win32more.Foundation.BOOL, use_last_error=False)
def _define_LPDDHAL_SETCOLORKEY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DRVSETCOLORKEYDATA_head), use_last_error=False)
def _define_LPDDHAL_CANCREATESURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CANCREATESURFACEDATA_head), use_last_error=False)
def _define_LPDDHAL_WAITFORVERTICALBLANK():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_WAITFORVERTICALBLANKDATA_head), use_last_error=False)
def _define_LPDDHAL_CREATESURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CREATESURFACEDATA_head), use_last_error=False)
def _define_LPDDHAL_DESTROYDRIVER():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DESTROYDRIVERDATA_head), use_last_error=False)
def _define_LPDDHAL_SETMODE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SETMODEDATA_head), use_last_error=False)
def _define_LPDDHAL_CREATEPALETTE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CREATEPALETTEDATA_head), use_last_error=False)
def _define_LPDDHAL_GETSCANLINE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETSCANLINEDATA_head), use_last_error=False)
def _define_LPDDHAL_SETEXCLUSIVEMODE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SETEXCLUSIVEMODEDATA_head), use_last_error=False)
def _define_LPDDHAL_FLIPTOGDISURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_FLIPTOGDISURFACEDATA_head), use_last_error=False)
def _define_LPDDHAL_GETDRIVERINFO():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETDRIVERINFODATA_head), use_last_error=False)
def _define_DDHAL_DDCALLBACKS_head():
    class DDHAL_DDCALLBACKS(Structure):
        pass
    return DDHAL_DDCALLBACKS
def _define_DDHAL_DDCALLBACKS():
    DDHAL_DDCALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDCALLBACKS_head
    DDHAL_DDCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("DestroyDriver", win32more.Graphics.DirectDraw.LPDDHAL_DESTROYDRIVER),
        ("CreateSurface", win32more.Graphics.DirectDraw.LPDDHAL_CREATESURFACE),
        ("SetColorKey", win32more.Graphics.DirectDraw.LPDDHAL_SETCOLORKEY),
        ("SetMode", win32more.Graphics.DirectDraw.LPDDHAL_SETMODE),
        ("WaitForVerticalBlank", win32more.Graphics.DirectDraw.LPDDHAL_WAITFORVERTICALBLANK),
        ("CanCreateSurface", win32more.Graphics.DirectDraw.LPDDHAL_CANCREATESURFACE),
        ("CreatePalette", win32more.Graphics.DirectDraw.LPDDHAL_CREATEPALETTE),
        ("GetScanLine", win32more.Graphics.DirectDraw.LPDDHAL_GETSCANLINE),
        ("SetExclusiveMode", win32more.Graphics.DirectDraw.LPDDHAL_SETEXCLUSIVEMODE),
        ("FlipToGDISurface", win32more.Graphics.DirectDraw.LPDDHAL_FLIPTOGDISURFACE),
    ]
    return DDHAL_DDCALLBACKS
def _define_LPDDHALPALCB_DESTROYPALETTE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DESTROYPALETTEDATA_head), use_last_error=False)
def _define_LPDDHALPALCB_SETENTRIES():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SETENTRIESDATA_head), use_last_error=False)
def _define_DDHAL_DDPALETTECALLBACKS_head():
    class DDHAL_DDPALETTECALLBACKS(Structure):
        pass
    return DDHAL_DDPALETTECALLBACKS
def _define_DDHAL_DDPALETTECALLBACKS():
    DDHAL_DDPALETTECALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDPALETTECALLBACKS_head
    DDHAL_DDPALETTECALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("DestroyPalette", win32more.Graphics.DirectDraw.LPDDHALPALCB_DESTROYPALETTE),
        ("SetEntries", win32more.Graphics.DirectDraw.LPDDHALPALCB_SETENTRIES),
    ]
    return DDHAL_DDPALETTECALLBACKS
def _define_LPDDHALSURFCB_LOCK():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_LOCKDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_UNLOCK():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_UNLOCKDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_BLT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_BLTDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_UPDATEOVERLAY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_UPDATEOVERLAYDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_SETOVERLAYPOSITION():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SETOVERLAYPOSITIONDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_SETPALETTE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SETPALETTEDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_FLIP():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_FLIPDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_DESTROYSURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DESTROYSURFACEDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_SETCLIPLIST():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SETCLIPLISTDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_ADDATTACHEDSURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_ADDATTACHEDSURFACEDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_SETCOLORKEY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SETCOLORKEYDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_GETBLTSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETBLTSTATUSDATA_head), use_last_error=False)
def _define_LPDDHALSURFCB_GETFLIPSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETFLIPSTATUSDATA_head), use_last_error=False)
def _define_DDHAL_DDSURFACECALLBACKS_head():
    class DDHAL_DDSURFACECALLBACKS(Structure):
        pass
    return DDHAL_DDSURFACECALLBACKS
def _define_DDHAL_DDSURFACECALLBACKS():
    DDHAL_DDSURFACECALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDSURFACECALLBACKS_head
    DDHAL_DDSURFACECALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("DestroySurface", win32more.Graphics.DirectDraw.LPDDHALSURFCB_DESTROYSURFACE),
        ("Flip", win32more.Graphics.DirectDraw.LPDDHALSURFCB_FLIP),
        ("SetClipList", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETCLIPLIST),
        ("Lock", win32more.Graphics.DirectDraw.LPDDHALSURFCB_LOCK),
        ("Unlock", win32more.Graphics.DirectDraw.LPDDHALSURFCB_UNLOCK),
        ("Blt", win32more.Graphics.DirectDraw.LPDDHALSURFCB_BLT),
        ("SetColorKey", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETCOLORKEY),
        ("AddAttachedSurface", win32more.Graphics.DirectDraw.LPDDHALSURFCB_ADDATTACHEDSURFACE),
        ("GetBltStatus", win32more.Graphics.DirectDraw.LPDDHALSURFCB_GETBLTSTATUS),
        ("GetFlipStatus", win32more.Graphics.DirectDraw.LPDDHALSURFCB_GETFLIPSTATUS),
        ("UpdateOverlay", win32more.Graphics.DirectDraw.LPDDHALSURFCB_UPDATEOVERLAY),
        ("SetOverlayPosition", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETOVERLAYPOSITION),
        ("reserved4", c_void_p),
        ("SetPalette", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETPALETTE),
    ]
    return DDHAL_DDSURFACECALLBACKS
def _define_LPDDHAL_GETAVAILDRIVERMEMORY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETAVAILDRIVERMEMORYDATA_head), use_last_error=False)
def _define_LPDDHAL_UPDATENONLOCALHEAP():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_UPDATENONLOCALHEAPDATA_head), use_last_error=False)
def _define_LPDDHAL_GETHEAPALIGNMENT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETHEAPALIGNMENTDATA_head), use_last_error=False)
def _define_DDHAL_DDMISCELLANEOUSCALLBACKS_head():
    class DDHAL_DDMISCELLANEOUSCALLBACKS(Structure):
        pass
    return DDHAL_DDMISCELLANEOUSCALLBACKS
def _define_DDHAL_DDMISCELLANEOUSCALLBACKS():
    DDHAL_DDMISCELLANEOUSCALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDMISCELLANEOUSCALLBACKS_head
    DDHAL_DDMISCELLANEOUSCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("GetAvailDriverMemory", win32more.Graphics.DirectDraw.LPDDHAL_GETAVAILDRIVERMEMORY),
        ("UpdateNonLocalHeap", win32more.Graphics.DirectDraw.LPDDHAL_UPDATENONLOCALHEAP),
        ("GetHeapAlignment", win32more.Graphics.DirectDraw.LPDDHAL_GETHEAPALIGNMENT),
        ("GetSysmemBltStatus", win32more.Graphics.DirectDraw.LPDDHALSURFCB_GETBLTSTATUS),
    ]
    return DDHAL_DDMISCELLANEOUSCALLBACKS
def _define_LPDDHAL_CREATESURFACEEX():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CREATESURFACEEXDATA_head), use_last_error=False)
def _define_LPDDHAL_GETDRIVERSTATE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETDRIVERSTATEDATA_head), use_last_error=False)
def _define_LPDDHAL_DESTROYDDLOCAL():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DESTROYDDLOCALDATA_head), use_last_error=False)
def _define_DDHAL_DDMISCELLANEOUS2CALLBACKS_head():
    class DDHAL_DDMISCELLANEOUS2CALLBACKS(Structure):
        pass
    return DDHAL_DDMISCELLANEOUS2CALLBACKS
def _define_DDHAL_DDMISCELLANEOUS2CALLBACKS():
    DDHAL_DDMISCELLANEOUS2CALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDMISCELLANEOUS2CALLBACKS_head
    DDHAL_DDMISCELLANEOUS2CALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("Reserved", c_void_p),
        ("CreateSurfaceEx", win32more.Graphics.DirectDraw.LPDDHAL_CREATESURFACEEX),
        ("GetDriverState", win32more.Graphics.DirectDraw.LPDDHAL_GETDRIVERSTATE),
        ("DestroyDDLocal", win32more.Graphics.DirectDraw.LPDDHAL_DESTROYDDLOCAL),
    ]
    return DDHAL_DDMISCELLANEOUS2CALLBACKS
def _define_LPDDHALEXEBUFCB_CANCREATEEXEBUF():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CANCREATESURFACEDATA_head), use_last_error=False)
def _define_LPDDHALEXEBUFCB_CREATEEXEBUF():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CREATESURFACEDATA_head), use_last_error=False)
def _define_LPDDHALEXEBUFCB_DESTROYEXEBUF():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DESTROYSURFACEDATA_head), use_last_error=False)
def _define_LPDDHALEXEBUFCB_LOCKEXEBUF():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_LOCKDATA_head), use_last_error=False)
def _define_LPDDHALEXEBUFCB_UNLOCKEXEBUF():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_UNLOCKDATA_head), use_last_error=False)
def _define_DDHAL_DDEXEBUFCALLBACKS_head():
    class DDHAL_DDEXEBUFCALLBACKS(Structure):
        pass
    return DDHAL_DDEXEBUFCALLBACKS
def _define_DDHAL_DDEXEBUFCALLBACKS():
    DDHAL_DDEXEBUFCALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDEXEBUFCALLBACKS_head
    DDHAL_DDEXEBUFCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("CanCreateExecuteBuffer", win32more.Graphics.DirectDraw.LPDDHALEXEBUFCB_CANCREATEEXEBUF),
        ("CreateExecuteBuffer", win32more.Graphics.DirectDraw.LPDDHALEXEBUFCB_CREATEEXEBUF),
        ("DestroyExecuteBuffer", win32more.Graphics.DirectDraw.LPDDHALEXEBUFCB_DESTROYEXEBUF),
        ("LockExecuteBuffer", win32more.Graphics.DirectDraw.LPDDHALEXEBUFCB_LOCKEXEBUF),
        ("UnlockExecuteBuffer", win32more.Graphics.DirectDraw.LPDDHALEXEBUFCB_UNLOCKEXEBUF),
    ]
    return DDHAL_DDEXEBUFCALLBACKS
def _define_LPDDHALVPORTCB_CANCREATEVIDEOPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CANCREATEVPORTDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_CREATEVIDEOPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CREATEVPORTDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_FLIP():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_FLIPVPORTDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETBANDWIDTH():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTBANDWIDTHDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETINPUTFORMATS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTINPUTFORMATDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETOUTPUTFORMATS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTOUTPUTFORMATDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETFIELD():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTFIELDDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETLINE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTLINEDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETVPORTCONNECT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTCONNECTDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_DESTROYVPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DESTROYVPORTDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETFLIPSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTFLIPSTATUSDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_UPDATE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_UPDATEVPORTDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_WAITFORSYNC():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_WAITFORVPORTSYNCDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_GETSIGNALSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETVPORTSIGNALDATA_head), use_last_error=False)
def _define_LPDDHALVPORTCB_COLORCONTROL():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_VPORTCOLORDATA_head), use_last_error=False)
def _define_DDHAL_DDVIDEOPORTCALLBACKS_head():
    class DDHAL_DDVIDEOPORTCALLBACKS(Structure):
        pass
    return DDHAL_DDVIDEOPORTCALLBACKS
def _define_DDHAL_DDVIDEOPORTCALLBACKS():
    DDHAL_DDVIDEOPORTCALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDVIDEOPORTCALLBACKS_head
    DDHAL_DDVIDEOPORTCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("CanCreateVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_CANCREATEVIDEOPORT),
        ("CreateVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_CREATEVIDEOPORT),
        ("FlipVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_FLIP),
        ("GetVideoPortBandwidth", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETBANDWIDTH),
        ("GetVideoPortInputFormats", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETINPUTFORMATS),
        ("GetVideoPortOutputFormats", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETOUTPUTFORMATS),
        ("lpReserved1", c_void_p),
        ("GetVideoPortField", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETFIELD),
        ("GetVideoPortLine", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETLINE),
        ("GetVideoPortConnectInfo", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETVPORTCONNECT),
        ("DestroyVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_DESTROYVPORT),
        ("GetVideoPortFlipStatus", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETFLIPSTATUS),
        ("UpdateVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_UPDATE),
        ("WaitForVideoPortSync", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_WAITFORSYNC),
        ("GetVideoSignalStatus", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETSIGNALSTATUS),
        ("ColorControl", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_COLORCONTROL),
    ]
    return DDHAL_DDVIDEOPORTCALLBACKS
def _define_LPDDHALCOLORCB_COLORCONTROL():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_COLORCONTROLDATA_head), use_last_error=False)
def _define_DDHAL_DDCOLORCONTROLCALLBACKS_head():
    class DDHAL_DDCOLORCONTROLCALLBACKS(Structure):
        pass
    return DDHAL_DDCOLORCONTROLCALLBACKS
def _define_DDHAL_DDCOLORCONTROLCALLBACKS():
    DDHAL_DDCOLORCONTROLCALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDCOLORCONTROLCALLBACKS_head
    DDHAL_DDCOLORCONTROLCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("ColorControl", win32more.Graphics.DirectDraw.LPDDHALCOLORCB_COLORCONTROL),
    ]
    return DDHAL_DDCOLORCONTROLCALLBACKS
def _define_LPDDHALKERNELCB_SYNCSURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SYNCSURFACEDATA_head), use_last_error=False)
def _define_LPDDHALKERNELCB_SYNCVIDEOPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_SYNCVIDEOPORTDATA_head), use_last_error=False)
def _define_DDHAL_DDKERNELCALLBACKS_head():
    class DDHAL_DDKERNELCALLBACKS(Structure):
        pass
    return DDHAL_DDKERNELCALLBACKS
def _define_DDHAL_DDKERNELCALLBACKS():
    DDHAL_DDKERNELCALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDKERNELCALLBACKS_head
    DDHAL_DDKERNELCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("SyncSurfaceData", win32more.Graphics.DirectDraw.LPDDHALKERNELCB_SYNCSURFACE),
        ("SyncVideoPortData", win32more.Graphics.DirectDraw.LPDDHALKERNELCB_SYNCVIDEOPORT),
    ]
    return DDHAL_DDKERNELCALLBACKS
def _define_LPDDGAMMACALIBRATORPROC():
    return CFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.DirectDraw.DDGAMMARAMP_head),c_char_p_no, use_last_error=False)
def _define_LPDDHALMOCOMPCB_GETGUIDS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETMOCOMPGUIDSDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_GETFORMATS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETMOCOMPFORMATSDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_CREATE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_CREATEMOCOMPDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_GETCOMPBUFFINFO():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETMOCOMPCOMPBUFFDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_GETINTERNALINFO():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_GETINTERNALMOCOMPDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_BEGINFRAME():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_BEGINMOCOMPFRAMEDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_ENDFRAME():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_ENDMOCOMPFRAMEDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_RENDER():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_RENDERMOCOMPDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_QUERYSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_QUERYMOCOMPSTATUSDATA_head), use_last_error=False)
def _define_LPDDHALMOCOMPCB_DESTROY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DDHAL_DESTROYMOCOMPDATA_head), use_last_error=False)
def _define_DDHAL_DDMOTIONCOMPCALLBACKS_head():
    class DDHAL_DDMOTIONCOMPCALLBACKS(Structure):
        pass
    return DDHAL_DDMOTIONCOMPCALLBACKS
def _define_DDHAL_DDMOTIONCOMPCALLBACKS():
    DDHAL_DDMOTIONCOMPCALLBACKS = win32more.Graphics.DirectDraw.DDHAL_DDMOTIONCOMPCALLBACKS_head
    DDHAL_DDMOTIONCOMPCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("GetMoCompGuids", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETGUIDS),
        ("GetMoCompFormats", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETFORMATS),
        ("CreateMoComp", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_CREATE),
        ("GetMoCompBuffInfo", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETCOMPBUFFINFO),
        ("GetInternalMoCompInfo", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETINTERNALINFO),
        ("BeginMoCompFrame", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_BEGINFRAME),
        ("EndMoCompFrame", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_ENDFRAME),
        ("RenderMoComp", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_RENDER),
        ("QueryMoCompStatus", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_QUERYSTATUS),
        ("DestroyMoComp", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_DESTROY),
    ]
    return DDHAL_DDMOTIONCOMPCALLBACKS
def _define_DDNONLOCALVIDMEMCAPS_head():
    class DDNONLOCALVIDMEMCAPS(Structure):
        pass
    return DDNONLOCALVIDMEMCAPS
def _define_DDNONLOCALVIDMEMCAPS():
    DDNONLOCALVIDMEMCAPS = win32more.Graphics.DirectDraw.DDNONLOCALVIDMEMCAPS_head
    DDNONLOCALVIDMEMCAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwNLVBCaps", UInt32),
        ("dwNLVBCaps2", UInt32),
        ("dwNLVBCKeyCaps", UInt32),
        ("dwNLVBFXCaps", UInt32),
        ("dwNLVBRops", UInt32 * 8),
    ]
    return DDNONLOCALVIDMEMCAPS
def _define_DDMORESURFACECAPS_head():
    class DDMORESURFACECAPS(Structure):
        pass
    return DDMORESURFACECAPS
def _define_DDMORESURFACECAPS():
    DDMORESURFACECAPS = win32more.Graphics.DirectDraw.DDMORESURFACECAPS_head
    class DDMORESURFACECAPS_ExtendedHeapRestrictions(Structure):
        pass
    DDMORESURFACECAPS_ExtendedHeapRestrictions._fields_ = [
        ("ddsCapsEx", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("ddsCapsExAlt", win32more.Graphics.DirectDraw.DDSCAPSEX),
    ]
    DDMORESURFACECAPS._fields_ = [
        ("dwSize", UInt32),
        ("ddsCapsMore", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("ddsExtendedHeapRestrictions", DDMORESURFACECAPS_ExtendedHeapRestrictions * 0),
    ]
    return DDMORESURFACECAPS
def _define_DDSTEREOMODE_head():
    class DDSTEREOMODE(Structure):
        pass
    return DDSTEREOMODE
def _define_DDSTEREOMODE():
    DDSTEREOMODE = win32more.Graphics.DirectDraw.DDSTEREOMODE_head
    DDSTEREOMODE._fields_ = [
        ("dwSize", UInt32),
        ("dwHeight", UInt32),
        ("dwWidth", UInt32),
        ("dwBpp", UInt32),
        ("dwRefreshRate", UInt32),
        ("bSupported", win32more.Foundation.BOOL),
    ]
    return DDSTEREOMODE
def _define_DDRAWI_DDRAWPALETTE_INT_head():
    class DDRAWI_DDRAWPALETTE_INT(Structure):
        pass
    return DDRAWI_DDRAWPALETTE_INT
def _define_DDRAWI_DDRAWPALETTE_INT():
    DDRAWI_DDRAWPALETTE_INT = win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_INT_head
    DDRAWI_DDRAWPALETTE_INT._fields_ = [
        ("lpVtbl", c_void_p),
        ("lpLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_LCL_head)),
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_INT_head)),
        ("dwIntRefCnt", UInt32),
    ]
    return DDRAWI_DDRAWPALETTE_INT
def _define_DDRAWI_DDRAWPALETTE_GBL_head():
    class DDRAWI_DDRAWPALETTE_GBL(Structure):
        pass
    return DDRAWI_DDRAWPALETTE_GBL
def _define_DDRAWI_DDRAWPALETTE_GBL():
    DDRAWI_DDRAWPALETTE_GBL = win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_GBL_head
    class DDRAWI_DDRAWPALETTE_GBL__Anonymous_e__Union(Union):
        pass
    DDRAWI_DDRAWPALETTE_GBL__Anonymous_e__Union._fields_ = [
        ("dwReserved1", UIntPtr),
        ("hHELGDIPalette", win32more.Graphics.Gdi.HPALETTE),
    ]
    DDRAWI_DDRAWPALETTE_GBL._anonymous_ = [
        'Anonymous',
    ]
    DDRAWI_DDRAWPALETTE_GBL._fields_ = [
        ("dwRefCnt", UInt32),
        ("dwFlags", UInt32),
        ("lpDD_lcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("dwProcessId", UInt32),
        ("lpColorTable", POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head)),
        ("Anonymous", DDRAWI_DDRAWPALETTE_GBL__Anonymous_e__Union),
        ("dwDriverReserved", UInt32),
        ("dwContentsStamp", UInt32),
        ("dwSaveStamp", UInt32),
        ("dwHandle", UInt32),
    ]
    return DDRAWI_DDRAWPALETTE_GBL
def _define_DDRAWI_DDRAWPALETTE_LCL_head():
    class DDRAWI_DDRAWPALETTE_LCL(Structure):
        pass
    return DDRAWI_DDRAWPALETTE_LCL
def _define_DDRAWI_DDRAWPALETTE_LCL():
    DDRAWI_DDRAWPALETTE_LCL = win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_LCL_head
    DDRAWI_DDRAWPALETTE_LCL._fields_ = [
        ("lpPalMore", UInt32),
        ("lpGbl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_GBL_head)),
        ("dwUnused0", UIntPtr),
        ("dwLocalRefCnt", UInt32),
        ("pUnkOuter", win32more.System.Com.IUnknown_head),
        ("lpDD_lcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("dwReserved1", UIntPtr),
        ("dwDDRAWReserved1", UIntPtr),
        ("dwDDRAWReserved2", UIntPtr),
        ("dwDDRAWReserved3", UIntPtr),
    ]
    return DDRAWI_DDRAWPALETTE_LCL
def _define_DDRAWI_DDRAWCLIPPER_INT_head():
    class DDRAWI_DDRAWCLIPPER_INT(Structure):
        pass
    return DDRAWI_DDRAWCLIPPER_INT
def _define_DDRAWI_DDRAWCLIPPER_INT():
    DDRAWI_DDRAWCLIPPER_INT = win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_INT_head
    DDRAWI_DDRAWCLIPPER_INT._fields_ = [
        ("lpVtbl", c_void_p),
        ("lpLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_LCL_head)),
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_INT_head)),
        ("dwIntRefCnt", UInt32),
    ]
    return DDRAWI_DDRAWCLIPPER_INT
def _define_DDRAWI_DDRAWCLIPPER_GBL_head():
    class DDRAWI_DDRAWCLIPPER_GBL(Structure):
        pass
    return DDRAWI_DDRAWCLIPPER_GBL
def _define_DDRAWI_DDRAWCLIPPER_GBL():
    DDRAWI_DDRAWCLIPPER_GBL = win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_GBL_head
    DDRAWI_DDRAWCLIPPER_GBL._fields_ = [
        ("dwRefCnt", UInt32),
        ("dwFlags", UInt32),
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwProcessId", UInt32),
        ("dwReserved1", UIntPtr),
        ("hWnd", UIntPtr),
        ("lpStaticClipList", POINTER(win32more.Graphics.Gdi.RGNDATA_head)),
    ]
    return DDRAWI_DDRAWCLIPPER_GBL
def _define_DDRAWI_DDRAWCLIPPER_LCL_head():
    class DDRAWI_DDRAWCLIPPER_LCL(Structure):
        pass
    return DDRAWI_DDRAWCLIPPER_LCL
def _define_DDRAWI_DDRAWCLIPPER_LCL():
    DDRAWI_DDRAWCLIPPER_LCL = win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_LCL_head
    DDRAWI_DDRAWCLIPPER_LCL._fields_ = [
        ("lpClipMore", UInt32),
        ("lpGbl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_GBL_head)),
        ("lpDD_lcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("dwLocalRefCnt", UInt32),
        ("pUnkOuter", win32more.System.Com.IUnknown_head),
        ("lpDD_int", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_INT_head)),
        ("dwReserved1", UIntPtr),
        ("pAddrefedThisOwner", win32more.System.Com.IUnknown_head),
    ]
    return DDRAWI_DDRAWCLIPPER_LCL
def _define_ATTACHLIST_head():
    class ATTACHLIST(Structure):
        pass
    return ATTACHLIST
def _define_ATTACHLIST():
    ATTACHLIST = win32more.Graphics.DirectDraw.ATTACHLIST_head
    ATTACHLIST._fields_ = [
        ("dwFlags", UInt32),
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.ATTACHLIST_head)),
        ("lpAttached", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpIAttached", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
    ]
    return ATTACHLIST
def _define_DBLNODE_head():
    class DBLNODE(Structure):
        pass
    return DBLNODE
def _define_DBLNODE():
    DBLNODE = win32more.Graphics.DirectDraw.DBLNODE_head
    DBLNODE._fields_ = [
        ("next", POINTER(win32more.Graphics.DirectDraw.DBLNODE_head)),
        ("prev", POINTER(win32more.Graphics.DirectDraw.DBLNODE_head)),
        ("object", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("object_int", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
    ]
    return DBLNODE
def _define_ACCESSRECTLIST_head():
    class ACCESSRECTLIST(Structure):
        pass
    return ACCESSRECTLIST
def _define_ACCESSRECTLIST():
    ACCESSRECTLIST = win32more.Graphics.DirectDraw.ACCESSRECTLIST_head
    ACCESSRECTLIST._fields_ = [
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.ACCESSRECTLIST_head)),
        ("rDest", win32more.Foundation.RECT),
        ("lpOwner", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpSurfaceData", c_void_p),
        ("dwFlags", UInt32),
        ("lpHeapAliasInfo", POINTER(win32more.Graphics.DirectDraw.HEAPALIASINFO_head)),
    ]
    return ACCESSRECTLIST
def _define_DDRAWI_DDRAWSURFACE_INT_head():
    class DDRAWI_DDRAWSURFACE_INT(Structure):
        pass
    return DDRAWI_DDRAWSURFACE_INT
def _define_DDRAWI_DDRAWSURFACE_INT():
    DDRAWI_DDRAWSURFACE_INT = win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head
    DDRAWI_DDRAWSURFACE_INT._fields_ = [
        ("lpVtbl", c_void_p),
        ("lpLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
        ("dwIntRefCnt", UInt32),
    ]
    return DDRAWI_DDRAWSURFACE_INT
def _define_DDRAWI_DDRAWSURFACE_GBL_head():
    class DDRAWI_DDRAWSURFACE_GBL(Structure):
        pass
    return DDRAWI_DDRAWSURFACE_GBL
def _define_DDRAWI_DDRAWSURFACE_GBL():
    DDRAWI_DDRAWSURFACE_GBL = win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_GBL_head
    class DDRAWI_DDRAWSURFACE_GBL__Anonymous3_e__Union(Union):
        pass
    DDRAWI_DDRAWSURFACE_GBL__Anonymous3_e__Union._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDHandle", c_void_p),
    ]
    class DDRAWI_DDRAWSURFACE_GBL__Anonymous1_e__Union(Union):
        pass
    DDRAWI_DDRAWSURFACE_GBL__Anonymous1_e__Union._fields_ = [
        ("lpRectList", POINTER(win32more.Graphics.DirectDraw.ACCESSRECTLIST_head)),
        ("dwBlockSizeY", UInt32),
        ("lSlicePitch", Int32),
    ]
    class DDRAWI_DDRAWSURFACE_GBL__Anonymous2_e__Union(Union):
        pass
    DDRAWI_DDRAWSURFACE_GBL__Anonymous2_e__Union._fields_ = [
        ("lpVidMemHeap", POINTER(win32more.Graphics.DirectDraw.VMEMHEAP_head)),
        ("dwBlockSizeX", UInt32),
    ]
    class DDRAWI_DDRAWSURFACE_GBL__Anonymous4_e__Union(Union):
        pass
    DDRAWI_DDRAWSURFACE_GBL__Anonymous4_e__Union._fields_ = [
        ("lPitch", Int32),
        ("dwLinearSize", UInt32),
    ]
    DDRAWI_DDRAWSURFACE_GBL._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
        'Anonymous4',
    ]
    DDRAWI_DDRAWSURFACE_GBL._fields_ = [
        ("dwRefCnt", UInt32),
        ("dwGlobalFlags", UInt32),
        ("Anonymous1", DDRAWI_DDRAWSURFACE_GBL__Anonymous1_e__Union),
        ("Anonymous2", DDRAWI_DDRAWSURFACE_GBL__Anonymous2_e__Union),
        ("Anonymous3", DDRAWI_DDRAWSURFACE_GBL__Anonymous3_e__Union),
        ("fpVidMem", UIntPtr),
        ("Anonymous4", DDRAWI_DDRAWSURFACE_GBL__Anonymous4_e__Union),
        ("wHeight", UInt16),
        ("wWidth", UInt16),
        ("dwUsageCount", UInt32),
        ("dwReserved1", UIntPtr),
        ("ddpfSurface", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
    ]
    return DDRAWI_DDRAWSURFACE_GBL
def _define_DDRAWI_DDRAWSURFACE_GBL_MORE_head():
    class DDRAWI_DDRAWSURFACE_GBL_MORE(Structure):
        pass
    return DDRAWI_DDRAWSURFACE_GBL_MORE
def _define_DDRAWI_DDRAWSURFACE_GBL_MORE():
    DDRAWI_DDRAWSURFACE_GBL_MORE = win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_GBL_MORE_head
    class DDRAWI_DDRAWSURFACE_GBL_MORE__Anonymous_e__Union(Union):
        pass
    DDRAWI_DDRAWSURFACE_GBL_MORE__Anonymous_e__Union._fields_ = [
        ("dwPhysicalPageTable", UInt32),
        ("fpPhysicalVidMem", UIntPtr),
    ]
    DDRAWI_DDRAWSURFACE_GBL_MORE._anonymous_ = [
        'Anonymous',
    ]
    DDRAWI_DDRAWSURFACE_GBL_MORE._fields_ = [
        ("dwSize", UInt32),
        ("Anonymous", DDRAWI_DDRAWSURFACE_GBL_MORE__Anonymous_e__Union),
        ("pPageTable", POINTER(UInt32)),
        ("cPages", UInt32),
        ("dwSavedDCContext", UIntPtr),
        ("fpAliasedVidMem", UIntPtr),
        ("dwDriverReserved", UIntPtr),
        ("dwHELReserved", UIntPtr),
        ("cPageUnlocks", UInt32),
        ("hKernelSurface", UIntPtr),
        ("dwKernelRefCnt", UInt32),
        ("lpColorInfo", POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head)),
        ("fpNTAlias", UIntPtr),
        ("dwContentsStamp", UInt32),
        ("lpvUnswappedDriverReserved", c_void_p),
        ("lpDDRAWReserved2", c_void_p),
        ("dwDDRAWReserved1", UInt32),
        ("dwDDRAWReserved2", UInt32),
        ("fpAliasOfVidMem", UIntPtr),
    ]
    return DDRAWI_DDRAWSURFACE_GBL_MORE
def _define_DDRAWI_DDRAWSURFACE_MORE_head():
    class DDRAWI_DDRAWSURFACE_MORE(Structure):
        pass
    return DDRAWI_DDRAWSURFACE_MORE
def _define_DDRAWI_DDRAWSURFACE_MORE():
    DDRAWI_DDRAWSURFACE_MORE = win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_MORE_head
    DDRAWI_DDRAWSURFACE_MORE._fields_ = [
        ("dwSize", UInt32),
        ("lpIUnknowns", POINTER(win32more.Graphics.DirectDraw.IUNKNOWN_LIST_head)),
        ("lpDD_lcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("dwPageLockCount", UInt32),
        ("dwBytesAllocated", UInt32),
        ("lpDD_int", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_INT_head)),
        ("dwMipMapCount", UInt32),
        ("lpDDIClipper", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_INT_head)),
        ("lpHeapAliasInfo", POINTER(win32more.Graphics.DirectDraw.HEAPALIASINFO_head)),
        ("dwOverlayFlags", UInt32),
        ("rgjunc", c_void_p),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("lpddOverlayFX", POINTER(win32more.Graphics.DirectDraw.DDOVERLAYFX_head)),
        ("ddsCapsEx", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("dwTextureStage", UInt32),
        ("lpDDRAWReserved", c_void_p),
        ("lpDDRAWReserved2", c_void_p),
        ("lpDDrawReserved3", c_void_p),
        ("dwDDrawReserved4", UInt32),
        ("lpDDrawReserved5", c_void_p),
        ("lpGammaRamp", POINTER(UInt32)),
        ("lpOriginalGammaRamp", POINTER(UInt32)),
        ("lpDDrawReserved6", c_void_p),
        ("dwSurfaceHandle", UInt32),
        ("qwDDrawReserved8", UInt32 * 2),
        ("lpDDrawReserved9", c_void_p),
        ("cSurfaces", UInt32),
        ("pCreatedDDSurfaceDesc2", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC2_head)),
        ("slist", POINTER(POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head))),
        ("dwFVF", UInt32),
        ("lpVB", c_void_p),
    ]
    return DDRAWI_DDRAWSURFACE_MORE
def _define_DDRAWI_DDRAWSURFACE_LCL_head():
    class DDRAWI_DDRAWSURFACE_LCL(Structure):
        pass
    return DDRAWI_DDRAWSURFACE_LCL
def _define_DDRAWI_DDRAWSURFACE_LCL():
    DDRAWI_DDRAWSURFACE_LCL = win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head
    class DDRAWI_DDRAWSURFACE_LCL__Anonymous2_e__Union(Union):
        pass
    DDRAWI_DDRAWSURFACE_LCL__Anonymous2_e__Union._fields_ = [
        ("lpDDClipper", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_LCL_head)),
        ("lp16DDClipper", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_INT_head)),
    ]
    class DDRAWI_DDRAWSURFACE_LCL__Anonymous1_e__Union(Union):
        pass
    DDRAWI_DDRAWSURFACE_LCL__Anonymous1_e__Union._fields_ = [
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_INT_head)),
        ("lp16DDPalette", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_INT_head)),
    ]
    DDRAWI_DDRAWSURFACE_LCL._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    DDRAWI_DDRAWSURFACE_LCL._fields_ = [
        ("lpSurfMore", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_MORE_head)),
        ("lpGbl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_GBL_head)),
        ("hDDSurface", UIntPtr),
        ("lpAttachList", POINTER(win32more.Graphics.DirectDraw.ATTACHLIST_head)),
        ("lpAttachListFrom", POINTER(win32more.Graphics.DirectDraw.ATTACHLIST_head)),
        ("dwLocalRefCnt", UInt32),
        ("dwProcessId", UInt32),
        ("dwFlags", UInt32),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("Anonymous1", DDRAWI_DDRAWSURFACE_LCL__Anonymous1_e__Union),
        ("Anonymous2", DDRAWI_DDRAWSURFACE_LCL__Anonymous2_e__Union),
        ("dwModeCreatedIn", UInt32),
        ("dwBackBufferCount", UInt32),
        ("ddckCKDestBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKSrcBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("hDC", UIntPtr),
        ("dwReserved1", UIntPtr),
        ("ddckCKSrcOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKDestOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("lpSurfaceOverlaying", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
        ("dbnOverlayNode", win32more.Graphics.DirectDraw.DBLNODE),
        ("rcOverlaySrc", win32more.Foundation.RECT),
        ("rcOverlayDest", win32more.Foundation.RECT),
        ("dwClrXparent", UInt32),
        ("dwAlpha", UInt32),
        ("lOverlayX", Int32),
        ("lOverlayY", Int32),
    ]
    return DDRAWI_DDRAWSURFACE_LCL
def _define_DDHALMODEINFO_head():
    class DDHALMODEINFO(Structure):
        pass
    return DDHALMODEINFO
def _define_DDHALMODEINFO():
    DDHALMODEINFO = win32more.Graphics.DirectDraw.DDHALMODEINFO_head
    DDHALMODEINFO._fields_ = [
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("lPitch", Int32),
        ("dwBPP", UInt32),
        ("wFlags", UInt16),
        ("wRefreshRate", UInt16),
        ("dwRBitMask", UInt32),
        ("dwGBitMask", UInt32),
        ("dwBBitMask", UInt32),
        ("dwAlphaBitMask", UInt32),
    ]
    return DDHALMODEINFO
def _define_DDRAWI_DIRECTDRAW_INT_head():
    class DDRAWI_DIRECTDRAW_INT(Structure):
        pass
    return DDRAWI_DIRECTDRAW_INT
def _define_DDRAWI_DIRECTDRAW_INT():
    DDRAWI_DIRECTDRAW_INT = win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_INT_head
    DDRAWI_DIRECTDRAW_INT._fields_ = [
        ("lpVtbl", c_void_p),
        ("lpLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_INT_head)),
        ("dwIntRefCnt", UInt32),
    ]
    return DDRAWI_DIRECTDRAW_INT
def _define_DDHAL_CALLBACKS_head():
    class DDHAL_CALLBACKS(Structure):
        pass
    return DDHAL_CALLBACKS
def _define_DDHAL_CALLBACKS():
    DDHAL_CALLBACKS = win32more.Graphics.DirectDraw.DDHAL_CALLBACKS_head
    DDHAL_CALLBACKS._fields_ = [
        ("cbDDCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDCALLBACKS),
        ("cbDDSurfaceCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDSURFACECALLBACKS),
        ("cbDDPaletteCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDPALETTECALLBACKS),
        ("HALDD", win32more.Graphics.DirectDraw.DDHAL_DDCALLBACKS),
        ("HALDDSurface", win32more.Graphics.DirectDraw.DDHAL_DDSURFACECALLBACKS),
        ("HALDDPalette", win32more.Graphics.DirectDraw.DDHAL_DDPALETTECALLBACKS),
        ("HELDD", win32more.Graphics.DirectDraw.DDHAL_DDCALLBACKS),
        ("HELDDSurface", win32more.Graphics.DirectDraw.DDHAL_DDSURFACECALLBACKS),
        ("HELDDPalette", win32more.Graphics.DirectDraw.DDHAL_DDPALETTECALLBACKS),
        ("cbDDExeBufCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDEXEBUFCALLBACKS),
        ("HALDDExeBuf", win32more.Graphics.DirectDraw.DDHAL_DDEXEBUFCALLBACKS),
        ("HELDDExeBuf", win32more.Graphics.DirectDraw.DDHAL_DDEXEBUFCALLBACKS),
        ("cbDDVideoPortCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDVIDEOPORTCALLBACKS),
        ("HALDDVideoPort", win32more.Graphics.DirectDraw.DDHAL_DDVIDEOPORTCALLBACKS),
        ("cbDDColorControlCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDCOLORCONTROLCALLBACKS),
        ("HALDDColorControl", win32more.Graphics.DirectDraw.DDHAL_DDCOLORCONTROLCALLBACKS),
        ("cbDDMiscellaneousCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDMISCELLANEOUSCALLBACKS),
        ("HALDDMiscellaneous", win32more.Graphics.DirectDraw.DDHAL_DDMISCELLANEOUSCALLBACKS),
        ("cbDDKernelCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDKERNELCALLBACKS),
        ("HALDDKernel", win32more.Graphics.DirectDraw.DDHAL_DDKERNELCALLBACKS),
        ("cbDDMotionCompCallbacks", win32more.Graphics.DirectDraw.DDHAL_DDMOTIONCOMPCALLBACKS),
        ("HALDDMotionComp", win32more.Graphics.DirectDraw.DDHAL_DDMOTIONCOMPCALLBACKS),
    ]
    return DDHAL_CALLBACKS
def _define_DDCORECAPS_head():
    class DDCORECAPS(Structure):
        pass
    return DDCORECAPS
def _define_DDCORECAPS():
    DDCORECAPS = win32more.Graphics.DirectDraw.DDCORECAPS_head
    DDCORECAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCKeyCaps", UInt32),
        ("dwFXCaps", UInt32),
        ("dwFXAlphaCaps", UInt32),
        ("dwPalCaps", UInt32),
        ("dwSVCaps", UInt32),
        ("dwAlphaBltConstBitDepths", UInt32),
        ("dwAlphaBltPixelBitDepths", UInt32),
        ("dwAlphaBltSurfaceBitDepths", UInt32),
        ("dwAlphaOverlayConstBitDepths", UInt32),
        ("dwAlphaOverlayPixelBitDepths", UInt32),
        ("dwAlphaOverlaySurfaceBitDepths", UInt32),
        ("dwZBufferBitDepths", UInt32),
        ("dwVidMemTotal", UInt32),
        ("dwVidMemFree", UInt32),
        ("dwMaxVisibleOverlays", UInt32),
        ("dwCurrVisibleOverlays", UInt32),
        ("dwNumFourCCCodes", UInt32),
        ("dwAlignBoundarySrc", UInt32),
        ("dwAlignSizeSrc", UInt32),
        ("dwAlignBoundaryDest", UInt32),
        ("dwAlignSizeDest", UInt32),
        ("dwAlignStrideAlign", UInt32),
        ("dwRops", UInt32 * 8),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwMinOverlayStretch", UInt32),
        ("dwMaxOverlayStretch", UInt32),
        ("dwMinLiveVideoStretch", UInt32),
        ("dwMaxLiveVideoStretch", UInt32),
        ("dwMinHwCodecStretch", UInt32),
        ("dwMaxHwCodecStretch", UInt32),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dwReserved3", UInt32),
        ("dwSVBCaps", UInt32),
        ("dwSVBCKeyCaps", UInt32),
        ("dwSVBFXCaps", UInt32),
        ("dwSVBRops", UInt32 * 8),
        ("dwVSBCaps", UInt32),
        ("dwVSBCKeyCaps", UInt32),
        ("dwVSBFXCaps", UInt32),
        ("dwVSBRops", UInt32 * 8),
        ("dwSSBCaps", UInt32),
        ("dwSSBCKeyCaps", UInt32),
        ("dwSSBFXCaps", UInt32),
        ("dwSSBRops", UInt32 * 8),
        ("dwMaxVideoPorts", UInt32),
        ("dwCurrVideoPorts", UInt32),
        ("dwSVBCaps2", UInt32),
    ]
    return DDCORECAPS
def _define_DDRAWI_DIRECTDRAW_GBL_head():
    class DDRAWI_DIRECTDRAW_GBL(Structure):
        pass
    return DDRAWI_DIRECTDRAW_GBL
def _define_DDRAWI_DIRECTDRAW_GBL():
    DDRAWI_DIRECTDRAW_GBL = win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head
    DDRAWI_DIRECTDRAW_GBL._fields_ = [
        ("dwRefCnt", UInt32),
        ("dwFlags", UInt32),
        ("fpPrimaryOrig", UIntPtr),
        ("ddCaps", win32more.Graphics.DirectDraw.DDCORECAPS),
        ("dwInternal1", UInt32),
        ("dwUnused1", UInt32 * 9),
        ("lpDDCBtmp", POINTER(win32more.Graphics.DirectDraw.DDHAL_CALLBACKS_head)),
        ("dsList", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
        ("palList", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_INT_head)),
        ("clipperList", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWCLIPPER_INT_head)),
        ("lp16DD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwMaxOverlays", UInt32),
        ("dwCurrOverlays", UInt32),
        ("dwMonitorFrequency", UInt32),
        ("ddHELCaps", win32more.Graphics.DirectDraw.DDCORECAPS),
        ("dwUnused2", UInt32 * 50),
        ("ddckCKDestOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKSrcOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("vmiData", win32more.Graphics.DirectDraw.VIDMEMINFO),
        ("lpDriverHandle", c_void_p),
        ("lpExclusiveOwner", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("dwModeIndex", UInt32),
        ("dwModeIndexOrig", UInt32),
        ("dwNumFourCC", UInt32),
        ("lpdwFourCC", POINTER(UInt32)),
        ("dwNumModes", UInt32),
        ("lpModeInfo", POINTER(win32more.Graphics.DirectDraw.DDHALMODEINFO_head)),
        ("plProcessList", win32more.Graphics.DirectDraw.PROCESS_LIST),
        ("dwSurfaceLockCount", UInt32),
        ("dwAliasedLockCnt", UInt32),
        ("dwReserved3", UIntPtr),
        ("hDD", UIntPtr),
        ("cObsolete", win32more.Foundation.CHAR * 12),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dbnOverlayRoot", win32more.Graphics.DirectDraw.DBLNODE),
        ("lpwPDeviceFlags", POINTER(UInt16)),
        ("dwPDevice", UInt32),
        ("dwWin16LockCnt", UInt32),
        ("dwUnused3", UInt32),
        ("hInstance", UInt32),
        ("dwEvent16", UInt32),
        ("dwSaveNumModes", UInt32),
        ("lpD3DGlobalDriverData", UIntPtr),
        ("lpD3DHALCallbacks", UIntPtr),
        ("ddBothCaps", win32more.Graphics.DirectDraw.DDCORECAPS),
        ("lpDDVideoPortCaps", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTCAPS_head)),
        ("dvpList", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_INT_head)),
        ("lpD3DHALCallbacks2", UIntPtr),
        ("rectDevice", win32more.Foundation.RECT),
        ("cMonitors", UInt32),
        ("gpbmiSrc", c_void_p),
        ("gpbmiDest", c_void_p),
        ("phaiHeapAliases", POINTER(win32more.Graphics.DirectDraw.HEAPALIASINFO_head)),
        ("hKernelHandle", UIntPtr),
        ("pfnNotifyProc", UIntPtr),
        ("lpDDKernelCaps", POINTER(win32more.Graphics.DirectDraw.DDKERNELCAPS_head)),
        ("lpddNLVCaps", POINTER(win32more.Graphics.DirectDraw.DDNONLOCALVIDMEMCAPS_head)),
        ("lpddNLVHELCaps", POINTER(win32more.Graphics.DirectDraw.DDNONLOCALVIDMEMCAPS_head)),
        ("lpddNLVBothCaps", POINTER(win32more.Graphics.DirectDraw.DDNONLOCALVIDMEMCAPS_head)),
        ("lpD3DExtendedCaps", UIntPtr),
        ("dwDOSBoxEvent", UInt32),
        ("rectDesktop", win32more.Foundation.RECT),
        ("cDriverName", win32more.Foundation.CHAR * 32),
        ("lpD3DHALCallbacks3", UIntPtr),
        ("dwNumZPixelFormats", UInt32),
        ("lpZPixelFormats", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("mcList", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_INT_head)),
        ("hDDVxd", UInt32),
        ("ddsCapsMore", win32more.Graphics.DirectDraw.DDSCAPSEX),
    ]
    return DDRAWI_DIRECTDRAW_GBL
def _define_DDRAWI_DIRECTDRAW_LCL_head():
    class DDRAWI_DIRECTDRAW_LCL(Structure):
        pass
    return DDRAWI_DIRECTDRAW_LCL
def _define_DDRAWI_DIRECTDRAW_LCL():
    DDRAWI_DIRECTDRAW_LCL = win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head
    DDRAWI_DIRECTDRAW_LCL._fields_ = [
        ("lpDDMore", UInt32),
        ("lpGbl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwUnused0", UInt32),
        ("dwLocalFlags", UInt32),
        ("dwLocalRefCnt", UInt32),
        ("dwProcessId", UInt32),
        ("pUnkOuter", win32more.System.Com.IUnknown_head),
        ("dwObsolete1", UInt32),
        ("hWnd", UIntPtr),
        ("hDC", UIntPtr),
        ("dwErrorMode", UInt32),
        ("lpPrimary", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
        ("lpCB", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
        ("dwPreferredMode", UInt32),
        ("hD3DInstance", win32more.Foundation.HINSTANCE),
        ("pD3DIUnknown", win32more.System.Com.IUnknown_head),
        ("lpDDCB", POINTER(win32more.Graphics.DirectDraw.DDHAL_CALLBACKS_head)),
        ("hDDVxd", UIntPtr),
        ("dwAppHackFlags", UInt32),
        ("hFocusWnd", UIntPtr),
        ("dwHotTracking", UInt32),
        ("dwIMEState", UInt32),
        ("hWndPopup", UIntPtr),
        ("hDD", UIntPtr),
        ("hGammaCalibrator", UIntPtr),
        ("lpGammaCalibrator", win32more.Graphics.DirectDraw.LPDDGAMMACALIBRATORPROC),
    ]
    return DDRAWI_DIRECTDRAW_LCL
def _define_DDRAWI_DDVIDEOPORT_INT_head():
    class DDRAWI_DDVIDEOPORT_INT(Structure):
        pass
    return DDRAWI_DDVIDEOPORT_INT
def _define_DDRAWI_DDVIDEOPORT_INT():
    DDRAWI_DDVIDEOPORT_INT = win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_INT_head
    DDRAWI_DDVIDEOPORT_INT._fields_ = [
        ("lpVtbl", c_void_p),
        ("lpLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_INT_head)),
        ("dwIntRefCnt", UInt32),
        ("dwFlags", UInt32),
    ]
    return DDRAWI_DDVIDEOPORT_INT
def _define_DDRAWI_DDVIDEOPORT_LCL_head():
    class DDRAWI_DDVIDEOPORT_LCL(Structure):
        pass
    return DDRAWI_DDVIDEOPORT_LCL
def _define_DDRAWI_DDVIDEOPORT_LCL():
    DDRAWI_DDVIDEOPORT_LCL = win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head
    DDRAWI_DDVIDEOPORT_LCL._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("ddvpDesc", win32more.Graphics.DirectDraw.DDVIDEOPORTDESC),
        ("ddvpInfo", win32more.Graphics.DirectDraw.DDVIDEOPORTINFO),
        ("lpSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
        ("lpVBISurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head)),
        ("lpFlipInts", POINTER(POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head))),
        ("dwNumAutoflip", UInt32),
        ("dwProcessID", UInt32),
        ("dwStateFlags", UInt32),
        ("dwFlags", UInt32),
        ("dwRefCnt", UInt32),
        ("fpLastFlip", UIntPtr),
        ("dwReserved1", UIntPtr),
        ("dwReserved2", UIntPtr),
        ("hDDVideoPort", win32more.Foundation.HANDLE),
        ("dwNumVBIAutoflip", UInt32),
        ("lpVBIDesc", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head)),
        ("lpVideoDesc", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head)),
        ("lpVBIInfo", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTINFO_head)),
        ("lpVideoInfo", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTINFO_head)),
        ("dwVBIProcessID", UInt32),
        ("lpVPNotify", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_INT_head)),
    ]
    return DDRAWI_DDVIDEOPORT_LCL
def _define_DDRAWI_DDMOTIONCOMP_INT_head():
    class DDRAWI_DDMOTIONCOMP_INT(Structure):
        pass
    return DDRAWI_DDMOTIONCOMP_INT
def _define_DDRAWI_DDMOTIONCOMP_INT():
    DDRAWI_DDMOTIONCOMP_INT = win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_INT_head
    DDRAWI_DDMOTIONCOMP_INT._fields_ = [
        ("lpVtbl", c_void_p),
        ("lpLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head)),
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_INT_head)),
        ("dwIntRefCnt", UInt32),
    ]
    return DDRAWI_DDMOTIONCOMP_INT
def _define_DDRAWI_DDMOTIONCOMP_LCL_head():
    class DDRAWI_DDMOTIONCOMP_LCL(Structure):
        pass
    return DDRAWI_DDMOTIONCOMP_LCL
def _define_DDRAWI_DDMOTIONCOMP_LCL():
    DDRAWI_DDMOTIONCOMP_LCL = win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head
    DDRAWI_DDMOTIONCOMP_LCL._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("guid", Guid),
        ("dwUncompWidth", UInt32),
        ("dwUncompHeight", UInt32),
        ("ddUncompPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwInternalFlags", UInt32),
        ("dwRefCnt", UInt32),
        ("dwProcessId", UInt32),
        ("hMoComp", win32more.Foundation.HANDLE),
        ("dwDriverReserved1", UInt32),
        ("dwDriverReserved2", UInt32),
        ("dwDriverReserved3", UInt32),
        ("lpDriverReserved1", c_void_p),
        ("lpDriverReserved2", c_void_p),
        ("lpDriverReserved3", c_void_p),
    ]
    return DDRAWI_DDMOTIONCOMP_LCL
def _define_DDHALINFO_head():
    class DDHALINFO(Structure):
        pass
    return DDHALINFO
def _define_DDHALINFO():
    DDHALINFO = win32more.Graphics.DirectDraw.DDHALINFO_head
    DDHALINFO._fields_ = [
        ("dwSize", UInt32),
        ("lpDDCallbacks", POINTER(win32more.Graphics.DirectDraw.DDHAL_DDCALLBACKS_head)),
        ("lpDDSurfaceCallbacks", POINTER(win32more.Graphics.DirectDraw.DDHAL_DDSURFACECALLBACKS_head)),
        ("lpDDPaletteCallbacks", POINTER(win32more.Graphics.DirectDraw.DDHAL_DDPALETTECALLBACKS_head)),
        ("vmiData", win32more.Graphics.DirectDraw.VIDMEMINFO),
        ("ddCaps", win32more.Graphics.DirectDraw.DDCORECAPS),
        ("dwMonitorFrequency", UInt32),
        ("GetDriverInfo", win32more.Graphics.DirectDraw.LPDDHAL_GETDRIVERINFO),
        ("dwModeIndex", UInt32),
        ("lpdwFourCC", POINTER(UInt32)),
        ("dwNumModes", UInt32),
        ("lpModeInfo", POINTER(win32more.Graphics.DirectDraw.DDHALMODEINFO_head)),
        ("dwFlags", UInt32),
        ("lpPDevice", c_void_p),
        ("hInstance", UInt32),
        ("lpD3DGlobalDriverData", UIntPtr),
        ("lpD3DHALCallbacks", UIntPtr),
        ("lpDDExeBufCallbacks", POINTER(win32more.Graphics.DirectDraw.DDHAL_DDEXEBUFCALLBACKS_head)),
    ]
    return DDHALINFO
def _define_LPDDHAL_SETINFO():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Graphics.DirectDraw.DDHALINFO_head),win32more.Foundation.BOOL, use_last_error=False)
def _define_LPDDHAL_VIDMEMALLOC():
    return CFUNCTYPE(UIntPtr,POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head),Int32,UInt32,UInt32, use_last_error=False)
def _define_LPDDHAL_VIDMEMFREE():
    return CFUNCTYPE(Void,POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head),Int32,UIntPtr, use_last_error=False)
def _define_DDHALDDRAWFNS_head():
    class DDHALDDRAWFNS(Structure):
        pass
    return DDHALDDRAWFNS
def _define_DDHALDDRAWFNS():
    DDHALDDRAWFNS = win32more.Graphics.DirectDraw.DDHALDDRAWFNS_head
    DDHALDDRAWFNS._fields_ = [
        ("dwSize", UInt32),
        ("lpSetInfo", win32more.Graphics.DirectDraw.LPDDHAL_SETINFO),
        ("lpVidMemAlloc", win32more.Graphics.DirectDraw.LPDDHAL_VIDMEMALLOC),
        ("lpVidMemFree", win32more.Graphics.DirectDraw.LPDDHAL_VIDMEMFREE),
    ]
    return DDHALDDRAWFNS
def _define_DDHAL_BLTDATA_head():
    class DDHAL_BLTDATA(Structure):
        pass
    return DDHAL_BLTDATA
def _define_DDHAL_BLTDATA():
    DDHAL_BLTDATA = win32more.Graphics.DirectDraw.DDHAL_BLTDATA_head
    DDHAL_BLTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDDestSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("rDest", win32more.Foundation.RECTL),
        ("lpDDSrcSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("rSrc", win32more.Foundation.RECTL),
        ("dwFlags", UInt32),
        ("dwROPFlags", UInt32),
        ("bltFX", win32more.Graphics.DirectDraw.DDBLTFX),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Blt", win32more.Graphics.DirectDraw.LPDDHALSURFCB_BLT),
        ("IsClipped", win32more.Foundation.BOOL),
        ("rOrigDest", win32more.Foundation.RECTL),
        ("rOrigSrc", win32more.Foundation.RECTL),
        ("dwRectCnt", UInt32),
        ("prDestRects", POINTER(win32more.Foundation.RECT_head)),
    ]
    return DDHAL_BLTDATA
def _define_DDHAL_LOCKDATA_head():
    class DDHAL_LOCKDATA(Structure):
        pass
    return DDHAL_LOCKDATA
def _define_DDHAL_LOCKDATA():
    DDHAL_LOCKDATA = win32more.Graphics.DirectDraw.DDHAL_LOCKDATA_head
    DDHAL_LOCKDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("bHasRect", UInt32),
        ("rArea", win32more.Foundation.RECTL),
        ("lpSurfData", c_void_p),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Lock", win32more.Graphics.DirectDraw.LPDDHALSURFCB_LOCK),
        ("dwFlags", UInt32),
    ]
    return DDHAL_LOCKDATA
def _define_DDHAL_UNLOCKDATA_head():
    class DDHAL_UNLOCKDATA(Structure):
        pass
    return DDHAL_UNLOCKDATA
def _define_DDHAL_UNLOCKDATA():
    DDHAL_UNLOCKDATA = win32more.Graphics.DirectDraw.DDHAL_UNLOCKDATA_head
    DDHAL_UNLOCKDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Unlock", win32more.Graphics.DirectDraw.LPDDHALSURFCB_UNLOCK),
    ]
    return DDHAL_UNLOCKDATA
def _define_DDHAL_UPDATEOVERLAYDATA_head():
    class DDHAL_UPDATEOVERLAYDATA(Structure):
        pass
    return DDHAL_UPDATEOVERLAYDATA
def _define_DDHAL_UPDATEOVERLAYDATA():
    DDHAL_UPDATEOVERLAYDATA = win32more.Graphics.DirectDraw.DDHAL_UPDATEOVERLAYDATA_head
    DDHAL_UPDATEOVERLAYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDDestSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("rDest", win32more.Foundation.RECTL),
        ("lpDDSrcSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("rSrc", win32more.Foundation.RECTL),
        ("dwFlags", UInt32),
        ("overlayFX", win32more.Graphics.DirectDraw.DDOVERLAYFX),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("UpdateOverlay", win32more.Graphics.DirectDraw.LPDDHALSURFCB_UPDATEOVERLAY),
    ]
    return DDHAL_UPDATEOVERLAYDATA
def _define_DDHAL_SETOVERLAYPOSITIONDATA_head():
    class DDHAL_SETOVERLAYPOSITIONDATA(Structure):
        pass
    return DDHAL_SETOVERLAYPOSITIONDATA
def _define_DDHAL_SETOVERLAYPOSITIONDATA():
    DDHAL_SETOVERLAYPOSITIONDATA = win32more.Graphics.DirectDraw.DDHAL_SETOVERLAYPOSITIONDATA_head
    DDHAL_SETOVERLAYPOSITIONDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSrcSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpDDDestSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lXPos", Int32),
        ("lYPos", Int32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetOverlayPosition", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETOVERLAYPOSITION),
    ]
    return DDHAL_SETOVERLAYPOSITIONDATA
def _define_DDHAL_SETPALETTEDATA_head():
    class DDHAL_SETPALETTEDATA(Structure):
        pass
    return DDHAL_SETPALETTEDATA
def _define_DDHAL_SETPALETTEDATA():
    DDHAL_SETPALETTEDATA = win32more.Graphics.DirectDraw.DDHAL_SETPALETTEDATA_head
    DDHAL_SETPALETTEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_GBL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetPalette", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETPALETTE),
        ("Attach", win32more.Foundation.BOOL),
    ]
    return DDHAL_SETPALETTEDATA
def _define_DDHAL_FLIPDATA_head():
    class DDHAL_FLIPDATA(Structure):
        pass
    return DDHAL_FLIPDATA
def _define_DDHAL_FLIPDATA():
    DDHAL_FLIPDATA = win32more.Graphics.DirectDraw.DDHAL_FLIPDATA_head
    DDHAL_FLIPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpSurfCurr", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpSurfTarg", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Flip", win32more.Graphics.DirectDraw.LPDDHALSURFCB_FLIP),
        ("lpSurfCurrLeft", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpSurfTargLeft", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
    ]
    return DDHAL_FLIPDATA
def _define_DDHAL_DESTROYSURFACEDATA_head():
    class DDHAL_DESTROYSURFACEDATA(Structure):
        pass
    return DDHAL_DESTROYSURFACEDATA
def _define_DDHAL_DESTROYSURFACEDATA():
    DDHAL_DESTROYSURFACEDATA = win32more.Graphics.DirectDraw.DDHAL_DESTROYSURFACEDATA_head
    DDHAL_DESTROYSURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroySurface", win32more.Graphics.DirectDraw.LPDDHALSURFCB_DESTROYSURFACE),
    ]
    return DDHAL_DESTROYSURFACEDATA
def _define_DDHAL_SETCLIPLISTDATA_head():
    class DDHAL_SETCLIPLISTDATA(Structure):
        pass
    return DDHAL_SETCLIPLISTDATA
def _define_DDHAL_SETCLIPLISTDATA():
    DDHAL_SETCLIPLISTDATA = win32more.Graphics.DirectDraw.DDHAL_SETCLIPLISTDATA_head
    DDHAL_SETCLIPLISTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetClipList", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETCLIPLIST),
    ]
    return DDHAL_SETCLIPLISTDATA
def _define_DDHAL_ADDATTACHEDSURFACEDATA_head():
    class DDHAL_ADDATTACHEDSURFACEDATA(Structure):
        pass
    return DDHAL_ADDATTACHEDSURFACEDATA
def _define_DDHAL_ADDATTACHEDSURFACEDATA():
    DDHAL_ADDATTACHEDSURFACEDATA = win32more.Graphics.DirectDraw.DDHAL_ADDATTACHEDSURFACEDATA_head
    DDHAL_ADDATTACHEDSURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpSurfAttached", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("AddAttachedSurface", win32more.Graphics.DirectDraw.LPDDHALSURFCB_ADDATTACHEDSURFACE),
    ]
    return DDHAL_ADDATTACHEDSURFACEDATA
def _define_DDHAL_SETCOLORKEYDATA_head():
    class DDHAL_SETCOLORKEYDATA(Structure):
        pass
    return DDHAL_SETCOLORKEYDATA
def _define_DDHAL_SETCOLORKEYDATA():
    DDHAL_SETCOLORKEYDATA = win32more.Graphics.DirectDraw.DDHAL_SETCOLORKEYDATA_head
    DDHAL_SETCOLORKEYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwFlags", UInt32),
        ("ckNew", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetColorKey", win32more.Graphics.DirectDraw.LPDDHALSURFCB_SETCOLORKEY),
    ]
    return DDHAL_SETCOLORKEYDATA
def _define_DDHAL_GETBLTSTATUSDATA_head():
    class DDHAL_GETBLTSTATUSDATA(Structure):
        pass
    return DDHAL_GETBLTSTATUSDATA
def _define_DDHAL_GETBLTSTATUSDATA():
    DDHAL_GETBLTSTATUSDATA = win32more.Graphics.DirectDraw.DDHAL_GETBLTSTATUSDATA_head
    DDHAL_GETBLTSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetBltStatus", win32more.Graphics.DirectDraw.LPDDHALSURFCB_GETBLTSTATUS),
    ]
    return DDHAL_GETBLTSTATUSDATA
def _define_DDHAL_GETFLIPSTATUSDATA_head():
    class DDHAL_GETFLIPSTATUSDATA(Structure):
        pass
    return DDHAL_GETFLIPSTATUSDATA
def _define_DDHAL_GETFLIPSTATUSDATA():
    DDHAL_GETFLIPSTATUSDATA = win32more.Graphics.DirectDraw.DDHAL_GETFLIPSTATUSDATA_head
    DDHAL_GETFLIPSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetFlipStatus", win32more.Graphics.DirectDraw.LPDDHALSURFCB_GETFLIPSTATUS),
    ]
    return DDHAL_GETFLIPSTATUSDATA
def _define_DDHAL_DESTROYPALETTEDATA_head():
    class DDHAL_DESTROYPALETTEDATA(Structure):
        pass
    return DDHAL_DESTROYPALETTEDATA
def _define_DDHAL_DESTROYPALETTEDATA():
    DDHAL_DESTROYPALETTEDATA = win32more.Graphics.DirectDraw.DDHAL_DESTROYPALETTEDATA_head
    DDHAL_DESTROYPALETTEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_GBL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroyPalette", win32more.Graphics.DirectDraw.LPDDHALPALCB_DESTROYPALETTE),
    ]
    return DDHAL_DESTROYPALETTEDATA
def _define_DDHAL_SETENTRIESDATA_head():
    class DDHAL_SETENTRIESDATA(Structure):
        pass
    return DDHAL_SETENTRIESDATA
def _define_DDHAL_SETENTRIESDATA():
    DDHAL_SETENTRIESDATA = win32more.Graphics.DirectDraw.DDHAL_SETENTRIESDATA_head
    DDHAL_SETENTRIESDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_GBL_head)),
        ("dwBase", UInt32),
        ("dwNumEntries", UInt32),
        ("lpEntries", POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetEntries", win32more.Graphics.DirectDraw.LPDDHALPALCB_SETENTRIES),
    ]
    return DDHAL_SETENTRIESDATA
def _define_DDHAL_CREATESURFACEDATA_head():
    class DDHAL_CREATESURFACEDATA(Structure):
        pass
    return DDHAL_CREATESURFACEDATA
def _define_DDHAL_CREATESURFACEDATA():
    DDHAL_CREATESURFACEDATA = win32more.Graphics.DirectDraw.DDHAL_CREATESURFACEDATA_head
    DDHAL_CREATESURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurfaceDesc", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head)),
        ("lplpSList", POINTER(POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head))),
        ("dwSCnt", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CreateSurface", win32more.Graphics.DirectDraw.LPDDHAL_CREATESURFACE),
    ]
    return DDHAL_CREATESURFACEDATA
def _define_DDHAL_CANCREATESURFACEDATA_head():
    class DDHAL_CANCREATESURFACEDATA(Structure):
        pass
    return DDHAL_CANCREATESURFACEDATA
def _define_DDHAL_CANCREATESURFACEDATA():
    DDHAL_CANCREATESURFACEDATA = win32more.Graphics.DirectDraw.DDHAL_CANCREATESURFACEDATA_head
    DDHAL_CANCREATESURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurfaceDesc", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head)),
        ("bIsDifferentPixelFormat", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CanCreateSurface", win32more.Graphics.DirectDraw.LPDDHAL_CANCREATESURFACE),
    ]
    return DDHAL_CANCREATESURFACEDATA
def _define_DDHAL_CREATEPALETTEDATA_head():
    class DDHAL_CREATEPALETTEDATA(Structure):
        pass
    return DDHAL_CREATEPALETTEDATA
def _define_DDHAL_CREATEPALETTEDATA():
    DDHAL_CREATEPALETTEDATA = win32more.Graphics.DirectDraw.DDHAL_CREATEPALETTEDATA_head
    DDHAL_CREATEPALETTEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWPALETTE_GBL_head)),
        ("lpColorTable", POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CreatePalette", win32more.Graphics.DirectDraw.LPDDHAL_CREATEPALETTE),
        ("is_excl", win32more.Foundation.BOOL),
    ]
    return DDHAL_CREATEPALETTEDATA
def _define_DDHAL_WAITFORVERTICALBLANKDATA_head():
    class DDHAL_WAITFORVERTICALBLANKDATA(Structure):
        pass
    return DDHAL_WAITFORVERTICALBLANKDATA
def _define_DDHAL_WAITFORVERTICALBLANKDATA():
    DDHAL_WAITFORVERTICALBLANKDATA = win32more.Graphics.DirectDraw.DDHAL_WAITFORVERTICALBLANKDATA_head
    DDHAL_WAITFORVERTICALBLANKDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwFlags", UInt32),
        ("bIsInVB", UInt32),
        ("hEvent", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("WaitForVerticalBlank", win32more.Graphics.DirectDraw.LPDDHAL_WAITFORVERTICALBLANK),
    ]
    return DDHAL_WAITFORVERTICALBLANKDATA
def _define_DDHAL_DESTROYDRIVERDATA_head():
    class DDHAL_DESTROYDRIVERDATA(Structure):
        pass
    return DDHAL_DESTROYDRIVERDATA
def _define_DDHAL_DESTROYDRIVERDATA():
    DDHAL_DESTROYDRIVERDATA = win32more.Graphics.DirectDraw.DDHAL_DESTROYDRIVERDATA_head
    DDHAL_DESTROYDRIVERDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroyDriver", win32more.Graphics.DirectDraw.LPDDHAL_DESTROYDRIVER),
    ]
    return DDHAL_DESTROYDRIVERDATA
def _define_DDHAL_SETMODEDATA_head():
    class DDHAL_SETMODEDATA(Structure):
        pass
    return DDHAL_SETMODEDATA
def _define_DDHAL_SETMODEDATA():
    DDHAL_SETMODEDATA = win32more.Graphics.DirectDraw.DDHAL_SETMODEDATA_head
    DDHAL_SETMODEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwModeIndex", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetMode", win32more.Graphics.DirectDraw.LPDDHAL_SETMODE),
        ("inexcl", win32more.Foundation.BOOL),
        ("useRefreshRate", win32more.Foundation.BOOL),
    ]
    return DDHAL_SETMODEDATA
def _define_DDHAL_DRVSETCOLORKEYDATA_head():
    class DDHAL_DRVSETCOLORKEYDATA(Structure):
        pass
    return DDHAL_DRVSETCOLORKEYDATA
def _define_DDHAL_DRVSETCOLORKEYDATA():
    DDHAL_DRVSETCOLORKEYDATA = win32more.Graphics.DirectDraw.DDHAL_DRVSETCOLORKEYDATA_head
    DDHAL_DRVSETCOLORKEYDATA._fields_ = [
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwFlags", UInt32),
        ("ckNew", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetColorKey", win32more.Graphics.DirectDraw.LPDDHAL_SETCOLORKEY),
    ]
    return DDHAL_DRVSETCOLORKEYDATA
def _define_DDHAL_GETSCANLINEDATA_head():
    class DDHAL_GETSCANLINEDATA(Structure):
        pass
    return DDHAL_GETSCANLINEDATA
def _define_DDHAL_GETSCANLINEDATA():
    DDHAL_GETSCANLINEDATA = win32more.Graphics.DirectDraw.DDHAL_GETSCANLINEDATA_head
    DDHAL_GETSCANLINEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwScanLine", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetScanLine", win32more.Graphics.DirectDraw.LPDDHAL_GETSCANLINE),
    ]
    return DDHAL_GETSCANLINEDATA
def _define_DDHAL_SETEXCLUSIVEMODEDATA_head():
    class DDHAL_SETEXCLUSIVEMODEDATA(Structure):
        pass
    return DDHAL_SETEXCLUSIVEMODEDATA
def _define_DDHAL_SETEXCLUSIVEMODEDATA():
    DDHAL_SETEXCLUSIVEMODEDATA = win32more.Graphics.DirectDraw.DDHAL_SETEXCLUSIVEMODEDATA_head
    DDHAL_SETEXCLUSIVEMODEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwEnterExcl", UInt32),
        ("dwReserved", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetExclusiveMode", win32more.Graphics.DirectDraw.LPDDHAL_SETEXCLUSIVEMODE),
    ]
    return DDHAL_SETEXCLUSIVEMODEDATA
def _define_DDHAL_FLIPTOGDISURFACEDATA_head():
    class DDHAL_FLIPTOGDISURFACEDATA(Structure):
        pass
    return DDHAL_FLIPTOGDISURFACEDATA
def _define_DDHAL_FLIPTOGDISURFACEDATA():
    DDHAL_FLIPTOGDISURFACEDATA = win32more.Graphics.DirectDraw.DDHAL_FLIPTOGDISURFACEDATA_head
    DDHAL_FLIPTOGDISURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwToGDI", UInt32),
        ("dwReserved", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("FlipToGDISurface", win32more.Graphics.DirectDraw.LPDDHAL_FLIPTOGDISURFACE),
    ]
    return DDHAL_FLIPTOGDISURFACEDATA
def _define_DDHAL_CANCREATEVPORTDATA_head():
    class DDHAL_CANCREATEVPORTDATA(Structure):
        pass
    return DDHAL_CANCREATEVPORTDATA
def _define_DDHAL_CANCREATEVPORTDATA():
    DDHAL_CANCREATEVPORTDATA = win32more.Graphics.DirectDraw.DDHAL_CANCREATEVPORTDATA_head
    DDHAL_CANCREATEVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpDDVideoPortDesc", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CanCreateVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_CANCREATEVIDEOPORT),
    ]
    return DDHAL_CANCREATEVPORTDATA
def _define_DDHAL_CREATEVPORTDATA_head():
    class DDHAL_CREATEVPORTDATA(Structure):
        pass
    return DDHAL_CREATEVPORTDATA
def _define_DDHAL_CREATEVPORTDATA():
    DDHAL_CREATEVPORTDATA = win32more.Graphics.DirectDraw.DDHAL_CREATEVPORTDATA_head
    DDHAL_CREATEVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpDDVideoPortDesc", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CreateVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_CREATEVIDEOPORT),
    ]
    return DDHAL_CREATEVPORTDATA
def _define_DDHAL_FLIPVPORTDATA_head():
    class DDHAL_FLIPVPORTDATA(Structure):
        pass
    return DDHAL_FLIPVPORTDATA
def _define_DDHAL_FLIPVPORTDATA():
    DDHAL_FLIPVPORTDATA = win32more.Graphics.DirectDraw.DDHAL_FLIPVPORTDATA_head
    DDHAL_FLIPVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("lpSurfCurr", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpSurfTarg", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("FlipVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_FLIP),
    ]
    return DDHAL_FLIPVPORTDATA
def _define_DDHAL_GETVPORTBANDWIDTHDATA_head():
    class DDHAL_GETVPORTBANDWIDTHDATA(Structure):
        pass
    return DDHAL_GETVPORTBANDWIDTHDATA
def _define_DDHAL_GETVPORTBANDWIDTHDATA():
    DDHAL_GETVPORTBANDWIDTHDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTBANDWIDTHDATA_head
    DDHAL_GETVPORTBANDWIDTHDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("lpddpfFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("dwFlags", UInt32),
        ("lpBandwidth", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTBANDWIDTH_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortBandwidth", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETBANDWIDTH),
    ]
    return DDHAL_GETVPORTBANDWIDTHDATA
def _define_DDHAL_GETVPORTINPUTFORMATDATA_head():
    class DDHAL_GETVPORTINPUTFORMATDATA(Structure):
        pass
    return DDHAL_GETVPORTINPUTFORMATDATA
def _define_DDHAL_GETVPORTINPUTFORMATDATA():
    DDHAL_GETVPORTINPUTFORMATDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTINPUTFORMATDATA_head
    DDHAL_GETVPORTINPUTFORMATDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("dwFlags", UInt32),
        ("lpddpfFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("dwNumFormats", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortInputFormats", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETINPUTFORMATS),
    ]
    return DDHAL_GETVPORTINPUTFORMATDATA
def _define_DDHAL_GETVPORTOUTPUTFORMATDATA_head():
    class DDHAL_GETVPORTOUTPUTFORMATDATA(Structure):
        pass
    return DDHAL_GETVPORTOUTPUTFORMATDATA
def _define_DDHAL_GETVPORTOUTPUTFORMATDATA():
    DDHAL_GETVPORTOUTPUTFORMATDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTOUTPUTFORMATDATA_head
    DDHAL_GETVPORTOUTPUTFORMATDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("dwFlags", UInt32),
        ("lpddpfInputFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("lpddpfOutputFormats", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("dwNumFormats", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortOutputFormats", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETOUTPUTFORMATS),
    ]
    return DDHAL_GETVPORTOUTPUTFORMATDATA
def _define_DDHAL_GETVPORTFIELDDATA_head():
    class DDHAL_GETVPORTFIELDDATA(Structure):
        pass
    return DDHAL_GETVPORTFIELDDATA
def _define_DDHAL_GETVPORTFIELDDATA():
    DDHAL_GETVPORTFIELDDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTFIELDDATA_head
    DDHAL_GETVPORTFIELDDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("bField", win32more.Foundation.BOOL),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortField", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETFIELD),
    ]
    return DDHAL_GETVPORTFIELDDATA
def _define_DDHAL_GETVPORTLINEDATA_head():
    class DDHAL_GETVPORTLINEDATA(Structure):
        pass
    return DDHAL_GETVPORTLINEDATA
def _define_DDHAL_GETVPORTLINEDATA():
    DDHAL_GETVPORTLINEDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTLINEDATA_head
    DDHAL_GETVPORTLINEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("dwLine", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortLine", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETLINE),
    ]
    return DDHAL_GETVPORTLINEDATA
def _define_DDHAL_GETVPORTCONNECTDATA_head():
    class DDHAL_GETVPORTCONNECTDATA(Structure):
        pass
    return DDHAL_GETVPORTCONNECTDATA
def _define_DDHAL_GETVPORTCONNECTDATA():
    DDHAL_GETVPORTCONNECTDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTCONNECTDATA_head
    DDHAL_GETVPORTCONNECTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("dwPortId", UInt32),
        ("lpConnect", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTCONNECT_head)),
        ("dwNumEntries", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortConnectInfo", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETVPORTCONNECT),
    ]
    return DDHAL_GETVPORTCONNECTDATA
def _define_DDHAL_DESTROYVPORTDATA_head():
    class DDHAL_DESTROYVPORTDATA(Structure):
        pass
    return DDHAL_DESTROYVPORTDATA
def _define_DDHAL_DESTROYVPORTDATA():
    DDHAL_DESTROYVPORTDATA = win32more.Graphics.DirectDraw.DDHAL_DESTROYVPORTDATA_head
    DDHAL_DESTROYVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroyVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_DESTROYVPORT),
    ]
    return DDHAL_DESTROYVPORTDATA
def _define_DDHAL_GETVPORTFLIPSTATUSDATA_head():
    class DDHAL_GETVPORTFLIPSTATUSDATA(Structure):
        pass
    return DDHAL_GETVPORTFLIPSTATUSDATA
def _define_DDHAL_GETVPORTFLIPSTATUSDATA():
    DDHAL_GETVPORTFLIPSTATUSDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTFLIPSTATUSDATA_head
    DDHAL_GETVPORTFLIPSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("fpSurface", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortFlipStatus", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETFLIPSTATUS),
    ]
    return DDHAL_GETVPORTFLIPSTATUSDATA
def _define_DDHAL_UPDATEVPORTDATA_head():
    class DDHAL_UPDATEVPORTDATA(Structure):
        pass
    return DDHAL_UPDATEVPORTDATA
def _define_DDHAL_UPDATEVPORTDATA():
    DDHAL_UPDATEVPORTDATA = win32more.Graphics.DirectDraw.DDHAL_UPDATEVPORTDATA_head
    DDHAL_UPDATEVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("lplpDDSurface", POINTER(POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head))),
        ("lplpDDVBISurface", POINTER(POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_INT_head))),
        ("lpVideoInfo", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTINFO_head)),
        ("dwFlags", UInt32),
        ("dwNumAutoflip", UInt32),
        ("dwNumVBIAutoflip", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("UpdateVideoPort", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_UPDATE),
    ]
    return DDHAL_UPDATEVPORTDATA
def _define_DDHAL_WAITFORVPORTSYNCDATA_head():
    class DDHAL_WAITFORVPORTSYNCDATA(Structure):
        pass
    return DDHAL_WAITFORVPORTSYNCDATA
def _define_DDHAL_WAITFORVPORTSYNCDATA():
    DDHAL_WAITFORVPORTSYNCDATA = win32more.Graphics.DirectDraw.DDHAL_WAITFORVPORTSYNCDATA_head
    DDHAL_WAITFORVPORTSYNCDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("dwFlags", UInt32),
        ("dwLine", UInt32),
        ("dwTimeOut", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("WaitForVideoPortSync", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_WAITFORSYNC),
    ]
    return DDHAL_WAITFORVPORTSYNCDATA
def _define_DDHAL_GETVPORTSIGNALDATA_head():
    class DDHAL_GETVPORTSIGNALDATA(Structure):
        pass
    return DDHAL_GETVPORTSIGNALDATA
def _define_DDHAL_GETVPORTSIGNALDATA():
    DDHAL_GETVPORTSIGNALDATA = win32more.Graphics.DirectDraw.DDHAL_GETVPORTSIGNALDATA_head
    DDHAL_GETVPORTSIGNALDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("dwStatus", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoSignalStatus", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_GETSIGNALSTATUS),
    ]
    return DDHAL_GETVPORTSIGNALDATA
def _define_DDHAL_VPORTCOLORDATA_head():
    class DDHAL_VPORTCOLORDATA(Structure):
        pass
    return DDHAL_VPORTCOLORDATA
def _define_DDHAL_VPORTCOLORDATA():
    DDHAL_VPORTCOLORDATA = win32more.Graphics.DirectDraw.DDHAL_VPORTCOLORDATA_head
    DDHAL_VPORTCOLORDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("dwFlags", UInt32),
        ("lpColorData", POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("ColorControl", win32more.Graphics.DirectDraw.LPDDHALVPORTCB_COLORCONTROL),
    ]
    return DDHAL_VPORTCOLORDATA
def _define_DDHAL_COLORCONTROLDATA_head():
    class DDHAL_COLORCONTROLDATA(Structure):
        pass
    return DDHAL_COLORCONTROLDATA
def _define_DDHAL_COLORCONTROLDATA():
    DDHAL_COLORCONTROLDATA = win32more.Graphics.DirectDraw.DDHAL_COLORCONTROLDATA_head
    DDHAL_COLORCONTROLDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("lpColorData", POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("ColorControl", win32more.Graphics.DirectDraw.LPDDHALCOLORCB_COLORCONTROL),
    ]
    return DDHAL_COLORCONTROLDATA
def _define_DDHAL_GETDRIVERINFODATA_head():
    class DDHAL_GETDRIVERINFODATA(Structure):
        pass
    return DDHAL_GETDRIVERINFODATA
def _define_DDHAL_GETDRIVERINFODATA():
    DDHAL_GETDRIVERINFODATA = win32more.Graphics.DirectDraw.DDHAL_GETDRIVERINFODATA_head
    DDHAL_GETDRIVERINFODATA._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("guidInfo", Guid),
        ("dwExpectedSize", UInt32),
        ("lpvData", c_void_p),
        ("dwActualSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("dwContext", UIntPtr),
    ]
    return DDHAL_GETDRIVERINFODATA
def _define_DDHAL_GETAVAILDRIVERMEMORYDATA_head():
    class DDHAL_GETAVAILDRIVERMEMORYDATA(Structure):
        pass
    return DDHAL_GETAVAILDRIVERMEMORYDATA
def _define_DDHAL_GETAVAILDRIVERMEMORYDATA():
    DDHAL_GETAVAILDRIVERMEMORYDATA = win32more.Graphics.DirectDraw.DDHAL_GETAVAILDRIVERMEMORYDATA_head
    DDHAL_GETAVAILDRIVERMEMORYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("DDSCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwTotal", UInt32),
        ("dwFree", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetAvailDriverMemory", win32more.Graphics.DirectDraw.LPDDHAL_GETAVAILDRIVERMEMORY),
        ("ddsCapsEx", win32more.Graphics.DirectDraw.DDSCAPSEX),
    ]
    return DDHAL_GETAVAILDRIVERMEMORYDATA
def _define_DDHAL_UPDATENONLOCALHEAPDATA_head():
    class DDHAL_UPDATENONLOCALHEAPDATA(Structure):
        pass
    return DDHAL_UPDATENONLOCALHEAPDATA
def _define_DDHAL_UPDATENONLOCALHEAPDATA():
    DDHAL_UPDATENONLOCALHEAPDATA = win32more.Graphics.DirectDraw.DDHAL_UPDATENONLOCALHEAPDATA_head
    DDHAL_UPDATENONLOCALHEAPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_GBL_head)),
        ("dwHeap", UInt32),
        ("fpGARTLin", UIntPtr),
        ("fpGARTDev", UIntPtr),
        ("ulPolicyMaxBytes", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("UpdateNonLocalHeap", win32more.Graphics.DirectDraw.LPDDHAL_UPDATENONLOCALHEAP),
    ]
    return DDHAL_UPDATENONLOCALHEAPDATA
def _define_DDHAL_GETHEAPALIGNMENTDATA_head():
    class DDHAL_GETHEAPALIGNMENTDATA(Structure):
        pass
    return DDHAL_GETHEAPALIGNMENTDATA
def _define_DDHAL_GETHEAPALIGNMENTDATA():
    DDHAL_GETHEAPALIGNMENTDATA = win32more.Graphics.DirectDraw.DDHAL_GETHEAPALIGNMENTDATA_head
    DDHAL_GETHEAPALIGNMENTDATA._fields_ = [
        ("dwInstance", UIntPtr),
        ("dwHeap", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetHeapAlignment", win32more.Graphics.DirectDraw.LPDDHAL_GETHEAPALIGNMENT),
        ("Alignment", win32more.Graphics.DirectDraw.HEAPALIGNMENT),
    ]
    return DDHAL_GETHEAPALIGNMENTDATA
def _define_DDHAL_CREATESURFACEEXDATA_head():
    class DDHAL_CREATESURFACEEXDATA(Structure):
        pass
    return DDHAL_CREATESURFACEEXDATA
def _define_DDHAL_CREATESURFACEEXDATA():
    DDHAL_CREATESURFACEEXDATA = win32more.Graphics.DirectDraw.DDHAL_CREATESURFACEEXDATA_head
    DDHAL_CREATESURFACEEXDATA._fields_ = [
        ("dwFlags", UInt32),
        ("lpDDLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpDDSLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DDHAL_CREATESURFACEEXDATA
def _define_DDHAL_GETDRIVERSTATEDATA_head():
    class DDHAL_GETDRIVERSTATEDATA(Structure):
        pass
    return DDHAL_GETDRIVERSTATEDATA
def _define_DDHAL_GETDRIVERSTATEDATA():
    DDHAL_GETDRIVERSTATEDATA = win32more.Graphics.DirectDraw.DDHAL_GETDRIVERSTATEDATA_head
    class DDHAL_GETDRIVERSTATEDATA__Anonymous_e__Union(Union):
        pass
    DDHAL_GETDRIVERSTATEDATA__Anonymous_e__Union._fields_ = [
        ("dwhContext", UIntPtr),
    ]
    DDHAL_GETDRIVERSTATEDATA._anonymous_ = [
        'Anonymous',
    ]
    DDHAL_GETDRIVERSTATEDATA._fields_ = [
        ("dwFlags", UInt32),
        ("Anonymous", DDHAL_GETDRIVERSTATEDATA__Anonymous_e__Union),
        ("lpdwStates", POINTER(UInt32)),
        ("dwLength", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DDHAL_GETDRIVERSTATEDATA
def _define_DDHAL_DESTROYDDLOCALDATA_head():
    class DDHAL_DESTROYDDLOCALDATA(Structure):
        pass
    return DDHAL_DESTROYDDLOCALDATA
def _define_DDHAL_DESTROYDDLOCALDATA():
    DDHAL_DESTROYDDLOCALDATA = win32more.Graphics.DirectDraw.DDHAL_DESTROYDDLOCALDATA_head
    DDHAL_DESTROYDDLOCALDATA._fields_ = [
        ("dwFlags", UInt32),
        ("pDDLcl", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DDHAL_DESTROYDDLOCALDATA
def _define_DDHAL_SYNCSURFACEDATA_head():
    class DDHAL_SYNCSURFACEDATA(Structure):
        pass
    return DDHAL_SYNCSURFACEDATA
def _define_DDHAL_SYNCSURFACEDATA():
    DDHAL_SYNCSURFACEDATA = win32more.Graphics.DirectDraw.DDHAL_SYNCSURFACEDATA_head
    DDHAL_SYNCSURFACEDATA._fields_ = [
        ("dwSize", UInt32),
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwSurfaceOffset", UInt32),
        ("fpLockPtr", UIntPtr),
        ("lPitch", Int32),
        ("dwOverlayOffset", UInt32),
        ("dwOverlaySrcWidth", UInt32),
        ("dwOverlaySrcHeight", UInt32),
        ("dwOverlayDestWidth", UInt32),
        ("dwOverlayDestHeight", UInt32),
        ("dwDriverReserved1", UIntPtr),
        ("dwDriverReserved2", UIntPtr),
        ("dwDriverReserved3", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DDHAL_SYNCSURFACEDATA
def _define_DDHAL_SYNCVIDEOPORTDATA_head():
    class DDHAL_SYNCVIDEOPORTDATA(Structure):
        pass
    return DDHAL_SYNCVIDEOPORTDATA
def _define_DDHAL_SYNCVIDEOPORTDATA():
    DDHAL_SYNCVIDEOPORTDATA = win32more.Graphics.DirectDraw.DDHAL_SYNCVIDEOPORTDATA_head
    DDHAL_SYNCVIDEOPORTDATA._fields_ = [
        ("dwSize", UInt32),
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDVIDEOPORT_LCL_head)),
        ("dwOriginOffset", UInt32),
        ("dwHeight", UInt32),
        ("dwVBIHeight", UInt32),
        ("dwDriverReserved1", UIntPtr),
        ("dwDriverReserved2", UIntPtr),
        ("dwDriverReserved3", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DDHAL_SYNCVIDEOPORTDATA
def _define_DDHAL_GETMOCOMPGUIDSDATA_head():
    class DDHAL_GETMOCOMPGUIDSDATA(Structure):
        pass
    return DDHAL_GETMOCOMPGUIDSDATA
def _define_DDHAL_GETMOCOMPGUIDSDATA():
    DDHAL_GETMOCOMPGUIDSDATA = win32more.Graphics.DirectDraw.DDHAL_GETMOCOMPGUIDSDATA_head
    DDHAL_GETMOCOMPGUIDSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("dwNumGuids", UInt32),
        ("lpGuids", POINTER(Guid)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetMoCompGuids", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETGUIDS),
    ]
    return DDHAL_GETMOCOMPGUIDSDATA
def _define_DDHAL_GETMOCOMPFORMATSDATA_head():
    class DDHAL_GETMOCOMPFORMATSDATA(Structure):
        pass
    return DDHAL_GETMOCOMPFORMATSDATA
def _define_DDHAL_GETMOCOMPFORMATSDATA():
    DDHAL_GETMOCOMPFORMATSDATA = win32more.Graphics.DirectDraw.DDHAL_GETMOCOMPFORMATSDATA_head
    DDHAL_GETMOCOMPFORMATSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwNumFormats", UInt32),
        ("lpFormats", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetMoCompFormats", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETFORMATS),
    ]
    return DDHAL_GETMOCOMPFORMATSDATA
def _define_DDHAL_CREATEMOCOMPDATA_head():
    class DDHAL_CREATEMOCOMPDATA(Structure):
        pass
    return DDHAL_CREATEMOCOMPDATA
def _define_DDHAL_CREATEMOCOMPDATA():
    DDHAL_CREATEMOCOMPDATA = win32more.Graphics.DirectDraw.DDHAL_CREATEMOCOMPDATA_head
    DDHAL_CREATEMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwUncompWidth", UInt32),
        ("dwUncompHeight", UInt32),
        ("ddUncompPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("lpData", c_void_p),
        ("dwDataSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CreateMoComp", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_CREATE),
    ]
    return DDHAL_CREATEMOCOMPDATA
def _define_DDMCCOMPBUFFERINFO_head():
    class DDMCCOMPBUFFERINFO(Structure):
        pass
    return DDMCCOMPBUFFERINFO
def _define_DDMCCOMPBUFFERINFO():
    DDMCCOMPBUFFERINFO = win32more.Graphics.DirectDraw.DDMCCOMPBUFFERINFO_head
    DDMCCOMPBUFFERINFO._fields_ = [
        ("dwSize", UInt32),
        ("dwNumCompBuffers", UInt32),
        ("dwWidthToCreate", UInt32),
        ("dwHeightToCreate", UInt32),
        ("dwBytesToAllocate", UInt32),
        ("ddCompCaps", win32more.Graphics.DirectDraw.DDSCAPS2),
        ("ddPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
    ]
    return DDMCCOMPBUFFERINFO
def _define_DDHAL_GETMOCOMPCOMPBUFFDATA_head():
    class DDHAL_GETMOCOMPCOMPBUFFDATA(Structure):
        pass
    return DDHAL_GETMOCOMPCOMPBUFFDATA
def _define_DDHAL_GETMOCOMPCOMPBUFFDATA():
    DDHAL_GETMOCOMPCOMPBUFFDATA = win32more.Graphics.DirectDraw.DDHAL_GETMOCOMPCOMPBUFFDATA_head
    DDHAL_GETMOCOMPCOMPBUFFDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("ddPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwNumTypesCompBuffs", UInt32),
        ("lpCompBuffInfo", POINTER(win32more.Graphics.DirectDraw.DDMCCOMPBUFFERINFO_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetMoCompBuffInfo", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETCOMPBUFFINFO),
    ]
    return DDHAL_GETMOCOMPCOMPBUFFDATA
def _define_DDHAL_GETINTERNALMOCOMPDATA_head():
    class DDHAL_GETINTERNALMOCOMPDATA(Structure):
        pass
    return DDHAL_GETINTERNALMOCOMPDATA
def _define_DDHAL_GETINTERNALMOCOMPDATA():
    DDHAL_GETINTERNALMOCOMPDATA = win32more.Graphics.DirectDraw.DDHAL_GETINTERNALMOCOMPDATA_head
    DDHAL_GETINTERNALMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("ddPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwScratchMemAlloc", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetInternalMoCompInfo", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_GETINTERNALINFO),
    ]
    return DDHAL_GETINTERNALMOCOMPDATA
def _define_DDHAL_BEGINMOCOMPFRAMEDATA_head():
    class DDHAL_BEGINMOCOMPFRAMEDATA(Structure):
        pass
    return DDHAL_BEGINMOCOMPFRAMEDATA
def _define_DDHAL_BEGINMOCOMPFRAMEDATA():
    DDHAL_BEGINMOCOMPFRAMEDATA = win32more.Graphics.DirectDraw.DDHAL_BEGINMOCOMPFRAMEDATA_head
    DDHAL_BEGINMOCOMPFRAMEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head)),
        ("lpDestSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwInputDataSize", UInt32),
        ("lpInputData", c_void_p),
        ("dwOutputDataSize", UInt32),
        ("lpOutputData", c_void_p),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("BeginMoCompFrame", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_BEGINFRAME),
    ]
    return DDHAL_BEGINMOCOMPFRAMEDATA
def _define_DDHAL_ENDMOCOMPFRAMEDATA_head():
    class DDHAL_ENDMOCOMPFRAMEDATA(Structure):
        pass
    return DDHAL_ENDMOCOMPFRAMEDATA
def _define_DDHAL_ENDMOCOMPFRAMEDATA():
    DDHAL_ENDMOCOMPFRAMEDATA = win32more.Graphics.DirectDraw.DDHAL_ENDMOCOMPFRAMEDATA_head
    DDHAL_ENDMOCOMPFRAMEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head)),
        ("lpInputData", c_void_p),
        ("dwInputDataSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("EndMoCompFrame", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_ENDFRAME),
    ]
    return DDHAL_ENDMOCOMPFRAMEDATA
def _define_DDMCBUFFERINFO_head():
    class DDMCBUFFERINFO(Structure):
        pass
    return DDMCBUFFERINFO
def _define_DDMCBUFFERINFO():
    DDMCBUFFERINFO = win32more.Graphics.DirectDraw.DDMCBUFFERINFO_head
    DDMCBUFFERINFO._fields_ = [
        ("dwSize", UInt32),
        ("lpCompSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwDataOffset", UInt32),
        ("dwDataSize", UInt32),
        ("lpPrivate", c_void_p),
    ]
    return DDMCBUFFERINFO
def _define_DDHAL_RENDERMOCOMPDATA_head():
    class DDHAL_RENDERMOCOMPDATA(Structure):
        pass
    return DDHAL_RENDERMOCOMPDATA
def _define_DDHAL_RENDERMOCOMPDATA():
    DDHAL_RENDERMOCOMPDATA = win32more.Graphics.DirectDraw.DDHAL_RENDERMOCOMPDATA_head
    DDHAL_RENDERMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head)),
        ("dwNumBuffers", UInt32),
        ("lpBufferInfo", POINTER(win32more.Graphics.DirectDraw.DDMCBUFFERINFO_head)),
        ("dwFunction", UInt32),
        ("lpInputData", c_void_p),
        ("dwInputDataSize", UInt32),
        ("lpOutputData", c_void_p),
        ("dwOutputDataSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("RenderMoComp", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_RENDER),
    ]
    return DDHAL_RENDERMOCOMPDATA
def _define_DDHAL_QUERYMOCOMPSTATUSDATA_head():
    class DDHAL_QUERYMOCOMPSTATUSDATA(Structure):
        pass
    return DDHAL_QUERYMOCOMPSTATUSDATA
def _define_DDHAL_QUERYMOCOMPSTATUSDATA():
    DDHAL_QUERYMOCOMPSTATUSDATA = win32more.Graphics.DirectDraw.DDHAL_QUERYMOCOMPSTATUSDATA_head
    DDHAL_QUERYMOCOMPSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head)),
        ("lpSurface", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDRAWSURFACE_LCL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("QueryMoCompStatus", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_QUERYSTATUS),
    ]
    return DDHAL_QUERYMOCOMPSTATUSDATA
def _define_DDHAL_DESTROYMOCOMPDATA_head():
    class DDHAL_DESTROYMOCOMPDATA(Structure):
        pass
    return DDHAL_DESTROYMOCOMPDATA
def _define_DDHAL_DESTROYMOCOMPDATA():
    DDHAL_DESTROYMOCOMPDATA = win32more.Graphics.DirectDraw.DDHAL_DESTROYMOCOMPDATA_head
    DDHAL_DESTROYMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DIRECTDRAW_LCL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DDRAWI_DDMOTIONCOMP_LCL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroyMoComp", win32more.Graphics.DirectDraw.LPDDHALMOCOMPCB_DESTROY),
    ]
    return DDHAL_DESTROYMOCOMPDATA
def _define__DD_DESTROYDRIVERDATA_head():
    class _DD_DESTROYDRIVERDATA(Structure):
        pass
    return _DD_DESTROYDRIVERDATA
def _define__DD_DESTROYDRIVERDATA():
    _DD_DESTROYDRIVERDATA = win32more.Graphics.DirectDraw._DD_DESTROYDRIVERDATA_head
    return _DD_DESTROYDRIVERDATA
def _define__DD_SETMODEDATA_head():
    class _DD_SETMODEDATA(Structure):
        pass
    return _DD_SETMODEDATA
def _define__DD_SETMODEDATA():
    _DD_SETMODEDATA = win32more.Graphics.DirectDraw._DD_SETMODEDATA_head
    return _DD_SETMODEDATA
def _define__DD_GETVPORTAUTOFLIPSURFACEDATA_head():
    class _DD_GETVPORTAUTOFLIPSURFACEDATA(Structure):
        pass
    return _DD_GETVPORTAUTOFLIPSURFACEDATA
def _define__DD_GETVPORTAUTOFLIPSURFACEDATA():
    _DD_GETVPORTAUTOFLIPSURFACEDATA = win32more.Graphics.DirectDraw._DD_GETVPORTAUTOFLIPSURFACEDATA_head
    return _DD_GETVPORTAUTOFLIPSURFACEDATA
def _define_VIDEOMEMORY_head():
    class VIDEOMEMORY(Structure):
        pass
    return VIDEOMEMORY
def _define_VIDEOMEMORY():
    VIDEOMEMORY = win32more.Graphics.DirectDraw.VIDEOMEMORY_head
    class VIDEOMEMORY__Anonymous1_e__Union(Union):
        pass
    VIDEOMEMORY__Anonymous1_e__Union._fields_ = [
        ("fpEnd", UIntPtr),
        ("dwWidth", UInt32),
    ]
    class VIDEOMEMORY__Anonymous2_e__Union(Union):
        pass
    VIDEOMEMORY__Anonymous2_e__Union._fields_ = [
        ("lpHeap", POINTER(win32more.Graphics.DirectDraw.VMEMHEAP_head)),
        ("dwHeight", UInt32),
    ]
    VIDEOMEMORY._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    VIDEOMEMORY._fields_ = [
        ("dwFlags", UInt32),
        ("fpStart", UIntPtr),
        ("Anonymous1", VIDEOMEMORY__Anonymous1_e__Union),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("ddsCapsAlt", win32more.Graphics.DirectDraw.DDSCAPS),
        ("Anonymous2", VIDEOMEMORY__Anonymous2_e__Union),
    ]
    return VIDEOMEMORY
def _define_VIDEOMEMORYINFO_head():
    class VIDEOMEMORYINFO(Structure):
        pass
    return VIDEOMEMORYINFO
def _define_VIDEOMEMORYINFO():
    VIDEOMEMORYINFO = win32more.Graphics.DirectDraw.VIDEOMEMORYINFO_head
    VIDEOMEMORYINFO._fields_ = [
        ("fpPrimary", UIntPtr),
        ("dwFlags", UInt32),
        ("dwDisplayWidth", UInt32),
        ("dwDisplayHeight", UInt32),
        ("lDisplayPitch", Int32),
        ("ddpfDisplay", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwOffscreenAlign", UInt32),
        ("dwOverlayAlign", UInt32),
        ("dwTextureAlign", UInt32),
        ("dwZBufferAlign", UInt32),
        ("dwAlphaAlign", UInt32),
        ("pvPrimary", c_void_p),
    ]
    return VIDEOMEMORYINFO
def _define_PDD_SETCOLORKEY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_DRVSETCOLORKEYDATA_head), use_last_error=False)
def _define_PDD_CANCREATESURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_CANCREATESURFACEDATA_head), use_last_error=False)
def _define_PDD_WAITFORVERTICALBLANK():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_WAITFORVERTICALBLANKDATA_head), use_last_error=False)
def _define_PDD_CREATESURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_CREATESURFACEDATA_head), use_last_error=False)
def _define_PDD_DESTROYDRIVER():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw._DD_DESTROYDRIVERDATA_head), use_last_error=False)
def _define_PDD_SETMODE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw._DD_SETMODEDATA_head), use_last_error=False)
def _define_PDD_CREATEPALETTE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_CREATEPALETTEDATA_head), use_last_error=False)
def _define_PDD_GETSCANLINE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETSCANLINEDATA_head), use_last_error=False)
def _define_PDD_MAPMEMORY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_MAPMEMORYDATA_head), use_last_error=False)
def _define_PDD_GETDRIVERINFO():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETDRIVERINFODATA_head), use_last_error=False)
def _define_DD_CALLBACKS_head():
    class DD_CALLBACKS(Structure):
        pass
    return DD_CALLBACKS
def _define_DD_CALLBACKS():
    DD_CALLBACKS = win32more.Graphics.DirectDraw.DD_CALLBACKS_head
    DD_CALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("DestroyDriver", win32more.Graphics.DirectDraw.PDD_DESTROYDRIVER),
        ("CreateSurface", win32more.Graphics.DirectDraw.PDD_CREATESURFACE),
        ("SetColorKey", win32more.Graphics.DirectDraw.PDD_SETCOLORKEY),
        ("SetMode", win32more.Graphics.DirectDraw.PDD_SETMODE),
        ("WaitForVerticalBlank", win32more.Graphics.DirectDraw.PDD_WAITFORVERTICALBLANK),
        ("CanCreateSurface", win32more.Graphics.DirectDraw.PDD_CANCREATESURFACE),
        ("CreatePalette", win32more.Graphics.DirectDraw.PDD_CREATEPALETTE),
        ("GetScanLine", win32more.Graphics.DirectDraw.PDD_GETSCANLINE),
        ("MapMemory", win32more.Graphics.DirectDraw.PDD_MAPMEMORY),
    ]
    return DD_CALLBACKS
def _define_PDD_GETAVAILDRIVERMEMORY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETAVAILDRIVERMEMORYDATA_head), use_last_error=False)
def _define_DD_MISCELLANEOUSCALLBACKS_head():
    class DD_MISCELLANEOUSCALLBACKS(Structure):
        pass
    return DD_MISCELLANEOUSCALLBACKS
def _define_DD_MISCELLANEOUSCALLBACKS():
    DD_MISCELLANEOUSCALLBACKS = win32more.Graphics.DirectDraw.DD_MISCELLANEOUSCALLBACKS_head
    DD_MISCELLANEOUSCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("GetAvailDriverMemory", win32more.Graphics.DirectDraw.PDD_GETAVAILDRIVERMEMORY),
    ]
    return DD_MISCELLANEOUSCALLBACKS
def _define_PDD_ALPHABLT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_BLTDATA_head), use_last_error=False)
def _define_PDD_CREATESURFACEEX():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_CREATESURFACEEXDATA_head), use_last_error=False)
def _define_PDD_GETDRIVERSTATE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETDRIVERSTATEDATA_head), use_last_error=False)
def _define_PDD_DESTROYDDLOCAL():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_DESTROYDDLOCALDATA_head), use_last_error=False)
def _define_DD_MISCELLANEOUS2CALLBACKS_head():
    class DD_MISCELLANEOUS2CALLBACKS(Structure):
        pass
    return DD_MISCELLANEOUS2CALLBACKS
def _define_DD_MISCELLANEOUS2CALLBACKS():
    DD_MISCELLANEOUS2CALLBACKS = win32more.Graphics.DirectDraw.DD_MISCELLANEOUS2CALLBACKS_head
    DD_MISCELLANEOUS2CALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("AlphaBlt", win32more.Graphics.DirectDraw.PDD_ALPHABLT),
        ("CreateSurfaceEx", win32more.Graphics.DirectDraw.PDD_CREATESURFACEEX),
        ("GetDriverState", win32more.Graphics.DirectDraw.PDD_GETDRIVERSTATE),
        ("DestroyDDLocal", win32more.Graphics.DirectDraw.PDD_DESTROYDDLOCAL),
    ]
    return DD_MISCELLANEOUS2CALLBACKS
def _define_PDD_FREEDRIVERMEMORY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_FREEDRIVERMEMORYDATA_head), use_last_error=False)
def _define_PDD_SETEXCLUSIVEMODE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SETEXCLUSIVEMODEDATA_head), use_last_error=False)
def _define_PDD_FLIPTOGDISURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_FLIPTOGDISURFACEDATA_head), use_last_error=False)
def _define_DD_NTCALLBACKS_head():
    class DD_NTCALLBACKS(Structure):
        pass
    return DD_NTCALLBACKS
def _define_DD_NTCALLBACKS():
    DD_NTCALLBACKS = win32more.Graphics.DirectDraw.DD_NTCALLBACKS_head
    DD_NTCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("FreeDriverMemory", win32more.Graphics.DirectDraw.PDD_FREEDRIVERMEMORY),
        ("SetExclusiveMode", win32more.Graphics.DirectDraw.PDD_SETEXCLUSIVEMODE),
        ("FlipToGDISurface", win32more.Graphics.DirectDraw.PDD_FLIPTOGDISURFACE),
    ]
    return DD_NTCALLBACKS
def _define_PDD_PALCB_DESTROYPALETTE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_DESTROYPALETTEDATA_head), use_last_error=False)
def _define_PDD_PALCB_SETENTRIES():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SETENTRIESDATA_head), use_last_error=False)
def _define_DD_PALETTECALLBACKS_head():
    class DD_PALETTECALLBACKS(Structure):
        pass
    return DD_PALETTECALLBACKS
def _define_DD_PALETTECALLBACKS():
    DD_PALETTECALLBACKS = win32more.Graphics.DirectDraw.DD_PALETTECALLBACKS_head
    DD_PALETTECALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("DestroyPalette", win32more.Graphics.DirectDraw.PDD_PALCB_DESTROYPALETTE),
        ("SetEntries", win32more.Graphics.DirectDraw.PDD_PALCB_SETENTRIES),
    ]
    return DD_PALETTECALLBACKS
def _define_PDD_SURFCB_LOCK():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_LOCKDATA_head), use_last_error=False)
def _define_PDD_SURFCB_UNLOCK():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_UNLOCKDATA_head), use_last_error=False)
def _define_PDD_SURFCB_BLT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_BLTDATA_head), use_last_error=False)
def _define_PDD_SURFCB_UPDATEOVERLAY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_UPDATEOVERLAYDATA_head), use_last_error=False)
def _define_PDD_SURFCB_SETOVERLAYPOSITION():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SETOVERLAYPOSITIONDATA_head), use_last_error=False)
def _define_PDD_SURFCB_SETPALETTE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SETPALETTEDATA_head), use_last_error=False)
def _define_PDD_SURFCB_FLIP():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_FLIPDATA_head), use_last_error=False)
def _define_PDD_SURFCB_DESTROYSURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_DESTROYSURFACEDATA_head), use_last_error=False)
def _define_PDD_SURFCB_SETCLIPLIST():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SETCLIPLISTDATA_head), use_last_error=False)
def _define_PDD_SURFCB_ADDATTACHEDSURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_ADDATTACHEDSURFACEDATA_head), use_last_error=False)
def _define_PDD_SURFCB_SETCOLORKEY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SETCOLORKEYDATA_head), use_last_error=False)
def _define_PDD_SURFCB_GETBLTSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETBLTSTATUSDATA_head), use_last_error=False)
def _define_PDD_SURFCB_GETFLIPSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETFLIPSTATUSDATA_head), use_last_error=False)
def _define_DD_SURFACECALLBACKS_head():
    class DD_SURFACECALLBACKS(Structure):
        pass
    return DD_SURFACECALLBACKS
def _define_DD_SURFACECALLBACKS():
    DD_SURFACECALLBACKS = win32more.Graphics.DirectDraw.DD_SURFACECALLBACKS_head
    DD_SURFACECALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("DestroySurface", win32more.Graphics.DirectDraw.PDD_SURFCB_DESTROYSURFACE),
        ("Flip", win32more.Graphics.DirectDraw.PDD_SURFCB_FLIP),
        ("SetClipList", win32more.Graphics.DirectDraw.PDD_SURFCB_SETCLIPLIST),
        ("Lock", win32more.Graphics.DirectDraw.PDD_SURFCB_LOCK),
        ("Unlock", win32more.Graphics.DirectDraw.PDD_SURFCB_UNLOCK),
        ("Blt", win32more.Graphics.DirectDraw.PDD_SURFCB_BLT),
        ("SetColorKey", win32more.Graphics.DirectDraw.PDD_SURFCB_SETCOLORKEY),
        ("AddAttachedSurface", win32more.Graphics.DirectDraw.PDD_SURFCB_ADDATTACHEDSURFACE),
        ("GetBltStatus", win32more.Graphics.DirectDraw.PDD_SURFCB_GETBLTSTATUS),
        ("GetFlipStatus", win32more.Graphics.DirectDraw.PDD_SURFCB_GETFLIPSTATUS),
        ("UpdateOverlay", win32more.Graphics.DirectDraw.PDD_SURFCB_UPDATEOVERLAY),
        ("SetOverlayPosition", win32more.Graphics.DirectDraw.PDD_SURFCB_SETOVERLAYPOSITION),
        ("reserved4", c_void_p),
        ("SetPalette", win32more.Graphics.DirectDraw.PDD_SURFCB_SETPALETTE),
    ]
    return DD_SURFACECALLBACKS
def _define_PDD_VPORTCB_CANCREATEVIDEOPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_CANCREATEVPORTDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_CREATEVIDEOPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_CREATEVPORTDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_FLIP():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_FLIPVPORTDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETBANDWIDTH():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTBANDWIDTHDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETINPUTFORMATS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTINPUTFORMATDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETOUTPUTFORMATS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTOUTPUTFORMATDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETAUTOFLIPSURF():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw._DD_GETVPORTAUTOFLIPSURFACEDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETFIELD():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTFIELDDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETLINE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTLINEDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETVPORTCONNECT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTCONNECTDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_DESTROYVPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_DESTROYVPORTDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETFLIPSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTFLIPSTATUSDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_UPDATE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_UPDATEVPORTDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_WAITFORSYNC():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_WAITFORVPORTSYNCDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_GETSIGNALSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETVPORTSIGNALDATA_head), use_last_error=False)
def _define_PDD_VPORTCB_COLORCONTROL():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_VPORTCOLORDATA_head), use_last_error=False)
def _define_DD_VIDEOPORTCALLBACKS_head():
    class DD_VIDEOPORTCALLBACKS(Structure):
        pass
    return DD_VIDEOPORTCALLBACKS
def _define_DD_VIDEOPORTCALLBACKS():
    DD_VIDEOPORTCALLBACKS = win32more.Graphics.DirectDraw.DD_VIDEOPORTCALLBACKS_head
    DD_VIDEOPORTCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("CanCreateVideoPort", win32more.Graphics.DirectDraw.PDD_VPORTCB_CANCREATEVIDEOPORT),
        ("CreateVideoPort", win32more.Graphics.DirectDraw.PDD_VPORTCB_CREATEVIDEOPORT),
        ("FlipVideoPort", win32more.Graphics.DirectDraw.PDD_VPORTCB_FLIP),
        ("GetVideoPortBandwidth", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETBANDWIDTH),
        ("GetVideoPortInputFormats", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETINPUTFORMATS),
        ("GetVideoPortOutputFormats", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETOUTPUTFORMATS),
        ("lpReserved1", c_void_p),
        ("GetVideoPortField", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETFIELD),
        ("GetVideoPortLine", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETLINE),
        ("GetVideoPortConnectInfo", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETVPORTCONNECT),
        ("DestroyVideoPort", win32more.Graphics.DirectDraw.PDD_VPORTCB_DESTROYVPORT),
        ("GetVideoPortFlipStatus", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETFLIPSTATUS),
        ("UpdateVideoPort", win32more.Graphics.DirectDraw.PDD_VPORTCB_UPDATE),
        ("WaitForVideoPortSync", win32more.Graphics.DirectDraw.PDD_VPORTCB_WAITFORSYNC),
        ("GetVideoSignalStatus", win32more.Graphics.DirectDraw.PDD_VPORTCB_GETSIGNALSTATUS),
        ("ColorControl", win32more.Graphics.DirectDraw.PDD_VPORTCB_COLORCONTROL),
    ]
    return DD_VIDEOPORTCALLBACKS
def _define_PDD_COLORCB_COLORCONTROL():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_COLORCONTROLDATA_head), use_last_error=False)
def _define_DD_COLORCONTROLCALLBACKS_head():
    class DD_COLORCONTROLCALLBACKS(Structure):
        pass
    return DD_COLORCONTROLCALLBACKS
def _define_DD_COLORCONTROLCALLBACKS():
    DD_COLORCONTROLCALLBACKS = win32more.Graphics.DirectDraw.DD_COLORCONTROLCALLBACKS_head
    DD_COLORCONTROLCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("ColorControl", win32more.Graphics.DirectDraw.PDD_COLORCB_COLORCONTROL),
    ]
    return DD_COLORCONTROLCALLBACKS
def _define_PDD_KERNELCB_SYNCSURFACE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SYNCSURFACEDATA_head), use_last_error=False)
def _define_PDD_KERNELCB_SYNCVIDEOPORT():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_SYNCVIDEOPORTDATA_head), use_last_error=False)
def _define_DD_KERNELCALLBACKS_head():
    class DD_KERNELCALLBACKS(Structure):
        pass
    return DD_KERNELCALLBACKS
def _define_DD_KERNELCALLBACKS():
    DD_KERNELCALLBACKS = win32more.Graphics.DirectDraw.DD_KERNELCALLBACKS_head
    DD_KERNELCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("SyncSurfaceData", win32more.Graphics.DirectDraw.PDD_KERNELCB_SYNCSURFACE),
        ("SyncVideoPortData", win32more.Graphics.DirectDraw.PDD_KERNELCB_SYNCVIDEOPORT),
    ]
    return DD_KERNELCALLBACKS
def _define_PDD_MOCOMPCB_GETGUIDS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETMOCOMPGUIDSDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_GETFORMATS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETMOCOMPFORMATSDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_CREATE():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_CREATEMOCOMPDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_GETCOMPBUFFINFO():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETMOCOMPCOMPBUFFDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_GETINTERNALINFO():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_GETINTERNALMOCOMPDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_BEGINFRAME():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_BEGINMOCOMPFRAMEDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_ENDFRAME():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_ENDMOCOMPFRAMEDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_RENDER():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_RENDERMOCOMPDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_QUERYSTATUS():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_QUERYMOCOMPSTATUSDATA_head), use_last_error=False)
def _define_PDD_MOCOMPCB_DESTROY():
    return CFUNCTYPE(UInt32,POINTER(win32more.Graphics.DirectDraw.DD_DESTROYMOCOMPDATA_head), use_last_error=False)
def _define_DD_MOTIONCOMPCALLBACKS_head():
    class DD_MOTIONCOMPCALLBACKS(Structure):
        pass
    return DD_MOTIONCOMPCALLBACKS
def _define_DD_MOTIONCOMPCALLBACKS():
    DD_MOTIONCOMPCALLBACKS = win32more.Graphics.DirectDraw.DD_MOTIONCOMPCALLBACKS_head
    DD_MOTIONCOMPCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("GetMoCompGuids", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_GETGUIDS),
        ("GetMoCompFormats", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_GETFORMATS),
        ("CreateMoComp", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_CREATE),
        ("GetMoCompBuffInfo", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_GETCOMPBUFFINFO),
        ("GetInternalMoCompInfo", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_GETINTERNALINFO),
        ("BeginMoCompFrame", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_BEGINFRAME),
        ("EndMoCompFrame", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_ENDFRAME),
        ("RenderMoComp", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_RENDER),
        ("QueryMoCompStatus", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_QUERYSTATUS),
        ("DestroyMoComp", win32more.Graphics.DirectDraw.PDD_MOCOMPCB_DESTROY),
    ]
    return DD_MOTIONCOMPCALLBACKS
def _define_DD_NONLOCALVIDMEMCAPS_head():
    class DD_NONLOCALVIDMEMCAPS(Structure):
        pass
    return DD_NONLOCALVIDMEMCAPS
def _define_DD_NONLOCALVIDMEMCAPS():
    DD_NONLOCALVIDMEMCAPS = win32more.Graphics.DirectDraw.DD_NONLOCALVIDMEMCAPS_head
    DD_NONLOCALVIDMEMCAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwNLVBCaps", UInt32),
        ("dwNLVBCaps2", UInt32),
        ("dwNLVBCKeyCaps", UInt32),
        ("dwNLVBFXCaps", UInt32),
        ("dwNLVBRops", UInt32 * 8),
    ]
    return DD_NONLOCALVIDMEMCAPS
def _define_DD_PALETTE_GLOBAL_head():
    class DD_PALETTE_GLOBAL(Structure):
        pass
    return DD_PALETTE_GLOBAL
def _define_DD_PALETTE_GLOBAL():
    DD_PALETTE_GLOBAL = win32more.Graphics.DirectDraw.DD_PALETTE_GLOBAL_head
    DD_PALETTE_GLOBAL._fields_ = [
        ("dwReserved1", UIntPtr),
    ]
    return DD_PALETTE_GLOBAL
def _define_DD_PALETTE_LOCAL_head():
    class DD_PALETTE_LOCAL(Structure):
        pass
    return DD_PALETTE_LOCAL
def _define_DD_PALETTE_LOCAL():
    DD_PALETTE_LOCAL = win32more.Graphics.DirectDraw.DD_PALETTE_LOCAL_head
    DD_PALETTE_LOCAL._fields_ = [
        ("dwReserved0", UInt32),
        ("dwReserved1", UIntPtr),
    ]
    return DD_PALETTE_LOCAL
def _define_DD_CLIPPER_GLOBAL_head():
    class DD_CLIPPER_GLOBAL(Structure):
        pass
    return DD_CLIPPER_GLOBAL
def _define_DD_CLIPPER_GLOBAL():
    DD_CLIPPER_GLOBAL = win32more.Graphics.DirectDraw.DD_CLIPPER_GLOBAL_head
    DD_CLIPPER_GLOBAL._fields_ = [
        ("dwReserved1", UIntPtr),
    ]
    return DD_CLIPPER_GLOBAL
def _define_DD_CLIPPER_LOCAL_head():
    class DD_CLIPPER_LOCAL(Structure):
        pass
    return DD_CLIPPER_LOCAL
def _define_DD_CLIPPER_LOCAL():
    DD_CLIPPER_LOCAL = win32more.Graphics.DirectDraw.DD_CLIPPER_LOCAL_head
    DD_CLIPPER_LOCAL._fields_ = [
        ("dwReserved1", UIntPtr),
    ]
    return DD_CLIPPER_LOCAL
def _define_DD_ATTACHLIST_head():
    class DD_ATTACHLIST(Structure):
        pass
    return DD_ATTACHLIST
def _define_DD_ATTACHLIST():
    DD_ATTACHLIST = win32more.Graphics.DirectDraw.DD_ATTACHLIST_head
    DD_ATTACHLIST._fields_ = [
        ("lpLink", POINTER(win32more.Graphics.DirectDraw.DD_ATTACHLIST_head)),
        ("lpAttached", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
    ]
    return DD_ATTACHLIST
def _define_DD_SURFACE_INT_head():
    class DD_SURFACE_INT(Structure):
        pass
    return DD_SURFACE_INT
def _define_DD_SURFACE_INT():
    DD_SURFACE_INT = win32more.Graphics.DirectDraw.DD_SURFACE_INT_head
    DD_SURFACE_INT._fields_ = [
        ("lpLcl", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
    ]
    return DD_SURFACE_INT
def _define_DD_SURFACE_GLOBAL_head():
    class DD_SURFACE_GLOBAL(Structure):
        pass
    return DD_SURFACE_GLOBAL
def _define_DD_SURFACE_GLOBAL():
    DD_SURFACE_GLOBAL = win32more.Graphics.DirectDraw.DD_SURFACE_GLOBAL_head
    class DD_SURFACE_GLOBAL__Anonymous3_e__Union(Union):
        pass
    DD_SURFACE_GLOBAL__Anonymous3_e__Union._fields_ = [
        ("lPitch", Int32),
        ("dwLinearSize", UInt32),
    ]
    class DD_SURFACE_GLOBAL__Anonymous1_e__Union(Union):
        pass
    DD_SURFACE_GLOBAL__Anonymous1_e__Union._fields_ = [
        ("dwBlockSizeY", UInt32),
        ("lSlicePitch", Int32),
    ]
    class DD_SURFACE_GLOBAL__Anonymous2_e__Union(Union):
        pass
    DD_SURFACE_GLOBAL__Anonymous2_e__Union._fields_ = [
        ("lpVidMemHeap", POINTER(win32more.Graphics.DirectDraw.VIDEOMEMORY_head)),
        ("dwBlockSizeX", UInt32),
        ("dwUserMemSize", UInt32),
    ]
    DD_SURFACE_GLOBAL._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    DD_SURFACE_GLOBAL._fields_ = [
        ("Anonymous1", DD_SURFACE_GLOBAL__Anonymous1_e__Union),
        ("Anonymous2", DD_SURFACE_GLOBAL__Anonymous2_e__Union),
        ("fpVidMem", UIntPtr),
        ("Anonymous3", DD_SURFACE_GLOBAL__Anonymous3_e__Union),
        ("yHint", Int32),
        ("xHint", Int32),
        ("wHeight", UInt32),
        ("wWidth", UInt32),
        ("dwReserved1", UIntPtr),
        ("ddpfSurface", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("fpHeapOffset", UIntPtr),
        ("hCreatorProcess", win32more.Foundation.HANDLE),
    ]
    return DD_SURFACE_GLOBAL
def _define_DD_SURFACE_MORE_head():
    class DD_SURFACE_MORE(Structure):
        pass
    return DD_SURFACE_MORE
def _define_DD_SURFACE_MORE():
    DD_SURFACE_MORE = win32more.Graphics.DirectDraw.DD_SURFACE_MORE_head
    DD_SURFACE_MORE._fields_ = [
        ("dwMipMapCount", UInt32),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwOverlayFlags", UInt32),
        ("ddsCapsEx", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("dwSurfaceHandle", UInt32),
    ]
    return DD_SURFACE_MORE
def _define_DD_SURFACE_LOCAL_head():
    class DD_SURFACE_LOCAL(Structure):
        pass
    return DD_SURFACE_LOCAL
def _define_DD_SURFACE_LOCAL():
    DD_SURFACE_LOCAL = win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head
    class DD_SURFACE_LOCAL__Anonymous2_e__Union(Union):
        pass
    DD_SURFACE_LOCAL__Anonymous2_e__Union._fields_ = [
        ("ddckCKDestOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKDestBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
    ]
    class DD_SURFACE_LOCAL__Anonymous1_e__Union(Union):
        pass
    DD_SURFACE_LOCAL__Anonymous1_e__Union._fields_ = [
        ("ddckCKSrcOverlay", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddckCKSrcBlt", win32more.Graphics.DirectDraw.DDCOLORKEY),
    ]
    DD_SURFACE_LOCAL._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    DD_SURFACE_LOCAL._fields_ = [
        ("lpGbl", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_GLOBAL_head)),
        ("dwFlags", UInt32),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwReserved1", UIntPtr),
        ("Anonymous1", DD_SURFACE_LOCAL__Anonymous1_e__Union),
        ("Anonymous2", DD_SURFACE_LOCAL__Anonymous2_e__Union),
        ("lpSurfMore", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_MORE_head)),
        ("lpAttachList", POINTER(win32more.Graphics.DirectDraw.DD_ATTACHLIST_head)),
        ("lpAttachListFrom", POINTER(win32more.Graphics.DirectDraw.DD_ATTACHLIST_head)),
        ("rcOverlaySrc", win32more.Foundation.RECT),
    ]
    return DD_SURFACE_LOCAL
def _define_DD_MORECAPS_head():
    class DD_MORECAPS(Structure):
        pass
    return DD_MORECAPS
def _define_DD_MORECAPS():
    DD_MORECAPS = win32more.Graphics.DirectDraw.DD_MORECAPS_head
    DD_MORECAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwAlphaCaps", UInt32),
        ("dwSVBAlphaCaps", UInt32),
        ("dwVSBAlphaCaps", UInt32),
        ("dwSSBAlphaCaps", UInt32),
        ("dwFilterCaps", UInt32),
        ("dwSVBFilterCaps", UInt32),
        ("dwVSBFilterCaps", UInt32),
        ("dwSSBFilterCaps", UInt32),
    ]
    return DD_MORECAPS
def _define_DDNTCORECAPS_head():
    class DDNTCORECAPS(Structure):
        pass
    return DDNTCORECAPS
def _define_DDNTCORECAPS():
    DDNTCORECAPS = win32more.Graphics.DirectDraw.DDNTCORECAPS_head
    DDNTCORECAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwCaps", UInt32),
        ("dwCaps2", UInt32),
        ("dwCKeyCaps", UInt32),
        ("dwFXCaps", UInt32),
        ("dwFXAlphaCaps", UInt32),
        ("dwPalCaps", UInt32),
        ("dwSVCaps", UInt32),
        ("dwAlphaBltConstBitDepths", UInt32),
        ("dwAlphaBltPixelBitDepths", UInt32),
        ("dwAlphaBltSurfaceBitDepths", UInt32),
        ("dwAlphaOverlayConstBitDepths", UInt32),
        ("dwAlphaOverlayPixelBitDepths", UInt32),
        ("dwAlphaOverlaySurfaceBitDepths", UInt32),
        ("dwZBufferBitDepths", UInt32),
        ("dwVidMemTotal", UInt32),
        ("dwVidMemFree", UInt32),
        ("dwMaxVisibleOverlays", UInt32),
        ("dwCurrVisibleOverlays", UInt32),
        ("dwNumFourCCCodes", UInt32),
        ("dwAlignBoundarySrc", UInt32),
        ("dwAlignSizeSrc", UInt32),
        ("dwAlignBoundaryDest", UInt32),
        ("dwAlignSizeDest", UInt32),
        ("dwAlignStrideAlign", UInt32),
        ("dwRops", UInt32 * 8),
        ("ddsCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwMinOverlayStretch", UInt32),
        ("dwMaxOverlayStretch", UInt32),
        ("dwMinLiveVideoStretch", UInt32),
        ("dwMaxLiveVideoStretch", UInt32),
        ("dwMinHwCodecStretch", UInt32),
        ("dwMaxHwCodecStretch", UInt32),
        ("dwReserved1", UInt32),
        ("dwReserved2", UInt32),
        ("dwReserved3", UInt32),
        ("dwSVBCaps", UInt32),
        ("dwSVBCKeyCaps", UInt32),
        ("dwSVBFXCaps", UInt32),
        ("dwSVBRops", UInt32 * 8),
        ("dwVSBCaps", UInt32),
        ("dwVSBCKeyCaps", UInt32),
        ("dwVSBFXCaps", UInt32),
        ("dwVSBRops", UInt32 * 8),
        ("dwSSBCaps", UInt32),
        ("dwSSBCKeyCaps", UInt32),
        ("dwSSBFXCaps", UInt32),
        ("dwSSBRops", UInt32 * 8),
        ("dwMaxVideoPorts", UInt32),
        ("dwCurrVideoPorts", UInt32),
        ("dwSVBCaps2", UInt32),
    ]
    return DDNTCORECAPS
def _define_DD_D3DBUFCALLBACKS_head():
    class DD_D3DBUFCALLBACKS(Structure):
        pass
    return DD_D3DBUFCALLBACKS
def _define_DD_D3DBUFCALLBACKS():
    DD_D3DBUFCALLBACKS = win32more.Graphics.DirectDraw.DD_D3DBUFCALLBACKS_head
    DD_D3DBUFCALLBACKS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("CanCreateD3DBuffer", win32more.Graphics.DirectDraw.PDD_CANCREATESURFACE),
        ("CreateD3DBuffer", win32more.Graphics.DirectDraw.PDD_CREATESURFACE),
        ("DestroyD3DBuffer", win32more.Graphics.DirectDraw.PDD_SURFCB_DESTROYSURFACE),
        ("LockD3DBuffer", win32more.Graphics.DirectDraw.PDD_SURFCB_LOCK),
        ("UnlockD3DBuffer", win32more.Graphics.DirectDraw.PDD_SURFCB_UNLOCK),
    ]
    return DD_D3DBUFCALLBACKS
def _define_DD_HALINFO_V4_head():
    class DD_HALINFO_V4(Structure):
        pass
    return DD_HALINFO_V4
def _define_DD_HALINFO_V4():
    DD_HALINFO_V4 = win32more.Graphics.DirectDraw.DD_HALINFO_V4_head
    DD_HALINFO_V4._fields_ = [
        ("dwSize", UInt32),
        ("vmiData", win32more.Graphics.DirectDraw.VIDEOMEMORYINFO),
        ("ddCaps", win32more.Graphics.DirectDraw.DDNTCORECAPS),
        ("GetDriverInfo", win32more.Graphics.DirectDraw.PDD_GETDRIVERINFO),
        ("dwFlags", UInt32),
    ]
    return DD_HALINFO_V4
def _define_DD_HALINFO_head():
    class DD_HALINFO(Structure):
        pass
    return DD_HALINFO
def _define_DD_HALINFO():
    DD_HALINFO = win32more.Graphics.DirectDraw.DD_HALINFO_head
    DD_HALINFO._fields_ = [
        ("dwSize", UInt32),
        ("vmiData", win32more.Graphics.DirectDraw.VIDEOMEMORYINFO),
        ("ddCaps", win32more.Graphics.DirectDraw.DDNTCORECAPS),
        ("GetDriverInfo", win32more.Graphics.DirectDraw.PDD_GETDRIVERINFO),
        ("dwFlags", UInt32),
        ("lpD3DGlobalDriverData", c_void_p),
        ("lpD3DHALCallbacks", c_void_p),
        ("lpD3DBufCallbacks", POINTER(win32more.Graphics.DirectDraw.DD_D3DBUFCALLBACKS_head)),
    ]
    return DD_HALINFO
def _define_DD_DIRECTDRAW_GLOBAL_head():
    class DD_DIRECTDRAW_GLOBAL(Structure):
        pass
    return DD_DIRECTDRAW_GLOBAL
def _define_DD_DIRECTDRAW_GLOBAL():
    DD_DIRECTDRAW_GLOBAL = win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head
    DD_DIRECTDRAW_GLOBAL._fields_ = [
        ("dhpdev", c_void_p),
        ("dwReserved1", UIntPtr),
        ("dwReserved2", UIntPtr),
        ("lpDDVideoPortCaps", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTCAPS_head)),
    ]
    return DD_DIRECTDRAW_GLOBAL
def _define_DD_DIRECTDRAW_LOCAL_head():
    class DD_DIRECTDRAW_LOCAL(Structure):
        pass
    return DD_DIRECTDRAW_LOCAL
def _define_DD_DIRECTDRAW_LOCAL():
    DD_DIRECTDRAW_LOCAL = win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head
    DD_DIRECTDRAW_LOCAL._fields_ = [
        ("lpGbl", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
    ]
    return DD_DIRECTDRAW_LOCAL
def _define_DD_VIDEOPORT_LOCAL_head():
    class DD_VIDEOPORT_LOCAL(Structure):
        pass
    return DD_VIDEOPORT_LOCAL
def _define_DD_VIDEOPORT_LOCAL():
    DD_VIDEOPORT_LOCAL = win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head
    DD_VIDEOPORT_LOCAL._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("ddvpDesc", win32more.Graphics.DirectDraw.DDVIDEOPORTDESC),
        ("ddvpInfo", win32more.Graphics.DirectDraw.DDVIDEOPORTINFO),
        ("lpSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_INT_head)),
        ("lpVBISurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_INT_head)),
        ("dwNumAutoflip", UInt32),
        ("dwNumVBIAutoflip", UInt32),
        ("dwReserved1", UIntPtr),
        ("dwReserved2", UIntPtr),
        ("dwReserved3", UIntPtr),
    ]
    return DD_VIDEOPORT_LOCAL
def _define_DD_MOTIONCOMP_LOCAL_head():
    class DD_MOTIONCOMP_LOCAL(Structure):
        pass
    return DD_MOTIONCOMP_LOCAL
def _define_DD_MOTIONCOMP_LOCAL():
    DD_MOTIONCOMP_LOCAL = win32more.Graphics.DirectDraw.DD_MOTIONCOMP_LOCAL_head
    DD_MOTIONCOMP_LOCAL._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("guid", Guid),
        ("dwUncompWidth", UInt32),
        ("dwUncompHeight", UInt32),
        ("ddUncompPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwDriverReserved1", UInt32),
        ("dwDriverReserved2", UInt32),
        ("dwDriverReserved3", UInt32),
        ("lpDriverReserved1", c_void_p),
        ("lpDriverReserved2", c_void_p),
        ("lpDriverReserved3", c_void_p),
    ]
    return DD_MOTIONCOMP_LOCAL
def _define_DD_MORESURFACECAPS_head():
    class DD_MORESURFACECAPS(Structure):
        pass
    return DD_MORESURFACECAPS
def _define_DD_MORESURFACECAPS():
    DD_MORESURFACECAPS = win32more.Graphics.DirectDraw.DD_MORESURFACECAPS_head
    class DD_MORESURFACECAPS_NTExtendedHeapRestrictions(Structure):
        pass
    DD_MORESURFACECAPS_NTExtendedHeapRestrictions._fields_ = [
        ("ddsCapsEx", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("ddsCapsExAlt", win32more.Graphics.DirectDraw.DDSCAPSEX),
    ]
    DD_MORESURFACECAPS._fields_ = [
        ("dwSize", UInt32),
        ("ddsCapsMore", win32more.Graphics.DirectDraw.DDSCAPSEX),
        ("ddsExtendedHeapRestrictions", DD_MORESURFACECAPS_NTExtendedHeapRestrictions * 0),
    ]
    return DD_MORESURFACECAPS
def _define_DD_STEREOMODE_head():
    class DD_STEREOMODE(Structure):
        pass
    return DD_STEREOMODE
def _define_DD_STEREOMODE():
    DD_STEREOMODE = win32more.Graphics.DirectDraw.DD_STEREOMODE_head
    DD_STEREOMODE._fields_ = [
        ("dwSize", UInt32),
        ("dwHeight", UInt32),
        ("dwWidth", UInt32),
        ("dwBpp", UInt32),
        ("dwRefreshRate", UInt32),
        ("bSupported", win32more.Foundation.BOOL),
    ]
    return DD_STEREOMODE
def _define_DD_UPDATENONLOCALHEAPDATA_head():
    class DD_UPDATENONLOCALHEAPDATA(Structure):
        pass
    return DD_UPDATENONLOCALHEAPDATA
def _define_DD_UPDATENONLOCALHEAPDATA():
    DD_UPDATENONLOCALHEAPDATA = win32more.Graphics.DirectDraw.DD_UPDATENONLOCALHEAPDATA_head
    DD_UPDATENONLOCALHEAPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("dwHeap", UInt32),
        ("fpGARTLin", UIntPtr),
        ("fpGARTDev", UIntPtr),
        ("ulPolicyMaxBytes", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("UpdateNonLocalHeap", c_void_p),
    ]
    return DD_UPDATENONLOCALHEAPDATA
def _define_DD_NTPRIVATEDRIVERCAPS_head():
    class DD_NTPRIVATEDRIVERCAPS(Structure):
        pass
    return DD_NTPRIVATEDRIVERCAPS
def _define_DD_NTPRIVATEDRIVERCAPS():
    DD_NTPRIVATEDRIVERCAPS = win32more.Graphics.DirectDraw.DD_NTPRIVATEDRIVERCAPS_head
    DD_NTPRIVATEDRIVERCAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwPrivateCaps", UInt32),
    ]
    return DD_NTPRIVATEDRIVERCAPS
def _define_DD_BLTDATA_head():
    class DD_BLTDATA(Structure):
        pass
    return DD_BLTDATA
def _define_DD_BLTDATA():
    DD_BLTDATA = win32more.Graphics.DirectDraw.DD_BLTDATA_head
    DD_BLTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDDestSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("rDest", win32more.Foundation.RECTL),
        ("lpDDSrcSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("rSrc", win32more.Foundation.RECTL),
        ("dwFlags", UInt32),
        ("dwROPFlags", UInt32),
        ("bltFX", win32more.Graphics.DirectDraw.DDBLTFX),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Blt", c_void_p),
        ("IsClipped", win32more.Foundation.BOOL),
        ("rOrigDest", win32more.Foundation.RECTL),
        ("rOrigSrc", win32more.Foundation.RECTL),
        ("dwRectCnt", UInt32),
        ("prDestRects", POINTER(win32more.Foundation.RECT_head)),
        ("dwAFlags", UInt32),
        ("ddargbScaleFactors", win32more.Graphics.DirectDraw.DDARGB),
    ]
    return DD_BLTDATA
def _define_DD_LOCKDATA_head():
    class DD_LOCKDATA(Structure):
        pass
    return DD_LOCKDATA
def _define_DD_LOCKDATA():
    DD_LOCKDATA = win32more.Graphics.DirectDraw.DD_LOCKDATA_head
    DD_LOCKDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("bHasRect", UInt32),
        ("rArea", win32more.Foundation.RECTL),
        ("lpSurfData", c_void_p),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Lock", c_void_p),
        ("dwFlags", UInt32),
        ("fpProcess", UIntPtr),
    ]
    return DD_LOCKDATA
def _define_DD_UNLOCKDATA_head():
    class DD_UNLOCKDATA(Structure):
        pass
    return DD_UNLOCKDATA
def _define_DD_UNLOCKDATA():
    DD_UNLOCKDATA = win32more.Graphics.DirectDraw.DD_UNLOCKDATA_head
    DD_UNLOCKDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Unlock", c_void_p),
    ]
    return DD_UNLOCKDATA
def _define_DD_UPDATEOVERLAYDATA_head():
    class DD_UPDATEOVERLAYDATA(Structure):
        pass
    return DD_UPDATEOVERLAYDATA
def _define_DD_UPDATEOVERLAYDATA():
    DD_UPDATEOVERLAYDATA = win32more.Graphics.DirectDraw.DD_UPDATEOVERLAYDATA_head
    DD_UPDATEOVERLAYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDDestSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("rDest", win32more.Foundation.RECTL),
        ("lpDDSrcSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("rSrc", win32more.Foundation.RECTL),
        ("dwFlags", UInt32),
        ("overlayFX", win32more.Graphics.DirectDraw.DDOVERLAYFX),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("UpdateOverlay", c_void_p),
    ]
    return DD_UPDATEOVERLAYDATA
def _define_DD_SETOVERLAYPOSITIONDATA_head():
    class DD_SETOVERLAYPOSITIONDATA(Structure):
        pass
    return DD_SETOVERLAYPOSITIONDATA
def _define_DD_SETOVERLAYPOSITIONDATA():
    DD_SETOVERLAYPOSITIONDATA = win32more.Graphics.DirectDraw.DD_SETOVERLAYPOSITIONDATA_head
    DD_SETOVERLAYPOSITIONDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSrcSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lpDDDestSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lXPos", Int32),
        ("lYPos", Int32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetOverlayPosition", c_void_p),
    ]
    return DD_SETOVERLAYPOSITIONDATA
def _define_DD_SETPALETTEDATA_head():
    class DD_SETPALETTEDATA(Structure):
        pass
    return DD_SETPALETTEDATA
def _define_DD_SETPALETTEDATA():
    DD_SETPALETTEDATA = win32more.Graphics.DirectDraw.DD_SETPALETTEDATA_head
    DD_SETPALETTEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DD_PALETTE_GLOBAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetPalette", c_void_p),
        ("Attach", win32more.Foundation.BOOL),
    ]
    return DD_SETPALETTEDATA
def _define_DD_FLIPDATA_head():
    class DD_FLIPDATA(Structure):
        pass
    return DD_FLIPDATA
def _define_DD_FLIPDATA():
    DD_FLIPDATA = win32more.Graphics.DirectDraw.DD_FLIPDATA_head
    DD_FLIPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpSurfCurr", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lpSurfTarg", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("Flip", c_void_p),
        ("lpSurfCurrLeft", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lpSurfTargLeft", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
    ]
    return DD_FLIPDATA
def _define_DD_DESTROYSURFACEDATA_head():
    class DD_DESTROYSURFACEDATA(Structure):
        pass
    return DD_DESTROYSURFACEDATA
def _define_DD_DESTROYSURFACEDATA():
    DD_DESTROYSURFACEDATA = win32more.Graphics.DirectDraw.DD_DESTROYSURFACEDATA_head
    DD_DESTROYSURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroySurface", c_void_p),
    ]
    return DD_DESTROYSURFACEDATA
def _define_DD_SETCLIPLISTDATA_head():
    class DD_SETCLIPLISTDATA(Structure):
        pass
    return DD_SETCLIPLISTDATA
def _define_DD_SETCLIPLISTDATA():
    DD_SETCLIPLISTDATA = win32more.Graphics.DirectDraw.DD_SETCLIPLISTDATA_head
    DD_SETCLIPLISTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetClipList", c_void_p),
    ]
    return DD_SETCLIPLISTDATA
def _define_DD_ADDATTACHEDSURFACEDATA_head():
    class DD_ADDATTACHEDSURFACEDATA(Structure):
        pass
    return DD_ADDATTACHEDSURFACEDATA
def _define_DD_ADDATTACHEDSURFACEDATA():
    DD_ADDATTACHEDSURFACEDATA = win32more.Graphics.DirectDraw.DD_ADDATTACHEDSURFACEDATA_head
    DD_ADDATTACHEDSURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lpSurfAttached", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("AddAttachedSurface", c_void_p),
    ]
    return DD_ADDATTACHEDSURFACEDATA
def _define_DD_SETCOLORKEYDATA_head():
    class DD_SETCOLORKEYDATA(Structure):
        pass
    return DD_SETCOLORKEYDATA
def _define_DD_SETCOLORKEYDATA():
    DD_SETCOLORKEYDATA = win32more.Graphics.DirectDraw.DD_SETCOLORKEYDATA_head
    DD_SETCOLORKEYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwFlags", UInt32),
        ("ckNew", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetColorKey", c_void_p),
    ]
    return DD_SETCOLORKEYDATA
def _define_DD_GETBLTSTATUSDATA_head():
    class DD_GETBLTSTATUSDATA(Structure):
        pass
    return DD_GETBLTSTATUSDATA
def _define_DD_GETBLTSTATUSDATA():
    DD_GETBLTSTATUSDATA = win32more.Graphics.DirectDraw.DD_GETBLTSTATUSDATA_head
    DD_GETBLTSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetBltStatus", c_void_p),
    ]
    return DD_GETBLTSTATUSDATA
def _define_DD_GETFLIPSTATUSDATA_head():
    class DD_GETFLIPSTATUSDATA(Structure):
        pass
    return DD_GETFLIPSTATUSDATA
def _define_DD_GETFLIPSTATUSDATA():
    DD_GETFLIPSTATUSDATA = win32more.Graphics.DirectDraw.DD_GETFLIPSTATUSDATA_head
    DD_GETFLIPSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetFlipStatus", c_void_p),
    ]
    return DD_GETFLIPSTATUSDATA
def _define_DD_DESTROYPALETTEDATA_head():
    class DD_DESTROYPALETTEDATA(Structure):
        pass
    return DD_DESTROYPALETTEDATA
def _define_DD_DESTROYPALETTEDATA():
    DD_DESTROYPALETTEDATA = win32more.Graphics.DirectDraw.DD_DESTROYPALETTEDATA_head
    DD_DESTROYPALETTEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DD_PALETTE_GLOBAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroyPalette", c_void_p),
    ]
    return DD_DESTROYPALETTEDATA
def _define_DD_SETENTRIESDATA_head():
    class DD_SETENTRIESDATA(Structure):
        pass
    return DD_SETENTRIESDATA
def _define_DD_SETENTRIESDATA():
    DD_SETENTRIESDATA = win32more.Graphics.DirectDraw.DD_SETENTRIESDATA_head
    DD_SETENTRIESDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DD_PALETTE_GLOBAL_head)),
        ("dwBase", UInt32),
        ("dwNumEntries", UInt32),
        ("lpEntries", POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetEntries", c_void_p),
    ]
    return DD_SETENTRIESDATA
def _define_DD_CREATESURFACEDATA_head():
    class DD_CREATESURFACEDATA(Structure):
        pass
    return DD_CREATESURFACEDATA
def _define_DD_CREATESURFACEDATA():
    DD_CREATESURFACEDATA = win32more.Graphics.DirectDraw.DD_CREATESURFACEDATA_head
    DD_CREATESURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurfaceDesc", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head)),
        ("lplpSList", POINTER(POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head))),
        ("dwSCnt", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CreateSurface", c_void_p),
    ]
    return DD_CREATESURFACEDATA
def _define_DD_CANCREATESURFACEDATA_head():
    class DD_CANCREATESURFACEDATA(Structure):
        pass
    return DD_CANCREATESURFACEDATA
def _define_DD_CANCREATESURFACEDATA():
    DD_CANCREATESURFACEDATA = win32more.Graphics.DirectDraw.DD_CANCREATESURFACEDATA_head
    DD_CANCREATESURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurfaceDesc", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDESC_head)),
        ("bIsDifferentPixelFormat", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CanCreateSurface", c_void_p),
    ]
    return DD_CANCREATESURFACEDATA
def _define_DD_CREATEPALETTEDATA_head():
    class DD_CREATEPALETTEDATA(Structure):
        pass
    return DD_CREATEPALETTEDATA
def _define_DD_CREATEPALETTEDATA():
    DD_CREATEPALETTEDATA = win32more.Graphics.DirectDraw.DD_CREATEPALETTEDATA_head
    DD_CREATEPALETTEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDPalette", POINTER(win32more.Graphics.DirectDraw.DD_PALETTE_GLOBAL_head)),
        ("lpColorTable", POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CreatePalette", c_void_p),
        ("is_excl", win32more.Foundation.BOOL),
    ]
    return DD_CREATEPALETTEDATA
def _define_DD_WAITFORVERTICALBLANKDATA_head():
    class DD_WAITFORVERTICALBLANKDATA(Structure):
        pass
    return DD_WAITFORVERTICALBLANKDATA
def _define_DD_WAITFORVERTICALBLANKDATA():
    DD_WAITFORVERTICALBLANKDATA = win32more.Graphics.DirectDraw.DD_WAITFORVERTICALBLANKDATA_head
    DD_WAITFORVERTICALBLANKDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("dwFlags", UInt32),
        ("bIsInVB", UInt32),
        ("hEvent", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("WaitForVerticalBlank", c_void_p),
    ]
    return DD_WAITFORVERTICALBLANKDATA
def _define_DD_DRVSETCOLORKEYDATA_head():
    class DD_DRVSETCOLORKEYDATA(Structure):
        pass
    return DD_DRVSETCOLORKEYDATA
def _define_DD_DRVSETCOLORKEYDATA():
    DD_DRVSETCOLORKEYDATA = win32more.Graphics.DirectDraw.DD_DRVSETCOLORKEYDATA_head
    DD_DRVSETCOLORKEYDATA._fields_ = [
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwFlags", UInt32),
        ("ckNew", win32more.Graphics.DirectDraw.DDCOLORKEY),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetColorKey", c_void_p),
    ]
    return DD_DRVSETCOLORKEYDATA
def _define_DD_GETSCANLINEDATA_head():
    class DD_GETSCANLINEDATA(Structure):
        pass
    return DD_GETSCANLINEDATA
def _define_DD_GETSCANLINEDATA():
    DD_GETSCANLINEDATA = win32more.Graphics.DirectDraw.DD_GETSCANLINEDATA_head
    DD_GETSCANLINEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("dwScanLine", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetScanLine", c_void_p),
    ]
    return DD_GETSCANLINEDATA
def _define_DD_MAPMEMORYDATA_head():
    class DD_MAPMEMORYDATA(Structure):
        pass
    return DD_MAPMEMORYDATA
def _define_DD_MAPMEMORYDATA():
    DD_MAPMEMORYDATA = win32more.Graphics.DirectDraw.DD_MAPMEMORYDATA_head
    DD_MAPMEMORYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("bMap", win32more.Foundation.BOOL),
        ("hProcess", win32more.Foundation.HANDLE),
        ("fpProcess", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_MAPMEMORYDATA
def _define_DD_CANCREATEVPORTDATA_head():
    class DD_CANCREATEVPORTDATA(Structure):
        pass
    return DD_CANCREATEVPORTDATA
def _define_DD_CANCREATEVPORTDATA():
    DD_CANCREATEVPORTDATA = win32more.Graphics.DirectDraw.DD_CANCREATEVPORTDATA_head
    DD_CANCREATEVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpDDVideoPortDesc", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CanCreateVideoPort", c_void_p),
    ]
    return DD_CANCREATEVPORTDATA
def _define_DD_CREATEVPORTDATA_head():
    class DD_CREATEVPORTDATA(Structure):
        pass
    return DD_CREATEVPORTDATA
def _define_DD_CREATEVPORTDATA():
    DD_CREATEVPORTDATA = win32more.Graphics.DirectDraw.DD_CREATEVPORTDATA_head
    DD_CREATEVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpDDVideoPortDesc", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDESC_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("CreateVideoPort", c_void_p),
    ]
    return DD_CREATEVPORTDATA
def _define_DD_FLIPVPORTDATA_head():
    class DD_FLIPVPORTDATA(Structure):
        pass
    return DD_FLIPVPORTDATA
def _define_DD_FLIPVPORTDATA():
    DD_FLIPVPORTDATA = win32more.Graphics.DirectDraw.DD_FLIPVPORTDATA_head
    DD_FLIPVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("lpSurfCurr", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lpSurfTarg", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("FlipVideoPort", c_void_p),
    ]
    return DD_FLIPVPORTDATA
def _define_DD_GETVPORTBANDWIDTHDATA_head():
    class DD_GETVPORTBANDWIDTHDATA(Structure):
        pass
    return DD_GETVPORTBANDWIDTHDATA
def _define_DD_GETVPORTBANDWIDTHDATA():
    DD_GETVPORTBANDWIDTHDATA = win32more.Graphics.DirectDraw.DD_GETVPORTBANDWIDTHDATA_head
    DD_GETVPORTBANDWIDTHDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("lpddpfFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("dwFlags", UInt32),
        ("lpBandwidth", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTBANDWIDTH_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortBandwidth", c_void_p),
    ]
    return DD_GETVPORTBANDWIDTHDATA
def _define_DD_GETVPORTINPUTFORMATDATA_head():
    class DD_GETVPORTINPUTFORMATDATA(Structure):
        pass
    return DD_GETVPORTINPUTFORMATDATA
def _define_DD_GETVPORTINPUTFORMATDATA():
    DD_GETVPORTINPUTFORMATDATA = win32more.Graphics.DirectDraw.DD_GETVPORTINPUTFORMATDATA_head
    DD_GETVPORTINPUTFORMATDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwFlags", UInt32),
        ("lpddpfFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("dwNumFormats", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortInputFormats", c_void_p),
    ]
    return DD_GETVPORTINPUTFORMATDATA
def _define_DD_GETVPORTOUTPUTFORMATDATA_head():
    class DD_GETVPORTOUTPUTFORMATDATA(Structure):
        pass
    return DD_GETVPORTOUTPUTFORMATDATA
def _define_DD_GETVPORTOUTPUTFORMATDATA():
    DD_GETVPORTOUTPUTFORMATDATA = win32more.Graphics.DirectDraw.DD_GETVPORTOUTPUTFORMATDATA_head
    DD_GETVPORTOUTPUTFORMATDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwFlags", UInt32),
        ("lpddpfInputFormat", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("lpddpfOutputFormats", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("dwNumFormats", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortInputFormats", c_void_p),
    ]
    return DD_GETVPORTOUTPUTFORMATDATA
def _define_DD_GETVPORTFIELDDATA_head():
    class DD_GETVPORTFIELDDATA(Structure):
        pass
    return DD_GETVPORTFIELDDATA
def _define_DD_GETVPORTFIELDDATA():
    DD_GETVPORTFIELDDATA = win32more.Graphics.DirectDraw.DD_GETVPORTFIELDDATA_head
    DD_GETVPORTFIELDDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("bField", win32more.Foundation.BOOL),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortField", c_void_p),
    ]
    return DD_GETVPORTFIELDDATA
def _define_DD_GETVPORTLINEDATA_head():
    class DD_GETVPORTLINEDATA(Structure):
        pass
    return DD_GETVPORTLINEDATA
def _define_DD_GETVPORTLINEDATA():
    DD_GETVPORTLINEDATA = win32more.Graphics.DirectDraw.DD_GETVPORTLINEDATA_head
    DD_GETVPORTLINEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwLine", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortLine", c_void_p),
    ]
    return DD_GETVPORTLINEDATA
def _define_DD_GETVPORTCONNECTDATA_head():
    class DD_GETVPORTCONNECTDATA(Structure):
        pass
    return DD_GETVPORTCONNECTDATA
def _define_DD_GETVPORTCONNECTDATA():
    DD_GETVPORTCONNECTDATA = win32more.Graphics.DirectDraw.DD_GETVPORTCONNECTDATA_head
    DD_GETVPORTCONNECTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("dwPortId", UInt32),
        ("lpConnect", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTCONNECT_head)),
        ("dwNumEntries", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortConnectInfo", c_void_p),
    ]
    return DD_GETVPORTCONNECTDATA
def _define_DD_DESTROYVPORTDATA_head():
    class DD_DESTROYVPORTDATA(Structure):
        pass
    return DD_DESTROYVPORTDATA
def _define_DD_DESTROYVPORTDATA():
    DD_DESTROYVPORTDATA = win32more.Graphics.DirectDraw.DD_DESTROYVPORTDATA_head
    DD_DESTROYVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("DestroyVideoPort", c_void_p),
    ]
    return DD_DESTROYVPORTDATA
def _define_DD_GETVPORTFLIPSTATUSDATA_head():
    class DD_GETVPORTFLIPSTATUSDATA(Structure):
        pass
    return DD_GETVPORTFLIPSTATUSDATA
def _define_DD_GETVPORTFLIPSTATUSDATA():
    DD_GETVPORTFLIPSTATUSDATA = win32more.Graphics.DirectDraw.DD_GETVPORTFLIPSTATUSDATA_head
    DD_GETVPORTFLIPSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("fpSurface", UIntPtr),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoPortFlipStatus", c_void_p),
    ]
    return DD_GETVPORTFLIPSTATUSDATA
def _define_DD_UPDATEVPORTDATA_head():
    class DD_UPDATEVPORTDATA(Structure):
        pass
    return DD_UPDATEVPORTDATA
def _define_DD_UPDATEVPORTDATA():
    DD_UPDATEVPORTDATA = win32more.Graphics.DirectDraw.DD_UPDATEVPORTDATA_head
    DD_UPDATEVPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("lplpDDSurface", POINTER(POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_INT_head))),
        ("lplpDDVBISurface", POINTER(POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_INT_head))),
        ("lpVideoInfo", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTINFO_head)),
        ("dwFlags", UInt32),
        ("dwNumAutoflip", UInt32),
        ("dwNumVBIAutoflip", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("UpdateVideoPort", c_void_p),
    ]
    return DD_UPDATEVPORTDATA
def _define_DD_WAITFORVPORTSYNCDATA_head():
    class DD_WAITFORVPORTSYNCDATA(Structure):
        pass
    return DD_WAITFORVPORTSYNCDATA
def _define_DD_WAITFORVPORTSYNCDATA():
    DD_WAITFORVPORTSYNCDATA = win32more.Graphics.DirectDraw.DD_WAITFORVPORTSYNCDATA_head
    DD_WAITFORVPORTSYNCDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwFlags", UInt32),
        ("dwLine", UInt32),
        ("dwTimeOut", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("UpdateVideoPort", c_void_p),
    ]
    return DD_WAITFORVPORTSYNCDATA
def _define_DD_GETVPORTSIGNALDATA_head():
    class DD_GETVPORTSIGNALDATA(Structure):
        pass
    return DD_GETVPORTSIGNALDATA
def _define_DD_GETVPORTSIGNALDATA():
    DD_GETVPORTSIGNALDATA = win32more.Graphics.DirectDraw.DD_GETVPORTSIGNALDATA_head
    DD_GETVPORTSIGNALDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwStatus", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetVideoSignalStatus", c_void_p),
    ]
    return DD_GETVPORTSIGNALDATA
def _define_DD_VPORTCOLORDATA_head():
    class DD_VPORTCOLORDATA(Structure):
        pass
    return DD_VPORTCOLORDATA
def _define_DD_VPORTCOLORDATA():
    DD_VPORTCOLORDATA = win32more.Graphics.DirectDraw.DD_VPORTCOLORDATA_head
    DD_VPORTCOLORDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwFlags", UInt32),
        ("lpColorData", POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("ColorControl", c_void_p),
    ]
    return DD_VPORTCOLORDATA
def _define_DD_COLORCONTROLDATA_head():
    class DD_COLORCONTROLDATA(Structure):
        pass
    return DD_COLORCONTROLDATA
def _define_DD_COLORCONTROLDATA():
    DD_COLORCONTROLDATA = win32more.Graphics.DirectDraw.DD_COLORCONTROLDATA_head
    DD_COLORCONTROLDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("lpColorData", POINTER(win32more.Graphics.DirectDraw.DDCOLORCONTROL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("ColorControl", c_void_p),
    ]
    return DD_COLORCONTROLDATA
def _define_DD_GETDRIVERINFODATA_head():
    class DD_GETDRIVERINFODATA(Structure):
        pass
    return DD_GETDRIVERINFODATA
def _define_DD_GETDRIVERINFODATA():
    DD_GETDRIVERINFODATA = win32more.Graphics.DirectDraw.DD_GETDRIVERINFODATA_head
    DD_GETDRIVERINFODATA._fields_ = [
        ("dhpdev", c_void_p),
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("guidInfo", Guid),
        ("dwExpectedSize", UInt32),
        ("lpvData", c_void_p),
        ("dwActualSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_GETDRIVERINFODATA
def _define_DD_GETAVAILDRIVERMEMORYDATA_head():
    class DD_GETAVAILDRIVERMEMORYDATA(Structure):
        pass
    return DD_GETAVAILDRIVERMEMORYDATA
def _define_DD_GETAVAILDRIVERMEMORYDATA():
    DD_GETAVAILDRIVERMEMORYDATA = win32more.Graphics.DirectDraw.DD_GETAVAILDRIVERMEMORYDATA_head
    DD_GETAVAILDRIVERMEMORYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("DDSCaps", win32more.Graphics.DirectDraw.DDSCAPS),
        ("dwTotal", UInt32),
        ("dwFree", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("GetAvailDriverMemory", c_void_p),
    ]
    return DD_GETAVAILDRIVERMEMORYDATA
def _define_DD_FREEDRIVERMEMORYDATA_head():
    class DD_FREEDRIVERMEMORYDATA(Structure):
        pass
    return DD_FREEDRIVERMEMORYDATA
def _define_DD_FREEDRIVERMEMORYDATA():
    DD_FREEDRIVERMEMORYDATA = win32more.Graphics.DirectDraw.DD_FREEDRIVERMEMORYDATA_head
    DD_FREEDRIVERMEMORYDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("FreeDriverMemory", c_void_p),
    ]
    return DD_FREEDRIVERMEMORYDATA
def _define_DD_SETEXCLUSIVEMODEDATA_head():
    class DD_SETEXCLUSIVEMODEDATA(Structure):
        pass
    return DD_SETEXCLUSIVEMODEDATA
def _define_DD_SETEXCLUSIVEMODEDATA():
    DD_SETEXCLUSIVEMODEDATA = win32more.Graphics.DirectDraw.DD_SETEXCLUSIVEMODEDATA_head
    DD_SETEXCLUSIVEMODEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("dwEnterExcl", UInt32),
        ("dwReserved", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("SetExclusiveMode", c_void_p),
    ]
    return DD_SETEXCLUSIVEMODEDATA
def _define_DD_FLIPTOGDISURFACEDATA_head():
    class DD_FLIPTOGDISURFACEDATA(Structure):
        pass
    return DD_FLIPTOGDISURFACEDATA
def _define_DD_FLIPTOGDISURFACEDATA():
    DD_FLIPTOGDISURFACEDATA = win32more.Graphics.DirectDraw.DD_FLIPTOGDISURFACEDATA_head
    DD_FLIPTOGDISURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("dwToGDI", UInt32),
        ("dwReserved", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
        ("FlipToGDISurface", c_void_p),
    ]
    return DD_FLIPTOGDISURFACEDATA
def _define_DD_SYNCSURFACEDATA_head():
    class DD_SYNCSURFACEDATA(Structure):
        pass
    return DD_SYNCSURFACEDATA
def _define_DD_SYNCSURFACEDATA():
    DD_SYNCSURFACEDATA = win32more.Graphics.DirectDraw.DD_SYNCSURFACEDATA_head
    DD_SYNCSURFACEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpDDSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwSurfaceOffset", UInt32),
        ("fpLockPtr", UIntPtr),
        ("lPitch", Int32),
        ("dwOverlayOffset", UInt32),
        ("dwDriverReserved1", UInt32),
        ("dwDriverReserved2", UInt32),
        ("dwDriverReserved3", UInt32),
        ("dwDriverReserved4", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_SYNCSURFACEDATA
def _define_DD_SYNCVIDEOPORTDATA_head():
    class DD_SYNCVIDEOPORTDATA(Structure):
        pass
    return DD_SYNCVIDEOPORTDATA
def _define_DD_SYNCVIDEOPORTDATA():
    DD_SYNCVIDEOPORTDATA = win32more.Graphics.DirectDraw.DD_SYNCVIDEOPORTDATA_head
    DD_SYNCVIDEOPORTDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpVideoPort", POINTER(win32more.Graphics.DirectDraw.DD_VIDEOPORT_LOCAL_head)),
        ("dwOriginOffset", UInt32),
        ("dwHeight", UInt32),
        ("dwVBIHeight", UInt32),
        ("dwDriverReserved1", UInt32),
        ("dwDriverReserved2", UInt32),
        ("dwDriverReserved3", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_SYNCVIDEOPORTDATA
def _define_DD_GETMOCOMPGUIDSDATA_head():
    class DD_GETMOCOMPGUIDSDATA(Structure):
        pass
    return DD_GETMOCOMPGUIDSDATA
def _define_DD_GETMOCOMPGUIDSDATA():
    DD_GETMOCOMPGUIDSDATA = win32more.Graphics.DirectDraw.DD_GETMOCOMPGUIDSDATA_head
    DD_GETMOCOMPGUIDSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("dwNumGuids", UInt32),
        ("lpGuids", POINTER(Guid)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_GETMOCOMPGUIDSDATA
def _define_DD_GETMOCOMPFORMATSDATA_head():
    class DD_GETMOCOMPFORMATSDATA(Structure):
        pass
    return DD_GETMOCOMPFORMATSDATA
def _define_DD_GETMOCOMPFORMATSDATA():
    DD_GETMOCOMPFORMATSDATA = win32more.Graphics.DirectDraw.DD_GETMOCOMPFORMATSDATA_head
    DD_GETMOCOMPFORMATSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwNumFormats", UInt32),
        ("lpFormats", POINTER(win32more.Graphics.DirectDraw.DDPIXELFORMAT_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_GETMOCOMPFORMATSDATA
def _define_DD_CREATEMOCOMPDATA_head():
    class DD_CREATEMOCOMPDATA(Structure):
        pass
    return DD_CREATEMOCOMPDATA
def _define_DD_CREATEMOCOMPDATA():
    DD_CREATEMOCOMPDATA = win32more.Graphics.DirectDraw.DD_CREATEMOCOMPDATA_head
    DD_CREATEMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DD_MOTIONCOMP_LOCAL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwUncompWidth", UInt32),
        ("dwUncompHeight", UInt32),
        ("ddUncompPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("lpData", c_void_p),
        ("dwDataSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_CREATEMOCOMPDATA
def _define_DDCOMPBUFFERINFO_head():
    class DDCOMPBUFFERINFO(Structure):
        pass
    return DDCOMPBUFFERINFO
def _define_DDCOMPBUFFERINFO():
    DDCOMPBUFFERINFO = win32more.Graphics.DirectDraw.DDCOMPBUFFERINFO_head
    DDCOMPBUFFERINFO._fields_ = [
        ("dwSize", UInt32),
        ("dwNumCompBuffers", UInt32),
        ("dwWidthToCreate", UInt32),
        ("dwHeightToCreate", UInt32),
        ("dwBytesToAllocate", UInt32),
        ("ddCompCaps", win32more.Graphics.DirectDraw.DDSCAPS2),
        ("ddPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
    ]
    return DDCOMPBUFFERINFO
def _define_DD_GETMOCOMPCOMPBUFFDATA_head():
    class DD_GETMOCOMPCOMPBUFFDATA(Structure):
        pass
    return DD_GETMOCOMPCOMPBUFFDATA
def _define_DD_GETMOCOMPCOMPBUFFDATA():
    DD_GETMOCOMPCOMPBUFFDATA = win32more.Graphics.DirectDraw.DD_GETMOCOMPCOMPBUFFDATA_head
    DD_GETMOCOMPCOMPBUFFDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("ddPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwNumTypesCompBuffs", UInt32),
        ("lpCompBuffInfo", POINTER(win32more.Graphics.DirectDraw.DDCOMPBUFFERINFO_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_GETMOCOMPCOMPBUFFDATA
def _define_DD_GETINTERNALMOCOMPDATA_head():
    class DD_GETINTERNALMOCOMPDATA(Structure):
        pass
    return DD_GETINTERNALMOCOMPDATA
def _define_DD_GETINTERNALMOCOMPDATA():
    DD_GETINTERNALMOCOMPDATA = win32more.Graphics.DirectDraw.DD_GETINTERNALMOCOMPDATA_head
    DD_GETINTERNALMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpGuid", POINTER(Guid)),
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("ddPixelFormat", win32more.Graphics.DirectDraw.DDPIXELFORMAT),
        ("dwScratchMemAlloc", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_GETINTERNALMOCOMPDATA
def _define_DD_BEGINMOCOMPFRAMEDATA_head():
    class DD_BEGINMOCOMPFRAMEDATA(Structure):
        pass
    return DD_BEGINMOCOMPFRAMEDATA
def _define_DD_BEGINMOCOMPFRAMEDATA():
    DD_BEGINMOCOMPFRAMEDATA = win32more.Graphics.DirectDraw.DD_BEGINMOCOMPFRAMEDATA_head
    DD_BEGINMOCOMPFRAMEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DD_MOTIONCOMP_LOCAL_head)),
        ("lpDestSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwInputDataSize", UInt32),
        ("lpInputData", c_void_p),
        ("dwOutputDataSize", UInt32),
        ("lpOutputData", c_void_p),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_BEGINMOCOMPFRAMEDATA
def _define_DD_ENDMOCOMPFRAMEDATA_head():
    class DD_ENDMOCOMPFRAMEDATA(Structure):
        pass
    return DD_ENDMOCOMPFRAMEDATA
def _define_DD_ENDMOCOMPFRAMEDATA():
    DD_ENDMOCOMPFRAMEDATA = win32more.Graphics.DirectDraw.DD_ENDMOCOMPFRAMEDATA_head
    DD_ENDMOCOMPFRAMEDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DD_MOTIONCOMP_LOCAL_head)),
        ("lpInputData", c_void_p),
        ("dwInputDataSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_ENDMOCOMPFRAMEDATA
def _define_DDMOCOMPBUFFERINFO_head():
    class DDMOCOMPBUFFERINFO(Structure):
        pass
    return DDMOCOMPBUFFERINFO
def _define_DDMOCOMPBUFFERINFO():
    DDMOCOMPBUFFERINFO = win32more.Graphics.DirectDraw.DDMOCOMPBUFFERINFO_head
    DDMOCOMPBUFFERINFO._fields_ = [
        ("dwSize", UInt32),
        ("lpCompSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwDataOffset", UInt32),
        ("dwDataSize", UInt32),
        ("lpPrivate", c_void_p),
    ]
    return DDMOCOMPBUFFERINFO
def _define_DD_RENDERMOCOMPDATA_head():
    class DD_RENDERMOCOMPDATA(Structure):
        pass
    return DD_RENDERMOCOMPDATA
def _define_DD_RENDERMOCOMPDATA():
    DD_RENDERMOCOMPDATA = win32more.Graphics.DirectDraw.DD_RENDERMOCOMPDATA_head
    DD_RENDERMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DD_MOTIONCOMP_LOCAL_head)),
        ("dwNumBuffers", UInt32),
        ("lpBufferInfo", POINTER(win32more.Graphics.DirectDraw.DDMOCOMPBUFFERINFO_head)),
        ("dwFunction", UInt32),
        ("lpInputData", c_void_p),
        ("dwInputDataSize", UInt32),
        ("lpOutputData", c_void_p),
        ("dwOutputDataSize", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_RENDERMOCOMPDATA
def _define_DD_QUERYMOCOMPSTATUSDATA_head():
    class DD_QUERYMOCOMPSTATUSDATA(Structure):
        pass
    return DD_QUERYMOCOMPSTATUSDATA
def _define_DD_QUERYMOCOMPSTATUSDATA():
    DD_QUERYMOCOMPSTATUSDATA = win32more.Graphics.DirectDraw.DD_QUERYMOCOMPSTATUSDATA_head
    DD_QUERYMOCOMPSTATUSDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DD_MOTIONCOMP_LOCAL_head)),
        ("lpSurface", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("dwFlags", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_QUERYMOCOMPSTATUSDATA
def _define_DD_DESTROYMOCOMPDATA_head():
    class DD_DESTROYMOCOMPDATA(Structure):
        pass
    return DD_DESTROYMOCOMPDATA
def _define_DD_DESTROYMOCOMPDATA():
    DD_DESTROYMOCOMPDATA = win32more.Graphics.DirectDraw.DD_DESTROYMOCOMPDATA_head
    DD_DESTROYMOCOMPDATA._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpMoComp", POINTER(win32more.Graphics.DirectDraw.DD_MOTIONCOMP_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_DESTROYMOCOMPDATA
def _define_DD_CREATESURFACEEXDATA_head():
    class DD_CREATESURFACEEXDATA(Structure):
        pass
    return DD_CREATESURFACEEXDATA
def _define_DD_CREATESURFACEEXDATA():
    DD_CREATESURFACEEXDATA = win32more.Graphics.DirectDraw.DD_CREATESURFACEEXDATA_head
    DD_CREATESURFACEEXDATA._fields_ = [
        ("dwFlags", UInt32),
        ("lpDDLcl", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("lpDDSLcl", POINTER(win32more.Graphics.DirectDraw.DD_SURFACE_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_CREATESURFACEEXDATA
def _define_DD_GETDRIVERSTATEDATA_head():
    class DD_GETDRIVERSTATEDATA(Structure):
        pass
    return DD_GETDRIVERSTATEDATA
def _define_DD_GETDRIVERSTATEDATA():
    DD_GETDRIVERSTATEDATA = win32more.Graphics.DirectDraw.DD_GETDRIVERSTATEDATA_head
    class DD_GETDRIVERSTATEDATA__Anonymous_e__Union(Union):
        pass
    DD_GETDRIVERSTATEDATA__Anonymous_e__Union._fields_ = [
        ("lpDD", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_GLOBAL_head)),
        ("dwhContext", UIntPtr),
    ]
    DD_GETDRIVERSTATEDATA._anonymous_ = [
        'Anonymous',
    ]
    DD_GETDRIVERSTATEDATA._fields_ = [
        ("dwFlags", UInt32),
        ("Anonymous", DD_GETDRIVERSTATEDATA__Anonymous_e__Union),
        ("lpdwStates", POINTER(UInt32)),
        ("dwLength", UInt32),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_GETDRIVERSTATEDATA
def _define_DD_DESTROYDDLOCALDATA_head():
    class DD_DESTROYDDLOCALDATA(Structure):
        pass
    return DD_DESTROYDDLOCALDATA
def _define_DD_DESTROYDDLOCALDATA():
    DD_DESTROYDDLOCALDATA = win32more.Graphics.DirectDraw.DD_DESTROYDDLOCALDATA_head
    DD_DESTROYDDLOCALDATA._fields_ = [
        ("dwFlags", UInt32),
        ("pDDLcl", POINTER(win32more.Graphics.DirectDraw.DD_DIRECTDRAW_LOCAL_head)),
        ("ddRVal", win32more.Foundation.HRESULT),
    ]
    return DD_DESTROYDDLOCALDATA
def _define_MDL_head():
    class MDL(Structure):
        pass
    return MDL
def _define_MDL():
    MDL = win32more.Graphics.DirectDraw.MDL_head
    class MDL__EPROCESS(Structure):
        pass
    MDL._fields_ = [
        ("MdlNext", POINTER(win32more.Graphics.DirectDraw.MDL_head)),
        ("MdlSize", Int16),
        ("MdlFlags", Int16),
        ("Process", POINTER(MDL__EPROCESS)),
        ("lpMappedSystemVa", POINTER(UInt32)),
        ("lpStartVa", POINTER(UInt32)),
        ("ByteCount", UInt32),
        ("ByteOffset", UInt32),
    ]
    return MDL
def _define_DDSURFACEDATA_head():
    class DDSURFACEDATA(Structure):
        pass
    return DDSURFACEDATA
def _define_DDSURFACEDATA():
    DDSURFACEDATA = win32more.Graphics.DirectDraw.DDSURFACEDATA_head
    DDSURFACEDATA._fields_ = [
        ("ddsCaps", UInt32),
        ("dwSurfaceOffset", UInt32),
        ("fpLockPtr", UIntPtr),
        ("dwWidth", UInt32),
        ("dwHeight", UInt32),
        ("lPitch", Int32),
        ("dwOverlayFlags", UInt32),
        ("dwOverlayOffset", UInt32),
        ("dwOverlaySrcWidth", UInt32),
        ("dwOverlaySrcHeight", UInt32),
        ("dwOverlayDestWidth", UInt32),
        ("dwOverlayDestHeight", UInt32),
        ("dwVideoPortId", UInt32),
        ("dwFormatFlags", UInt32),
        ("dwFormatFourCC", UInt32),
        ("dwFormatBitCount", UInt32),
        ("dwRBitMask", UInt32),
        ("dwGBitMask", UInt32),
        ("dwBBitMask", UInt32),
        ("dwDriverReserved1", UInt32),
        ("dwDriverReserved2", UInt32),
        ("dwDriverReserved3", UInt32),
        ("dwDriverReserved4", UInt32),
    ]
    return DDSURFACEDATA
def _define_DDVIDEOPORTDATA_head():
    class DDVIDEOPORTDATA(Structure):
        pass
    return DDVIDEOPORTDATA
def _define_DDVIDEOPORTDATA():
    DDVIDEOPORTDATA = win32more.Graphics.DirectDraw.DDVIDEOPORTDATA_head
    DDVIDEOPORTDATA._fields_ = [
        ("dwVideoPortId", UInt32),
        ("dwVPFlags", UInt32),
        ("dwOriginOffset", UInt32),
        ("dwHeight", UInt32),
        ("dwVBIHeight", UInt32),
        ("dwDriverReserved1", UInt32),
        ("dwDriverReserved2", UInt32),
        ("dwDriverReserved3", UInt32),
    ]
    return DDVIDEOPORTDATA
def _define_DX_IRQDATA_head():
    class DX_IRQDATA(Structure):
        pass
    return DX_IRQDATA
def _define_DX_IRQDATA():
    DX_IRQDATA = win32more.Graphics.DirectDraw.DX_IRQDATA_head
    DX_IRQDATA._fields_ = [
        ("dwIrqFlags", UInt32),
    ]
    return DX_IRQDATA
def _define_PDX_IRQCALLBACK():
    return CFUNCTYPE(Void,POINTER(win32more.Graphics.DirectDraw.DX_IRQDATA_head), use_last_error=False)
def _define_DDGETIRQINFO_head():
    class DDGETIRQINFO(Structure):
        pass
    return DDGETIRQINFO
def _define_DDGETIRQINFO():
    DDGETIRQINFO = win32more.Graphics.DirectDraw.DDGETIRQINFO_head
    DDGETIRQINFO._fields_ = [
        ("dwFlags", UInt32),
    ]
    return DDGETIRQINFO
def _define_DDENABLEIRQINFO_head():
    class DDENABLEIRQINFO(Structure):
        pass
    return DDENABLEIRQINFO
def _define_DDENABLEIRQINFO():
    DDENABLEIRQINFO = win32more.Graphics.DirectDraw.DDENABLEIRQINFO_head
    DDENABLEIRQINFO._fields_ = [
        ("dwIRQSources", UInt32),
        ("dwLine", UInt32),
        ("IRQCallback", win32more.Graphics.DirectDraw.PDX_IRQCALLBACK),
        ("lpIRQData", POINTER(win32more.Graphics.DirectDraw.DX_IRQDATA_head)),
    ]
    return DDENABLEIRQINFO
def _define_DDSKIPNEXTFIELDINFO_head():
    class DDSKIPNEXTFIELDINFO(Structure):
        pass
    return DDSKIPNEXTFIELDINFO
def _define_DDSKIPNEXTFIELDINFO():
    DDSKIPNEXTFIELDINFO = win32more.Graphics.DirectDraw.DDSKIPNEXTFIELDINFO_head
    DDSKIPNEXTFIELDINFO._fields_ = [
        ("lpVideoPortData", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDATA_head)),
        ("dwSkipFlags", UInt32),
    ]
    return DDSKIPNEXTFIELDINFO
def _define_DDBOBNEXTFIELDINFO_head():
    class DDBOBNEXTFIELDINFO(Structure):
        pass
    return DDBOBNEXTFIELDINFO
def _define_DDBOBNEXTFIELDINFO():
    DDBOBNEXTFIELDINFO = win32more.Graphics.DirectDraw.DDBOBNEXTFIELDINFO_head
    DDBOBNEXTFIELDINFO._fields_ = [
        ("lpSurface", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
    ]
    return DDBOBNEXTFIELDINFO
def _define_DDSETSTATEININFO_head():
    class DDSETSTATEININFO(Structure):
        pass
    return DDSETSTATEININFO
def _define_DDSETSTATEININFO():
    DDSETSTATEININFO = win32more.Graphics.DirectDraw.DDSETSTATEININFO_head
    DDSETSTATEININFO._fields_ = [
        ("lpSurfaceData", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
        ("lpVideoPortData", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDATA_head)),
    ]
    return DDSETSTATEININFO
def _define_DDSETSTATEOUTINFO_head():
    class DDSETSTATEOUTINFO(Structure):
        pass
    return DDSETSTATEOUTINFO
def _define_DDSETSTATEOUTINFO():
    DDSETSTATEOUTINFO = win32more.Graphics.DirectDraw.DDSETSTATEOUTINFO_head
    DDSETSTATEOUTINFO._fields_ = [
        ("bSoftwareAutoflip", win32more.Foundation.BOOL),
        ("dwSurfaceIndex", UInt32),
        ("dwVBISurfaceIndex", UInt32),
    ]
    return DDSETSTATEOUTINFO
def _define_DDLOCKININFO_head():
    class DDLOCKININFO(Structure):
        pass
    return DDLOCKININFO
def _define_DDLOCKININFO():
    DDLOCKININFO = win32more.Graphics.DirectDraw.DDLOCKININFO_head
    DDLOCKININFO._fields_ = [
        ("lpSurfaceData", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
    ]
    return DDLOCKININFO
def _define_DDLOCKOUTINFO_head():
    class DDLOCKOUTINFO(Structure):
        pass
    return DDLOCKOUTINFO
def _define_DDLOCKOUTINFO():
    DDLOCKOUTINFO = win32more.Graphics.DirectDraw.DDLOCKOUTINFO_head
    DDLOCKOUTINFO._fields_ = [
        ("dwSurfacePtr", UIntPtr),
    ]
    return DDLOCKOUTINFO
def _define_DDFLIPOVERLAYINFO_head():
    class DDFLIPOVERLAYINFO(Structure):
        pass
    return DDFLIPOVERLAYINFO
def _define_DDFLIPOVERLAYINFO():
    DDFLIPOVERLAYINFO = win32more.Graphics.DirectDraw.DDFLIPOVERLAYINFO_head
    DDFLIPOVERLAYINFO._fields_ = [
        ("lpCurrentSurface", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
        ("lpTargetSurface", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
        ("dwFlags", UInt32),
    ]
    return DDFLIPOVERLAYINFO
def _define_DDFLIPVIDEOPORTINFO_head():
    class DDFLIPVIDEOPORTINFO(Structure):
        pass
    return DDFLIPVIDEOPORTINFO
def _define_DDFLIPVIDEOPORTINFO():
    DDFLIPVIDEOPORTINFO = win32more.Graphics.DirectDraw.DDFLIPVIDEOPORTINFO_head
    DDFLIPVIDEOPORTINFO._fields_ = [
        ("lpVideoPortData", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDATA_head)),
        ("lpCurrentSurface", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
        ("lpTargetSurface", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
        ("dwFlipVPFlags", UInt32),
    ]
    return DDFLIPVIDEOPORTINFO
def _define_DDGETPOLARITYININFO_head():
    class DDGETPOLARITYININFO(Structure):
        pass
    return DDGETPOLARITYININFO
def _define_DDGETPOLARITYININFO():
    DDGETPOLARITYININFO = win32more.Graphics.DirectDraw.DDGETPOLARITYININFO_head
    DDGETPOLARITYININFO._fields_ = [
        ("lpVideoPortData", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDATA_head)),
    ]
    return DDGETPOLARITYININFO
def _define_DDGETPOLARITYOUTINFO_head():
    class DDGETPOLARITYOUTINFO(Structure):
        pass
    return DDGETPOLARITYOUTINFO
def _define_DDGETPOLARITYOUTINFO():
    DDGETPOLARITYOUTINFO = win32more.Graphics.DirectDraw.DDGETPOLARITYOUTINFO_head
    DDGETPOLARITYOUTINFO._fields_ = [
        ("bPolarity", UInt32),
    ]
    return DDGETPOLARITYOUTINFO
def _define_DDGETCURRENTAUTOFLIPININFO_head():
    class DDGETCURRENTAUTOFLIPININFO(Structure):
        pass
    return DDGETCURRENTAUTOFLIPININFO
def _define_DDGETCURRENTAUTOFLIPININFO():
    DDGETCURRENTAUTOFLIPININFO = win32more.Graphics.DirectDraw.DDGETCURRENTAUTOFLIPININFO_head
    DDGETCURRENTAUTOFLIPININFO._fields_ = [
        ("lpVideoPortData", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDATA_head)),
    ]
    return DDGETCURRENTAUTOFLIPININFO
def _define_DDGETCURRENTAUTOFLIPOUTINFO_head():
    class DDGETCURRENTAUTOFLIPOUTINFO(Structure):
        pass
    return DDGETCURRENTAUTOFLIPOUTINFO
def _define_DDGETCURRENTAUTOFLIPOUTINFO():
    DDGETCURRENTAUTOFLIPOUTINFO = win32more.Graphics.DirectDraw.DDGETCURRENTAUTOFLIPOUTINFO_head
    DDGETCURRENTAUTOFLIPOUTINFO._fields_ = [
        ("dwSurfaceIndex", UInt32),
        ("dwVBISurfaceIndex", UInt32),
    ]
    return DDGETCURRENTAUTOFLIPOUTINFO
def _define_DDGETPREVIOUSAUTOFLIPININFO_head():
    class DDGETPREVIOUSAUTOFLIPININFO(Structure):
        pass
    return DDGETPREVIOUSAUTOFLIPININFO
def _define_DDGETPREVIOUSAUTOFLIPININFO():
    DDGETPREVIOUSAUTOFLIPININFO = win32more.Graphics.DirectDraw.DDGETPREVIOUSAUTOFLIPININFO_head
    DDGETPREVIOUSAUTOFLIPININFO._fields_ = [
        ("lpVideoPortData", POINTER(win32more.Graphics.DirectDraw.DDVIDEOPORTDATA_head)),
    ]
    return DDGETPREVIOUSAUTOFLIPININFO
def _define_DDGETPREVIOUSAUTOFLIPOUTINFO_head():
    class DDGETPREVIOUSAUTOFLIPOUTINFO(Structure):
        pass
    return DDGETPREVIOUSAUTOFLIPOUTINFO
def _define_DDGETPREVIOUSAUTOFLIPOUTINFO():
    DDGETPREVIOUSAUTOFLIPOUTINFO = win32more.Graphics.DirectDraw.DDGETPREVIOUSAUTOFLIPOUTINFO_head
    DDGETPREVIOUSAUTOFLIPOUTINFO._fields_ = [
        ("dwSurfaceIndex", UInt32),
        ("dwVBISurfaceIndex", UInt32),
    ]
    return DDGETPREVIOUSAUTOFLIPOUTINFO
def _define_DDTRANSFERININFO_head():
    class DDTRANSFERININFO(Structure):
        pass
    return DDTRANSFERININFO
def _define_DDTRANSFERININFO():
    DDTRANSFERININFO = win32more.Graphics.DirectDraw.DDTRANSFERININFO_head
    DDTRANSFERININFO._fields_ = [
        ("lpSurfaceData", POINTER(win32more.Graphics.DirectDraw.DDSURFACEDATA_head)),
        ("dwStartLine", UInt32),
        ("dwEndLine", UInt32),
        ("dwTransferID", UIntPtr),
        ("dwTransferFlags", UInt32),
        ("lpDestMDL", POINTER(win32more.Graphics.DirectDraw.MDL_head)),
    ]
    return DDTRANSFERININFO
def _define_DDTRANSFEROUTINFO_head():
    class DDTRANSFEROUTINFO(Structure):
        pass
    return DDTRANSFEROUTINFO
def _define_DDTRANSFEROUTINFO():
    DDTRANSFEROUTINFO = win32more.Graphics.DirectDraw.DDTRANSFEROUTINFO_head
    DDTRANSFEROUTINFO._fields_ = [
        ("dwBufferPolarity", UInt32),
    ]
    return DDTRANSFEROUTINFO
def _define_DDGETTRANSFERSTATUSOUTINFO_head():
    class DDGETTRANSFERSTATUSOUTINFO(Structure):
        pass
    return DDGETTRANSFERSTATUSOUTINFO
def _define_DDGETTRANSFERSTATUSOUTINFO():
    DDGETTRANSFERSTATUSOUTINFO = win32more.Graphics.DirectDraw.DDGETTRANSFERSTATUSOUTINFO_head
    DDGETTRANSFERSTATUSOUTINFO._fields_ = [
        ("dwTransferID", UIntPtr),
    ]
    return DDGETTRANSFERSTATUSOUTINFO
def _define_PDX_GETIRQINFO():
    return CFUNCTYPE(UInt32,c_void_p,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDGETIRQINFO_head), use_last_error=False)
def _define_PDX_ENABLEIRQ():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDENABLEIRQINFO_head),c_void_p, use_last_error=False)
def _define_PDX_SKIPNEXTFIELD():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDSKIPNEXTFIELDINFO_head),c_void_p, use_last_error=False)
def _define_PDX_BOBNEXTFIELD():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDBOBNEXTFIELDINFO_head),c_void_p, use_last_error=False)
def _define_PDX_SETSTATE():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDSETSTATEININFO_head),POINTER(win32more.Graphics.DirectDraw.DDSETSTATEOUTINFO_head), use_last_error=False)
def _define_PDX_LOCK():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDLOCKININFO_head),POINTER(win32more.Graphics.DirectDraw.DDLOCKOUTINFO_head), use_last_error=False)
def _define_PDX_FLIPOVERLAY():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDFLIPOVERLAYINFO_head),c_void_p, use_last_error=False)
def _define_PDX_FLIPVIDEOPORT():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDFLIPVIDEOPORTINFO_head),c_void_p, use_last_error=False)
def _define_PDX_GETPOLARITY():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDGETPOLARITYININFO_head),POINTER(win32more.Graphics.DirectDraw.DDGETPOLARITYOUTINFO_head), use_last_error=False)
def _define_PDX_GETCURRENTAUTOFLIP():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDGETCURRENTAUTOFLIPININFO_head),POINTER(win32more.Graphics.DirectDraw.DDGETCURRENTAUTOFLIPOUTINFO_head), use_last_error=False)
def _define_PDX_GETPREVIOUSAUTOFLIP():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDGETPREVIOUSAUTOFLIPININFO_head),POINTER(win32more.Graphics.DirectDraw.DDGETPREVIOUSAUTOFLIPOUTINFO_head), use_last_error=False)
def _define_PDX_TRANSFER():
    return CFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDTRANSFERININFO_head),POINTER(win32more.Graphics.DirectDraw.DDTRANSFEROUTINFO_head), use_last_error=False)
def _define_PDX_GETTRANSFERSTATUS():
    return CFUNCTYPE(UInt32,c_void_p,c_void_p,POINTER(win32more.Graphics.DirectDraw.DDGETTRANSFERSTATUSOUTINFO_head), use_last_error=False)
def _define_DXAPI_INTERFACE_head():
    class DXAPI_INTERFACE(Structure):
        pass
    return DXAPI_INTERFACE
def _define_DXAPI_INTERFACE():
    DXAPI_INTERFACE = win32more.Graphics.DirectDraw.DXAPI_INTERFACE_head
    DXAPI_INTERFACE._fields_ = [
        ("Size", UInt16),
        ("Version", UInt16),
        ("Context", c_void_p),
        ("InterfaceReference", c_void_p),
        ("InterfaceDereference", c_void_p),
        ("DxGetIrqInfo", win32more.Graphics.DirectDraw.PDX_GETIRQINFO),
        ("DxEnableIrq", win32more.Graphics.DirectDraw.PDX_ENABLEIRQ),
        ("DxSkipNextField", win32more.Graphics.DirectDraw.PDX_SKIPNEXTFIELD),
        ("DxBobNextField", win32more.Graphics.DirectDraw.PDX_BOBNEXTFIELD),
        ("DxSetState", win32more.Graphics.DirectDraw.PDX_SETSTATE),
        ("DxLock", win32more.Graphics.DirectDraw.PDX_LOCK),
        ("DxFlipOverlay", win32more.Graphics.DirectDraw.PDX_FLIPOVERLAY),
        ("DxFlipVideoPort", win32more.Graphics.DirectDraw.PDX_FLIPVIDEOPORT),
        ("DxGetPolarity", win32more.Graphics.DirectDraw.PDX_GETPOLARITY),
        ("DxGetCurrentAutoflip", win32more.Graphics.DirectDraw.PDX_GETCURRENTAUTOFLIP),
        ("DxGetPreviousAutoflip", win32more.Graphics.DirectDraw.PDX_GETPREVIOUSAUTOFLIP),
        ("DxTransfer", win32more.Graphics.DirectDraw.PDX_TRANSFER),
        ("DxGetTransferStatus", win32more.Graphics.DirectDraw.PDX_GETTRANSFERSTATUS),
    ]
    return DXAPI_INTERFACE
def _define_DirectDrawEnumerateW():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.LPDDENUMCALLBACKW,c_void_p, use_last_error=False)(("DirectDrawEnumerateW", windll["DDRAW"]), ((1, 'lpCallback'),(1, 'lpContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DirectDrawEnumerate():
    return win32more.Graphics.DirectDraw.DirectDrawEnumerateW
def _define_DirectDrawEnumerateA():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.LPDDENUMCALLBACKA,c_void_p, use_last_error=False)(("DirectDrawEnumerateA", windll["DDRAW"]), ((1, 'lpCallback'),(1, 'lpContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DirectDrawEnumerateExW():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.LPDDENUMCALLBACKEXW,c_void_p,UInt32, use_last_error=False)(("DirectDrawEnumerateExW", windll["DDRAW"]), ((1, 'lpCallback'),(1, 'lpContext'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DirectDrawEnumerateEx():
    return win32more.Graphics.DirectDraw.DirectDrawEnumerateExW
def _define_DirectDrawEnumerateExA():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.DirectDraw.LPDDENUMCALLBACKEXA,c_void_p,UInt32, use_last_error=False)(("DirectDrawEnumerateExA", windll["DDRAW"]), ((1, 'lpCallback'),(1, 'lpContext'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DirectDrawCreate():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Graphics.DirectDraw.IDirectDraw_head),win32more.System.Com.IUnknown_head, use_last_error=False)(("DirectDrawCreate", windll["DDRAW"]), ((1, 'lpGUID'),(1, 'lplpDD'),(1, 'pUnkOuter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DirectDrawCreateEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(c_void_p),POINTER(Guid),win32more.System.Com.IUnknown_head, use_last_error=False)(("DirectDrawCreateEx", windll["DDRAW"]), ((1, 'lpGuid'),(1, 'lplpDD'),(1, 'iid'),(1, 'pUnkOuter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DirectDrawCreateClipper():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.DirectDraw.IDirectDrawClipper_head),win32more.System.Com.IUnknown_head, use_last_error=False)(("DirectDrawCreateClipper", windll["DDRAW"]), ((1, 'dwFlags'),(1, 'lplpDDClipper'),(1, 'pUnkOuter'),))
    except (FileNotFoundError, AttributeError):
        return None
__all__ = [
    "DIRECTDRAW_VERSION",
    "_FACDD",
    "CLSID_DirectDraw",
    "CLSID_DirectDraw7",
    "CLSID_DirectDrawClipper",
    "DDENUM_ATTACHEDSECONDARYDEVICES",
    "DDENUM_DETACHEDSECONDARYDEVICES",
    "DDENUM_NONDISPLAYDEVICES",
    "DDCREATE_HARDWAREONLY",
    "DDCREATE_EMULATIONONLY",
    "MAX_DDDEVICEID_STRING",
    "DDGDI_GETHOSTIDENTIFIER",
    "DDSD_CAPS",
    "DDSD_HEIGHT",
    "DDSD_WIDTH",
    "DDSD_PITCH",
    "DDSD_BACKBUFFERCOUNT",
    "DDSD_ZBUFFERBITDEPTH",
    "DDSD_ALPHABITDEPTH",
    "DDSD_LPSURFACE",
    "DDSD_PIXELFORMAT",
    "DDSD_CKDESTOVERLAY",
    "DDSD_CKDESTBLT",
    "DDSD_CKSRCOVERLAY",
    "DDSD_CKSRCBLT",
    "DDSD_MIPMAPCOUNT",
    "DDSD_REFRESHRATE",
    "DDSD_LINEARSIZE",
    "DDSD_TEXTURESTAGE",
    "DDSD_FVF",
    "DDSD_SRCVBHANDLE",
    "DDSD_DEPTH",
    "DDSD_ALL",
    "DDOSD_GUID",
    "DDOSD_COMPRESSION_RATIO",
    "DDOSD_SCAPS",
    "DDOSD_OSCAPS",
    "DDOSD_ALL",
    "DDOSDCAPS_OPTCOMPRESSED",
    "DDOSDCAPS_OPTREORDERED",
    "DDOSDCAPS_MONOLITHICMIPMAP",
    "DDOSDCAPS_VALIDSCAPS",
    "DDOSDCAPS_VALIDOSCAPS",
    "DDCOLOR_BRIGHTNESS",
    "DDCOLOR_CONTRAST",
    "DDCOLOR_HUE",
    "DDCOLOR_SATURATION",
    "DDCOLOR_SHARPNESS",
    "DDCOLOR_GAMMA",
    "DDCOLOR_COLORENABLE",
    "DDSCAPS_RESERVED1",
    "DDSCAPS_ALPHA",
    "DDSCAPS_BACKBUFFER",
    "DDSCAPS_COMPLEX",
    "DDSCAPS_FLIP",
    "DDSCAPS_FRONTBUFFER",
    "DDSCAPS_OFFSCREENPLAIN",
    "DDSCAPS_OVERLAY",
    "DDSCAPS_PALETTE",
    "DDSCAPS_PRIMARYSURFACE",
    "DDSCAPS_RESERVED3",
    "DDSCAPS_PRIMARYSURFACELEFT",
    "DDSCAPS_SYSTEMMEMORY",
    "DDSCAPS_TEXTURE",
    "DDSCAPS_3DDEVICE",
    "DDSCAPS_VIDEOMEMORY",
    "DDSCAPS_VISIBLE",
    "DDSCAPS_WRITEONLY",
    "DDSCAPS_ZBUFFER",
    "DDSCAPS_OWNDC",
    "DDSCAPS_LIVEVIDEO",
    "DDSCAPS_HWCODEC",
    "DDSCAPS_MODEX",
    "DDSCAPS_MIPMAP",
    "DDSCAPS_RESERVED2",
    "DDSCAPS_ALLOCONLOAD",
    "DDSCAPS_VIDEOPORT",
    "DDSCAPS_LOCALVIDMEM",
    "DDSCAPS_NONLOCALVIDMEM",
    "DDSCAPS_STANDARDVGAMODE",
    "DDSCAPS_OPTIMIZED",
    "DDSCAPS2_RESERVED4",
    "DDSCAPS2_HARDWAREDEINTERLACE",
    "DDSCAPS2_HINTDYNAMIC",
    "DDSCAPS2_HINTSTATIC",
    "DDSCAPS2_TEXTUREMANAGE",
    "DDSCAPS2_RESERVED1",
    "DDSCAPS2_RESERVED2",
    "DDSCAPS2_OPAQUE",
    "DDSCAPS2_HINTANTIALIASING",
    "DDSCAPS2_CUBEMAP",
    "DDSCAPS2_CUBEMAP_POSITIVEX",
    "DDSCAPS2_CUBEMAP_NEGATIVEX",
    "DDSCAPS2_CUBEMAP_POSITIVEY",
    "DDSCAPS2_CUBEMAP_NEGATIVEY",
    "DDSCAPS2_CUBEMAP_POSITIVEZ",
    "DDSCAPS2_CUBEMAP_NEGATIVEZ",
    "DDSCAPS2_MIPMAPSUBLEVEL",
    "DDSCAPS2_D3DTEXTUREMANAGE",
    "DDSCAPS2_DONOTPERSIST",
    "DDSCAPS2_STEREOSURFACELEFT",
    "DDSCAPS2_VOLUME",
    "DDSCAPS2_NOTUSERLOCKABLE",
    "DDSCAPS2_POINTS",
    "DDSCAPS2_RTPATCHES",
    "DDSCAPS2_NPATCHES",
    "DDSCAPS2_RESERVED3",
    "DDSCAPS2_DISCARDBACKBUFFER",
    "DDSCAPS2_ENABLEALPHACHANNEL",
    "DDSCAPS2_EXTENDEDFORMATPRIMARY",
    "DDSCAPS2_ADDITIONALPRIMARY",
    "DDSCAPS3_MULTISAMPLE_MASK",
    "DDSCAPS3_MULTISAMPLE_QUALITY_MASK",
    "DDSCAPS3_MULTISAMPLE_QUALITY_SHIFT",
    "DDSCAPS3_RESERVED1",
    "DDSCAPS3_RESERVED2",
    "DDSCAPS3_LIGHTWEIGHTMIPMAP",
    "DDSCAPS3_AUTOGENMIPMAP",
    "DDSCAPS3_DMAP",
    "DDSCAPS3_CREATESHAREDRESOURCE",
    "DDSCAPS3_READONLYRESOURCE",
    "DDSCAPS3_OPENSHAREDRESOURCE",
    "DDCAPS_3D",
    "DDCAPS_ALIGNBOUNDARYDEST",
    "DDCAPS_ALIGNSIZEDEST",
    "DDCAPS_ALIGNBOUNDARYSRC",
    "DDCAPS_ALIGNSIZESRC",
    "DDCAPS_ALIGNSTRIDE",
    "DDCAPS_BLT",
    "DDCAPS_BLTQUEUE",
    "DDCAPS_BLTFOURCC",
    "DDCAPS_BLTSTRETCH",
    "DDCAPS_GDI",
    "DDCAPS_OVERLAY",
    "DDCAPS_OVERLAYCANTCLIP",
    "DDCAPS_OVERLAYFOURCC",
    "DDCAPS_OVERLAYSTRETCH",
    "DDCAPS_PALETTE",
    "DDCAPS_PALETTEVSYNC",
    "DDCAPS_READSCANLINE",
    "DDCAPS_RESERVED1",
    "DDCAPS_VBI",
    "DDCAPS_ZBLTS",
    "DDCAPS_ZOVERLAYS",
    "DDCAPS_COLORKEY",
    "DDCAPS_ALPHA",
    "DDCAPS_COLORKEYHWASSIST",
    "DDCAPS_NOHARDWARE",
    "DDCAPS_BLTCOLORFILL",
    "DDCAPS_BANKSWITCHED",
    "DDCAPS_BLTDEPTHFILL",
    "DDCAPS_CANCLIP",
    "DDCAPS_CANCLIPSTRETCHED",
    "DDCAPS_CANBLTSYSMEM",
    "DDCAPS2_CERTIFIED",
    "DDCAPS2_NO2DDURING3DSCENE",
    "DDCAPS2_VIDEOPORT",
    "DDCAPS2_AUTOFLIPOVERLAY",
    "DDCAPS2_CANBOBINTERLEAVED",
    "DDCAPS2_CANBOBNONINTERLEAVED",
    "DDCAPS2_COLORCONTROLOVERLAY",
    "DDCAPS2_COLORCONTROLPRIMARY",
    "DDCAPS2_CANDROPZ16BIT",
    "DDCAPS2_NONLOCALVIDMEM",
    "DDCAPS2_NONLOCALVIDMEMCAPS",
    "DDCAPS2_NOPAGELOCKREQUIRED",
    "DDCAPS2_WIDESURFACES",
    "DDCAPS2_CANFLIPODDEVEN",
    "DDCAPS2_CANBOBHARDWARE",
    "DDCAPS2_COPYFOURCC",
    "DDCAPS2_PRIMARYGAMMA",
    "DDCAPS2_CANRENDERWINDOWED",
    "DDCAPS2_CANCALIBRATEGAMMA",
    "DDCAPS2_FLIPINTERVAL",
    "DDCAPS2_FLIPNOVSYNC",
    "DDCAPS2_CANMANAGETEXTURE",
    "DDCAPS2_TEXMANINNONLOCALVIDMEM",
    "DDCAPS2_STEREO",
    "DDCAPS2_SYSTONONLOCAL_AS_SYSTOLOCAL",
    "DDCAPS2_RESERVED1",
    "DDCAPS2_CANMANAGERESOURCE",
    "DDCAPS2_DYNAMICTEXTURES",
    "DDCAPS2_CANAUTOGENMIPMAP",
    "DDCAPS2_CANSHARERESOURCE",
    "DDFXALPHACAPS_BLTALPHAEDGEBLEND",
    "DDFXALPHACAPS_BLTALPHAPIXELS",
    "DDFXALPHACAPS_BLTALPHAPIXELSNEG",
    "DDFXALPHACAPS_BLTALPHASURFACES",
    "DDFXALPHACAPS_BLTALPHASURFACESNEG",
    "DDFXALPHACAPS_OVERLAYALPHAEDGEBLEND",
    "DDFXALPHACAPS_OVERLAYALPHAPIXELS",
    "DDFXALPHACAPS_OVERLAYALPHAPIXELSNEG",
    "DDFXALPHACAPS_OVERLAYALPHASURFACES",
    "DDFXALPHACAPS_OVERLAYALPHASURFACESNEG",
    "DDFXCAPS_BLTARITHSTRETCHY",
    "DDFXCAPS_BLTARITHSTRETCHYN",
    "DDFXCAPS_BLTMIRRORLEFTRIGHT",
    "DDFXCAPS_BLTMIRRORUPDOWN",
    "DDFXCAPS_BLTROTATION",
    "DDFXCAPS_BLTROTATION90",
    "DDFXCAPS_BLTSHRINKX",
    "DDFXCAPS_BLTSHRINKXN",
    "DDFXCAPS_BLTSHRINKY",
    "DDFXCAPS_BLTSHRINKYN",
    "DDFXCAPS_BLTSTRETCHX",
    "DDFXCAPS_BLTSTRETCHXN",
    "DDFXCAPS_BLTSTRETCHY",
    "DDFXCAPS_BLTSTRETCHYN",
    "DDFXCAPS_OVERLAYARITHSTRETCHY",
    "DDFXCAPS_OVERLAYARITHSTRETCHYN",
    "DDFXCAPS_OVERLAYSHRINKX",
    "DDFXCAPS_OVERLAYSHRINKXN",
    "DDFXCAPS_OVERLAYSHRINKY",
    "DDFXCAPS_OVERLAYSHRINKYN",
    "DDFXCAPS_OVERLAYSTRETCHX",
    "DDFXCAPS_OVERLAYSTRETCHXN",
    "DDFXCAPS_OVERLAYSTRETCHY",
    "DDFXCAPS_OVERLAYSTRETCHYN",
    "DDFXCAPS_OVERLAYMIRRORLEFTRIGHT",
    "DDFXCAPS_OVERLAYMIRRORUPDOWN",
    "DDFXCAPS_OVERLAYDEINTERLACE",
    "DDFXCAPS_BLTALPHA",
    "DDFXCAPS_BLTFILTER",
    "DDFXCAPS_OVERLAYALPHA",
    "DDFXCAPS_OVERLAYFILTER",
    "DDSVCAPS_RESERVED1",
    "DDSVCAPS_RESERVED2",
    "DDSVCAPS_RESERVED3",
    "DDSVCAPS_RESERVED4",
    "DDSVCAPS_STEREOSEQUENTIAL",
    "DDPCAPS_4BIT",
    "DDPCAPS_8BITENTRIES",
    "DDPCAPS_8BIT",
    "DDPCAPS_INITIALIZE",
    "DDPCAPS_PRIMARYSURFACE",
    "DDPCAPS_PRIMARYSURFACELEFT",
    "DDPCAPS_ALLOW256",
    "DDPCAPS_VSYNC",
    "DDPCAPS_1BIT",
    "DDPCAPS_2BIT",
    "DDPCAPS_ALPHA",
    "DDSPD_IUNKNOWNPOINTER",
    "DDSPD_VOLATILE",
    "DDBD_1",
    "DDBD_2",
    "DDBD_4",
    "DDBD_8",
    "DDBD_16",
    "DDBD_24",
    "DDBD_32",
    "DDCKEY_COLORSPACE",
    "DDCKEY_DESTBLT",
    "DDCKEY_DESTOVERLAY",
    "DDCKEY_SRCBLT",
    "DDCKEY_SRCOVERLAY",
    "DDCKEYCAPS_DESTBLT",
    "DDCKEYCAPS_DESTBLTCLRSPACE",
    "DDCKEYCAPS_DESTBLTCLRSPACEYUV",
    "DDCKEYCAPS_DESTBLTYUV",
    "DDCKEYCAPS_DESTOVERLAY",
    "DDCKEYCAPS_DESTOVERLAYCLRSPACE",
    "DDCKEYCAPS_DESTOVERLAYCLRSPACEYUV",
    "DDCKEYCAPS_DESTOVERLAYONEACTIVE",
    "DDCKEYCAPS_DESTOVERLAYYUV",
    "DDCKEYCAPS_SRCBLT",
    "DDCKEYCAPS_SRCBLTCLRSPACE",
    "DDCKEYCAPS_SRCBLTCLRSPACEYUV",
    "DDCKEYCAPS_SRCBLTYUV",
    "DDCKEYCAPS_SRCOVERLAY",
    "DDCKEYCAPS_SRCOVERLAYCLRSPACE",
    "DDCKEYCAPS_SRCOVERLAYCLRSPACEYUV",
    "DDCKEYCAPS_SRCOVERLAYONEACTIVE",
    "DDCKEYCAPS_SRCOVERLAYYUV",
    "DDCKEYCAPS_NOCOSTOVERLAY",
    "DDPF_ALPHAPIXELS",
    "DDPF_ALPHA",
    "DDPF_FOURCC",
    "DDPF_PALETTEINDEXED4",
    "DDPF_PALETTEINDEXEDTO8",
    "DDPF_PALETTEINDEXED8",
    "DDPF_RGB",
    "DDPF_COMPRESSED",
    "DDPF_RGBTOYUV",
    "DDPF_YUV",
    "DDPF_ZBUFFER",
    "DDPF_PALETTEINDEXED1",
    "DDPF_PALETTEINDEXED2",
    "DDPF_ZPIXELS",
    "DDPF_STENCILBUFFER",
    "DDPF_ALPHAPREMULT",
    "DDPF_LUMINANCE",
    "DDPF_BUMPLUMINANCE",
    "DDPF_BUMPDUDV",
    "DDENUMSURFACES_ALL",
    "DDENUMSURFACES_MATCH",
    "DDENUMSURFACES_NOMATCH",
    "DDENUMSURFACES_CANBECREATED",
    "DDENUMSURFACES_DOESEXIST",
    "DDSDM_STANDARDVGAMODE",
    "DDEDM_REFRESHRATES",
    "DDEDM_STANDARDVGAMODES",
    "DDSCL_FULLSCREEN",
    "DDSCL_ALLOWREBOOT",
    "DDSCL_NOWINDOWCHANGES",
    "DDSCL_NORMAL",
    "DDSCL_EXCLUSIVE",
    "DDSCL_ALLOWMODEX",
    "DDSCL_SETFOCUSWINDOW",
    "DDSCL_SETDEVICEWINDOW",
    "DDSCL_CREATEDEVICEWINDOW",
    "DDSCL_MULTITHREADED",
    "DDSCL_FPUSETUP",
    "DDSCL_FPUPRESERVE",
    "DDBLT_ALPHADEST",
    "DDBLT_ALPHADESTCONSTOVERRIDE",
    "DDBLT_ALPHADESTNEG",
    "DDBLT_ALPHADESTSURFACEOVERRIDE",
    "DDBLT_ALPHAEDGEBLEND",
    "DDBLT_ALPHASRC",
    "DDBLT_ALPHASRCCONSTOVERRIDE",
    "DDBLT_ALPHASRCNEG",
    "DDBLT_ALPHASRCSURFACEOVERRIDE",
    "DDBLT_ASYNC",
    "DDBLT_COLORFILL",
    "DDBLT_DDFX",
    "DDBLT_DDROPS",
    "DDBLT_KEYDEST",
    "DDBLT_KEYDESTOVERRIDE",
    "DDBLT_KEYSRC",
    "DDBLT_KEYSRCOVERRIDE",
    "DDBLT_ROP",
    "DDBLT_ROTATIONANGLE",
    "DDBLT_ZBUFFER",
    "DDBLT_ZBUFFERDESTCONSTOVERRIDE",
    "DDBLT_ZBUFFERDESTOVERRIDE",
    "DDBLT_ZBUFFERSRCCONSTOVERRIDE",
    "DDBLT_ZBUFFERSRCOVERRIDE",
    "DDBLT_WAIT",
    "DDBLT_DEPTHFILL",
    "DDBLT_DONOTWAIT",
    "DDBLT_PRESENTATION",
    "DDBLT_LAST_PRESENTATION",
    "DDBLT_EXTENDED_FLAGS",
    "DDBLT_EXTENDED_LINEAR_CONTENT",
    "DDBLTFAST_NOCOLORKEY",
    "DDBLTFAST_SRCCOLORKEY",
    "DDBLTFAST_DESTCOLORKEY",
    "DDBLTFAST_WAIT",
    "DDBLTFAST_DONOTWAIT",
    "DDFLIP_WAIT",
    "DDFLIP_EVEN",
    "DDFLIP_ODD",
    "DDFLIP_NOVSYNC",
    "DDFLIP_INTERVAL2",
    "DDFLIP_INTERVAL3",
    "DDFLIP_INTERVAL4",
    "DDFLIP_STEREO",
    "DDFLIP_DONOTWAIT",
    "DDOVER_ALPHADEST",
    "DDOVER_ALPHADESTCONSTOVERRIDE",
    "DDOVER_ALPHADESTNEG",
    "DDOVER_ALPHADESTSURFACEOVERRIDE",
    "DDOVER_ALPHAEDGEBLEND",
    "DDOVER_ALPHASRC",
    "DDOVER_ALPHASRCCONSTOVERRIDE",
    "DDOVER_ALPHASRCNEG",
    "DDOVER_ALPHASRCSURFACEOVERRIDE",
    "DDOVER_HIDE",
    "DDOVER_KEYDEST",
    "DDOVER_KEYDESTOVERRIDE",
    "DDOVER_KEYSRC",
    "DDOVER_KEYSRCOVERRIDE",
    "DDOVER_SHOW",
    "DDOVER_ADDDIRTYRECT",
    "DDOVER_REFRESHDIRTYRECTS",
    "DDOVER_REFRESHALL",
    "DDOVER_DDFX",
    "DDOVER_AUTOFLIP",
    "DDOVER_BOB",
    "DDOVER_OVERRIDEBOBWEAVE",
    "DDOVER_INTERLEAVED",
    "DDOVER_BOBHARDWARE",
    "DDOVER_ARGBSCALEFACTORS",
    "DDOVER_DEGRADEARGBSCALING",
    "DDSETSURFACEDESC_RECREATEDC",
    "DDSETSURFACEDESC_PRESERVEDC",
    "DDLOCK_SURFACEMEMORYPTR",
    "DDLOCK_WAIT",
    "DDLOCK_EVENT",
    "DDLOCK_READONLY",
    "DDLOCK_WRITEONLY",
    "DDLOCK_NOSYSLOCK",
    "DDLOCK_NOOVERWRITE",
    "DDLOCK_DISCARDCONTENTS",
    "DDLOCK_OKTOSWAP",
    "DDLOCK_DONOTWAIT",
    "DDLOCK_HASVOLUMETEXTUREBOXRECT",
    "DDLOCK_NODIRTYUPDATE",
    "DDBLTFX_ARITHSTRETCHY",
    "DDBLTFX_MIRRORLEFTRIGHT",
    "DDBLTFX_MIRRORUPDOWN",
    "DDBLTFX_NOTEARING",
    "DDBLTFX_ROTATE180",
    "DDBLTFX_ROTATE270",
    "DDBLTFX_ROTATE90",
    "DDBLTFX_ZBUFFERRANGE",
    "DDBLTFX_ZBUFFERBASEDEST",
    "DDOVERFX_ARITHSTRETCHY",
    "DDOVERFX_MIRRORLEFTRIGHT",
    "DDOVERFX_MIRRORUPDOWN",
    "DDOVERFX_DEINTERLACE",
    "DDWAITVB_BLOCKBEGIN",
    "DDWAITVB_BLOCKBEGINEVENT",
    "DDWAITVB_BLOCKEND",
    "DDGFS_CANFLIP",
    "DDGFS_ISFLIPDONE",
    "DDGBS_CANBLT",
    "DDGBS_ISBLTDONE",
    "DDENUMOVERLAYZ_BACKTOFRONT",
    "DDENUMOVERLAYZ_FRONTTOBACK",
    "DDOVERZ_SENDTOFRONT",
    "DDOVERZ_SENDTOBACK",
    "DDOVERZ_MOVEFORWARD",
    "DDOVERZ_MOVEBACKWARD",
    "DDOVERZ_INSERTINFRONTOF",
    "DDOVERZ_INSERTINBACKOF",
    "DDSGR_CALIBRATE",
    "DDSMT_ISTESTREQUIRED",
    "DDEM_MODEPASSED",
    "DDEM_MODEFAILED",
    "DDENUMRET_CANCEL",
    "DDENUMRET_OK",
    "DDERR_NOTINITIALIZED",
    "OBJECT_ISROOT",
    "DDUNSUPPORTEDMODE",
    "GUID_MiscellaneousCallbacks",
    "GUID_VideoPortCallbacks",
    "GUID_ColorControlCallbacks",
    "GUID_VideoPortCaps",
    "GUID_D3DCallbacks2",
    "GUID_D3DCallbacks3",
    "GUID_NonLocalVidMemCaps",
    "GUID_KernelCallbacks",
    "GUID_KernelCaps",
    "GUID_D3DExtendedCaps",
    "GUID_ZPixelFormats",
    "GUID_DDMoreSurfaceCaps",
    "GUID_DDStereoMode",
    "GUID_OptSurfaceKmodeInfo",
    "GUID_OptSurfaceUmodeInfo",
    "GUID_UserModeDriverInfo",
    "GUID_UserModeDriverPassword",
    "GUID_D3DParseUnknownCommandCallback",
    "GUID_MotionCompCallbacks",
    "GUID_Miscellaneous2Callbacks",
    "DDPF_NOVEL_TEXTURE_FORMAT",
    "DDPF_D3DFORMAT",
    "D3DFORMAT_OP_TEXTURE",
    "D3DFORMAT_OP_VOLUMETEXTURE",
    "D3DFORMAT_OP_CUBETEXTURE",
    "D3DFORMAT_OP_OFFSCREEN_RENDERTARGET",
    "D3DFORMAT_OP_SAME_FORMAT_RENDERTARGET",
    "D3DFORMAT_OP_ZSTENCIL",
    "D3DFORMAT_OP_ZSTENCIL_WITH_ARBITRARY_COLOR_DEPTH",
    "D3DFORMAT_OP_SAME_FORMAT_UP_TO_ALPHA_RENDERTARGET",
    "D3DFORMAT_OP_DISPLAYMODE",
    "D3DFORMAT_OP_3DACCELERATION",
    "D3DFORMAT_OP_PIXELSIZE",
    "D3DFORMAT_OP_CONVERT_TO_ARGB",
    "D3DFORMAT_OP_OFFSCREENPLAIN",
    "D3DFORMAT_OP_SRGBREAD",
    "D3DFORMAT_OP_BUMPMAP",
    "D3DFORMAT_OP_DMAP",
    "D3DFORMAT_OP_NOFILTER",
    "D3DFORMAT_MEMBEROFGROUP_ARGB",
    "D3DFORMAT_OP_SRGBWRITE",
    "D3DFORMAT_OP_NOALPHABLEND",
    "D3DFORMAT_OP_AUTOGENMIPMAP",
    "D3DFORMAT_OP_VERTEXTEXTURE",
    "D3DFORMAT_OP_NOTEXCOORDWRAPNORMIP",
    "DELETED_OK",
    "DELETED_LASTONE",
    "DELETED_NOTFOUND",
    "DCICOMMAND",
    "DD_VERSION",
    "DD_RUNTIME_VERSION",
    "DD_HAL_VERSION",
    "DDCREATEDRIVEROBJECT",
    "DDGET32BITDRIVERNAME",
    "DDNEWCALLBACKFNS",
    "DDVERSIONINFO",
    "CCHDEVICENAME",
    "MAX_DRIVER_NAME",
    "MAX_PALETTE_SIZE",
    "MAX_AUTOFLIP_BUFFERS",
    "DDSCAPS_EXECUTEBUFFER",
    "DDSCAPS2_VERTEXBUFFER",
    "DDSCAPS2_COMMANDBUFFER",
    "DDSCAPS2_INDEXBUFFER",
    "DDSCAPS3_VIDEO",
    "D3DFMT_INTERNAL_D32",
    "D3DFMT_INTERNAL_S1D15",
    "D3DFMT_INTERNAL_D15S1",
    "D3DFMT_INTERNAL_S8D24",
    "D3DFMT_INTERNAL_D24S8",
    "D3DFMT_INTERNAL_X8D24",
    "D3DFMT_INTERNAL_D24X8",
    "DDHAL_PLEASEALLOC_BLOCKSIZE",
    "DDHAL_PLEASEALLOC_LINEARSIZE",
    "VIDMEM_ISLINEAR",
    "VIDMEM_ISRECTANGULAR",
    "VIDMEM_ISHEAP",
    "VIDMEM_ISNONLOCAL",
    "VIDMEM_ISWC",
    "VIDMEM_HEAPDISABLED",
    "HEAPALIASINFO_MAPPEDREAL",
    "HEAPALIASINFO_MAPPEDDUMMY",
    "DDHAL_CB32_DESTROYDRIVER",
    "DDHAL_CB32_CREATESURFACE",
    "DDHAL_CB32_SETCOLORKEY",
    "DDHAL_CB32_SETMODE",
    "DDHAL_CB32_WAITFORVERTICALBLANK",
    "DDHAL_CB32_CANCREATESURFACE",
    "DDHAL_CB32_CREATEPALETTE",
    "DDHAL_CB32_GETSCANLINE",
    "DDHAL_CB32_SETEXCLUSIVEMODE",
    "DDHAL_CB32_FLIPTOGDISURFACE",
    "DDHAL_PALCB32_DESTROYPALETTE",
    "DDHAL_PALCB32_SETENTRIES",
    "DDHAL_SURFCB32_DESTROYSURFACE",
    "DDHAL_SURFCB32_FLIP",
    "DDHAL_SURFCB32_SETCLIPLIST",
    "DDHAL_SURFCB32_LOCK",
    "DDHAL_SURFCB32_UNLOCK",
    "DDHAL_SURFCB32_BLT",
    "DDHAL_SURFCB32_SETCOLORKEY",
    "DDHAL_SURFCB32_ADDATTACHEDSURFACE",
    "DDHAL_SURFCB32_GETBLTSTATUS",
    "DDHAL_SURFCB32_GETFLIPSTATUS",
    "DDHAL_SURFCB32_UPDATEOVERLAY",
    "DDHAL_SURFCB32_SETOVERLAYPOSITION",
    "DDHAL_SURFCB32_RESERVED4",
    "DDHAL_SURFCB32_SETPALETTE",
    "DDHAL_MISCCB32_GETAVAILDRIVERMEMORY",
    "DDHAL_MISCCB32_UPDATENONLOCALHEAP",
    "DDHAL_MISCCB32_GETHEAPALIGNMENT",
    "DDHAL_MISCCB32_GETSYSMEMBLTSTATUS",
    "DDHAL_MISC2CB32_CREATESURFACEEX",
    "DDHAL_MISC2CB32_GETDRIVERSTATE",
    "DDHAL_MISC2CB32_DESTROYDDLOCAL",
    "DDHAL_EXEBUFCB32_CANCREATEEXEBUF",
    "DDHAL_EXEBUFCB32_CREATEEXEBUF",
    "DDHAL_EXEBUFCB32_DESTROYEXEBUF",
    "DDHAL_EXEBUFCB32_LOCKEXEBUF",
    "DDHAL_EXEBUFCB32_UNLOCKEXEBUF",
    "DDHAL_VPORT32_CANCREATEVIDEOPORT",
    "DDHAL_VPORT32_CREATEVIDEOPORT",
    "DDHAL_VPORT32_FLIP",
    "DDHAL_VPORT32_GETBANDWIDTH",
    "DDHAL_VPORT32_GETINPUTFORMATS",
    "DDHAL_VPORT32_GETOUTPUTFORMATS",
    "DDHAL_VPORT32_GETFIELD",
    "DDHAL_VPORT32_GETLINE",
    "DDHAL_VPORT32_GETCONNECT",
    "DDHAL_VPORT32_DESTROY",
    "DDHAL_VPORT32_GETFLIPSTATUS",
    "DDHAL_VPORT32_UPDATE",
    "DDHAL_VPORT32_WAITFORSYNC",
    "DDHAL_VPORT32_GETSIGNALSTATUS",
    "DDHAL_VPORT32_COLORCONTROL",
    "DDHAL_COLOR_COLORCONTROL",
    "DDHAL_KERNEL_SYNCSURFACEDATA",
    "DDHAL_KERNEL_SYNCVIDEOPORTDATA",
    "DDHAL_MOCOMP32_GETGUIDS",
    "DDHAL_MOCOMP32_GETFORMATS",
    "DDHAL_MOCOMP32_CREATE",
    "DDHAL_MOCOMP32_GETCOMPBUFFINFO",
    "DDHAL_MOCOMP32_GETINTERNALINFO",
    "DDHAL_MOCOMP32_BEGINFRAME",
    "DDHAL_MOCOMP32_ENDFRAME",
    "DDHAL_MOCOMP32_RENDER",
    "DDHAL_MOCOMP32_QUERYSTATUS",
    "DDHAL_MOCOMP32_DESTROY",
    "DDHAL_DRIVER_NOTHANDLED",
    "DDHAL_DRIVER_HANDLED",
    "DDHAL_DRIVER_NOCKEYHW",
    "DDRAWIPAL_256",
    "DDRAWIPAL_16",
    "DDRAWIPAL_GDI",
    "DDRAWIPAL_STORED_8",
    "DDRAWIPAL_STORED_16",
    "DDRAWIPAL_STORED_24",
    "DDRAWIPAL_EXCLUSIVE",
    "DDRAWIPAL_INHEL",
    "DDRAWIPAL_DIRTY",
    "DDRAWIPAL_ALLOW256",
    "DDRAWIPAL_4",
    "DDRAWIPAL_2",
    "DDRAWIPAL_STORED_8INDEX",
    "DDRAWIPAL_ALPHA",
    "DDRAWICLIP_WATCHWINDOW",
    "DDRAWICLIP_ISINITIALIZED",
    "DDRAWICLIP_INMASTERSPRITELIST",
    "DDAL_IMPLICIT",
    "ACCESSRECT_VRAMSTYLE",
    "ACCESSRECT_NOTHOLDINGWIN16LOCK",
    "ACCESSRECT_BROKEN",
    "PFINDEX_UNINITIALIZED",
    "DDRAWISURFGBL_MEMFREE",
    "DDRAWISURFGBL_SYSMEMREQUESTED",
    "DDRAWISURFGBL_ISGDISURFACE",
    "DDRAWISURFGBL_SOFTWAREAUTOFLIP",
    "DDRAWISURFGBL_LOCKNOTHOLDINGWIN16LOCK",
    "DDRAWISURFGBL_LOCKVRAMSTYLE",
    "DDRAWISURFGBL_LOCKBROKEN",
    "DDRAWISURFGBL_IMPLICITHANDLE",
    "DDRAWISURFGBL_ISCLIENTMEM",
    "DDRAWISURFGBL_HARDWAREOPSOURCE",
    "DDRAWISURFGBL_HARDWAREOPDEST",
    "DDRAWISURFGBL_VPORTINTERLEAVED",
    "DDRAWISURFGBL_VPORTDATA",
    "DDRAWISURFGBL_LATEALLOCATELINEAR",
    "DDRAWISURFGBL_SYSMEMEXECUTEBUFFER",
    "DDRAWISURFGBL_FASTLOCKHELD",
    "DDRAWISURFGBL_READONLYLOCKHELD",
    "DDRAWISURFGBL_DX8SURFACE",
    "DDRAWISURFGBL_DDHELDONTFREE",
    "DDRAWISURFGBL_NOTIFYWHENUNLOCKED",
    "DDRAWISURFGBL_RESERVED0",
    "DDRAWISURF_ATTACHED",
    "DDRAWISURF_IMPLICITCREATE",
    "DDRAWISURF_ISFREE",
    "DDRAWISURF_ATTACHED_FROM",
    "DDRAWISURF_IMPLICITROOT",
    "DDRAWISURF_PARTOFPRIMARYCHAIN",
    "DDRAWISURF_DATAISALIASED",
    "DDRAWISURF_HASDC",
    "DDRAWISURF_HASCKEYDESTOVERLAY",
    "DDRAWISURF_HASCKEYDESTBLT",
    "DDRAWISURF_HASCKEYSRCOVERLAY",
    "DDRAWISURF_HASCKEYSRCBLT",
    "DDRAWISURF_LOCKEXCLUDEDCURSOR",
    "DDRAWISURF_HASPIXELFORMAT",
    "DDRAWISURF_HASOVERLAYDATA",
    "DDRAWISURF_SETGAMMA",
    "DDRAWISURF_SW_CKEYDESTOVERLAY",
    "DDRAWISURF_SW_CKEYDESTBLT",
    "DDRAWISURF_SW_CKEYSRCOVERLAY",
    "DDRAWISURF_SW_CKEYSRCBLT",
    "DDRAWISURF_HW_CKEYDESTOVERLAY",
    "DDRAWISURF_HW_CKEYDESTBLT",
    "DDRAWISURF_HW_CKEYSRCOVERLAY",
    "DDRAWISURF_HW_CKEYSRCBLT",
    "DDRAWISURF_INMASTERSPRITELIST",
    "DDRAWISURF_HELCB",
    "DDRAWISURF_FRONTBUFFER",
    "DDRAWISURF_BACKBUFFER",
    "DDRAWISURF_INVALID",
    "DDRAWISURF_DCIBUSY",
    "DDRAWISURF_GETDCNULL",
    "DDRAWISURF_STEREOSURFACELEFT",
    "DDRAWISURF_DRIVERMANAGED",
    "DDRAWISURF_DCILOCK",
    "ROP_HAS_SOURCE",
    "ROP_HAS_PATTERN",
    "DDMODEINFO_PALETTIZED",
    "DDMODEINFO_MODEX",
    "DDMODEINFO_UNSUPPORTED",
    "DDMODEINFO_STANDARDVGA",
    "DDMODEINFO_MAXREFRESH",
    "DDMODEINFO_STEREO",
    "DDRAWILCL_HASEXCLUSIVEMODE",
    "DDRAWILCL_ISFULLSCREEN",
    "DDRAWILCL_SETCOOPCALLED",
    "DDRAWILCL_ACTIVEYES",
    "DDRAWILCL_ACTIVENO",
    "DDRAWILCL_HOOKEDHWND",
    "DDRAWILCL_ALLOWMODEX",
    "DDRAWILCL_V1SCLBEHAVIOUR",
    "DDRAWILCL_MODEHASBEENCHANGED",
    "DDRAWILCL_CREATEDWINDOW",
    "DDRAWILCL_DIRTYDC",
    "DDRAWILCL_DISABLEINACTIVATE",
    "DDRAWILCL_CURSORCLIPPED",
    "DDRAWILCL_EXPLICITMONITOR",
    "DDRAWILCL_MULTITHREADED",
    "DDRAWILCL_FPUSETUP",
    "DDRAWILCL_POWEREDDOWN",
    "DDRAWILCL_DIRECTDRAW7",
    "DDRAWILCL_ATTEMPTEDD3DCONTEXT",
    "DDRAWILCL_FPUPRESERVE",
    "DDRAWILCL_DX8DRIVER",
    "DDRAWILCL_DIRECTDRAW8",
    "DDRAWI_xxxxxxxxx1",
    "DDRAWI_xxxxxxxxx2",
    "DDRAWI_VIRTUALDESKTOP",
    "DDRAWI_MODEX",
    "DDRAWI_DISPLAYDRV",
    "DDRAWI_FULLSCREEN",
    "DDRAWI_MODECHANGED",
    "DDRAWI_NOHARDWARE",
    "DDRAWI_PALETTEINIT",
    "DDRAWI_NOEMULATION",
    "DDRAWI_HASCKEYDESTOVERLAY",
    "DDRAWI_HASCKEYSRCOVERLAY",
    "DDRAWI_HASGDIPALETTE",
    "DDRAWI_EMULATIONINITIALIZED",
    "DDRAWI_HASGDIPALETTE_EXCLUSIVE",
    "DDRAWI_MODEXILLEGAL",
    "DDRAWI_FLIPPEDTOGDI",
    "DDRAWI_NEEDSWIN16FORVRAMLOCK",
    "DDRAWI_PDEVICEVRAMBITCLEARED",
    "DDRAWI_STANDARDVGA",
    "DDRAWI_EXTENDEDALIGNMENT",
    "DDRAWI_CHANGINGMODE",
    "DDRAWI_GDIDRV",
    "DDRAWI_ATTACHEDTODESKTOP",
    "DDRAWI_UMODELOADED",
    "DDRAWI_DDRAWDATANOTFETCHED",
    "DDRAWI_SECONDARYDRIVERLOADED",
    "DDRAWI_TESTINGMODES",
    "DDRAWI_DRIVERINFO2",
    "DDRAWI_BADPDEV",
    "DDRAWIVPORT_ON",
    "DDRAWIVPORT_SOFTWARE_AUTOFLIP",
    "DDRAWIVPORT_COLORKEYANDINTERP",
    "DDRAWIVPORT_NOKERNELHANDLES",
    "DDRAWIVPORT_SOFTWARE_BOB",
    "DDRAWIVPORT_VBION",
    "DDRAWIVPORT_VIDEOON",
    "DDHALINFO_ISPRIMARYDISPLAY",
    "DDHALINFO_MODEXILLEGAL",
    "DDHALINFO_GETDRIVERINFOSET",
    "DDHALINFO_GETDRIVERINFO2",
    "DDWAITVB_I_TESTVB",
    "DDRAWI_VPORTSTART",
    "DDRAWI_VPORTSTOP",
    "DDRAWI_VPORTUPDATE",
    "DDRAWI_VPORTGETCOLOR",
    "DDRAWI_VPORTSETCOLOR",
    "DDRAWI_GETCOLOR",
    "DDRAWI_SETCOLOR",
    "DDMCQUERY_READ",
    "GUID_D3DCaps",
    "GUID_D3DCallbacks",
    "GUID_DDMoreCaps",
    "GUID_NTCallbacks",
    "GUID_GetHeapAlignment",
    "GUID_UpdateNonLocalHeap",
    "GUID_NTPrivateDriverCaps",
    "GUID_VPE2Callbacks",
    "DDSCAPS_COMMANDBUFFER",
    "DDHAL_PLEASEALLOC_USERMEM",
    "DDHAL_CB32_MAPMEMORY",
    "DDHAL_MISC2CB32_ALPHABLT",
    "DDHAL_CREATESURFACEEX_SWAPHANDLES",
    "DDHAL_NTCB32_FREEDRIVERMEMORY",
    "DDHAL_NTCB32_SETEXCLUSIVEMODE",
    "DDHAL_NTCB32_FLIPTOGDISURFACE",
    "DDHAL_VPORT32_GETAUTOFLIPSURF",
    "DDHAL_D3DBUFCB32_CANCREATED3DBUF",
    "DDHAL_D3DBUFCB32_CREATED3DBUF",
    "DDHAL_D3DBUFCB32_DESTROYD3DBUF",
    "DDHAL_D3DBUFCB32_LOCKD3DBUF",
    "DDHAL_D3DBUFCB32_UNLOCKD3DBUF",
    "DDHAL_PRIVATECAP_ATOMICSURFACECREATION",
    "DDHAL_PRIVATECAP_NOTIFYPRIMARYCREATION",
    "DDHAL_PRIVATECAP_RESERVED1",
    "DDBLT_AFLAGS",
    "DDABLT_SRCOVERDEST",
    "DDKERNELCAPS_SKIPFIELDS",
    "DDKERNELCAPS_AUTOFLIP",
    "DDKERNELCAPS_SETSTATE",
    "DDKERNELCAPS_LOCK",
    "DDKERNELCAPS_FLIPVIDEOPORT",
    "DDKERNELCAPS_FLIPOVERLAY",
    "DDKERNELCAPS_CAPTURE_SYSMEM",
    "DDKERNELCAPS_CAPTURE_NONLOCALVIDMEM",
    "DDKERNELCAPS_FIELDPOLARITY",
    "DDKERNELCAPS_CAPTURE_INVERTED",
    "DDIRQ_DISPLAY_VSYNC",
    "DDIRQ_RESERVED1",
    "DDIRQ_VPORT0_VSYNC",
    "DDIRQ_VPORT0_LINE",
    "DDIRQ_VPORT1_VSYNC",
    "DDIRQ_VPORT1_LINE",
    "DDIRQ_VPORT2_VSYNC",
    "DDIRQ_VPORT2_LINE",
    "DDIRQ_VPORT3_VSYNC",
    "DDIRQ_VPORT3_LINE",
    "DDIRQ_VPORT4_VSYNC",
    "DDIRQ_VPORT4_LINE",
    "DDIRQ_VPORT5_VSYNC",
    "DDIRQ_VPORT5_LINE",
    "DDIRQ_VPORT6_VSYNC",
    "DDIRQ_VPORT6_LINE",
    "DDIRQ_VPORT7_VSYNC",
    "DDIRQ_VPORT7_LINE",
    "DDIRQ_VPORT8_VSYNC",
    "DDIRQ_VPORT8_LINE",
    "DDIRQ_VPORT9_VSYNC",
    "DDIRQ_VPORT9_LINE",
    "SURFACEALIGN_DISCARDABLE",
    "VMEMHEAP_LINEAR",
    "VMEMHEAP_RECTANGULAR",
    "VMEMHEAP_ALIGNMENT",
    "DDVPTYPE_E_HREFH_VREFH",
    "DDVPTYPE_E_HREFH_VREFL",
    "DDVPTYPE_E_HREFL_VREFH",
    "DDVPTYPE_E_HREFL_VREFL",
    "DDVPTYPE_CCIR656",
    "DDVPTYPE_BROOKTREE",
    "DDVPTYPE_PHILIPS",
    "DDVPD_WIDTH",
    "DDVPD_HEIGHT",
    "DDVPD_ID",
    "DDVPD_CAPS",
    "DDVPD_FX",
    "DDVPD_AUTOFLIP",
    "DDVPD_ALIGN",
    "DDVPD_PREFERREDAUTOFLIP",
    "DDVPD_FILTERQUALITY",
    "DDVPCONNECT_DOUBLECLOCK",
    "DDVPCONNECT_VACT",
    "DDVPCONNECT_INVERTPOLARITY",
    "DDVPCONNECT_DISCARDSVREFDATA",
    "DDVPCONNECT_HALFLINE",
    "DDVPCONNECT_INTERLACED",
    "DDVPCONNECT_SHAREEVEN",
    "DDVPCONNECT_SHAREODD",
    "DDVPCAPS_AUTOFLIP",
    "DDVPCAPS_INTERLACED",
    "DDVPCAPS_NONINTERLACED",
    "DDVPCAPS_READBACKFIELD",
    "DDVPCAPS_READBACKLINE",
    "DDVPCAPS_SHAREABLE",
    "DDVPCAPS_SKIPEVENFIELDS",
    "DDVPCAPS_SKIPODDFIELDS",
    "DDVPCAPS_SYNCMASTER",
    "DDVPCAPS_VBISURFACE",
    "DDVPCAPS_COLORCONTROL",
    "DDVPCAPS_OVERSAMPLEDVBI",
    "DDVPCAPS_SYSTEMMEMORY",
    "DDVPCAPS_VBIANDVIDEOINDEPENDENT",
    "DDVPCAPS_HARDWAREDEINTERLACE",
    "DDVPFX_CROPTOPDATA",
    "DDVPFX_CROPX",
    "DDVPFX_CROPY",
    "DDVPFX_INTERLEAVE",
    "DDVPFX_MIRRORLEFTRIGHT",
    "DDVPFX_MIRRORUPDOWN",
    "DDVPFX_PRESHRINKX",
    "DDVPFX_PRESHRINKY",
    "DDVPFX_PRESHRINKXB",
    "DDVPFX_PRESHRINKYB",
    "DDVPFX_PRESHRINKXS",
    "DDVPFX_PRESHRINKYS",
    "DDVPFX_PRESTRETCHX",
    "DDVPFX_PRESTRETCHY",
    "DDVPFX_PRESTRETCHXN",
    "DDVPFX_PRESTRETCHYN",
    "DDVPFX_VBICONVERT",
    "DDVPFX_VBINOSCALE",
    "DDVPFX_IGNOREVBIXCROP",
    "DDVPFX_VBINOINTERLEAVE",
    "DDVP_AUTOFLIP",
    "DDVP_CONVERT",
    "DDVP_CROP",
    "DDVP_INTERLEAVE",
    "DDVP_MIRRORLEFTRIGHT",
    "DDVP_MIRRORUPDOWN",
    "DDVP_PRESCALE",
    "DDVP_SKIPEVENFIELDS",
    "DDVP_SKIPODDFIELDS",
    "DDVP_SYNCMASTER",
    "DDVP_VBICONVERT",
    "DDVP_VBINOSCALE",
    "DDVP_OVERRIDEBOBWEAVE",
    "DDVP_IGNOREVBIXCROP",
    "DDVP_VBINOINTERLEAVE",
    "DDVP_HARDWAREDEINTERLACE",
    "DDVPFORMAT_VIDEO",
    "DDVPFORMAT_VBI",
    "DDVPTARGET_VIDEO",
    "DDVPTARGET_VBI",
    "DDVPWAIT_BEGIN",
    "DDVPWAIT_END",
    "DDVPWAIT_LINE",
    "DDVPFLIP_VIDEO",
    "DDVPFLIP_VBI",
    "DDVPSQ_NOSIGNAL",
    "DDVPSQ_SIGNALOK",
    "DDVPB_VIDEOPORT",
    "DDVPB_OVERLAY",
    "DDVPB_TYPE",
    "DDVPBCAPS_SOURCE",
    "DDVPBCAPS_DESTINATION",
    "DDVPCREATE_VBIONLY",
    "DDVPCREATE_VIDEOONLY",
    "DDVPSTATUS_VBIONLY",
    "DDVPSTATUS_VIDEOONLY",
    "GUID_DxApi",
    "MDL_MAPPED_TO_SYSTEM_VA",
    "MDL_PAGES_LOCKED",
    "MDL_SOURCE_IS_NONPAGED_POOL",
    "MDL_ALLOCATED_FIXED_SIZE",
    "MDL_PARTIAL",
    "MDL_PARTIAL_HAS_BEEN_MAPPED",
    "MDL_IO_PAGE_READ",
    "MDL_WRITE_OPERATION",
    "MDL_PARENT_MAPPED_SYSTEM_VA",
    "MDL_LOCK_HELD",
    "MDL_SCATTER_GATHER_VA",
    "MDL_IO_SPACE",
    "MDL_NETWORK_HEADER",
    "MDL_MAPPING_CAN_FAIL",
    "MDL_ALLOCATED_MUST_SUCCEED",
    "MDL_64_BIT_VA",
    "DX_OK",
    "DXERR_UNSUPPORTED",
    "DXERR_GENERIC",
    "DXERR_OUTOFCAPS",
    "DDIRQ_BUSMASTER",
    "IRQINFO_HANDLED",
    "IRQINFO_NOTHANDLED",
    "DDSKIP_SKIPNEXT",
    "DDSKIP_ENABLENEXT",
    "DDTRANSFER_SYSTEMMEMORY",
    "DDTRANSFER_NONLOCALVIDMEM",
    "DDTRANSFER_INVERT",
    "DDTRANSFER_CANCEL",
    "DDTRANSFER_HALFLINES",
    "DXAPI_HALVERSION",
    "_DDFXROP",
    "LPDDENUMCALLBACKA",
    "LPDDENUMCALLBACKW",
    "LPDDENUMCALLBACKEXA",
    "LPDDENUMCALLBACKEXW",
    "LPDIRECTDRAWENUMERATEEXA",
    "LPDIRECTDRAWENUMERATEEXW",
    "LPDDENUMMODESCALLBACK",
    "LPDDENUMMODESCALLBACK2",
    "LPDDENUMSURFACESCALLBACK",
    "LPDDENUMSURFACESCALLBACK2",
    "LPDDENUMSURFACESCALLBACK7",
    "DDARGB",
    "DDRGBA",
    "DDCOLORKEY",
    "DDBLTFX",
    "DDSCAPS",
    "DDOSCAPS",
    "DDSCAPSEX",
    "DDSCAPS2",
    "DDCAPS_DX1",
    "DDCAPS_DX3",
    "DDCAPS_DX5",
    "DDCAPS_DX6",
    "DDCAPS_DX7",
    "DDPIXELFORMAT",
    "DDOVERLAYFX",
    "DDBLTBATCH",
    "DDGAMMARAMP",
    "DDDEVICEIDENTIFIER",
    "DDDEVICEIDENTIFIER2",
    "LPCLIPPERCALLBACK",
    "IDirectDraw",
    "IDirectDraw2",
    "IDirectDraw4",
    "IDirectDraw7",
    "IDirectDrawPalette",
    "IDirectDrawClipper",
    "IDirectDrawSurface",
    "IDirectDrawSurface2",
    "IDirectDrawSurface3",
    "IDirectDrawSurface4",
    "IDirectDrawSurface7",
    "IDirectDrawColorControl",
    "IDirectDrawGammaControl",
    "DDSURFACEDESC",
    "DDSURFACEDESC2",
    "DDOPTSURFACEDESC",
    "DDCOLORCONTROL",
    "IDDVideoPortContainerVtbl",
    "IDirectDrawVideoPortVtbl",
    "IDirectDrawVideoPortNotifyVtbl",
    "LPDDENUMVIDEOCALLBACK",
    "IDDVideoPortContainer",
    "IDirectDrawVideoPort",
    "IDirectDrawVideoPortNotify",
    "DDVIDEOPORTCONNECT",
    "DDVIDEOPORTCAPS",
    "DDVIDEOPORTDESC",
    "DDVIDEOPORTINFO",
    "DDVIDEOPORTBANDWIDTH",
    "DDVIDEOPORTSTATUS",
    "DDVIDEOPORTNOTIFY",
    "IDirectDrawKernel",
    "IDirectDrawSurfaceKernel",
    "DDKERNELCAPS",
    "SURFACEALIGNMENT",
    "HEAPALIGNMENT",
    "DD_GETHEAPALIGNMENTDATA",
    "VMEML",
    "VMEMR",
    "VMEMHEAP",
    "PROCESS_LIST",
    "DDMONITORINFO",
    "IDirectDrawClipperVtbl",
    "IDirectDrawPaletteVtbl",
    "IDirectDrawSurfaceVtbl",
    "IDirectDrawSurface2Vtbl",
    "IDirectDrawSurface3Vtbl",
    "IDirectDrawSurface4Vtbl",
    "IDirectDrawSurface7Vtbl",
    "IDirectDrawColorControlVtbl",
    "IDirectDrawVtbl",
    "IDirectDraw2Vtbl",
    "IDirectDraw4Vtbl",
    "IDirectDraw7Vtbl",
    "IDirectDrawKernelVtbl",
    "IDirectDrawSurfaceKernelVtbl",
    "IDirectDrawGammaControlVtbl",
    "DD32BITDRIVERDATA",
    "DDVERSIONDATA",
    "LPDD32BITDRIVERINIT",
    "VIDMEM",
    "VIDMEMINFO",
    "HEAPALIAS",
    "HEAPALIASINFO",
    "IUNKNOWN_LIST",
    "LPDDHEL_INIT",
    "LPDDHAL_SETCOLORKEY",
    "LPDDHAL_CANCREATESURFACE",
    "LPDDHAL_WAITFORVERTICALBLANK",
    "LPDDHAL_CREATESURFACE",
    "LPDDHAL_DESTROYDRIVER",
    "LPDDHAL_SETMODE",
    "LPDDHAL_CREATEPALETTE",
    "LPDDHAL_GETSCANLINE",
    "LPDDHAL_SETEXCLUSIVEMODE",
    "LPDDHAL_FLIPTOGDISURFACE",
    "LPDDHAL_GETDRIVERINFO",
    "DDHAL_DDCALLBACKS",
    "LPDDHALPALCB_DESTROYPALETTE",
    "LPDDHALPALCB_SETENTRIES",
    "DDHAL_DDPALETTECALLBACKS",
    "LPDDHALSURFCB_LOCK",
    "LPDDHALSURFCB_UNLOCK",
    "LPDDHALSURFCB_BLT",
    "LPDDHALSURFCB_UPDATEOVERLAY",
    "LPDDHALSURFCB_SETOVERLAYPOSITION",
    "LPDDHALSURFCB_SETPALETTE",
    "LPDDHALSURFCB_FLIP",
    "LPDDHALSURFCB_DESTROYSURFACE",
    "LPDDHALSURFCB_SETCLIPLIST",
    "LPDDHALSURFCB_ADDATTACHEDSURFACE",
    "LPDDHALSURFCB_SETCOLORKEY",
    "LPDDHALSURFCB_GETBLTSTATUS",
    "LPDDHALSURFCB_GETFLIPSTATUS",
    "DDHAL_DDSURFACECALLBACKS",
    "LPDDHAL_GETAVAILDRIVERMEMORY",
    "LPDDHAL_UPDATENONLOCALHEAP",
    "LPDDHAL_GETHEAPALIGNMENT",
    "DDHAL_DDMISCELLANEOUSCALLBACKS",
    "LPDDHAL_CREATESURFACEEX",
    "LPDDHAL_GETDRIVERSTATE",
    "LPDDHAL_DESTROYDDLOCAL",
    "DDHAL_DDMISCELLANEOUS2CALLBACKS",
    "LPDDHALEXEBUFCB_CANCREATEEXEBUF",
    "LPDDHALEXEBUFCB_CREATEEXEBUF",
    "LPDDHALEXEBUFCB_DESTROYEXEBUF",
    "LPDDHALEXEBUFCB_LOCKEXEBUF",
    "LPDDHALEXEBUFCB_UNLOCKEXEBUF",
    "DDHAL_DDEXEBUFCALLBACKS",
    "LPDDHALVPORTCB_CANCREATEVIDEOPORT",
    "LPDDHALVPORTCB_CREATEVIDEOPORT",
    "LPDDHALVPORTCB_FLIP",
    "LPDDHALVPORTCB_GETBANDWIDTH",
    "LPDDHALVPORTCB_GETINPUTFORMATS",
    "LPDDHALVPORTCB_GETOUTPUTFORMATS",
    "LPDDHALVPORTCB_GETFIELD",
    "LPDDHALVPORTCB_GETLINE",
    "LPDDHALVPORTCB_GETVPORTCONNECT",
    "LPDDHALVPORTCB_DESTROYVPORT",
    "LPDDHALVPORTCB_GETFLIPSTATUS",
    "LPDDHALVPORTCB_UPDATE",
    "LPDDHALVPORTCB_WAITFORSYNC",
    "LPDDHALVPORTCB_GETSIGNALSTATUS",
    "LPDDHALVPORTCB_COLORCONTROL",
    "DDHAL_DDVIDEOPORTCALLBACKS",
    "LPDDHALCOLORCB_COLORCONTROL",
    "DDHAL_DDCOLORCONTROLCALLBACKS",
    "LPDDHALKERNELCB_SYNCSURFACE",
    "LPDDHALKERNELCB_SYNCVIDEOPORT",
    "DDHAL_DDKERNELCALLBACKS",
    "LPDDGAMMACALIBRATORPROC",
    "LPDDHALMOCOMPCB_GETGUIDS",
    "LPDDHALMOCOMPCB_GETFORMATS",
    "LPDDHALMOCOMPCB_CREATE",
    "LPDDHALMOCOMPCB_GETCOMPBUFFINFO",
    "LPDDHALMOCOMPCB_GETINTERNALINFO",
    "LPDDHALMOCOMPCB_BEGINFRAME",
    "LPDDHALMOCOMPCB_ENDFRAME",
    "LPDDHALMOCOMPCB_RENDER",
    "LPDDHALMOCOMPCB_QUERYSTATUS",
    "LPDDHALMOCOMPCB_DESTROY",
    "DDHAL_DDMOTIONCOMPCALLBACKS",
    "DDNONLOCALVIDMEMCAPS",
    "DDMORESURFACECAPS",
    "DDSTEREOMODE",
    "DDRAWI_DDRAWPALETTE_INT",
    "DDRAWI_DDRAWPALETTE_GBL",
    "DDRAWI_DDRAWPALETTE_LCL",
    "DDRAWI_DDRAWCLIPPER_INT",
    "DDRAWI_DDRAWCLIPPER_GBL",
    "DDRAWI_DDRAWCLIPPER_LCL",
    "ATTACHLIST",
    "DBLNODE",
    "ACCESSRECTLIST",
    "DDRAWI_DDRAWSURFACE_INT",
    "DDRAWI_DDRAWSURFACE_GBL",
    "DDRAWI_DDRAWSURFACE_GBL_MORE",
    "DDRAWI_DDRAWSURFACE_MORE",
    "DDRAWI_DDRAWSURFACE_LCL",
    "DDHALMODEINFO",
    "DDRAWI_DIRECTDRAW_INT",
    "DDHAL_CALLBACKS",
    "DDCORECAPS",
    "DDRAWI_DIRECTDRAW_GBL",
    "DDRAWI_DIRECTDRAW_LCL",
    "DDRAWI_DDVIDEOPORT_INT",
    "DDRAWI_DDVIDEOPORT_LCL",
    "DDRAWI_DDMOTIONCOMP_INT",
    "DDRAWI_DDMOTIONCOMP_LCL",
    "DDHALINFO",
    "LPDDHAL_SETINFO",
    "LPDDHAL_VIDMEMALLOC",
    "LPDDHAL_VIDMEMFREE",
    "DDHALDDRAWFNS",
    "DDHAL_BLTDATA",
    "DDHAL_LOCKDATA",
    "DDHAL_UNLOCKDATA",
    "DDHAL_UPDATEOVERLAYDATA",
    "DDHAL_SETOVERLAYPOSITIONDATA",
    "DDHAL_SETPALETTEDATA",
    "DDHAL_FLIPDATA",
    "DDHAL_DESTROYSURFACEDATA",
    "DDHAL_SETCLIPLISTDATA",
    "DDHAL_ADDATTACHEDSURFACEDATA",
    "DDHAL_SETCOLORKEYDATA",
    "DDHAL_GETBLTSTATUSDATA",
    "DDHAL_GETFLIPSTATUSDATA",
    "DDHAL_DESTROYPALETTEDATA",
    "DDHAL_SETENTRIESDATA",
    "DDHAL_CREATESURFACEDATA",
    "DDHAL_CANCREATESURFACEDATA",
    "DDHAL_CREATEPALETTEDATA",
    "DDHAL_WAITFORVERTICALBLANKDATA",
    "DDHAL_DESTROYDRIVERDATA",
    "DDHAL_SETMODEDATA",
    "DDHAL_DRVSETCOLORKEYDATA",
    "DDHAL_GETSCANLINEDATA",
    "DDHAL_SETEXCLUSIVEMODEDATA",
    "DDHAL_FLIPTOGDISURFACEDATA",
    "DDHAL_CANCREATEVPORTDATA",
    "DDHAL_CREATEVPORTDATA",
    "DDHAL_FLIPVPORTDATA",
    "DDHAL_GETVPORTBANDWIDTHDATA",
    "DDHAL_GETVPORTINPUTFORMATDATA",
    "DDHAL_GETVPORTOUTPUTFORMATDATA",
    "DDHAL_GETVPORTFIELDDATA",
    "DDHAL_GETVPORTLINEDATA",
    "DDHAL_GETVPORTCONNECTDATA",
    "DDHAL_DESTROYVPORTDATA",
    "DDHAL_GETVPORTFLIPSTATUSDATA",
    "DDHAL_UPDATEVPORTDATA",
    "DDHAL_WAITFORVPORTSYNCDATA",
    "DDHAL_GETVPORTSIGNALDATA",
    "DDHAL_VPORTCOLORDATA",
    "DDHAL_COLORCONTROLDATA",
    "DDHAL_GETDRIVERINFODATA",
    "DDHAL_GETAVAILDRIVERMEMORYDATA",
    "DDHAL_UPDATENONLOCALHEAPDATA",
    "DDHAL_GETHEAPALIGNMENTDATA",
    "DDHAL_CREATESURFACEEXDATA",
    "DDHAL_GETDRIVERSTATEDATA",
    "DDHAL_DESTROYDDLOCALDATA",
    "DDHAL_SYNCSURFACEDATA",
    "DDHAL_SYNCVIDEOPORTDATA",
    "DDHAL_GETMOCOMPGUIDSDATA",
    "DDHAL_GETMOCOMPFORMATSDATA",
    "DDHAL_CREATEMOCOMPDATA",
    "DDMCCOMPBUFFERINFO",
    "DDHAL_GETMOCOMPCOMPBUFFDATA",
    "DDHAL_GETINTERNALMOCOMPDATA",
    "DDHAL_BEGINMOCOMPFRAMEDATA",
    "DDHAL_ENDMOCOMPFRAMEDATA",
    "DDMCBUFFERINFO",
    "DDHAL_RENDERMOCOMPDATA",
    "DDHAL_QUERYMOCOMPSTATUSDATA",
    "DDHAL_DESTROYMOCOMPDATA",
    "_DD_DESTROYDRIVERDATA",
    "_DD_SETMODEDATA",
    "_DD_GETVPORTAUTOFLIPSURFACEDATA",
    "VIDEOMEMORY",
    "VIDEOMEMORYINFO",
    "PDD_SETCOLORKEY",
    "PDD_CANCREATESURFACE",
    "PDD_WAITFORVERTICALBLANK",
    "PDD_CREATESURFACE",
    "PDD_DESTROYDRIVER",
    "PDD_SETMODE",
    "PDD_CREATEPALETTE",
    "PDD_GETSCANLINE",
    "PDD_MAPMEMORY",
    "PDD_GETDRIVERINFO",
    "DD_CALLBACKS",
    "PDD_GETAVAILDRIVERMEMORY",
    "DD_MISCELLANEOUSCALLBACKS",
    "PDD_ALPHABLT",
    "PDD_CREATESURFACEEX",
    "PDD_GETDRIVERSTATE",
    "PDD_DESTROYDDLOCAL",
    "DD_MISCELLANEOUS2CALLBACKS",
    "PDD_FREEDRIVERMEMORY",
    "PDD_SETEXCLUSIVEMODE",
    "PDD_FLIPTOGDISURFACE",
    "DD_NTCALLBACKS",
    "PDD_PALCB_DESTROYPALETTE",
    "PDD_PALCB_SETENTRIES",
    "DD_PALETTECALLBACKS",
    "PDD_SURFCB_LOCK",
    "PDD_SURFCB_UNLOCK",
    "PDD_SURFCB_BLT",
    "PDD_SURFCB_UPDATEOVERLAY",
    "PDD_SURFCB_SETOVERLAYPOSITION",
    "PDD_SURFCB_SETPALETTE",
    "PDD_SURFCB_FLIP",
    "PDD_SURFCB_DESTROYSURFACE",
    "PDD_SURFCB_SETCLIPLIST",
    "PDD_SURFCB_ADDATTACHEDSURFACE",
    "PDD_SURFCB_SETCOLORKEY",
    "PDD_SURFCB_GETBLTSTATUS",
    "PDD_SURFCB_GETFLIPSTATUS",
    "DD_SURFACECALLBACKS",
    "PDD_VPORTCB_CANCREATEVIDEOPORT",
    "PDD_VPORTCB_CREATEVIDEOPORT",
    "PDD_VPORTCB_FLIP",
    "PDD_VPORTCB_GETBANDWIDTH",
    "PDD_VPORTCB_GETINPUTFORMATS",
    "PDD_VPORTCB_GETOUTPUTFORMATS",
    "PDD_VPORTCB_GETAUTOFLIPSURF",
    "PDD_VPORTCB_GETFIELD",
    "PDD_VPORTCB_GETLINE",
    "PDD_VPORTCB_GETVPORTCONNECT",
    "PDD_VPORTCB_DESTROYVPORT",
    "PDD_VPORTCB_GETFLIPSTATUS",
    "PDD_VPORTCB_UPDATE",
    "PDD_VPORTCB_WAITFORSYNC",
    "PDD_VPORTCB_GETSIGNALSTATUS",
    "PDD_VPORTCB_COLORCONTROL",
    "DD_VIDEOPORTCALLBACKS",
    "PDD_COLORCB_COLORCONTROL",
    "DD_COLORCONTROLCALLBACKS",
    "PDD_KERNELCB_SYNCSURFACE",
    "PDD_KERNELCB_SYNCVIDEOPORT",
    "DD_KERNELCALLBACKS",
    "PDD_MOCOMPCB_GETGUIDS",
    "PDD_MOCOMPCB_GETFORMATS",
    "PDD_MOCOMPCB_CREATE",
    "PDD_MOCOMPCB_GETCOMPBUFFINFO",
    "PDD_MOCOMPCB_GETINTERNALINFO",
    "PDD_MOCOMPCB_BEGINFRAME",
    "PDD_MOCOMPCB_ENDFRAME",
    "PDD_MOCOMPCB_RENDER",
    "PDD_MOCOMPCB_QUERYSTATUS",
    "PDD_MOCOMPCB_DESTROY",
    "DD_MOTIONCOMPCALLBACKS",
    "DD_NONLOCALVIDMEMCAPS",
    "DD_PALETTE_GLOBAL",
    "DD_PALETTE_LOCAL",
    "DD_CLIPPER_GLOBAL",
    "DD_CLIPPER_LOCAL",
    "DD_ATTACHLIST",
    "DD_SURFACE_INT",
    "DD_SURFACE_GLOBAL",
    "DD_SURFACE_MORE",
    "DD_SURFACE_LOCAL",
    "DD_MORECAPS",
    "DDNTCORECAPS",
    "DD_D3DBUFCALLBACKS",
    "DD_HALINFO_V4",
    "DD_HALINFO",
    "DD_DIRECTDRAW_GLOBAL",
    "DD_DIRECTDRAW_LOCAL",
    "DD_VIDEOPORT_LOCAL",
    "DD_MOTIONCOMP_LOCAL",
    "DD_MORESURFACECAPS",
    "DD_STEREOMODE",
    "DD_UPDATENONLOCALHEAPDATA",
    "DD_NTPRIVATEDRIVERCAPS",
    "DD_BLTDATA",
    "DD_LOCKDATA",
    "DD_UNLOCKDATA",
    "DD_UPDATEOVERLAYDATA",
    "DD_SETOVERLAYPOSITIONDATA",
    "DD_SETPALETTEDATA",
    "DD_FLIPDATA",
    "DD_DESTROYSURFACEDATA",
    "DD_SETCLIPLISTDATA",
    "DD_ADDATTACHEDSURFACEDATA",
    "DD_SETCOLORKEYDATA",
    "DD_GETBLTSTATUSDATA",
    "DD_GETFLIPSTATUSDATA",
    "DD_DESTROYPALETTEDATA",
    "DD_SETENTRIESDATA",
    "DD_CREATESURFACEDATA",
    "DD_CANCREATESURFACEDATA",
    "DD_CREATEPALETTEDATA",
    "DD_WAITFORVERTICALBLANKDATA",
    "DD_DRVSETCOLORKEYDATA",
    "DD_GETSCANLINEDATA",
    "DD_MAPMEMORYDATA",
    "DD_CANCREATEVPORTDATA",
    "DD_CREATEVPORTDATA",
    "DD_FLIPVPORTDATA",
    "DD_GETVPORTBANDWIDTHDATA",
    "DD_GETVPORTINPUTFORMATDATA",
    "DD_GETVPORTOUTPUTFORMATDATA",
    "DD_GETVPORTFIELDDATA",
    "DD_GETVPORTLINEDATA",
    "DD_GETVPORTCONNECTDATA",
    "DD_DESTROYVPORTDATA",
    "DD_GETVPORTFLIPSTATUSDATA",
    "DD_UPDATEVPORTDATA",
    "DD_WAITFORVPORTSYNCDATA",
    "DD_GETVPORTSIGNALDATA",
    "DD_VPORTCOLORDATA",
    "DD_COLORCONTROLDATA",
    "DD_GETDRIVERINFODATA",
    "DD_GETAVAILDRIVERMEMORYDATA",
    "DD_FREEDRIVERMEMORYDATA",
    "DD_SETEXCLUSIVEMODEDATA",
    "DD_FLIPTOGDISURFACEDATA",
    "DD_SYNCSURFACEDATA",
    "DD_SYNCVIDEOPORTDATA",
    "DD_GETMOCOMPGUIDSDATA",
    "DD_GETMOCOMPFORMATSDATA",
    "DD_CREATEMOCOMPDATA",
    "DDCOMPBUFFERINFO",
    "DD_GETMOCOMPCOMPBUFFDATA",
    "DD_GETINTERNALMOCOMPDATA",
    "DD_BEGINMOCOMPFRAMEDATA",
    "DD_ENDMOCOMPFRAMEDATA",
    "DDMOCOMPBUFFERINFO",
    "DD_RENDERMOCOMPDATA",
    "DD_QUERYMOCOMPSTATUSDATA",
    "DD_DESTROYMOCOMPDATA",
    "DD_CREATESURFACEEXDATA",
    "DD_GETDRIVERSTATEDATA",
    "DD_DESTROYDDLOCALDATA",
    "MDL",
    "DDSURFACEDATA",
    "DDVIDEOPORTDATA",
    "DX_IRQDATA",
    "PDX_IRQCALLBACK",
    "DDGETIRQINFO",
    "DDENABLEIRQINFO",
    "DDSKIPNEXTFIELDINFO",
    "DDBOBNEXTFIELDINFO",
    "DDSETSTATEININFO",
    "DDSETSTATEOUTINFO",
    "DDLOCKININFO",
    "DDLOCKOUTINFO",
    "DDFLIPOVERLAYINFO",
    "DDFLIPVIDEOPORTINFO",
    "DDGETPOLARITYININFO",
    "DDGETPOLARITYOUTINFO",
    "DDGETCURRENTAUTOFLIPININFO",
    "DDGETCURRENTAUTOFLIPOUTINFO",
    "DDGETPREVIOUSAUTOFLIPININFO",
    "DDGETPREVIOUSAUTOFLIPOUTINFO",
    "DDTRANSFERININFO",
    "DDTRANSFEROUTINFO",
    "DDGETTRANSFERSTATUSOUTINFO",
    "PDX_GETIRQINFO",
    "PDX_ENABLEIRQ",
    "PDX_SKIPNEXTFIELD",
    "PDX_BOBNEXTFIELD",
    "PDX_SETSTATE",
    "PDX_LOCK",
    "PDX_FLIPOVERLAY",
    "PDX_FLIPVIDEOPORT",
    "PDX_GETPOLARITY",
    "PDX_GETCURRENTAUTOFLIP",
    "PDX_GETPREVIOUSAUTOFLIP",
    "PDX_TRANSFER",
    "PDX_GETTRANSFERSTATUS",
    "DXAPI_INTERFACE",
    "DirectDrawEnumerateW",
    "DirectDrawEnumerate",
    "DirectDrawEnumerateA",
    "DirectDrawEnumerateExW",
    "DirectDrawEnumerateEx",
    "DirectDrawEnumerateExA",
    "DirectDrawCreate",
    "DirectDrawCreateEx",
    "DirectDrawCreateClipper",
]
