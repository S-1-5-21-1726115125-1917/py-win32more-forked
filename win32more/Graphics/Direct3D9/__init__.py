from win32more.base import *
import win32more.Foundation
import win32more.Graphics.Direct3D
import win32more.Graphics.Direct3D9
import win32more.Graphics.Gdi
import win32more.System.Com

import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        f = globals()[f"_define_{name}"]
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, f())
    return getattr(_module, name)
def __dir__():
    return __all__
D3DRTYPECOUNT = 8
D3DCS_LEFT = 1
D3DCS_RIGHT = 2
D3DCS_TOP = 4
D3DCS_BOTTOM = 8
D3DCS_FRONT = 16
D3DCS_BACK = 32
D3DCS_PLANE0 = 64
D3DCS_PLANE1 = 128
D3DCS_PLANE2 = 256
D3DCS_PLANE3 = 512
D3DCS_PLANE4 = 1024
D3DCS_PLANE5 = 2048
D3D_MAX_SIMULTANEOUS_RENDERTARGETS = 4
D3DWRAP_W = 4
D3DDMAPSAMPLER = 256
D3DVERTEXTEXTURESAMPLER0 = 257
D3DVERTEXTEXTURESAMPLER1 = 258
D3DVERTEXTEXTURESAMPLER2 = 259
D3DVERTEXTEXTURESAMPLER3 = 260
D3DTSS_TCI_SPHEREMAP = 262144
D3DTA_TEMP = 5
D3DTA_CONSTANT = 6
D3DFVF_XYZW = 16386
D3DFVF_PSIZE = 32
D3DFVF_LASTBETA_UBYTE4 = 4096
D3DFVF_LASTBETA_D3DCOLOR = 32768
MAXD3DDECLUSAGEINDEX = 15
MAXD3DDECLLENGTH = 64
D3DSTREAMSOURCE_INDEXEDDATA = 1073741824
D3DSTREAMSOURCE_INSTANCEDATA = 2147483648
D3DSI_OPCODE_MASK = 65535
D3DSI_INSTLENGTH_MASK = 251658240
D3DSI_INSTLENGTH_SHIFT = 24
D3DSI_COISSUE = 1073741824
D3DSP_OPCODESPECIFICCONTROL_MASK = 16711680
D3DSP_OPCODESPECIFICCONTROL_SHIFT = 16
D3DSHADER_COMPARISON_SHIFT = 16
D3DSP_DCL_USAGE_SHIFT = 0
D3DSP_DCL_USAGE_MASK = 15
D3DSP_DCL_USAGEINDEX_SHIFT = 16
D3DSP_DCL_USAGEINDEX_MASK = 983040
D3DSP_TEXTURETYPE_SHIFT = 27
D3DSP_TEXTURETYPE_MASK = 2013265920
D3DSP_REGNUM_MASK = 2047
D3DSP_WRITEMASK_0 = 65536
D3DSP_WRITEMASK_1 = 131072
D3DSP_WRITEMASK_2 = 262144
D3DSP_WRITEMASK_3 = 524288
D3DSP_WRITEMASK_ALL = 983040
D3DSP_DSTMOD_SHIFT = 20
D3DSP_DSTMOD_MASK = 15728640
D3DSP_DSTSHIFT_SHIFT = 24
D3DSP_DSTSHIFT_MASK = 251658240
D3DSP_REGTYPE_SHIFT = 28
D3DSP_REGTYPE_SHIFT2 = 8
D3DSP_REGTYPE_MASK = 1879048192
D3DSP_REGTYPE_MASK2 = 6144
D3DVS_ADDRESSMODE_SHIFT = 13
D3DSHADER_ADDRESSMODE_SHIFT = 13
D3DVS_SWIZZLE_SHIFT = 16
D3DVS_SWIZZLE_MASK = 16711680
D3DSP_SWIZZLE_SHIFT = 16
D3DSP_SWIZZLE_MASK = 16711680
D3DSP_SRCMOD_SHIFT = 24
D3DSP_SRCMOD_MASK = 251658240
D3DSP_MIN_PRECISION_SHIFT = 14
D3DSP_MIN_PRECISION_MASK = 49152
D3DSI_COMMENTSIZE_SHIFT = 16
D3DSI_COMMENTSIZE_MASK = 2147418112
D3DPRESENT_RATE_DEFAULT = 0
D3DPRESENTFLAG_LOCKABLE_BACKBUFFER = 1
D3DPRESENTFLAG_DISCARD_DEPTHSTENCIL = 2
D3DPRESENTFLAG_DEVICECLIP = 4
D3DPRESENTFLAG_VIDEO = 16
D3DPRESENTFLAG_NOAUTOROTATE = 32
D3DPRESENTFLAG_UNPRUNEDMODE = 64
D3DPRESENTFLAG_OVERLAY_LIMITEDRGB = 128
D3DPRESENTFLAG_OVERLAY_YCbCr_BT709 = 256
D3DPRESENTFLAG_OVERLAY_YCbCr_xvYCC = 512
D3DPRESENTFLAG_RESTRICTED_CONTENT = 1024
D3DPRESENTFLAG_RESTRICT_SHARED_RESOURCE_DRIVER = 2048
D3DUSAGE_RENDERTARGET = 1
D3DUSAGE_DEPTHSTENCIL = 2
D3DUSAGE_DYNAMIC = 512
D3DUSAGE_NONSECURE = 8388608
D3DUSAGE_AUTOGENMIPMAP = 1024
D3DUSAGE_DMAP = 16384
D3DUSAGE_QUERY_LEGACYBUMPMAP = 32768
D3DUSAGE_QUERY_SRGBREAD = 65536
D3DUSAGE_QUERY_FILTER = 131072
D3DUSAGE_QUERY_SRGBWRITE = 262144
D3DUSAGE_QUERY_POSTPIXELSHADER_BLENDING = 524288
D3DUSAGE_QUERY_VERTEXTEXTURE = 1048576
D3DUSAGE_QUERY_WRAPANDMIP = 2097152
D3DUSAGE_WRITEONLY = 8
D3DUSAGE_SOFTWAREPROCESSING = 16
D3DUSAGE_DONOTCLIP = 32
D3DUSAGE_POINTS = 64
D3DUSAGE_RTPATCHES = 128
D3DUSAGE_NPATCHES = 256
D3DUSAGE_TEXTAPI = 268435456
D3DUSAGE_RESTRICTED_CONTENT = 2048
D3DUSAGE_RESTRICT_SHARED_RESOURCE = 8192
D3DUSAGE_RESTRICT_SHARED_RESOURCE_DRIVER = 4096
D3DLOCK_READONLY = 16
D3DLOCK_DISCARD = 8192
D3DLOCK_NOOVERWRITE = 4096
D3DLOCK_NOSYSLOCK = 2048
D3DLOCK_DONOTWAIT = 16384
D3DLOCK_NO_DIRTY_UPDATE = 32768
MAX_DEVICE_IDENTIFIER_STRING = 512
D3DISSUE_END = 1
D3DISSUE_BEGIN = 2
D3DGETDATA_FLUSH = 1
D3DCOMPOSERECTS_MAXNUMRECTS = 65535
D3DCONVOLUTIONMONO_MAXWIDTH = 7
D3DCONVOLUTIONMONO_MAXHEIGHT = 7
D3DFMT_A1_SURFACE_MAXWIDTH = 8192
D3DFMT_A1_SURFACE_MAXHEIGHT = 2048
D3D9_RESOURCE_PRIORITY_MINIMUM = 671088640
D3D9_RESOURCE_PRIORITY_LOW = 1342177280
D3D9_RESOURCE_PRIORITY_NORMAL = 2013265920
D3D9_RESOURCE_PRIORITY_HIGH = 2684354560
D3D9_RESOURCE_PRIORITY_MAXIMUM = 3355443200
D3D_OMAC_SIZE = 16
D3DAUTHENTICATEDQUERY_PROTECTION = 'a84eb584-c495-48aa-b94d-8bd2d6fbce05'
D3DAUTHENTICATEDQUERY_CHANNELTYPE = 'bc1b18a5-b1fb-42ab-bd94-b5828b4bf7be'
D3DAUTHENTICATEDQUERY_DEVICEHANDLE = 'ec1c539d-8cff-4e2a-bcc4-f5692f99f480'
D3DAUTHENTICATEDQUERY_CRYPTOSESSION = '2634499e-d018-4d74-ac17-7f724059528d'
D3DAUTHENTICATEDQUERY_RESTRICTEDSHAREDRESOURCEPROCESSCOUNT = '0db207b3-9450-46a6-82de-1b96d44f9cf2'
D3DAUTHENTICATEDQUERY_RESTRICTEDSHAREDRESOURCEPROCESS = '649bbadb-f0f4-4639-a15b-24393fc3abac'
D3DAUTHENTICATEDQUERY_UNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT = '012f0bd6-e662-4474-befd-aa53e5143c6d'
D3DAUTHENTICATEDQUERY_OUTPUTIDCOUNT = '2c042b5e-8c07-46d5-aabe-8f75cbad4c31'
D3DAUTHENTICATEDQUERY_OUTPUTID = '839ddca3-9b4e-41e4-b053-892bd2a11ee7'
D3DAUTHENTICATEDQUERY_ACCESSIBILITYATTRIBUTES = '6214d9d2-432c-4abb-9fce-216eea269e3b'
D3DAUTHENTICATEDQUERY_ENCRYPTIONWHENACCESSIBLEGUIDCOUNT = 'b30f7066-203c-4b07-93fc-ceaafd61241e'
D3DAUTHENTICATEDQUERY_ENCRYPTIONWHENACCESSIBLEGUID = 'f83a5958-e986-4bda-beb0-411f6a7a01b7'
D3DAUTHENTICATEDQUERY_CURRENTENCRYPTIONWHENACCESSIBLE = 'ec1791c7-dad3-4f15-9ec3-faa93d60d4f0'
D3DAUTHENTICATEDCONFIGURE_INITIALIZE = '06114bdb-3523-470a-8dca-fbc2845154f0'
D3DAUTHENTICATEDCONFIGURE_PROTECTION = '50455658-3f47-4362-bf99-bfdfcde9ed29'
D3DAUTHENTICATEDCONFIGURE_CRYPTOSESSION = '6346cc54-2cfc-4ad4-8224-d15837de7700'
D3DAUTHENTICATEDCONFIGURE_SHAREDRESOURCE = '0772d047-1b40-48e8-9ca6-b5f510de9f01'
D3DAUTHENTICATEDCONFIGURE_ENCRYPTIONWHENACCESSIBLE = '41fff286-6ae0-4d43-9d55-a46e9efd158a'
D3DVS20CAPS_PREDICATION = 1
D3DVS20_MAX_DYNAMICFLOWCONTROLDEPTH = 24
D3DVS20_MIN_DYNAMICFLOWCONTROLDEPTH = 0
D3DVS20_MAX_NUMTEMPS = 32
D3DVS20_MIN_NUMTEMPS = 12
D3DVS20_MAX_STATICFLOWCONTROLDEPTH = 4
D3DVS20_MIN_STATICFLOWCONTROLDEPTH = 1
D3DPS20CAPS_ARBITRARYSWIZZLE = 1
D3DPS20CAPS_GRADIENTINSTRUCTIONS = 2
D3DPS20CAPS_PREDICATION = 4
D3DPS20CAPS_NODEPENDENTREADLIMIT = 8
D3DPS20CAPS_NOTEXINSTRUCTIONLIMIT = 16
D3DPS20_MAX_DYNAMICFLOWCONTROLDEPTH = 24
D3DPS20_MIN_DYNAMICFLOWCONTROLDEPTH = 0
D3DPS20_MAX_NUMTEMPS = 32
D3DPS20_MIN_NUMTEMPS = 12
D3DPS20_MAX_STATICFLOWCONTROLDEPTH = 4
D3DPS20_MIN_STATICFLOWCONTROLDEPTH = 0
D3DPS20_MAX_NUMINSTRUCTIONSLOTS = 512
D3DPS20_MIN_NUMINSTRUCTIONSLOTS = 96
D3DMIN30SHADERINSTRUCTIONS = 512
D3DMAX30SHADERINSTRUCTIONS = 32768
D3DOVERLAYCAPS_FULLRANGERGB = 1
D3DOVERLAYCAPS_LIMITEDRANGERGB = 2
D3DOVERLAYCAPS_YCbCr_BT601 = 4
D3DOVERLAYCAPS_YCbCr_BT709 = 8
D3DOVERLAYCAPS_YCbCr_BT601_xvYCC = 16
D3DOVERLAYCAPS_YCbCr_BT709_xvYCC = 32
D3DOVERLAYCAPS_STRETCHX = 64
D3DOVERLAYCAPS_STRETCHY = 128
D3DCPCAPS_SOFTWARE = 1
D3DCPCAPS_HARDWARE = 2
D3DCPCAPS_PROTECTIONALWAYSON = 4
D3DCPCAPS_PARTIALDECRYPTION = 8
D3DCPCAPS_CONTENTKEY = 16
D3DCPCAPS_FRESHENSESSIONKEY = 32
D3DCPCAPS_ENCRYPTEDREADBACK = 64
D3DCPCAPS_ENCRYPTEDREADBACKKEY = 128
D3DCPCAPS_SEQUENTIAL_CTR_IV = 256
D3DCPCAPS_ENCRYPTSLICEDATAONLY = 512
D3DCRYPTOTYPE_AES128_CTR = '9b6bd711-4f74-41c9-9e7b-0be2d7d93b4f'
D3DCRYPTOTYPE_PROPRIETARY = 'ab4e9afd-1d1c-46e6-a72f-0869917b0de8'
D3DKEYEXCHANGE_RSAES_OAEP = 'c1949895-d72a-4a1d-8e5d-ed857d171520'
D3DKEYEXCHANGE_DXVA = '43d3775c-38e5-4924-8d86-d3fccf153e9b'
D3DCAPS_OVERLAY = 2048
D3DCAPS_READ_SCANLINE = 131072
D3DCAPS2_FULLSCREENGAMMA = 131072
D3DCAPS2_CANCALIBRATEGAMMA = 1048576
D3DCAPS2_RESERVED = 33554432
D3DCAPS2_CANMANAGERESOURCE = 268435456
D3DCAPS2_DYNAMICTEXTURES = 536870912
D3DCAPS2_CANAUTOGENMIPMAP = 1073741824
D3DCAPS2_CANSHARERESOURCE = -2147483648
D3DCAPS3_RESERVED = -2147483617
D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD = 32
D3DCAPS3_LINEAR_TO_SRGB_PRESENTATION = 128
D3DCAPS3_COPY_TO_VIDMEM = 256
D3DCAPS3_COPY_TO_SYSTEMMEM = 512
D3DCAPS3_DXVAHD = 1024
D3DCAPS3_DXVAHD_LIMITED = 2048
D3DPRESENT_INTERVAL_DEFAULT = 0
D3DPRESENT_INTERVAL_ONE = 1
D3DPRESENT_INTERVAL_TWO = 2
D3DPRESENT_INTERVAL_THREE = 4
D3DPRESENT_INTERVAL_FOUR = 8
D3DPRESENT_INTERVAL_IMMEDIATE = -2147483648
D3DCURSORCAPS_COLOR = 1
D3DCURSORCAPS_LOWRES = 2
D3DDEVCAPS_PUREDEVICE = 1048576
D3DDEVCAPS_QUINTICRTPATCHES = 2097152
D3DDEVCAPS_RTPATCHES = 4194304
D3DDEVCAPS_RTPATCHHANDLEZERO = 8388608
D3DDEVCAPS_NPATCHES = 16777216
D3DPMISCCAPS_COLORWRITEENABLE = 128
D3DPMISCCAPS_CLIPPLANESCALEDPOINTS = 256
D3DPMISCCAPS_CLIPTLVERTS = 512
D3DPMISCCAPS_TSSARGTEMP = 1024
D3DPMISCCAPS_BLENDOP = 2048
D3DPMISCCAPS_NULLREFERENCE = 4096
D3DPMISCCAPS_INDEPENDENTWRITEMASKS = 16384
D3DPMISCCAPS_PERSTAGECONSTANT = 32768
D3DPMISCCAPS_FOGANDSPECULARALPHA = 65536
D3DPMISCCAPS_SEPARATEALPHABLEND = 131072
D3DPMISCCAPS_MRTINDEPENDENTBITDEPTHS = 262144
D3DPMISCCAPS_MRTPOSTPIXELSHADERBLENDING = 524288
D3DPMISCCAPS_FOGVERTEXCLAMPED = 1048576
D3DPMISCCAPS_POSTBLENDSRGBCONVERT = 2097152
D3DLINECAPS_TEXTURE = 1
D3DLINECAPS_ZTEST = 2
D3DLINECAPS_BLEND = 4
D3DLINECAPS_ALPHACMP = 8
D3DLINECAPS_FOG = 16
D3DLINECAPS_ANTIALIAS = 32
D3DPRASTERCAPS_COLORPERSPECTIVE = 4194304
D3DPRASTERCAPS_SCISSORTEST = 16777216
D3DPRASTERCAPS_SLOPESCALEDEPTHBIAS = 33554432
D3DPRASTERCAPS_DEPTHBIAS = 67108864
D3DPRASTERCAPS_MULTISAMPLE_TOGGLE = 134217728
D3DPBLENDCAPS_BLENDFACTOR = 8192
D3DPBLENDCAPS_SRCCOLOR2 = 16384
D3DPBLENDCAPS_INVSRCCOLOR2 = 32768
D3DPTEXTURECAPS_VOLUMEMAP = 8192
D3DPTEXTURECAPS_MIPMAP = 16384
D3DPTEXTURECAPS_MIPVOLUMEMAP = 32768
D3DPTEXTURECAPS_MIPCUBEMAP = 65536
D3DPTEXTURECAPS_CUBEMAP_POW2 = 131072
D3DPTEXTURECAPS_VOLUMEMAP_POW2 = 262144
D3DPTEXTURECAPS_NOPROJECTEDBUMPENV = 2097152
D3DPTFILTERCAPS_MINFPYRAMIDALQUAD = 2048
D3DPTFILTERCAPS_MINFGAUSSIANQUAD = 4096
D3DPTFILTERCAPS_CONVOLUTIONMONO = 262144
D3DPTFILTERCAPS_MAGFPYRAMIDALQUAD = 134217728
D3DPTFILTERCAPS_MAGFGAUSSIANQUAD = 268435456
D3DPTADDRESSCAPS_MIRRORONCE = 32
D3DSTENCILCAPS_TWOSIDED = 256
D3DTEXOPCAPS_MULTIPLYADD = 16777216
D3DTEXOPCAPS_LERP = 33554432
D3DFVFCAPS_PSIZE = 1048576
D3DVTXPCAPS_TWEENING = 64
D3DVTXPCAPS_TEXGEN_SPHEREMAP = 256
D3DVTXPCAPS_NO_TEXGEN_NONLOCALVIEWER = 512
D3DDEVCAPS2_STREAMOFFSET = 1
D3DDEVCAPS2_DMAPNPATCH = 2
D3DDEVCAPS2_ADAPTIVETESSRTPATCH = 4
D3DDEVCAPS2_ADAPTIVETESSNPATCH = 8
D3DDEVCAPS2_CAN_STRETCHRECT_FROM_TEXTURES = 16
D3DDEVCAPS2_PRESAMPLEDDMAPNPATCH = 32
D3DDEVCAPS2_VERTEXELEMENTSCANSHARESTREAMOFFSET = 64
D3DDTCAPS_UBYTE4 = 1
D3DDTCAPS_UBYTE4N = 2
D3DDTCAPS_SHORT2N = 4
D3DDTCAPS_SHORT4N = 8
D3DDTCAPS_USHORT2N = 16
D3DDTCAPS_USHORT4N = 32
D3DDTCAPS_UDEC3 = 64
D3DDTCAPS_DEC3N = 128
D3DDTCAPS_FLOAT16_2 = 256
D3DDTCAPS_FLOAT16_4 = 512
D3DSPD_IUNKNOWN = 1
D3DCREATE_FPU_PRESERVE = 2
D3DCREATE_MULTITHREADED = 4
D3DCREATE_PUREDEVICE = 16
D3DCREATE_SOFTWARE_VERTEXPROCESSING = 32
D3DCREATE_HARDWARE_VERTEXPROCESSING = 64
D3DCREATE_MIXED_VERTEXPROCESSING = 128
D3DCREATE_DISABLE_DRIVER_MANAGEMENT = 256
D3DCREATE_ADAPTERGROUP_DEVICE = 512
D3DADAPTER_DEFAULT = 0
D3DENUM_NO_DRIVERVERSION = 4
D3DPRESENT_BACK_BUFFERS_MAX = 3
D3DSGR_NO_CALIBRATION = 0
D3DSGR_CALIBRATE = 1
D3DCURSOR_IMMEDIATE_UPDATE = 1
D3DPRESENT_DONOTWAIT = 1
D3DPRESENT_LINEAR_CONTENT = 2
_FACD3D = 2166
D3D_SDK_VERSION = 32
D3D9b_SDK_VERSION = 31
D3DCREATE_DISABLE_DRIVER_MANAGEMENT_EX = 1024
D3DCREATE_NOWINDOWCHANGES = 2048
D3DCREATE_DISABLE_PSGP_THREADING = 8192
D3DCREATE_ENABLE_PRESENTSTATS = 16384
D3DCREATE_DISABLE_PRINTSCREEN = 32768
D3DCREATE_SCREENSAVER = 268435456
D3DENUM_WHQL_LEVEL = 2
D3DPRESENT_BACK_BUFFERS_MAX_EX = 30
D3DPRESENT_DONOTFLIP = 4
D3DPRESENT_FLIPRESTART = 8
D3DPRESENT_VIDEO_RESTRICT_TO_MONITOR = 16
D3DPRESENT_UPDATEOVERLAYONLY = 32
D3DPRESENT_HIDEOVERLAY = 64
D3DPRESENT_UPDATECOLORKEY = 128
D3DPRESENT_FORCEIMMEDIATE = 256
def _define_D3DCOLORVALUE_head():
    class D3DCOLORVALUE(Structure):
        pass
    return D3DCOLORVALUE
def _define_D3DCOLORVALUE():
    D3DCOLORVALUE = win32more.Graphics.Direct3D9.D3DCOLORVALUE_head
    D3DCOLORVALUE._fields_ = [
        ("r", Single),
        ("g", Single),
        ("b", Single),
        ("a", Single),
    ]
    return D3DCOLORVALUE
def _define_D3DRECT_head():
    class D3DRECT(Structure):
        pass
    return D3DRECT
def _define_D3DRECT():
    D3DRECT = win32more.Graphics.Direct3D9.D3DRECT_head
    D3DRECT._fields_ = [
        ("x1", Int32),
        ("y1", Int32),
        ("x2", Int32),
        ("y2", Int32),
    ]
    return D3DRECT
def _define_D3DVIEWPORT9_head():
    class D3DVIEWPORT9(Structure):
        pass
    return D3DVIEWPORT9
def _define_D3DVIEWPORT9():
    D3DVIEWPORT9 = win32more.Graphics.Direct3D9.D3DVIEWPORT9_head
    D3DVIEWPORT9._fields_ = [
        ("X", UInt32),
        ("Y", UInt32),
        ("Width", UInt32),
        ("Height", UInt32),
        ("MinZ", Single),
        ("MaxZ", Single),
    ]
    return D3DVIEWPORT9
def _define_D3DCLIPSTATUS9_head():
    class D3DCLIPSTATUS9(Structure):
        pass
    return D3DCLIPSTATUS9
def _define_D3DCLIPSTATUS9():
    D3DCLIPSTATUS9 = win32more.Graphics.Direct3D9.D3DCLIPSTATUS9_head
    D3DCLIPSTATUS9._fields_ = [
        ("ClipUnion", UInt32),
        ("ClipIntersection", UInt32),
    ]
    return D3DCLIPSTATUS9
def _define_D3DMATERIAL9_head():
    class D3DMATERIAL9(Structure):
        pass
    return D3DMATERIAL9
def _define_D3DMATERIAL9():
    D3DMATERIAL9 = win32more.Graphics.Direct3D9.D3DMATERIAL9_head
    D3DMATERIAL9._fields_ = [
        ("Diffuse", win32more.Graphics.Direct3D9.D3DCOLORVALUE),
        ("Ambient", win32more.Graphics.Direct3D9.D3DCOLORVALUE),
        ("Specular", win32more.Graphics.Direct3D9.D3DCOLORVALUE),
        ("Emissive", win32more.Graphics.Direct3D9.D3DCOLORVALUE),
        ("Power", Single),
    ]
    return D3DMATERIAL9
D3DLIGHTTYPE = Int32
D3DLIGHT_POINT = 1
D3DLIGHT_SPOT = 2
D3DLIGHT_DIRECTIONAL = 3
D3DLIGHT_FORCE_DWORD = 2147483647
def _define_D3DLIGHT9_head():
    class D3DLIGHT9(Structure):
        pass
    return D3DLIGHT9
def _define_D3DLIGHT9():
    D3DLIGHT9 = win32more.Graphics.Direct3D9.D3DLIGHT9_head
    D3DLIGHT9._fields_ = [
        ("Type", win32more.Graphics.Direct3D9.D3DLIGHTTYPE),
        ("Diffuse", win32more.Graphics.Direct3D9.D3DCOLORVALUE),
        ("Specular", win32more.Graphics.Direct3D9.D3DCOLORVALUE),
        ("Ambient", win32more.Graphics.Direct3D9.D3DCOLORVALUE),
        ("Position", win32more.Graphics.Direct3D.D3DVECTOR),
        ("Direction", win32more.Graphics.Direct3D.D3DVECTOR),
        ("Range", Single),
        ("Falloff", Single),
        ("Attenuation0", Single),
        ("Attenuation1", Single),
        ("Attenuation2", Single),
        ("Theta", Single),
        ("Phi", Single),
    ]
    return D3DLIGHT9
D3DSHADEMODE = Int32
D3DSHADE_FLAT = 1
D3DSHADE_GOURAUD = 2
D3DSHADE_PHONG = 3
D3DSHADE_FORCE_DWORD = 2147483647
D3DFILLMODE = Int32
D3DFILL_POINT = 1
D3DFILL_WIREFRAME = 2
D3DFILL_SOLID = 3
D3DFILL_FORCE_DWORD = 2147483647
D3DBLEND = UInt32
D3DBLEND_ZERO = 1
D3DBLEND_ONE = 2
D3DBLEND_SRCCOLOR = 3
D3DBLEND_INVSRCCOLOR = 4
D3DBLEND_SRCALPHA = 5
D3DBLEND_INVSRCALPHA = 6
D3DBLEND_DESTALPHA = 7
D3DBLEND_INVDESTALPHA = 8
D3DBLEND_DESTCOLOR = 9
D3DBLEND_INVDESTCOLOR = 10
D3DBLEND_SRCALPHASAT = 11
D3DBLEND_BOTHSRCALPHA = 12
D3DBLEND_BOTHINVSRCALPHA = 13
D3DBLEND_BLENDFACTOR = 14
D3DBLEND_INVBLENDFACTOR = 15
D3DBLEND_SRCCOLOR2 = 16
D3DBLEND_INVSRCCOLOR2 = 17
D3DBLEND_FORCE_DWORD = 2147483647
D3DBLENDOP = UInt32
D3DBLENDOP_ADD = 1
D3DBLENDOP_SUBTRACT = 2
D3DBLENDOP_REVSUBTRACT = 3
D3DBLENDOP_MIN = 4
D3DBLENDOP_MAX = 5
D3DBLENDOP_FORCE_DWORD = 2147483647
D3DTEXTUREADDRESS = Int32
D3DTADDRESS_WRAP = 1
D3DTADDRESS_MIRROR = 2
D3DTADDRESS_CLAMP = 3
D3DTADDRESS_BORDER = 4
D3DTADDRESS_MIRRORONCE = 5
D3DTADDRESS_FORCE_DWORD = 2147483647
D3DCULL = UInt32
D3DCULL_NONE = 1
D3DCULL_CW = 2
D3DCULL_CCW = 3
D3DCULL_FORCE_DWORD = 2147483647
D3DCMPFUNC = Int32
D3DCMP_NEVER = 1
D3DCMP_LESS = 2
D3DCMP_EQUAL = 3
D3DCMP_LESSEQUAL = 4
D3DCMP_GREATER = 5
D3DCMP_NOTEQUAL = 6
D3DCMP_GREATEREQUAL = 7
D3DCMP_ALWAYS = 8
D3DCMP_FORCE_DWORD = 2147483647
D3DSTENCILOP = UInt32
D3DSTENCILOP_KEEP = 1
D3DSTENCILOP_ZERO = 2
D3DSTENCILOP_REPLACE = 3
D3DSTENCILOP_INCRSAT = 4
D3DSTENCILOP_DECRSAT = 5
D3DSTENCILOP_INVERT = 6
D3DSTENCILOP_INCR = 7
D3DSTENCILOP_DECR = 8
D3DSTENCILOP_FORCE_DWORD = 2147483647
D3DFOGMODE = Int32
D3DFOG_NONE = 0
D3DFOG_EXP = 1
D3DFOG_EXP2 = 2
D3DFOG_LINEAR = 3
D3DFOG_FORCE_DWORD = 2147483647
D3DZBUFFERTYPE = Int32
D3DZB_FALSE = 0
D3DZB_TRUE = 1
D3DZB_USEW = 2
D3DZB_FORCE_DWORD = 2147483647
D3DPRIMITIVETYPE = Int32
D3DPT_POINTLIST = 1
D3DPT_LINELIST = 2
D3DPT_LINESTRIP = 3
D3DPT_TRIANGLELIST = 4
D3DPT_TRIANGLESTRIP = 5
D3DPT_TRIANGLEFAN = 6
D3DPT_FORCE_DWORD = 2147483647
D3DTRANSFORMSTATETYPE = Int32
D3DTS_VIEW = 2
D3DTS_PROJECTION = 3
D3DTS_TEXTURE0 = 16
D3DTS_TEXTURE1 = 17
D3DTS_TEXTURE2 = 18
D3DTS_TEXTURE3 = 19
D3DTS_TEXTURE4 = 20
D3DTS_TEXTURE5 = 21
D3DTS_TEXTURE6 = 22
D3DTS_TEXTURE7 = 23
D3DTS_FORCE_DWORD = 2147483647
D3DRENDERSTATETYPE = Int32
D3DRS_ZENABLE = 7
D3DRS_FILLMODE = 8
D3DRS_SHADEMODE = 9
D3DRS_ZWRITEENABLE = 14
D3DRS_ALPHATESTENABLE = 15
D3DRS_LASTPIXEL = 16
D3DRS_SRCBLEND = 19
D3DRS_DESTBLEND = 20
D3DRS_CULLMODE = 22
D3DRS_ZFUNC = 23
D3DRS_ALPHAREF = 24
D3DRS_ALPHAFUNC = 25
D3DRS_DITHERENABLE = 26
D3DRS_ALPHABLENDENABLE = 27
D3DRS_FOGENABLE = 28
D3DRS_SPECULARENABLE = 29
D3DRS_FOGCOLOR = 34
D3DRS_FOGTABLEMODE = 35
D3DRS_FOGSTART = 36
D3DRS_FOGEND = 37
D3DRS_FOGDENSITY = 38
D3DRS_RANGEFOGENABLE = 48
D3DRS_STENCILENABLE = 52
D3DRS_STENCILFAIL = 53
D3DRS_STENCILZFAIL = 54
D3DRS_STENCILPASS = 55
D3DRS_STENCILFUNC = 56
D3DRS_STENCILREF = 57
D3DRS_STENCILMASK = 58
D3DRS_STENCILWRITEMASK = 59
D3DRS_TEXTUREFACTOR = 60
D3DRS_WRAP0 = 128
D3DRS_WRAP1 = 129
D3DRS_WRAP2 = 130
D3DRS_WRAP3 = 131
D3DRS_WRAP4 = 132
D3DRS_WRAP5 = 133
D3DRS_WRAP6 = 134
D3DRS_WRAP7 = 135
D3DRS_CLIPPING = 136
D3DRS_LIGHTING = 137
D3DRS_AMBIENT = 139
D3DRS_FOGVERTEXMODE = 140
D3DRS_COLORVERTEX = 141
D3DRS_LOCALVIEWER = 142
D3DRS_NORMALIZENORMALS = 143
D3DRS_DIFFUSEMATERIALSOURCE = 145
D3DRS_SPECULARMATERIALSOURCE = 146
D3DRS_AMBIENTMATERIALSOURCE = 147
D3DRS_EMISSIVEMATERIALSOURCE = 148
D3DRS_VERTEXBLEND = 151
D3DRS_CLIPPLANEENABLE = 152
D3DRS_POINTSIZE = 154
D3DRS_POINTSIZE_MIN = 155
D3DRS_POINTSPRITEENABLE = 156
D3DRS_POINTSCALEENABLE = 157
D3DRS_POINTSCALE_A = 158
D3DRS_POINTSCALE_B = 159
D3DRS_POINTSCALE_C = 160
D3DRS_MULTISAMPLEANTIALIAS = 161
D3DRS_MULTISAMPLEMASK = 162
D3DRS_PATCHEDGESTYLE = 163
D3DRS_DEBUGMONITORTOKEN = 165
D3DRS_POINTSIZE_MAX = 166
D3DRS_INDEXEDVERTEXBLENDENABLE = 167
D3DRS_COLORWRITEENABLE = 168
D3DRS_TWEENFACTOR = 170
D3DRS_BLENDOP = 171
D3DRS_POSITIONDEGREE = 172
D3DRS_NORMALDEGREE = 173
D3DRS_SCISSORTESTENABLE = 174
D3DRS_SLOPESCALEDEPTHBIAS = 175
D3DRS_ANTIALIASEDLINEENABLE = 176
D3DRS_MINTESSELLATIONLEVEL = 178
D3DRS_MAXTESSELLATIONLEVEL = 179
D3DRS_ADAPTIVETESS_X = 180
D3DRS_ADAPTIVETESS_Y = 181
D3DRS_ADAPTIVETESS_Z = 182
D3DRS_ADAPTIVETESS_W = 183
D3DRS_ENABLEADAPTIVETESSELLATION = 184
D3DRS_TWOSIDEDSTENCILMODE = 185
D3DRS_CCW_STENCILFAIL = 186
D3DRS_CCW_STENCILZFAIL = 187
D3DRS_CCW_STENCILPASS = 188
D3DRS_CCW_STENCILFUNC = 189
D3DRS_COLORWRITEENABLE1 = 190
D3DRS_COLORWRITEENABLE2 = 191
D3DRS_COLORWRITEENABLE3 = 192
D3DRS_BLENDFACTOR = 193
D3DRS_SRGBWRITEENABLE = 194
D3DRS_DEPTHBIAS = 195
D3DRS_WRAP8 = 198
D3DRS_WRAP9 = 199
D3DRS_WRAP10 = 200
D3DRS_WRAP11 = 201
D3DRS_WRAP12 = 202
D3DRS_WRAP13 = 203
D3DRS_WRAP14 = 204
D3DRS_WRAP15 = 205
D3DRS_SEPARATEALPHABLENDENABLE = 206
D3DRS_SRCBLENDALPHA = 207
D3DRS_DESTBLENDALPHA = 208
D3DRS_BLENDOPALPHA = 209
D3DRS_FORCE_DWORD = 2147483647
D3DMATERIALCOLORSOURCE = Int32
D3DMCS_MATERIAL = 0
D3DMCS_COLOR1 = 1
D3DMCS_COLOR2 = 2
D3DMCS_FORCE_DWORD = 2147483647
D3DTEXTURESTAGESTATETYPE = Int32
D3DTSS_COLOROP = 1
D3DTSS_COLORARG1 = 2
D3DTSS_COLORARG2 = 3
D3DTSS_ALPHAOP = 4
D3DTSS_ALPHAARG1 = 5
D3DTSS_ALPHAARG2 = 6
D3DTSS_BUMPENVMAT00 = 7
D3DTSS_BUMPENVMAT01 = 8
D3DTSS_BUMPENVMAT10 = 9
D3DTSS_BUMPENVMAT11 = 10
D3DTSS_TEXCOORDINDEX = 11
D3DTSS_BUMPENVLSCALE = 22
D3DTSS_BUMPENVLOFFSET = 23
D3DTSS_TEXTURETRANSFORMFLAGS = 24
D3DTSS_COLORARG0 = 26
D3DTSS_ALPHAARG0 = 27
D3DTSS_RESULTARG = 28
D3DTSS_CONSTANT = 32
D3DTSS_FORCE_DWORD = 2147483647
D3DSAMPLERSTATETYPE = Int32
D3DSAMP_ADDRESSU = 1
D3DSAMP_ADDRESSV = 2
D3DSAMP_ADDRESSW = 3
D3DSAMP_BORDERCOLOR = 4
D3DSAMP_MAGFILTER = 5
D3DSAMP_MINFILTER = 6
D3DSAMP_MIPFILTER = 7
D3DSAMP_MIPMAPLODBIAS = 8
D3DSAMP_MAXMIPLEVEL = 9
D3DSAMP_MAXANISOTROPY = 10
D3DSAMP_SRGBTEXTURE = 11
D3DSAMP_ELEMENTINDEX = 12
D3DSAMP_DMAPOFFSET = 13
D3DSAMP_FORCE_DWORD = 2147483647
D3DTEXTUREOP = Int32
D3DTOP_DISABLE = 1
D3DTOP_SELECTARG1 = 2
D3DTOP_SELECTARG2 = 3
D3DTOP_MODULATE = 4
D3DTOP_MODULATE2X = 5
D3DTOP_MODULATE4X = 6
D3DTOP_ADD = 7
D3DTOP_ADDSIGNED = 8
D3DTOP_ADDSIGNED2X = 9
D3DTOP_SUBTRACT = 10
D3DTOP_ADDSMOOTH = 11
D3DTOP_BLENDDIFFUSEALPHA = 12
D3DTOP_BLENDTEXTUREALPHA = 13
D3DTOP_BLENDFACTORALPHA = 14
D3DTOP_BLENDTEXTUREALPHAPM = 15
D3DTOP_BLENDCURRENTALPHA = 16
D3DTOP_PREMODULATE = 17
D3DTOP_MODULATEALPHA_ADDCOLOR = 18
D3DTOP_MODULATECOLOR_ADDALPHA = 19
D3DTOP_MODULATEINVALPHA_ADDCOLOR = 20
D3DTOP_MODULATEINVCOLOR_ADDALPHA = 21
D3DTOP_BUMPENVMAP = 22
D3DTOP_BUMPENVMAPLUMINANCE = 23
D3DTOP_DOTPRODUCT3 = 24
D3DTOP_MULTIPLYADD = 25
D3DTOP_LERP = 26
D3DTOP_FORCE_DWORD = 2147483647
D3DTEXTUREFILTERTYPE = Int32
D3DTEXF_NONE = 0
D3DTEXF_POINT = 1
D3DTEXF_LINEAR = 2
D3DTEXF_ANISOTROPIC = 3
D3DTEXF_PYRAMIDALQUAD = 6
D3DTEXF_GAUSSIANQUAD = 7
D3DTEXF_CONVOLUTIONMONO = 8
D3DTEXF_FORCE_DWORD = 2147483647
D3DDECLUSAGE = Int32
D3DDECLUSAGE_POSITION = 0
D3DDECLUSAGE_BLENDWEIGHT = 1
D3DDECLUSAGE_BLENDINDICES = 2
D3DDECLUSAGE_NORMAL = 3
D3DDECLUSAGE_PSIZE = 4
D3DDECLUSAGE_TEXCOORD = 5
D3DDECLUSAGE_TANGENT = 6
D3DDECLUSAGE_BINORMAL = 7
D3DDECLUSAGE_TESSFACTOR = 8
D3DDECLUSAGE_POSITIONT = 9
D3DDECLUSAGE_COLOR = 10
D3DDECLUSAGE_FOG = 11
D3DDECLUSAGE_DEPTH = 12
D3DDECLUSAGE_SAMPLE = 13
D3DDECLMETHOD = Int32
D3DDECLMETHOD_DEFAULT = 0
D3DDECLMETHOD_PARTIALU = 1
D3DDECLMETHOD_PARTIALV = 2
D3DDECLMETHOD_CROSSUV = 3
D3DDECLMETHOD_UV = 4
D3DDECLMETHOD_LOOKUP = 5
D3DDECLMETHOD_LOOKUPPRESAMPLED = 6
D3DDECLTYPE = Int32
D3DDECLTYPE_FLOAT1 = 0
D3DDECLTYPE_FLOAT2 = 1
D3DDECLTYPE_FLOAT3 = 2
D3DDECLTYPE_FLOAT4 = 3
D3DDECLTYPE_D3DCOLOR = 4
D3DDECLTYPE_UBYTE4 = 5
D3DDECLTYPE_SHORT2 = 6
D3DDECLTYPE_SHORT4 = 7
D3DDECLTYPE_UBYTE4N = 8
D3DDECLTYPE_SHORT2N = 9
D3DDECLTYPE_SHORT4N = 10
D3DDECLTYPE_USHORT2N = 11
D3DDECLTYPE_USHORT4N = 12
D3DDECLTYPE_UDEC3 = 13
D3DDECLTYPE_DEC3N = 14
D3DDECLTYPE_FLOAT16_2 = 15
D3DDECLTYPE_FLOAT16_4 = 16
D3DDECLTYPE_UNUSED = 17
def _define_D3DVERTEXELEMENT9_head():
    class D3DVERTEXELEMENT9(Structure):
        pass
    return D3DVERTEXELEMENT9
def _define_D3DVERTEXELEMENT9():
    D3DVERTEXELEMENT9 = win32more.Graphics.Direct3D9.D3DVERTEXELEMENT9_head
    D3DVERTEXELEMENT9._fields_ = [
        ("Stream", UInt16),
        ("Offset", UInt16),
        ("Type", Byte),
        ("Method", Byte),
        ("Usage", Byte),
        ("UsageIndex", Byte),
    ]
    return D3DVERTEXELEMENT9
D3DSHADER_INSTRUCTION_OPCODE_TYPE = Int32
D3DSIO_NOP = 0
D3DSIO_MOV = 1
D3DSIO_ADD = 2
D3DSIO_SUB = 3
D3DSIO_MAD = 4
D3DSIO_MUL = 5
D3DSIO_RCP = 6
D3DSIO_RSQ = 7
D3DSIO_DP3 = 8
D3DSIO_DP4 = 9
D3DSIO_MIN = 10
D3DSIO_MAX = 11
D3DSIO_SLT = 12
D3DSIO_SGE = 13
D3DSIO_EXP = 14
D3DSIO_LOG = 15
D3DSIO_LIT = 16
D3DSIO_DST = 17
D3DSIO_LRP = 18
D3DSIO_FRC = 19
D3DSIO_M4x4 = 20
D3DSIO_M4x3 = 21
D3DSIO_M3x4 = 22
D3DSIO_M3x3 = 23
D3DSIO_M3x2 = 24
D3DSIO_CALL = 25
D3DSIO_CALLNZ = 26
D3DSIO_LOOP = 27
D3DSIO_RET = 28
D3DSIO_ENDLOOP = 29
D3DSIO_LABEL = 30
D3DSIO_DCL = 31
D3DSIO_POW = 32
D3DSIO_CRS = 33
D3DSIO_SGN = 34
D3DSIO_ABS = 35
D3DSIO_NRM = 36
D3DSIO_SINCOS = 37
D3DSIO_REP = 38
D3DSIO_ENDREP = 39
D3DSIO_IF = 40
D3DSIO_IFC = 41
D3DSIO_ELSE = 42
D3DSIO_ENDIF = 43
D3DSIO_BREAK = 44
D3DSIO_BREAKC = 45
D3DSIO_MOVA = 46
D3DSIO_DEFB = 47
D3DSIO_DEFI = 48
D3DSIO_TEXCOORD = 64
D3DSIO_TEXKILL = 65
D3DSIO_TEX = 66
D3DSIO_TEXBEM = 67
D3DSIO_TEXBEML = 68
D3DSIO_TEXREG2AR = 69
D3DSIO_TEXREG2GB = 70
D3DSIO_TEXM3x2PAD = 71
D3DSIO_TEXM3x2TEX = 72
D3DSIO_TEXM3x3PAD = 73
D3DSIO_TEXM3x3TEX = 74
D3DSIO_RESERVED0 = 75
D3DSIO_TEXM3x3SPEC = 76
D3DSIO_TEXM3x3VSPEC = 77
D3DSIO_EXPP = 78
D3DSIO_LOGP = 79
D3DSIO_CND = 80
D3DSIO_DEF = 81
D3DSIO_TEXREG2RGB = 82
D3DSIO_TEXDP3TEX = 83
D3DSIO_TEXM3x2DEPTH = 84
D3DSIO_TEXDP3 = 85
D3DSIO_TEXM3x3 = 86
D3DSIO_TEXDEPTH = 87
D3DSIO_CMP = 88
D3DSIO_BEM = 89
D3DSIO_DP2ADD = 90
D3DSIO_DSX = 91
D3DSIO_DSY = 92
D3DSIO_TEXLDD = 93
D3DSIO_SETP = 94
D3DSIO_TEXLDL = 95
D3DSIO_BREAKP = 96
D3DSIO_PHASE = 65533
D3DSIO_COMMENT = 65534
D3DSIO_END = 65535
D3DSIO_FORCE_DWORD = 2147483647
D3DSHADER_COMPARISON = Int32
D3DSPC_RESERVED0 = 0
D3DSPC_GT = 1
D3DSPC_EQ = 2
D3DSPC_GE = 3
D3DSPC_LT = 4
D3DSPC_NE = 5
D3DSPC_LE = 6
D3DSPC_RESERVED1 = 7
D3DSAMPLER_TEXTURE_TYPE = Int32
D3DSTT_UNKNOWN = 0
D3DSTT_2D = 268435456
D3DSTT_CUBE = 402653184
D3DSTT_VOLUME = 536870912
D3DSTT_FORCE_DWORD = 2147483647
D3DSHADER_PARAM_REGISTER_TYPE = Int32
D3DSPR_TEMP = 0
D3DSPR_INPUT = 1
D3DSPR_CONST = 2
D3DSPR_ADDR = 3
D3DSPR_TEXTURE = 3
D3DSPR_RASTOUT = 4
D3DSPR_ATTROUT = 5
D3DSPR_TEXCRDOUT = 6
D3DSPR_OUTPUT = 6
D3DSPR_CONSTINT = 7
D3DSPR_COLOROUT = 8
D3DSPR_DEPTHOUT = 9
D3DSPR_SAMPLER = 10
D3DSPR_CONST2 = 11
D3DSPR_CONST3 = 12
D3DSPR_CONST4 = 13
D3DSPR_CONSTBOOL = 14
D3DSPR_LOOP = 15
D3DSPR_TEMPFLOAT16 = 16
D3DSPR_MISCTYPE = 17
D3DSPR_LABEL = 18
D3DSPR_PREDICATE = 19
D3DSPR_FORCE_DWORD = 2147483647
D3DSHADER_MISCTYPE_OFFSETS = Int32
D3DSMO_POSITION = 0
D3DSMO_FACE = 1
D3DVS_RASTOUT_OFFSETS = Int32
D3DSRO_POSITION = 0
D3DSRO_FOG = 1
D3DSRO_POINT_SIZE = 2
D3DSRO_FORCE_DWORD = 2147483647
D3DVS_ADDRESSMODE_TYPE = Int32
D3DVS_ADDRMODE_ABSOLUTE = 0
D3DVS_ADDRMODE_RELATIVE = 8192
D3DVS_ADDRMODE_FORCE_DWORD = 2147483647
D3DSHADER_ADDRESSMODE_TYPE = Int32
D3DSHADER_ADDRMODE_ABSOLUTE = 0
D3DSHADER_ADDRMODE_RELATIVE = 8192
D3DSHADER_ADDRMODE_FORCE_DWORD = 2147483647
D3DSHADER_PARAM_SRCMOD_TYPE = Int32
D3DSPSM_NONE = 0
D3DSPSM_NEG = 16777216
D3DSPSM_BIAS = 33554432
D3DSPSM_BIASNEG = 50331648
D3DSPSM_SIGN = 67108864
D3DSPSM_SIGNNEG = 83886080
D3DSPSM_COMP = 100663296
D3DSPSM_X2 = 117440512
D3DSPSM_X2NEG = 134217728
D3DSPSM_DZ = 150994944
D3DSPSM_DW = 167772160
D3DSPSM_ABS = 184549376
D3DSPSM_ABSNEG = 201326592
D3DSPSM_NOT = 218103808
D3DSPSM_FORCE_DWORD = 2147483647
D3DSHADER_MIN_PRECISION = Int32
D3DMP_DEFAULT = 0
D3DMP_16 = 1
D3DMP_2_8 = 2
D3DBASISTYPE = Int32
D3DBASIS_BEZIER = 0
D3DBASIS_BSPLINE = 1
D3DBASIS_CATMULL_ROM = 2
D3DBASIS_FORCE_DWORD = 2147483647
D3DDEGREETYPE = Int32
D3DDEGREE_LINEAR = 1
D3DDEGREE_QUADRATIC = 2
D3DDEGREE_CUBIC = 3
D3DDEGREE_QUINTIC = 5
D3DDEGREE_FORCE_DWORD = 2147483647
D3DPATCHEDGESTYLE = Int32
D3DPATCHEDGE_DISCRETE = 0
D3DPATCHEDGE_CONTINUOUS = 1
D3DPATCHEDGE_FORCE_DWORD = 2147483647
D3DSTATEBLOCKTYPE = Int32
D3DSBT_ALL = 1
D3DSBT_PIXELSTATE = 2
D3DSBT_VERTEXSTATE = 3
D3DSBT_FORCE_DWORD = 2147483647
D3DVERTEXBLENDFLAGS = Int32
D3DVBF_DISABLE = 0
D3DVBF_1WEIGHTS = 1
D3DVBF_2WEIGHTS = 2
D3DVBF_3WEIGHTS = 3
D3DVBF_TWEENING = 255
D3DVBF_0WEIGHTS = 256
D3DVBF_FORCE_DWORD = 2147483647
D3DTEXTURETRANSFORMFLAGS = Int32
D3DTTFF_DISABLE = 0
D3DTTFF_COUNT1 = 1
D3DTTFF_COUNT2 = 2
D3DTTFF_COUNT3 = 3
D3DTTFF_COUNT4 = 4
D3DTTFF_PROJECTED = 256
D3DTTFF_FORCE_DWORD = 2147483647
D3DDEVTYPE = UInt32
D3DDEVTYPE_HAL = 1
D3DDEVTYPE_REF = 2
D3DDEVTYPE_SW = 3
D3DDEVTYPE_NULLREF = 4
D3DDEVTYPE_FORCE_DWORD = 2147483647
D3DMULTISAMPLE_TYPE = Int32
D3DMULTISAMPLE_NONE = 0
D3DMULTISAMPLE_NONMASKABLE = 1
D3DMULTISAMPLE_2_SAMPLES = 2
D3DMULTISAMPLE_3_SAMPLES = 3
D3DMULTISAMPLE_4_SAMPLES = 4
D3DMULTISAMPLE_5_SAMPLES = 5
D3DMULTISAMPLE_6_SAMPLES = 6
D3DMULTISAMPLE_7_SAMPLES = 7
D3DMULTISAMPLE_8_SAMPLES = 8
D3DMULTISAMPLE_9_SAMPLES = 9
D3DMULTISAMPLE_10_SAMPLES = 10
D3DMULTISAMPLE_11_SAMPLES = 11
D3DMULTISAMPLE_12_SAMPLES = 12
D3DMULTISAMPLE_13_SAMPLES = 13
D3DMULTISAMPLE_14_SAMPLES = 14
D3DMULTISAMPLE_15_SAMPLES = 15
D3DMULTISAMPLE_16_SAMPLES = 16
D3DMULTISAMPLE_FORCE_DWORD = 2147483647
D3DFORMAT = UInt32
D3DFMT_UNKNOWN = 0
D3DFMT_R8G8B8 = 20
D3DFMT_A8R8G8B8 = 21
D3DFMT_X8R8G8B8 = 22
D3DFMT_R5G6B5 = 23
D3DFMT_X1R5G5B5 = 24
D3DFMT_A1R5G5B5 = 25
D3DFMT_A4R4G4B4 = 26
D3DFMT_R3G3B2 = 27
D3DFMT_A8 = 28
D3DFMT_A8R3G3B2 = 29
D3DFMT_X4R4G4B4 = 30
D3DFMT_A2B10G10R10 = 31
D3DFMT_A8B8G8R8 = 32
D3DFMT_X8B8G8R8 = 33
D3DFMT_G16R16 = 34
D3DFMT_A2R10G10B10 = 35
D3DFMT_A16B16G16R16 = 36
D3DFMT_A8P8 = 40
D3DFMT_P8 = 41
D3DFMT_L8 = 50
D3DFMT_A8L8 = 51
D3DFMT_A4L4 = 52
D3DFMT_V8U8 = 60
D3DFMT_L6V5U5 = 61
D3DFMT_X8L8V8U8 = 62
D3DFMT_Q8W8V8U8 = 63
D3DFMT_V16U16 = 64
D3DFMT_A2W10V10U10 = 67
D3DFMT_UYVY = 1498831189
D3DFMT_R8G8_B8G8 = 1195525970
D3DFMT_YUY2 = 844715353
D3DFMT_G8R8_G8B8 = 1111970375
D3DFMT_DXT1 = 827611204
D3DFMT_DXT2 = 844388420
D3DFMT_DXT3 = 861165636
D3DFMT_DXT4 = 877942852
D3DFMT_DXT5 = 894720068
D3DFMT_D16_LOCKABLE = 70
D3DFMT_D32 = 71
D3DFMT_D15S1 = 73
D3DFMT_D24S8 = 75
D3DFMT_D24X8 = 77
D3DFMT_D24X4S4 = 79
D3DFMT_D16 = 80
D3DFMT_D32F_LOCKABLE = 82
D3DFMT_D24FS8 = 83
D3DFMT_D32_LOCKABLE = 84
D3DFMT_S8_LOCKABLE = 85
D3DFMT_L16 = 81
D3DFMT_VERTEXDATA = 100
D3DFMT_INDEX16 = 101
D3DFMT_INDEX32 = 102
D3DFMT_Q16W16V16U16 = 110
D3DFMT_MULTI2_ARGB8 = 827606349
D3DFMT_R16F = 111
D3DFMT_G16R16F = 112
D3DFMT_A16B16G16R16F = 113
D3DFMT_R32F = 114
D3DFMT_G32R32F = 115
D3DFMT_A32B32G32R32F = 116
D3DFMT_CxV8U8 = 117
D3DFMT_A1 = 118
D3DFMT_A2B10G10R10_XR_BIAS = 119
D3DFMT_BINARYBUFFER = 199
D3DFMT_FORCE_DWORD = 2147483647
def _define_D3DDISPLAYMODE_head():
    class D3DDISPLAYMODE(Structure):
        pass
    return D3DDISPLAYMODE
def _define_D3DDISPLAYMODE():
    D3DDISPLAYMODE = win32more.Graphics.Direct3D9.D3DDISPLAYMODE_head
    D3DDISPLAYMODE._fields_ = [
        ("Width", UInt32),
        ("Height", UInt32),
        ("RefreshRate", UInt32),
        ("Format", win32more.Graphics.Direct3D9.D3DFORMAT),
    ]
    return D3DDISPLAYMODE
def _define_D3DDEVICE_CREATION_PARAMETERS_head():
    class D3DDEVICE_CREATION_PARAMETERS(Structure):
        pass
    return D3DDEVICE_CREATION_PARAMETERS
def _define_D3DDEVICE_CREATION_PARAMETERS():
    D3DDEVICE_CREATION_PARAMETERS = win32more.Graphics.Direct3D9.D3DDEVICE_CREATION_PARAMETERS_head
    D3DDEVICE_CREATION_PARAMETERS._fields_ = [
        ("AdapterOrdinal", UInt32),
        ("DeviceType", win32more.Graphics.Direct3D9.D3DDEVTYPE),
        ("hFocusWindow", win32more.Foundation.HWND),
        ("BehaviorFlags", UInt32),
    ]
    return D3DDEVICE_CREATION_PARAMETERS
D3DSWAPEFFECT = UInt32
D3DSWAPEFFECT_DISCARD = 1
D3DSWAPEFFECT_FLIP = 2
D3DSWAPEFFECT_COPY = 3
D3DSWAPEFFECT_OVERLAY = 4
D3DSWAPEFFECT_FLIPEX = 5
D3DSWAPEFFECT_FORCE_DWORD = 2147483647
D3DPOOL = UInt32
D3DPOOL_DEFAULT = 0
D3DPOOL_MANAGED = 1
D3DPOOL_SYSTEMMEM = 2
D3DPOOL_SCRATCH = 3
D3DPOOL_FORCE_DWORD = 2147483647
def _define_D3DPRESENT_PARAMETERS_head():
    class D3DPRESENT_PARAMETERS(Structure):
        pass
    return D3DPRESENT_PARAMETERS
def _define_D3DPRESENT_PARAMETERS():
    D3DPRESENT_PARAMETERS = win32more.Graphics.Direct3D9.D3DPRESENT_PARAMETERS_head
    D3DPRESENT_PARAMETERS._fields_ = [
        ("BackBufferWidth", UInt32),
        ("BackBufferHeight", UInt32),
        ("BackBufferFormat", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("BackBufferCount", UInt32),
        ("MultiSampleType", win32more.Graphics.Direct3D9.D3DMULTISAMPLE_TYPE),
        ("MultiSampleQuality", UInt32),
        ("SwapEffect", win32more.Graphics.Direct3D9.D3DSWAPEFFECT),
        ("hDeviceWindow", win32more.Foundation.HWND),
        ("Windowed", win32more.Foundation.BOOL),
        ("EnableAutoDepthStencil", win32more.Foundation.BOOL),
        ("AutoDepthStencilFormat", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("Flags", UInt32),
        ("FullScreen_RefreshRateInHz", UInt32),
        ("PresentationInterval", UInt32),
    ]
    return D3DPRESENT_PARAMETERS
def _define_D3DGAMMARAMP_head():
    class D3DGAMMARAMP(Structure):
        pass
    return D3DGAMMARAMP
def _define_D3DGAMMARAMP():
    D3DGAMMARAMP = win32more.Graphics.Direct3D9.D3DGAMMARAMP_head
    D3DGAMMARAMP._fields_ = [
        ("red", UInt16 * 256),
        ("green", UInt16 * 256),
        ("blue", UInt16 * 256),
    ]
    return D3DGAMMARAMP
D3DBACKBUFFER_TYPE = UInt32
D3DBACKBUFFER_TYPE_MONO = 0
D3DBACKBUFFER_TYPE_LEFT = 1
D3DBACKBUFFER_TYPE_RIGHT = 2
D3DBACKBUFFER_TYPE_FORCE_DWORD = 2147483647
D3DRESOURCETYPE = Int32
D3DRTYPE_SURFACE = 1
D3DRTYPE_VOLUME = 2
D3DRTYPE_TEXTURE = 3
D3DRTYPE_VOLUMETEXTURE = 4
D3DRTYPE_CUBETEXTURE = 5
D3DRTYPE_VERTEXBUFFER = 6
D3DRTYPE_INDEXBUFFER = 7
D3DRTYPE_FORCE_DWORD = 2147483647
D3DCUBEMAP_FACES = Int32
D3DCUBEMAP_FACE_POSITIVE_X = 0
D3DCUBEMAP_FACE_NEGATIVE_X = 1
D3DCUBEMAP_FACE_POSITIVE_Y = 2
D3DCUBEMAP_FACE_NEGATIVE_Y = 3
D3DCUBEMAP_FACE_POSITIVE_Z = 4
D3DCUBEMAP_FACE_NEGATIVE_Z = 5
D3DCUBEMAP_FACE_FORCE_DWORD = 2147483647
def _define_D3DVERTEXBUFFER_DESC_head():
    class D3DVERTEXBUFFER_DESC(Structure):
        pass
    return D3DVERTEXBUFFER_DESC
def _define_D3DVERTEXBUFFER_DESC():
    D3DVERTEXBUFFER_DESC = win32more.Graphics.Direct3D9.D3DVERTEXBUFFER_DESC_head
    D3DVERTEXBUFFER_DESC._fields_ = [
        ("Format", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("Type", win32more.Graphics.Direct3D9.D3DRESOURCETYPE),
        ("Usage", UInt32),
        ("Pool", win32more.Graphics.Direct3D9.D3DPOOL),
        ("Size", UInt32),
        ("FVF", UInt32),
    ]
    return D3DVERTEXBUFFER_DESC
def _define_D3DINDEXBUFFER_DESC_head():
    class D3DINDEXBUFFER_DESC(Structure):
        pass
    return D3DINDEXBUFFER_DESC
def _define_D3DINDEXBUFFER_DESC():
    D3DINDEXBUFFER_DESC = win32more.Graphics.Direct3D9.D3DINDEXBUFFER_DESC_head
    D3DINDEXBUFFER_DESC._fields_ = [
        ("Format", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("Type", win32more.Graphics.Direct3D9.D3DRESOURCETYPE),
        ("Usage", UInt32),
        ("Pool", win32more.Graphics.Direct3D9.D3DPOOL),
        ("Size", UInt32),
    ]
    return D3DINDEXBUFFER_DESC
def _define_D3DSURFACE_DESC_head():
    class D3DSURFACE_DESC(Structure):
        pass
    return D3DSURFACE_DESC
def _define_D3DSURFACE_DESC():
    D3DSURFACE_DESC = win32more.Graphics.Direct3D9.D3DSURFACE_DESC_head
    D3DSURFACE_DESC._fields_ = [
        ("Format", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("Type", win32more.Graphics.Direct3D9.D3DRESOURCETYPE),
        ("Usage", UInt32),
        ("Pool", win32more.Graphics.Direct3D9.D3DPOOL),
        ("MultiSampleType", win32more.Graphics.Direct3D9.D3DMULTISAMPLE_TYPE),
        ("MultiSampleQuality", UInt32),
        ("Width", UInt32),
        ("Height", UInt32),
    ]
    return D3DSURFACE_DESC
def _define_D3DVOLUME_DESC_head():
    class D3DVOLUME_DESC(Structure):
        pass
    return D3DVOLUME_DESC
def _define_D3DVOLUME_DESC():
    D3DVOLUME_DESC = win32more.Graphics.Direct3D9.D3DVOLUME_DESC_head
    D3DVOLUME_DESC._fields_ = [
        ("Format", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("Type", win32more.Graphics.Direct3D9.D3DRESOURCETYPE),
        ("Usage", UInt32),
        ("Pool", win32more.Graphics.Direct3D9.D3DPOOL),
        ("Width", UInt32),
        ("Height", UInt32),
        ("Depth", UInt32),
    ]
    return D3DVOLUME_DESC
def _define_D3DLOCKED_RECT_head():
    class D3DLOCKED_RECT(Structure):
        pass
    return D3DLOCKED_RECT
def _define_D3DLOCKED_RECT():
    D3DLOCKED_RECT = win32more.Graphics.Direct3D9.D3DLOCKED_RECT_head
    D3DLOCKED_RECT._fields_ = [
        ("Pitch", Int32),
        ("pBits", c_void_p),
    ]
    return D3DLOCKED_RECT
def _define_D3DBOX_head():
    class D3DBOX(Structure):
        pass
    return D3DBOX
def _define_D3DBOX():
    D3DBOX = win32more.Graphics.Direct3D9.D3DBOX_head
    D3DBOX._fields_ = [
        ("Left", UInt32),
        ("Top", UInt32),
        ("Right", UInt32),
        ("Bottom", UInt32),
        ("Front", UInt32),
        ("Back", UInt32),
    ]
    return D3DBOX
def _define_D3DLOCKED_BOX_head():
    class D3DLOCKED_BOX(Structure):
        pass
    return D3DLOCKED_BOX
def _define_D3DLOCKED_BOX():
    D3DLOCKED_BOX = win32more.Graphics.Direct3D9.D3DLOCKED_BOX_head
    D3DLOCKED_BOX._fields_ = [
        ("RowPitch", Int32),
        ("SlicePitch", Int32),
        ("pBits", c_void_p),
    ]
    return D3DLOCKED_BOX
def _define_D3DRANGE_head():
    class D3DRANGE(Structure):
        pass
    return D3DRANGE
def _define_D3DRANGE():
    D3DRANGE = win32more.Graphics.Direct3D9.D3DRANGE_head
    D3DRANGE._fields_ = [
        ("Offset", UInt32),
        ("Size", UInt32),
    ]
    return D3DRANGE
def _define_D3DRECTPATCH_INFO_head():
    class D3DRECTPATCH_INFO(Structure):
        pass
    return D3DRECTPATCH_INFO
def _define_D3DRECTPATCH_INFO():
    D3DRECTPATCH_INFO = win32more.Graphics.Direct3D9.D3DRECTPATCH_INFO_head
    D3DRECTPATCH_INFO._fields_ = [
        ("StartVertexOffsetWidth", UInt32),
        ("StartVertexOffsetHeight", UInt32),
        ("Width", UInt32),
        ("Height", UInt32),
        ("Stride", UInt32),
        ("Basis", win32more.Graphics.Direct3D9.D3DBASISTYPE),
        ("Degree", win32more.Graphics.Direct3D9.D3DDEGREETYPE),
    ]
    return D3DRECTPATCH_INFO
def _define_D3DTRIPATCH_INFO_head():
    class D3DTRIPATCH_INFO(Structure):
        pass
    return D3DTRIPATCH_INFO
def _define_D3DTRIPATCH_INFO():
    D3DTRIPATCH_INFO = win32more.Graphics.Direct3D9.D3DTRIPATCH_INFO_head
    D3DTRIPATCH_INFO._fields_ = [
        ("StartVertexOffset", UInt32),
        ("NumVertices", UInt32),
        ("Basis", win32more.Graphics.Direct3D9.D3DBASISTYPE),
        ("Degree", win32more.Graphics.Direct3D9.D3DDEGREETYPE),
    ]
    return D3DTRIPATCH_INFO
def _define_D3DADAPTER_IDENTIFIER9_head():
    class D3DADAPTER_IDENTIFIER9(Structure):
        pass
    return D3DADAPTER_IDENTIFIER9
def _define_D3DADAPTER_IDENTIFIER9():
    D3DADAPTER_IDENTIFIER9 = win32more.Graphics.Direct3D9.D3DADAPTER_IDENTIFIER9_head
    D3DADAPTER_IDENTIFIER9._fields_ = [
        ("Driver", win32more.Foundation.CHAR * 512),
        ("Description", win32more.Foundation.CHAR * 512),
        ("DeviceName", win32more.Foundation.CHAR * 32),
        ("DriverVersion", win32more.Foundation.LARGE_INTEGER),
        ("VendorId", UInt32),
        ("DeviceId", UInt32),
        ("SubSysId", UInt32),
        ("Revision", UInt32),
        ("DeviceIdentifier", Guid),
        ("WHQLLevel", UInt32),
    ]
    return D3DADAPTER_IDENTIFIER9
def _define_D3DRASTER_STATUS_head():
    class D3DRASTER_STATUS(Structure):
        pass
    return D3DRASTER_STATUS
def _define_D3DRASTER_STATUS():
    D3DRASTER_STATUS = win32more.Graphics.Direct3D9.D3DRASTER_STATUS_head
    D3DRASTER_STATUS._fields_ = [
        ("InVBlank", win32more.Foundation.BOOL),
        ("ScanLine", UInt32),
    ]
    return D3DRASTER_STATUS
D3DDEBUGMONITORTOKENS = Int32
D3DDMT_ENABLE = 0
D3DDMT_DISABLE = 1
D3DDMT_FORCE_DWORD = 2147483647
D3DQUERYTYPE = Int32
D3DQUERYTYPE_VCACHE = 4
D3DQUERYTYPE_RESOURCEMANAGER = 5
D3DQUERYTYPE_VERTEXSTATS = 6
D3DQUERYTYPE_EVENT = 8
D3DQUERYTYPE_OCCLUSION = 9
D3DQUERYTYPE_TIMESTAMP = 10
D3DQUERYTYPE_TIMESTAMPDISJOINT = 11
D3DQUERYTYPE_TIMESTAMPFREQ = 12
D3DQUERYTYPE_PIPELINETIMINGS = 13
D3DQUERYTYPE_INTERFACETIMINGS = 14
D3DQUERYTYPE_VERTEXTIMINGS = 15
D3DQUERYTYPE_PIXELTIMINGS = 16
D3DQUERYTYPE_BANDWIDTHTIMINGS = 17
D3DQUERYTYPE_CACHEUTILIZATION = 18
D3DQUERYTYPE_MEMORYPRESSURE = 19
def _define_D3DRESOURCESTATS_head():
    class D3DRESOURCESTATS(Structure):
        pass
    return D3DRESOURCESTATS
def _define_D3DRESOURCESTATS():
    D3DRESOURCESTATS = win32more.Graphics.Direct3D9.D3DRESOURCESTATS_head
    D3DRESOURCESTATS._fields_ = [
        ("bThrashing", win32more.Foundation.BOOL),
        ("ApproxBytesDownloaded", UInt32),
        ("NumEvicts", UInt32),
        ("NumVidCreates", UInt32),
        ("LastPri", UInt32),
        ("NumUsed", UInt32),
        ("NumUsedInVidMem", UInt32),
        ("WorkingSet", UInt32),
        ("WorkingSetBytes", UInt32),
        ("TotalManaged", UInt32),
        ("TotalBytes", UInt32),
    ]
    return D3DRESOURCESTATS
def _define_D3DDEVINFO_RESOURCEMANAGER_head():
    class D3DDEVINFO_RESOURCEMANAGER(Structure):
        pass
    return D3DDEVINFO_RESOURCEMANAGER
def _define_D3DDEVINFO_RESOURCEMANAGER():
    D3DDEVINFO_RESOURCEMANAGER = win32more.Graphics.Direct3D9.D3DDEVINFO_RESOURCEMANAGER_head
    D3DDEVINFO_RESOURCEMANAGER._fields_ = [
        ("stats", win32more.Graphics.Direct3D9.D3DRESOURCESTATS * 8),
    ]
    return D3DDEVINFO_RESOURCEMANAGER
def _define_D3DDEVINFO_D3DVERTEXSTATS_head():
    class D3DDEVINFO_D3DVERTEXSTATS(Structure):
        pass
    return D3DDEVINFO_D3DVERTEXSTATS
def _define_D3DDEVINFO_D3DVERTEXSTATS():
    D3DDEVINFO_D3DVERTEXSTATS = win32more.Graphics.Direct3D9.D3DDEVINFO_D3DVERTEXSTATS_head
    D3DDEVINFO_D3DVERTEXSTATS._fields_ = [
        ("NumRenderedTriangles", UInt32),
        ("NumExtraClippingTriangles", UInt32),
    ]
    return D3DDEVINFO_D3DVERTEXSTATS
def _define_D3DDEVINFO_VCACHE_head():
    class D3DDEVINFO_VCACHE(Structure):
        pass
    return D3DDEVINFO_VCACHE
def _define_D3DDEVINFO_VCACHE():
    D3DDEVINFO_VCACHE = win32more.Graphics.Direct3D9.D3DDEVINFO_VCACHE_head
    D3DDEVINFO_VCACHE._fields_ = [
        ("Pattern", UInt32),
        ("OptMethod", UInt32),
        ("CacheSize", UInt32),
        ("MagicNumber", UInt32),
    ]
    return D3DDEVINFO_VCACHE
def _define_D3DDEVINFO_D3D9PIPELINETIMINGS_head():
    class D3DDEVINFO_D3D9PIPELINETIMINGS(Structure):
        pass
    return D3DDEVINFO_D3D9PIPELINETIMINGS
def _define_D3DDEVINFO_D3D9PIPELINETIMINGS():
    D3DDEVINFO_D3D9PIPELINETIMINGS = win32more.Graphics.Direct3D9.D3DDEVINFO_D3D9PIPELINETIMINGS_head
    D3DDEVINFO_D3D9PIPELINETIMINGS._fields_ = [
        ("VertexProcessingTimePercent", Single),
        ("PixelProcessingTimePercent", Single),
        ("OtherGPUProcessingTimePercent", Single),
        ("GPUIdleTimePercent", Single),
    ]
    return D3DDEVINFO_D3D9PIPELINETIMINGS
def _define_D3DDEVINFO_D3D9INTERFACETIMINGS_head():
    class D3DDEVINFO_D3D9INTERFACETIMINGS(Structure):
        pass
    return D3DDEVINFO_D3D9INTERFACETIMINGS
def _define_D3DDEVINFO_D3D9INTERFACETIMINGS():
    D3DDEVINFO_D3D9INTERFACETIMINGS = win32more.Graphics.Direct3D9.D3DDEVINFO_D3D9INTERFACETIMINGS_head
    D3DDEVINFO_D3D9INTERFACETIMINGS._fields_ = [
        ("WaitingForGPUToUseApplicationResourceTimePercent", Single),
        ("WaitingForGPUToAcceptMoreCommandsTimePercent", Single),
        ("WaitingForGPUToStayWithinLatencyTimePercent", Single),
        ("WaitingForGPUExclusiveResourceTimePercent", Single),
        ("WaitingForGPUOtherTimePercent", Single),
    ]
    return D3DDEVINFO_D3D9INTERFACETIMINGS
def _define_D3DDEVINFO_D3D9STAGETIMINGS_head():
    class D3DDEVINFO_D3D9STAGETIMINGS(Structure):
        pass
    return D3DDEVINFO_D3D9STAGETIMINGS
def _define_D3DDEVINFO_D3D9STAGETIMINGS():
    D3DDEVINFO_D3D9STAGETIMINGS = win32more.Graphics.Direct3D9.D3DDEVINFO_D3D9STAGETIMINGS_head
    D3DDEVINFO_D3D9STAGETIMINGS._fields_ = [
        ("MemoryProcessingPercent", Single),
        ("ComputationProcessingPercent", Single),
    ]
    return D3DDEVINFO_D3D9STAGETIMINGS
def _define_D3DDEVINFO_D3D9BANDWIDTHTIMINGS_head():
    class D3DDEVINFO_D3D9BANDWIDTHTIMINGS(Structure):
        pass
    return D3DDEVINFO_D3D9BANDWIDTHTIMINGS
def _define_D3DDEVINFO_D3D9BANDWIDTHTIMINGS():
    D3DDEVINFO_D3D9BANDWIDTHTIMINGS = win32more.Graphics.Direct3D9.D3DDEVINFO_D3D9BANDWIDTHTIMINGS_head
    D3DDEVINFO_D3D9BANDWIDTHTIMINGS._fields_ = [
        ("MaxBandwidthUtilized", Single),
        ("FrontEndUploadMemoryUtilizedPercent", Single),
        ("VertexRateUtilizedPercent", Single),
        ("TriangleSetupRateUtilizedPercent", Single),
        ("FillRateUtilizedPercent", Single),
    ]
    return D3DDEVINFO_D3D9BANDWIDTHTIMINGS
def _define_D3DDEVINFO_D3D9CACHEUTILIZATION_head():
    class D3DDEVINFO_D3D9CACHEUTILIZATION(Structure):
        pass
    return D3DDEVINFO_D3D9CACHEUTILIZATION
def _define_D3DDEVINFO_D3D9CACHEUTILIZATION():
    D3DDEVINFO_D3D9CACHEUTILIZATION = win32more.Graphics.Direct3D9.D3DDEVINFO_D3D9CACHEUTILIZATION_head
    D3DDEVINFO_D3D9CACHEUTILIZATION._fields_ = [
        ("TextureCacheHitRate", Single),
        ("PostTransformVertexCacheHitRate", Single),
    ]
    return D3DDEVINFO_D3D9CACHEUTILIZATION
def _define_D3DMEMORYPRESSURE_head():
    class D3DMEMORYPRESSURE(Structure):
        pass
    return D3DMEMORYPRESSURE
def _define_D3DMEMORYPRESSURE():
    D3DMEMORYPRESSURE = win32more.Graphics.Direct3D9.D3DMEMORYPRESSURE_head
    D3DMEMORYPRESSURE._fields_ = [
        ("BytesEvictedFromProcess", UInt64),
        ("SizeOfInefficientAllocation", UInt64),
        ("LevelOfEfficiency", UInt32),
    ]
    return D3DMEMORYPRESSURE
D3DCOMPOSERECTSOP = Int32
D3DCOMPOSERECTS_COPY = 1
D3DCOMPOSERECTS_OR = 2
D3DCOMPOSERECTS_AND = 3
D3DCOMPOSERECTS_NEG = 4
D3DCOMPOSERECTS_FORCE_DWORD = 2147483647
def _define_D3DCOMPOSERECTDESC_head():
    class D3DCOMPOSERECTDESC(Structure):
        pass
    return D3DCOMPOSERECTDESC
def _define_D3DCOMPOSERECTDESC():
    D3DCOMPOSERECTDESC = win32more.Graphics.Direct3D9.D3DCOMPOSERECTDESC_head
    D3DCOMPOSERECTDESC._fields_ = [
        ("X", UInt16),
        ("Y", UInt16),
        ("Width", UInt16),
        ("Height", UInt16),
    ]
    return D3DCOMPOSERECTDESC
def _define_D3DCOMPOSERECTDESTINATION_head():
    class D3DCOMPOSERECTDESTINATION(Structure):
        pass
    return D3DCOMPOSERECTDESTINATION
def _define_D3DCOMPOSERECTDESTINATION():
    D3DCOMPOSERECTDESTINATION = win32more.Graphics.Direct3D9.D3DCOMPOSERECTDESTINATION_head
    D3DCOMPOSERECTDESTINATION._fields_ = [
        ("SrcRectIndex", UInt16),
        ("Reserved", UInt16),
        ("X", Int16),
        ("Y", Int16),
    ]
    return D3DCOMPOSERECTDESTINATION
def _define_D3DPRESENTSTATS_head():
    class D3DPRESENTSTATS(Structure):
        pass
    return D3DPRESENTSTATS
def _define_D3DPRESENTSTATS():
    D3DPRESENTSTATS = win32more.Graphics.Direct3D9.D3DPRESENTSTATS_head
    D3DPRESENTSTATS._fields_ = [
        ("PresentCount", UInt32),
        ("PresentRefreshCount", UInt32),
        ("SyncRefreshCount", UInt32),
        ("SyncQPCTime", win32more.Foundation.LARGE_INTEGER),
        ("SyncGPUTime", win32more.Foundation.LARGE_INTEGER),
    ]
    return D3DPRESENTSTATS
D3DSCANLINEORDERING = Int32
D3DSCANLINEORDERING_UNKNOWN = 0
D3DSCANLINEORDERING_PROGRESSIVE = 1
D3DSCANLINEORDERING_INTERLACED = 2
def _define_D3DDISPLAYMODEEX_head():
    class D3DDISPLAYMODEEX(Structure):
        pass
    return D3DDISPLAYMODEEX
def _define_D3DDISPLAYMODEEX():
    D3DDISPLAYMODEEX = win32more.Graphics.Direct3D9.D3DDISPLAYMODEEX_head
    D3DDISPLAYMODEEX._fields_ = [
        ("Size", UInt32),
        ("Width", UInt32),
        ("Height", UInt32),
        ("RefreshRate", UInt32),
        ("Format", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("ScanLineOrdering", win32more.Graphics.Direct3D9.D3DSCANLINEORDERING),
    ]
    return D3DDISPLAYMODEEX
def _define_D3DDISPLAYMODEFILTER_head():
    class D3DDISPLAYMODEFILTER(Structure):
        pass
    return D3DDISPLAYMODEFILTER
def _define_D3DDISPLAYMODEFILTER():
    D3DDISPLAYMODEFILTER = win32more.Graphics.Direct3D9.D3DDISPLAYMODEFILTER_head
    D3DDISPLAYMODEFILTER._fields_ = [
        ("Size", UInt32),
        ("Format", win32more.Graphics.Direct3D9.D3DFORMAT),
        ("ScanLineOrdering", win32more.Graphics.Direct3D9.D3DSCANLINEORDERING),
    ]
    return D3DDISPLAYMODEFILTER
D3DDISPLAYROTATION = Int32
D3DDISPLAYROTATION_IDENTITY = 1
D3DDISPLAYROTATION_90 = 2
D3DDISPLAYROTATION_180 = 3
D3DDISPLAYROTATION_270 = 4
def _define_D3D_OMAC_head():
    class D3D_OMAC(Structure):
        pass
    return D3D_OMAC
def _define_D3D_OMAC():
    D3D_OMAC = win32more.Graphics.Direct3D9.D3D_OMAC_head
    D3D_OMAC._fields_ = [
        ("Omac", Byte * 16),
    ]
    return D3D_OMAC
D3DAUTHENTICATEDCHANNELTYPE = Int32
D3DAUTHENTICATEDCHANNEL_D3D9 = 1
D3DAUTHENTICATEDCHANNEL_DRIVER_SOFTWARE = 2
D3DAUTHENTICATEDCHANNEL_DRIVER_HARDWARE = 3
def _define_D3DAUTHENTICATEDCHANNEL_QUERY_INPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERY_INPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERY_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERY_INPUT():
    D3DAUTHENTICATEDCHANNEL_QUERY_INPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_INPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERY_INPUT._fields_ = [
        ("QueryType", Guid),
        ("hChannel", win32more.Foundation.HANDLE),
        ("SequenceNumber", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERY_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT._fields_ = [
        ("omac", win32more.Graphics.Direct3D9.D3D_OMAC),
        ("QueryType", Guid),
        ("hChannel", win32more.Foundation.HANDLE),
        ("SequenceNumber", UInt32),
        ("ReturnCode", win32more.Foundation.HRESULT),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS_head():
    class D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS
def _define_D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS():
    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS_head
    class D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS__Anonymous_e__Union(Union):
        pass
    class D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS__Anonymous_e__Union._fields_ = [
        ("Anonymous", D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS__Anonymous_e__Union__Anonymous_e__Struct),
        ("Value", UInt32),
    ]
    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS._anonymous_ = [
        'Anonymous',
    ]
    D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS._fields_ = [
        ("Anonymous", D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS__Anonymous_e__Union),
    ]
    return D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS
def _define_D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("ProtectionFlags", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("ChannelType", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNELTYPE),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("DeviceHandle", win32more.Foundation.HANDLE),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT._fields_ = [
        ("Input", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_INPUT),
        ("DXVA2DecodeHandle", win32more.Foundation.HANDLE),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("DXVA2DecodeHandle", win32more.Foundation.HANDLE),
        ("CryptoSessionHandle", win32more.Foundation.HANDLE),
        ("DeviceHandle", win32more.Foundation.HANDLE),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("NumRestrictedSharedResourceProcesses", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT._fields_ = [
        ("Input", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_INPUT),
        ("ProcessIndex", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT
D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE = Int32
PROCESSIDTYPE_UNKNOWN = 0
PROCESSIDTYPE_DWM = 1
PROCESSIDTYPE_HANDLE = 2
def _define_D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("ProcessIndex", UInt32),
        ("ProcessIdentifer", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE),
        ("ProcessHandle", win32more.Foundation.HANDLE),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("NumUnrestrictedProtectedSharedResources", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT._fields_ = [
        ("Input", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_INPUT),
        ("DeviceHandle", win32more.Foundation.HANDLE),
        ("CryptoSessionHandle", win32more.Foundation.HANDLE),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("DeviceHandle", win32more.Foundation.HANDLE),
        ("CryptoSessionHandle", win32more.Foundation.HANDLE),
        ("NumOutputIDs", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT._fields_ = [
        ("Input", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_INPUT),
        ("DeviceHandle", win32more.Foundation.HANDLE),
        ("CryptoSessionHandle", win32more.Foundation.HANDLE),
        ("OutputIDIndex", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("DeviceHandle", win32more.Foundation.HANDLE),
        ("CryptoSessionHandle", win32more.Foundation.HANDLE),
        ("OutputIDIndex", UInt32),
        ("OutputID", UInt64),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT
D3DBUSTYPE = Int32
D3DBUSTYPE_OTHER = 0
D3DBUSTYPE_PCI = 1
D3DBUSTYPE_PCIX = 2
D3DBUSTYPE_PCIEXPRESS = 3
D3DBUSTYPE_AGP = 4
D3DBUSIMPL_MODIFIER_INSIDE_OF_CHIPSET = 65536
D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP = 131072
D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET = 196608
D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR = 262144
D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE = 327680
D3DBUSIMPL_MODIFIER_NON_STANDARD = -2147483648
def _define_D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("BusType", win32more.Graphics.Direct3D9.D3DBUSTYPE),
        ("bAccessibleInContiguousBlocks", win32more.Foundation.BOOL),
        ("bAccessibleInNonContiguousBlocks", win32more.Foundation.BOOL),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("NumEncryptionGuids", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT._fields_ = [
        ("Input", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_INPUT),
        ("EncryptionGuidIndex", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("EncryptionGuidIndex", UInt32),
        ("EncryptionGuid", Guid),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT._fields_ = [
        ("Output", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT),
        ("EncryptionGuid", Guid),
    ]
    return D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT_head():
    class D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT():
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT_head
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT._fields_ = [
        ("omac", win32more.Graphics.Direct3D9.D3D_OMAC),
        ("ConfigureType", Guid),
        ("hChannel", win32more.Foundation.HANDLE),
        ("SequenceNumber", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT_head():
    class D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT():
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT_head
    D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT._fields_ = [
        ("omac", win32more.Graphics.Direct3D9.D3D_OMAC),
        ("ConfigureType", Guid),
        ("hChannel", win32more.Foundation.HANDLE),
        ("SequenceNumber", UInt32),
        ("ReturnCode", win32more.Foundation.HRESULT),
    ]
    return D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE_head():
    class D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE():
    D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE_head
    D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE._fields_ = [
        ("Parameters", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT),
        ("StartSequenceQuery", UInt32),
        ("StartSequenceConfigure", UInt32),
    ]
    return D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION_head():
    class D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION():
    D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION_head
    D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION._fields_ = [
        ("Parameters", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT),
        ("Protections", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS),
    ]
    return D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION_head():
    class D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION():
    D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION_head
    D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION._fields_ = [
        ("Parameters", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT),
        ("DXVA2DecodeHandle", win32more.Foundation.HANDLE),
        ("CryptoSessionHandle", win32more.Foundation.HANDLE),
        ("DeviceHandle", win32more.Foundation.HANDLE),
    ]
    return D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE_head():
    class D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE():
    D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE_head
    D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE._fields_ = [
        ("Parameters", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT),
        ("ProcessIdentiferType", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE),
        ("ProcessHandle", win32more.Foundation.HANDLE),
        ("AllowAccess", win32more.Foundation.BOOL),
    ]
    return D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION_head():
    class D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION(Structure):
        pass
    return D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION
def _define_D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION():
    D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION = win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION_head
    D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION._fields_ = [
        ("Parameters", win32more.Graphics.Direct3D9.D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT),
        ("EncryptionGuid", Guid),
    ]
    return D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION
def _define_D3DENCRYPTED_BLOCK_INFO_head():
    class D3DENCRYPTED_BLOCK_INFO(Structure):
        pass
    return D3DENCRYPTED_BLOCK_INFO
def _define_D3DENCRYPTED_BLOCK_INFO():
    D3DENCRYPTED_BLOCK_INFO = win32more.Graphics.Direct3D9.D3DENCRYPTED_BLOCK_INFO_head
    D3DENCRYPTED_BLOCK_INFO._fields_ = [
        ("NumEncryptedBytesAtBeginning", UInt32),
        ("NumBytesInSkipPattern", UInt32),
        ("NumBytesInEncryptPattern", UInt32),
    ]
    return D3DENCRYPTED_BLOCK_INFO
def _define_D3DAES_CTR_IV_head():
    class D3DAES_CTR_IV(Structure):
        pass
    return D3DAES_CTR_IV
def _define_D3DAES_CTR_IV():
    D3DAES_CTR_IV = win32more.Graphics.Direct3D9.D3DAES_CTR_IV_head
    D3DAES_CTR_IV._fields_ = [
        ("IV", UInt64),
        ("Count", UInt64),
    ]
    return D3DAES_CTR_IV
def _define_D3DVSHADERCAPS2_0_head():
    class D3DVSHADERCAPS2_0(Structure):
        pass
    return D3DVSHADERCAPS2_0
def _define_D3DVSHADERCAPS2_0():
    D3DVSHADERCAPS2_0 = win32more.Graphics.Direct3D9.D3DVSHADERCAPS2_0_head
    D3DVSHADERCAPS2_0._fields_ = [
        ("Caps", UInt32),
        ("DynamicFlowControlDepth", Int32),
        ("NumTemps", Int32),
        ("StaticFlowControlDepth", Int32),
    ]
    return D3DVSHADERCAPS2_0
def _define_D3DPSHADERCAPS2_0_head():
    class D3DPSHADERCAPS2_0(Structure):
        pass
    return D3DPSHADERCAPS2_0
def _define_D3DPSHADERCAPS2_0():
    D3DPSHADERCAPS2_0 = win32more.Graphics.Direct3D9.D3DPSHADERCAPS2_0_head
    D3DPSHADERCAPS2_0._fields_ = [
        ("Caps", UInt32),
        ("DynamicFlowControlDepth", Int32),
        ("NumTemps", Int32),
        ("StaticFlowControlDepth", Int32),
        ("NumInstructionSlots", Int32),
    ]
    return D3DPSHADERCAPS2_0
def _define_D3DCAPS9_head():
    class D3DCAPS9(Structure):
        pass
    return D3DCAPS9
def _define_D3DCAPS9():
    D3DCAPS9 = win32more.Graphics.Direct3D9.D3DCAPS9_head
    D3DCAPS9._fields_ = [
        ("DeviceType", win32more.Graphics.Direct3D9.D3DDEVTYPE),
        ("AdapterOrdinal", UInt32),
        ("Caps", UInt32),
        ("Caps2", UInt32),
        ("Caps3", UInt32),
        ("PresentationIntervals", UInt32),
        ("CursorCaps", UInt32),
        ("DevCaps", UInt32),
        ("PrimitiveMiscCaps", UInt32),
        ("RasterCaps", UInt32),
        ("ZCmpCaps", UInt32),
        ("SrcBlendCaps", UInt32),
        ("DestBlendCaps", UInt32),
        ("AlphaCmpCaps", UInt32),
        ("ShadeCaps", UInt32),
        ("TextureCaps", UInt32),
        ("TextureFilterCaps", UInt32),
        ("CubeTextureFilterCaps", UInt32),
        ("VolumeTextureFilterCaps", UInt32),
        ("TextureAddressCaps", UInt32),
        ("VolumeTextureAddressCaps", UInt32),
        ("LineCaps", UInt32),
        ("MaxTextureWidth", UInt32),
        ("MaxTextureHeight", UInt32),
        ("MaxVolumeExtent", UInt32),
        ("MaxTextureRepeat", UInt32),
        ("MaxTextureAspectRatio", UInt32),
        ("MaxAnisotropy", UInt32),
        ("MaxVertexW", Single),
        ("GuardBandLeft", Single),
        ("GuardBandTop", Single),
        ("GuardBandRight", Single),
        ("GuardBandBottom", Single),
        ("ExtentsAdjust", Single),
        ("StencilCaps", UInt32),
        ("FVFCaps", UInt32),
        ("TextureOpCaps", UInt32),
        ("MaxTextureBlendStages", UInt32),
        ("MaxSimultaneousTextures", UInt32),
        ("VertexProcessingCaps", UInt32),
        ("MaxActiveLights", UInt32),
        ("MaxUserClipPlanes", UInt32),
        ("MaxVertexBlendMatrices", UInt32),
        ("MaxVertexBlendMatrixIndex", UInt32),
        ("MaxPointSize", Single),
        ("MaxPrimitiveCount", UInt32),
        ("MaxVertexIndex", UInt32),
        ("MaxStreams", UInt32),
        ("MaxStreamStride", UInt32),
        ("VertexShaderVersion", UInt32),
        ("MaxVertexShaderConst", UInt32),
        ("PixelShaderVersion", UInt32),
        ("PixelShader1xMaxValue", Single),
        ("DevCaps2", UInt32),
        ("MaxNpatchTessellationLevel", Single),
        ("Reserved5", UInt32),
        ("MasterAdapterOrdinal", UInt32),
        ("AdapterOrdinalInGroup", UInt32),
        ("NumberOfAdaptersInGroup", UInt32),
        ("DeclTypes", UInt32),
        ("NumSimultaneousRTs", UInt32),
        ("StretchRectFilterCaps", UInt32),
        ("VS20Caps", win32more.Graphics.Direct3D9.D3DVSHADERCAPS2_0),
        ("PS20Caps", win32more.Graphics.Direct3D9.D3DPSHADERCAPS2_0),
        ("VertexTextureFilterCaps", UInt32),
        ("MaxVShaderInstructionsExecuted", UInt32),
        ("MaxPShaderInstructionsExecuted", UInt32),
        ("MaxVertexShader30InstructionSlots", UInt32),
        ("MaxPixelShader30InstructionSlots", UInt32),
    ]
    return D3DCAPS9
def _define_IDirect3D9_head():
    class IDirect3D9(win32more.System.Com.IUnknown_head):
        Guid = Guid('81bdcbca-64d4-426d-ae8d-ad0147f4275c')
    return IDirect3D9
def _define_IDirect3D9():
    IDirect3D9 = win32more.Graphics.Direct3D9.IDirect3D9_head
    IDirect3D9.RegisterSoftwareDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p, use_last_error=False)(3, 'RegisterSoftwareDevice', ((1, 'pInitializeFunction'),)))
    IDirect3D9.GetAdapterCount = COMMETHOD(WINFUNCTYPE(UInt32, use_last_error=False)(4, 'GetAdapterCount', ()))
    IDirect3D9.GetAdapterIdentifier = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DADAPTER_IDENTIFIER9_head), use_last_error=False)(5, 'GetAdapterIdentifier', ((1, 'Adapter'),(1, 'Flags'),(1, 'pIdentifier'),)))
    IDirect3D9.GetAdapterModeCount = COMMETHOD(WINFUNCTYPE(UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT, use_last_error=False)(6, 'GetAdapterModeCount', ((1, 'Adapter'),(1, 'Format'),)))
    IDirect3D9.EnumAdapterModes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODE_head), use_last_error=False)(7, 'EnumAdapterModes', ((1, 'Adapter'),(1, 'Format'),(1, 'Mode'),(1, 'pMode'),)))
    IDirect3D9.GetAdapterDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODE_head), use_last_error=False)(8, 'GetAdapterDisplayMode', ((1, 'Adapter'),(1, 'pMode'),)))
    IDirect3D9.CheckDeviceType = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Foundation.BOOL, use_last_error=False)(9, 'CheckDeviceType', ((1, 'Adapter'),(1, 'DevType'),(1, 'AdapterFormat'),(1, 'BackBufferFormat'),(1, 'bWindowed'),)))
    IDirect3D9.CheckDeviceFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,win32more.Graphics.Direct3D9.D3DFORMAT,UInt32,win32more.Graphics.Direct3D9.D3DRESOURCETYPE,win32more.Graphics.Direct3D9.D3DFORMAT, use_last_error=False)(10, 'CheckDeviceFormat', ((1, 'Adapter'),(1, 'DeviceType'),(1, 'AdapterFormat'),(1, 'Usage'),(1, 'RType'),(1, 'CheckFormat'),)))
    IDirect3D9.CheckDeviceMultiSampleType = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Foundation.BOOL,win32more.Graphics.Direct3D9.D3DMULTISAMPLE_TYPE,POINTER(UInt32), use_last_error=False)(11, 'CheckDeviceMultiSampleType', ((1, 'Adapter'),(1, 'DeviceType'),(1, 'SurfaceFormat'),(1, 'Windowed'),(1, 'MultiSampleType'),(1, 'pQualityLevels'),)))
    IDirect3D9.CheckDepthStencilMatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DFORMAT, use_last_error=False)(12, 'CheckDepthStencilMatch', ((1, 'Adapter'),(1, 'DeviceType'),(1, 'AdapterFormat'),(1, 'RenderTargetFormat'),(1, 'DepthStencilFormat'),)))
    IDirect3D9.CheckDeviceFormatConversion = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DFORMAT, use_last_error=False)(13, 'CheckDeviceFormatConversion', ((1, 'Adapter'),(1, 'DeviceType'),(1, 'SourceFormat'),(1, 'TargetFormat'),)))
    IDirect3D9.GetDeviceCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,POINTER(win32more.Graphics.Direct3D9.D3DCAPS9_head), use_last_error=False)(14, 'GetDeviceCaps', ((1, 'Adapter'),(1, 'DeviceType'),(1, 'pCaps'),)))
    IDirect3D9.GetAdapterMonitor = COMMETHOD(WINFUNCTYPE(win32more.Graphics.Gdi.HMONITOR,UInt32, use_last_error=False)(15, 'GetAdapterMonitor', ((1, 'Adapter'),)))
    IDirect3D9.CreateDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,win32more.Foundation.HWND,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DPRESENT_PARAMETERS_head),POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(16, 'CreateDevice', ((1, 'Adapter'),(1, 'DeviceType'),(1, 'hFocusWindow'),(1, 'BehaviorFlags'),(1, 'pPresentationParameters'),(1, 'ppReturnedDeviceInterface'),)))
    win32more.System.Com.IUnknown
    return IDirect3D9
def _define_IDirect3DDevice9_head():
    class IDirect3DDevice9(win32more.System.Com.IUnknown_head):
        Guid = Guid('d0223b96-bf7a-43fd-92bd-a43b0d82b9eb')
    return IDirect3DDevice9
def _define_IDirect3DDevice9():
    IDirect3DDevice9 = win32more.Graphics.Direct3D9.IDirect3DDevice9_head
    IDirect3DDevice9.TestCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(3, 'TestCooperativeLevel', ()))
    IDirect3DDevice9.GetAvailableTextureMem = COMMETHOD(WINFUNCTYPE(UInt32, use_last_error=False)(4, 'GetAvailableTextureMem', ()))
    IDirect3DDevice9.EvictManagedResources = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(5, 'EvictManagedResources', ()))
    IDirect3DDevice9.GetDirect3D = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3D9_head), use_last_error=False)(6, 'GetDirect3D', ((1, 'ppD3D9'),)))
    IDirect3DDevice9.GetDeviceCaps = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DCAPS9_head), use_last_error=False)(7, 'GetDeviceCaps', ((1, 'pCaps'),)))
    IDirect3DDevice9.GetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODE_head), use_last_error=False)(8, 'GetDisplayMode', ((1, 'iSwapChain'),(1, 'pMode'),)))
    IDirect3DDevice9.GetCreationParameters = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DDEVICE_CREATION_PARAMETERS_head), use_last_error=False)(9, 'GetCreationParameters', ((1, 'pParameters'),)))
    IDirect3DDevice9.SetCursorProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.IDirect3DSurface9_head, use_last_error=False)(10, 'SetCursorProperties', ((1, 'XHotSpot'),(1, 'YHotSpot'),(1, 'pCursorBitmap'),)))
    IDirect3DDevice9.SetCursorPosition = COMMETHOD(WINFUNCTYPE(Void,Int32,Int32,UInt32, use_last_error=False)(11, 'SetCursorPosition', ((1, 'X'),(1, 'Y'),(1, 'Flags'),)))
    IDirect3DDevice9.ShowCursor = COMMETHOD(WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.BOOL, use_last_error=False)(12, 'ShowCursor', ((1, 'bShow'),)))
    IDirect3DDevice9.CreateAdditionalSwapChain = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DPRESENT_PARAMETERS_head),POINTER(win32more.Graphics.Direct3D9.IDirect3DSwapChain9_head), use_last_error=False)(13, 'CreateAdditionalSwapChain', ((1, 'pPresentationParameters'),(1, 'pSwapChain'),)))
    IDirect3DDevice9.GetSwapChain = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3DSwapChain9_head), use_last_error=False)(14, 'GetSwapChain', ((1, 'iSwapChain'),(1, 'pSwapChain'),)))
    IDirect3DDevice9.GetNumberOfSwapChains = COMMETHOD(WINFUNCTYPE(UInt32, use_last_error=False)(15, 'GetNumberOfSwapChains', ()))
    IDirect3DDevice9.Reset = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DPRESENT_PARAMETERS_head), use_last_error=False)(16, 'Reset', ((1, 'pPresentationParameters'),)))
    IDirect3DDevice9.Present = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Foundation.RECT_head),win32more.Foundation.HWND,POINTER(win32more.Graphics.Gdi.RGNDATA_head), use_last_error=False)(17, 'Present', ((1, 'pSourceRect'),(1, 'pDestRect'),(1, 'hDestWindowOverride'),(1, 'pDirtyRegion'),)))
    IDirect3DDevice9.GetBackBuffer = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DBACKBUFFER_TYPE,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head), use_last_error=False)(18, 'GetBackBuffer', ((1, 'iSwapChain'),(1, 'iBackBuffer'),(1, 'Type'),(1, 'ppBackBuffer'),)))
    IDirect3DDevice9.GetRasterStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DRASTER_STATUS_head), use_last_error=False)(19, 'GetRasterStatus', ((1, 'iSwapChain'),(1, 'pRasterStatus'),)))
    IDirect3DDevice9.SetDialogBoxMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BOOL, use_last_error=False)(20, 'SetDialogBoxMode', ((1, 'bEnableDialogs'),)))
    IDirect3DDevice9.SetGammaRamp = COMMETHOD(WINFUNCTYPE(Void,UInt32,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DGAMMARAMP_head), use_last_error=False)(21, 'SetGammaRamp', ((1, 'iSwapChain'),(1, 'Flags'),(1, 'pRamp'),)))
    IDirect3DDevice9.GetGammaRamp = COMMETHOD(WINFUNCTYPE(Void,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DGAMMARAMP_head), use_last_error=False)(22, 'GetGammaRamp', ((1, 'iSwapChain'),(1, 'pRamp'),)))
    IDirect3DDevice9.CreateTexture = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DPOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DTexture9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(23, 'CreateTexture', ((1, 'Width'),(1, 'Height'),(1, 'Levels'),(1, 'Usage'),(1, 'Format'),(1, 'Pool'),(1, 'ppTexture'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.CreateVolumeTexture = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DPOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DVolumeTexture9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(24, 'CreateVolumeTexture', ((1, 'Width'),(1, 'Height'),(1, 'Depth'),(1, 'Levels'),(1, 'Usage'),(1, 'Format'),(1, 'Pool'),(1, 'ppVolumeTexture'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.CreateCubeTexture = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DPOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DCubeTexture9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(25, 'CreateCubeTexture', ((1, 'EdgeLength'),(1, 'Levels'),(1, 'Usage'),(1, 'Format'),(1, 'Pool'),(1, 'ppCubeTexture'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.CreateVertexBuffer = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DPOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DVertexBuffer9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(26, 'CreateVertexBuffer', ((1, 'Length'),(1, 'Usage'),(1, 'FVF'),(1, 'Pool'),(1, 'ppVertexBuffer'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.CreateIndexBuffer = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DPOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DIndexBuffer9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(27, 'CreateIndexBuffer', ((1, 'Length'),(1, 'Usage'),(1, 'Format'),(1, 'Pool'),(1, 'ppIndexBuffer'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.CreateRenderTarget = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DMULTISAMPLE_TYPE,UInt32,win32more.Foundation.BOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(28, 'CreateRenderTarget', ((1, 'Width'),(1, 'Height'),(1, 'Format'),(1, 'MultiSample'),(1, 'MultisampleQuality'),(1, 'Lockable'),(1, 'ppSurface'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.CreateDepthStencilSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DMULTISAMPLE_TYPE,UInt32,win32more.Foundation.BOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(29, 'CreateDepthStencilSurface', ((1, 'Width'),(1, 'Height'),(1, 'Format'),(1, 'MultiSample'),(1, 'MultisampleQuality'),(1, 'Discard'),(1, 'ppSurface'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.UpdateSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DSurface9_head,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.Direct3D9.IDirect3DSurface9_head,POINTER(win32more.Foundation.POINT_head), use_last_error=False)(30, 'UpdateSurface', ((1, 'pSourceSurface'),(1, 'pSourceRect'),(1, 'pDestinationSurface'),(1, 'pDestPoint'),)))
    IDirect3DDevice9.UpdateTexture = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head,win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head, use_last_error=False)(31, 'UpdateTexture', ((1, 'pSourceTexture'),(1, 'pDestinationTexture'),)))
    IDirect3DDevice9.GetRenderTargetData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DSurface9_head,win32more.Graphics.Direct3D9.IDirect3DSurface9_head, use_last_error=False)(32, 'GetRenderTargetData', ((1, 'pRenderTarget'),(1, 'pDestSurface'),)))
    IDirect3DDevice9.GetFrontBufferData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.IDirect3DSurface9_head, use_last_error=False)(33, 'GetFrontBufferData', ((1, 'iSwapChain'),(1, 'pDestSurface'),)))
    IDirect3DDevice9.StretchRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DSurface9_head,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.Direct3D9.IDirect3DSurface9_head,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.Direct3D9.D3DTEXTUREFILTERTYPE, use_last_error=False)(34, 'StretchRect', ((1, 'pSourceSurface'),(1, 'pSourceRect'),(1, 'pDestSurface'),(1, 'pDestRect'),(1, 'Filter'),)))
    IDirect3DDevice9.ColorFill = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DSurface9_head,POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(35, 'ColorFill', ((1, 'pSurface'),(1, 'pRect'),(1, 'color'),)))
    IDirect3DDevice9.CreateOffscreenPlainSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DPOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head),POINTER(win32more.Foundation.HANDLE), use_last_error=False)(36, 'CreateOffscreenPlainSurface', ((1, 'Width'),(1, 'Height'),(1, 'Format'),(1, 'Pool'),(1, 'ppSurface'),(1, 'pSharedHandle'),)))
    IDirect3DDevice9.SetRenderTarget = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.IDirect3DSurface9_head, use_last_error=False)(37, 'SetRenderTarget', ((1, 'RenderTargetIndex'),(1, 'pRenderTarget'),)))
    IDirect3DDevice9.GetRenderTarget = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head), use_last_error=False)(38, 'GetRenderTarget', ((1, 'RenderTargetIndex'),(1, 'ppRenderTarget'),)))
    IDirect3DDevice9.SetDepthStencilSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DSurface9_head, use_last_error=False)(39, 'SetDepthStencilSurface', ((1, 'pNewZStencil'),)))
    IDirect3DDevice9.GetDepthStencilSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head), use_last_error=False)(40, 'GetDepthStencilSurface', ((1, 'ppZStencilSurface'),)))
    IDirect3DDevice9.BeginScene = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(41, 'BeginScene', ()))
    IDirect3DDevice9.EndScene = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(42, 'EndScene', ()))
    IDirect3DDevice9.Clear = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DRECT_head),UInt32,UInt32,Single,UInt32, use_last_error=False)(43, 'Clear', ((1, 'Count'),(1, 'pRects'),(1, 'Flags'),(1, 'Color'),(1, 'Z'),(1, 'Stencil'),)))
    IDirect3DDevice9.SetTransform = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DTRANSFORMSTATETYPE,POINTER(win32more.Graphics.Direct3D.D3DMATRIX_head), use_last_error=False)(44, 'SetTransform', ((1, 'State'),(1, 'pMatrix'),)))
    IDirect3DDevice9.GetTransform = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DTRANSFORMSTATETYPE,POINTER(win32more.Graphics.Direct3D.D3DMATRIX_head), use_last_error=False)(45, 'GetTransform', ((1, 'State'),(1, 'pMatrix'),)))
    IDirect3DDevice9.MultiplyTransform = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DTRANSFORMSTATETYPE,POINTER(win32more.Graphics.Direct3D.D3DMATRIX_head), use_last_error=False)(46, 'MultiplyTransform', ((1, 'param0'),(1, 'param1'),)))
    IDirect3DDevice9.SetViewport = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DVIEWPORT9_head), use_last_error=False)(47, 'SetViewport', ((1, 'pViewport'),)))
    IDirect3DDevice9.GetViewport = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DVIEWPORT9_head), use_last_error=False)(48, 'GetViewport', ((1, 'pViewport'),)))
    IDirect3DDevice9.SetMaterial = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DMATERIAL9_head), use_last_error=False)(49, 'SetMaterial', ((1, 'pMaterial'),)))
    IDirect3DDevice9.GetMaterial = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DMATERIAL9_head), use_last_error=False)(50, 'GetMaterial', ((1, 'pMaterial'),)))
    IDirect3DDevice9.SetLight = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DLIGHT9_head), use_last_error=False)(51, 'SetLight', ((1, 'Index'),(1, 'param1'),)))
    IDirect3DDevice9.GetLight = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DLIGHT9_head), use_last_error=False)(52, 'GetLight', ((1, 'Index'),(1, 'param1'),)))
    IDirect3DDevice9.LightEnable = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Foundation.BOOL, use_last_error=False)(53, 'LightEnable', ((1, 'Index'),(1, 'Enable'),)))
    IDirect3DDevice9.GetLightEnable = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Foundation.BOOL), use_last_error=False)(54, 'GetLightEnable', ((1, 'Index'),(1, 'pEnable'),)))
    IDirect3DDevice9.SetClipPlane = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single), use_last_error=False)(55, 'SetClipPlane', ((1, 'Index'),(1, 'pPlane'),)))
    IDirect3DDevice9.GetClipPlane = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single), use_last_error=False)(56, 'GetClipPlane', ((1, 'Index'),(1, 'pPlane'),)))
    IDirect3DDevice9.SetRenderState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DRENDERSTATETYPE,UInt32, use_last_error=False)(57, 'SetRenderState', ((1, 'State'),(1, 'Value'),)))
    IDirect3DDevice9.GetRenderState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DRENDERSTATETYPE,POINTER(UInt32), use_last_error=False)(58, 'GetRenderState', ((1, 'State'),(1, 'pValue'),)))
    IDirect3DDevice9.CreateStateBlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DSTATEBLOCKTYPE,POINTER(win32more.Graphics.Direct3D9.IDirect3DStateBlock9_head), use_last_error=False)(59, 'CreateStateBlock', ((1, 'Type'),(1, 'ppSB'),)))
    IDirect3DDevice9.BeginStateBlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(60, 'BeginStateBlock', ()))
    IDirect3DDevice9.EndStateBlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DStateBlock9_head), use_last_error=False)(61, 'EndStateBlock', ((1, 'ppSB'),)))
    IDirect3DDevice9.SetClipStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DCLIPSTATUS9_head), use_last_error=False)(62, 'SetClipStatus', ((1, 'pClipStatus'),)))
    IDirect3DDevice9.GetClipStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DCLIPSTATUS9_head), use_last_error=False)(63, 'GetClipStatus', ((1, 'pClipStatus'),)))
    IDirect3DDevice9.GetTexture = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head), use_last_error=False)(64, 'GetTexture', ((1, 'Stage'),(1, 'ppTexture'),)))
    IDirect3DDevice9.SetTexture = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head, use_last_error=False)(65, 'SetTexture', ((1, 'Stage'),(1, 'pTexture'),)))
    IDirect3DDevice9.GetTextureStageState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DTEXTURESTAGESTATETYPE,POINTER(UInt32), use_last_error=False)(66, 'GetTextureStageState', ((1, 'Stage'),(1, 'Type'),(1, 'pValue'),)))
    IDirect3DDevice9.SetTextureStageState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DTEXTURESTAGESTATETYPE,UInt32, use_last_error=False)(67, 'SetTextureStageState', ((1, 'Stage'),(1, 'Type'),(1, 'Value'),)))
    IDirect3DDevice9.GetSamplerState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DSAMPLERSTATETYPE,POINTER(UInt32), use_last_error=False)(68, 'GetSamplerState', ((1, 'Sampler'),(1, 'Type'),(1, 'pValue'),)))
    IDirect3DDevice9.SetSamplerState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DSAMPLERSTATETYPE,UInt32, use_last_error=False)(69, 'SetSamplerState', ((1, 'Sampler'),(1, 'Type'),(1, 'Value'),)))
    IDirect3DDevice9.ValidateDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(70, 'ValidateDevice', ((1, 'pNumPasses'),)))
    IDirect3DDevice9.SetPaletteEntries = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head), use_last_error=False)(71, 'SetPaletteEntries', ((1, 'PaletteNumber'),(1, 'pEntries'),)))
    IDirect3DDevice9.GetPaletteEntries = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Gdi.PALETTEENTRY_head), use_last_error=False)(72, 'GetPaletteEntries', ((1, 'PaletteNumber'),(1, 'pEntries'),)))
    IDirect3DDevice9.SetCurrentTexturePalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(73, 'SetCurrentTexturePalette', ((1, 'PaletteNumber'),)))
    IDirect3DDevice9.GetCurrentTexturePalette = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(74, 'GetCurrentTexturePalette', ((1, 'PaletteNumber'),)))
    IDirect3DDevice9.SetScissorRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(75, 'SetScissorRect', ((1, 'pRect'),)))
    IDirect3DDevice9.GetScissorRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(76, 'GetScissorRect', ((1, 'pRect'),)))
    IDirect3DDevice9.SetSoftwareVertexProcessing = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BOOL, use_last_error=False)(77, 'SetSoftwareVertexProcessing', ((1, 'bSoftware'),)))
    IDirect3DDevice9.GetSoftwareVertexProcessing = COMMETHOD(WINFUNCTYPE(win32more.Foundation.BOOL, use_last_error=False)(78, 'GetSoftwareVertexProcessing', ()))
    IDirect3DDevice9.SetNPatchMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Single, use_last_error=False)(79, 'SetNPatchMode', ((1, 'nSegments'),)))
    IDirect3DDevice9.GetNPatchMode = COMMETHOD(WINFUNCTYPE(Single, use_last_error=False)(80, 'GetNPatchMode', ()))
    IDirect3DDevice9.DrawPrimitive = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DPRIMITIVETYPE,UInt32,UInt32, use_last_error=False)(81, 'DrawPrimitive', ((1, 'PrimitiveType'),(1, 'StartVertex'),(1, 'PrimitiveCount'),)))
    IDirect3DDevice9.DrawIndexedPrimitive = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DPRIMITIVETYPE,Int32,UInt32,UInt32,UInt32,UInt32, use_last_error=False)(82, 'DrawIndexedPrimitive', ((1, 'param0'),(1, 'BaseVertexIndex'),(1, 'MinVertexIndex'),(1, 'NumVertices'),(1, 'startIndex'),(1, 'primCount'),)))
    IDirect3DDevice9.DrawPrimitiveUP = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DPRIMITIVETYPE,UInt32,c_void_p,UInt32, use_last_error=False)(83, 'DrawPrimitiveUP', ((1, 'PrimitiveType'),(1, 'PrimitiveCount'),(1, 'pVertexStreamZeroData'),(1, 'VertexStreamZeroStride'),)))
    IDirect3DDevice9.DrawIndexedPrimitiveUP = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DPRIMITIVETYPE,UInt32,UInt32,UInt32,c_void_p,win32more.Graphics.Direct3D9.D3DFORMAT,c_void_p,UInt32, use_last_error=False)(84, 'DrawIndexedPrimitiveUP', ((1, 'PrimitiveType'),(1, 'MinVertexIndex'),(1, 'NumVertices'),(1, 'PrimitiveCount'),(1, 'pIndexData'),(1, 'IndexDataFormat'),(1, 'pVertexStreamZeroData'),(1, 'VertexStreamZeroStride'),)))
    IDirect3DDevice9.ProcessVertices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,win32more.Graphics.Direct3D9.IDirect3DVertexBuffer9_head,win32more.Graphics.Direct3D9.IDirect3DVertexDeclaration9_head,UInt32, use_last_error=False)(85, 'ProcessVertices', ((1, 'SrcStartIndex'),(1, 'DestIndex'),(1, 'VertexCount'),(1, 'pDestBuffer'),(1, 'pVertexDecl'),(1, 'Flags'),)))
    IDirect3DDevice9.CreateVertexDeclaration = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DVERTEXELEMENT9_head),POINTER(win32more.Graphics.Direct3D9.IDirect3DVertexDeclaration9_head), use_last_error=False)(86, 'CreateVertexDeclaration', ((1, 'pVertexElements'),(1, 'ppDecl'),)))
    IDirect3DDevice9.SetVertexDeclaration = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DVertexDeclaration9_head, use_last_error=False)(87, 'SetVertexDeclaration', ((1, 'pDecl'),)))
    IDirect3DDevice9.GetVertexDeclaration = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DVertexDeclaration9_head), use_last_error=False)(88, 'GetVertexDeclaration', ((1, 'ppDecl'),)))
    IDirect3DDevice9.SetFVF = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(89, 'SetFVF', ((1, 'FVF'),)))
    IDirect3DDevice9.GetFVF = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(90, 'GetFVF', ((1, 'pFVF'),)))
    IDirect3DDevice9.CreateVertexShader = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32),POINTER(win32more.Graphics.Direct3D9.IDirect3DVertexShader9_head), use_last_error=False)(91, 'CreateVertexShader', ((1, 'pFunction'),(1, 'ppShader'),)))
    IDirect3DDevice9.SetVertexShader = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DVertexShader9_head, use_last_error=False)(92, 'SetVertexShader', ((1, 'pShader'),)))
    IDirect3DDevice9.GetVertexShader = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DVertexShader9_head), use_last_error=False)(93, 'GetVertexShader', ((1, 'ppShader'),)))
    IDirect3DDevice9.SetVertexShaderConstantF = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single),UInt32, use_last_error=False)(94, 'SetVertexShaderConstantF', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4fCount'),)))
    IDirect3DDevice9.GetVertexShaderConstantF = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single),UInt32, use_last_error=False)(95, 'GetVertexShaderConstantF', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4fCount'),)))
    IDirect3DDevice9.SetVertexShaderConstantI = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Int32),UInt32, use_last_error=False)(96, 'SetVertexShaderConstantI', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4iCount'),)))
    IDirect3DDevice9.GetVertexShaderConstantI = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Int32),UInt32, use_last_error=False)(97, 'GetVertexShaderConstantI', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4iCount'),)))
    IDirect3DDevice9.SetVertexShaderConstantB = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Foundation.BOOL),UInt32, use_last_error=False)(98, 'SetVertexShaderConstantB', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'BoolCount'),)))
    IDirect3DDevice9.GetVertexShaderConstantB = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Foundation.BOOL),UInt32, use_last_error=False)(99, 'GetVertexShaderConstantB', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'BoolCount'),)))
    IDirect3DDevice9.SetStreamSource = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.IDirect3DVertexBuffer9_head,UInt32,UInt32, use_last_error=False)(100, 'SetStreamSource', ((1, 'StreamNumber'),(1, 'pStreamData'),(1, 'OffsetInBytes'),(1, 'Stride'),)))
    IDirect3DDevice9.GetStreamSource = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3DVertexBuffer9_head),POINTER(UInt32),POINTER(UInt32), use_last_error=False)(101, 'GetStreamSource', ((1, 'StreamNumber'),(1, 'ppStreamData'),(1, 'pOffsetInBytes'),(1, 'pStride'),)))
    IDirect3DDevice9.SetStreamSourceFreq = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32, use_last_error=False)(102, 'SetStreamSourceFreq', ((1, 'StreamNumber'),(1, 'Setting'),)))
    IDirect3DDevice9.GetStreamSourceFreq = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(UInt32), use_last_error=False)(103, 'GetStreamSourceFreq', ((1, 'StreamNumber'),(1, 'pSetting'),)))
    IDirect3DDevice9.SetIndices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DIndexBuffer9_head, use_last_error=False)(104, 'SetIndices', ((1, 'pIndexData'),)))
    IDirect3DDevice9.GetIndices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DIndexBuffer9_head), use_last_error=False)(105, 'GetIndices', ((1, 'ppIndexData'),)))
    IDirect3DDevice9.CreatePixelShader = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32),POINTER(win32more.Graphics.Direct3D9.IDirect3DPixelShader9_head), use_last_error=False)(106, 'CreatePixelShader', ((1, 'pFunction'),(1, 'ppShader'),)))
    IDirect3DDevice9.SetPixelShader = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DPixelShader9_head, use_last_error=False)(107, 'SetPixelShader', ((1, 'pShader'),)))
    IDirect3DDevice9.GetPixelShader = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DPixelShader9_head), use_last_error=False)(108, 'GetPixelShader', ((1, 'ppShader'),)))
    IDirect3DDevice9.SetPixelShaderConstantF = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single),UInt32, use_last_error=False)(109, 'SetPixelShaderConstantF', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4fCount'),)))
    IDirect3DDevice9.GetPixelShaderConstantF = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single),UInt32, use_last_error=False)(110, 'GetPixelShaderConstantF', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4fCount'),)))
    IDirect3DDevice9.SetPixelShaderConstantI = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Int32),UInt32, use_last_error=False)(111, 'SetPixelShaderConstantI', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4iCount'),)))
    IDirect3DDevice9.GetPixelShaderConstantI = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Int32),UInt32, use_last_error=False)(112, 'GetPixelShaderConstantI', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'Vector4iCount'),)))
    IDirect3DDevice9.SetPixelShaderConstantB = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Foundation.BOOL),UInt32, use_last_error=False)(113, 'SetPixelShaderConstantB', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'BoolCount'),)))
    IDirect3DDevice9.GetPixelShaderConstantB = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Foundation.BOOL),UInt32, use_last_error=False)(114, 'GetPixelShaderConstantB', ((1, 'StartRegister'),(1, 'pConstantData'),(1, 'BoolCount'),)))
    IDirect3DDevice9.DrawRectPatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single),POINTER(win32more.Graphics.Direct3D9.D3DRECTPATCH_INFO_head), use_last_error=False)(115, 'DrawRectPatch', ((1, 'Handle'),(1, 'pNumSegs'),(1, 'pRectPatchInfo'),)))
    IDirect3DDevice9.DrawTriPatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(Single),POINTER(win32more.Graphics.Direct3D9.D3DTRIPATCH_INFO_head), use_last_error=False)(116, 'DrawTriPatch', ((1, 'Handle'),(1, 'pNumSegs'),(1, 'pTriPatchInfo'),)))
    IDirect3DDevice9.DeletePatch = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(117, 'DeletePatch', ((1, 'Handle'),)))
    IDirect3DDevice9.CreateQuery = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DQUERYTYPE,POINTER(win32more.Graphics.Direct3D9.IDirect3DQuery9_head), use_last_error=False)(118, 'CreateQuery', ((1, 'Type'),(1, 'ppQuery'),)))
    win32more.System.Com.IUnknown
    return IDirect3DDevice9
def _define_IDirect3DStateBlock9_head():
    class IDirect3DStateBlock9(win32more.System.Com.IUnknown_head):
        Guid = Guid('b07c4fe5-310d-4ba8-a23c-4f0f206f218b')
    return IDirect3DStateBlock9
def _define_IDirect3DStateBlock9():
    IDirect3DStateBlock9 = win32more.Graphics.Direct3D9.IDirect3DStateBlock9_head
    IDirect3DStateBlock9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(3, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DStateBlock9.Capture = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(4, 'Capture', ()))
    IDirect3DStateBlock9.Apply = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(5, 'Apply', ()))
    win32more.System.Com.IUnknown
    return IDirect3DStateBlock9
def _define_IDirect3DSwapChain9_head():
    class IDirect3DSwapChain9(win32more.System.Com.IUnknown_head):
        Guid = Guid('794950f2-adfc-458a-905e-10a10b0b503b')
    return IDirect3DSwapChain9
def _define_IDirect3DSwapChain9():
    IDirect3DSwapChain9 = win32more.Graphics.Direct3D9.IDirect3DSwapChain9_head
    IDirect3DSwapChain9.Present = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Foundation.RECT_head),win32more.Foundation.HWND,POINTER(win32more.Graphics.Gdi.RGNDATA_head),UInt32, use_last_error=False)(3, 'Present', ((1, 'pSourceRect'),(1, 'pDestRect'),(1, 'hDestWindowOverride'),(1, 'pDirtyRegion'),(1, 'dwFlags'),)))
    IDirect3DSwapChain9.GetFrontBufferData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DSurface9_head, use_last_error=False)(4, 'GetFrontBufferData', ((1, 'pDestSurface'),)))
    IDirect3DSwapChain9.GetBackBuffer = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DBACKBUFFER_TYPE,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head), use_last_error=False)(5, 'GetBackBuffer', ((1, 'iBackBuffer'),(1, 'Type'),(1, 'ppBackBuffer'),)))
    IDirect3DSwapChain9.GetRasterStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DRASTER_STATUS_head), use_last_error=False)(6, 'GetRasterStatus', ((1, 'pRasterStatus'),)))
    IDirect3DSwapChain9.GetDisplayMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODE_head), use_last_error=False)(7, 'GetDisplayMode', ((1, 'pMode'),)))
    IDirect3DSwapChain9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(8, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DSwapChain9.GetPresentParameters = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DPRESENT_PARAMETERS_head), use_last_error=False)(9, 'GetPresentParameters', ((1, 'pPresentationParameters'),)))
    win32more.System.Com.IUnknown
    return IDirect3DSwapChain9
def _define_IDirect3DResource9_head():
    class IDirect3DResource9(win32more.System.Com.IUnknown_head):
        Guid = Guid('05eec05d-8f7d-4362-b999-d1baf357c704')
    return IDirect3DResource9
def _define_IDirect3DResource9():
    IDirect3DResource9 = win32more.Graphics.Direct3D9.IDirect3DResource9_head
    IDirect3DResource9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(3, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DResource9.SetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,UInt32,UInt32, use_last_error=False)(4, 'SetPrivateData', ((1, 'refguid'),(1, 'pData'),(1, 'SizeOfData'),(1, 'Flags'),)))
    IDirect3DResource9.GetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,POINTER(UInt32), use_last_error=False)(5, 'GetPrivateData', ((1, 'refguid'),(1, 'pData'),(1, 'pSizeOfData'),)))
    IDirect3DResource9.FreePrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(6, 'FreePrivateData', ((1, 'refguid'),)))
    IDirect3DResource9.SetPriority = COMMETHOD(WINFUNCTYPE(UInt32,UInt32, use_last_error=False)(7, 'SetPriority', ((1, 'PriorityNew'),)))
    IDirect3DResource9.GetPriority = COMMETHOD(WINFUNCTYPE(UInt32, use_last_error=False)(8, 'GetPriority', ()))
    IDirect3DResource9.PreLoad = COMMETHOD(WINFUNCTYPE(Void, use_last_error=False)(9, 'PreLoad', ()))
    IDirect3DResource9.GetType = COMMETHOD(WINFUNCTYPE(win32more.Graphics.Direct3D9.D3DRESOURCETYPE, use_last_error=False)(10, 'GetType', ()))
    win32more.System.Com.IUnknown
    return IDirect3DResource9
def _define_IDirect3DVertexDeclaration9_head():
    class IDirect3DVertexDeclaration9(win32more.System.Com.IUnknown_head):
        Guid = Guid('dd13c59c-36fa-4098-a8fb-c7ed39dc8546')
    return IDirect3DVertexDeclaration9
def _define_IDirect3DVertexDeclaration9():
    IDirect3DVertexDeclaration9 = win32more.Graphics.Direct3D9.IDirect3DVertexDeclaration9_head
    IDirect3DVertexDeclaration9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(3, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DVertexDeclaration9.GetDeclaration = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DVERTEXELEMENT9_head),POINTER(UInt32), use_last_error=False)(4, 'GetDeclaration', ((1, 'pElement'),(1, 'pNumElements'),)))
    win32more.System.Com.IUnknown
    return IDirect3DVertexDeclaration9
def _define_IDirect3DVertexShader9_head():
    class IDirect3DVertexShader9(win32more.System.Com.IUnknown_head):
        Guid = Guid('efc5557e-6265-4613-8a94-43857889eb36')
    return IDirect3DVertexShader9
def _define_IDirect3DVertexShader9():
    IDirect3DVertexShader9 = win32more.Graphics.Direct3D9.IDirect3DVertexShader9_head
    IDirect3DVertexShader9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(3, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DVertexShader9.GetFunction = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,POINTER(UInt32), use_last_error=False)(4, 'GetFunction', ((1, 'param0'),(1, 'pSizeOfData'),)))
    win32more.System.Com.IUnknown
    return IDirect3DVertexShader9
def _define_IDirect3DPixelShader9_head():
    class IDirect3DPixelShader9(win32more.System.Com.IUnknown_head):
        Guid = Guid('6d3bdbdc-5b02-4415-b852-ce5e8bccb289')
    return IDirect3DPixelShader9
def _define_IDirect3DPixelShader9():
    IDirect3DPixelShader9 = win32more.Graphics.Direct3D9.IDirect3DPixelShader9_head
    IDirect3DPixelShader9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(3, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DPixelShader9.GetFunction = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,POINTER(UInt32), use_last_error=False)(4, 'GetFunction', ((1, 'param0'),(1, 'pSizeOfData'),)))
    win32more.System.Com.IUnknown
    return IDirect3DPixelShader9
def _define_IDirect3DBaseTexture9_head():
    class IDirect3DBaseTexture9(win32more.Graphics.Direct3D9.IDirect3DResource9_head):
        Guid = Guid('580ca87e-1d3c-4d54-991d-b7d3e3c298ce')
    return IDirect3DBaseTexture9
def _define_IDirect3DBaseTexture9():
    IDirect3DBaseTexture9 = win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head
    IDirect3DBaseTexture9.SetLOD = COMMETHOD(WINFUNCTYPE(UInt32,UInt32, use_last_error=False)(11, 'SetLOD', ((1, 'LODNew'),)))
    IDirect3DBaseTexture9.GetLOD = COMMETHOD(WINFUNCTYPE(UInt32, use_last_error=False)(12, 'GetLOD', ()))
    IDirect3DBaseTexture9.GetLevelCount = COMMETHOD(WINFUNCTYPE(UInt32, use_last_error=False)(13, 'GetLevelCount', ()))
    IDirect3DBaseTexture9.SetAutoGenFilterType = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DTEXTUREFILTERTYPE, use_last_error=False)(14, 'SetAutoGenFilterType', ((1, 'FilterType'),)))
    IDirect3DBaseTexture9.GetAutoGenFilterType = COMMETHOD(WINFUNCTYPE(win32more.Graphics.Direct3D9.D3DTEXTUREFILTERTYPE, use_last_error=False)(15, 'GetAutoGenFilterType', ()))
    IDirect3DBaseTexture9.GenerateMipSubLevels = COMMETHOD(WINFUNCTYPE(Void, use_last_error=False)(16, 'GenerateMipSubLevels', ()))
    win32more.Graphics.Direct3D9.IDirect3DResource9
    return IDirect3DBaseTexture9
def _define_IDirect3DTexture9_head():
    class IDirect3DTexture9(win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head):
        Guid = Guid('85c31227-3de5-4f00-9b3a-f11ac38c18b5')
    return IDirect3DTexture9
def _define_IDirect3DTexture9():
    IDirect3DTexture9 = win32more.Graphics.Direct3D9.IDirect3DTexture9_head
    IDirect3DTexture9.GetLevelDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DSURFACE_DESC_head), use_last_error=False)(17, 'GetLevelDesc', ((1, 'Level'),(1, 'pDesc'),)))
    IDirect3DTexture9.GetSurfaceLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head), use_last_error=False)(18, 'GetSurfaceLevel', ((1, 'Level'),(1, 'ppSurfaceLevel'),)))
    IDirect3DTexture9.LockRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DLOCKED_RECT_head),POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(19, 'LockRect', ((1, 'Level'),(1, 'pLockedRect'),(1, 'pRect'),(1, 'Flags'),)))
    IDirect3DTexture9.UnlockRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(20, 'UnlockRect', ((1, 'Level'),)))
    IDirect3DTexture9.AddDirtyRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(21, 'AddDirtyRect', ((1, 'pDirtyRect'),)))
    win32more.Graphics.Direct3D9.IDirect3DBaseTexture9
    return IDirect3DTexture9
def _define_IDirect3DVolumeTexture9_head():
    class IDirect3DVolumeTexture9(win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head):
        Guid = Guid('2518526c-e789-4111-a7b9-47ef328d13e6')
    return IDirect3DVolumeTexture9
def _define_IDirect3DVolumeTexture9():
    IDirect3DVolumeTexture9 = win32more.Graphics.Direct3D9.IDirect3DVolumeTexture9_head
    IDirect3DVolumeTexture9.GetLevelDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DVOLUME_DESC_head), use_last_error=False)(17, 'GetLevelDesc', ((1, 'Level'),(1, 'pDesc'),)))
    IDirect3DVolumeTexture9.GetVolumeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3DVolume9_head), use_last_error=False)(18, 'GetVolumeLevel', ((1, 'Level'),(1, 'ppVolumeLevel'),)))
    IDirect3DVolumeTexture9.LockBox = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DLOCKED_BOX_head),POINTER(win32more.Graphics.Direct3D9.D3DBOX_head),UInt32, use_last_error=False)(19, 'LockBox', ((1, 'Level'),(1, 'pLockedVolume'),(1, 'pBox'),(1, 'Flags'),)))
    IDirect3DVolumeTexture9.UnlockBox = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(20, 'UnlockBox', ((1, 'Level'),)))
    IDirect3DVolumeTexture9.AddDirtyBox = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DBOX_head), use_last_error=False)(21, 'AddDirtyBox', ((1, 'pDirtyBox'),)))
    win32more.Graphics.Direct3D9.IDirect3DBaseTexture9
    return IDirect3DVolumeTexture9
def _define_IDirect3DCubeTexture9_head():
    class IDirect3DCubeTexture9(win32more.Graphics.Direct3D9.IDirect3DBaseTexture9_head):
        Guid = Guid('fff32f81-d953-473a-9223-93d652aba93f')
    return IDirect3DCubeTexture9
def _define_IDirect3DCubeTexture9():
    IDirect3DCubeTexture9 = win32more.Graphics.Direct3D9.IDirect3DCubeTexture9_head
    IDirect3DCubeTexture9.GetLevelDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DSURFACE_DESC_head), use_last_error=False)(17, 'GetLevelDesc', ((1, 'Level'),(1, 'pDesc'),)))
    IDirect3DCubeTexture9.GetCubeMapSurface = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DCUBEMAP_FACES,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head), use_last_error=False)(18, 'GetCubeMapSurface', ((1, 'FaceType'),(1, 'Level'),(1, 'ppCubeMapSurface'),)))
    IDirect3DCubeTexture9.LockRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DCUBEMAP_FACES,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DLOCKED_RECT_head),POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(19, 'LockRect', ((1, 'FaceType'),(1, 'Level'),(1, 'pLockedRect'),(1, 'pRect'),(1, 'Flags'),)))
    IDirect3DCubeTexture9.UnlockRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DCUBEMAP_FACES,UInt32, use_last_error=False)(20, 'UnlockRect', ((1, 'FaceType'),(1, 'Level'),)))
    IDirect3DCubeTexture9.AddDirtyRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.D3DCUBEMAP_FACES,POINTER(win32more.Foundation.RECT_head), use_last_error=False)(21, 'AddDirtyRect', ((1, 'FaceType'),(1, 'pDirtyRect'),)))
    win32more.Graphics.Direct3D9.IDirect3DBaseTexture9
    return IDirect3DCubeTexture9
def _define_IDirect3DVertexBuffer9_head():
    class IDirect3DVertexBuffer9(win32more.Graphics.Direct3D9.IDirect3DResource9_head):
        Guid = Guid('b64bb1b5-fd70-4df6-bf91-19d0a12455e3')
    return IDirect3DVertexBuffer9
def _define_IDirect3DVertexBuffer9():
    IDirect3DVertexBuffer9 = win32more.Graphics.Direct3D9.IDirect3DVertexBuffer9_head
    IDirect3DVertexBuffer9.Lock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(c_void_p),UInt32, use_last_error=False)(11, 'Lock', ((1, 'OffsetToLock'),(1, 'SizeToLock'),(1, 'ppbData'),(1, 'Flags'),)))
    IDirect3DVertexBuffer9.Unlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(12, 'Unlock', ()))
    IDirect3DVertexBuffer9.GetDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DVERTEXBUFFER_DESC_head), use_last_error=False)(13, 'GetDesc', ((1, 'pDesc'),)))
    win32more.Graphics.Direct3D9.IDirect3DResource9
    return IDirect3DVertexBuffer9
def _define_IDirect3DIndexBuffer9_head():
    class IDirect3DIndexBuffer9(win32more.Graphics.Direct3D9.IDirect3DResource9_head):
        Guid = Guid('7c9dd65e-d3f7-4529-acee-785830acde35')
    return IDirect3DIndexBuffer9
def _define_IDirect3DIndexBuffer9():
    IDirect3DIndexBuffer9 = win32more.Graphics.Direct3D9.IDirect3DIndexBuffer9_head
    IDirect3DIndexBuffer9.Lock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(c_void_p),UInt32, use_last_error=False)(11, 'Lock', ((1, 'OffsetToLock'),(1, 'SizeToLock'),(1, 'ppbData'),(1, 'Flags'),)))
    IDirect3DIndexBuffer9.Unlock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(12, 'Unlock', ()))
    IDirect3DIndexBuffer9.GetDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DINDEXBUFFER_DESC_head), use_last_error=False)(13, 'GetDesc', ((1, 'pDesc'),)))
    win32more.Graphics.Direct3D9.IDirect3DResource9
    return IDirect3DIndexBuffer9
def _define_IDirect3DSurface9_head():
    class IDirect3DSurface9(win32more.Graphics.Direct3D9.IDirect3DResource9_head):
        Guid = Guid('0cfbaf3a-9ff6-429a-99b3-a2796af8b89b')
    return IDirect3DSurface9
def _define_IDirect3DSurface9():
    IDirect3DSurface9 = win32more.Graphics.Direct3D9.IDirect3DSurface9_head
    IDirect3DSurface9.GetContainer = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(c_void_p), use_last_error=False)(11, 'GetContainer', ((1, 'riid'),(1, 'ppContainer'),)))
    IDirect3DSurface9.GetDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DSURFACE_DESC_head), use_last_error=False)(12, 'GetDesc', ((1, 'pDesc'),)))
    IDirect3DSurface9.LockRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DLOCKED_RECT_head),POINTER(win32more.Foundation.RECT_head),UInt32, use_last_error=False)(13, 'LockRect', ((1, 'pLockedRect'),(1, 'pRect'),(1, 'Flags'),)))
    IDirect3DSurface9.UnlockRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(14, 'UnlockRect', ()))
    IDirect3DSurface9.GetDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Gdi.HDC), use_last_error=False)(15, 'GetDC', ((1, 'phdc'),)))
    IDirect3DSurface9.ReleaseDC = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HDC, use_last_error=False)(16, 'ReleaseDC', ((1, 'hdc'),)))
    win32more.Graphics.Direct3D9.IDirect3DResource9
    return IDirect3DSurface9
def _define_IDirect3DVolume9_head():
    class IDirect3DVolume9(win32more.System.Com.IUnknown_head):
        Guid = Guid('24f416e6-1f67-4aa7-b88e-d33f6f3128a1')
    return IDirect3DVolume9
def _define_IDirect3DVolume9():
    IDirect3DVolume9 = win32more.Graphics.Direct3D9.IDirect3DVolume9_head
    IDirect3DVolume9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(3, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DVolume9.SetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,UInt32,UInt32, use_last_error=False)(4, 'SetPrivateData', ((1, 'refguid'),(1, 'pData'),(1, 'SizeOfData'),(1, 'Flags'),)))
    IDirect3DVolume9.GetPrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),c_void_p,POINTER(UInt32), use_last_error=False)(5, 'GetPrivateData', ((1, 'refguid'),(1, 'pData'),(1, 'pSizeOfData'),)))
    IDirect3DVolume9.FreePrivateData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(6, 'FreePrivateData', ((1, 'refguid'),)))
    IDirect3DVolume9.GetContainer = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(c_void_p), use_last_error=False)(7, 'GetContainer', ((1, 'riid'),(1, 'ppContainer'),)))
    IDirect3DVolume9.GetDesc = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DVOLUME_DESC_head), use_last_error=False)(8, 'GetDesc', ((1, 'pDesc'),)))
    IDirect3DVolume9.LockBox = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DLOCKED_BOX_head),POINTER(win32more.Graphics.Direct3D9.D3DBOX_head),UInt32, use_last_error=False)(9, 'LockBox', ((1, 'pLockedVolume'),(1, 'pBox'),(1, 'Flags'),)))
    IDirect3DVolume9.UnlockBox = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(10, 'UnlockBox', ()))
    win32more.System.Com.IUnknown
    return IDirect3DVolume9
def _define_IDirect3DQuery9_head():
    class IDirect3DQuery9(win32more.System.Com.IUnknown_head):
        Guid = Guid('d9771460-a695-4f26-bbd3-27b840b541cc')
    return IDirect3DQuery9
def _define_IDirect3DQuery9():
    IDirect3DQuery9 = win32more.Graphics.Direct3D9.IDirect3DQuery9_head
    IDirect3DQuery9.GetDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9_head), use_last_error=False)(3, 'GetDevice', ((1, 'ppDevice'),)))
    IDirect3DQuery9.GetType = COMMETHOD(WINFUNCTYPE(win32more.Graphics.Direct3D9.D3DQUERYTYPE, use_last_error=False)(4, 'GetType', ()))
    IDirect3DQuery9.GetDataSize = COMMETHOD(WINFUNCTYPE(UInt32, use_last_error=False)(5, 'GetDataSize', ()))
    IDirect3DQuery9.Issue = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(6, 'Issue', ((1, 'dwIssueFlags'),)))
    IDirect3DQuery9.GetData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,c_void_p,UInt32,UInt32, use_last_error=False)(7, 'GetData', ((1, 'pData'),(1, 'dwSize'),(1, 'dwGetDataFlags'),)))
    win32more.System.Com.IUnknown
    return IDirect3DQuery9
def _define_IDirect3D9Ex_head():
    class IDirect3D9Ex(win32more.Graphics.Direct3D9.IDirect3D9_head):
        Guid = Guid('02177241-69fc-400c-8ff1-93a44df6861d')
    return IDirect3D9Ex
def _define_IDirect3D9Ex():
    IDirect3D9Ex = win32more.Graphics.Direct3D9.IDirect3D9Ex_head
    IDirect3D9Ex.GetAdapterModeCountEx = COMMETHOD(WINFUNCTYPE(UInt32,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEFILTER_head), use_last_error=False)(17, 'GetAdapterModeCountEx', ((1, 'Adapter'),(1, 'pFilter'),)))
    IDirect3D9Ex.EnumAdapterModesEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEFILTER_head),UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEEX_head), use_last_error=False)(18, 'EnumAdapterModesEx', ((1, 'Adapter'),(1, 'pFilter'),(1, 'Mode'),(1, 'pMode'),)))
    IDirect3D9Ex.GetAdapterDisplayModeEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEEX_head),POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYROTATION), use_last_error=False)(19, 'GetAdapterDisplayModeEx', ((1, 'Adapter'),(1, 'pMode'),(1, 'pRotation'),)))
    IDirect3D9Ex.CreateDeviceEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Graphics.Direct3D9.D3DDEVTYPE,win32more.Foundation.HWND,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DPRESENT_PARAMETERS_head),POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEEX_head),POINTER(win32more.Graphics.Direct3D9.IDirect3DDevice9Ex_head), use_last_error=False)(20, 'CreateDeviceEx', ((1, 'Adapter'),(1, 'DeviceType'),(1, 'hFocusWindow'),(1, 'BehaviorFlags'),(1, 'pPresentationParameters'),(1, 'pFullscreenDisplayMode'),(1, 'ppReturnedDeviceInterface'),)))
    IDirect3D9Ex.GetAdapterLUID = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Foundation.LUID_head), use_last_error=False)(21, 'GetAdapterLUID', ((1, 'Adapter'),(1, 'pLUID'),)))
    win32more.Graphics.Direct3D9.IDirect3D9
    return IDirect3D9Ex
def _define_IDirect3DDevice9Ex_head():
    class IDirect3DDevice9Ex(win32more.Graphics.Direct3D9.IDirect3DDevice9_head):
        Guid = Guid('b18b10ce-2649-405a-870f-95f777d4313a')
    return IDirect3DDevice9Ex
def _define_IDirect3DDevice9Ex():
    IDirect3DDevice9Ex = win32more.Graphics.Direct3D9.IDirect3DDevice9Ex_head
    IDirect3DDevice9Ex.SetConvolutionMonoKernel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(Single),POINTER(Single), use_last_error=False)(119, 'SetConvolutionMonoKernel', ((1, 'width'),(1, 'height'),(1, 'rows'),(1, 'columns'),)))
    IDirect3DDevice9Ex.ComposeRects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Direct3D9.IDirect3DSurface9_head,win32more.Graphics.Direct3D9.IDirect3DSurface9_head,win32more.Graphics.Direct3D9.IDirect3DVertexBuffer9_head,UInt32,win32more.Graphics.Direct3D9.IDirect3DVertexBuffer9_head,win32more.Graphics.Direct3D9.D3DCOMPOSERECTSOP,Int32,Int32, use_last_error=False)(120, 'ComposeRects', ((1, 'pSrc'),(1, 'pDst'),(1, 'pSrcRectDescs'),(1, 'NumRects'),(1, 'pDstRectDescs'),(1, 'Operation'),(1, 'Xoffset'),(1, 'Yoffset'),)))
    IDirect3DDevice9Ex.PresentEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Foundation.RECT_head),win32more.Foundation.HWND,POINTER(win32more.Graphics.Gdi.RGNDATA_head),UInt32, use_last_error=False)(121, 'PresentEx', ((1, 'pSourceRect'),(1, 'pDestRect'),(1, 'hDestWindowOverride'),(1, 'pDirtyRegion'),(1, 'dwFlags'),)))
    IDirect3DDevice9Ex.GetGPUThreadPriority = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32), use_last_error=False)(122, 'GetGPUThreadPriority', ((1, 'pPriority'),)))
    IDirect3DDevice9Ex.SetGPUThreadPriority = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32, use_last_error=False)(123, 'SetGPUThreadPriority', ((1, 'Priority'),)))
    IDirect3DDevice9Ex.WaitForVBlank = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(124, 'WaitForVBlank', ((1, 'iSwapChain'),)))
    IDirect3DDevice9Ex.CheckResourceResidency = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.IDirect3DResource9_head),UInt32, use_last_error=False)(125, 'CheckResourceResidency', ((1, 'pResourceArray'),(1, 'NumResources'),)))
    IDirect3DDevice9Ex.SetMaximumFrameLatency = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(126, 'SetMaximumFrameLatency', ((1, 'MaxLatency'),)))
    IDirect3DDevice9Ex.GetMaximumFrameLatency = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(127, 'GetMaximumFrameLatency', ((1, 'pMaxLatency'),)))
    IDirect3DDevice9Ex.CheckDeviceState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND, use_last_error=False)(128, 'CheckDeviceState', ((1, 'hDestinationWindow'),)))
    IDirect3DDevice9Ex.CreateRenderTargetEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DMULTISAMPLE_TYPE,UInt32,win32more.Foundation.BOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head),POINTER(win32more.Foundation.HANDLE),UInt32, use_last_error=False)(129, 'CreateRenderTargetEx', ((1, 'Width'),(1, 'Height'),(1, 'Format'),(1, 'MultiSample'),(1, 'MultisampleQuality'),(1, 'Lockable'),(1, 'ppSurface'),(1, 'pSharedHandle'),(1, 'Usage'),)))
    IDirect3DDevice9Ex.CreateOffscreenPlainSurfaceEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DPOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head),POINTER(win32more.Foundation.HANDLE),UInt32, use_last_error=False)(130, 'CreateOffscreenPlainSurfaceEx', ((1, 'Width'),(1, 'Height'),(1, 'Format'),(1, 'Pool'),(1, 'ppSurface'),(1, 'pSharedHandle'),(1, 'Usage'),)))
    IDirect3DDevice9Ex.CreateDepthStencilSurfaceEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,win32more.Graphics.Direct3D9.D3DFORMAT,win32more.Graphics.Direct3D9.D3DMULTISAMPLE_TYPE,UInt32,win32more.Foundation.BOOL,POINTER(win32more.Graphics.Direct3D9.IDirect3DSurface9_head),POINTER(win32more.Foundation.HANDLE),UInt32, use_last_error=False)(131, 'CreateDepthStencilSurfaceEx', ((1, 'Width'),(1, 'Height'),(1, 'Format'),(1, 'MultiSample'),(1, 'MultisampleQuality'),(1, 'Discard'),(1, 'ppSurface'),(1, 'pSharedHandle'),(1, 'Usage'),)))
    IDirect3DDevice9Ex.ResetEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DPRESENT_PARAMETERS_head),POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEEX_head), use_last_error=False)(132, 'ResetEx', ((1, 'pPresentationParameters'),(1, 'pFullscreenDisplayMode'),)))
    IDirect3DDevice9Ex.GetDisplayModeEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEEX_head),POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYROTATION), use_last_error=False)(133, 'GetDisplayModeEx', ((1, 'iSwapChain'),(1, 'pMode'),(1, 'pRotation'),)))
    win32more.Graphics.Direct3D9.IDirect3DDevice9
    return IDirect3DDevice9Ex
def _define_IDirect3DSwapChain9Ex_head():
    class IDirect3DSwapChain9Ex(win32more.Graphics.Direct3D9.IDirect3DSwapChain9_head):
        Guid = Guid('91886caf-1c3d-4d2e-a0ab-3e4c7d8d3303')
    return IDirect3DSwapChain9Ex
def _define_IDirect3DSwapChain9Ex():
    IDirect3DSwapChain9Ex = win32more.Graphics.Direct3D9.IDirect3DSwapChain9Ex_head
    IDirect3DSwapChain9Ex.GetLastPresentCount = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(10, 'GetLastPresentCount', ((1, 'pLastPresentCount'),)))
    IDirect3DSwapChain9Ex.GetPresentStats = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DPRESENTSTATS_head), use_last_error=False)(11, 'GetPresentStats', ((1, 'pPresentationStatistics'),)))
    IDirect3DSwapChain9Ex.GetDisplayModeEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYMODEEX_head),POINTER(win32more.Graphics.Direct3D9.D3DDISPLAYROTATION), use_last_error=False)(12, 'GetDisplayModeEx', ((1, 'pMode'),(1, 'pRotation'),)))
    win32more.Graphics.Direct3D9.IDirect3DSwapChain9
    return IDirect3DSwapChain9Ex
def _define_Direct3DCreate9():
    try:
        return WINFUNCTYPE(win32more.Graphics.Direct3D9.IDirect3D9_head,UInt32, use_last_error=False)(("Direct3DCreate9", windll["d3d9"]), ((1, 'SDKVersion'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_D3DPERF_BeginEvent():
    try:
        return WINFUNCTYPE(Int32,UInt32,win32more.Foundation.PWSTR, use_last_error=False)(("D3DPERF_BeginEvent", windll["d3d9"]), ((1, 'col'),(1, 'wszName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_D3DPERF_EndEvent():
    try:
        return WINFUNCTYPE(Int32, use_last_error=False)(("D3DPERF_EndEvent", windll["d3d9"]), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_D3DPERF_SetMarker():
    try:
        return WINFUNCTYPE(Void,UInt32,win32more.Foundation.PWSTR, use_last_error=False)(("D3DPERF_SetMarker", windll["d3d9"]), ((1, 'col'),(1, 'wszName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_D3DPERF_SetRegion():
    try:
        return WINFUNCTYPE(Void,UInt32,win32more.Foundation.PWSTR, use_last_error=False)(("D3DPERF_SetRegion", windll["d3d9"]), ((1, 'col'),(1, 'wszName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_D3DPERF_QueryRepeatFrame():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL, use_last_error=False)(("D3DPERF_QueryRepeatFrame", windll["d3d9"]), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_D3DPERF_SetOptions():
    try:
        return WINFUNCTYPE(Void,UInt32, use_last_error=False)(("D3DPERF_SetOptions", windll["d3d9"]), ((1, 'dwOptions'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_D3DPERF_GetStatus():
    try:
        return WINFUNCTYPE(UInt32, use_last_error=False)(("D3DPERF_GetStatus", windll["d3d9"]), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_Direct3DCreate9Ex():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Graphics.Direct3D9.IDirect3D9Ex_head), use_last_error=False)(("Direct3DCreate9Ex", windll["d3d9"]), ((1, 'SDKVersion'),(1, 'param1'),))
    except (FileNotFoundError, AttributeError):
        return None
__all__ = [
    "D3DRTYPECOUNT",
    "D3DCS_LEFT",
    "D3DCS_RIGHT",
    "D3DCS_TOP",
    "D3DCS_BOTTOM",
    "D3DCS_FRONT",
    "D3DCS_BACK",
    "D3DCS_PLANE0",
    "D3DCS_PLANE1",
    "D3DCS_PLANE2",
    "D3DCS_PLANE3",
    "D3DCS_PLANE4",
    "D3DCS_PLANE5",
    "D3D_MAX_SIMULTANEOUS_RENDERTARGETS",
    "D3DWRAP_W",
    "D3DDMAPSAMPLER",
    "D3DVERTEXTEXTURESAMPLER0",
    "D3DVERTEXTEXTURESAMPLER1",
    "D3DVERTEXTEXTURESAMPLER2",
    "D3DVERTEXTEXTURESAMPLER3",
    "D3DTSS_TCI_SPHEREMAP",
    "D3DTA_TEMP",
    "D3DTA_CONSTANT",
    "D3DFVF_XYZW",
    "D3DFVF_PSIZE",
    "D3DFVF_LASTBETA_UBYTE4",
    "D3DFVF_LASTBETA_D3DCOLOR",
    "MAXD3DDECLUSAGEINDEX",
    "MAXD3DDECLLENGTH",
    "D3DSTREAMSOURCE_INDEXEDDATA",
    "D3DSTREAMSOURCE_INSTANCEDATA",
    "D3DSI_OPCODE_MASK",
    "D3DSI_INSTLENGTH_MASK",
    "D3DSI_INSTLENGTH_SHIFT",
    "D3DSI_COISSUE",
    "D3DSP_OPCODESPECIFICCONTROL_MASK",
    "D3DSP_OPCODESPECIFICCONTROL_SHIFT",
    "D3DSHADER_COMPARISON_SHIFT",
    "D3DSP_DCL_USAGE_SHIFT",
    "D3DSP_DCL_USAGE_MASK",
    "D3DSP_DCL_USAGEINDEX_SHIFT",
    "D3DSP_DCL_USAGEINDEX_MASK",
    "D3DSP_TEXTURETYPE_SHIFT",
    "D3DSP_TEXTURETYPE_MASK",
    "D3DSP_REGNUM_MASK",
    "D3DSP_WRITEMASK_0",
    "D3DSP_WRITEMASK_1",
    "D3DSP_WRITEMASK_2",
    "D3DSP_WRITEMASK_3",
    "D3DSP_WRITEMASK_ALL",
    "D3DSP_DSTMOD_SHIFT",
    "D3DSP_DSTMOD_MASK",
    "D3DSP_DSTSHIFT_SHIFT",
    "D3DSP_DSTSHIFT_MASK",
    "D3DSP_REGTYPE_SHIFT",
    "D3DSP_REGTYPE_SHIFT2",
    "D3DSP_REGTYPE_MASK",
    "D3DSP_REGTYPE_MASK2",
    "D3DVS_ADDRESSMODE_SHIFT",
    "D3DSHADER_ADDRESSMODE_SHIFT",
    "D3DVS_SWIZZLE_SHIFT",
    "D3DVS_SWIZZLE_MASK",
    "D3DSP_SWIZZLE_SHIFT",
    "D3DSP_SWIZZLE_MASK",
    "D3DSP_SRCMOD_SHIFT",
    "D3DSP_SRCMOD_MASK",
    "D3DSP_MIN_PRECISION_SHIFT",
    "D3DSP_MIN_PRECISION_MASK",
    "D3DSI_COMMENTSIZE_SHIFT",
    "D3DSI_COMMENTSIZE_MASK",
    "D3DPRESENT_RATE_DEFAULT",
    "D3DPRESENTFLAG_LOCKABLE_BACKBUFFER",
    "D3DPRESENTFLAG_DISCARD_DEPTHSTENCIL",
    "D3DPRESENTFLAG_DEVICECLIP",
    "D3DPRESENTFLAG_VIDEO",
    "D3DPRESENTFLAG_NOAUTOROTATE",
    "D3DPRESENTFLAG_UNPRUNEDMODE",
    "D3DPRESENTFLAG_OVERLAY_LIMITEDRGB",
    "D3DPRESENTFLAG_OVERLAY_YCbCr_BT709",
    "D3DPRESENTFLAG_OVERLAY_YCbCr_xvYCC",
    "D3DPRESENTFLAG_RESTRICTED_CONTENT",
    "D3DPRESENTFLAG_RESTRICT_SHARED_RESOURCE_DRIVER",
    "D3DUSAGE_RENDERTARGET",
    "D3DUSAGE_DEPTHSTENCIL",
    "D3DUSAGE_DYNAMIC",
    "D3DUSAGE_NONSECURE",
    "D3DUSAGE_AUTOGENMIPMAP",
    "D3DUSAGE_DMAP",
    "D3DUSAGE_QUERY_LEGACYBUMPMAP",
    "D3DUSAGE_QUERY_SRGBREAD",
    "D3DUSAGE_QUERY_FILTER",
    "D3DUSAGE_QUERY_SRGBWRITE",
    "D3DUSAGE_QUERY_POSTPIXELSHADER_BLENDING",
    "D3DUSAGE_QUERY_VERTEXTEXTURE",
    "D3DUSAGE_QUERY_WRAPANDMIP",
    "D3DUSAGE_WRITEONLY",
    "D3DUSAGE_SOFTWAREPROCESSING",
    "D3DUSAGE_DONOTCLIP",
    "D3DUSAGE_POINTS",
    "D3DUSAGE_RTPATCHES",
    "D3DUSAGE_NPATCHES",
    "D3DUSAGE_TEXTAPI",
    "D3DUSAGE_RESTRICTED_CONTENT",
    "D3DUSAGE_RESTRICT_SHARED_RESOURCE",
    "D3DUSAGE_RESTRICT_SHARED_RESOURCE_DRIVER",
    "D3DLOCK_READONLY",
    "D3DLOCK_DISCARD",
    "D3DLOCK_NOOVERWRITE",
    "D3DLOCK_NOSYSLOCK",
    "D3DLOCK_DONOTWAIT",
    "D3DLOCK_NO_DIRTY_UPDATE",
    "MAX_DEVICE_IDENTIFIER_STRING",
    "D3DISSUE_END",
    "D3DISSUE_BEGIN",
    "D3DGETDATA_FLUSH",
    "D3DCOMPOSERECTS_MAXNUMRECTS",
    "D3DCONVOLUTIONMONO_MAXWIDTH",
    "D3DCONVOLUTIONMONO_MAXHEIGHT",
    "D3DFMT_A1_SURFACE_MAXWIDTH",
    "D3DFMT_A1_SURFACE_MAXHEIGHT",
    "D3D9_RESOURCE_PRIORITY_MINIMUM",
    "D3D9_RESOURCE_PRIORITY_LOW",
    "D3D9_RESOURCE_PRIORITY_NORMAL",
    "D3D9_RESOURCE_PRIORITY_HIGH",
    "D3D9_RESOURCE_PRIORITY_MAXIMUM",
    "D3D_OMAC_SIZE",
    "D3DAUTHENTICATEDQUERY_PROTECTION",
    "D3DAUTHENTICATEDQUERY_CHANNELTYPE",
    "D3DAUTHENTICATEDQUERY_DEVICEHANDLE",
    "D3DAUTHENTICATEDQUERY_CRYPTOSESSION",
    "D3DAUTHENTICATEDQUERY_RESTRICTEDSHAREDRESOURCEPROCESSCOUNT",
    "D3DAUTHENTICATEDQUERY_RESTRICTEDSHAREDRESOURCEPROCESS",
    "D3DAUTHENTICATEDQUERY_UNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT",
    "D3DAUTHENTICATEDQUERY_OUTPUTIDCOUNT",
    "D3DAUTHENTICATEDQUERY_OUTPUTID",
    "D3DAUTHENTICATEDQUERY_ACCESSIBILITYATTRIBUTES",
    "D3DAUTHENTICATEDQUERY_ENCRYPTIONWHENACCESSIBLEGUIDCOUNT",
    "D3DAUTHENTICATEDQUERY_ENCRYPTIONWHENACCESSIBLEGUID",
    "D3DAUTHENTICATEDQUERY_CURRENTENCRYPTIONWHENACCESSIBLE",
    "D3DAUTHENTICATEDCONFIGURE_INITIALIZE",
    "D3DAUTHENTICATEDCONFIGURE_PROTECTION",
    "D3DAUTHENTICATEDCONFIGURE_CRYPTOSESSION",
    "D3DAUTHENTICATEDCONFIGURE_SHAREDRESOURCE",
    "D3DAUTHENTICATEDCONFIGURE_ENCRYPTIONWHENACCESSIBLE",
    "D3DVS20CAPS_PREDICATION",
    "D3DVS20_MAX_DYNAMICFLOWCONTROLDEPTH",
    "D3DVS20_MIN_DYNAMICFLOWCONTROLDEPTH",
    "D3DVS20_MAX_NUMTEMPS",
    "D3DVS20_MIN_NUMTEMPS",
    "D3DVS20_MAX_STATICFLOWCONTROLDEPTH",
    "D3DVS20_MIN_STATICFLOWCONTROLDEPTH",
    "D3DPS20CAPS_ARBITRARYSWIZZLE",
    "D3DPS20CAPS_GRADIENTINSTRUCTIONS",
    "D3DPS20CAPS_PREDICATION",
    "D3DPS20CAPS_NODEPENDENTREADLIMIT",
    "D3DPS20CAPS_NOTEXINSTRUCTIONLIMIT",
    "D3DPS20_MAX_DYNAMICFLOWCONTROLDEPTH",
    "D3DPS20_MIN_DYNAMICFLOWCONTROLDEPTH",
    "D3DPS20_MAX_NUMTEMPS",
    "D3DPS20_MIN_NUMTEMPS",
    "D3DPS20_MAX_STATICFLOWCONTROLDEPTH",
    "D3DPS20_MIN_STATICFLOWCONTROLDEPTH",
    "D3DPS20_MAX_NUMINSTRUCTIONSLOTS",
    "D3DPS20_MIN_NUMINSTRUCTIONSLOTS",
    "D3DMIN30SHADERINSTRUCTIONS",
    "D3DMAX30SHADERINSTRUCTIONS",
    "D3DOVERLAYCAPS_FULLRANGERGB",
    "D3DOVERLAYCAPS_LIMITEDRANGERGB",
    "D3DOVERLAYCAPS_YCbCr_BT601",
    "D3DOVERLAYCAPS_YCbCr_BT709",
    "D3DOVERLAYCAPS_YCbCr_BT601_xvYCC",
    "D3DOVERLAYCAPS_YCbCr_BT709_xvYCC",
    "D3DOVERLAYCAPS_STRETCHX",
    "D3DOVERLAYCAPS_STRETCHY",
    "D3DCPCAPS_SOFTWARE",
    "D3DCPCAPS_HARDWARE",
    "D3DCPCAPS_PROTECTIONALWAYSON",
    "D3DCPCAPS_PARTIALDECRYPTION",
    "D3DCPCAPS_CONTENTKEY",
    "D3DCPCAPS_FRESHENSESSIONKEY",
    "D3DCPCAPS_ENCRYPTEDREADBACK",
    "D3DCPCAPS_ENCRYPTEDREADBACKKEY",
    "D3DCPCAPS_SEQUENTIAL_CTR_IV",
    "D3DCPCAPS_ENCRYPTSLICEDATAONLY",
    "D3DCRYPTOTYPE_AES128_CTR",
    "D3DCRYPTOTYPE_PROPRIETARY",
    "D3DKEYEXCHANGE_RSAES_OAEP",
    "D3DKEYEXCHANGE_DXVA",
    "D3DCAPS_OVERLAY",
    "D3DCAPS_READ_SCANLINE",
    "D3DCAPS2_FULLSCREENGAMMA",
    "D3DCAPS2_CANCALIBRATEGAMMA",
    "D3DCAPS2_RESERVED",
    "D3DCAPS2_CANMANAGERESOURCE",
    "D3DCAPS2_DYNAMICTEXTURES",
    "D3DCAPS2_CANAUTOGENMIPMAP",
    "D3DCAPS2_CANSHARERESOURCE",
    "D3DCAPS3_RESERVED",
    "D3DCAPS3_ALPHA_FULLSCREEN_FLIP_OR_DISCARD",
    "D3DCAPS3_LINEAR_TO_SRGB_PRESENTATION",
    "D3DCAPS3_COPY_TO_VIDMEM",
    "D3DCAPS3_COPY_TO_SYSTEMMEM",
    "D3DCAPS3_DXVAHD",
    "D3DCAPS3_DXVAHD_LIMITED",
    "D3DPRESENT_INTERVAL_DEFAULT",
    "D3DPRESENT_INTERVAL_ONE",
    "D3DPRESENT_INTERVAL_TWO",
    "D3DPRESENT_INTERVAL_THREE",
    "D3DPRESENT_INTERVAL_FOUR",
    "D3DPRESENT_INTERVAL_IMMEDIATE",
    "D3DCURSORCAPS_COLOR",
    "D3DCURSORCAPS_LOWRES",
    "D3DDEVCAPS_PUREDEVICE",
    "D3DDEVCAPS_QUINTICRTPATCHES",
    "D3DDEVCAPS_RTPATCHES",
    "D3DDEVCAPS_RTPATCHHANDLEZERO",
    "D3DDEVCAPS_NPATCHES",
    "D3DPMISCCAPS_COLORWRITEENABLE",
    "D3DPMISCCAPS_CLIPPLANESCALEDPOINTS",
    "D3DPMISCCAPS_CLIPTLVERTS",
    "D3DPMISCCAPS_TSSARGTEMP",
    "D3DPMISCCAPS_BLENDOP",
    "D3DPMISCCAPS_NULLREFERENCE",
    "D3DPMISCCAPS_INDEPENDENTWRITEMASKS",
    "D3DPMISCCAPS_PERSTAGECONSTANT",
    "D3DPMISCCAPS_FOGANDSPECULARALPHA",
    "D3DPMISCCAPS_SEPARATEALPHABLEND",
    "D3DPMISCCAPS_MRTINDEPENDENTBITDEPTHS",
    "D3DPMISCCAPS_MRTPOSTPIXELSHADERBLENDING",
    "D3DPMISCCAPS_FOGVERTEXCLAMPED",
    "D3DPMISCCAPS_POSTBLENDSRGBCONVERT",
    "D3DLINECAPS_TEXTURE",
    "D3DLINECAPS_ZTEST",
    "D3DLINECAPS_BLEND",
    "D3DLINECAPS_ALPHACMP",
    "D3DLINECAPS_FOG",
    "D3DLINECAPS_ANTIALIAS",
    "D3DPRASTERCAPS_COLORPERSPECTIVE",
    "D3DPRASTERCAPS_SCISSORTEST",
    "D3DPRASTERCAPS_SLOPESCALEDEPTHBIAS",
    "D3DPRASTERCAPS_DEPTHBIAS",
    "D3DPRASTERCAPS_MULTISAMPLE_TOGGLE",
    "D3DPBLENDCAPS_BLENDFACTOR",
    "D3DPBLENDCAPS_SRCCOLOR2",
    "D3DPBLENDCAPS_INVSRCCOLOR2",
    "D3DPTEXTURECAPS_VOLUMEMAP",
    "D3DPTEXTURECAPS_MIPMAP",
    "D3DPTEXTURECAPS_MIPVOLUMEMAP",
    "D3DPTEXTURECAPS_MIPCUBEMAP",
    "D3DPTEXTURECAPS_CUBEMAP_POW2",
    "D3DPTEXTURECAPS_VOLUMEMAP_POW2",
    "D3DPTEXTURECAPS_NOPROJECTEDBUMPENV",
    "D3DPTFILTERCAPS_MINFPYRAMIDALQUAD",
    "D3DPTFILTERCAPS_MINFGAUSSIANQUAD",
    "D3DPTFILTERCAPS_CONVOLUTIONMONO",
    "D3DPTFILTERCAPS_MAGFPYRAMIDALQUAD",
    "D3DPTFILTERCAPS_MAGFGAUSSIANQUAD",
    "D3DPTADDRESSCAPS_MIRRORONCE",
    "D3DSTENCILCAPS_TWOSIDED",
    "D3DTEXOPCAPS_MULTIPLYADD",
    "D3DTEXOPCAPS_LERP",
    "D3DFVFCAPS_PSIZE",
    "D3DVTXPCAPS_TWEENING",
    "D3DVTXPCAPS_TEXGEN_SPHEREMAP",
    "D3DVTXPCAPS_NO_TEXGEN_NONLOCALVIEWER",
    "D3DDEVCAPS2_STREAMOFFSET",
    "D3DDEVCAPS2_DMAPNPATCH",
    "D3DDEVCAPS2_ADAPTIVETESSRTPATCH",
    "D3DDEVCAPS2_ADAPTIVETESSNPATCH",
    "D3DDEVCAPS2_CAN_STRETCHRECT_FROM_TEXTURES",
    "D3DDEVCAPS2_PRESAMPLEDDMAPNPATCH",
    "D3DDEVCAPS2_VERTEXELEMENTSCANSHARESTREAMOFFSET",
    "D3DDTCAPS_UBYTE4",
    "D3DDTCAPS_UBYTE4N",
    "D3DDTCAPS_SHORT2N",
    "D3DDTCAPS_SHORT4N",
    "D3DDTCAPS_USHORT2N",
    "D3DDTCAPS_USHORT4N",
    "D3DDTCAPS_UDEC3",
    "D3DDTCAPS_DEC3N",
    "D3DDTCAPS_FLOAT16_2",
    "D3DDTCAPS_FLOAT16_4",
    "D3DSPD_IUNKNOWN",
    "D3DCREATE_FPU_PRESERVE",
    "D3DCREATE_MULTITHREADED",
    "D3DCREATE_PUREDEVICE",
    "D3DCREATE_SOFTWARE_VERTEXPROCESSING",
    "D3DCREATE_HARDWARE_VERTEXPROCESSING",
    "D3DCREATE_MIXED_VERTEXPROCESSING",
    "D3DCREATE_DISABLE_DRIVER_MANAGEMENT",
    "D3DCREATE_ADAPTERGROUP_DEVICE",
    "D3DADAPTER_DEFAULT",
    "D3DENUM_NO_DRIVERVERSION",
    "D3DPRESENT_BACK_BUFFERS_MAX",
    "D3DSGR_NO_CALIBRATION",
    "D3DSGR_CALIBRATE",
    "D3DCURSOR_IMMEDIATE_UPDATE",
    "D3DPRESENT_DONOTWAIT",
    "D3DPRESENT_LINEAR_CONTENT",
    "_FACD3D",
    "D3D_SDK_VERSION",
    "D3D9b_SDK_VERSION",
    "D3DCREATE_DISABLE_DRIVER_MANAGEMENT_EX",
    "D3DCREATE_NOWINDOWCHANGES",
    "D3DCREATE_DISABLE_PSGP_THREADING",
    "D3DCREATE_ENABLE_PRESENTSTATS",
    "D3DCREATE_DISABLE_PRINTSCREEN",
    "D3DCREATE_SCREENSAVER",
    "D3DENUM_WHQL_LEVEL",
    "D3DPRESENT_BACK_BUFFERS_MAX_EX",
    "D3DPRESENT_DONOTFLIP",
    "D3DPRESENT_FLIPRESTART",
    "D3DPRESENT_VIDEO_RESTRICT_TO_MONITOR",
    "D3DPRESENT_UPDATEOVERLAYONLY",
    "D3DPRESENT_HIDEOVERLAY",
    "D3DPRESENT_UPDATECOLORKEY",
    "D3DPRESENT_FORCEIMMEDIATE",
    "D3DCOLORVALUE",
    "D3DRECT",
    "D3DVIEWPORT9",
    "D3DCLIPSTATUS9",
    "D3DMATERIAL9",
    "D3DLIGHTTYPE",
    "D3DLIGHT_POINT",
    "D3DLIGHT_SPOT",
    "D3DLIGHT_DIRECTIONAL",
    "D3DLIGHT_FORCE_DWORD",
    "D3DLIGHT9",
    "D3DSHADEMODE",
    "D3DSHADE_FLAT",
    "D3DSHADE_GOURAUD",
    "D3DSHADE_PHONG",
    "D3DSHADE_FORCE_DWORD",
    "D3DFILLMODE",
    "D3DFILL_POINT",
    "D3DFILL_WIREFRAME",
    "D3DFILL_SOLID",
    "D3DFILL_FORCE_DWORD",
    "D3DBLEND",
    "D3DBLEND_ZERO",
    "D3DBLEND_ONE",
    "D3DBLEND_SRCCOLOR",
    "D3DBLEND_INVSRCCOLOR",
    "D3DBLEND_SRCALPHA",
    "D3DBLEND_INVSRCALPHA",
    "D3DBLEND_DESTALPHA",
    "D3DBLEND_INVDESTALPHA",
    "D3DBLEND_DESTCOLOR",
    "D3DBLEND_INVDESTCOLOR",
    "D3DBLEND_SRCALPHASAT",
    "D3DBLEND_BOTHSRCALPHA",
    "D3DBLEND_BOTHINVSRCALPHA",
    "D3DBLEND_BLENDFACTOR",
    "D3DBLEND_INVBLENDFACTOR",
    "D3DBLEND_SRCCOLOR2",
    "D3DBLEND_INVSRCCOLOR2",
    "D3DBLEND_FORCE_DWORD",
    "D3DBLENDOP",
    "D3DBLENDOP_ADD",
    "D3DBLENDOP_SUBTRACT",
    "D3DBLENDOP_REVSUBTRACT",
    "D3DBLENDOP_MIN",
    "D3DBLENDOP_MAX",
    "D3DBLENDOP_FORCE_DWORD",
    "D3DTEXTUREADDRESS",
    "D3DTADDRESS_WRAP",
    "D3DTADDRESS_MIRROR",
    "D3DTADDRESS_CLAMP",
    "D3DTADDRESS_BORDER",
    "D3DTADDRESS_MIRRORONCE",
    "D3DTADDRESS_FORCE_DWORD",
    "D3DCULL",
    "D3DCULL_NONE",
    "D3DCULL_CW",
    "D3DCULL_CCW",
    "D3DCULL_FORCE_DWORD",
    "D3DCMPFUNC",
    "D3DCMP_NEVER",
    "D3DCMP_LESS",
    "D3DCMP_EQUAL",
    "D3DCMP_LESSEQUAL",
    "D3DCMP_GREATER",
    "D3DCMP_NOTEQUAL",
    "D3DCMP_GREATEREQUAL",
    "D3DCMP_ALWAYS",
    "D3DCMP_FORCE_DWORD",
    "D3DSTENCILOP",
    "D3DSTENCILOP_KEEP",
    "D3DSTENCILOP_ZERO",
    "D3DSTENCILOP_REPLACE",
    "D3DSTENCILOP_INCRSAT",
    "D3DSTENCILOP_DECRSAT",
    "D3DSTENCILOP_INVERT",
    "D3DSTENCILOP_INCR",
    "D3DSTENCILOP_DECR",
    "D3DSTENCILOP_FORCE_DWORD",
    "D3DFOGMODE",
    "D3DFOG_NONE",
    "D3DFOG_EXP",
    "D3DFOG_EXP2",
    "D3DFOG_LINEAR",
    "D3DFOG_FORCE_DWORD",
    "D3DZBUFFERTYPE",
    "D3DZB_FALSE",
    "D3DZB_TRUE",
    "D3DZB_USEW",
    "D3DZB_FORCE_DWORD",
    "D3DPRIMITIVETYPE",
    "D3DPT_POINTLIST",
    "D3DPT_LINELIST",
    "D3DPT_LINESTRIP",
    "D3DPT_TRIANGLELIST",
    "D3DPT_TRIANGLESTRIP",
    "D3DPT_TRIANGLEFAN",
    "D3DPT_FORCE_DWORD",
    "D3DTRANSFORMSTATETYPE",
    "D3DTS_VIEW",
    "D3DTS_PROJECTION",
    "D3DTS_TEXTURE0",
    "D3DTS_TEXTURE1",
    "D3DTS_TEXTURE2",
    "D3DTS_TEXTURE3",
    "D3DTS_TEXTURE4",
    "D3DTS_TEXTURE5",
    "D3DTS_TEXTURE6",
    "D3DTS_TEXTURE7",
    "D3DTS_FORCE_DWORD",
    "D3DRENDERSTATETYPE",
    "D3DRS_ZENABLE",
    "D3DRS_FILLMODE",
    "D3DRS_SHADEMODE",
    "D3DRS_ZWRITEENABLE",
    "D3DRS_ALPHATESTENABLE",
    "D3DRS_LASTPIXEL",
    "D3DRS_SRCBLEND",
    "D3DRS_DESTBLEND",
    "D3DRS_CULLMODE",
    "D3DRS_ZFUNC",
    "D3DRS_ALPHAREF",
    "D3DRS_ALPHAFUNC",
    "D3DRS_DITHERENABLE",
    "D3DRS_ALPHABLENDENABLE",
    "D3DRS_FOGENABLE",
    "D3DRS_SPECULARENABLE",
    "D3DRS_FOGCOLOR",
    "D3DRS_FOGTABLEMODE",
    "D3DRS_FOGSTART",
    "D3DRS_FOGEND",
    "D3DRS_FOGDENSITY",
    "D3DRS_RANGEFOGENABLE",
    "D3DRS_STENCILENABLE",
    "D3DRS_STENCILFAIL",
    "D3DRS_STENCILZFAIL",
    "D3DRS_STENCILPASS",
    "D3DRS_STENCILFUNC",
    "D3DRS_STENCILREF",
    "D3DRS_STENCILMASK",
    "D3DRS_STENCILWRITEMASK",
    "D3DRS_TEXTUREFACTOR",
    "D3DRS_WRAP0",
    "D3DRS_WRAP1",
    "D3DRS_WRAP2",
    "D3DRS_WRAP3",
    "D3DRS_WRAP4",
    "D3DRS_WRAP5",
    "D3DRS_WRAP6",
    "D3DRS_WRAP7",
    "D3DRS_CLIPPING",
    "D3DRS_LIGHTING",
    "D3DRS_AMBIENT",
    "D3DRS_FOGVERTEXMODE",
    "D3DRS_COLORVERTEX",
    "D3DRS_LOCALVIEWER",
    "D3DRS_NORMALIZENORMALS",
    "D3DRS_DIFFUSEMATERIALSOURCE",
    "D3DRS_SPECULARMATERIALSOURCE",
    "D3DRS_AMBIENTMATERIALSOURCE",
    "D3DRS_EMISSIVEMATERIALSOURCE",
    "D3DRS_VERTEXBLEND",
    "D3DRS_CLIPPLANEENABLE",
    "D3DRS_POINTSIZE",
    "D3DRS_POINTSIZE_MIN",
    "D3DRS_POINTSPRITEENABLE",
    "D3DRS_POINTSCALEENABLE",
    "D3DRS_POINTSCALE_A",
    "D3DRS_POINTSCALE_B",
    "D3DRS_POINTSCALE_C",
    "D3DRS_MULTISAMPLEANTIALIAS",
    "D3DRS_MULTISAMPLEMASK",
    "D3DRS_PATCHEDGESTYLE",
    "D3DRS_DEBUGMONITORTOKEN",
    "D3DRS_POINTSIZE_MAX",
    "D3DRS_INDEXEDVERTEXBLENDENABLE",
    "D3DRS_COLORWRITEENABLE",
    "D3DRS_TWEENFACTOR",
    "D3DRS_BLENDOP",
    "D3DRS_POSITIONDEGREE",
    "D3DRS_NORMALDEGREE",
    "D3DRS_SCISSORTESTENABLE",
    "D3DRS_SLOPESCALEDEPTHBIAS",
    "D3DRS_ANTIALIASEDLINEENABLE",
    "D3DRS_MINTESSELLATIONLEVEL",
    "D3DRS_MAXTESSELLATIONLEVEL",
    "D3DRS_ADAPTIVETESS_X",
    "D3DRS_ADAPTIVETESS_Y",
    "D3DRS_ADAPTIVETESS_Z",
    "D3DRS_ADAPTIVETESS_W",
    "D3DRS_ENABLEADAPTIVETESSELLATION",
    "D3DRS_TWOSIDEDSTENCILMODE",
    "D3DRS_CCW_STENCILFAIL",
    "D3DRS_CCW_STENCILZFAIL",
    "D3DRS_CCW_STENCILPASS",
    "D3DRS_CCW_STENCILFUNC",
    "D3DRS_COLORWRITEENABLE1",
    "D3DRS_COLORWRITEENABLE2",
    "D3DRS_COLORWRITEENABLE3",
    "D3DRS_BLENDFACTOR",
    "D3DRS_SRGBWRITEENABLE",
    "D3DRS_DEPTHBIAS",
    "D3DRS_WRAP8",
    "D3DRS_WRAP9",
    "D3DRS_WRAP10",
    "D3DRS_WRAP11",
    "D3DRS_WRAP12",
    "D3DRS_WRAP13",
    "D3DRS_WRAP14",
    "D3DRS_WRAP15",
    "D3DRS_SEPARATEALPHABLENDENABLE",
    "D3DRS_SRCBLENDALPHA",
    "D3DRS_DESTBLENDALPHA",
    "D3DRS_BLENDOPALPHA",
    "D3DRS_FORCE_DWORD",
    "D3DMATERIALCOLORSOURCE",
    "D3DMCS_MATERIAL",
    "D3DMCS_COLOR1",
    "D3DMCS_COLOR2",
    "D3DMCS_FORCE_DWORD",
    "D3DTEXTURESTAGESTATETYPE",
    "D3DTSS_COLOROP",
    "D3DTSS_COLORARG1",
    "D3DTSS_COLORARG2",
    "D3DTSS_ALPHAOP",
    "D3DTSS_ALPHAARG1",
    "D3DTSS_ALPHAARG2",
    "D3DTSS_BUMPENVMAT00",
    "D3DTSS_BUMPENVMAT01",
    "D3DTSS_BUMPENVMAT10",
    "D3DTSS_BUMPENVMAT11",
    "D3DTSS_TEXCOORDINDEX",
    "D3DTSS_BUMPENVLSCALE",
    "D3DTSS_BUMPENVLOFFSET",
    "D3DTSS_TEXTURETRANSFORMFLAGS",
    "D3DTSS_COLORARG0",
    "D3DTSS_ALPHAARG0",
    "D3DTSS_RESULTARG",
    "D3DTSS_CONSTANT",
    "D3DTSS_FORCE_DWORD",
    "D3DSAMPLERSTATETYPE",
    "D3DSAMP_ADDRESSU",
    "D3DSAMP_ADDRESSV",
    "D3DSAMP_ADDRESSW",
    "D3DSAMP_BORDERCOLOR",
    "D3DSAMP_MAGFILTER",
    "D3DSAMP_MINFILTER",
    "D3DSAMP_MIPFILTER",
    "D3DSAMP_MIPMAPLODBIAS",
    "D3DSAMP_MAXMIPLEVEL",
    "D3DSAMP_MAXANISOTROPY",
    "D3DSAMP_SRGBTEXTURE",
    "D3DSAMP_ELEMENTINDEX",
    "D3DSAMP_DMAPOFFSET",
    "D3DSAMP_FORCE_DWORD",
    "D3DTEXTUREOP",
    "D3DTOP_DISABLE",
    "D3DTOP_SELECTARG1",
    "D3DTOP_SELECTARG2",
    "D3DTOP_MODULATE",
    "D3DTOP_MODULATE2X",
    "D3DTOP_MODULATE4X",
    "D3DTOP_ADD",
    "D3DTOP_ADDSIGNED",
    "D3DTOP_ADDSIGNED2X",
    "D3DTOP_SUBTRACT",
    "D3DTOP_ADDSMOOTH",
    "D3DTOP_BLENDDIFFUSEALPHA",
    "D3DTOP_BLENDTEXTUREALPHA",
    "D3DTOP_BLENDFACTORALPHA",
    "D3DTOP_BLENDTEXTUREALPHAPM",
    "D3DTOP_BLENDCURRENTALPHA",
    "D3DTOP_PREMODULATE",
    "D3DTOP_MODULATEALPHA_ADDCOLOR",
    "D3DTOP_MODULATECOLOR_ADDALPHA",
    "D3DTOP_MODULATEINVALPHA_ADDCOLOR",
    "D3DTOP_MODULATEINVCOLOR_ADDALPHA",
    "D3DTOP_BUMPENVMAP",
    "D3DTOP_BUMPENVMAPLUMINANCE",
    "D3DTOP_DOTPRODUCT3",
    "D3DTOP_MULTIPLYADD",
    "D3DTOP_LERP",
    "D3DTOP_FORCE_DWORD",
    "D3DTEXTUREFILTERTYPE",
    "D3DTEXF_NONE",
    "D3DTEXF_POINT",
    "D3DTEXF_LINEAR",
    "D3DTEXF_ANISOTROPIC",
    "D3DTEXF_PYRAMIDALQUAD",
    "D3DTEXF_GAUSSIANQUAD",
    "D3DTEXF_CONVOLUTIONMONO",
    "D3DTEXF_FORCE_DWORD",
    "D3DDECLUSAGE",
    "D3DDECLUSAGE_POSITION",
    "D3DDECLUSAGE_BLENDWEIGHT",
    "D3DDECLUSAGE_BLENDINDICES",
    "D3DDECLUSAGE_NORMAL",
    "D3DDECLUSAGE_PSIZE",
    "D3DDECLUSAGE_TEXCOORD",
    "D3DDECLUSAGE_TANGENT",
    "D3DDECLUSAGE_BINORMAL",
    "D3DDECLUSAGE_TESSFACTOR",
    "D3DDECLUSAGE_POSITIONT",
    "D3DDECLUSAGE_COLOR",
    "D3DDECLUSAGE_FOG",
    "D3DDECLUSAGE_DEPTH",
    "D3DDECLUSAGE_SAMPLE",
    "D3DDECLMETHOD",
    "D3DDECLMETHOD_DEFAULT",
    "D3DDECLMETHOD_PARTIALU",
    "D3DDECLMETHOD_PARTIALV",
    "D3DDECLMETHOD_CROSSUV",
    "D3DDECLMETHOD_UV",
    "D3DDECLMETHOD_LOOKUP",
    "D3DDECLMETHOD_LOOKUPPRESAMPLED",
    "D3DDECLTYPE",
    "D3DDECLTYPE_FLOAT1",
    "D3DDECLTYPE_FLOAT2",
    "D3DDECLTYPE_FLOAT3",
    "D3DDECLTYPE_FLOAT4",
    "D3DDECLTYPE_D3DCOLOR",
    "D3DDECLTYPE_UBYTE4",
    "D3DDECLTYPE_SHORT2",
    "D3DDECLTYPE_SHORT4",
    "D3DDECLTYPE_UBYTE4N",
    "D3DDECLTYPE_SHORT2N",
    "D3DDECLTYPE_SHORT4N",
    "D3DDECLTYPE_USHORT2N",
    "D3DDECLTYPE_USHORT4N",
    "D3DDECLTYPE_UDEC3",
    "D3DDECLTYPE_DEC3N",
    "D3DDECLTYPE_FLOAT16_2",
    "D3DDECLTYPE_FLOAT16_4",
    "D3DDECLTYPE_UNUSED",
    "D3DVERTEXELEMENT9",
    "D3DSHADER_INSTRUCTION_OPCODE_TYPE",
    "D3DSIO_NOP",
    "D3DSIO_MOV",
    "D3DSIO_ADD",
    "D3DSIO_SUB",
    "D3DSIO_MAD",
    "D3DSIO_MUL",
    "D3DSIO_RCP",
    "D3DSIO_RSQ",
    "D3DSIO_DP3",
    "D3DSIO_DP4",
    "D3DSIO_MIN",
    "D3DSIO_MAX",
    "D3DSIO_SLT",
    "D3DSIO_SGE",
    "D3DSIO_EXP",
    "D3DSIO_LOG",
    "D3DSIO_LIT",
    "D3DSIO_DST",
    "D3DSIO_LRP",
    "D3DSIO_FRC",
    "D3DSIO_M4x4",
    "D3DSIO_M4x3",
    "D3DSIO_M3x4",
    "D3DSIO_M3x3",
    "D3DSIO_M3x2",
    "D3DSIO_CALL",
    "D3DSIO_CALLNZ",
    "D3DSIO_LOOP",
    "D3DSIO_RET",
    "D3DSIO_ENDLOOP",
    "D3DSIO_LABEL",
    "D3DSIO_DCL",
    "D3DSIO_POW",
    "D3DSIO_CRS",
    "D3DSIO_SGN",
    "D3DSIO_ABS",
    "D3DSIO_NRM",
    "D3DSIO_SINCOS",
    "D3DSIO_REP",
    "D3DSIO_ENDREP",
    "D3DSIO_IF",
    "D3DSIO_IFC",
    "D3DSIO_ELSE",
    "D3DSIO_ENDIF",
    "D3DSIO_BREAK",
    "D3DSIO_BREAKC",
    "D3DSIO_MOVA",
    "D3DSIO_DEFB",
    "D3DSIO_DEFI",
    "D3DSIO_TEXCOORD",
    "D3DSIO_TEXKILL",
    "D3DSIO_TEX",
    "D3DSIO_TEXBEM",
    "D3DSIO_TEXBEML",
    "D3DSIO_TEXREG2AR",
    "D3DSIO_TEXREG2GB",
    "D3DSIO_TEXM3x2PAD",
    "D3DSIO_TEXM3x2TEX",
    "D3DSIO_TEXM3x3PAD",
    "D3DSIO_TEXM3x3TEX",
    "D3DSIO_RESERVED0",
    "D3DSIO_TEXM3x3SPEC",
    "D3DSIO_TEXM3x3VSPEC",
    "D3DSIO_EXPP",
    "D3DSIO_LOGP",
    "D3DSIO_CND",
    "D3DSIO_DEF",
    "D3DSIO_TEXREG2RGB",
    "D3DSIO_TEXDP3TEX",
    "D3DSIO_TEXM3x2DEPTH",
    "D3DSIO_TEXDP3",
    "D3DSIO_TEXM3x3",
    "D3DSIO_TEXDEPTH",
    "D3DSIO_CMP",
    "D3DSIO_BEM",
    "D3DSIO_DP2ADD",
    "D3DSIO_DSX",
    "D3DSIO_DSY",
    "D3DSIO_TEXLDD",
    "D3DSIO_SETP",
    "D3DSIO_TEXLDL",
    "D3DSIO_BREAKP",
    "D3DSIO_PHASE",
    "D3DSIO_COMMENT",
    "D3DSIO_END",
    "D3DSIO_FORCE_DWORD",
    "D3DSHADER_COMPARISON",
    "D3DSPC_RESERVED0",
    "D3DSPC_GT",
    "D3DSPC_EQ",
    "D3DSPC_GE",
    "D3DSPC_LT",
    "D3DSPC_NE",
    "D3DSPC_LE",
    "D3DSPC_RESERVED1",
    "D3DSAMPLER_TEXTURE_TYPE",
    "D3DSTT_UNKNOWN",
    "D3DSTT_2D",
    "D3DSTT_CUBE",
    "D3DSTT_VOLUME",
    "D3DSTT_FORCE_DWORD",
    "D3DSHADER_PARAM_REGISTER_TYPE",
    "D3DSPR_TEMP",
    "D3DSPR_INPUT",
    "D3DSPR_CONST",
    "D3DSPR_ADDR",
    "D3DSPR_TEXTURE",
    "D3DSPR_RASTOUT",
    "D3DSPR_ATTROUT",
    "D3DSPR_TEXCRDOUT",
    "D3DSPR_OUTPUT",
    "D3DSPR_CONSTINT",
    "D3DSPR_COLOROUT",
    "D3DSPR_DEPTHOUT",
    "D3DSPR_SAMPLER",
    "D3DSPR_CONST2",
    "D3DSPR_CONST3",
    "D3DSPR_CONST4",
    "D3DSPR_CONSTBOOL",
    "D3DSPR_LOOP",
    "D3DSPR_TEMPFLOAT16",
    "D3DSPR_MISCTYPE",
    "D3DSPR_LABEL",
    "D3DSPR_PREDICATE",
    "D3DSPR_FORCE_DWORD",
    "D3DSHADER_MISCTYPE_OFFSETS",
    "D3DSMO_POSITION",
    "D3DSMO_FACE",
    "D3DVS_RASTOUT_OFFSETS",
    "D3DSRO_POSITION",
    "D3DSRO_FOG",
    "D3DSRO_POINT_SIZE",
    "D3DSRO_FORCE_DWORD",
    "D3DVS_ADDRESSMODE_TYPE",
    "D3DVS_ADDRMODE_ABSOLUTE",
    "D3DVS_ADDRMODE_RELATIVE",
    "D3DVS_ADDRMODE_FORCE_DWORD",
    "D3DSHADER_ADDRESSMODE_TYPE",
    "D3DSHADER_ADDRMODE_ABSOLUTE",
    "D3DSHADER_ADDRMODE_RELATIVE",
    "D3DSHADER_ADDRMODE_FORCE_DWORD",
    "D3DSHADER_PARAM_SRCMOD_TYPE",
    "D3DSPSM_NONE",
    "D3DSPSM_NEG",
    "D3DSPSM_BIAS",
    "D3DSPSM_BIASNEG",
    "D3DSPSM_SIGN",
    "D3DSPSM_SIGNNEG",
    "D3DSPSM_COMP",
    "D3DSPSM_X2",
    "D3DSPSM_X2NEG",
    "D3DSPSM_DZ",
    "D3DSPSM_DW",
    "D3DSPSM_ABS",
    "D3DSPSM_ABSNEG",
    "D3DSPSM_NOT",
    "D3DSPSM_FORCE_DWORD",
    "D3DSHADER_MIN_PRECISION",
    "D3DMP_DEFAULT",
    "D3DMP_16",
    "D3DMP_2_8",
    "D3DBASISTYPE",
    "D3DBASIS_BEZIER",
    "D3DBASIS_BSPLINE",
    "D3DBASIS_CATMULL_ROM",
    "D3DBASIS_FORCE_DWORD",
    "D3DDEGREETYPE",
    "D3DDEGREE_LINEAR",
    "D3DDEGREE_QUADRATIC",
    "D3DDEGREE_CUBIC",
    "D3DDEGREE_QUINTIC",
    "D3DDEGREE_FORCE_DWORD",
    "D3DPATCHEDGESTYLE",
    "D3DPATCHEDGE_DISCRETE",
    "D3DPATCHEDGE_CONTINUOUS",
    "D3DPATCHEDGE_FORCE_DWORD",
    "D3DSTATEBLOCKTYPE",
    "D3DSBT_ALL",
    "D3DSBT_PIXELSTATE",
    "D3DSBT_VERTEXSTATE",
    "D3DSBT_FORCE_DWORD",
    "D3DVERTEXBLENDFLAGS",
    "D3DVBF_DISABLE",
    "D3DVBF_1WEIGHTS",
    "D3DVBF_2WEIGHTS",
    "D3DVBF_3WEIGHTS",
    "D3DVBF_TWEENING",
    "D3DVBF_0WEIGHTS",
    "D3DVBF_FORCE_DWORD",
    "D3DTEXTURETRANSFORMFLAGS",
    "D3DTTFF_DISABLE",
    "D3DTTFF_COUNT1",
    "D3DTTFF_COUNT2",
    "D3DTTFF_COUNT3",
    "D3DTTFF_COUNT4",
    "D3DTTFF_PROJECTED",
    "D3DTTFF_FORCE_DWORD",
    "D3DDEVTYPE",
    "D3DDEVTYPE_HAL",
    "D3DDEVTYPE_REF",
    "D3DDEVTYPE_SW",
    "D3DDEVTYPE_NULLREF",
    "D3DDEVTYPE_FORCE_DWORD",
    "D3DMULTISAMPLE_TYPE",
    "D3DMULTISAMPLE_NONE",
    "D3DMULTISAMPLE_NONMASKABLE",
    "D3DMULTISAMPLE_2_SAMPLES",
    "D3DMULTISAMPLE_3_SAMPLES",
    "D3DMULTISAMPLE_4_SAMPLES",
    "D3DMULTISAMPLE_5_SAMPLES",
    "D3DMULTISAMPLE_6_SAMPLES",
    "D3DMULTISAMPLE_7_SAMPLES",
    "D3DMULTISAMPLE_8_SAMPLES",
    "D3DMULTISAMPLE_9_SAMPLES",
    "D3DMULTISAMPLE_10_SAMPLES",
    "D3DMULTISAMPLE_11_SAMPLES",
    "D3DMULTISAMPLE_12_SAMPLES",
    "D3DMULTISAMPLE_13_SAMPLES",
    "D3DMULTISAMPLE_14_SAMPLES",
    "D3DMULTISAMPLE_15_SAMPLES",
    "D3DMULTISAMPLE_16_SAMPLES",
    "D3DMULTISAMPLE_FORCE_DWORD",
    "D3DFORMAT",
    "D3DFMT_UNKNOWN",
    "D3DFMT_R8G8B8",
    "D3DFMT_A8R8G8B8",
    "D3DFMT_X8R8G8B8",
    "D3DFMT_R5G6B5",
    "D3DFMT_X1R5G5B5",
    "D3DFMT_A1R5G5B5",
    "D3DFMT_A4R4G4B4",
    "D3DFMT_R3G3B2",
    "D3DFMT_A8",
    "D3DFMT_A8R3G3B2",
    "D3DFMT_X4R4G4B4",
    "D3DFMT_A2B10G10R10",
    "D3DFMT_A8B8G8R8",
    "D3DFMT_X8B8G8R8",
    "D3DFMT_G16R16",
    "D3DFMT_A2R10G10B10",
    "D3DFMT_A16B16G16R16",
    "D3DFMT_A8P8",
    "D3DFMT_P8",
    "D3DFMT_L8",
    "D3DFMT_A8L8",
    "D3DFMT_A4L4",
    "D3DFMT_V8U8",
    "D3DFMT_L6V5U5",
    "D3DFMT_X8L8V8U8",
    "D3DFMT_Q8W8V8U8",
    "D3DFMT_V16U16",
    "D3DFMT_A2W10V10U10",
    "D3DFMT_UYVY",
    "D3DFMT_R8G8_B8G8",
    "D3DFMT_YUY2",
    "D3DFMT_G8R8_G8B8",
    "D3DFMT_DXT1",
    "D3DFMT_DXT2",
    "D3DFMT_DXT3",
    "D3DFMT_DXT4",
    "D3DFMT_DXT5",
    "D3DFMT_D16_LOCKABLE",
    "D3DFMT_D32",
    "D3DFMT_D15S1",
    "D3DFMT_D24S8",
    "D3DFMT_D24X8",
    "D3DFMT_D24X4S4",
    "D3DFMT_D16",
    "D3DFMT_D32F_LOCKABLE",
    "D3DFMT_D24FS8",
    "D3DFMT_D32_LOCKABLE",
    "D3DFMT_S8_LOCKABLE",
    "D3DFMT_L16",
    "D3DFMT_VERTEXDATA",
    "D3DFMT_INDEX16",
    "D3DFMT_INDEX32",
    "D3DFMT_Q16W16V16U16",
    "D3DFMT_MULTI2_ARGB8",
    "D3DFMT_R16F",
    "D3DFMT_G16R16F",
    "D3DFMT_A16B16G16R16F",
    "D3DFMT_R32F",
    "D3DFMT_G32R32F",
    "D3DFMT_A32B32G32R32F",
    "D3DFMT_CxV8U8",
    "D3DFMT_A1",
    "D3DFMT_A2B10G10R10_XR_BIAS",
    "D3DFMT_BINARYBUFFER",
    "D3DFMT_FORCE_DWORD",
    "D3DDISPLAYMODE",
    "D3DDEVICE_CREATION_PARAMETERS",
    "D3DSWAPEFFECT",
    "D3DSWAPEFFECT_DISCARD",
    "D3DSWAPEFFECT_FLIP",
    "D3DSWAPEFFECT_COPY",
    "D3DSWAPEFFECT_OVERLAY",
    "D3DSWAPEFFECT_FLIPEX",
    "D3DSWAPEFFECT_FORCE_DWORD",
    "D3DPOOL",
    "D3DPOOL_DEFAULT",
    "D3DPOOL_MANAGED",
    "D3DPOOL_SYSTEMMEM",
    "D3DPOOL_SCRATCH",
    "D3DPOOL_FORCE_DWORD",
    "D3DPRESENT_PARAMETERS",
    "D3DGAMMARAMP",
    "D3DBACKBUFFER_TYPE",
    "D3DBACKBUFFER_TYPE_MONO",
    "D3DBACKBUFFER_TYPE_LEFT",
    "D3DBACKBUFFER_TYPE_RIGHT",
    "D3DBACKBUFFER_TYPE_FORCE_DWORD",
    "D3DRESOURCETYPE",
    "D3DRTYPE_SURFACE",
    "D3DRTYPE_VOLUME",
    "D3DRTYPE_TEXTURE",
    "D3DRTYPE_VOLUMETEXTURE",
    "D3DRTYPE_CUBETEXTURE",
    "D3DRTYPE_VERTEXBUFFER",
    "D3DRTYPE_INDEXBUFFER",
    "D3DRTYPE_FORCE_DWORD",
    "D3DCUBEMAP_FACES",
    "D3DCUBEMAP_FACE_POSITIVE_X",
    "D3DCUBEMAP_FACE_NEGATIVE_X",
    "D3DCUBEMAP_FACE_POSITIVE_Y",
    "D3DCUBEMAP_FACE_NEGATIVE_Y",
    "D3DCUBEMAP_FACE_POSITIVE_Z",
    "D3DCUBEMAP_FACE_NEGATIVE_Z",
    "D3DCUBEMAP_FACE_FORCE_DWORD",
    "D3DVERTEXBUFFER_DESC",
    "D3DINDEXBUFFER_DESC",
    "D3DSURFACE_DESC",
    "D3DVOLUME_DESC",
    "D3DLOCKED_RECT",
    "D3DBOX",
    "D3DLOCKED_BOX",
    "D3DRANGE",
    "D3DRECTPATCH_INFO",
    "D3DTRIPATCH_INFO",
    "D3DADAPTER_IDENTIFIER9",
    "D3DRASTER_STATUS",
    "D3DDEBUGMONITORTOKENS",
    "D3DDMT_ENABLE",
    "D3DDMT_DISABLE",
    "D3DDMT_FORCE_DWORD",
    "D3DQUERYTYPE",
    "D3DQUERYTYPE_VCACHE",
    "D3DQUERYTYPE_RESOURCEMANAGER",
    "D3DQUERYTYPE_VERTEXSTATS",
    "D3DQUERYTYPE_EVENT",
    "D3DQUERYTYPE_OCCLUSION",
    "D3DQUERYTYPE_TIMESTAMP",
    "D3DQUERYTYPE_TIMESTAMPDISJOINT",
    "D3DQUERYTYPE_TIMESTAMPFREQ",
    "D3DQUERYTYPE_PIPELINETIMINGS",
    "D3DQUERYTYPE_INTERFACETIMINGS",
    "D3DQUERYTYPE_VERTEXTIMINGS",
    "D3DQUERYTYPE_PIXELTIMINGS",
    "D3DQUERYTYPE_BANDWIDTHTIMINGS",
    "D3DQUERYTYPE_CACHEUTILIZATION",
    "D3DQUERYTYPE_MEMORYPRESSURE",
    "D3DRESOURCESTATS",
    "D3DDEVINFO_RESOURCEMANAGER",
    "D3DDEVINFO_D3DVERTEXSTATS",
    "D3DDEVINFO_VCACHE",
    "D3DDEVINFO_D3D9PIPELINETIMINGS",
    "D3DDEVINFO_D3D9INTERFACETIMINGS",
    "D3DDEVINFO_D3D9STAGETIMINGS",
    "D3DDEVINFO_D3D9BANDWIDTHTIMINGS",
    "D3DDEVINFO_D3D9CACHEUTILIZATION",
    "D3DMEMORYPRESSURE",
    "D3DCOMPOSERECTSOP",
    "D3DCOMPOSERECTS_COPY",
    "D3DCOMPOSERECTS_OR",
    "D3DCOMPOSERECTS_AND",
    "D3DCOMPOSERECTS_NEG",
    "D3DCOMPOSERECTS_FORCE_DWORD",
    "D3DCOMPOSERECTDESC",
    "D3DCOMPOSERECTDESTINATION",
    "D3DPRESENTSTATS",
    "D3DSCANLINEORDERING",
    "D3DSCANLINEORDERING_UNKNOWN",
    "D3DSCANLINEORDERING_PROGRESSIVE",
    "D3DSCANLINEORDERING_INTERLACED",
    "D3DDISPLAYMODEEX",
    "D3DDISPLAYMODEFILTER",
    "D3DDISPLAYROTATION",
    "D3DDISPLAYROTATION_IDENTITY",
    "D3DDISPLAYROTATION_90",
    "D3DDISPLAYROTATION_180",
    "D3DDISPLAYROTATION_270",
    "D3D_OMAC",
    "D3DAUTHENTICATEDCHANNELTYPE",
    "D3DAUTHENTICATEDCHANNEL_D3D9",
    "D3DAUTHENTICATEDCHANNEL_DRIVER_SOFTWARE",
    "D3DAUTHENTICATEDCHANNEL_DRIVER_HARDWARE",
    "D3DAUTHENTICATEDCHANNEL_QUERY_INPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERY_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_PROTECTION_FLAGS",
    "D3DAUTHENTICATEDCHANNEL_QUERYPROTECTION_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYCHANNELTYPE_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYDEVICEHANDLE_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_INPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYCRYPTOSESSION_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESSCOUNT_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_INPUT",
    "D3DAUTHENTICATEDCHANNEL_PROCESSIDENTIFIERTYPE",
    "PROCESSIDTYPE_UNKNOWN",
    "PROCESSIDTYPE_DWM",
    "PROCESSIDTYPE_HANDLE",
    "D3DAUTHENTICATEDCHANNEL_QUERYRESTRICTEDSHAREDRESOURCEPROCESS_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYUNRESTRICTEDPROTECTEDSHAREDRESOURCECOUNT_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_INPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTIDCOUNT_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_INPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYOUTPUTID_OUTPUT",
    "D3DBUSTYPE",
    "D3DBUSTYPE_OTHER",
    "D3DBUSTYPE_PCI",
    "D3DBUSTYPE_PCIX",
    "D3DBUSTYPE_PCIEXPRESS",
    "D3DBUSTYPE_AGP",
    "D3DBUSIMPL_MODIFIER_INSIDE_OF_CHIPSET",
    "D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_CHIP",
    "D3DBUSIMPL_MODIFIER_TRACKS_ON_MOTHER_BOARD_TO_SOCKET",
    "D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR",
    "D3DBUSIMPL_MODIFIER_DAUGHTER_BOARD_CONNECTOR_INSIDE_OF_NUAE",
    "D3DBUSIMPL_MODIFIER_NON_STANDARD",
    "D3DAUTHENTICATEDCHANNEL_QUERYINFOBUSTYPE_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUIDCOUNT_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_INPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYEVICTIONENCRYPTIONGUID_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_QUERYUNCOMPRESSEDENCRYPTIONLEVEL_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_CONFIGURE_INPUT",
    "D3DAUTHENTICATEDCHANNEL_CONFIGURE_OUTPUT",
    "D3DAUTHENTICATEDCHANNEL_CONFIGUREINITIALIZE",
    "D3DAUTHENTICATEDCHANNEL_CONFIGUREPROTECTION",
    "D3DAUTHENTICATEDCHANNEL_CONFIGURECRYPTOSESSION",
    "D3DAUTHENTICATEDCHANNEL_CONFIGURESHAREDRESOURCE",
    "D3DAUTHENTICATEDCHANNEL_CONFIGUREUNCOMPRESSEDENCRYPTION",
    "D3DENCRYPTED_BLOCK_INFO",
    "D3DAES_CTR_IV",
    "D3DVSHADERCAPS2_0",
    "D3DPSHADERCAPS2_0",
    "D3DCAPS9",
    "IDirect3D9",
    "IDirect3DDevice9",
    "IDirect3DStateBlock9",
    "IDirect3DSwapChain9",
    "IDirect3DResource9",
    "IDirect3DVertexDeclaration9",
    "IDirect3DVertexShader9",
    "IDirect3DPixelShader9",
    "IDirect3DBaseTexture9",
    "IDirect3DTexture9",
    "IDirect3DVolumeTexture9",
    "IDirect3DCubeTexture9",
    "IDirect3DVertexBuffer9",
    "IDirect3DIndexBuffer9",
    "IDirect3DSurface9",
    "IDirect3DVolume9",
    "IDirect3DQuery9",
    "IDirect3D9Ex",
    "IDirect3DDevice9Ex",
    "IDirect3DSwapChain9Ex",
    "Direct3DCreate9",
    "D3DPERF_BeginEvent",
    "D3DPERF_EndEvent",
    "D3DPERF_SetMarker",
    "D3DPERF_SetRegion",
    "D3DPERF_QueryRepeatFrame",
    "D3DPERF_SetOptions",
    "D3DPERF_GetStatus",
    "Direct3DCreate9Ex",
]
