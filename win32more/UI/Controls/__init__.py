from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, COMMETHOD, SUCCEEDED, FAILED
import win32more.Foundation
import win32more.Graphics.Gdi
import win32more.System.Com
import win32more.System.Registry
import win32more.UI.Controls
import win32more.UI.Input.Pointer
import win32more.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        f = globals()[f'_define_{name}']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, f())
    return getattr(_module, name)
def __dir__():
    return __all__
_LI_METRIC = Int32
LIM_SMALL = 0
LIM_LARGE = 1
AEROWIZARDPARTS = Int32
AW_TITLEBAR = 1
AW_HEADERAREA = 2
AW_CONTENTAREA = 3
AW_COMMANDAREA = 4
AW_BUTTON = 5
TVI_ROOT = -65536
TVI_FIRST = -65535
TVI_LAST = -65534
TVI_SORT = -65533
BCN_FIRST = 4294966046
EM_SCROLLCARET = 183
EM_SETLIMITTEXT = 197
EM_GETLIMITTEXT = 213
EM_POSFROMCHAR = 214
EM_CHARFROMPOS = 215
WM_CTLCOLOR = 25
ODT_HEADER = 100
LVM_FIRST = 4096
TV_FIRST = 4352
HDM_FIRST = 4608
TCM_FIRST = 4864
PGM_FIRST = 5120
ECM_FIRST = 5376
BCM_FIRST = 5632
CBM_FIRST = 5888
CCM_FIRST = 8192
CCM_LAST = 8704
CCM_SETBKCOLOR = 8193
CCM_SETCOLORSCHEME = 8194
CCM_GETCOLORSCHEME = 8195
CCM_GETDROPTARGET = 8196
CCM_SETUNICODEFORMAT = 8197
CCM_GETUNICODEFORMAT = 8198
COMCTL32_VERSION = 6
CCM_SETVERSION = 8199
CCM_GETVERSION = 8200
CCM_SETNOTIFYWINDOW = 8201
CCM_SETWINDOWTHEME = 8203
CCM_DPISCALE = 8204
INFOTIPSIZE = 1024
MSGF_COMMCTRL_BEGINDRAG = 16896
MSGF_COMMCTRL_SIZEHEADER = 16897
MSGF_COMMCTRL_DRAGSELECT = 16898
MSGF_COMMCTRL_TOOLBARCUST = 16899
CDRF_DODEFAULT = 0
CDRF_NEWFONT = 2
CDRF_SKIPDEFAULT = 4
CDRF_DOERASE = 8
CDRF_SKIPPOSTPAINT = 256
CDRF_NOTIFYPOSTPAINT = 16
CDRF_NOTIFYITEMDRAW = 32
CDRF_NOTIFYSUBITEMDRAW = 32
CDRF_NOTIFYPOSTERASE = 64
CDDS_POSTERASE = 4
CDDS_ITEM = 65536
NM_GETCUSTOMSPLITRECT = 4294966049
CLR_NONE = -1
CLR_DEFAULT = -16777216
CLR_HILIGHT = -16777216
ILS_NORMAL = 0
ILS_GLOW = 1
ILS_SHADOW = 2
ILS_SATURATE = 4
ILS_ALPHA = 8
ILGT_NORMAL = 0
ILGT_ASYNC = 1
WC_HEADERA = 'SysHeader32'
WC_HEADERW = 'SysHeader32'
WC_HEADER = 'SysHeader32'
HDS_HORZ = 0
HDS_BUTTONS = 2
HDS_HOTTRACK = 4
HDS_HIDDEN = 8
HDS_DRAGDROP = 64
HDS_FULLDRAG = 128
HDS_FILTERBAR = 256
HDS_FLAT = 512
HDS_CHECKBOXES = 1024
HDS_NOSIZING = 2048
HDS_OVERFLOW = 4096
HDM_GETITEMCOUNT = 4608
HDM_INSERTITEMA = 4609
HDM_INSERTITEMW = 4618
HDM_INSERTITEM = 4618
HDM_DELETEITEM = 4610
HDM_GETITEMA = 4611
HDM_GETITEMW = 4619
HDM_GETITEM = 4619
HDM_SETITEMA = 4612
HDM_SETITEMW = 4620
HDM_SETITEM = 4620
HDM_LAYOUT = 4613
HDSIL_NORMAL = 0
HDSIL_STATE = 1
HDM_HITTEST = 4614
HDM_GETITEMRECT = 4615
HDM_SETIMAGELIST = 4616
HDM_GETIMAGELIST = 4617
HDM_ORDERTOINDEX = 4623
HDM_CREATEDRAGIMAGE = 4624
HDM_GETORDERARRAY = 4625
HDM_SETORDERARRAY = 4626
HDM_SETHOTDIVIDER = 4627
HDM_SETBITMAPMARGIN = 4628
HDM_GETBITMAPMARGIN = 4629
HDM_SETUNICODEFORMAT = 8197
HDM_GETUNICODEFORMAT = 8198
HDM_SETFILTERCHANGETIMEOUT = 4630
HDM_EDITFILTER = 4631
HDM_CLEARFILTER = 4632
HDM_GETITEMDROPDOWNRECT = 4633
HDM_GETOVERFLOWRECT = 4634
HDM_GETFOCUSEDITEM = 4635
HDM_SETFOCUSEDITEM = 4636
TOOLBARCLASSNAMEW = 'ToolbarWindow32'
TOOLBARCLASSNAMEA = 'ToolbarWindow32'
TOOLBARCLASSNAME = 'ToolbarWindow32'
CMB_MASKED = 2
TBSTATE_CHECKED = 1
TBSTATE_PRESSED = 2
TBSTATE_ENABLED = 4
TBSTATE_HIDDEN = 8
TBSTATE_INDETERMINATE = 16
TBSTATE_WRAP = 32
TBSTATE_ELLIPSES = 64
TBSTATE_MARKED = 128
TBSTYLE_BUTTON = 0
TBSTYLE_SEP = 1
TBSTYLE_CHECK = 2
TBSTYLE_GROUP = 4
TBSTYLE_DROPDOWN = 8
TBSTYLE_AUTOSIZE = 16
TBSTYLE_NOPREFIX = 32
TBSTYLE_TOOLTIPS = 256
TBSTYLE_WRAPABLE = 512
TBSTYLE_ALTDRAG = 1024
TBSTYLE_FLAT = 2048
TBSTYLE_LIST = 4096
TBSTYLE_CUSTOMERASE = 8192
TBSTYLE_REGISTERDROP = 16384
TBSTYLE_TRANSPARENT = 32768
TBSTYLE_EX_DRAWDDARROWS = 1
BTNS_BUTTON = 0
BTNS_SEP = 1
BTNS_CHECK = 2
BTNS_GROUP = 4
BTNS_DROPDOWN = 8
BTNS_AUTOSIZE = 16
BTNS_NOPREFIX = 32
BTNS_SHOWTEXT = 64
BTNS_WHOLEDROPDOWN = 128
TBSTYLE_EX_MIXEDBUTTONS = 8
TBSTYLE_EX_HIDECLIPPEDBUTTONS = 16
TBSTYLE_EX_MULTICOLUMN = 2
TBSTYLE_EX_VERTICAL = 4
TBSTYLE_EX_DOUBLEBUFFER = 128
TBCDRF_NOEDGES = 65536
TBCDRF_HILITEHOTTRACK = 131072
TBCDRF_NOOFFSET = 262144
TBCDRF_NOMARK = 524288
TBCDRF_NOETCHEDEFFECT = 1048576
TBCDRF_BLENDICON = 2097152
TBCDRF_NOBACKGROUND = 4194304
TBCDRF_USECDCOLORS = 8388608
TB_ENABLEBUTTON = 1025
TB_CHECKBUTTON = 1026
TB_PRESSBUTTON = 1027
TB_HIDEBUTTON = 1028
TB_INDETERMINATE = 1029
TB_MARKBUTTON = 1030
TB_ISBUTTONENABLED = 1033
TB_ISBUTTONCHECKED = 1034
TB_ISBUTTONPRESSED = 1035
TB_ISBUTTONHIDDEN = 1036
TB_ISBUTTONINDETERMINATE = 1037
TB_ISBUTTONHIGHLIGHTED = 1038
TB_SETSTATE = 1041
TB_GETSTATE = 1042
TB_ADDBITMAP = 1043
IDB_STD_SMALL_COLOR = 0
IDB_STD_LARGE_COLOR = 1
IDB_VIEW_SMALL_COLOR = 4
IDB_VIEW_LARGE_COLOR = 5
IDB_HIST_SMALL_COLOR = 8
IDB_HIST_LARGE_COLOR = 9
IDB_HIST_NORMAL = 12
IDB_HIST_HOT = 13
IDB_HIST_DISABLED = 14
IDB_HIST_PRESSED = 15
STD_CUT = 0
STD_COPY = 1
STD_PASTE = 2
STD_UNDO = 3
STD_REDOW = 4
STD_DELETE = 5
STD_FILENEW = 6
STD_FILEOPEN = 7
STD_FILESAVE = 8
STD_PRINTPRE = 9
STD_PROPERTIES = 10
STD_HELP = 11
STD_FIND = 12
STD_REPLACE = 13
STD_PRINT = 14
VIEW_LARGEICONS = 0
VIEW_SMALLICONS = 1
VIEW_LIST = 2
VIEW_DETAILS = 3
VIEW_SORTNAME = 4
VIEW_SORTSIZE = 5
VIEW_SORTDATE = 6
VIEW_SORTTYPE = 7
VIEW_PARENTFOLDER = 8
VIEW_NETCONNECT = 9
VIEW_NETDISCONNECT = 10
VIEW_NEWFOLDER = 11
VIEW_VIEWMENU = 12
HIST_BACK = 0
HIST_FORWARD = 1
HIST_FAVORITES = 2
HIST_ADDTOFAVORITES = 3
HIST_VIEWTREE = 4
TB_ADDBUTTONSA = 1044
TB_INSERTBUTTONA = 1045
TB_DELETEBUTTON = 1046
TB_GETBUTTON = 1047
TB_BUTTONCOUNT = 1048
TB_COMMANDTOINDEX = 1049
TB_SAVERESTOREA = 1050
TB_SAVERESTOREW = 1100
TB_CUSTOMIZE = 1051
TB_ADDSTRINGA = 1052
TB_ADDSTRINGW = 1101
TB_GETITEMRECT = 1053
TB_BUTTONSTRUCTSIZE = 1054
TB_SETBUTTONSIZE = 1055
TB_SETBITMAPSIZE = 1056
TB_AUTOSIZE = 1057
TB_GETTOOLTIPS = 1059
TB_SETTOOLTIPS = 1060
TB_SETPARENT = 1061
TB_SETROWS = 1063
TB_GETROWS = 1064
TB_SETCMDID = 1066
TB_CHANGEBITMAP = 1067
TB_GETBITMAP = 1068
TB_GETBUTTONTEXTA = 1069
TB_GETBUTTONTEXTW = 1099
TB_REPLACEBITMAP = 1070
TB_SETINDENT = 1071
TB_SETIMAGELIST = 1072
TB_GETIMAGELIST = 1073
TB_LOADIMAGES = 1074
TB_GETRECT = 1075
TB_SETHOTIMAGELIST = 1076
TB_GETHOTIMAGELIST = 1077
TB_SETDISABLEDIMAGELIST = 1078
TB_GETDISABLEDIMAGELIST = 1079
TB_SETSTYLE = 1080
TB_GETSTYLE = 1081
TB_GETBUTTONSIZE = 1082
TB_SETBUTTONWIDTH = 1083
TB_SETMAXTEXTROWS = 1084
TB_GETTEXTROWS = 1085
TB_GETBUTTONTEXT = 1099
TB_SAVERESTORE = 1100
TB_ADDSTRING = 1101
TB_GETOBJECT = 1086
TB_GETHOTITEM = 1095
TB_SETHOTITEM = 1096
TB_SETANCHORHIGHLIGHT = 1097
TB_GETANCHORHIGHLIGHT = 1098
TB_MAPACCELERATORA = 1102
TB_GETINSERTMARK = 1103
TB_SETINSERTMARK = 1104
TB_INSERTMARKHITTEST = 1105
TB_MOVEBUTTON = 1106
TB_GETMAXSIZE = 1107
TB_SETEXTENDEDSTYLE = 1108
TB_GETEXTENDEDSTYLE = 1109
TB_GETPADDING = 1110
TB_SETPADDING = 1111
TB_SETINSERTMARKCOLOR = 1112
TB_GETINSERTMARKCOLOR = 1113
TB_SETCOLORSCHEME = 8194
TB_GETCOLORSCHEME = 8195
TB_SETUNICODEFORMAT = 8197
TB_GETUNICODEFORMAT = 8198
TB_MAPACCELERATORW = 1114
TB_MAPACCELERATOR = 1114
TBBF_LARGE = 1
TB_GETBITMAPFLAGS = 1065
TB_GETBUTTONINFOW = 1087
TB_SETBUTTONINFOW = 1088
TB_GETBUTTONINFOA = 1089
TB_SETBUTTONINFOA = 1090
TB_GETBUTTONINFO = 1087
TB_SETBUTTONINFO = 1088
TB_INSERTBUTTONW = 1091
TB_ADDBUTTONSW = 1092
TB_HITTEST = 1093
TB_INSERTBUTTON = 1091
TB_ADDBUTTONS = 1092
TB_SETDRAWTEXTFLAGS = 1094
TB_GETSTRINGW = 1115
TB_GETSTRINGA = 1116
TB_GETSTRING = 1115
TB_SETBOUNDINGSIZE = 1117
TB_SETHOTITEM2 = 1118
TB_HASACCELERATOR = 1119
TB_SETLISTGAP = 1120
TB_GETIMAGELISTCOUNT = 1122
TB_GETIDEALSIZE = 1123
TBMF_PAD = 1
TBMF_BARPAD = 2
TBMF_BUTTONSPACING = 4
TB_GETMETRICS = 1125
TB_SETMETRICS = 1126
TB_GETITEMDROPDOWNRECT = 1127
TB_SETPRESSEDIMAGELIST = 1128
TB_GETPRESSEDIMAGELIST = 1129
TB_SETWINDOWTHEME = 8203
TBNRF_HIDEHELP = 1
TBNRF_ENDCUSTOMIZE = 2
TBDDRET_DEFAULT = 0
TBDDRET_NODEFAULT = 1
TBDDRET_TREATPRESSED = 2
REBARCLASSNAMEW = 'ReBarWindow32'
REBARCLASSNAMEA = 'ReBarWindow32'
REBARCLASSNAME = 'ReBarWindow32'
RBIM_IMAGELIST = 1
RBS_TOOLTIPS = 256
RBS_VARHEIGHT = 512
RBS_BANDBORDERS = 1024
RBS_FIXEDORDER = 2048
RBS_REGISTERDROP = 4096
RBS_AUTOSIZE = 8192
RBS_VERTICALGRIPPER = 16384
RBS_DBLCLKTOGGLE = 32768
RBBS_BREAK = 1
RBBS_FIXEDSIZE = 2
RBBS_CHILDEDGE = 4
RBBS_HIDDEN = 8
RBBS_NOVERT = 16
RBBS_FIXEDBMP = 32
RBBS_VARIABLEHEIGHT = 64
RBBS_GRIPPERALWAYS = 128
RBBS_NOGRIPPER = 256
RBBS_USECHEVRON = 512
RBBS_HIDETITLE = 1024
RBBS_TOPALIGN = 2048
RBBIM_STYLE = 1
RBBIM_COLORS = 2
RBBIM_TEXT = 4
RBBIM_IMAGE = 8
RBBIM_CHILD = 16
RBBIM_CHILDSIZE = 32
RBBIM_SIZE = 64
RBBIM_BACKGROUND = 128
RBBIM_ID = 256
RBBIM_IDEALSIZE = 512
RBBIM_LPARAM = 1024
RBBIM_HEADERSIZE = 2048
RBBIM_CHEVRONLOCATION = 4096
RBBIM_CHEVRONSTATE = 8192
RB_INSERTBANDA = 1025
RB_DELETEBAND = 1026
RB_GETBARINFO = 1027
RB_SETBARINFO = 1028
RB_SETBANDINFOA = 1030
RB_SETPARENT = 1031
RB_HITTEST = 1032
RB_GETRECT = 1033
RB_INSERTBANDW = 1034
RB_SETBANDINFOW = 1035
RB_GETBANDCOUNT = 1036
RB_GETROWCOUNT = 1037
RB_GETROWHEIGHT = 1038
RB_IDTOINDEX = 1040
RB_GETTOOLTIPS = 1041
RB_SETTOOLTIPS = 1042
RB_SETBKCOLOR = 1043
RB_GETBKCOLOR = 1044
RB_SETTEXTCOLOR = 1045
RB_GETTEXTCOLOR = 1046
RBSTR_CHANGERECT = 1
RB_SIZETORECT = 1047
RB_SETCOLORSCHEME = 8194
RB_GETCOLORSCHEME = 8195
RB_INSERTBAND = 1034
RB_SETBANDINFO = 1035
RB_BEGINDRAG = 1048
RB_ENDDRAG = 1049
RB_DRAGMOVE = 1050
RB_GETBARHEIGHT = 1051
RB_GETBANDINFOW = 1052
RB_GETBANDINFOA = 1053
RB_GETBANDINFO = 1052
RB_MINIMIZEBAND = 1054
RB_MAXIMIZEBAND = 1055
RB_GETDROPTARGET = 8196
RB_GETBANDBORDERS = 1058
RB_SHOWBAND = 1059
RB_SETPALETTE = 1061
RB_GETPALETTE = 1062
RB_MOVEBAND = 1063
RB_SETUNICODEFORMAT = 8197
RB_GETUNICODEFORMAT = 8198
RB_GETBANDMARGINS = 1064
RB_SETWINDOWTHEME = 8203
RB_SETEXTENDEDSTYLE = 1065
RB_GETEXTENDEDSTYLE = 1066
RB_PUSHCHEVRON = 1067
RB_SETBANDWIDTH = 1068
RBAB_AUTOSIZE = 1
RBAB_ADDBAND = 2
RBHT_NOWHERE = 1
RBHT_CAPTION = 2
RBHT_CLIENT = 3
RBHT_GRABBER = 4
RBHT_CHEVRON = 8
RBHT_SPLITTER = 16
TOOLTIPS_CLASSW = 'tooltips_class32'
TOOLTIPS_CLASSA = 'tooltips_class32'
TOOLTIPS_CLASS = 'tooltips_class32'
TTS_ALWAYSTIP = 1
TTS_NOPREFIX = 2
TTS_NOANIMATE = 16
TTS_NOFADE = 32
TTS_BALLOON = 64
TTS_CLOSE = 128
TTS_USEVISUALSTYLE = 256
TTDT_AUTOMATIC = 0
TTDT_RESHOW = 1
TTDT_AUTOPOP = 2
TTDT_INITIAL = 3
TTM_ACTIVATE = 1025
TTM_SETDELAYTIME = 1027
TTM_ADDTOOLA = 1028
TTM_ADDTOOLW = 1074
TTM_DELTOOLA = 1029
TTM_DELTOOLW = 1075
TTM_NEWTOOLRECTA = 1030
TTM_NEWTOOLRECTW = 1076
TTM_RELAYEVENT = 1031
TTM_GETTOOLINFOA = 1032
TTM_GETTOOLINFOW = 1077
TTM_SETTOOLINFOA = 1033
TTM_SETTOOLINFOW = 1078
TTM_HITTESTA = 1034
TTM_HITTESTW = 1079
TTM_GETTEXTA = 1035
TTM_GETTEXTW = 1080
TTM_UPDATETIPTEXTA = 1036
TTM_UPDATETIPTEXTW = 1081
TTM_GETTOOLCOUNT = 1037
TTM_ENUMTOOLSA = 1038
TTM_ENUMTOOLSW = 1082
TTM_GETCURRENTTOOLA = 1039
TTM_GETCURRENTTOOLW = 1083
TTM_WINDOWFROMPOINT = 1040
TTM_TRACKACTIVATE = 1041
TTM_TRACKPOSITION = 1042
TTM_SETTIPBKCOLOR = 1043
TTM_SETTIPTEXTCOLOR = 1044
TTM_GETDELAYTIME = 1045
TTM_GETTIPBKCOLOR = 1046
TTM_GETTIPTEXTCOLOR = 1047
TTM_SETMAXTIPWIDTH = 1048
TTM_GETMAXTIPWIDTH = 1049
TTM_SETMARGIN = 1050
TTM_GETMARGIN = 1051
TTM_POP = 1052
TTM_UPDATE = 1053
TTM_GETBUBBLESIZE = 1054
TTM_ADJUSTRECT = 1055
TTM_SETTITLEA = 1056
TTM_SETTITLEW = 1057
TTM_POPUP = 1058
TTM_GETTITLE = 1059
TTM_ADDTOOL = 1074
TTM_DELTOOL = 1075
TTM_NEWTOOLRECT = 1076
TTM_GETTOOLINFO = 1077
TTM_SETTOOLINFO = 1078
TTM_HITTEST = 1079
TTM_GETTEXT = 1080
TTM_UPDATETIPTEXT = 1081
TTM_ENUMTOOLS = 1082
TTM_GETCURRENTTOOL = 1083
TTM_SETTITLE = 1057
TTM_SETWINDOWTHEME = 8203
SBARS_SIZEGRIP = 256
SBARS_TOOLTIPS = 2048
SBT_TOOLTIPS = 2048
STATUSCLASSNAMEW = 'msctls_statusbar32'
STATUSCLASSNAMEA = 'msctls_statusbar32'
STATUSCLASSNAME = 'msctls_statusbar32'
SB_SETTEXTA = 1025
SB_SETTEXTW = 1035
SB_GETTEXTA = 1026
SB_GETTEXTW = 1037
SB_GETTEXTLENGTHA = 1027
SB_GETTEXTLENGTHW = 1036
SB_GETTEXT = 1037
SB_SETTEXT = 1035
SB_GETTEXTLENGTH = 1036
SB_SETPARTS = 1028
SB_GETPARTS = 1030
SB_GETBORDERS = 1031
SB_SETMINHEIGHT = 1032
SB_SIMPLE = 1033
SB_GETRECT = 1034
SB_ISSIMPLE = 1038
SB_SETICON = 1039
SB_SETTIPTEXTA = 1040
SB_SETTIPTEXTW = 1041
SB_GETTIPTEXTA = 1042
SB_GETTIPTEXTW = 1043
SB_GETICON = 1044
SB_SETUNICODEFORMAT = 8197
SB_GETUNICODEFORMAT = 8198
SBT_OWNERDRAW = 4096
SBT_NOBORDERS = 256
SBT_POPOUT = 512
SBT_RTLREADING = 1024
SBT_NOTABPARSING = 2048
SB_SETBKCOLOR = 8193
SB_SIMPLEID = 255
TRACKBAR_CLASSA = 'msctls_trackbar32'
TRACKBAR_CLASSW = 'msctls_trackbar32'
TRACKBAR_CLASS = 'msctls_trackbar32'
TBS_AUTOTICKS = 1
TBS_VERT = 2
TBS_HORZ = 0
TBS_TOP = 4
TBS_BOTTOM = 0
TBS_LEFT = 4
TBS_RIGHT = 0
TBS_BOTH = 8
TBS_NOTICKS = 16
TBS_ENABLESELRANGE = 32
TBS_FIXEDLENGTH = 64
TBS_NOTHUMB = 128
TBS_TOOLTIPS = 256
TBS_REVERSED = 512
TBS_DOWNISLEFT = 1024
TBS_NOTIFYBEFOREMOVE = 2048
TBS_TRANSPARENTBKGND = 4096
TBM_GETRANGEMIN = 1025
TBM_GETRANGEMAX = 1026
TBM_GETTIC = 1027
TBM_SETTIC = 1028
TBM_SETPOS = 1029
TBM_SETRANGE = 1030
TBM_SETRANGEMIN = 1031
TBM_SETRANGEMAX = 1032
TBM_CLEARTICS = 1033
TBM_SETSEL = 1034
TBM_SETSELSTART = 1035
TBM_SETSELEND = 1036
TBM_GETPTICS = 1038
TBM_GETTICPOS = 1039
TBM_GETNUMTICS = 1040
TBM_GETSELSTART = 1041
TBM_GETSELEND = 1042
TBM_CLEARSEL = 1043
TBM_SETTICFREQ = 1044
TBM_SETPAGESIZE = 1045
TBM_GETPAGESIZE = 1046
TBM_SETLINESIZE = 1047
TBM_GETLINESIZE = 1048
TBM_GETTHUMBRECT = 1049
TBM_GETCHANNELRECT = 1050
TBM_SETTHUMBLENGTH = 1051
TBM_GETTHUMBLENGTH = 1052
TBM_SETTOOLTIPS = 1053
TBM_GETTOOLTIPS = 1054
TBM_SETTIPSIDE = 1055
TBTS_TOP = 0
TBTS_LEFT = 1
TBTS_BOTTOM = 2
TBTS_RIGHT = 3
TBM_SETBUDDY = 1056
TBM_GETBUDDY = 1057
TBM_SETPOSNOTIFY = 1058
TBM_SETUNICODEFORMAT = 8197
TBM_GETUNICODEFORMAT = 8198
TB_LINEUP = 0
TB_LINEDOWN = 1
TB_PAGEUP = 2
TB_PAGEDOWN = 3
TB_THUMBPOSITION = 4
TB_THUMBTRACK = 5
TB_TOP = 6
TB_BOTTOM = 7
TB_ENDTRACK = 8
TBCD_TICS = 1
TBCD_THUMB = 2
TBCD_CHANNEL = 3
DL_CURSORSET = 0
DL_STOPCURSOR = 1
DL_COPYCURSOR = 2
DL_MOVECURSOR = 3
DRAGLISTMSGSTRING = 'commctrl_DragListMsg'
UPDOWN_CLASSA = 'msctls_updown32'
UPDOWN_CLASSW = 'msctls_updown32'
UPDOWN_CLASS = 'msctls_updown32'
UD_MAXVAL = 32767
UDS_WRAP = 1
UDS_SETBUDDYINT = 2
UDS_ALIGNRIGHT = 4
UDS_ALIGNLEFT = 8
UDS_AUTOBUDDY = 16
UDS_ARROWKEYS = 32
UDS_HORZ = 64
UDS_NOTHOUSANDS = 128
UDS_HOTTRACK = 256
UDM_SETRANGE = 1125
UDM_GETRANGE = 1126
UDM_SETPOS = 1127
UDM_GETPOS = 1128
UDM_SETBUDDY = 1129
UDM_GETBUDDY = 1130
UDM_SETACCEL = 1131
UDM_GETACCEL = 1132
UDM_SETBASE = 1133
UDM_GETBASE = 1134
UDM_SETRANGE32 = 1135
UDM_GETRANGE32 = 1136
UDM_SETUNICODEFORMAT = 8197
UDM_GETUNICODEFORMAT = 8198
UDM_SETPOS32 = 1137
UDM_GETPOS32 = 1138
PROGRESS_CLASSA = 'msctls_progress32'
PROGRESS_CLASSW = 'msctls_progress32'
PROGRESS_CLASS = 'msctls_progress32'
PBS_SMOOTH = 1
PBS_VERTICAL = 4
PBM_SETRANGE = 1025
PBM_SETPOS = 1026
PBM_DELTAPOS = 1027
PBM_SETSTEP = 1028
PBM_STEPIT = 1029
PBM_SETRANGE32 = 1030
PBM_GETRANGE = 1031
PBM_GETPOS = 1032
PBM_SETBARCOLOR = 1033
PBM_SETBKCOLOR = 8193
PBS_MARQUEE = 8
PBM_SETMARQUEE = 1034
PBS_SMOOTHREVERSE = 16
PBM_GETSTEP = 1037
PBM_GETBKCOLOR = 1038
PBM_GETBARCOLOR = 1039
PBM_SETSTATE = 1040
PBM_GETSTATE = 1041
PBST_NORMAL = 1
PBST_ERROR = 2
PBST_PAUSED = 3
HOTKEYF_SHIFT = 1
HOTKEYF_CONTROL = 2
HOTKEYF_ALT = 4
HOTKEYF_EXT = 128
HKCOMB_NONE = 1
HKCOMB_S = 2
HKCOMB_C = 4
HKCOMB_A = 8
HKCOMB_SC = 16
HKCOMB_SA = 32
HKCOMB_CA = 64
HKCOMB_SCA = 128
HKM_SETHOTKEY = 1025
HKM_GETHOTKEY = 1026
HKM_SETRULES = 1027
HOTKEY_CLASSA = 'msctls_hotkey32'
HOTKEY_CLASSW = 'msctls_hotkey32'
HOTKEY_CLASS = 'msctls_hotkey32'
CCS_TOP = 1
CCS_NOMOVEY = 2
CCS_BOTTOM = 3
CCS_NORESIZE = 4
CCS_NOPARENTALIGN = 8
CCS_ADJUSTABLE = 32
CCS_NODIVIDER = 64
CCS_VERT = 128
INVALID_LINK_INDEX = -1
MAX_LINKID_TEXT = 48
WC_LINK = 'SysLink'
LWS_TRANSPARENT = 1
LWS_IGNORERETURN = 2
LWS_NOPREFIX = 4
LWS_USEVISUALSTYLE = 8
LWS_USECUSTOMTEXT = 16
LWS_RIGHT = 32
LM_HITTEST = 1792
LM_GETIDEALHEIGHT = 1793
LM_SETITEM = 1794
LM_GETITEM = 1795
LM_GETIDEALSIZE = 1793
WC_LISTVIEWA = 'SysListView32'
WC_LISTVIEWW = 'SysListView32'
WC_LISTVIEW = 'SysListView32'
LVS_ICON = 0
LVS_REPORT = 1
LVS_SMALLICON = 2
LVS_LIST = 3
LVS_TYPEMASK = 3
LVS_SINGLESEL = 4
LVS_SHOWSELALWAYS = 8
LVS_SORTASCENDING = 16
LVS_SORTDESCENDING = 32
LVS_SHAREIMAGELISTS = 64
LVS_NOLABELWRAP = 128
LVS_AUTOARRANGE = 256
LVS_EDITLABELS = 512
LVS_OWNERDATA = 4096
LVS_NOSCROLL = 8192
LVS_TYPESTYLEMASK = 64512
LVS_ALIGNTOP = 0
LVS_ALIGNLEFT = 2048
LVS_ALIGNMASK = 3072
LVS_OWNERDRAWFIXED = 1024
LVS_NOCOLUMNHEADER = 16384
LVS_NOSORTHEADER = 32768
LVM_SETUNICODEFORMAT = 8197
LVM_GETUNICODEFORMAT = 8198
LVM_GETBKCOLOR = 4096
LVM_SETBKCOLOR = 4097
LVM_GETIMAGELIST = 4098
LVSIL_NORMAL = 0
LVSIL_SMALL = 1
LVSIL_STATE = 2
LVSIL_GROUPHEADER = 3
LVM_SETIMAGELIST = 4099
LVM_GETITEMCOUNT = 4100
I_INDENTCALLBACK = -1
I_IMAGECALLBACK = -1
I_IMAGENONE = -2
LVM_GETITEMA = 4101
LVM_GETITEMW = 4171
LVM_GETITEM = 4171
LVM_SETITEMA = 4102
LVM_SETITEMW = 4172
LVM_SETITEM = 4172
LVM_INSERTITEMA = 4103
LVM_INSERTITEMW = 4173
LVM_INSERTITEM = 4173
LVM_DELETEITEM = 4104
LVM_DELETEALLITEMS = 4105
LVM_GETCALLBACKMASK = 4106
LVM_SETCALLBACKMASK = 4107
LVNI_ALL = 0
LVNI_FOCUSED = 1
LVNI_SELECTED = 2
LVNI_CUT = 4
LVNI_DROPHILITED = 8
LVNI_VISIBLEORDER = 16
LVNI_PREVIOUS = 32
LVNI_VISIBLEONLY = 64
LVNI_SAMEGROUPONLY = 128
LVNI_ABOVE = 256
LVNI_BELOW = 512
LVNI_TOLEFT = 1024
LVNI_TORIGHT = 2048
LVM_GETNEXTITEM = 4108
LVM_FINDITEMA = 4109
LVM_FINDITEMW = 4179
LVM_FINDITEM = 4179
LVIR_BOUNDS = 0
LVIR_ICON = 1
LVIR_LABEL = 2
LVIR_SELECTBOUNDS = 3
LVM_GETITEMRECT = 4110
LVM_SETITEMPOSITION = 4111
LVM_GETITEMPOSITION = 4112
LVM_GETSTRINGWIDTHA = 4113
LVM_GETSTRINGWIDTHW = 4183
LVM_GETSTRINGWIDTH = 4183
LVM_HITTEST = 4114
LVM_ENSUREVISIBLE = 4115
LVM_SCROLL = 4116
LVM_REDRAWITEMS = 4117
LVA_DEFAULT = 0
LVA_ALIGNLEFT = 1
LVA_ALIGNTOP = 2
LVA_SNAPTOGRID = 5
LVM_ARRANGE = 4118
LVM_EDITLABELA = 4119
LVM_EDITLABELW = 4214
LVM_EDITLABEL = 4214
LVM_GETEDITCONTROL = 4120
LVM_GETCOLUMNA = 4121
LVM_GETCOLUMNW = 4191
LVM_GETCOLUMN = 4191
LVM_SETCOLUMNA = 4122
LVM_SETCOLUMNW = 4192
LVM_SETCOLUMN = 4192
LVM_INSERTCOLUMNA = 4123
LVM_INSERTCOLUMNW = 4193
LVM_INSERTCOLUMN = 4193
LVM_DELETECOLUMN = 4124
LVM_GETCOLUMNWIDTH = 4125
LVSCW_AUTOSIZE = -1
LVSCW_AUTOSIZE_USEHEADER = -2
LVM_SETCOLUMNWIDTH = 4126
LVM_GETHEADER = 4127
LVM_CREATEDRAGIMAGE = 4129
LVM_GETVIEWRECT = 4130
LVM_GETTEXTCOLOR = 4131
LVM_SETTEXTCOLOR = 4132
LVM_GETTEXTBKCOLOR = 4133
LVM_SETTEXTBKCOLOR = 4134
LVM_GETTOPINDEX = 4135
LVM_GETCOUNTPERPAGE = 4136
LVM_GETORIGIN = 4137
LVM_UPDATE = 4138
LVM_SETITEMSTATE = 4139
LVM_GETITEMSTATE = 4140
LVM_GETITEMTEXTA = 4141
LVM_GETITEMTEXTW = 4211
LVM_GETITEMTEXT = 4211
LVM_SETITEMTEXTA = 4142
LVM_SETITEMTEXTW = 4212
LVM_SETITEMTEXT = 4212
LVSICF_NOINVALIDATEALL = 1
LVSICF_NOSCROLL = 2
LVM_SETITEMCOUNT = 4143
LVM_SORTITEMS = 4144
LVM_SETITEMPOSITION32 = 4145
LVM_GETSELECTEDCOUNT = 4146
LVM_GETITEMSPACING = 4147
LVM_GETISEARCHSTRINGA = 4148
LVM_GETISEARCHSTRINGW = 4213
LVM_GETISEARCHSTRING = 4213
LVM_SETICONSPACING = 4149
LVM_SETEXTENDEDLISTVIEWSTYLE = 4150
LVM_GETEXTENDEDLISTVIEWSTYLE = 4151
LVS_EX_GRIDLINES = 1
LVS_EX_SUBITEMIMAGES = 2
LVS_EX_CHECKBOXES = 4
LVS_EX_TRACKSELECT = 8
LVS_EX_HEADERDRAGDROP = 16
LVS_EX_FULLROWSELECT = 32
LVS_EX_ONECLICKACTIVATE = 64
LVS_EX_TWOCLICKACTIVATE = 128
LVS_EX_FLATSB = 256
LVS_EX_REGIONAL = 512
LVS_EX_INFOTIP = 1024
LVS_EX_UNDERLINEHOT = 2048
LVS_EX_UNDERLINECOLD = 4096
LVS_EX_MULTIWORKAREAS = 8192
LVS_EX_LABELTIP = 16384
LVS_EX_BORDERSELECT = 32768
LVS_EX_DOUBLEBUFFER = 65536
LVS_EX_HIDELABELS = 131072
LVS_EX_SINGLEROW = 262144
LVS_EX_SNAPTOGRID = 524288
LVS_EX_SIMPLESELECT = 1048576
LVS_EX_JUSTIFYCOLUMNS = 2097152
LVS_EX_TRANSPARENTBKGND = 4194304
LVS_EX_TRANSPARENTSHADOWTEXT = 8388608
LVS_EX_AUTOAUTOARRANGE = 16777216
LVS_EX_HEADERINALLVIEWS = 33554432
LVS_EX_AUTOCHECKSELECT = 134217728
LVS_EX_AUTOSIZECOLUMNS = 268435456
LVS_EX_COLUMNSNAPPOINTS = 1073741824
LVS_EX_COLUMNOVERFLOW = 2147483648
LVM_GETSUBITEMRECT = 4152
LVM_SUBITEMHITTEST = 4153
LVM_SETCOLUMNORDERARRAY = 4154
LVM_GETCOLUMNORDERARRAY = 4155
LVM_SETHOTITEM = 4156
LVM_GETHOTITEM = 4157
LVM_SETHOTCURSOR = 4158
LVM_GETHOTCURSOR = 4159
LVM_APPROXIMATEVIEWRECT = 4160
LV_MAX_WORKAREAS = 16
LVM_SETWORKAREAS = 4161
LVM_GETWORKAREAS = 4166
LVM_GETNUMBEROFWORKAREAS = 4169
LVM_GETSELECTIONMARK = 4162
LVM_SETSELECTIONMARK = 4163
LVM_SETHOVERTIME = 4167
LVM_GETHOVERTIME = 4168
LVM_SETTOOLTIPS = 4170
LVM_GETTOOLTIPS = 4174
LVM_SORTITEMSEX = 4177
LVM_SETBKIMAGEA = 4164
LVM_SETBKIMAGEW = 4234
LVM_GETBKIMAGEA = 4165
LVM_GETBKIMAGEW = 4235
LVM_SETSELECTEDCOLUMN = 4236
LV_VIEW_ICON = 0
LV_VIEW_DETAILS = 1
LV_VIEW_SMALLICON = 2
LV_VIEW_LIST = 3
LV_VIEW_TILE = 4
LV_VIEW_MAX = 4
LVM_SETVIEW = 4238
LVM_GETVIEW = 4239
LVGF_ALIGN = 8
LVGF_GROUPID = 16
LVGF_SUBTITLE = 256
LVGF_TASK = 512
LVGF_DESCRIPTIONTOP = 1024
LVGF_DESCRIPTIONBOTTOM = 2048
LVGF_TITLEIMAGE = 4096
LVGF_EXTENDEDIMAGE = 8192
LVGF_ITEMS = 16384
LVGF_SUBSET = 32768
LVGF_SUBSETITEMS = 65536
LVM_INSERTGROUP = 4241
LVM_SETGROUPINFO = 4243
LVM_GETGROUPINFO = 4245
LVM_REMOVEGROUP = 4246
LVM_MOVEGROUP = 4247
LVM_GETGROUPCOUNT = 4248
LVM_GETGROUPINFOBYINDEX = 4249
LVM_MOVEITEMTOGROUP = 4250
LVGGR_GROUP = 0
LVGGR_HEADER = 1
LVGGR_LABEL = 2
LVGGR_SUBSETLINK = 3
LVM_GETGROUPRECT = 4194
LVGMF_NONE = 0
LVGMF_BORDERSIZE = 1
LVGMF_BORDERCOLOR = 2
LVGMF_TEXTCOLOR = 4
LVM_SETGROUPMETRICS = 4251
LVM_GETGROUPMETRICS = 4252
LVM_ENABLEGROUPVIEW = 4253
LVM_SORTGROUPS = 4254
LVM_INSERTGROUPSORTED = 4255
LVM_REMOVEALLGROUPS = 4256
LVM_HASGROUP = 4257
LVM_GETGROUPSTATE = 4188
LVM_GETFOCUSEDGROUP = 4189
LVTVIF_EXTENDED = 4
LVM_SETTILEVIEWINFO = 4258
LVM_GETTILEVIEWINFO = 4259
LVM_SETTILEINFO = 4260
LVM_GETTILEINFO = 4261
LVM_SETINSERTMARK = 4262
LVM_GETINSERTMARK = 4263
LVM_INSERTMARKHITTEST = 4264
LVM_GETINSERTMARKRECT = 4265
LVM_SETINSERTMARKCOLOR = 4266
LVM_GETINSERTMARKCOLOR = 4267
LVM_SETINFOTIP = 4269
LVM_GETSELECTEDCOLUMN = 4270
LVM_ISGROUPVIEWENABLED = 4271
LVM_GETOUTLINECOLOR = 4272
LVM_SETOUTLINECOLOR = 4273
LVM_CANCELEDITLABEL = 4275
LVM_MAPINDEXTOID = 4276
LVM_MAPIDTOINDEX = 4277
LVM_ISITEMVISIBLE = 4278
LVM_GETEMPTYTEXT = 4300
LVM_GETFOOTERRECT = 4301
LVFF_ITEMCOUNT = 1
LVM_GETFOOTERINFO = 4302
LVM_GETFOOTERITEMRECT = 4303
LVFIS_FOCUSED = 1
LVM_GETFOOTERITEM = 4304
LVM_GETITEMINDEXRECT = 4305
LVM_SETITEMINDEXSTATE = 4306
LVM_GETNEXTITEMINDEX = 4307
LVM_SETBKIMAGE = 4234
LVM_GETBKIMAGE = 4235
LVKF_ALT = 1
LVKF_CONTROL = 2
LVKF_SHIFT = 4
LVCDRF_NOSELECT = 65536
LVCDRF_NOGROUPFRAME = 131072
LVNSCH_DEFAULT = -1
LVNSCH_ERROR = -2
LVNSCH_IGNORE = -3
WC_TREEVIEWA = 'SysTreeView32'
WC_TREEVIEWW = 'SysTreeView32'
WC_TREEVIEW = 'SysTreeView32'
TVS_HASBUTTONS = 1
TVS_HASLINES = 2
TVS_LINESATROOT = 4
TVS_EDITLABELS = 8
TVS_DISABLEDRAGDROP = 16
TVS_SHOWSELALWAYS = 32
TVS_RTLREADING = 64
TVS_NOTOOLTIPS = 128
TVS_CHECKBOXES = 256
TVS_TRACKSELECT = 512
TVS_SINGLEEXPAND = 1024
TVS_INFOTIP = 2048
TVS_FULLROWSELECT = 4096
TVS_NOSCROLL = 8192
TVS_NONEVENHEIGHT = 16384
TVS_NOHSCROLL = 32768
TVS_EX_NOSINGLECOLLAPSE = 1
TVS_EX_MULTISELECT = 2
TVS_EX_DOUBLEBUFFER = 4
TVS_EX_NOINDENTSTATE = 8
TVS_EX_RICHTOOLTIP = 16
TVS_EX_AUTOHSCROLL = 32
TVS_EX_FADEINOUTEXPANDOS = 64
TVS_EX_PARTIALCHECKBOXES = 128
TVS_EX_EXCLUSIONCHECKBOXES = 256
TVS_EX_DIMMEDCHECKBOXES = 512
TVS_EX_DRAWIMAGEASYNC = 1024
TVM_INSERTITEMA = 4352
TVM_INSERTITEMW = 4402
TVM_INSERTITEM = 4402
TVM_DELETEITEM = 4353
TVM_EXPAND = 4354
TVM_GETITEMRECT = 4356
TVM_GETCOUNT = 4357
TVM_GETINDENT = 4358
TVM_SETINDENT = 4359
TVM_GETIMAGELIST = 4360
TVSIL_NORMAL = 0
TVSIL_STATE = 2
TVM_SETIMAGELIST = 4361
TVM_GETNEXTITEM = 4362
TVGN_ROOT = 0
TVGN_NEXT = 1
TVGN_PREVIOUS = 2
TVGN_PARENT = 3
TVGN_CHILD = 4
TVGN_FIRSTVISIBLE = 5
TVGN_NEXTVISIBLE = 6
TVGN_PREVIOUSVISIBLE = 7
TVGN_DROPHILITE = 8
TVGN_CARET = 9
TVGN_LASTVISIBLE = 10
TVGN_NEXTSELECTED = 11
TVSI_NOSINGLEEXPAND = 32768
TVM_SELECTITEM = 4363
TVM_GETITEMA = 4364
TVM_GETITEMW = 4414
TVM_GETITEM = 4414
TVM_SETITEMA = 4365
TVM_SETITEMW = 4415
TVM_SETITEM = 4415
TVM_EDITLABELA = 4366
TVM_EDITLABELW = 4417
TVM_EDITLABEL = 4417
TVM_GETEDITCONTROL = 4367
TVM_GETVISIBLECOUNT = 4368
TVM_HITTEST = 4369
TVM_CREATEDRAGIMAGE = 4370
TVM_SORTCHILDREN = 4371
TVM_ENSUREVISIBLE = 4372
TVM_SORTCHILDRENCB = 4373
TVM_ENDEDITLABELNOW = 4374
TVM_GETISEARCHSTRINGA = 4375
TVM_GETISEARCHSTRINGW = 4416
TVM_GETISEARCHSTRING = 4416
TVM_SETTOOLTIPS = 4376
TVM_GETTOOLTIPS = 4377
TVM_SETINSERTMARK = 4378
TVM_SETUNICODEFORMAT = 8197
TVM_GETUNICODEFORMAT = 8198
TVM_SETITEMHEIGHT = 4379
TVM_GETITEMHEIGHT = 4380
TVM_SETBKCOLOR = 4381
TVM_SETTEXTCOLOR = 4382
TVM_GETBKCOLOR = 4383
TVM_GETTEXTCOLOR = 4384
TVM_SETSCROLLTIME = 4385
TVM_GETSCROLLTIME = 4386
TVM_SETINSERTMARKCOLOR = 4389
TVM_GETINSERTMARKCOLOR = 4390
TVM_SETBORDER = 4387
TVSBF_XBORDER = 1
TVSBF_YBORDER = 2
TVM_GETITEMSTATE = 4391
TVM_SETLINECOLOR = 4392
TVM_GETLINECOLOR = 4393
TVM_MAPACCIDTOHTREEITEM = 4394
TVM_MAPHTREEITEMTOACCID = 4395
TVM_SETEXTENDEDSTYLE = 4396
TVM_GETEXTENDEDSTYLE = 4397
TVM_SETAUTOSCROLLINFO = 4411
TVM_SETHOT = 4410
TVM_GETSELECTEDCOUNT = 4422
TVM_SHOWINFOTIP = 4423
TVM_GETITEMPARTRECT = 4424
TVNRET_DEFAULT = 0
TVNRET_SKIPOLD = 1
TVNRET_SKIPNEW = 2
TVCDRF_NOIMAGES = 65536
WC_COMBOBOXEXW = 'ComboBoxEx32'
WC_COMBOBOXEXA = 'ComboBoxEx32'
WC_COMBOBOXEX = 'ComboBoxEx32'
CBEM_INSERTITEMA = 1025
CBEM_SETIMAGELIST = 1026
CBEM_GETIMAGELIST = 1027
CBEM_GETITEMA = 1028
CBEM_SETITEMA = 1029
CBEM_GETCOMBOCONTROL = 1030
CBEM_GETEDITCONTROL = 1031
CBEM_SETEXSTYLE = 1032
CBEM_SETEXTENDEDSTYLE = 1038
CBEM_GETEXSTYLE = 1033
CBEM_GETEXTENDEDSTYLE = 1033
CBEM_SETUNICODEFORMAT = 8197
CBEM_GETUNICODEFORMAT = 8198
CBEM_HASEDITCHANGED = 1034
CBEM_INSERTITEMW = 1035
CBEM_SETITEMW = 1036
CBEM_GETITEMW = 1037
CBEM_INSERTITEM = 1035
CBEM_SETITEM = 1036
CBEM_GETITEM = 1037
CBEM_SETWINDOWTHEME = 8203
CBES_EX_NOEDITIMAGE = 1
CBES_EX_NOEDITIMAGEINDENT = 2
CBES_EX_PATHWORDBREAKPROC = 4
CBES_EX_NOSIZELIMIT = 8
CBES_EX_CASESENSITIVE = 16
CBES_EX_TEXTENDELLIPSIS = 32
CBENF_KILLFOCUS = 1
CBENF_RETURN = 2
CBENF_ESCAPE = 3
CBENF_DROPDOWN = 4
CBEMAXSTRLEN = 260
WC_TABCONTROLA = 'SysTabControl32'
WC_TABCONTROLW = 'SysTabControl32'
WC_TABCONTROL = 'SysTabControl32'
TCS_SCROLLOPPOSITE = 1
TCS_BOTTOM = 2
TCS_RIGHT = 2
TCS_MULTISELECT = 4
TCS_FLATBUTTONS = 8
TCS_FORCEICONLEFT = 16
TCS_FORCELABELLEFT = 32
TCS_HOTTRACK = 64
TCS_VERTICAL = 128
TCS_TABS = 0
TCS_BUTTONS = 256
TCS_SINGLELINE = 0
TCS_MULTILINE = 512
TCS_RIGHTJUSTIFY = 0
TCS_FIXEDWIDTH = 1024
TCS_RAGGEDRIGHT = 2048
TCS_FOCUSONBUTTONDOWN = 4096
TCS_OWNERDRAWFIXED = 8192
TCS_TOOLTIPS = 16384
TCS_FOCUSNEVER = 32768
TCS_EX_FLATSEPARATORS = 1
TCS_EX_REGISTERDROP = 2
TCM_GETIMAGELIST = 4866
TCM_SETIMAGELIST = 4867
TCM_GETITEMCOUNT = 4868
TCM_GETITEMA = 4869
TCM_GETITEMW = 4924
TCM_GETITEM = 4924
TCM_SETITEMA = 4870
TCM_SETITEMW = 4925
TCM_SETITEM = 4925
TCM_INSERTITEMA = 4871
TCM_INSERTITEMW = 4926
TCM_INSERTITEM = 4926
TCM_DELETEITEM = 4872
TCM_DELETEALLITEMS = 4873
TCM_GETITEMRECT = 4874
TCM_GETCURSEL = 4875
TCM_SETCURSEL = 4876
TCM_HITTEST = 4877
TCM_SETITEMEXTRA = 4878
TCM_ADJUSTRECT = 4904
TCM_SETITEMSIZE = 4905
TCM_REMOVEIMAGE = 4906
TCM_SETPADDING = 4907
TCM_GETROWCOUNT = 4908
TCM_GETTOOLTIPS = 4909
TCM_SETTOOLTIPS = 4910
TCM_GETCURFOCUS = 4911
TCM_SETCURFOCUS = 4912
TCM_SETMINTABWIDTH = 4913
TCM_DESELECTALL = 4914
TCM_HIGHLIGHTITEM = 4915
TCM_SETEXTENDEDSTYLE = 4916
TCM_GETEXTENDEDSTYLE = 4917
TCM_SETUNICODEFORMAT = 8197
TCM_GETUNICODEFORMAT = 8198
ANIMATE_CLASSW = 'SysAnimate32'
ANIMATE_CLASSA = 'SysAnimate32'
ANIMATE_CLASS = 'SysAnimate32'
ACS_CENTER = 1
ACS_TRANSPARENT = 2
ACS_AUTOPLAY = 4
ACS_TIMER = 8
ACM_OPENA = 1124
ACM_OPENW = 1127
ACM_OPEN = 1127
ACM_PLAY = 1125
ACM_STOP = 1126
ACM_ISPLAYING = 1128
ACN_START = 1
ACN_STOP = 2
MONTHCAL_CLASSW = 'SysMonthCal32'
MONTHCAL_CLASSA = 'SysMonthCal32'
MONTHCAL_CLASS = 'SysMonthCal32'
MCM_FIRST = 4096
MCM_GETCURSEL = 4097
MCM_SETCURSEL = 4098
MCM_GETMAXSELCOUNT = 4099
MCM_SETMAXSELCOUNT = 4100
MCM_GETSELRANGE = 4101
MCM_SETSELRANGE = 4102
MCM_GETMONTHRANGE = 4103
MCM_SETDAYSTATE = 4104
MCM_GETMINREQRECT = 4105
MCM_SETCOLOR = 4106
MCM_GETCOLOR = 4107
MCSC_BACKGROUND = 0
MCSC_TEXT = 1
MCSC_TITLEBK = 2
MCSC_TITLETEXT = 3
MCSC_MONTHBK = 4
MCSC_TRAILINGTEXT = 5
MCM_SETTODAY = 4108
MCM_GETTODAY = 4109
MCM_HITTEST = 4110
MCM_SETFIRSTDAYOFWEEK = 4111
MCM_GETFIRSTDAYOFWEEK = 4112
MCM_GETRANGE = 4113
MCM_SETRANGE = 4114
MCM_GETMONTHDELTA = 4115
MCM_SETMONTHDELTA = 4116
MCM_GETMAXTODAYWIDTH = 4117
MCM_SETUNICODEFORMAT = 8197
MCM_GETUNICODEFORMAT = 8198
MCM_GETCURRENTVIEW = 4118
MCM_GETCALENDARCOUNT = 4119
MCM_GETCALENDARGRIDINFO = 4120
MCM_GETCALID = 4123
MCM_SETCALID = 4124
MCM_SIZERECTTOMIN = 4125
MCM_SETCALENDARBORDER = 4126
MCM_GETCALENDARBORDER = 4127
MCM_SETCURRENTVIEW = 4128
MCS_DAYSTATE = 1
MCS_MULTISELECT = 2
MCS_WEEKNUMBERS = 4
MCS_NOTODAYCIRCLE = 8
MCS_NOTODAY = 16
MCS_NOTRAILINGDATES = 64
MCS_SHORTDAYSOFWEEK = 128
MCS_NOSELCHANGEONNAV = 256
GMR_VISIBLE = 0
GMR_DAYSTATE = 1
DATETIMEPICK_CLASSW = 'SysDateTimePick32'
DATETIMEPICK_CLASSA = 'SysDateTimePick32'
DATETIMEPICK_CLASS = 'SysDateTimePick32'
DTM_FIRST = 4096
DTM_GETSYSTEMTIME = 4097
DTM_SETSYSTEMTIME = 4098
DTM_GETRANGE = 4099
DTM_SETRANGE = 4100
DTM_SETFORMATA = 4101
DTM_SETFORMATW = 4146
DTM_SETFORMAT = 4146
DTM_SETMCCOLOR = 4102
DTM_GETMCCOLOR = 4103
DTM_GETMONTHCAL = 4104
DTM_SETMCFONT = 4105
DTM_GETMCFONT = 4106
DTM_SETMCSTYLE = 4107
DTM_GETMCSTYLE = 4108
DTM_CLOSEMONTHCAL = 4109
DTM_GETDATETIMEPICKERINFO = 4110
DTM_GETIDEALSIZE = 4111
DTS_UPDOWN = 1
DTS_SHOWNONE = 2
DTS_SHORTDATEFORMAT = 0
DTS_LONGDATEFORMAT = 4
DTS_SHORTDATECENTURYFORMAT = 12
DTS_TIMEFORMAT = 9
DTS_APPCANPARSE = 16
DTS_RIGHTALIGN = 32
GDTR_MIN = 1
GDTR_MAX = 2
GDT_ERROR = -1
IPM_CLEARADDRESS = 1124
IPM_SETADDRESS = 1125
IPM_GETADDRESS = 1126
IPM_SETRANGE = 1127
IPM_SETFOCUS = 1128
IPM_ISBLANK = 1129
WC_IPADDRESSW = 'SysIPAddress32'
WC_IPADDRESSA = 'SysIPAddress32'
WC_IPADDRESS = 'SysIPAddress32'
WC_PAGESCROLLERW = 'SysPager'
WC_PAGESCROLLERA = 'SysPager'
WC_PAGESCROLLER = 'SysPager'
PGS_VERT = 0
PGS_HORZ = 1
PGS_AUTOSCROLL = 2
PGS_DRAGNDROP = 4
PGF_INVISIBLE = 0
PGF_NORMAL = 1
PGF_GRAYED = 2
PGF_DEPRESSED = 4
PGF_HOT = 8
PGB_TOPORLEFT = 0
PGB_BOTTOMORRIGHT = 1
PGM_SETCHILD = 5121
PGM_RECALCSIZE = 5122
PGM_FORWARDMOUSE = 5123
PGM_SETBKCOLOR = 5124
PGM_GETBKCOLOR = 5125
PGM_SETBORDER = 5126
PGM_GETBORDER = 5127
PGM_SETPOS = 5128
PGM_GETPOS = 5129
PGM_SETBUTTONSIZE = 5130
PGM_GETBUTTONSIZE = 5131
PGM_GETBUTTONSTATE = 5132
PGM_GETDROPTARGET = 8196
PGM_SETSCROLLINFO = 5133
WC_NATIVEFONTCTLW = 'NativeFontCtl'
WC_NATIVEFONTCTLA = 'NativeFontCtl'
WC_NATIVEFONTCTL = 'NativeFontCtl'
NFS_EDIT = 1
NFS_STATIC = 2
NFS_LISTCOMBO = 4
NFS_BUTTON = 8
NFS_ALL = 16
NFS_USEFONTASSOC = 32
WC_BUTTONA = 'Button'
WC_BUTTONW = 'Button'
WC_BUTTON = 'Button'
BCM_GETIDEALSIZE = 5633
BCM_SETIMAGELIST = 5634
BCM_GETIMAGELIST = 5635
BCM_SETTEXTMARGIN = 5636
BCM_GETTEXTMARGIN = 5637
BCN_HOTITEMCHANGE = 4294966047
BST_HOT = 512
BST_DROPDOWNPUSHED = 1024
BS_SPLITBUTTON = 12
BS_DEFSPLITBUTTON = 13
BS_COMMANDLINK = 14
BS_DEFCOMMANDLINK = 15
BCSIF_GLYPH = 1
BCSIF_IMAGE = 2
BCSIF_STYLE = 4
BCSIF_SIZE = 8
BCSS_NOSPLIT = 1
BCSS_STRETCH = 2
BCSS_ALIGNLEFT = 4
BCSS_IMAGE = 8
BCM_SETDROPDOWNSTATE = 5638
BCM_SETSPLITINFO = 5639
BCM_GETSPLITINFO = 5640
BCM_SETNOTE = 5641
BCM_GETNOTE = 5642
BCM_GETNOTELENGTH = 5643
BCM_SETSHIELD = 5644
BCN_DROPDOWN = 4294966048
WC_STATICA = 'Static'
WC_STATICW = 'Static'
WC_STATIC = 'Static'
WC_EDITA = 'Edit'
WC_EDITW = 'Edit'
WC_EDIT = 'Edit'
ES_EX_ALLOWEOL_CR = 1
ES_EX_ALLOWEOL_LF = 2
ES_EX_CONVERT_EOL_ON_PASTE = 4
ES_EX_ZOOMABLE = 16
EM_SETCUEBANNER = 5377
EM_GETCUEBANNER = 5378
EM_SHOWBALLOONTIP = 5379
EM_HIDEBALLOONTIP = 5380
EM_SETHILITE = 5381
EM_GETHILITE = 5382
EM_NOSETFOCUS = 5383
EM_TAKEFOCUS = 5384
EM_SETEXTENDEDSTYLE = 5386
EM_GETEXTENDEDSTYLE = 5387
EM_SETENDOFLINE = 5388
EM_GETENDOFLINE = 5389
EM_ENABLESEARCHWEB = 5390
EM_SEARCHWEB = 5391
EM_SETCARETINDEX = 5393
EM_GETCARETINDEX = 5394
EM_FILELINEFROMCHAR = 5395
EM_FILELINEINDEX = 5396
EM_FILELINELENGTH = 5397
EM_GETFILELINE = 5398
EM_GETFILELINECOUNT = 5399
WC_LISTBOXA = 'ListBox'
WC_LISTBOXW = 'ListBox'
WC_LISTBOX = 'ListBox'
WC_COMBOBOXA = 'ComboBox'
WC_COMBOBOXW = 'ComboBox'
WC_COMBOBOX = 'ComboBox'
CB_SETMINVISIBLE = 5889
CB_GETMINVISIBLE = 5890
CB_SETCUEBANNER = 5891
CB_GETCUEBANNER = 5892
WC_SCROLLBARA = 'ScrollBar'
WC_SCROLLBARW = 'ScrollBar'
WC_SCROLLBAR = 'ScrollBar'
TD_WARNING_ICON = -1
TD_ERROR_ICON = -2
TD_INFORMATION_ICON = -3
TD_SHIELD_ICON = -4
WM_MOUSEHOVER = 673
WM_MOUSELEAVE = 675
HOVER_DEFAULT = 4294967295
WSB_PROP_MASK = 4095
FSB_FLAT_MODE = 2
FSB_ENCARTA_MODE = 1
FSB_REGULAR_MODE = 0
ILDRF_IMAGELOWQUALITY = 1
ILDRF_OVERLAYLOWQUALITY = 16
ILR_DEFAULT = 0
ILR_HORIZONTAL_LEFT = 0
ILR_HORIZONTAL_CENTER = 1
ILR_HORIZONTAL_RIGHT = 2
ILR_VERTICAL_TOP = 0
ILR_VERTICAL_CENTER = 16
ILR_VERTICAL_BOTTOM = 32
ILR_SCALE_CLIP = 0
ILR_SCALE_ASPECTRATIO = 256
ILGOS_ALWAYS = 0
ILGOS_FROMSTANDBY = 1
ILFIP_ALWAYS = 0
ILFIP_FROMSTANDBY = 1
ILDI_PURGE = 1
ILDI_STANDBY = 2
ILDI_RESETACCESS = 4
ILDI_QUERYACCESS = 8
CCHCCCLASS = 32
CCHCCDESC = 32
CCHCCTEXT = 256
CCF_NOTEXT = 1
ctlFirst = 1024
ctlLast = 1279
psh1 = 1024
psh2 = 1025
psh3 = 1026
psh4 = 1027
psh5 = 1028
psh6 = 1029
psh7 = 1030
psh8 = 1031
psh9 = 1032
psh10 = 1033
psh11 = 1034
psh12 = 1035
psh13 = 1036
psh14 = 1037
psh15 = 1038
pshHelp = 1038
psh16 = 1039
chx1 = 1040
chx2 = 1041
chx3 = 1042
chx4 = 1043
chx5 = 1044
chx6 = 1045
chx7 = 1046
chx8 = 1047
chx9 = 1048
chx10 = 1049
chx11 = 1050
chx12 = 1051
chx13 = 1052
chx14 = 1053
chx15 = 1054
chx16 = 1055
rad1 = 1056
rad2 = 1057
rad3 = 1058
rad4 = 1059
rad5 = 1060
rad6 = 1061
rad7 = 1062
rad8 = 1063
rad9 = 1064
rad10 = 1065
rad11 = 1066
rad12 = 1067
rad13 = 1068
rad14 = 1069
rad15 = 1070
rad16 = 1071
grp1 = 1072
grp2 = 1073
grp3 = 1074
grp4 = 1075
frm1 = 1076
frm2 = 1077
frm3 = 1078
frm4 = 1079
rct1 = 1080
rct2 = 1081
rct3 = 1082
rct4 = 1083
ico1 = 1084
ico2 = 1085
ico3 = 1086
ico4 = 1087
stc1 = 1088
stc2 = 1089
stc3 = 1090
stc4 = 1091
stc5 = 1092
stc6 = 1093
stc7 = 1094
stc8 = 1095
stc9 = 1096
stc10 = 1097
stc11 = 1098
stc12 = 1099
stc13 = 1100
stc14 = 1101
stc15 = 1102
stc16 = 1103
stc17 = 1104
stc18 = 1105
stc19 = 1106
stc20 = 1107
stc21 = 1108
stc22 = 1109
stc23 = 1110
stc24 = 1111
stc25 = 1112
stc26 = 1113
stc27 = 1114
stc28 = 1115
stc29 = 1116
stc30 = 1117
stc31 = 1118
stc32 = 1119
lst1 = 1120
lst2 = 1121
lst3 = 1122
lst4 = 1123
lst5 = 1124
lst6 = 1125
lst7 = 1126
lst8 = 1127
lst9 = 1128
lst10 = 1129
lst11 = 1130
lst12 = 1131
lst13 = 1132
lst14 = 1133
lst15 = 1134
lst16 = 1135
cmb1 = 1136
cmb2 = 1137
cmb3 = 1138
cmb4 = 1139
cmb5 = 1140
cmb6 = 1141
cmb7 = 1142
cmb8 = 1143
cmb9 = 1144
cmb10 = 1145
cmb11 = 1146
cmb12 = 1147
cmb13 = 1148
cmb14 = 1149
cmb15 = 1150
cmb16 = 1151
edt1 = 1152
edt2 = 1153
edt3 = 1154
edt4 = 1155
edt5 = 1156
edt6 = 1157
edt7 = 1158
edt8 = 1159
edt9 = 1160
edt10 = 1161
edt11 = 1162
edt12 = 1163
edt13 = 1164
edt14 = 1165
edt15 = 1166
edt16 = 1167
scr1 = 1168
scr2 = 1169
scr3 = 1170
scr4 = 1171
scr5 = 1172
scr6 = 1173
scr7 = 1174
scr8 = 1175
ctl1 = 1184
FILEOPENORD = 1536
MULTIFILEOPENORD = 1537
PRINTDLGORD = 1538
PRNSETUPDLGORD = 1539
FINDDLGORD = 1540
REPLACEDLGORD = 1541
FONTDLGORD = 1542
FORMATDLGORD31 = 1543
FORMATDLGORD30 = 1544
RUNDLGORD = 1545
PAGESETUPDLGORD = 1546
NEWFILEOPENORD = 1547
PRINTDLGEXORD = 1549
PAGESETUPDLGORDMOTIF = 1550
COLORMGMTDLGORD = 1551
NEWFILEOPENV2ORD = 1552
NEWFILEOPENV3ORD = 1553
NEWFORMATDLGWITHLINK = 1591
IDC_MANAGE_LINK = 1592
DA_LAST = 2147483647
DA_ERR = -1
DSA_APPEND = 2147483647
DSA_ERR = -1
DPAM_SORTED = 1
DPAM_NORMAL = 2
DPAM_UNION = 4
DPAM_INTERSECT = 8
DPAS_SORTED = 1
DPAS_INSERTBEFORE = 2
DPAS_INSERTAFTER = 4
DPA_APPEND = 2147483647
DPA_ERR = -1
MAXPROPPAGES = 100
PSP_DEFAULT = 0
PSP_DLGINDIRECT = 1
PSP_USEHICON = 2
PSP_USEICONID = 4
PSP_USETITLE = 8
PSP_RTLREADING = 16
PSP_HASHELP = 32
PSP_USEREFPARENT = 64
PSP_USECALLBACK = 128
PSP_PREMATURE = 1024
PSP_HIDEHEADER = 2048
PSP_USEHEADERTITLE = 4096
PSP_USEHEADERSUBTITLE = 8192
PSP_USEFUSIONCONTEXT = 16384
PSH_DEFAULT = 0
PSH_PROPTITLE = 1
PSH_USEHICON = 2
PSH_USEICONID = 4
PSH_PROPSHEETPAGE = 8
PSH_WIZARDHASFINISH = 16
PSH_WIZARD = 32
PSH_USEPSTARTPAGE = 64
PSH_NOAPPLYNOW = 128
PSH_USECALLBACK = 256
PSH_HASHELP = 512
PSH_MODELESS = 1024
PSH_RTLREADING = 2048
PSH_WIZARDCONTEXTHELP = 4096
PSH_WIZARD97 = 8192
PSH_WATERMARK = 32768
PSH_USEHBMWATERMARK = 65536
PSH_USEHPLWATERMARK = 131072
PSH_STRETCHWATERMARK = 262144
PSH_HEADER = 524288
PSH_USEHBMHEADER = 1048576
PSH_USEPAGELANG = 2097152
PSH_WIZARD_LITE = 4194304
PSH_NOCONTEXTHELP = 33554432
PSH_AEROWIZARD = 16384
PSH_RESIZABLE = 67108864
PSH_HEADERBITMAP = 134217728
PSH_NOMARGIN = 268435456
PSCB_INITIALIZED = 1
PSCB_PRECREATE = 2
PSCB_BUTTONPRESSED = 3
PSNRET_NOERROR = 0
PSNRET_INVALID = 1
PSNRET_INVALID_NOCHANGEPAGE = 2
PSNRET_MESSAGEHANDLED = 3
PSM_SETCURSEL = 1125
PSM_REMOVEPAGE = 1126
PSM_ADDPAGE = 1127
PSM_CHANGED = 1128
PSM_RESTARTWINDOWS = 1129
PSM_REBOOTSYSTEM = 1130
PSM_CANCELTOCLOSE = 1131
PSM_QUERYSIBLINGS = 1132
PSM_UNCHANGED = 1133
PSM_APPLY = 1134
PSM_SETTITLEA = 1135
PSM_SETTITLEW = 1144
PSM_SETTITLE = 1144
PSM_SETWIZBUTTONS = 1136
PSWIZB_BACK = 1
PSWIZB_NEXT = 2
PSWIZB_FINISH = 4
PSWIZB_DISABLEDFINISH = 8
PSWIZBF_ELEVATIONREQUIRED = 1
PSWIZB_CANCEL = 16
PSM_PRESSBUTTON = 1137
PSBTN_BACK = 0
PSBTN_NEXT = 1
PSBTN_FINISH = 2
PSBTN_OK = 3
PSBTN_APPLYNOW = 4
PSBTN_CANCEL = 5
PSBTN_HELP = 6
PSBTN_MAX = 6
PSM_SETCURSELID = 1138
PSM_SETFINISHTEXTA = 1139
PSM_SETFINISHTEXTW = 1145
PSM_SETFINISHTEXT = 1145
PSM_GETTABCONTROL = 1140
PSM_ISDIALOGMESSAGE = 1141
PSM_GETCURRENTPAGEHWND = 1142
PSM_INSERTPAGE = 1143
PSM_SETHEADERTITLEA = 1149
PSM_SETHEADERTITLEW = 1150
PSM_SETHEADERTITLE = 1150
PSM_SETHEADERSUBTITLEA = 1151
PSM_SETHEADERSUBTITLEW = 1152
PSM_SETHEADERSUBTITLE = 1152
PSM_HWNDTOINDEX = 1153
PSM_INDEXTOHWND = 1154
PSM_PAGETOINDEX = 1155
PSM_INDEXTOPAGE = 1156
PSM_IDTOINDEX = 1157
PSM_INDEXTOID = 1158
PSM_GETRESULT = 1159
PSM_RECALCPAGESIZES = 1160
PSM_SETNEXTTEXTW = 1161
PSM_SETNEXTTEXT = 1161
PSWIZB_SHOW = 0
PSWIZB_RESTORE = 1
PSM_SHOWWIZBUTTONS = 1162
PSM_ENABLEWIZBUTTONS = 1163
PSM_SETBUTTONTEXTW = 1164
PSM_SETBUTTONTEXT = 1164
ID_PSRESTARTWINDOWS = 2
WIZ_CXDLG = 276
WIZ_CYDLG = 140
WIZ_CXBMP = 80
WIZ_BODYX = 92
WIZ_BODYCX = 184
PROP_SM_CXDLG = 212
PROP_SM_CYDLG = 188
PROP_MED_CXDLG = 227
PROP_MED_CYDLG = 215
PROP_LG_CXDLG = 252
PROP_LG_CYDLG = 218
MAX_THEMECOLOR = 64
MAX_THEMESIZE = 64
DTBG_CLIPRECT = 1
DTBG_DRAWSOLID = 2
DTBG_OMITBORDER = 4
DTBG_OMITCONTENT = 8
DTBG_COMPUTINGREGION = 16
DTBG_MIRRORDC = 32
DTBG_NOMIRROR = 64
DTT_GRAYED = 1
DTT_FLAGS2VALIDBITS = 1
MAX_INTLIST_COUNT = 402
ETDT_DISABLE = 1
ETDT_ENABLE = 2
ETDT_USETABTEXTURE = 4
ETDT_USEAEROWIZARDTABTEXTURE = 8
SZ_THDOCPROP_DISPLAYNAME = 'DisplayName'
SZ_THDOCPROP_CANONICALNAME = 'ThemeName'
SZ_THDOCPROP_TOOLTIP = 'ToolTip'
SZ_THDOCPROP_AUTHOR = 'author'
WTNCA_NODRAWCAPTION = 1
WTNCA_NODRAWICON = 2
WTNCA_NOSYSMENU = 4
WTNCA_NOMIRRORHELP = 8
TMTVS_RESERVEDLOW = 100000
TMTVS_RESERVEDHIGH = 19999
VSCLASS_AEROWIZARDSTYLE = 'AEROWIZARDSTYLE'
VSCLASS_AEROWIZARD = 'AEROWIZARD'
VSCLASS_BUTTONSTYLE = 'BUTTONSTYLE'
VSCLASS_BUTTON = 'BUTTON'
VSCLASS_COMBOBOXSTYLE = 'COMBOBOXSTYLE'
VSCLASS_COMBOBOX = 'COMBOBOX'
VSCLASS_COMMUNICATIONSSTYLE = 'COMMUNICATIONSSTYLE'
VSCLASS_COMMUNICATIONS = 'COMMUNICATIONS'
VSCLASS_CONTROLPANELSTYLE = 'CONTROLPANELSTYLE'
VSCLASS_CONTROLPANEL = 'CONTROLPANEL'
VSCLASS_DATEPICKERSTYLE = 'DATEPICKERSTYLE'
VSCLASS_DATEPICKER = 'DATEPICKER'
VSCLASS_DRAGDROPSTYLE = 'DRAGDROPSTYLE'
VSCLASS_DRAGDROP = 'DRAGDROP'
VSCLASS_EDITSTYLE = 'EDITSTYLE'
VSCLASS_EDIT = 'EDIT'
VSCLASS_EXPLORERBARSTYLE = 'EXPLORERBARSTYLE'
VSCLASS_EXPLORERBAR = 'EXPLORERBAR'
VSCLASS_FLYOUTSTYLE = 'FLYOUTSTYLE'
VSCLASS_FLYOUT = 'FLYOUT'
VSCLASS_HEADERSTYLE = 'HEADERSTYLE'
VSCLASS_HEADER = 'HEADER'
VSCLASS_LISTBOXSTYLE = 'LISTBOXSTYLE'
VSCLASS_LISTBOX = 'LISTBOX'
VSCLASS_LISTVIEWSTYLE = 'LISTVIEWSTYLE'
VSCLASS_LISTVIEW = 'LISTVIEW'
VSCLASS_MENUSTYLE = 'MENUSTYLE'
VSCLASS_MENU = 'MENU'
VSCLASS_NAVIGATION = 'NAVIGATION'
VSCLASS_PROGRESSSTYLE = 'PROGRESSSTYLE'
VSCLASS_PROGRESS = 'PROGRESS'
VSCLASS_REBARSTYLE = 'REBARSTYLE'
VSCLASS_REBAR = 'REBAR'
VSCLASS_SCROLLBARSTYLE = 'SCROLLBARSTYLE'
VSCLASS_SCROLLBAR = 'SCROLLBAR'
VSCLASS_SPINSTYLE = 'SPINSTYLE'
VSCLASS_SPIN = 'SPIN'
VSCLASS_STATUSSTYLE = 'STATUSSTYLE'
VSCLASS_STATUS = 'STATUS'
VSCLASS_TABSTYLE = 'TABSTYLE'
VSCLASS_TAB = 'TAB'
VSCLASS_TASKDIALOGSTYLE = 'TASKDIALOGSTYLE'
VSCLASS_TASKDIALOG = 'TASKDIALOG'
VSCLASS_TEXTSTYLE = 'TEXTSTYLE'
VSCLASS_TOOLBARSTYLE = 'TOOLBARSTYLE'
VSCLASS_TOOLBAR = 'TOOLBAR'
VSCLASS_TOOLTIPSTYLE = 'TOOLTIPSTYLE'
VSCLASS_TOOLTIP = 'TOOLTIP'
VSCLASS_TRACKBARSTYLE = 'TRACKBARSTYLE'
VSCLASS_TRACKBAR = 'TRACKBAR'
VSCLASS_TREEVIEWSTYLE = 'TREEVIEWSTYLE'
VSCLASS_TREEVIEW = 'TREEVIEW'
VSCLASS_USERTILE = 'USERTILE'
VSCLASS_TEXTSELECTIONGRIPPER = 'TEXTSELECTIONGRIPPER'
VSCLASS_WINDOWSTYLE = 'WINDOWSTYLE'
VSCLASS_WINDOW = 'WINDOW'
VSCLASS_LINK = 'LINK'
VSCLASS_EMPTYMARKUP = 'EMPTYMARKUP'
VSCLASS_STATIC = 'STATIC'
VSCLASS_PAGE = 'PAGE'
VSCLASS_MONTHCAL = 'MONTHCAL'
VSCLASS_CLOCK = 'CLOCK'
VSCLASS_TRAYNOTIFY = 'TRAYNOTIFY'
VSCLASS_TASKBAR = 'TASKBAR'
VSCLASS_TASKBAND = 'TASKBAND'
VSCLASS_STARTPANEL = 'STARTPANEL'
VSCLASS_MENUBAND = 'MENUBAND'
EM_GETSEL = 176
EM_SETSEL = 177
EM_GETRECT = 178
EM_SETRECT = 179
EM_SETRECTNP = 180
EM_SCROLL = 181
EM_LINESCROLL = 182
EM_GETMODIFY = 184
EM_SETMODIFY = 185
EM_GETLINECOUNT = 186
EM_LINEINDEX = 187
EM_SETHANDLE = 188
EM_GETHANDLE = 189
EM_GETTHUMB = 190
EM_LINELENGTH = 193
EM_REPLACESEL = 194
EM_GETLINE = 196
EM_LIMITTEXT = 197
EM_CANUNDO = 198
EM_UNDO = 199
EM_FMTLINES = 200
EM_LINEFROMCHAR = 201
EM_SETTABSTOPS = 203
EM_SETPASSWORDCHAR = 204
EM_EMPTYUNDOBUFFER = 205
EM_GETFIRSTVISIBLELINE = 206
EM_SETREADONLY = 207
EM_SETWORDBREAKPROC = 208
EM_GETWORDBREAKPROC = 209
EM_GETPASSWORDCHAR = 210
EM_SETMARGINS = 211
EM_GETMARGINS = 212
EM_SETIMESTATUS = 216
EM_GETIMESTATUS = 217
EM_ENABLEFEATURE = 218
def _define_CreatePropertySheetPageA():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HPROPSHEETPAGE,POINTER(win32more.UI.Controls.PROPSHEETPAGEA_head))(('CreatePropertySheetPageA', windll['COMCTL32.dll']), ((1, 'constPropSheetPagePointer'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreatePropertySheetPageW():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HPROPSHEETPAGE,POINTER(win32more.UI.Controls.PROPSHEETPAGEW_head))(('CreatePropertySheetPageW', windll['COMCTL32.dll']), ((1, 'constPropSheetPagePointer'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DestroyPropertySheetPage():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HPROPSHEETPAGE)(('DestroyPropertySheetPage', windll['COMCTL32.dll']), ((1, 'param0'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_PropertySheetA():
    try:
        return WINFUNCTYPE(IntPtr,POINTER(win32more.UI.Controls.PROPSHEETHEADERA_V2_head))(('PropertySheetA', windll['COMCTL32.dll']), ((1, 'param0'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_PropertySheetW():
    try:
        return WINFUNCTYPE(IntPtr,POINTER(win32more.UI.Controls.PROPSHEETHEADERW_V2_head))(('PropertySheetW', windll['COMCTL32.dll']), ((1, 'param0'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_InitCommonControls():
    try:
        return WINFUNCTYPE(Void,)(('InitCommonControls', windll['COMCTL32.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_InitCommonControlsEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.UI.Controls.INITCOMMONCONTROLSEX_head))(('InitCommonControlsEx', windll['COMCTL32.dll']), ((1, 'picce'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Create():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HIMAGELIST,Int32,Int32,win32more.UI.Controls.IMAGELIST_CREATION_FLAGS,Int32,Int32)(('ImageList_Create', windll['COMCTL32.dll']), ((1, 'cx'),(1, 'cy'),(1, 'flags'),(1, 'cInitial'),(1, 'cGrow'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Destroy():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST)(('ImageList_Destroy', windll['COMCTL32.dll']), ((1, 'himl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_GetImageCount():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HIMAGELIST)(('ImageList_GetImageCount', windll['COMCTL32.dll']), ((1, 'himl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_SetImageCount():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,UInt32)(('ImageList_SetImageCount', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'uNewCount'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Add():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HIMAGELIST,win32more.Graphics.Gdi.HBITMAP,win32more.Graphics.Gdi.HBITMAP)(('ImageList_Add', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'hbmImage'),(1, 'hbmMask'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_ReplaceIcon():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HIMAGELIST,Int32,win32more.UI.WindowsAndMessaging.HICON)(('ImageList_ReplaceIcon', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'i'),(1, 'hicon'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_SetBkColor():
    try:
        return WINFUNCTYPE(win32more.Foundation.COLORREF,win32more.UI.Controls.HIMAGELIST,win32more.Foundation.COLORREF)(('ImageList_SetBkColor', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'clrBk'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_GetBkColor():
    try:
        return WINFUNCTYPE(win32more.Foundation.COLORREF,win32more.UI.Controls.HIMAGELIST)(('ImageList_GetBkColor', windll['COMCTL32.dll']), ((1, 'himl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_SetOverlayImage():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,Int32)(('ImageList_SetOverlayImage', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'iImage'),(1, 'iOverlay'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Draw():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,win32more.Graphics.Gdi.HDC,Int32,Int32,win32more.UI.Controls.IMAGE_LIST_DRAW_STYLE)(('ImageList_Draw', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'i'),(1, 'hdcDst'),(1, 'x'),(1, 'y'),(1, 'fStyle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Replace():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,win32more.Graphics.Gdi.HBITMAP,win32more.Graphics.Gdi.HBITMAP)(('ImageList_Replace', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'i'),(1, 'hbmImage'),(1, 'hbmMask'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_AddMasked():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HIMAGELIST,win32more.Graphics.Gdi.HBITMAP,win32more.Foundation.COLORREF)(('ImageList_AddMasked', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'hbmImage'),(1, 'crMask'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_DrawEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,win32more.Graphics.Gdi.HDC,Int32,Int32,Int32,Int32,win32more.Foundation.COLORREF,win32more.Foundation.COLORREF,win32more.UI.Controls.IMAGE_LIST_DRAW_STYLE)(('ImageList_DrawEx', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'i'),(1, 'hdcDst'),(1, 'x'),(1, 'y'),(1, 'dx'),(1, 'dy'),(1, 'rgbBk'),(1, 'rgbFg'),(1, 'fStyle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_DrawIndirect():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.UI.Controls.IMAGELISTDRAWPARAMS_head))(('ImageList_DrawIndirect', windll['COMCTL32.dll']), ((1, 'pimldp'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Remove():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32)(('ImageList_Remove', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'i'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_GetIcon():
    try:
        return WINFUNCTYPE(win32more.UI.WindowsAndMessaging.HICON,win32more.UI.Controls.HIMAGELIST,Int32,UInt32)(('ImageList_GetIcon', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'i'),(1, 'flags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_LoadImageA():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HIMAGELIST,win32more.Foundation.HINSTANCE,win32more.Foundation.PSTR,Int32,Int32,win32more.Foundation.COLORREF,UInt32,win32more.UI.WindowsAndMessaging.IMAGE_FLAGS)(('ImageList_LoadImageA', windll['COMCTL32.dll']), ((1, 'hi'),(1, 'lpbmp'),(1, 'cx'),(1, 'cGrow'),(1, 'crMask'),(1, 'uType'),(1, 'uFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_LoadImageW():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HIMAGELIST,win32more.Foundation.HINSTANCE,win32more.Foundation.PWSTR,Int32,Int32,win32more.Foundation.COLORREF,UInt32,win32more.UI.WindowsAndMessaging.IMAGE_FLAGS)(('ImageList_LoadImageW', windll['COMCTL32.dll']), ((1, 'hi'),(1, 'lpbmp'),(1, 'cx'),(1, 'cGrow'),(1, 'crMask'),(1, 'uType'),(1, 'uFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Copy():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,win32more.UI.Controls.HIMAGELIST,Int32,win32more.UI.Controls.IMAGE_LIST_COPY_FLAGS)(('ImageList_Copy', windll['COMCTL32.dll']), ((1, 'himlDst'),(1, 'iDst'),(1, 'himlSrc'),(1, 'iSrc'),(1, 'uFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_BeginDrag():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,Int32,Int32)(('ImageList_BeginDrag', windll['COMCTL32.dll']), ((1, 'himlTrack'),(1, 'iTrack'),(1, 'dxHotspot'),(1, 'dyHotspot'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_EndDrag():
    try:
        return WINFUNCTYPE(Void,)(('ImageList_EndDrag', windll['COMCTL32.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_DragEnter():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,Int32,Int32)(('ImageList_DragEnter', windll['COMCTL32.dll']), ((1, 'hwndLock'),(1, 'x'),(1, 'y'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_DragLeave():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND)(('ImageList_DragLeave', windll['COMCTL32.dll']), ((1, 'hwndLock'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_DragMove():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,Int32,Int32)(('ImageList_DragMove', windll['COMCTL32.dll']), ((1, 'x'),(1, 'y'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_SetDragCursorImage():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,Int32,Int32)(('ImageList_SetDragCursorImage', windll['COMCTL32.dll']), ((1, 'himlDrag'),(1, 'iDrag'),(1, 'dxHotspot'),(1, 'dyHotspot'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_DragShowNolock():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.BOOL)(('ImageList_DragShowNolock', windll['COMCTL32.dll']), ((1, 'fShow'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_GetDragImage():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HIMAGELIST,POINTER(win32more.Foundation.POINT_head),POINTER(win32more.Foundation.POINT_head))(('ImageList_GetDragImage', windll['COMCTL32.dll']), ((1, 'ppt'),(1, 'pptHotspot'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Read():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HIMAGELIST,win32more.System.Com.IStream_head)(('ImageList_Read', windll['COMCTL32.dll']), ((1, 'pstm'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Write():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,win32more.System.Com.IStream_head)(('ImageList_Write', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'pstm'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_ReadEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.System.Com.IStream_head,POINTER(Guid),POINTER(c_void_p))(('ImageList_ReadEx', windll['COMCTL32.dll']), ((1, 'dwFlags'),(1, 'pstm'),(1, 'riid'),(1, 'ppv'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_WriteEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HIMAGELIST,win32more.UI.Controls.IMAGE_LIST_WRITE_STREAM_FLAGS,win32more.System.Com.IStream_head)(('ImageList_WriteEx', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'dwFlags'),(1, 'pstm'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_GetIconSize():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,POINTER(Int32),POINTER(Int32))(('ImageList_GetIconSize', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'cx'),(1, 'cy'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_SetIconSize():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,Int32)(('ImageList_SetIconSize', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'cx'),(1, 'cy'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_GetImageInfo():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HIMAGELIST,Int32,POINTER(win32more.UI.Controls.IMAGEINFO_head))(('ImageList_GetImageInfo', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'i'),(1, 'pImageInfo'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Merge():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HIMAGELIST,win32more.UI.Controls.HIMAGELIST,Int32,win32more.UI.Controls.HIMAGELIST,Int32,Int32,Int32)(('ImageList_Merge', windll['COMCTL32.dll']), ((1, 'himl1'),(1, 'i1'),(1, 'himl2'),(1, 'i2'),(1, 'dx'),(1, 'dy'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_Duplicate():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HIMAGELIST,win32more.UI.Controls.HIMAGELIST)(('ImageList_Duplicate', windll['COMCTL32.dll']), ((1, 'himl'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HIMAGELIST_QueryInterface():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HIMAGELIST,POINTER(Guid),POINTER(c_void_p))(('HIMAGELIST_QueryInterface', windll['COMCTL32.dll']), ((1, 'himl'),(1, 'riid'),(1, 'ppv'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateToolbarEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.HWND,win32more.Foundation.HWND,UInt32,UInt32,Int32,win32more.Foundation.HINSTANCE,UIntPtr,POINTER(win32more.UI.Controls.TBBUTTON_head),Int32,Int32,Int32,Int32,Int32,UInt32)(('CreateToolbarEx', windll['COMCTL32.dll']), ((1, 'hwnd'),(1, 'ws'),(1, 'wID'),(1, 'nBitmaps'),(1, 'hBMInst'),(1, 'wBMID'),(1, 'lpButtons'),(1, 'iNumButtons'),(1, 'dxButton'),(1, 'dyButton'),(1, 'dxBitmap'),(1, 'dyBitmap'),(1, 'uStructSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateMappedBitmap():
    try:
        return WINFUNCTYPE(win32more.Graphics.Gdi.HBITMAP,win32more.Foundation.HINSTANCE,IntPtr,UInt32,POINTER(win32more.UI.Controls.COLORMAP_head),Int32)(('CreateMappedBitmap', windll['COMCTL32.dll']), ((1, 'hInstance'),(1, 'idBitmap'),(1, 'wFlags'),(1, 'lpColorMap'),(1, 'iNumMaps'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawStatusTextA():
    try:
        return WINFUNCTYPE(Void,win32more.Graphics.Gdi.HDC,POINTER(win32more.Foundation.RECT_head),win32more.Foundation.PSTR,UInt32)(('DrawStatusTextA', windll['COMCTL32.dll']), ((1, 'hDC'),(1, 'lprc'),(1, 'pszText'),(1, 'uFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawStatusTextW():
    try:
        return WINFUNCTYPE(Void,win32more.Graphics.Gdi.HDC,POINTER(win32more.Foundation.RECT_head),win32more.Foundation.PWSTR,UInt32)(('DrawStatusTextW', windll['COMCTL32.dll']), ((1, 'hDC'),(1, 'lprc'),(1, 'pszText'),(1, 'uFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateStatusWindowA():
    try:
        return WINFUNCTYPE(win32more.Foundation.HWND,Int32,win32more.Foundation.PSTR,win32more.Foundation.HWND,UInt32)(('CreateStatusWindowA', windll['COMCTL32.dll']), ((1, 'style'),(1, 'lpszText'),(1, 'hwndParent'),(1, 'wID'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateStatusWindowW():
    try:
        return WINFUNCTYPE(win32more.Foundation.HWND,Int32,win32more.Foundation.PWSTR,win32more.Foundation.HWND,UInt32)(('CreateStatusWindowW', windll['COMCTL32.dll']), ((1, 'style'),(1, 'lpszText'),(1, 'hwndParent'),(1, 'wID'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_MenuHelp():
    try:
        return WINFUNCTYPE(Void,UInt32,win32more.Foundation.WPARAM,win32more.Foundation.LPARAM,win32more.UI.WindowsAndMessaging.HMENU,win32more.Foundation.HINSTANCE,win32more.Foundation.HWND,POINTER(UInt32))(('MenuHelp', windll['COMCTL32.dll']), ((1, 'uMsg'),(1, 'wParam'),(1, 'lParam'),(1, 'hMainMenu'),(1, 'hInst'),(1, 'hwndStatus'),(1, 'lpwIDs'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ShowHideMenuCtl():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,UIntPtr,POINTER(Int32))(('ShowHideMenuCtl', windll['COMCTL32.dll']), ((1, 'hWnd'),(1, 'uFlags'),(1, 'lpInfo'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetEffectiveClientRect():
    try:
        return WINFUNCTYPE(Void,win32more.Foundation.HWND,POINTER(win32more.Foundation.RECT_head),POINTER(Int32))(('GetEffectiveClientRect', windll['COMCTL32.dll']), ((1, 'hWnd'),(1, 'lprc'),(1, 'lpInfo'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_MakeDragList():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND)(('MakeDragList', windll['COMCTL32.dll']), ((1, 'hLB'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawInsert():
    try:
        return WINFUNCTYPE(Void,win32more.Foundation.HWND,win32more.Foundation.HWND,Int32)(('DrawInsert', windll['COMCTL32.dll']), ((1, 'handParent'),(1, 'hLB'),(1, 'nItem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_LBItemFromPt():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.Foundation.POINT,win32more.Foundation.BOOL)(('LBItemFromPt', windll['COMCTL32.dll']), ((1, 'hLB'),(1, 'pt'),(1, 'bAutoScroll'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateUpDownControl():
    try:
        return WINFUNCTYPE(win32more.Foundation.HWND,UInt32,Int32,Int32,Int32,Int32,win32more.Foundation.HWND,Int32,win32more.Foundation.HINSTANCE,win32more.Foundation.HWND,Int32,Int32,Int32)(('CreateUpDownControl', windll['COMCTL32.dll']), ((1, 'dwStyle'),(1, 'x'),(1, 'y'),(1, 'cx'),(1, 'cy'),(1, 'hParent'),(1, 'nID'),(1, 'hInst'),(1, 'hBuddy'),(1, 'nUpper'),(1, 'nLower'),(1, 'nPos'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_TaskDialogIndirect():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.UI.Controls.TASKDIALOGCONFIG_head),POINTER(Int32),POINTER(Int32),POINTER(win32more.Foundation.BOOL))(('TaskDialogIndirect', windll['COMCTL32.dll']), ((1, 'pTaskConfig'),(1, 'pnButton'),(1, 'pnRadioButton'),(1, 'pfVerificationFlagChecked'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_TaskDialog():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,win32more.Foundation.HINSTANCE,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,win32more.UI.Controls.TASKDIALOG_COMMON_BUTTON_FLAGS,win32more.Foundation.PWSTR,POINTER(Int32))(('TaskDialog', windll['COMCTL32.dll']), ((1, 'hwndOwner'),(1, 'hInstance'),(1, 'pszWindowTitle'),(1, 'pszMainInstruction'),(1, 'pszContent'),(1, 'dwCommonButtons'),(1, 'pszIcon'),(1, 'pnButton'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_InitMUILanguage():
    try:
        return WINFUNCTYPE(Void,UInt16)(('InitMUILanguage', windll['COMCTL32.dll']), ((1, 'uiLang'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetMUILanguage():
    try:
        return WINFUNCTYPE(UInt16,)(('GetMUILanguage', windll['COMCTL32.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_Create():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HDSA,Int32,Int32)(('DSA_Create', windll['COMCTL32.dll']), ((1, 'cbItem'),(1, 'cItemGrow'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_Destroy():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDSA)(('DSA_Destroy', windll['COMCTL32.dll']), ((1, 'hdsa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_DestroyCallback():
    try:
        return WINFUNCTYPE(Void,win32more.UI.Controls.HDSA,win32more.UI.Controls.PFNDAENUMCALLBACK,c_void_p)(('DSA_DestroyCallback', windll['COMCTL32.dll']), ((1, 'hdsa'),(1, 'pfnCB'),(1, 'pData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_DeleteItem():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDSA,Int32)(('DSA_DeleteItem', windll['COMCTL32.dll']), ((1, 'hdsa'),(1, 'i'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_DeleteAllItems():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDSA)(('DSA_DeleteAllItems', windll['COMCTL32.dll']), ((1, 'hdsa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_EnumCallback():
    try:
        return WINFUNCTYPE(Void,win32more.UI.Controls.HDSA,win32more.UI.Controls.PFNDAENUMCALLBACK,c_void_p)(('DSA_EnumCallback', windll['COMCTL32.dll']), ((1, 'hdsa'),(1, 'pfnCB'),(1, 'pData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_InsertItem():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HDSA,Int32,c_void_p)(('DSA_InsertItem', windll['COMCTL32.dll']), ((1, 'hdsa'),(1, 'i'),(1, 'pitem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_GetItemPtr():
    try:
        return WINFUNCTYPE(c_void_p,win32more.UI.Controls.HDSA,Int32)(('DSA_GetItemPtr', windll['COMCTL32.dll']), ((1, 'hdsa'),(1, 'i'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_GetItem():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDSA,Int32,c_void_p)(('DSA_GetItem', windll['COMCTL32.dll']), ((1, 'hdsa'),(1, 'i'),(1, 'pitem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_SetItem():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDSA,Int32,c_void_p)(('DSA_SetItem', windll['COMCTL32.dll']), ((1, 'hdsa'),(1, 'i'),(1, 'pitem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_Clone():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HDSA,win32more.UI.Controls.HDSA)(('DSA_Clone', windll['COMCTL32.dll']), ((1, 'hdsa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_GetSize():
    try:
        return WINFUNCTYPE(UInt64,win32more.UI.Controls.HDSA)(('DSA_GetSize', windll['COMCTL32.dll']), ((1, 'hdsa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DSA_Sort():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDSA,win32more.UI.Controls.PFNDACOMPARE,win32more.Foundation.LPARAM)(('DSA_Sort', windll['COMCTL32.dll']), ((1, 'pdsa'),(1, 'pfnCompare'),(1, 'lParam'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_Create():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HDPA,Int32)(('DPA_Create', windll['COMCTL32.dll']), ((1, 'cItemGrow'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_CreateEx():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HDPA,Int32,win32more.Foundation.HANDLE)(('DPA_CreateEx', windll['COMCTL32.dll']), ((1, 'cpGrow'),(1, 'hheap'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_Clone():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HDPA,win32more.UI.Controls.HDPA,win32more.UI.Controls.HDPA)(('DPA_Clone', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'hdpaNew'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_Destroy():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDPA)(('DPA_Destroy', windll['COMCTL32.dll']), ((1, 'hdpa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_DestroyCallback():
    try:
        return WINFUNCTYPE(Void,win32more.UI.Controls.HDPA,win32more.UI.Controls.PFNDAENUMCALLBACK,c_void_p)(('DPA_DestroyCallback', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'pfnCB'),(1, 'pData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_DeletePtr():
    try:
        return WINFUNCTYPE(c_void_p,win32more.UI.Controls.HDPA,Int32)(('DPA_DeletePtr', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'i'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_DeleteAllPtrs():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDPA)(('DPA_DeleteAllPtrs', windll['COMCTL32.dll']), ((1, 'hdpa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_EnumCallback():
    try:
        return WINFUNCTYPE(Void,win32more.UI.Controls.HDPA,win32more.UI.Controls.PFNDAENUMCALLBACK,c_void_p)(('DPA_EnumCallback', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'pfnCB'),(1, 'pData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_Grow():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDPA,Int32)(('DPA_Grow', windll['COMCTL32.dll']), ((1, 'pdpa'),(1, 'cp'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_InsertPtr():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HDPA,Int32,c_void_p)(('DPA_InsertPtr', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'i'),(1, 'p'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_SetPtr():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDPA,Int32,c_void_p)(('DPA_SetPtr', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'i'),(1, 'p'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_GetPtr():
    try:
        return WINFUNCTYPE(c_void_p,win32more.UI.Controls.HDPA,IntPtr)(('DPA_GetPtr', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'i'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_GetPtrIndex():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HDPA,c_void_p)(('DPA_GetPtrIndex', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'p'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_GetSize():
    try:
        return WINFUNCTYPE(UInt64,win32more.UI.Controls.HDPA)(('DPA_GetSize', windll['COMCTL32.dll']), ((1, 'hdpa'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_Sort():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDPA,win32more.UI.Controls.PFNDACOMPARE,win32more.Foundation.LPARAM)(('DPA_Sort', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'pfnCompare'),(1, 'lParam'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_LoadStream():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.UI.Controls.HDPA),win32more.UI.Controls.PFNDPASTREAM,win32more.System.Com.IStream_head,c_void_p)(('DPA_LoadStream', windll['COMCTL32.dll']), ((1, 'phdpa'),(1, 'pfn'),(1, 'pstream'),(1, 'pvInstData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_SaveStream():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HDPA,win32more.UI.Controls.PFNDPASTREAM,win32more.System.Com.IStream_head,c_void_p)(('DPA_SaveStream', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'pfn'),(1, 'pstream'),(1, 'pvInstData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_Merge():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HDPA,win32more.UI.Controls.HDPA,UInt32,win32more.UI.Controls.PFNDACOMPARE,win32more.UI.Controls.PFNDPAMERGE,win32more.Foundation.LPARAM)(('DPA_Merge', windll['COMCTL32.dll']), ((1, 'hdpaDest'),(1, 'hdpaSrc'),(1, 'dwFlags'),(1, 'pfnCompare'),(1, 'pfnMerge'),(1, 'lParam'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DPA_Search():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HDPA,c_void_p,Int32,win32more.UI.Controls.PFNDACOMPARE,win32more.Foundation.LPARAM,UInt32)(('DPA_Search', windll['COMCTL32.dll']), ((1, 'hdpa'),(1, 'pFind'),(1, 'iStart'),(1, 'pfnCompare'),(1, 'lParam'),(1, 'options'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_Str_SetPtrW():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Foundation.PWSTR),win32more.Foundation.PWSTR)(('Str_SetPtrW', windll['COMCTL32.dll']), ((1, 'ppsz'),(1, 'psz'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_EnableScrollBar():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,Int32,UInt32)(('FlatSB_EnableScrollBar', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'param1'),(1, 'param2'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_ShowScrollBar():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,win32more.Foundation.BOOL)(('FlatSB_ShowScrollBar', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'code'),(1, 'param2'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_GetScrollRange():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,POINTER(Int32),POINTER(Int32))(('FlatSB_GetScrollRange', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'code'),(1, 'param2'),(1, 'param3'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_GetScrollInfo():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,POINTER(win32more.UI.WindowsAndMessaging.SCROLLINFO_head))(('FlatSB_GetScrollInfo', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'code'),(1, 'param2'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_GetScrollPos():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS)(('FlatSB_GetScrollPos', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'code'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_GetScrollProp():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.Controls.WSB_PROP,POINTER(Int32))(('FlatSB_GetScrollProp', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'propIndex'),(1, 'param2'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_SetScrollPos():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,Int32,win32more.Foundation.BOOL)(('FlatSB_SetScrollPos', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'code'),(1, 'pos'),(1, 'fRedraw'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_SetScrollInfo():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,POINTER(win32more.UI.WindowsAndMessaging.SCROLLINFO_head),win32more.Foundation.BOOL)(('FlatSB_SetScrollInfo', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'code'),(1, 'psi'),(1, 'fRedraw'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_SetScrollRange():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,Int32,Int32,win32more.Foundation.BOOL)(('FlatSB_SetScrollRange', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'code'),(1, 'min'),(1, 'max'),(1, 'fRedraw'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FlatSB_SetScrollProp():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.Controls.WSB_PROP,IntPtr,win32more.Foundation.BOOL)(('FlatSB_SetScrollProp', windll['COMCTL32.dll']), ((1, 'param0'),(1, 'index'),(1, 'newValue'),(1, 'param3'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_InitializeFlatSB():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND)(('InitializeFlatSB', windll['COMCTL32.dll']), ((1, 'param0'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_UninitializeFlatSB():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND)(('UninitializeFlatSB', windll['COMCTL32.dll']), ((1, 'param0'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_LoadIconMetric():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,win32more.Foundation.PWSTR,win32more.UI.Controls._LI_METRIC,POINTER(win32more.UI.WindowsAndMessaging.HICON))(('LoadIconMetric', windll['COMCTL32.dll']), ((1, 'hinst'),(1, 'pszName'),(1, 'lims'),(1, 'phico'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_LoadIconWithScaleDown():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,win32more.Foundation.PWSTR,Int32,Int32,POINTER(win32more.UI.WindowsAndMessaging.HICON))(('LoadIconWithScaleDown', windll['COMCTL32.dll']), ((1, 'hinst'),(1, 'pszName'),(1, 'cx'),(1, 'cy'),(1, 'phico'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawShadowText():
    try:
        return WINFUNCTYPE(Int32,win32more.Graphics.Gdi.HDC,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.Foundation.RECT_head),UInt32,win32more.Foundation.COLORREF,win32more.Foundation.COLORREF,Int32,Int32)(('DrawShadowText', windll['COMCTL32.dll']), ((1, 'hdc'),(1, 'pszText'),(1, 'cch'),(1, 'prc'),(1, 'dwFlags'),(1, 'crText'),(1, 'crShadow'),(1, 'ixOffset'),(1, 'iyOffset'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ImageList_CoCreateInstance():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),win32more.System.Com.IUnknown_head,POINTER(Guid),POINTER(c_void_p))(('ImageList_CoCreateInstance', windll['COMCTL32.dll']), ((1, 'rclsid'),(1, 'punkOuter'),(1, 'riid'),(1, 'ppv'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BeginPanningFeedback():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND)(('BeginPanningFeedback', windll['UxTheme.dll']), ((1, 'hwnd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_UpdatePanningFeedback():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,Int32,Int32,win32more.Foundation.BOOL)(('UpdatePanningFeedback', windll['UxTheme.dll']), ((1, 'hwnd'),(1, 'lTotalOverpanOffsetX'),(1, 'lTotalOverpanOffsetY'),(1, 'fInInertia'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EndPanningFeedback():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.Foundation.BOOL)(('EndPanningFeedback', windll['UxTheme.dll']), ((1, 'hwnd'),(1, 'fAnimateBack'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeAnimationProperty():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.TA_PROPERTY,c_void_p,UInt32,POINTER(UInt32))(('GetThemeAnimationProperty', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iStoryboardId'),(1, 'iTargetId'),(1, 'eProperty'),(1, 'pvProperty'),(1, 'cbSize'),(1, 'pcbSizeOut'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeAnimationTransform():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,UInt32,POINTER(win32more.UI.Controls.TA_TRANSFORM_head),UInt32,POINTER(UInt32))(('GetThemeAnimationTransform', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iStoryboardId'),(1, 'iTargetId'),(1, 'dwTransformIndex'),(1, 'pTransform'),(1, 'cbSize'),(1, 'pcbSizeOut'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeTimingFunction():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,POINTER(win32more.UI.Controls.TA_TIMINGFUNCTION_head),UInt32,POINTER(UInt32))(('GetThemeTimingFunction', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iTimingFunctionId'),(1, 'pTimingFunction'),(1, 'cbSize'),(1, 'pcbSizeOut'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenThemeData():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HTHEME,win32more.Foundation.HWND,win32more.Foundation.PWSTR)(('OpenThemeData', windll['UXTHEME.dll']), ((1, 'hwnd'),(1, 'pszClassList'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenThemeDataEx():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HTHEME,win32more.Foundation.HWND,win32more.Foundation.PWSTR,win32more.UI.Controls.OPEN_THEME_DATA_FLAGS)(('OpenThemeDataEx', windll['UXTHEME.dll']), ((1, 'hwnd'),(1, 'pszClassList'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseThemeData():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME)(('CloseThemeData', windll['UXTHEME.dll']), ((1, 'hTheme'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeBackground():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Foundation.RECT_head))(('DrawThemeBackground', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pRect'),(1, 'pClipRect'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeBackgroundEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.UI.Controls.DTBGOPTS_head))(('DrawThemeBackgroundEx', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pRect'),(1, 'pOptions'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeText():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,win32more.Foundation.PWSTR,Int32,win32more.Graphics.Gdi.DRAW_TEXT_FORMAT,UInt32,POINTER(win32more.Foundation.RECT_head))(('DrawThemeText', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pszText'),(1, 'cchText'),(1, 'dwTextFlags'),(1, 'dwTextFlags2'),(1, 'pRect'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeBackgroundContentRect():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Foundation.RECT_head))(('GetThemeBackgroundContentRect', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pBoundingRect'),(1, 'pContentRect'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeBackgroundExtent():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Foundation.RECT_head))(('GetThemeBackgroundExtent', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pContentRect'),(1, 'pExtentRect'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeBackgroundRegion():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Graphics.Gdi.HRGN))(('GetThemeBackgroundRegion', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pRect'),(1, 'pRegion'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemePartSize():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),win32more.UI.Controls.THEMESIZE,POINTER(win32more.Foundation.SIZE_head))(('GetThemePartSize', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'prc'),(1, 'eSize'),(1, 'psz'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeTextExtent():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,win32more.Foundation.PWSTR,Int32,win32more.Graphics.Gdi.DRAW_TEXT_FORMAT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.Foundation.RECT_head))(('GetThemeTextExtent', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pszText'),(1, 'cchCharCount'),(1, 'dwTextFlags'),(1, 'pBoundingRect'),(1, 'pExtentRect'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeTextMetrics():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Graphics.Gdi.TEXTMETRICW_head))(('GetThemeTextMetrics', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'ptm'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HitTestThemeBackground():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,win32more.UI.Controls.HIT_TEST_BACKGROUND_OPTIONS,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.Gdi.HRGN,win32more.Foundation.POINT,POINTER(UInt16))(('HitTestThemeBackground', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'dwOptions'),(1, 'pRect'),(1, 'hrgn'),(1, 'ptTest'),(1, 'pwHitTestCode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeEdge():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),win32more.Graphics.Gdi.DRAWEDGE_FLAGS,win32more.Graphics.Gdi.DRAW_EDGE_FLAGS,POINTER(win32more.Foundation.RECT_head))(('DrawThemeEdge', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pDestRect'),(1, 'uEdge'),(1, 'uFlags'),(1, 'pContentRect'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeIcon():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,POINTER(win32more.Foundation.RECT_head),win32more.UI.Controls.HIMAGELIST,Int32)(('DrawThemeIcon', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pRect'),(1, 'himl'),(1, 'iImageIndex'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsThemePartDefined():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HTHEME,Int32,Int32)(('IsThemePartDefined', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsThemeBackgroundPartiallyTransparent():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HTHEME,Int32,Int32)(('IsThemeBackgroundPartiallyTransparent', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeColor():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(win32more.Foundation.COLORREF))(('GetThemeColor', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pColor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeMetric():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(Int32))(('GetThemeMetric', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'piVal'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeString():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,Int32,win32more.Foundation.PWSTR,Int32)(('GetThemeString', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pszBuff'),(1, 'cchMaxBuffChars'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeBool():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(win32more.Foundation.BOOL))(('GetThemeBool', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pfVal'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeInt():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(Int32))(('GetThemeInt', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'piVal'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeEnumValue():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(Int32))(('GetThemeEnumValue', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'piVal'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemePosition():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(win32more.Foundation.POINT_head))(('GetThemePosition', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pPoint'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeFont():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,Int32,POINTER(win32more.Graphics.Gdi.LOGFONTW_head))(('GetThemeFont', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pFont'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeRect():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,Int32,POINTER(win32more.Foundation.RECT_head))(('GetThemeRect', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pRect'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeMargins():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.UI.Controls.MARGINS_head))(('GetThemeMargins', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'prc'),(1, 'pMargins'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeIntList():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(win32more.UI.Controls.INTLIST_head))(('GetThemeIntList', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pIntList'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemePropertyOrigin():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,Int32,POINTER(win32more.UI.Controls.PROPERTYORIGIN))(('GetThemePropertyOrigin', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pOrigin'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetWindowTheme():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('SetWindowTheme', windll['UXTHEME.dll']), ((1, 'hwnd'),(1, 'pszSubAppName'),(1, 'pszSubIdList'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeFilename():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,win32more.Foundation.PWSTR,Int32)(('GetThemeFilename', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'pszThemeFileName'),(1, 'cchMaxBuffChars'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeSysColor():
    try:
        return WINFUNCTYPE(win32more.Foundation.COLORREF,win32more.UI.Controls.HTHEME,Int32)(('GetThemeSysColor', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iColorId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeSysColorBrush():
    try:
        return WINFUNCTYPE(win32more.Graphics.Gdi.HBRUSH,win32more.UI.Controls.HTHEME,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID)(('GetThemeSysColorBrush', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iColorId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeSysBool():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HTHEME,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID)(('GetThemeSysBool', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iBoolId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeSysSize():
    try:
        return WINFUNCTYPE(Int32,win32more.UI.Controls.HTHEME,Int32)(('GetThemeSysSize', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iSizeId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeSysFont():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(win32more.Graphics.Gdi.LOGFONTW_head))(('GetThemeSysFont', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iFontId'),(1, 'plf'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeSysString():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,win32more.Foundation.PWSTR,Int32)(('GetThemeSysString', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iStringId'),(1, 'pszStringBuff'),(1, 'cchMaxStringChars'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeSysInt():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,POINTER(Int32))(('GetThemeSysInt', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iIntId'),(1, 'piValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsThemeActive():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,)(('IsThemeActive', windll['UXTHEME.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsAppThemed():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,)(('IsAppThemed', windll['UXTHEME.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetWindowTheme():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HTHEME,win32more.Foundation.HWND)(('GetWindowTheme', windll['UXTHEME.dll']), ((1, 'hwnd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EnableThemeDialogTexture():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32)(('EnableThemeDialogTexture', windll['UxTheme.dll']), ((1, 'hwnd'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsThemeDialogTextureEnabled():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND)(('IsThemeDialogTextureEnabled', windll['UxTheme.dll']), ((1, 'hwnd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeAppProperties():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.SET_THEME_APP_PROPERTIES_FLAGS,)(('GetThemeAppProperties', windll['UXTHEME.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetThemeAppProperties():
    try:
        return WINFUNCTYPE(Void,win32more.UI.Controls.SET_THEME_APP_PROPERTIES_FLAGS)(('SetThemeAppProperties', windll['UxTheme.dll']), ((1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetCurrentThemeName():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,Int32,win32more.Foundation.PWSTR,Int32,win32more.Foundation.PWSTR,Int32)(('GetCurrentThemeName', windll['UXTHEME.dll']), ((1, 'pszThemeFileName'),(1, 'cchMaxNameChars'),(1, 'pszColorBuff'),(1, 'cchMaxColorChars'),(1, 'pszSizeBuff'),(1, 'cchMaxSizeChars'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeDocumentationProperty():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,Int32)(('GetThemeDocumentationProperty', windll['UxTheme.dll']), ((1, 'pszThemeName'),(1, 'pszPropertyName'),(1, 'pszValueBuff'),(1, 'cchMaxValChars'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeParentBackground():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,win32more.Graphics.Gdi.HDC,POINTER(win32more.Foundation.RECT_head))(('DrawThemeParentBackground', windll['UXTHEME.dll']), ((1, 'hwnd'),(1, 'hdc'),(1, 'prc'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EnableTheming():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BOOL)(('EnableTheming', windll['UxTheme.dll']), ((1, 'fEnable'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeParentBackgroundEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,win32more.Graphics.Gdi.HDC,win32more.UI.Controls.DRAW_THEME_PARENT_BACKGROUND_FLAGS,POINTER(win32more.Foundation.RECT_head))(('DrawThemeParentBackgroundEx', windll['UxTheme.dll']), ((1, 'hwnd'),(1, 'hdc'),(1, 'dwFlags'),(1, 'prc'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetWindowThemeAttribute():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,win32more.UI.Controls.WINDOWTHEMEATTRIBUTETYPE,c_void_p,UInt32)(('SetWindowThemeAttribute', windll['UXTHEME.dll']), ((1, 'hwnd'),(1, 'eAttribute'),(1, 'pvAttribute'),(1, 'cbAttribute'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DrawThemeTextEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,win32more.Graphics.Gdi.HDC,Int32,Int32,win32more.Foundation.PWSTR,Int32,win32more.Graphics.Gdi.DRAW_TEXT_FORMAT,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.UI.Controls.DTTOPTS_head))(('DrawThemeTextEx', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'hdc'),(1, 'iPartId'),(1, 'iStateId'),(1, 'pszText'),(1, 'cchText'),(1, 'dwTextFlags'),(1, 'pRect'),(1, 'pOptions'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeBitmap():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,win32more.UI.Controls.THEME_PROPERTY_SYMBOL_ID,win32more.UI.Controls.GET_THEME_BITMAP_FLAGS,POINTER(win32more.Graphics.Gdi.HBITMAP))(('GetThemeBitmap', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'dwFlags'),(1, 'phBitmap'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeStream():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,Int32,POINTER(c_void_p),POINTER(UInt32),win32more.Foundation.HINSTANCE)(('GetThemeStream', windll['UXTHEME.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateId'),(1, 'iPropId'),(1, 'ppvStream'),(1, 'pcbStream'),(1, 'hInst'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BufferedPaintInit():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,)(('BufferedPaintInit', windll['UXTHEME.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_BufferedPaintUnInit():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,)(('BufferedPaintUnInit', windll['UXTHEME.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_BeginBufferedPaint():
    try:
        return WINFUNCTYPE(IntPtr,win32more.Graphics.Gdi.HDC,POINTER(win32more.Foundation.RECT_head),win32more.UI.Controls.BP_BUFFERFORMAT,POINTER(win32more.UI.Controls.BP_PAINTPARAMS_head),POINTER(win32more.Graphics.Gdi.HDC))(('BeginBufferedPaint', windll['UXTHEME.dll']), ((1, 'hdcTarget'),(1, 'prcTarget'),(1, 'dwFormat'),(1, 'pPaintParams'),(1, 'phdc'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EndBufferedPaint():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,IntPtr,win32more.Foundation.BOOL)(('EndBufferedPaint', windll['UXTHEME.dll']), ((1, 'hBufferedPaint'),(1, 'fUpdateTarget'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetBufferedPaintTargetRect():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,IntPtr,POINTER(win32more.Foundation.RECT_head))(('GetBufferedPaintTargetRect', windll['UxTheme.dll']), ((1, 'hBufferedPaint'),(1, 'prc'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetBufferedPaintTargetDC():
    try:
        return WINFUNCTYPE(win32more.Graphics.Gdi.HDC,IntPtr)(('GetBufferedPaintTargetDC', windll['UxTheme.dll']), ((1, 'hBufferedPaint'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetBufferedPaintDC():
    try:
        return WINFUNCTYPE(win32more.Graphics.Gdi.HDC,IntPtr)(('GetBufferedPaintDC', windll['UxTheme.dll']), ((1, 'hBufferedPaint'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetBufferedPaintBits():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,IntPtr,POINTER(POINTER(win32more.Graphics.Gdi.RGBQUAD_head)),POINTER(Int32))(('GetBufferedPaintBits', windll['UXTHEME.dll']), ((1, 'hBufferedPaint'),(1, 'ppbBuffer'),(1, 'pcxRow'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BufferedPaintClear():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,IntPtr,POINTER(win32more.Foundation.RECT_head))(('BufferedPaintClear', windll['UXTHEME.dll']), ((1, 'hBufferedPaint'),(1, 'prc'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BufferedPaintSetAlpha():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,IntPtr,POINTER(win32more.Foundation.RECT_head),Byte)(('BufferedPaintSetAlpha', windll['UxTheme.dll']), ((1, 'hBufferedPaint'),(1, 'prc'),(1, 'alpha'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BufferedPaintStopAllAnimations():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND)(('BufferedPaintStopAllAnimations', windll['UXTHEME.dll']), ((1, 'hwnd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BeginBufferedAnimation():
    try:
        return WINFUNCTYPE(IntPtr,win32more.Foundation.HWND,win32more.Graphics.Gdi.HDC,POINTER(win32more.Foundation.RECT_head),win32more.UI.Controls.BP_BUFFERFORMAT,POINTER(win32more.UI.Controls.BP_PAINTPARAMS_head),POINTER(win32more.UI.Controls.BP_ANIMATIONPARAMS_head),POINTER(win32more.Graphics.Gdi.HDC),POINTER(win32more.Graphics.Gdi.HDC))(('BeginBufferedAnimation', windll['UxTheme.dll']), ((1, 'hwnd'),(1, 'hdcTarget'),(1, 'prcTarget'),(1, 'dwFormat'),(1, 'pPaintParams'),(1, 'pAnimationParams'),(1, 'phdcFrom'),(1, 'phdcTo'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EndBufferedAnimation():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,IntPtr,win32more.Foundation.BOOL)(('EndBufferedAnimation', windll['UxTheme.dll']), ((1, 'hbpAnimation'),(1, 'fUpdateTarget'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BufferedPaintRenderAnimation():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.Graphics.Gdi.HDC)(('BufferedPaintRenderAnimation', windll['UxTheme.dll']), ((1, 'hwnd'),(1, 'hdcTarget'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsCompositionActive():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,)(('IsCompositionActive', windll['UXTHEME.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetThemeTransitionDuration():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.UI.Controls.HTHEME,Int32,Int32,Int32,Int32,POINTER(UInt32))(('GetThemeTransitionDuration', windll['UxTheme.dll']), ((1, 'hTheme'),(1, 'iPartId'),(1, 'iStateIdFrom'),(1, 'iStateIdTo'),(1, 'iPropId'),(1, 'pdwDuration'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CheckDlgButton():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,Int32,win32more.UI.Controls.DLG_BUTTON_CHECK_STATE)(('CheckDlgButton', windll['USER32.dll']), ((1, 'hDlg'),(1, 'nIDButton'),(1, 'uCheck'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CheckRadioButton():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,Int32,Int32,Int32)(('CheckRadioButton', windll['USER32.dll']), ((1, 'hDlg'),(1, 'nIDFirstButton'),(1, 'nIDLastButton'),(1, 'nIDCheckButton'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsDlgButtonChecked():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HWND,Int32)(('IsDlgButtonChecked', windll['USER32.dll']), ((1, 'hDlg'),(1, 'nIDButton'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsCharLowerW():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,Char)(('IsCharLowerW', windll['USER32.dll']), ((1, 'ch'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateSyntheticPointerDevice():
    try:
        return WINFUNCTYPE(win32more.UI.Controls.HSYNTHETICPOINTERDEVICE,win32more.UI.WindowsAndMessaging.POINTER_INPUT_TYPE,UInt32,win32more.UI.Controls.POINTER_FEEDBACK_MODE)(('CreateSyntheticPointerDevice', windll['USER32.dll']), ((1, 'pointerType'),(1, 'maxCount'),(1, 'mode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DestroySyntheticPointerDevice():
    try:
        return WINFUNCTYPE(Void,win32more.UI.Controls.HSYNTHETICPOINTERDEVICE)(('DestroySyntheticPointerDevice', windll['USER32.dll']), ((1, 'device'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RegisterTouchHitTestingWindow():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,UInt32)(('RegisterTouchHitTestingWindow', windll['USER32.dll']), ((1, 'hwnd'),(1, 'value'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EvaluateProximityToRect():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Foundation.RECT_head),POINTER(win32more.UI.Controls.TOUCH_HIT_TESTING_INPUT_head),POINTER(win32more.UI.Controls.TOUCH_HIT_TESTING_PROXIMITY_EVALUATION_head))(('EvaluateProximityToRect', windll['USER32.dll']), ((1, 'controlBoundingBox'),(1, 'pHitTestingInput'),(1, 'pProximityEval'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EvaluateProximityToPolygon():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,UInt32,POINTER(win32more.Foundation.POINT_head),POINTER(win32more.UI.Controls.TOUCH_HIT_TESTING_INPUT_head),POINTER(win32more.UI.Controls.TOUCH_HIT_TESTING_PROXIMITY_EVALUATION_head))(('EvaluateProximityToPolygon', windll['USER32.dll']), ((1, 'numVertices'),(1, 'controlPolygon'),(1, 'pHitTestingInput'),(1, 'pProximityEval'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_PackTouchHitTestingProximityEvaluation():
    try:
        return WINFUNCTYPE(win32more.Foundation.LRESULT,POINTER(win32more.UI.Controls.TOUCH_HIT_TESTING_INPUT_head),POINTER(win32more.UI.Controls.TOUCH_HIT_TESTING_PROXIMITY_EVALUATION_head))(('PackTouchHitTestingProximityEvaluation', windll['USER32.dll']), ((1, 'pHitTestingInput'),(1, 'pProximityEval'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetWindowFeedbackSetting():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.Controls.FEEDBACK_TYPE,UInt32,POINTER(UInt32),c_void_p)(('GetWindowFeedbackSetting', windll['USER32.dll']), ((1, 'hwnd'),(1, 'feedback'),(1, 'dwFlags'),(1, 'pSize'),(1, 'config'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetWindowFeedbackSetting():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.Controls.FEEDBACK_TYPE,UInt32,UInt32,c_void_p)(('SetWindowFeedbackSetting', windll['USER32.dll']), ((1, 'hwnd'),(1, 'feedback'),(1, 'dwFlags'),(1, 'size'),(1, 'configuration'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetScrollPos():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,Int32,win32more.Foundation.BOOL)(('SetScrollPos', windll['USER32.dll']), ((1, 'hWnd'),(1, 'nBar'),(1, 'nPos'),(1, 'bRedraw'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetScrollRange():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,Int32,Int32,win32more.Foundation.BOOL)(('SetScrollRange', windll['USER32.dll']), ((1, 'hWnd'),(1, 'nBar'),(1, 'nMinPos'),(1, 'nMaxPos'),(1, 'bRedraw'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ShowScrollBar():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,win32more.Foundation.BOOL)(('ShowScrollBar', windll['USER32.dll']), ((1, 'hWnd'),(1, 'wBar'),(1, 'bShow'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EnableScrollBar():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,win32more.UI.Controls.ENABLE_SCROLL_BAR_ARROWS)(('EnableScrollBar', windll['USER32.dll']), ((1, 'hWnd'),(1, 'wSBflags'),(1, 'wArrows'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirListA():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.Foundation.PSTR,Int32,Int32,win32more.UI.Controls.DLG_DIR_LIST_FILE_TYPE)(('DlgDirListA', windll['USER32.dll']), ((1, 'hDlg'),(1, 'lpPathSpec'),(1, 'nIDListBox'),(1, 'nIDStaticPath'),(1, 'uFileType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirListW():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.Foundation.PWSTR,Int32,Int32,win32more.UI.Controls.DLG_DIR_LIST_FILE_TYPE)(('DlgDirListW', windll['USER32.dll']), ((1, 'hDlg'),(1, 'lpPathSpec'),(1, 'nIDListBox'),(1, 'nIDStaticPath'),(1, 'uFileType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirSelectExA():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.Foundation.PSTR,Int32,Int32)(('DlgDirSelectExA', windll['USER32.dll']), ((1, 'hwndDlg'),(1, 'lpString'),(1, 'chCount'),(1, 'idListBox'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirSelectExW():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.Foundation.PWSTR,Int32,Int32)(('DlgDirSelectExW', windll['USER32.dll']), ((1, 'hwndDlg'),(1, 'lpString'),(1, 'chCount'),(1, 'idListBox'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirListComboBoxA():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.Foundation.PSTR,Int32,Int32,win32more.UI.Controls.DLG_DIR_LIST_FILE_TYPE)(('DlgDirListComboBoxA', windll['USER32.dll']), ((1, 'hDlg'),(1, 'lpPathSpec'),(1, 'nIDComboBox'),(1, 'nIDStaticPath'),(1, 'uFiletype'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirListComboBoxW():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.Foundation.PWSTR,Int32,Int32,win32more.UI.Controls.DLG_DIR_LIST_FILE_TYPE)(('DlgDirListComboBoxW', windll['USER32.dll']), ((1, 'hDlg'),(1, 'lpPathSpec'),(1, 'nIDComboBox'),(1, 'nIDStaticPath'),(1, 'uFiletype'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirSelectComboBoxExA():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.Foundation.PSTR,Int32,Int32)(('DlgDirSelectComboBoxExA', windll['USER32.dll']), ((1, 'hwndDlg'),(1, 'lpString'),(1, 'cchOut'),(1, 'idComboBox'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DlgDirSelectComboBoxExW():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.Foundation.PWSTR,Int32,Int32)(('DlgDirSelectComboBoxExW', windll['USER32.dll']), ((1, 'hwndDlg'),(1, 'lpString'),(1, 'cchOut'),(1, 'idComboBox'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetScrollInfo():
    try:
        return WINFUNCTYPE(Int32,win32more.Foundation.HWND,win32more.UI.WindowsAndMessaging.SCROLLBAR_CONSTANTS,POINTER(win32more.UI.WindowsAndMessaging.SCROLLINFO_head),win32more.Foundation.BOOL)(('SetScrollInfo', windll['USER32.dll']), ((1, 'hwnd'),(1, 'nBar'),(1, 'lpsi'),(1, 'redraw'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetComboBoxInfo():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,POINTER(win32more.UI.Controls.COMBOBOXINFO_head))(('GetComboBoxInfo', windll['USER32.dll']), ((1, 'hwndCombo'),(1, 'pcbi'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetListBoxInfo():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HWND)(('GetListBoxInfo', windll['USER32.dll']), ((1, 'hwnd'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RegisterPointerDeviceNotifications():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,win32more.Foundation.BOOL)(('RegisterPointerDeviceNotifications', windll['USER32.dll']), ((1, 'window'),(1, 'notifyRange'),))
    except (FileNotFoundError, AttributeError):
        return None
ARROWBTNSTATES = Int32
ABS_UPNORMAL = 1
ABS_UPHOT = 2
ABS_UPPRESSED = 3
ABS_UPDISABLED = 4
ABS_DOWNNORMAL = 5
ABS_DOWNHOT = 6
ABS_DOWNPRESSED = 7
ABS_DOWNDISABLED = 8
ABS_LEFTNORMAL = 9
ABS_LEFTHOT = 10
ABS_LEFTPRESSED = 11
ABS_LEFTDISABLED = 12
ABS_RIGHTNORMAL = 13
ABS_RIGHTHOT = 14
ABS_RIGHTPRESSED = 15
ABS_RIGHTDISABLED = 16
ABS_UPHOVER = 17
ABS_DOWNHOVER = 18
ABS_LEFTHOVER = 19
ABS_RIGHTHOVER = 20
BACKGROUNDSTATES = Int32
EBS_NORMAL = 1
EBS_HOT = 2
EBS_DISABLED = 3
EBS_FOCUSED = 4
EBS_READONLY = 5
EBS_ASSIST = 6
BACKGROUNDWITHBORDERSTATES = Int32
EBWBS_NORMAL = 1
EBWBS_HOT = 2
EBWBS_DISABLED = 3
EBWBS_FOCUSED = 4
BALLOONSTATES = Int32
TTBS_NORMAL = 1
TTBS_LINK = 2
BALLOONSTEMSTATES = Int32
TTBSS_POINTINGUPLEFTWALL = 1
TTBSS_POINTINGUPCENTERED = 2
TTBSS_POINTINGUPRIGHTWALL = 3
TTBSS_POINTINGDOWNRIGHTWALL = 4
TTBSS_POINTINGDOWNCENTERED = 5
TTBSS_POINTINGDOWNLEFTWALL = 6
BARBACKGROUNDSTATES = Int32
MB_ACTIVE = 1
MB_INACTIVE = 2
BARITEMSTATES = Int32
MBI_NORMAL = 1
MBI_HOT = 2
MBI_PUSHED = 3
MBI_DISABLED = 4
MBI_DISABLEDHOT = 5
MBI_DISABLEDPUSHED = 6
BGTYPE = Int32
BT_IMAGEFILE = 0
BT_BORDERFILL = 1
BT_NONE = 2
BODYSTATES = Int32
FBS_NORMAL = 1
FBS_EMPHASIZED = 2
BORDER_HSCROLLSTATES = Int32
LBPSH_NORMAL = 1
LBPSH_FOCUSED = 2
LBPSH_HOT = 3
LBPSH_DISABLED = 4
BORDER_HVSCROLLSTATES = Int32
LBPSHV_NORMAL = 1
LBPSHV_FOCUSED = 2
LBPSHV_HOT = 3
LBPSHV_DISABLED = 4
BORDER_NOSCROLLSTATES = Int32
LBPSN_NORMAL = 1
LBPSN_FOCUSED = 2
LBPSN_HOT = 3
LBPSN_DISABLED = 4
BORDER_VSCROLLSTATES = Int32
LBPSV_NORMAL = 1
LBPSV_FOCUSED = 2
LBPSV_HOT = 3
LBPSV_DISABLED = 4
BORDERSTATES = Int32
CBB_NORMAL = 1
CBB_HOT = 2
CBB_FOCUSED = 3
CBB_DISABLED = 4
BORDERTYPE = Int32
BT_RECT = 0
BT_ROUNDRECT = 1
BT_ELLIPSE = 2
def _define_BP_ANIMATIONPARAMS_head():
    class BP_ANIMATIONPARAMS(Structure):
        pass
    return BP_ANIMATIONPARAMS
def _define_BP_ANIMATIONPARAMS():
    BP_ANIMATIONPARAMS = win32more.UI.Controls.BP_ANIMATIONPARAMS_head
    BP_ANIMATIONPARAMS._fields_ = [
        ('cbSize', UInt32),
        ('dwFlags', UInt32),
        ('style', win32more.UI.Controls.BP_ANIMATIONSTYLE),
        ('dwDuration', UInt32),
    ]
    return BP_ANIMATIONPARAMS
BP_ANIMATIONSTYLE = Int32
BPAS_NONE = 0
BPAS_LINEAR = 1
BPAS_CUBIC = 2
BPAS_SINE = 3
BP_BUFFERFORMAT = Int32
BPBF_COMPATIBLEBITMAP = 0
BPBF_DIB = 1
BPBF_TOPDOWNDIB = 2
BPBF_TOPDOWNMONODIB = 3
def _define_BP_PAINTPARAMS_head():
    class BP_PAINTPARAMS(Structure):
        pass
    return BP_PAINTPARAMS
def _define_BP_PAINTPARAMS():
    BP_PAINTPARAMS = win32more.UI.Controls.BP_PAINTPARAMS_head
    BP_PAINTPARAMS._fields_ = [
        ('cbSize', UInt32),
        ('dwFlags', win32more.UI.Controls.BP_PAINTPARAMS_FLAGS),
        ('prcExclude', POINTER(win32more.Foundation.RECT_head)),
        ('pBlendFunction', POINTER(win32more.Graphics.Gdi.BLENDFUNCTION_head)),
    ]
    return BP_PAINTPARAMS
BP_PAINTPARAMS_FLAGS = UInt32
BPPF_ERASE = 1
BPPF_NOCLIP = 2
BPPF_NONCLIENT = 4
def _define_BUTTON_IMAGELIST_head():
    class BUTTON_IMAGELIST(Structure):
        pass
    return BUTTON_IMAGELIST
def _define_BUTTON_IMAGELIST():
    BUTTON_IMAGELIST = win32more.UI.Controls.BUTTON_IMAGELIST_head
    BUTTON_IMAGELIST._fields_ = [
        ('himl', win32more.UI.Controls.HIMAGELIST),
        ('margin', win32more.Foundation.RECT),
        ('uAlign', win32more.UI.Controls.BUTTON_IMAGELIST_ALIGN),
    ]
    return BUTTON_IMAGELIST
BUTTON_IMAGELIST_ALIGN = UInt32
BUTTON_IMAGELIST_ALIGN_LEFT = 0
BUTTON_IMAGELIST_ALIGN_RIGHT = 1
BUTTON_IMAGELIST_ALIGN_TOP = 2
BUTTON_IMAGELIST_ALIGN_BOTTOM = 3
BUTTON_IMAGELIST_ALIGN_CENTER = 4
def _define_BUTTON_SPLITINFO_head():
    class BUTTON_SPLITINFO(Structure):
        pass
    return BUTTON_SPLITINFO
def _define_BUTTON_SPLITINFO():
    BUTTON_SPLITINFO = win32more.UI.Controls.BUTTON_SPLITINFO_head
    BUTTON_SPLITINFO._fields_ = [
        ('mask', UInt32),
        ('himlGlyph', win32more.UI.Controls.HIMAGELIST),
        ('uSplitStyle', UInt32),
        ('size', win32more.Foundation.SIZE),
    ]
    return BUTTON_SPLITINFO
BUTTONPARTS = Int32
BP_PUSHBUTTON = 1
BP_RADIOBUTTON = 2
BP_CHECKBOX = 3
BP_GROUPBOX = 4
BP_USERBUTTON = 5
BP_COMMANDLINK = 6
BP_COMMANDLINKGLYPH = 7
BP_RADIOBUTTON_HCDISABLED = 8
BP_CHECKBOX_HCDISABLED = 9
BP_GROUPBOX_HCDISABLED = 10
BP_PUSHBUTTONDROPDOWN = 11
CAPTIONSTATES = Int32
CS_ACTIVE = 1
CS_INACTIVE = 2
CS_DISABLED = 3
def _define_CCINFOA_head():
    class CCINFOA(Structure):
        pass
    return CCINFOA
def _define_CCINFOA():
    CCINFOA = win32more.UI.Controls.CCINFOA_head
    CCINFOA._fields_ = [
        ('szClass', win32more.Foundation.CHAR * 32),
        ('flOptions', UInt32),
        ('szDesc', win32more.Foundation.CHAR * 32),
        ('cxDefault', UInt32),
        ('cyDefault', UInt32),
        ('flStyleDefault', UInt32),
        ('flExtStyleDefault', UInt32),
        ('flCtrlTypeMask', UInt32),
        ('szTextDefault', win32more.Foundation.CHAR * 256),
        ('cStyleFlags', Int32),
        ('aStyleFlags', POINTER(win32more.UI.Controls.CCSTYLEFLAGA_head)),
        ('lpfnStyle', win32more.UI.Controls.LPFNCCSTYLEA),
        ('lpfnSizeToText', win32more.UI.Controls.LPFNCCSIZETOTEXTA),
        ('dwReserved1', UInt32),
        ('dwReserved2', UInt32),
    ]
    return CCINFOA
def _define_CCINFOW_head():
    class CCINFOW(Structure):
        pass
    return CCINFOW
def _define_CCINFOW():
    CCINFOW = win32more.UI.Controls.CCINFOW_head
    CCINFOW._fields_ = [
        ('szClass', Char * 32),
        ('flOptions', UInt32),
        ('szDesc', Char * 32),
        ('cxDefault', UInt32),
        ('cyDefault', UInt32),
        ('flStyleDefault', UInt32),
        ('flExtStyleDefault', UInt32),
        ('flCtrlTypeMask', UInt32),
        ('cStyleFlags', Int32),
        ('aStyleFlags', POINTER(win32more.UI.Controls.CCSTYLEFLAGW_head)),
        ('szTextDefault', Char * 256),
        ('lpfnStyle', win32more.UI.Controls.LPFNCCSTYLEW),
        ('lpfnSizeToText', win32more.UI.Controls.LPFNCCSIZETOTEXTW),
        ('dwReserved1', UInt32),
        ('dwReserved2', UInt32),
    ]
    return CCINFOW
def _define_CCSTYLEA_head():
    class CCSTYLEA(Structure):
        pass
    return CCSTYLEA
def _define_CCSTYLEA():
    CCSTYLEA = win32more.UI.Controls.CCSTYLEA_head
    CCSTYLEA._fields_ = [
        ('flStyle', UInt32),
        ('flExtStyle', UInt32),
        ('szText', win32more.Foundation.CHAR * 256),
        ('lgid', UInt16),
        ('wReserved1', UInt16),
    ]
    return CCSTYLEA
def _define_CCSTYLEFLAGA_head():
    class CCSTYLEFLAGA(Structure):
        pass
    return CCSTYLEFLAGA
def _define_CCSTYLEFLAGA():
    CCSTYLEFLAGA = win32more.UI.Controls.CCSTYLEFLAGA_head
    CCSTYLEFLAGA._fields_ = [
        ('flStyle', UInt32),
        ('flStyleMask', UInt32),
        ('pszStyle', win32more.Foundation.PSTR),
    ]
    return CCSTYLEFLAGA
def _define_CCSTYLEFLAGW_head():
    class CCSTYLEFLAGW(Structure):
        pass
    return CCSTYLEFLAGW
def _define_CCSTYLEFLAGW():
    CCSTYLEFLAGW = win32more.UI.Controls.CCSTYLEFLAGW_head
    CCSTYLEFLAGW._fields_ = [
        ('flStyle', UInt32),
        ('flStyleMask', UInt32),
        ('pszStyle', win32more.Foundation.PWSTR),
    ]
    return CCSTYLEFLAGW
def _define_CCSTYLEW_head():
    class CCSTYLEW(Structure):
        pass
    return CCSTYLEW
def _define_CCSTYLEW():
    CCSTYLEW = win32more.UI.Controls.CCSTYLEW_head
    CCSTYLEW._fields_ = [
        ('flStyle', UInt32),
        ('flExtStyle', UInt32),
        ('szText', Char * 256),
        ('lgid', UInt16),
        ('wReserved1', UInt16),
    ]
    return CCSTYLEW
CHECKBOXSTATES = Int32
CBS_UNCHECKEDNORMAL = 1
CBS_UNCHECKEDHOT = 2
CBS_UNCHECKEDPRESSED = 3
CBS_UNCHECKEDDISABLED = 4
CBS_CHECKEDNORMAL = 5
CBS_CHECKEDHOT = 6
CBS_CHECKEDPRESSED = 7
CBS_CHECKEDDISABLED = 8
CBS_MIXEDNORMAL = 9
CBS_MIXEDHOT = 10
CBS_MIXEDPRESSED = 11
CBS_MIXEDDISABLED = 12
CBS_IMPLICITNORMAL = 13
CBS_IMPLICITHOT = 14
CBS_IMPLICITPRESSED = 15
CBS_IMPLICITDISABLED = 16
CBS_EXCLUDEDNORMAL = 17
CBS_EXCLUDEDHOT = 18
CBS_EXCLUDEDPRESSED = 19
CBS_EXCLUDEDDISABLED = 20
CHEVRONSTATES = Int32
CHEVS_NORMAL = 1
CHEVS_HOT = 2
CHEVS_PRESSED = 3
CHEVRONVERTSTATES = Int32
CHEVSV_NORMAL = 1
CHEVSV_HOT = 2
CHEVSV_PRESSED = 3
CLOCKPARTS = Int32
CLP_TIME = 1
CLOCKSTATES = Int32
CLS_NORMAL = 1
CLS_HOT = 2
CLS_PRESSED = 3
CLOSEBUTTONSTATES = Int32
CBS_NORMAL = 1
CBS_HOT = 2
CBS_PUSHED = 3
CBS_DISABLED = 4
CLOSESTATES = Int32
TTCS_NORMAL = 1
TTCS_HOT = 2
TTCS_PRESSED = 3
COLLAPSEBUTTONSTATES = Int32
LVCB_NORMAL = 1
LVCB_HOVER = 2
LVCB_PUSHED = 3
def _define_COLORMAP_head():
    class COLORMAP(Structure):
        pass
    return COLORMAP
def _define_COLORMAP():
    COLORMAP = win32more.UI.Controls.COLORMAP_head
    COLORMAP._fields_ = [
        ('from', win32more.Foundation.COLORREF),
        ('to', win32more.Foundation.COLORREF),
    ]
    return COLORMAP
def _define_COLORSCHEME_head():
    class COLORSCHEME(Structure):
        pass
    return COLORSCHEME
def _define_COLORSCHEME():
    COLORSCHEME = win32more.UI.Controls.COLORSCHEME_head
    COLORSCHEME._fields_ = [
        ('dwSize', UInt32),
        ('clrBtnHighlight', win32more.Foundation.COLORREF),
        ('clrBtnShadow', win32more.Foundation.COLORREF),
    ]
    return COLORSCHEME
COMBOBOX_EX_ITEM_FLAGS = UInt32
CBEIF_DI_SETITEM = 268435456
CBEIF_IMAGE = 2
CBEIF_INDENT = 16
CBEIF_LPARAM = 32
CBEIF_OVERLAY = 8
CBEIF_SELECTEDIMAGE = 4
CBEIF_TEXT = 1
def _define_COMBOBOXEXITEMA_head():
    class COMBOBOXEXITEMA(Structure):
        pass
    return COMBOBOXEXITEMA
def _define_COMBOBOXEXITEMA():
    COMBOBOXEXITEMA = win32more.UI.Controls.COMBOBOXEXITEMA_head
    COMBOBOXEXITEMA._fields_ = [
        ('mask', win32more.UI.Controls.COMBOBOX_EX_ITEM_FLAGS),
        ('iItem', IntPtr),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('iSelectedImage', Int32),
        ('iOverlay', Int32),
        ('iIndent', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return COMBOBOXEXITEMA
def _define_COMBOBOXEXITEMW_head():
    class COMBOBOXEXITEMW(Structure):
        pass
    return COMBOBOXEXITEMW
def _define_COMBOBOXEXITEMW():
    COMBOBOXEXITEMW = win32more.UI.Controls.COMBOBOXEXITEMW_head
    COMBOBOXEXITEMW._fields_ = [
        ('mask', win32more.UI.Controls.COMBOBOX_EX_ITEM_FLAGS),
        ('iItem', IntPtr),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('iSelectedImage', Int32),
        ('iOverlay', Int32),
        ('iIndent', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return COMBOBOXEXITEMW
def _define_COMBOBOXINFO_head():
    class COMBOBOXINFO(Structure):
        pass
    return COMBOBOXINFO
def _define_COMBOBOXINFO():
    COMBOBOXINFO = win32more.UI.Controls.COMBOBOXINFO_head
    COMBOBOXINFO._fields_ = [
        ('cbSize', UInt32),
        ('rcItem', win32more.Foundation.RECT),
        ('rcButton', win32more.Foundation.RECT),
        ('stateButton', win32more.UI.Controls.COMBOBOXINFO_BUTTON_STATE),
        ('hwndCombo', win32more.Foundation.HWND),
        ('hwndItem', win32more.Foundation.HWND),
        ('hwndList', win32more.Foundation.HWND),
    ]
    return COMBOBOXINFO
COMBOBOXINFO_BUTTON_STATE = UInt32
STATE_SYSTEM_INVISIBLE = 32768
STATE_SYSTEM_PRESSED = 8
STATE_SYSTEM_FOCUSABLE = 1048576
STATE_SYSTEM_OFFSCREEN = 65536
STATE_SYSTEM_UNAVAILABLE = 1
COMBOBOXPARTS = Int32
CP_DROPDOWNBUTTON = 1
CP_BACKGROUND = 2
CP_TRANSPARENTBACKGROUND = 3
CP_BORDER = 4
CP_READONLY = 5
CP_DROPDOWNBUTTONRIGHT = 6
CP_DROPDOWNBUTTONLEFT = 7
CP_CUEBANNER = 8
CP_DROPDOWNITEM = 9
COMBOBOXSTYLESTATES = Int32
CBXS_NORMAL = 1
CBXS_HOT = 2
CBXS_PRESSED = 3
CBXS_DISABLED = 4
COMMANDLINKGLYPHSTATES = Int32
CMDLGS_NORMAL = 1
CMDLGS_HOT = 2
CMDLGS_PRESSED = 3
CMDLGS_DISABLED = 4
CMDLGS_DEFAULTED = 5
COMMANDLINKSTATES = Int32
CMDLS_NORMAL = 1
CMDLS_HOT = 2
CMDLS_PRESSED = 3
CMDLS_DISABLED = 4
CMDLS_DEFAULTED = 5
CMDLS_DEFAULTED_ANIMATING = 6
COMMUNICATIONSPARTS = Int32
CSST_TAB = 1
def _define_COMPAREITEMSTRUCT_head():
    class COMPAREITEMSTRUCT(Structure):
        pass
    return COMPAREITEMSTRUCT
def _define_COMPAREITEMSTRUCT():
    COMPAREITEMSTRUCT = win32more.UI.Controls.COMPAREITEMSTRUCT_head
    COMPAREITEMSTRUCT._fields_ = [
        ('CtlType', win32more.UI.Controls.DRAWITEMSTRUCT_CTL_TYPE),
        ('CtlID', UInt32),
        ('hwndItem', win32more.Foundation.HWND),
        ('itemID1', UInt32),
        ('itemData1', UIntPtr),
        ('itemID2', UInt32),
        ('itemData2', UIntPtr),
        ('dwLocaleId', UInt32),
    ]
    return COMPAREITEMSTRUCT
CONTENTALIGNMENT = Int32
CA_LEFT = 0
CA_CENTER = 1
CA_RIGHT = 2
CONTENTAREASTATES = Int32
AW_S_CONTENTAREA_NOMARGIN = 1
CONTENTLINKSTATES = Int32
CPCL_NORMAL = 1
CPCL_HOT = 2
CPCL_PRESSED = 3
CPCL_DISABLED = 4
CONTENTPANESTATES = Int32
TDLGCPS_STANDALONE = 1
CONTROLLABELSTATES = Int32
TS_CONTROLLABEL_NORMAL = 1
TS_CONTROLLABEL_DISABLED = 2
CONTROLPANELPARTS = Int32
CPANEL_NAVIGATIONPANE = 1
CPANEL_CONTENTPANE = 2
CPANEL_NAVIGATIONPANELABEL = 3
CPANEL_CONTENTPANELABEL = 4
CPANEL_TITLE = 5
CPANEL_BODYTEXT = 6
CPANEL_HELPLINK = 7
CPANEL_TASKLINK = 8
CPANEL_GROUPTEXT = 9
CPANEL_CONTENTLINK = 10
CPANEL_SECTIONTITLELINK = 11
CPANEL_LARGECOMMANDAREA = 12
CPANEL_SMALLCOMMANDAREA = 13
CPANEL_BUTTON = 14
CPANEL_MESSAGETEXT = 15
CPANEL_NAVIGATIONPANELINE = 16
CPANEL_CONTENTPANELINE = 17
CPANEL_BANNERAREA = 18
CPANEL_BODYTITLE = 19
COPYSTATES = Int32
DDCOPY_HIGHLIGHT = 1
DDCOPY_NOHIGHLIGHT = 2
CREATELINKSTATES = Int32
DDCREATELINK_HIGHLIGHT = 1
DDCREATELINK_NOHIGHLIGHT = 2
CUEBANNERSTATES = Int32
CBCB_NORMAL = 1
CBCB_HOT = 2
CBCB_PRESSED = 3
CBCB_DISABLED = 4
DATEBORDERSTATES = Int32
DPDB_NORMAL = 1
DPDB_HOT = 2
DPDB_FOCUSED = 3
DPDB_DISABLED = 4
DATEPICKERPARTS = Int32
DP_DATETEXT = 1
DP_DATEBORDER = 2
DP_SHOWCALENDARBUTTONRIGHT = 3
DATETEXTSTATES = Int32
DPDT_NORMAL = 1
DPDT_DISABLED = 2
DPDT_SELECTED = 3
def _define_DATETIMEPICKERINFO_head():
    class DATETIMEPICKERINFO(Structure):
        pass
    return DATETIMEPICKERINFO
def _define_DATETIMEPICKERINFO():
    DATETIMEPICKERINFO = win32more.UI.Controls.DATETIMEPICKERINFO_head
    DATETIMEPICKERINFO._fields_ = [
        ('cbSize', UInt32),
        ('rcCheck', win32more.Foundation.RECT),
        ('stateCheck', UInt32),
        ('rcButton', win32more.Foundation.RECT),
        ('stateButton', UInt32),
        ('hwndEdit', win32more.Foundation.HWND),
        ('hwndUD', win32more.Foundation.HWND),
        ('hwndDropDown', win32more.Foundation.HWND),
    ]
    return DATETIMEPICKERINFO
def _define_DELETEITEMSTRUCT_head():
    class DELETEITEMSTRUCT(Structure):
        pass
    return DELETEITEMSTRUCT
def _define_DELETEITEMSTRUCT():
    DELETEITEMSTRUCT = win32more.UI.Controls.DELETEITEMSTRUCT_head
    DELETEITEMSTRUCT._fields_ = [
        ('CtlType', win32more.UI.Controls.DRAWITEMSTRUCT_CTL_TYPE),
        ('CtlID', UInt32),
        ('itemID', UInt32),
        ('hwndItem', win32more.Foundation.HWND),
        ('itemData', UIntPtr),
    ]
    return DELETEITEMSTRUCT
DLG_BUTTON_CHECK_STATE = UInt32
BST_CHECKED = 1
BST_INDETERMINATE = 2
BST_UNCHECKED = 0
DLG_DIR_LIST_FILE_TYPE = UInt32
DDL_ARCHIVE = 32
DDL_DIRECTORY = 16
DDL_DRIVES = 16384
DDL_EXCLUSIVE = 32768
DDL_HIDDEN = 2
DDL_READONLY = 1
DDL_READWRITE = 0
DDL_SYSTEM = 4
DDL_POSTMSGS = 8192
DOWNHORZSTATES = Int32
DNHZS_NORMAL = 1
DNHZS_HOT = 2
DNHZS_PRESSED = 3
DNHZS_DISABLED = 4
DOWNSTATES = Int32
DNS_NORMAL = 1
DNS_HOT = 2
DNS_PRESSED = 3
DNS_DISABLED = 4
DPAMM_MESSAGE = UInt32
DPAMM_MERGE = 1
DPAMM_DELETE = 2
DPAMM_INSERT = 3
def _define_DPASTREAMINFO_head():
    class DPASTREAMINFO(Structure):
        pass
    return DPASTREAMINFO
def _define_DPASTREAMINFO():
    DPASTREAMINFO = win32more.UI.Controls.DPASTREAMINFO_head
    DPASTREAMINFO._fields_ = [
        ('iPos', Int32),
        ('pvItem', c_void_p),
    ]
    return DPASTREAMINFO
DRAGDROPPARTS = Int32
DD_COPY = 1
DD_MOVE = 2
DD_UPDATEMETADATA = 3
DD_CREATELINK = 4
DD_WARNING = 5
DD_NONE = 6
DD_IMAGEBG = 7
DD_TEXTBG = 8
def _define_DRAGLISTINFO_head():
    class DRAGLISTINFO(Structure):
        pass
    return DRAGLISTINFO
def _define_DRAGLISTINFO():
    DRAGLISTINFO = win32more.UI.Controls.DRAGLISTINFO_head
    DRAGLISTINFO._fields_ = [
        ('uNotification', win32more.UI.Controls.DRAGLISTINFO_NOTIFICATION_FLAGS),
        ('hWnd', win32more.Foundation.HWND),
        ('ptCursor', win32more.Foundation.POINT),
    ]
    return DRAGLISTINFO
DRAGLISTINFO_NOTIFICATION_FLAGS = UInt32
DL_BEGINDRAG = 1157
DL_CANCELDRAG = 1160
DL_DRAGGING = 1158
DL_DROPPED = 1159
DRAW_THEME_PARENT_BACKGROUND_FLAGS = UInt32
DTPB_WINDOWDC = 1
DTPB_USECTLCOLORSTATIC = 2
DTPB_USEERASEBKGND = 4
def _define_DRAWITEMSTRUCT_head():
    class DRAWITEMSTRUCT(Structure):
        pass
    return DRAWITEMSTRUCT
def _define_DRAWITEMSTRUCT():
    DRAWITEMSTRUCT = win32more.UI.Controls.DRAWITEMSTRUCT_head
    DRAWITEMSTRUCT._fields_ = [
        ('CtlType', win32more.UI.Controls.DRAWITEMSTRUCT_CTL_TYPE),
        ('CtlID', UInt32),
        ('itemID', UInt32),
        ('itemAction', win32more.UI.Controls.ODA_FLAGS),
        ('itemState', win32more.UI.Controls.ODS_FLAGS),
        ('hwndItem', win32more.Foundation.HWND),
        ('hDC', win32more.Graphics.Gdi.HDC),
        ('rcItem', win32more.Foundation.RECT),
        ('itemData', UIntPtr),
    ]
    return DRAWITEMSTRUCT
DRAWITEMSTRUCT_CTL_TYPE = UInt32
ODT_BUTTON = 4
ODT_COMBOBOX = 3
ODT_LISTBOX = 2
ODT_LISTVIEW = 102
ODT_MENU = 1
ODT_STATIC = 5
ODT_TAB = 101
DROPDOWNBUTTONLEFTSTATES = Int32
CBXSL_NORMAL = 1
CBXSL_HOT = 2
CBXSL_PRESSED = 3
CBXSL_DISABLED = 4
DROPDOWNBUTTONRIGHTSTATES = Int32
CBXSR_NORMAL = 1
CBXSR_HOT = 2
CBXSR_PRESSED = 3
CBXSR_DISABLED = 4
DROPDOWNITEMSTATES = Int32
CBDI_NORMAL = 1
CBDI_HIGHLIGHTED = 2
def _define_DTBGOPTS_head():
    class DTBGOPTS(Structure):
        pass
    return DTBGOPTS
def _define_DTBGOPTS():
    DTBGOPTS = win32more.UI.Controls.DTBGOPTS_head
    DTBGOPTS._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('rcClip', win32more.Foundation.RECT),
    ]
    return DTBGOPTS
def _define_DTT_CALLBACK_PROC():
    return WINFUNCTYPE(Int32,win32more.Graphics.Gdi.HDC,win32more.Foundation.PWSTR,Int32,POINTER(win32more.Foundation.RECT_head),UInt32,win32more.Foundation.LPARAM)
def _define_DTTOPTS_head():
    class DTTOPTS(Structure):
        pass
    return DTTOPTS
def _define_DTTOPTS():
    DTTOPTS = win32more.UI.Controls.DTTOPTS_head
    DTTOPTS._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', win32more.UI.Controls.DTTOPTS_FLAGS),
        ('crText', win32more.Foundation.COLORREF),
        ('crBorder', win32more.Foundation.COLORREF),
        ('crShadow', win32more.Foundation.COLORREF),
        ('iTextShadowType', Int32),
        ('ptShadowOffset', win32more.Foundation.POINT),
        ('iBorderSize', Int32),
        ('iFontPropId', Int32),
        ('iColorPropId', Int32),
        ('iStateId', Int32),
        ('fApplyOverlay', win32more.Foundation.BOOL),
        ('iGlowSize', Int32),
        ('pfnDrawTextCallback', win32more.UI.Controls.DTT_CALLBACK_PROC),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return DTTOPTS
DTTOPTS_FLAGS = UInt32
DTT_TEXTCOLOR = 1
DTT_BORDERCOLOR = 2
DTT_SHADOWCOLOR = 4
DTT_SHADOWTYPE = 8
DTT_SHADOWOFFSET = 16
DTT_BORDERSIZE = 32
DTT_FONTPROP = 64
DTT_COLORPROP = 128
DTT_STATEID = 256
DTT_CALCRECT = 512
DTT_APPLYOVERLAY = 1024
DTT_GLOWSIZE = 2048
DTT_CALLBACK = 4096
DTT_COMPOSITED = 8192
DTT_VALIDBITS = 12287
EC_ENDOFLINE = Int32
EC_ENDOFLINE_DETECTFROMCONTENT = 0
EC_ENDOFLINE_CRLF = 1
EC_ENDOFLINE_CR = 2
EC_ENDOFLINE_LF = 3
EC_SEARCHWEB_ENTRYPOINT = Int32
EC_SEARCHWEB_ENTRYPOINT_EXTERNAL = 0
EC_SEARCHWEB_ENTRYPOINT_CONTEXTMENU = 1
def _define_EDITBALLOONTIP_head():
    class EDITBALLOONTIP(Structure):
        pass
    return EDITBALLOONTIP
def _define_EDITBALLOONTIP():
    EDITBALLOONTIP = win32more.UI.Controls.EDITBALLOONTIP_head
    EDITBALLOONTIP._fields_ = [
        ('cbStruct', UInt32),
        ('pszTitle', win32more.Foundation.PWSTR),
        ('pszText', win32more.Foundation.PWSTR),
        ('ttiIcon', win32more.UI.Controls.EDITBALLOONTIP_ICON),
    ]
    return EDITBALLOONTIP
EDITBALLOONTIP_ICON = UInt32
TTI_ERROR = 3
TTI_INFO = 1
TTI_NONE = 0
TTI_WARNING = 2
TTI_INFO_LARGE = 4
TTI_WARNING_LARGE = 5
TTI_ERROR_LARGE = 6
EDITBORDER_HSCROLLSTATES = Int32
EPSH_NORMAL = 1
EPSH_HOT = 2
EPSH_FOCUSED = 3
EPSH_DISABLED = 4
EDITBORDER_HVSCROLLSTATES = Int32
EPSHV_NORMAL = 1
EPSHV_HOT = 2
EPSHV_FOCUSED = 3
EPSHV_DISABLED = 4
EDITBORDER_NOSCROLLSTATES = Int32
EPSN_NORMAL = 1
EPSN_HOT = 2
EPSN_FOCUSED = 3
EPSN_DISABLED = 4
EDITBORDER_VSCROLLSTATES = Int32
EPSV_NORMAL = 1
EPSV_HOT = 2
EPSV_FOCUSED = 3
EPSV_DISABLED = 4
EDITPARTS = Int32
EP_EDITTEXT = 1
EP_CARET = 2
EP_BACKGROUND = 3
EP_PASSWORD = 4
EP_BACKGROUNDWITHBORDER = 5
EP_EDITBORDER_NOSCROLL = 6
EP_EDITBORDER_HSCROLL = 7
EP_EDITBORDER_VSCROLL = 8
EP_EDITBORDER_HVSCROLL = 9
EDITTEXTSTATES = Int32
ETS_NORMAL = 1
ETS_HOT = 2
ETS_SELECTED = 3
ETS_DISABLED = 4
ETS_FOCUSED = 5
ETS_READONLY = 6
ETS_ASSIST = 7
ETS_CUEBANNER = 8
def _define_EDITWORDBREAKPROCA():
    return WINFUNCTYPE(Int32,win32more.Foundation.PSTR,Int32,Int32,win32more.UI.Controls.WORD_BREAK_ACTION)
def _define_EDITWORDBREAKPROCW():
    return WINFUNCTYPE(Int32,win32more.Foundation.PWSTR,Int32,Int32,win32more.UI.Controls.WORD_BREAK_ACTION)
EMPTYMARKUPPARTS = Int32
EMP_MARKUPTEXT = 1
ENABLE_SCROLL_BAR_ARROWS = UInt32
ESB_DISABLE_BOTH = 3
ESB_DISABLE_DOWN = 2
ESB_DISABLE_LEFT = 1
ESB_DISABLE_LTUP = 1
ESB_DISABLE_RIGHT = 2
ESB_DISABLE_RTDN = 2
ESB_DISABLE_UP = 1
ESB_ENABLE_BOTH = 0
EXPANDBUTTONSTATES = Int32
LVEB_NORMAL = 1
LVEB_HOVER = 2
LVEB_PUSHED = 3
EXPANDOBUTTONSTATES = Int32
TDLGEBS_NORMAL = 1
TDLGEBS_HOVER = 2
TDLGEBS_PRESSED = 3
TDLGEBS_EXPANDEDNORMAL = 4
TDLGEBS_EXPANDEDHOVER = 5
TDLGEBS_EXPANDEDPRESSED = 6
TDLGEBS_NORMALDISABLED = 7
TDLGEBS_EXPANDEDDISABLED = 8
EXPLORERBARPARTS = Int32
EBP_HEADERBACKGROUND = 1
EBP_HEADERCLOSE = 2
EBP_HEADERPIN = 3
EBP_IEBARMENU = 4
EBP_NORMALGROUPBACKGROUND = 5
EBP_NORMALGROUPCOLLAPSE = 6
EBP_NORMALGROUPEXPAND = 7
EBP_NORMALGROUPHEAD = 8
EBP_SPECIALGROUPBACKGROUND = 9
EBP_SPECIALGROUPCOLLAPSE = 10
EBP_SPECIALGROUPEXPAND = 11
EBP_SPECIALGROUPHEAD = 12
FEEDBACK_TYPE = Int32
FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1
FEEDBACK_PEN_BARRELVISUALIZATION = 2
FEEDBACK_PEN_TAP = 3
FEEDBACK_PEN_DOUBLETAP = 4
FEEDBACK_PEN_PRESSANDHOLD = 5
FEEDBACK_PEN_RIGHTTAP = 6
FEEDBACK_TOUCH_TAP = 7
FEEDBACK_TOUCH_DOUBLETAP = 8
FEEDBACK_TOUCH_PRESSANDHOLD = 9
FEEDBACK_TOUCH_RIGHTTAP = 10
FEEDBACK_GESTURE_PRESSANDTAP = 11
FEEDBACK_MAX = -1
FILLSTATES = Int32
PBFS_NORMAL = 1
PBFS_ERROR = 2
PBFS_PAUSED = 3
PBFS_PARTIAL = 4
FILLTYPE = Int32
FT_SOLID = 0
FT_VERTGRADIENT = 1
FT_HORZGRADIENT = 2
FT_RADIALGRADIENT = 3
FT_TILEIMAGE = 4
FILLVERTSTATES = Int32
PBFVS_NORMAL = 1
PBFVS_ERROR = 2
PBFVS_PAUSED = 3
PBFVS_PARTIAL = 4
FLYOUTPARTS = Int32
FLYOUT_HEADER = 1
FLYOUT_BODY = 2
FLYOUT_LABEL = 3
FLYOUT_LINK = 4
FLYOUT_DIVIDER = 5
FLYOUT_WINDOW = 6
FLYOUT_LINKAREA = 7
FLYOUT_LINKHEADER = 8
FRAMEBOTTOMSTATES = Int32
FRB_ACTIVE = 1
FRB_INACTIVE = 2
FRAMELEFTSTATES = Int32
FRL_ACTIVE = 1
FRL_INACTIVE = 2
FRAMERIGHTSTATES = Int32
FRR_ACTIVE = 1
FRR_INACTIVE = 2
FRAMESTATES = Int32
FS_ACTIVE = 1
FS_INACTIVE = 2
GET_THEME_BITMAP_FLAGS = UInt32
GBF_DIRECT = 1
GBF_COPY = 2
GBF_VALIDBITS = 3
GLYPHFONTSIZINGTYPE = Int32
GFST_NONE = 0
GFST_SIZE = 1
GFST_DPI = 2
GLYPHSTATES = Int32
GLPS_CLOSED = 1
GLPS_OPENED = 2
GLYPHTYPE = Int32
GT_NONE = 0
GT_IMAGEGLYPH = 1
GT_FONTGLYPH = 2
GRIDCELLBACKGROUNDSTATES = Int32
MCGCB_SELECTED = 1
MCGCB_HOT = 2
MCGCB_SELECTEDHOT = 3
MCGCB_SELECTEDNOTFOCUSED = 4
MCGCB_TODAY = 5
MCGCB_TODAYSELECTED = 6
GRIDCELLSTATES = Int32
MCGC_HOT = 1
MCGC_HASSTATE = 2
MCGC_HASSTATEHOT = 3
MCGC_TODAY = 4
MCGC_TODAYSELECTED = 5
MCGC_SELECTED = 6
MCGC_SELECTEDHOT = 7
GRIDCELLUPPERSTATES = Int32
MCGCU_HOT = 1
MCGCU_HASSTATE = 2
MCGCU_HASSTATEHOT = 3
MCGCU_SELECTED = 4
MCGCU_SELECTEDHOT = 5
GRIPPERSTATES = Int32
TSGS_NORMAL = 1
TSGS_CENTERED = 2
GROUPBOXSTATES = Int32
GBS_NORMAL = 1
GBS_DISABLED = 2
GROUPHEADERLINESTATES = Int32
LVGHL_OPEN = 1
LVGHL_OPENHOT = 2
LVGHL_OPENSELECTED = 3
LVGHL_OPENSELECTEDHOT = 4
LVGHL_OPENSELECTEDNOTFOCUSED = 5
LVGHL_OPENSELECTEDNOTFOCUSEDHOT = 6
LVGHL_OPENMIXEDSELECTION = 7
LVGHL_OPENMIXEDSELECTIONHOT = 8
LVGHL_CLOSE = 9
LVGHL_CLOSEHOT = 10
LVGHL_CLOSESELECTED = 11
LVGHL_CLOSESELECTEDHOT = 12
LVGHL_CLOSESELECTEDNOTFOCUSED = 13
LVGHL_CLOSESELECTEDNOTFOCUSEDHOT = 14
LVGHL_CLOSEMIXEDSELECTION = 15
LVGHL_CLOSEMIXEDSELECTIONHOT = 16
GROUPHEADERSTATES = Int32
LVGH_OPEN = 1
LVGH_OPENHOT = 2
LVGH_OPENSELECTED = 3
LVGH_OPENSELECTEDHOT = 4
LVGH_OPENSELECTEDNOTFOCUSED = 5
LVGH_OPENSELECTEDNOTFOCUSEDHOT = 6
LVGH_OPENMIXEDSELECTION = 7
LVGH_OPENMIXEDSELECTIONHOT = 8
LVGH_CLOSE = 9
LVGH_CLOSEHOT = 10
LVGH_CLOSESELECTED = 11
LVGH_CLOSESELECTEDHOT = 12
LVGH_CLOSESELECTEDNOTFOCUSED = 13
LVGH_CLOSESELECTEDNOTFOCUSEDHOT = 14
LVGH_CLOSEMIXEDSELECTION = 15
LVGH_CLOSEMIXEDSELECTIONHOT = 16
HALIGN = Int32
HA_LEFT = 0
HA_CENTER = 1
HA_RIGHT = 2
def _define_HD_TEXTFILTERA_head():
    class HD_TEXTFILTERA(Structure):
        pass
    return HD_TEXTFILTERA
def _define_HD_TEXTFILTERA():
    HD_TEXTFILTERA = win32more.UI.Controls.HD_TEXTFILTERA_head
    HD_TEXTFILTERA._fields_ = [
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
    ]
    return HD_TEXTFILTERA
def _define_HD_TEXTFILTERW_head():
    class HD_TEXTFILTERW(Structure):
        pass
    return HD_TEXTFILTERW
def _define_HD_TEXTFILTERW():
    HD_TEXTFILTERW = win32more.UI.Controls.HD_TEXTFILTERW_head
    HD_TEXTFILTERW._fields_ = [
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
    ]
    return HD_TEXTFILTERW
def _define_HDHITTESTINFO_head():
    class HDHITTESTINFO(Structure):
        pass
    return HDHITTESTINFO
def _define_HDHITTESTINFO():
    HDHITTESTINFO = win32more.UI.Controls.HDHITTESTINFO_head
    HDHITTESTINFO._fields_ = [
        ('pt', win32more.Foundation.POINT),
        ('flags', win32more.UI.Controls.HEADER_HITTEST_INFO_FLAGS),
        ('iItem', Int32),
    ]
    return HDHITTESTINFO
HDI_MASK = UInt32
HDI_WIDTH = 1
HDI_HEIGHT = 1
HDI_TEXT = 2
HDI_FORMAT = 4
HDI_LPARAM = 8
HDI_BITMAP = 16
HDI_IMAGE = 32
HDI_DI_SETITEM = 64
HDI_ORDER = 128
HDI_FILTER = 256
HDI_STATE = 512
def _define_HDITEMA_head():
    class HDITEMA(Structure):
        pass
    return HDITEMA
def _define_HDITEMA():
    HDITEMA = win32more.UI.Controls.HDITEMA_head
    HDITEMA._fields_ = [
        ('mask', win32more.UI.Controls.HDI_MASK),
        ('cxy', Int32),
        ('pszText', win32more.Foundation.PSTR),
        ('hbm', win32more.Graphics.Gdi.HBITMAP),
        ('cchTextMax', Int32),
        ('fmt', win32more.UI.Controls.HEADER_CONTROL_FORMAT_FLAGS),
        ('lParam', win32more.Foundation.LPARAM),
        ('iImage', Int32),
        ('iOrder', Int32),
        ('type', win32more.UI.Controls.HEADER_CONTROL_FORMAT_TYPE),
        ('pvFilter', c_void_p),
        ('state', win32more.UI.Controls.HEADER_CONTROL_FORMAT_STATE),
    ]
    return HDITEMA
def _define_HDITEMW_head():
    class HDITEMW(Structure):
        pass
    return HDITEMW
def _define_HDITEMW():
    HDITEMW = win32more.UI.Controls.HDITEMW_head
    HDITEMW._fields_ = [
        ('mask', win32more.UI.Controls.HDI_MASK),
        ('cxy', Int32),
        ('pszText', win32more.Foundation.PWSTR),
        ('hbm', win32more.Graphics.Gdi.HBITMAP),
        ('cchTextMax', Int32),
        ('fmt', win32more.UI.Controls.HEADER_CONTROL_FORMAT_FLAGS),
        ('lParam', win32more.Foundation.LPARAM),
        ('iImage', Int32),
        ('iOrder', Int32),
        ('type', win32more.UI.Controls.HEADER_CONTROL_FORMAT_TYPE),
        ('pvFilter', c_void_p),
        ('state', win32more.UI.Controls.HEADER_CONTROL_FORMAT_STATE),
    ]
    return HDITEMW
def _define_HDLAYOUT_head():
    class HDLAYOUT(Structure):
        pass
    return HDLAYOUT
def _define_HDLAYOUT():
    HDLAYOUT = win32more.UI.Controls.HDLAYOUT_head
    HDLAYOUT._fields_ = [
        ('prc', POINTER(win32more.Foundation.RECT_head)),
        ('pwpos', POINTER(win32more.UI.WindowsAndMessaging.WINDOWPOS_head)),
    ]
    return HDLAYOUT
HDPA = IntPtr
HDSA = IntPtr
HEADER_CONTROL_FORMAT_FLAGS = Int32
HDF_LEFT = 0
HDF_RIGHT = 1
HDF_CENTER = 2
HDF_JUSTIFYMASK = 3
HDF_RTLREADING = 4
HDF_BITMAP = 8192
HDF_STRING = 16384
HDF_OWNERDRAW = 32768
HDF_IMAGE = 2048
HDF_BITMAP_ON_RIGHT = 4096
HDF_SORTUP = 1024
HDF_SORTDOWN = 512
HDF_CHECKBOX = 64
HDF_CHECKED = 128
HDF_FIXEDWIDTH = 256
HDF_SPLITBUTTON = 16777216
HEADER_CONTROL_FORMAT_STATE = UInt32
HDIS_FOCUSED = 1
HEADER_CONTROL_FORMAT_TYPE = UInt32
HDFT_ISSTRING = 0
HDFT_ISNUMBER = 1
HDFT_ISDATE = 2
HDFT_HASNOVALUE = 32768
HEADER_CONTROL_NOTIFICATION_BUTTON = UInt32
HEADER_CONTROL_NOTIFICATION_BUTTON_LEFT = 0
HEADER_CONTROL_NOTIFICATION_BUTTON_RIGHT = 1
HEADER_CONTROL_NOTIFICATION_BUTTON_MIDDLE = 2
HEADER_HITTEST_INFO_FLAGS = UInt32
HHT_NOWHERE = 1
HHT_ONHEADER = 2
HHT_ONDIVIDER = 4
HHT_ONDIVOPEN = 8
HHT_ONFILTER = 16
HHT_ONFILTERBUTTON = 32
HHT_ABOVE = 256
HHT_BELOW = 512
HHT_TORIGHT = 1024
HHT_TOLEFT = 2048
HHT_ONITEMSTATEICON = 4096
HHT_ONDROPDOWN = 8192
HHT_ONOVERFLOW = 16384
HEADERAREASTATES = Int32
AW_S_HEADERAREA_NOMARGIN = 1
HEADERCLOSESTATES = Int32
EBHC_NORMAL = 1
EBHC_HOT = 2
EBHC_PRESSED = 3
HEADERDROPDOWNFILTERSTATES = Int32
HDDFS_NORMAL = 1
HDDFS_SOFTHOT = 2
HDDFS_HOT = 3
HEADERDROPDOWNSTATES = Int32
HDDS_NORMAL = 1
HDDS_SOFTHOT = 2
HDDS_HOT = 3
HEADERITEMLEFTSTATES = Int32
HILS_NORMAL = 1
HILS_HOT = 2
HILS_PRESSED = 3
HEADERITEMRIGHTSTATES = Int32
HIRS_NORMAL = 1
HIRS_HOT = 2
HIRS_PRESSED = 3
HEADERITEMSTATES = Int32
HIS_NORMAL = 1
HIS_HOT = 2
HIS_PRESSED = 3
HIS_SORTEDNORMAL = 4
HIS_SORTEDHOT = 5
HIS_SORTEDPRESSED = 6
HIS_ICONNORMAL = 7
HIS_ICONHOT = 8
HIS_ICONPRESSED = 9
HIS_ICONSORTEDNORMAL = 10
HIS_ICONSORTEDHOT = 11
HIS_ICONSORTEDPRESSED = 12
HEADEROVERFLOWSTATES = Int32
HOFS_NORMAL = 1
HOFS_HOT = 2
HEADERPARTS = Int32
HP_HEADERITEM = 1
HP_HEADERITEMLEFT = 2
HP_HEADERITEMRIGHT = 3
HP_HEADERSORTARROW = 4
HP_HEADERDROPDOWN = 5
HP_HEADERDROPDOWNFILTER = 6
HP_HEADEROVERFLOW = 7
HEADERPINSTATES = Int32
EBHP_NORMAL = 1
EBHP_HOT = 2
EBHP_PRESSED = 3
EBHP_SELECTEDNORMAL = 4
EBHP_SELECTEDHOT = 5
EBHP_SELECTEDPRESSED = 6
HEADERSORTARROWSTATES = Int32
HSAS_SORTEDUP = 1
HSAS_SORTEDDOWN = 2
HEADERSTYLESTATES = Int32
HBG_DETAILS = 1
HBG_ICON = 2
HELPBUTTONSTATES = Int32
HBS_NORMAL = 1
HBS_HOT = 2
HBS_PUSHED = 3
HBS_DISABLED = 4
HELPLINKSTATES = Int32
CPHL_NORMAL = 1
CPHL_HOT = 2
CPHL_PRESSED = 3
CPHL_DISABLED = 4
HIMAGELIST = IntPtr
HIT_TEST_BACKGROUND_OPTIONS = UInt32
HTTB_BACKGROUNDSEG = 0
HTTB_FIXEDBORDER = 2
HTTB_CAPTION = 4
HTTB_RESIZINGBORDER_LEFT = 16
HTTB_RESIZINGBORDER_TOP = 32
HTTB_RESIZINGBORDER_RIGHT = 64
HTTB_RESIZINGBORDER_BOTTOM = 128
HTTB_RESIZINGBORDER = 240
HTTB_SIZINGTEMPLATE = 256
HTTB_SYSTEMSIZINGMARGINS = 512
HORZSCROLLSTATES = Int32
HSS_NORMAL = 1
HSS_HOT = 2
HSS_PUSHED = 3
HSS_DISABLED = 4
HORZTHUMBSTATES = Int32
HTS_NORMAL = 1
HTS_HOT = 2
HTS_PUSHED = 3
HTS_DISABLED = 4
HOTGLYPHSTATES = Int32
HGLPS_CLOSED = 1
HGLPS_OPENED = 2
HOVERBACKGROUNDSTATES = Int32
UTS_NORMAL = 1
UTS_HOT = 2
UTS_PRESSED = 3
HPROPSHEETPAGE = IntPtr
HSYNTHETICPOINTERDEVICE = IntPtr
HTHEME = IntPtr
HTREEITEM = IntPtr
HYPERLINKSTATES = Int32
HLS_NORMALTEXT = 1
HLS_LINKTEXT = 2
HYPERLINKTEXTSTATES = Int32
TS_HYPERLINK_NORMAL = 1
TS_HYPERLINK_HOT = 2
TS_HYPERLINK_PRESSED = 3
TS_HYPERLINK_DISABLED = 4
ICONEFFECT = Int32
ICE_NONE = 0
ICE_GLOW = 1
ICE_SHADOW = 2
ICE_PULSE = 3
ICE_ALPHA = 4
IEBARMENUSTATES = Int32
EBM_NORMAL = 1
EBM_HOT = 2
EBM_PRESSED = 3
def _define_IImageList_head():
    class IImageList(win32more.System.Com.IUnknown_head):
        Guid = Guid('46eb5926-582e-4017-9f-df-e8-99-8d-aa-09-50')
    return IImageList
def _define_IImageList():
    IImageList = win32more.UI.Controls.IImageList_head
    IImageList.Add = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HBITMAP,win32more.Graphics.Gdi.HBITMAP,POINTER(Int32))(3, 'Add', ((1, 'hbmImage'),(1, 'hbmMask'),(1, 'pi'),)))
    IImageList.ReplaceIcon = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.UI.WindowsAndMessaging.HICON,POINTER(Int32))(4, 'ReplaceIcon', ((1, 'i'),(1, 'hicon'),(1, 'pi'),)))
    IImageList.SetOverlayImage = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32)(5, 'SetOverlayImage', ((1, 'iImage'),(1, 'iOverlay'),)))
    IImageList.Replace = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.Graphics.Gdi.HBITMAP,win32more.Graphics.Gdi.HBITMAP)(6, 'Replace', ((1, 'i'),(1, 'hbmImage'),(1, 'hbmMask'),)))
    IImageList.AddMasked = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Graphics.Gdi.HBITMAP,win32more.Foundation.COLORREF,POINTER(Int32))(7, 'AddMasked', ((1, 'hbmImage'),(1, 'crMask'),(1, 'pi'),)))
    IImageList.Draw = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.UI.Controls.IMAGELISTDRAWPARAMS_head))(8, 'Draw', ((1, 'pimldp'),)))
    IImageList.Remove = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32)(9, 'Remove', ((1, 'i'),)))
    IImageList.GetIcon = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,UInt32,POINTER(win32more.UI.WindowsAndMessaging.HICON))(10, 'GetIcon', ((1, 'i'),(1, 'flags'),(1, 'picon'),)))
    IImageList.GetImageInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,POINTER(win32more.UI.Controls.IMAGEINFO_head))(11, 'GetImageInfo', ((1, 'i'),(1, 'pImageInfo'),)))
    IImageList.Copy = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.System.Com.IUnknown_head,Int32,UInt32)(12, 'Copy', ((1, 'iDst'),(1, 'punkSrc'),(1, 'iSrc'),(1, 'uFlags'),)))
    IImageList.Merge = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.System.Com.IUnknown_head,Int32,Int32,Int32,POINTER(Guid),POINTER(c_void_p))(13, 'Merge', ((1, 'i1'),(1, 'punk2'),(1, 'i2'),(1, 'dx'),(1, 'dy'),(1, 'riid'),(1, 'ppv'),)))
    IImageList.Clone = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(c_void_p))(14, 'Clone', ((1, 'riid'),(1, 'ppv'),)))
    IImageList.GetImageRect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,POINTER(win32more.Foundation.RECT_head))(15, 'GetImageRect', ((1, 'i'),(1, 'prc'),)))
    IImageList.GetIconSize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),POINTER(Int32))(16, 'GetIconSize', ((1, 'cx'),(1, 'cy'),)))
    IImageList.SetIconSize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32)(17, 'SetIconSize', ((1, 'cx'),(1, 'cy'),)))
    IImageList.GetImageCount = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(18, 'GetImageCount', ((1, 'pi'),)))
    IImageList.SetImageCount = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32)(19, 'SetImageCount', ((1, 'uNewCount'),)))
    IImageList.SetBkColor = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.COLORREF,POINTER(win32more.Foundation.COLORREF))(20, 'SetBkColor', ((1, 'clrBk'),(1, 'pclr'),)))
    IImageList.GetBkColor = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.COLORREF))(21, 'GetBkColor', ((1, 'pclr'),)))
    IImageList.BeginDrag = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32,Int32)(22, 'BeginDrag', ((1, 'iTrack'),(1, 'dxHotspot'),(1, 'dyHotspot'),)))
    IImageList.EndDrag = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(23, 'EndDrag', ()))
    IImageList.DragEnter = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,Int32,Int32)(24, 'DragEnter', ((1, 'hwndLock'),(1, 'x'),(1, 'y'),)))
    IImageList.DragLeave = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND)(25, 'DragLeave', ((1, 'hwndLock'),)))
    IImageList.DragMove = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32)(26, 'DragMove', ((1, 'x'),(1, 'y'),)))
    IImageList.SetDragCursorImage = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.IUnknown_head,Int32,Int32,Int32)(27, 'SetDragCursorImage', ((1, 'punk'),(1, 'iDrag'),(1, 'dxHotspot'),(1, 'dyHotspot'),)))
    IImageList.DragShowNolock = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BOOL)(28, 'DragShowNolock', ((1, 'fShow'),)))
    IImageList.GetDragImage = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.POINT_head),POINTER(win32more.Foundation.POINT_head),POINTER(Guid),POINTER(c_void_p))(29, 'GetDragImage', ((1, 'ppt'),(1, 'pptHotspot'),(1, 'riid'),(1, 'ppv'),)))
    IImageList.GetItemFlags = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,POINTER(win32more.UI.Controls.IMAGE_LIST_ITEM_FLAGS))(30, 'GetItemFlags', ((1, 'i'),(1, 'dwFlags'),)))
    IImageList.GetOverlayImage = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,POINTER(Int32))(31, 'GetOverlayImage', ((1, 'iOverlay'),(1, 'piIndex'),)))
    win32more.System.Com.IUnknown
    return IImageList
def _define_IImageList2_head():
    class IImageList2(win32more.UI.Controls.IImageList_head):
        Guid = Guid('192b9d83-50fc-457b-90-a0-2b-82-a8-b5-da-e1')
    return IImageList2
def _define_IImageList2():
    IImageList2 = win32more.UI.Controls.IImageList2_head
    IImageList2.Resize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32)(32, 'Resize', ((1, 'cxNewIconSize'),(1, 'cyNewIconSize'),)))
    IImageList2.GetOriginalSize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,UInt32,POINTER(Int32),POINTER(Int32))(33, 'GetOriginalSize', ((1, 'iImage'),(1, 'dwFlags'),(1, 'pcx'),(1, 'pcy'),)))
    IImageList2.SetOriginalSize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32,Int32)(34, 'SetOriginalSize', ((1, 'iImage'),(1, 'cx'),(1, 'cy'),)))
    IImageList2.SetCallback = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.IUnknown_head)(35, 'SetCallback', ((1, 'punk'),)))
    IImageList2.GetCallback = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(c_void_p))(36, 'GetCallback', ((1, 'riid'),(1, 'ppv'),)))
    IImageList2.ForceImagePresent = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,UInt32)(37, 'ForceImagePresent', ((1, 'iImage'),(1, 'dwFlags'),)))
    IImageList2.DiscardImages = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32,UInt32)(38, 'DiscardImages', ((1, 'iFirstImage'),(1, 'iLastImage'),(1, 'dwFlags'),)))
    IImageList2.PreloadImages = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.UI.Controls.IMAGELISTDRAWPARAMS_head))(39, 'PreloadImages', ((1, 'pimldp'),)))
    IImageList2.GetStatistics = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.UI.Controls.IMAGELISTSTATS_head))(40, 'GetStatistics', ((1, 'pils'),)))
    IImageList2.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,Int32,win32more.UI.Controls.IMAGELIST_CREATION_FLAGS,Int32,Int32)(41, 'Initialize', ((1, 'cx'),(1, 'cy'),(1, 'flags'),(1, 'cInitial'),(1, 'cGrow'),)))
    IImageList2.Replace2 = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.Graphics.Gdi.HBITMAP,win32more.Graphics.Gdi.HBITMAP,win32more.System.Com.IUnknown_head,UInt32)(42, 'Replace2', ((1, 'i'),(1, 'hbmImage'),(1, 'hbmMask'),(1, 'punk'),(1, 'dwFlags'),)))
    IImageList2.ReplaceFromImageList = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.UI.Controls.IImageList_head,Int32,win32more.System.Com.IUnknown_head,UInt32)(43, 'ReplaceFromImageList', ((1, 'i'),(1, 'pil'),(1, 'iSrc'),(1, 'punk'),(1, 'dwFlags'),)))
    win32more.UI.Controls.IImageList
    return IImageList2
IMAGE_LIST_COPY_FLAGS = UInt32
ILCF_MOVE = 0
ILCF_SWAP = 1
IMAGE_LIST_DRAW_STYLE = UInt32
ILD_NORMAL = 0
ILD_TRANSPARENT = 1
ILD_BLEND25 = 2
ILD_FOCUS = 2
ILD_BLEND50 = 4
ILD_SELECTED = 4
ILD_BLEND = 4
ILD_MASK = 16
ILD_IMAGE = 32
ILD_ROP = 64
ILD_OVERLAYMASK = 3840
ILD_PRESERVEALPHA = 4096
ILD_SCALE = 8192
ILD_DPISCALE = 16384
ILD_ASYNC = 32768
IMAGE_LIST_ITEM_FLAGS = UInt32
ILIF_ALPHA = 1
ILIF_LOWQUALITY = 2
IMAGE_LIST_WRITE_STREAM_FLAGS = UInt32
ILP_NORMAL = 0
ILP_DOWNLEVEL = 1
def _define_IMAGEINFO_head():
    class IMAGEINFO(Structure):
        pass
    return IMAGEINFO
def _define_IMAGEINFO():
    IMAGEINFO = win32more.UI.Controls.IMAGEINFO_head
    IMAGEINFO._fields_ = [
        ('hbmImage', win32more.Graphics.Gdi.HBITMAP),
        ('hbmMask', win32more.Graphics.Gdi.HBITMAP),
        ('Unused1', Int32),
        ('Unused2', Int32),
        ('rcImage', win32more.Foundation.RECT),
    ]
    return IMAGEINFO
IMAGELAYOUT = Int32
IL_VERTICAL = 0
IL_HORIZONTAL = 1
ImageList = Guid('7c476ba2-02b1-48f4-80-48-b2-46-19-dd-c0-58')
IMAGELIST_CREATION_FLAGS = UInt32
ILC_MASK = 1
ILC_COLOR = 0
ILC_COLORDDB = 254
ILC_COLOR4 = 4
ILC_COLOR8 = 8
ILC_COLOR16 = 16
ILC_COLOR24 = 24
ILC_COLOR32 = 32
ILC_PALETTE = 2048
ILC_MIRROR = 8192
ILC_PERITEMMIRROR = 32768
ILC_ORIGINALSIZE = 65536
ILC_HIGHQUALITYSCALE = 131072
def _define_IMAGELISTDRAWPARAMS_head():
    class IMAGELISTDRAWPARAMS(Structure):
        pass
    return IMAGELISTDRAWPARAMS
def _define_IMAGELISTDRAWPARAMS():
    IMAGELISTDRAWPARAMS = win32more.UI.Controls.IMAGELISTDRAWPARAMS_head
    IMAGELISTDRAWPARAMS._fields_ = [
        ('cbSize', UInt32),
        ('himl', win32more.UI.Controls.HIMAGELIST),
        ('i', Int32),
        ('hdcDst', win32more.Graphics.Gdi.HDC),
        ('x', Int32),
        ('y', Int32),
        ('cx', Int32),
        ('cy', Int32),
        ('xBitmap', Int32),
        ('yBitmap', Int32),
        ('rgbBk', win32more.Foundation.COLORREF),
        ('rgbFg', win32more.Foundation.COLORREF),
        ('fStyle', UInt32),
        ('dwRop', UInt32),
        ('fState', UInt32),
        ('Frame', UInt32),
        ('crEffect', win32more.Foundation.COLORREF),
    ]
    return IMAGELISTDRAWPARAMS
def _define_IMAGELISTSTATS_head():
    class IMAGELISTSTATS(Structure):
        pass
    return IMAGELISTSTATS
def _define_IMAGELISTSTATS():
    IMAGELISTSTATS = win32more.UI.Controls.IMAGELISTSTATS_head
    IMAGELISTSTATS._fields_ = [
        ('cbSize', UInt32),
        ('cAlloc', Int32),
        ('cUsed', Int32),
        ('cStandby', Int32),
    ]
    return IMAGELISTSTATS
IMAGESELECTTYPE = Int32
IST_NONE = 0
IST_SIZE = 1
IST_DPI = 2
def _define_INITCOMMONCONTROLSEX_head():
    class INITCOMMONCONTROLSEX(Structure):
        pass
    return INITCOMMONCONTROLSEX
def _define_INITCOMMONCONTROLSEX():
    INITCOMMONCONTROLSEX = win32more.UI.Controls.INITCOMMONCONTROLSEX_head
    INITCOMMONCONTROLSEX._fields_ = [
        ('dwSize', UInt32),
        ('dwICC', win32more.UI.Controls.INITCOMMONCONTROLSEX_ICC),
    ]
    return INITCOMMONCONTROLSEX
INITCOMMONCONTROLSEX_ICC = UInt32
ICC_ANIMATE_CLASS = 128
ICC_BAR_CLASSES = 4
ICC_COOL_CLASSES = 1024
ICC_DATE_CLASSES = 256
ICC_HOTKEY_CLASS = 64
ICC_INTERNET_CLASSES = 2048
ICC_LINK_CLASS = 32768
ICC_LISTVIEW_CLASSES = 1
ICC_NATIVEFNTCTL_CLASS = 8192
ICC_PAGESCROLLER_CLASS = 4096
ICC_PROGRESS_CLASS = 32
ICC_STANDARD_CLASSES = 16384
ICC_TAB_CLASSES = 8
ICC_TREEVIEW_CLASSES = 2
ICC_UPDOWN_CLASS = 16
ICC_USEREX_CLASSES = 512
ICC_WIN95_CLASSES = 255
def _define_INTLIST_head():
    class INTLIST(Structure):
        pass
    return INTLIST
def _define_INTLIST():
    INTLIST = win32more.UI.Controls.INTLIST_head
    INTLIST._fields_ = [
        ('iValueCount', Int32),
        ('iValues', Int32 * 402),
    ]
    return INTLIST
ITEMSTATES = Int32
LBPSI_HOT = 1
LBPSI_HOTSELECTED = 2
LBPSI_SELECTED = 3
LBPSI_SELECTEDNOTFOCUS = 4
LABELSTATES = Int32
FLS_NORMAL = 1
FLS_SELECTED = 2
FLS_EMPHASIZED = 3
FLS_DISABLED = 4
def _define_LHITTESTINFO_head():
    class LHITTESTINFO(Structure):
        pass
    return LHITTESTINFO
def _define_LHITTESTINFO():
    LHITTESTINFO = win32more.UI.Controls.LHITTESTINFO_head
    LHITTESTINFO._fields_ = [
        ('pt', win32more.Foundation.POINT),
        ('item', win32more.UI.Controls.LITEM),
    ]
    return LHITTESTINFO
LINKHEADERSTATES = Int32
FLH_NORMAL = 1
FLH_HOVER = 2
LINKPARTS = Int32
LP_HYPERLINK = 1
LINKSTATES = Int32
FLYOUTLINK_NORMAL = 1
FLYOUTLINK_HOVER = 2
LIST_ITEM_FLAGS = UInt32
LIF_ITEMINDEX = 1
LIF_STATE = 2
LIF_ITEMID = 4
LIF_URL = 8
LIST_ITEM_STATE_FLAGS = UInt32
LIS_FOCUSED = 1
LIS_ENABLED = 2
LIS_VISITED = 4
LIS_HOTTRACK = 8
LIS_DEFAULTCOLORS = 16
LIST_VIEW_BACKGROUND_IMAGE_FLAGS = UInt32
LVBKIF_SOURCE_NONE = 0
LVBKIF_SOURCE_HBITMAP = 1
LVBKIF_SOURCE_URL = 2
LVBKIF_SOURCE_MASK = 3
LVBKIF_STYLE_NORMAL = 0
LVBKIF_STYLE_TILE = 16
LVBKIF_STYLE_MASK = 16
LVBKIF_FLAG_TILEOFFSET = 256
LVBKIF_TYPE_WATERMARK = 268435456
LVBKIF_FLAG_ALPHABLEND = 536870912
LIST_VIEW_GROUP_ALIGN_FLAGS = UInt32
LVGA_HEADER_LEFT = 1
LVGA_HEADER_CENTER = 2
LVGA_HEADER_RIGHT = 4
LVGA_FOOTER_LEFT = 8
LVGA_FOOTER_CENTER = 16
LVGA_FOOTER_RIGHT = 32
LIST_VIEW_GROUP_STATE_FLAGS = UInt32
LVGS_NORMAL = 0
LVGS_COLLAPSED = 1
LVGS_HIDDEN = 2
LVGS_NOHEADER = 4
LVGS_COLLAPSIBLE = 8
LVGS_FOCUSED = 16
LVGS_SELECTED = 32
LVGS_SUBSETED = 64
LVGS_SUBSETLINKFOCUSED = 128
LIST_VIEW_INSERT_MARK_FLAGS = UInt32
LVIM_AFTER = 1
LIST_VIEW_ITEM_COLUMN_FORMAT_FLAGS = Int32
LVCFMT_LINE_BREAK = 1048576
LVCFMT_FILL = 2097152
LVCFMT_WRAP = 4194304
LVCFMT_NO_TITLE = 8388608
LVCFMT_TILE_PLACEMENTMASK = 3145728
LIST_VIEW_ITEM_FLAGS = UInt32
LVIF_TEXT = 1
LVIF_IMAGE = 2
LVIF_PARAM = 4
LVIF_STATE = 8
LVIF_INDENT = 16
LVIF_NORECOMPUTE = 2048
LVIF_GROUPID = 256
LVIF_COLUMNS = 512
LVIF_COLFMT = 65536
LVIF_DI_SETITEM = 4096
LIST_VIEW_ITEM_STATE_FLAGS = UInt32
LVIS_FOCUSED = 1
LVIS_SELECTED = 2
LVIS_CUT = 4
LVIS_DROPHILITED = 8
LVIS_GLOW = 16
LVIS_ACTIVATING = 32
LVIS_OVERLAYMASK = 3840
LVIS_STATEIMAGEMASK = 61440
LISTBOXPARTS = Int32
LBCP_BORDER_HSCROLL = 1
LBCP_BORDER_HVSCROLL = 2
LBCP_BORDER_NOSCROLL = 3
LBCP_BORDER_VSCROLL = 4
LBCP_ITEM = 5
LISTITEMSTATES = Int32
LISS_NORMAL = 1
LISS_HOT = 2
LISS_SELECTED = 3
LISS_DISABLED = 4
LISS_SELECTEDNOTFOCUS = 5
LISS_HOTSELECTED = 6
LISTVIEWPARTS = Int32
LVP_LISTITEM = 1
LVP_LISTGROUP = 2
LVP_LISTDETAIL = 3
LVP_LISTSORTEDDETAIL = 4
LVP_EMPTYTEXT = 5
LVP_GROUPHEADER = 6
LVP_GROUPHEADERLINE = 7
LVP_EXPANDBUTTON = 8
LVP_COLLAPSEBUTTON = 9
LVP_COLUMNDETAIL = 10
def _define_LITEM_head():
    class LITEM(Structure):
        pass
    return LITEM
def _define_LITEM():
    LITEM = win32more.UI.Controls.LITEM_head
    LITEM._fields_ = [
        ('mask', win32more.UI.Controls.LIST_ITEM_FLAGS),
        ('iLink', Int32),
        ('state', win32more.UI.Controls.LIST_ITEM_STATE_FLAGS),
        ('stateMask', win32more.UI.Controls.LIST_ITEM_STATE_FLAGS),
        ('szID', Char * 48),
        ('szUrl', Char * 2084),
    ]
    return LITEM
LOGOFFBUTTONSSTATES = Int32
SPLS_NORMAL = 1
SPLS_HOT = 2
SPLS_PRESSED = 3
def _define_LPFNADDPROPSHEETPAGES():
    return WINFUNCTYPE(win32more.Foundation.BOOL,c_void_p,win32more.UI.Controls.LPFNSVADDPROPSHEETPAGE,win32more.Foundation.LPARAM)
def _define_LPFNCCINFOA():
    return WINFUNCTYPE(UInt32,POINTER(win32more.UI.Controls.CCINFOA_head))
def _define_LPFNCCINFOW():
    return WINFUNCTYPE(UInt32,POINTER(win32more.UI.Controls.CCINFOW_head))
def _define_LPFNCCSIZETOTEXTA():
    return WINFUNCTYPE(Int32,UInt32,UInt32,win32more.Graphics.Gdi.HFONT,win32more.Foundation.PSTR)
def _define_LPFNCCSIZETOTEXTW():
    return WINFUNCTYPE(Int32,UInt32,UInt32,win32more.Graphics.Gdi.HFONT,win32more.Foundation.PWSTR)
def _define_LPFNCCSTYLEA():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,POINTER(win32more.UI.Controls.CCSTYLEA_head))
def _define_LPFNCCSTYLEW():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.HWND,POINTER(win32more.UI.Controls.CCSTYLEW_head))
def _define_LPFNPSPCALLBACKA():
    return WINFUNCTYPE(UInt32,win32more.Foundation.HWND,win32more.UI.Controls.PSPCB_MESSAGE,POINTER(win32more.UI.Controls.PROPSHEETPAGEA_head))
def _define_LPFNPSPCALLBACKW():
    return WINFUNCTYPE(UInt32,win32more.Foundation.HWND,win32more.UI.Controls.PSPCB_MESSAGE,POINTER(win32more.UI.Controls.PROPSHEETPAGEW_head))
def _define_LPFNSVADDPROPSHEETPAGE():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.UI.Controls.HPROPSHEETPAGE,win32more.Foundation.LPARAM)
def _define_LVBKIMAGEA_head():
    class LVBKIMAGEA(Structure):
        pass
    return LVBKIMAGEA
def _define_LVBKIMAGEA():
    LVBKIMAGEA = win32more.UI.Controls.LVBKIMAGEA_head
    LVBKIMAGEA._fields_ = [
        ('ulFlags', win32more.UI.Controls.LIST_VIEW_BACKGROUND_IMAGE_FLAGS),
        ('hbm', win32more.Graphics.Gdi.HBITMAP),
        ('pszImage', win32more.Foundation.PSTR),
        ('cchImageMax', UInt32),
        ('xOffsetPercent', Int32),
        ('yOffsetPercent', Int32),
    ]
    return LVBKIMAGEA
def _define_LVBKIMAGEW_head():
    class LVBKIMAGEW(Structure):
        pass
    return LVBKIMAGEW
def _define_LVBKIMAGEW():
    LVBKIMAGEW = win32more.UI.Controls.LVBKIMAGEW_head
    LVBKIMAGEW._fields_ = [
        ('ulFlags', win32more.UI.Controls.LIST_VIEW_BACKGROUND_IMAGE_FLAGS),
        ('hbm', win32more.Graphics.Gdi.HBITMAP),
        ('pszImage', win32more.Foundation.PWSTR),
        ('cchImageMax', UInt32),
        ('xOffsetPercent', Int32),
        ('yOffsetPercent', Int32),
    ]
    return LVBKIMAGEW
def _define_LVCOLUMNA_head():
    class LVCOLUMNA(Structure):
        pass
    return LVCOLUMNA
def _define_LVCOLUMNA():
    LVCOLUMNA = win32more.UI.Controls.LVCOLUMNA_head
    LVCOLUMNA._fields_ = [
        ('mask', win32more.UI.Controls.LVCOLUMNW_MASK),
        ('fmt', win32more.UI.Controls.LVCOLUMNW_FORMAT),
        ('cx', Int32),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iSubItem', Int32),
        ('iImage', Int32),
        ('iOrder', Int32),
        ('cxMin', Int32),
        ('cxDefault', Int32),
        ('cxIdeal', Int32),
    ]
    return LVCOLUMNA
def _define_LVCOLUMNW_head():
    class LVCOLUMNW(Structure):
        pass
    return LVCOLUMNW
def _define_LVCOLUMNW():
    LVCOLUMNW = win32more.UI.Controls.LVCOLUMNW_head
    LVCOLUMNW._fields_ = [
        ('mask', win32more.UI.Controls.LVCOLUMNW_MASK),
        ('fmt', win32more.UI.Controls.LVCOLUMNW_FORMAT),
        ('cx', Int32),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iSubItem', Int32),
        ('iImage', Int32),
        ('iOrder', Int32),
        ('cxMin', Int32),
        ('cxDefault', Int32),
        ('cxIdeal', Int32),
    ]
    return LVCOLUMNW
LVCOLUMNW_FORMAT = UInt32
LVCFMT_LEFT = 0
LVCFMT_RIGHT = 1
LVCFMT_CENTER = 2
LVCFMT_JUSTIFYMASK = 3
LVCFMT_IMAGE = 2048
LVCFMT_BITMAP_ON_RIGHT = 4096
LVCFMT_COL_HAS_IMAGES = 32768
LVCFMT_FIXED_WIDTH = 256
LVCFMT_NO_DPI_SCALE = 262144
LVCFMT_FIXED_RATIO = 524288
LVCFMT_SPLITBUTTON = 16777216
LVCOLUMNW_MASK = UInt32
LVCF_FMT = 1
LVCF_WIDTH = 2
LVCF_TEXT = 4
LVCF_SUBITEM = 8
LVCF_IMAGE = 16
LVCF_ORDER = 32
LVCF_MINWIDTH = 64
LVCF_DEFAULTWIDTH = 128
LVCF_IDEALWIDTH = 256
def _define_LVFINDINFOA_head():
    class LVFINDINFOA(Structure):
        pass
    return LVFINDINFOA
def _define_LVFINDINFOA():
    LVFINDINFOA = win32more.UI.Controls.LVFINDINFOA_head
    LVFINDINFOA._fields_ = [
        ('flags', win32more.UI.Controls.LVFINDINFOW_FLAGS),
        ('psz', win32more.Foundation.PSTR),
        ('lParam', win32more.Foundation.LPARAM),
        ('pt', win32more.Foundation.POINT),
        ('vkDirection', UInt32),
    ]
    return LVFINDINFOA
def _define_LVFINDINFOW_head():
    class LVFINDINFOW(Structure):
        pass
    return LVFINDINFOW
def _define_LVFINDINFOW():
    LVFINDINFOW = win32more.UI.Controls.LVFINDINFOW_head
    LVFINDINFOW._fields_ = [
        ('flags', win32more.UI.Controls.LVFINDINFOW_FLAGS),
        ('psz', win32more.Foundation.PWSTR),
        ('lParam', win32more.Foundation.LPARAM),
        ('pt', win32more.Foundation.POINT),
        ('vkDirection', UInt32),
    ]
    return LVFINDINFOW
LVFINDINFOW_FLAGS = UInt32
LVFI_PARAM = 1
LVFI_PARTIAL = 8
LVFI_STRING = 2
LVFI_SUBSTRING = 4
LVFI_WRAP = 32
LVFI_NEARESTXY = 64
def _define_LVFOOTERINFO_head():
    class LVFOOTERINFO(Structure):
        pass
    return LVFOOTERINFO
def _define_LVFOOTERINFO():
    LVFOOTERINFO = win32more.UI.Controls.LVFOOTERINFO_head
    LVFOOTERINFO._fields_ = [
        ('mask', UInt32),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('cItems', UInt32),
    ]
    return LVFOOTERINFO
def _define_LVFOOTERITEM_head():
    class LVFOOTERITEM(Structure):
        pass
    return LVFOOTERITEM
def _define_LVFOOTERITEM():
    LVFOOTERITEM = win32more.UI.Controls.LVFOOTERITEM_head
    LVFOOTERITEM._fields_ = [
        ('mask', win32more.UI.Controls.LVFOOTERITEM_MASK),
        ('iItem', Int32),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('state', UInt32),
        ('stateMask', UInt32),
    ]
    return LVFOOTERITEM
LVFOOTERITEM_MASK = UInt32
LVFIF_TEXT = 1
LVFIF_STATE = 2
def _define_LVGROUP_head():
    class LVGROUP(Structure):
        pass
    return LVGROUP
def _define_LVGROUP():
    LVGROUP = win32more.UI.Controls.LVGROUP_head
    LVGROUP._fields_ = [
        ('cbSize', UInt32),
        ('mask', win32more.UI.Controls.LVGROUP_MASK),
        ('pszHeader', win32more.Foundation.PWSTR),
        ('cchHeader', Int32),
        ('pszFooter', win32more.Foundation.PWSTR),
        ('cchFooter', Int32),
        ('iGroupId', Int32),
        ('stateMask', win32more.UI.Controls.LIST_VIEW_GROUP_STATE_FLAGS),
        ('state', win32more.UI.Controls.LIST_VIEW_GROUP_STATE_FLAGS),
        ('uAlign', win32more.UI.Controls.LIST_VIEW_GROUP_ALIGN_FLAGS),
        ('pszSubtitle', win32more.Foundation.PWSTR),
        ('cchSubtitle', UInt32),
        ('pszTask', win32more.Foundation.PWSTR),
        ('cchTask', UInt32),
        ('pszDescriptionTop', win32more.Foundation.PWSTR),
        ('cchDescriptionTop', UInt32),
        ('pszDescriptionBottom', win32more.Foundation.PWSTR),
        ('cchDescriptionBottom', UInt32),
        ('iTitleImage', Int32),
        ('iExtendedImage', Int32),
        ('iFirstItem', Int32),
        ('cItems', UInt32),
        ('pszSubsetTitle', win32more.Foundation.PWSTR),
        ('cchSubsetTitle', UInt32),
    ]
    return LVGROUP
LVGROUP_MASK = UInt32
LVGF_NONE = 0
LVGF_HEADER = 1
LVGF_FOOTER = 2
LVGF_STATE = 4
def _define_LVGROUPMETRICS_head():
    class LVGROUPMETRICS(Structure):
        pass
    return LVGROUPMETRICS
def _define_LVGROUPMETRICS():
    LVGROUPMETRICS = win32more.UI.Controls.LVGROUPMETRICS_head
    LVGROUPMETRICS._fields_ = [
        ('cbSize', UInt32),
        ('mask', UInt32),
        ('Left', UInt32),
        ('Top', UInt32),
        ('Right', UInt32),
        ('Bottom', UInt32),
        ('crLeft', win32more.Foundation.COLORREF),
        ('crTop', win32more.Foundation.COLORREF),
        ('crRight', win32more.Foundation.COLORREF),
        ('crBottom', win32more.Foundation.COLORREF),
        ('crHeader', win32more.Foundation.COLORREF),
        ('crFooter', win32more.Foundation.COLORREF),
    ]
    return LVGROUPMETRICS
def _define_LVHITTESTINFO_head():
    class LVHITTESTINFO(Structure):
        pass
    return LVHITTESTINFO
def _define_LVHITTESTINFO():
    LVHITTESTINFO = win32more.UI.Controls.LVHITTESTINFO_head
    LVHITTESTINFO._fields_ = [
        ('pt', win32more.Foundation.POINT),
        ('flags', win32more.UI.Controls.LVHITTESTINFO_FLAGS),
        ('iItem', Int32),
        ('iSubItem', Int32),
        ('iGroup', Int32),
    ]
    return LVHITTESTINFO
LVHITTESTINFO_FLAGS = UInt32
LVHT_ABOVE = 8
LVHT_BELOW = 16
LVHT_NOWHERE = 1
LVHT_ONITEMICON = 2
LVHT_ONITEMLABEL = 4
LVHT_ONITEMSTATEICON = 8
LVHT_TOLEFT = 64
LVHT_TORIGHT = 32
LVHT_EX_GROUP_HEADER = 268435456
LVHT_EX_GROUP_FOOTER = 536870912
LVHT_EX_GROUP_COLLAPSE = 1073741824
LVHT_EX_GROUP_BACKGROUND = 2147483648
LVHT_EX_GROUP_STATEICON = 16777216
LVHT_EX_GROUP_SUBSETLINK = 33554432
LVHT_EX_GROUP = 4076863488
LVHT_EX_ONCONTENTS = 67108864
LVHT_EX_FOOTER = 134217728
def _define_LVINSERTGROUPSORTED_head():
    class LVINSERTGROUPSORTED(Structure):
        pass
    return LVINSERTGROUPSORTED
def _define_LVINSERTGROUPSORTED():
    LVINSERTGROUPSORTED = win32more.UI.Controls.LVINSERTGROUPSORTED_head
    LVINSERTGROUPSORTED._fields_ = [
        ('pfnGroupCompare', win32more.UI.Controls.PFNLVGROUPCOMPARE),
        ('pvData', c_void_p),
        ('lvGroup', win32more.UI.Controls.LVGROUP),
    ]
    return LVINSERTGROUPSORTED
def _define_LVINSERTMARK_head():
    class LVINSERTMARK(Structure):
        pass
    return LVINSERTMARK
def _define_LVINSERTMARK():
    LVINSERTMARK = win32more.UI.Controls.LVINSERTMARK_head
    LVINSERTMARK._fields_ = [
        ('cbSize', UInt32),
        ('dwFlags', win32more.UI.Controls.LIST_VIEW_INSERT_MARK_FLAGS),
        ('iItem', Int32),
        ('dwReserved', UInt32),
    ]
    return LVINSERTMARK
def _define_LVITEMA_head():
    class LVITEMA(Structure):
        pass
    return LVITEMA
def _define_LVITEMA():
    LVITEMA = win32more.UI.Controls.LVITEMA_head
    LVITEMA._fields_ = [
        ('mask', win32more.UI.Controls.LIST_VIEW_ITEM_FLAGS),
        ('iItem', Int32),
        ('iSubItem', Int32),
        ('state', win32more.UI.Controls.LIST_VIEW_ITEM_STATE_FLAGS),
        ('stateMask', win32more.UI.Controls.LIST_VIEW_ITEM_STATE_FLAGS),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('lParam', win32more.Foundation.LPARAM),
        ('iIndent', Int32),
        ('iGroupId', win32more.UI.Controls.LVITEMA_GROUP_ID),
        ('cColumns', UInt32),
        ('puColumns', POINTER(UInt32)),
        ('piColFmt', POINTER(win32more.UI.Controls.LIST_VIEW_ITEM_COLUMN_FORMAT_FLAGS)),
        ('iGroup', Int32),
    ]
    return LVITEMA
LVITEMA_GROUP_ID = Int32
I_GROUPIDCALLBACK = -1
I_GROUPIDNONE = -2
def _define_LVITEMINDEX_head():
    class LVITEMINDEX(Structure):
        pass
    return LVITEMINDEX
def _define_LVITEMINDEX():
    LVITEMINDEX = win32more.UI.Controls.LVITEMINDEX_head
    LVITEMINDEX._fields_ = [
        ('iItem', Int32),
        ('iGroup', Int32),
    ]
    return LVITEMINDEX
def _define_LVITEMW_head():
    class LVITEMW(Structure):
        pass
    return LVITEMW
def _define_LVITEMW():
    LVITEMW = win32more.UI.Controls.LVITEMW_head
    LVITEMW._fields_ = [
        ('mask', win32more.UI.Controls.LIST_VIEW_ITEM_FLAGS),
        ('iItem', Int32),
        ('iSubItem', Int32),
        ('state', win32more.UI.Controls.LIST_VIEW_ITEM_STATE_FLAGS),
        ('stateMask', win32more.UI.Controls.LIST_VIEW_ITEM_STATE_FLAGS),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('lParam', win32more.Foundation.LPARAM),
        ('iIndent', Int32),
        ('iGroupId', win32more.UI.Controls.LVITEMA_GROUP_ID),
        ('cColumns', UInt32),
        ('puColumns', POINTER(UInt32)),
        ('piColFmt', POINTER(win32more.UI.Controls.LIST_VIEW_ITEM_COLUMN_FORMAT_FLAGS)),
        ('iGroup', Int32),
    ]
    return LVITEMW
def _define_LVSETINFOTIP_head():
    class LVSETINFOTIP(Structure):
        pass
    return LVSETINFOTIP
def _define_LVSETINFOTIP():
    LVSETINFOTIP = win32more.UI.Controls.LVSETINFOTIP_head
    LVSETINFOTIP._fields_ = [
        ('cbSize', UInt32),
        ('dwFlags', UInt32),
        ('pszText', win32more.Foundation.PWSTR),
        ('iItem', Int32),
        ('iSubItem', Int32),
    ]
    return LVSETINFOTIP
def _define_LVTILEINFO_head():
    class LVTILEINFO(Structure):
        pass
    return LVTILEINFO
def _define_LVTILEINFO():
    LVTILEINFO = win32more.UI.Controls.LVTILEINFO_head
    LVTILEINFO._fields_ = [
        ('cbSize', UInt32),
        ('iItem', Int32),
        ('cColumns', UInt32),
        ('puColumns', POINTER(UInt32)),
        ('piColFmt', POINTER(Int32)),
    ]
    return LVTILEINFO
def _define_LVTILEVIEWINFO_head():
    class LVTILEVIEWINFO(Structure):
        pass
    return LVTILEVIEWINFO
def _define_LVTILEVIEWINFO():
    LVTILEVIEWINFO = win32more.UI.Controls.LVTILEVIEWINFO_head
    LVTILEVIEWINFO._fields_ = [
        ('cbSize', UInt32),
        ('dwMask', win32more.UI.Controls.LVTILEVIEWINFO_MASK),
        ('dwFlags', win32more.UI.Controls.LVTILEVIEWINFO_FLAGS),
        ('sizeTile', win32more.Foundation.SIZE),
        ('cLines', Int32),
        ('rcLabelMargin', win32more.Foundation.RECT),
    ]
    return LVTILEVIEWINFO
LVTILEVIEWINFO_FLAGS = UInt32
LVTVIF_AUTOSIZE = 0
LVTVIF_FIXEDWIDTH = 1
LVTVIF_FIXEDHEIGHT = 2
LVTVIF_FIXEDSIZE = 3
LVTILEVIEWINFO_MASK = UInt32
LVTVIM_TILESIZE = 1
LVTVIM_COLUMNS = 2
LVTVIM_LABELMARGIN = 4
def _define_MARGINS_head():
    class MARGINS(Structure):
        pass
    return MARGINS
def _define_MARGINS():
    MARGINS = win32more.UI.Controls.MARGINS_head
    MARGINS._fields_ = [
        ('cxLeftWidth', Int32),
        ('cxRightWidth', Int32),
        ('cyTopHeight', Int32),
        ('cyBottomHeight', Int32),
    ]
    return MARGINS
MARKUPTEXTSTATES = Int32
EMT_NORMALTEXT = 1
EMT_LINKTEXT = 2
MAXBUTTONSTATES = Int32
MAXBS_NORMAL = 1
MAXBS_HOT = 2
MAXBS_PUSHED = 3
MAXBS_DISABLED = 4
MAXCAPTIONSTATES = Int32
MXCS_ACTIVE = 1
MXCS_INACTIVE = 2
MXCS_DISABLED = 3
def _define_MCGRIDINFO_head():
    class MCGRIDINFO(Structure):
        pass
    return MCGRIDINFO
def _define_MCGRIDINFO():
    MCGRIDINFO = win32more.UI.Controls.MCGRIDINFO_head
    MCGRIDINFO._fields_ = [
        ('cbSize', UInt32),
        ('dwPart', win32more.UI.Controls.MCGRIDINFO_PART),
        ('dwFlags', win32more.UI.Controls.MCGRIDINFO_FLAGS),
        ('iCalendar', Int32),
        ('iRow', Int32),
        ('iCol', Int32),
        ('bSelected', win32more.Foundation.BOOL),
        ('stStart', win32more.Foundation.SYSTEMTIME),
        ('stEnd', win32more.Foundation.SYSTEMTIME),
        ('rc', win32more.Foundation.RECT),
        ('pszName', win32more.Foundation.PWSTR),
        ('cchName', UIntPtr),
    ]
    return MCGRIDINFO
MCGRIDINFO_FLAGS = UInt32
MCGIF_DATE = 1
MCGIF_RECT = 2
MCGIF_NAME = 4
MCGRIDINFO_PART = UInt32
MCGIP_CALENDARCONTROL = 0
MCGIP_NEXT = 1
MCGIP_PREV = 2
MCGIP_FOOTER = 3
MCGIP_CALENDAR = 4
MCGIP_CALENDARHEADER = 5
MCGIP_CALENDARBODY = 6
MCGIP_CALENDARROW = 7
MCGIP_CALENDARCELL = 8
def _define_MCHITTESTINFO_head():
    class MCHITTESTINFO(Structure):
        pass
    return MCHITTESTINFO
def _define_MCHITTESTINFO():
    MCHITTESTINFO = win32more.UI.Controls.MCHITTESTINFO_head
    MCHITTESTINFO._fields_ = [
        ('cbSize', UInt32),
        ('pt', win32more.Foundation.POINT),
        ('uHit', win32more.UI.Controls.MCHITTESTINFO_HIT_FLAGS),
        ('st', win32more.Foundation.SYSTEMTIME),
        ('rc', win32more.Foundation.RECT),
        ('iOffset', Int32),
        ('iRow', Int32),
        ('iCol', Int32),
    ]
    return MCHITTESTINFO
MCHITTESTINFO_HIT_FLAGS = UInt32
MCHT_TITLE = 65536
MCHT_CALENDAR = 131072
MCHT_TODAYLINK = 196608
MCHT_CALENDARCONTROL = 1048576
MCHT_NEXT = 16777216
MCHT_PREV = 33554432
MCHT_NOWHERE = 0
MCHT_TITLEBK = 65536
MCHT_TITLEMONTH = 65537
MCHT_TITLEYEAR = 65538
MCHT_TITLEBTNNEXT = 16842755
MCHT_TITLEBTNPREV = 33619971
MCHT_CALENDARBK = 131072
MCHT_CALENDARDATE = 131073
MCHT_CALENDARDATENEXT = 16908289
MCHT_CALENDARDATEPREV = 33685505
MCHT_CALENDARDAY = 131074
MCHT_CALENDARWEEKNUM = 131075
MCHT_CALENDARDATEMIN = 131076
MCHT_CALENDARDATEMAX = 131077
MDICLOSEBUTTONSTATES = Int32
MDCL_NORMAL = 1
MDCL_HOT = 2
MDCL_PUSHED = 3
MDCL_DISABLED = 4
MDIMINBUTTONSTATES = Int32
MDMI_NORMAL = 1
MDMI_HOT = 2
MDMI_PUSHED = 3
MDMI_DISABLED = 4
MDIRESTOREBUTTONSTATES = Int32
MDRE_NORMAL = 1
MDRE_HOT = 2
MDRE_PUSHED = 3
MDRE_DISABLED = 4
def _define_MEASUREITEMSTRUCT_head():
    class MEASUREITEMSTRUCT(Structure):
        pass
    return MEASUREITEMSTRUCT
def _define_MEASUREITEMSTRUCT():
    MEASUREITEMSTRUCT = win32more.UI.Controls.MEASUREITEMSTRUCT_head
    MEASUREITEMSTRUCT._fields_ = [
        ('CtlType', win32more.UI.Controls.DRAWITEMSTRUCT_CTL_TYPE),
        ('CtlID', UInt32),
        ('itemID', UInt32),
        ('itemWidth', UInt32),
        ('itemHeight', UInt32),
        ('itemData', UIntPtr),
    ]
    return MEASUREITEMSTRUCT
MENUBANDPARTS = Int32
MDP_NEWAPPBUTTON = 1
MDP_SEPERATOR = 2
MENUBANDSTATES = Int32
MDS_NORMAL = 1
MDS_HOT = 2
MDS_PRESSED = 3
MDS_DISABLED = 4
MDS_CHECKED = 5
MDS_HOTCHECKED = 6
MENUPARTS = Int32
MENU_MENUITEM_TMSCHEMA = 1
MENU_MENUDROPDOWN_TMSCHEMA = 2
MENU_MENUBARITEM_TMSCHEMA = 3
MENU_MENUBARDROPDOWN_TMSCHEMA = 4
MENU_CHEVRON_TMSCHEMA = 5
MENU_SEPARATOR_TMSCHEMA = 6
MENU_BARBACKGROUND = 7
MENU_BARITEM = 8
MENU_POPUPBACKGROUND = 9
MENU_POPUPBORDERS = 10
MENU_POPUPCHECK = 11
MENU_POPUPCHECKBACKGROUND = 12
MENU_POPUPGUTTER = 13
MENU_POPUPITEM = 14
MENU_POPUPSEPARATOR = 15
MENU_POPUPSUBMENU = 16
MENU_SYSTEMCLOSE = 17
MENU_SYSTEMMAXIMIZE = 18
MENU_SYSTEMMINIMIZE = 19
MENU_SYSTEMRESTORE = 20
MINBUTTONSTATES = Int32
MINBS_NORMAL = 1
MINBS_HOT = 2
MINBS_PUSHED = 3
MINBS_DISABLED = 4
MINCAPTIONSTATES = Int32
MNCS_ACTIVE = 1
MNCS_INACTIVE = 2
MNCS_DISABLED = 3
MONTH_CALDENDAR_MESSAGES_VIEW = UInt32
MCMV_MONTH = 0
MCMV_YEAR = 1
MCMV_DECADE = 2
MCMV_CENTURY = 3
MCMV_MAX = 3
MONTHCALPARTS = Int32
MC_BACKGROUND = 1
MC_BORDERS = 2
MC_GRIDBACKGROUND = 3
MC_COLHEADERSPLITTER = 4
MC_GRIDCELLBACKGROUND = 5
MC_GRIDCELL = 6
MC_GRIDCELLUPPER = 7
MC_TRAILINGGRIDCELL = 8
MC_TRAILINGGRIDCELLUPPER = 9
MC_NAVNEXT = 10
MC_NAVPREV = 11
MOREPROGRAMSARROWBACKSTATES = Int32
SPSB_NORMAL = 1
SPSB_HOT = 2
SPSB_PRESSED = 3
MOREPROGRAMSARROWSTATES = Int32
SPS_NORMAL = 1
SPS_HOT = 2
SPS_PRESSED = 3
MOREPROGRAMSTABSTATES = Int32
SPMPT_NORMAL = 1
SPMPT_HOT = 2
SPMPT_SELECTED = 3
SPMPT_DISABLED = 4
SPMPT_FOCUSED = 5
MOVESTATES = Int32
DDMOVE_HIGHLIGHT = 1
DDMOVE_NOHIGHLIGHT = 2
NAV_BACKBUTTONSTATES = Int32
NAV_BB_NORMAL = 1
NAV_BB_HOT = 2
NAV_BB_PRESSED = 3
NAV_BB_DISABLED = 4
NAV_FORWARDBUTTONSTATES = Int32
NAV_FB_NORMAL = 1
NAV_FB_HOT = 2
NAV_FB_PRESSED = 3
NAV_FB_DISABLED = 4
NAV_MENUBUTTONSTATES = Int32
NAV_MB_NORMAL = 1
NAV_MB_HOT = 2
NAV_MB_PRESSED = 3
NAV_MB_DISABLED = 4
NAVIGATIONPARTS = Int32
NAV_BACKBUTTON = 1
NAV_FORWARDBUTTON = 2
NAV_MENUBUTTON = 3
NAVNEXTSTATES = Int32
MCNN_NORMAL = 1
MCNN_HOT = 2
MCNN_PRESSED = 3
MCNN_DISABLED = 4
NAVPREVSTATES = Int32
MCNP_NORMAL = 1
MCNP_HOT = 2
MCNP_PRESSED = 3
MCNP_DISABLED = 4
NM_TREEVIEW_ACTION = UInt32
TVE_COLLAPSE = 1
TVE_EXPAND = 2
TVE_TOGGLE = 3
TVE_EXPANDPARTIAL = 16384
TVE_COLLAPSERESET = 32768
TVC_UNKNOWN = 0
TVC_BYMOUSE = 1
TVC_BYKEYBOARD = 2
def _define_NMBCDROPDOWN_head():
    class NMBCDROPDOWN(Structure):
        pass
    return NMBCDROPDOWN
def _define_NMBCDROPDOWN():
    NMBCDROPDOWN = win32more.UI.Controls.NMBCDROPDOWN_head
    NMBCDROPDOWN._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('rcButton', win32more.Foundation.RECT),
    ]
    return NMBCDROPDOWN
def _define_NMBCHOTITEM_head():
    class NMBCHOTITEM(Structure):
        pass
    return NMBCHOTITEM
def _define_NMBCHOTITEM():
    NMBCHOTITEM = win32more.UI.Controls.NMBCHOTITEM_head
    NMBCHOTITEM._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwFlags', win32more.UI.Controls.NMTBHOTITEM_FLAGS),
    ]
    return NMBCHOTITEM
def _define_NMCBEDRAGBEGINA_head():
    class NMCBEDRAGBEGINA(Structure):
        pass
    return NMCBEDRAGBEGINA
def _define_NMCBEDRAGBEGINA():
    NMCBEDRAGBEGINA = win32more.UI.Controls.NMCBEDRAGBEGINA_head
    NMCBEDRAGBEGINA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItemid', Int32),
        ('szText', win32more.Foundation.CHAR * 260),
    ]
    return NMCBEDRAGBEGINA
def _define_NMCBEDRAGBEGINW_head():
    class NMCBEDRAGBEGINW(Structure):
        pass
    return NMCBEDRAGBEGINW
def _define_NMCBEDRAGBEGINW():
    NMCBEDRAGBEGINW = win32more.UI.Controls.NMCBEDRAGBEGINW_head
    NMCBEDRAGBEGINW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItemid', Int32),
        ('szText', Char * 260),
    ]
    return NMCBEDRAGBEGINW
def _define_NMCBEENDEDITA_head():
    class NMCBEENDEDITA(Structure):
        pass
    return NMCBEENDEDITA
def _define_NMCBEENDEDITA():
    NMCBEENDEDITA = win32more.UI.Controls.NMCBEENDEDITA_head
    NMCBEENDEDITA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('fChanged', win32more.Foundation.BOOL),
        ('iNewSelection', Int32),
        ('szText', win32more.Foundation.CHAR * 260),
        ('iWhy', Int32),
    ]
    return NMCBEENDEDITA
def _define_NMCBEENDEDITW_head():
    class NMCBEENDEDITW(Structure):
        pass
    return NMCBEENDEDITW
def _define_NMCBEENDEDITW():
    NMCBEENDEDITW = win32more.UI.Controls.NMCBEENDEDITW_head
    NMCBEENDEDITW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('fChanged', win32more.Foundation.BOOL),
        ('iNewSelection', Int32),
        ('szText', Char * 260),
        ('iWhy', Int32),
    ]
    return NMCBEENDEDITW
def _define_NMCHAR_head():
    class NMCHAR(Structure):
        pass
    return NMCHAR
def _define_NMCHAR():
    NMCHAR = win32more.UI.Controls.NMCHAR_head
    NMCHAR._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('ch', UInt32),
        ('dwItemPrev', UInt32),
        ('dwItemNext', UInt32),
    ]
    return NMCHAR
def _define_NMCOMBOBOXEXA_head():
    class NMCOMBOBOXEXA(Structure):
        pass
    return NMCOMBOBOXEXA
def _define_NMCOMBOBOXEXA():
    NMCOMBOBOXEXA = win32more.UI.Controls.NMCOMBOBOXEXA_head
    NMCOMBOBOXEXA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('ceItem', win32more.UI.Controls.COMBOBOXEXITEMA),
    ]
    return NMCOMBOBOXEXA
def _define_NMCOMBOBOXEXW_head():
    class NMCOMBOBOXEXW(Structure):
        pass
    return NMCOMBOBOXEXW
def _define_NMCOMBOBOXEXW():
    NMCOMBOBOXEXW = win32more.UI.Controls.NMCOMBOBOXEXW_head
    NMCOMBOBOXEXW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('ceItem', win32more.UI.Controls.COMBOBOXEXITEMW),
    ]
    return NMCOMBOBOXEXW
def _define_NMCUSTOMDRAW_head():
    class NMCUSTOMDRAW(Structure):
        pass
    return NMCUSTOMDRAW
def _define_NMCUSTOMDRAW():
    NMCUSTOMDRAW = win32more.UI.Controls.NMCUSTOMDRAW_head
    NMCUSTOMDRAW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwDrawStage', win32more.UI.Controls.NMCUSTOMDRAW_DRAW_STAGE),
        ('hdc', win32more.Graphics.Gdi.HDC),
        ('rc', win32more.Foundation.RECT),
        ('dwItemSpec', UIntPtr),
        ('uItemState', win32more.UI.Controls.NMCUSTOMDRAW_DRAW_STATE_FLAGS),
        ('lItemlParam', win32more.Foundation.LPARAM),
    ]
    return NMCUSTOMDRAW
NMCUSTOMDRAW_DRAW_STAGE = UInt32
CDDS_POSTPAINT = 2
CDDS_PREERASE = 3
CDDS_PREPAINT = 1
CDDS_ITEMPOSTERASE = 65540
CDDS_ITEMPOSTPAINT = 65538
CDDS_ITEMPREERASE = 65539
CDDS_ITEMPREPAINT = 65537
CDDS_SUBITEM = 131072
NMCUSTOMDRAW_DRAW_STATE_FLAGS = UInt32
CDIS_SELECTED = 1
CDIS_GRAYED = 2
CDIS_DISABLED = 4
CDIS_CHECKED = 8
CDIS_FOCUS = 16
CDIS_DEFAULT = 32
CDIS_HOT = 64
CDIS_MARKED = 128
CDIS_INDETERMINATE = 256
CDIS_SHOWKEYBOARDCUES = 512
CDIS_NEARHOT = 1024
CDIS_OTHERSIDEHOT = 2048
CDIS_DROPHILITED = 4096
def _define_NMCUSTOMSPLITRECTINFO_head():
    class NMCUSTOMSPLITRECTINFO(Structure):
        pass
    return NMCUSTOMSPLITRECTINFO
def _define_NMCUSTOMSPLITRECTINFO():
    NMCUSTOMSPLITRECTINFO = win32more.UI.Controls.NMCUSTOMSPLITRECTINFO_head
    NMCUSTOMSPLITRECTINFO._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('rcClient', win32more.Foundation.RECT),
        ('rcButton', win32more.Foundation.RECT),
        ('rcSplit', win32more.Foundation.RECT),
    ]
    return NMCUSTOMSPLITRECTINFO
def _define_NMCUSTOMTEXT_head():
    class NMCUSTOMTEXT(Structure):
        pass
    return NMCUSTOMTEXT
def _define_NMCUSTOMTEXT():
    NMCUSTOMTEXT = win32more.UI.Controls.NMCUSTOMTEXT_head
    NMCUSTOMTEXT._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('hDC', win32more.Graphics.Gdi.HDC),
        ('lpString', win32more.Foundation.PWSTR),
        ('nCount', Int32),
        ('lpRect', POINTER(win32more.Foundation.RECT_head)),
        ('uFormat', UInt32),
        ('fLink', win32more.Foundation.BOOL),
    ]
    return NMCUSTOMTEXT
def _define_NMDATETIMECHANGE_head():
    class NMDATETIMECHANGE(Structure):
        pass
    return NMDATETIMECHANGE
def _define_NMDATETIMECHANGE():
    NMDATETIMECHANGE = win32more.UI.Controls.NMDATETIMECHANGE_head
    NMDATETIMECHANGE._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('dwFlags', win32more.UI.Controls.NMDATETIMECHANGE_FLAGS),
        ('st', win32more.Foundation.SYSTEMTIME),
    ]
    return NMDATETIMECHANGE
NMDATETIMECHANGE_FLAGS = UInt32
GDT_NONE = 1
GDT_VALID = 0
def _define_NMDATETIMEFORMATA_head():
    class NMDATETIMEFORMATA(Structure):
        pass
    return NMDATETIMEFORMATA
def _define_NMDATETIMEFORMATA():
    NMDATETIMEFORMATA = win32more.UI.Controls.NMDATETIMEFORMATA_head
    NMDATETIMEFORMATA._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('pszFormat', win32more.Foundation.PSTR),
        ('st', win32more.Foundation.SYSTEMTIME),
        ('pszDisplay', win32more.Foundation.PSTR),
        ('szDisplay', win32more.Foundation.CHAR * 64),
    ]
    return NMDATETIMEFORMATA
def _define_NMDATETIMEFORMATQUERYA_head():
    class NMDATETIMEFORMATQUERYA(Structure):
        pass
    return NMDATETIMEFORMATQUERYA
def _define_NMDATETIMEFORMATQUERYA():
    NMDATETIMEFORMATQUERYA = win32more.UI.Controls.NMDATETIMEFORMATQUERYA_head
    NMDATETIMEFORMATQUERYA._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('pszFormat', win32more.Foundation.PSTR),
        ('szMax', win32more.Foundation.SIZE),
    ]
    return NMDATETIMEFORMATQUERYA
def _define_NMDATETIMEFORMATQUERYW_head():
    class NMDATETIMEFORMATQUERYW(Structure):
        pass
    return NMDATETIMEFORMATQUERYW
def _define_NMDATETIMEFORMATQUERYW():
    NMDATETIMEFORMATQUERYW = win32more.UI.Controls.NMDATETIMEFORMATQUERYW_head
    NMDATETIMEFORMATQUERYW._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('pszFormat', win32more.Foundation.PWSTR),
        ('szMax', win32more.Foundation.SIZE),
    ]
    return NMDATETIMEFORMATQUERYW
def _define_NMDATETIMEFORMATW_head():
    class NMDATETIMEFORMATW(Structure):
        pass
    return NMDATETIMEFORMATW
def _define_NMDATETIMEFORMATW():
    NMDATETIMEFORMATW = win32more.UI.Controls.NMDATETIMEFORMATW_head
    NMDATETIMEFORMATW._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('pszFormat', win32more.Foundation.PWSTR),
        ('st', win32more.Foundation.SYSTEMTIME),
        ('pszDisplay', win32more.Foundation.PWSTR),
        ('szDisplay', Char * 64),
    ]
    return NMDATETIMEFORMATW
def _define_NMDATETIMESTRINGA_head():
    class NMDATETIMESTRINGA(Structure):
        pass
    return NMDATETIMESTRINGA
def _define_NMDATETIMESTRINGA():
    NMDATETIMESTRINGA = win32more.UI.Controls.NMDATETIMESTRINGA_head
    NMDATETIMESTRINGA._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('pszUserString', win32more.Foundation.PSTR),
        ('st', win32more.Foundation.SYSTEMTIME),
        ('dwFlags', UInt32),
    ]
    return NMDATETIMESTRINGA
def _define_NMDATETIMESTRINGW_head():
    class NMDATETIMESTRINGW(Structure):
        pass
    return NMDATETIMESTRINGW
def _define_NMDATETIMESTRINGW():
    NMDATETIMESTRINGW = win32more.UI.Controls.NMDATETIMESTRINGW_head
    NMDATETIMESTRINGW._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('pszUserString', win32more.Foundation.PWSTR),
        ('st', win32more.Foundation.SYSTEMTIME),
        ('dwFlags', UInt32),
    ]
    return NMDATETIMESTRINGW
def _define_NMDATETIMEWMKEYDOWNA_head():
    class NMDATETIMEWMKEYDOWNA(Structure):
        pass
    return NMDATETIMEWMKEYDOWNA
def _define_NMDATETIMEWMKEYDOWNA():
    NMDATETIMEWMKEYDOWNA = win32more.UI.Controls.NMDATETIMEWMKEYDOWNA_head
    NMDATETIMEWMKEYDOWNA._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('nVirtKey', Int32),
        ('pszFormat', win32more.Foundation.PSTR),
        ('st', win32more.Foundation.SYSTEMTIME),
    ]
    return NMDATETIMEWMKEYDOWNA
def _define_NMDATETIMEWMKEYDOWNW_head():
    class NMDATETIMEWMKEYDOWNW(Structure):
        pass
    return NMDATETIMEWMKEYDOWNW
def _define_NMDATETIMEWMKEYDOWNW():
    NMDATETIMEWMKEYDOWNW = win32more.UI.Controls.NMDATETIMEWMKEYDOWNW_head
    NMDATETIMEWMKEYDOWNW._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('nVirtKey', Int32),
        ('pszFormat', win32more.Foundation.PWSTR),
        ('st', win32more.Foundation.SYSTEMTIME),
    ]
    return NMDATETIMEWMKEYDOWNW
def _define_NMDAYSTATE_head():
    class NMDAYSTATE(Structure):
        pass
    return NMDAYSTATE
def _define_NMDAYSTATE():
    NMDAYSTATE = win32more.UI.Controls.NMDAYSTATE_head
    NMDAYSTATE._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('stStart', win32more.Foundation.SYSTEMTIME),
        ('cDayState', Int32),
        ('prgDayState', POINTER(UInt32)),
    ]
    return NMDAYSTATE
def _define_NMHDDISPINFOA_head():
    class NMHDDISPINFOA(Structure):
        pass
    return NMHDDISPINFOA
def _define_NMHDDISPINFOA():
    NMHDDISPINFOA = win32more.UI.Controls.NMHDDISPINFOA_head
    NMHDDISPINFOA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('mask', win32more.UI.Controls.HDI_MASK),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMHDDISPINFOA
def _define_NMHDDISPINFOW_head():
    class NMHDDISPINFOW(Structure):
        pass
    return NMHDDISPINFOW
def _define_NMHDDISPINFOW():
    NMHDDISPINFOW = win32more.UI.Controls.NMHDDISPINFOW_head
    NMHDDISPINFOW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('mask', win32more.UI.Controls.HDI_MASK),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMHDDISPINFOW
def _define_NMHDFILTERBTNCLICK_head():
    class NMHDFILTERBTNCLICK(Structure):
        pass
    return NMHDFILTERBTNCLICK
def _define_NMHDFILTERBTNCLICK():
    NMHDFILTERBTNCLICK = win32more.UI.Controls.NMHDFILTERBTNCLICK_head
    NMHDFILTERBTNCLICK._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('rc', win32more.Foundation.RECT),
    ]
    return NMHDFILTERBTNCLICK
def _define_NMHDR_head():
    class NMHDR(Structure):
        pass
    return NMHDR
def _define_NMHDR():
    NMHDR = win32more.UI.Controls.NMHDR_head
    NMHDR._fields_ = [
        ('hwndFrom', win32more.Foundation.HWND),
        ('idFrom', UIntPtr),
        ('code', UInt32),
    ]
    return NMHDR
def _define_NMHEADERA_head():
    class NMHEADERA(Structure):
        pass
    return NMHEADERA
def _define_NMHEADERA():
    NMHEADERA = win32more.UI.Controls.NMHEADERA_head
    NMHEADERA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('iButton', win32more.UI.Controls.HEADER_CONTROL_NOTIFICATION_BUTTON),
        ('pitem', POINTER(win32more.UI.Controls.HDITEMA_head)),
    ]
    return NMHEADERA
def _define_NMHEADERW_head():
    class NMHEADERW(Structure):
        pass
    return NMHEADERW
def _define_NMHEADERW():
    NMHEADERW = win32more.UI.Controls.NMHEADERW_head
    NMHEADERW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('iButton', win32more.UI.Controls.HEADER_CONTROL_NOTIFICATION_BUTTON),
        ('pitem', POINTER(win32more.UI.Controls.HDITEMW_head)),
    ]
    return NMHEADERW
def _define_NMIPADDRESS_head():
    class NMIPADDRESS(Structure):
        pass
    return NMIPADDRESS
def _define_NMIPADDRESS():
    NMIPADDRESS = win32more.UI.Controls.NMIPADDRESS_head
    NMIPADDRESS._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iField', Int32),
        ('iValue', Int32),
    ]
    return NMIPADDRESS
def _define_NMITEMACTIVATE_head():
    class NMITEMACTIVATE(Structure):
        pass
    return NMITEMACTIVATE
def _define_NMITEMACTIVATE():
    NMITEMACTIVATE = win32more.UI.Controls.NMITEMACTIVATE_head
    NMITEMACTIVATE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('iSubItem', Int32),
        ('uNewState', UInt32),
        ('uOldState', UInt32),
        ('uChanged', UInt32),
        ('ptAction', win32more.Foundation.POINT),
        ('lParam', win32more.Foundation.LPARAM),
        ('uKeyFlags', UInt32),
    ]
    return NMITEMACTIVATE
def _define_NMKEY_head():
    class NMKEY(Structure):
        pass
    return NMKEY
def _define_NMKEY():
    NMKEY = win32more.UI.Controls.NMKEY_head
    NMKEY._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('nVKey', UInt32),
        ('uFlags', UInt32),
    ]
    return NMKEY
def _define_NMLINK_head():
    class NMLINK(Structure):
        pass
    return NMLINK
def _define_NMLINK():
    NMLINK = win32more.UI.Controls.NMLINK_head
    NMLINK._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('item', win32more.UI.Controls.LITEM),
    ]
    return NMLINK
def _define_NMLISTVIEW_head():
    class NMLISTVIEW(Structure):
        pass
    return NMLISTVIEW
def _define_NMLISTVIEW():
    NMLISTVIEW = win32more.UI.Controls.NMLISTVIEW_head
    NMLISTVIEW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('iSubItem', Int32),
        ('uNewState', UInt32),
        ('uOldState', UInt32),
        ('uChanged', win32more.UI.Controls.LIST_VIEW_ITEM_FLAGS),
        ('ptAction', win32more.Foundation.POINT),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMLISTVIEW
def _define_NMLVCACHEHINT_head():
    class NMLVCACHEHINT(Structure):
        pass
    return NMLVCACHEHINT
def _define_NMLVCACHEHINT():
    NMLVCACHEHINT = win32more.UI.Controls.NMLVCACHEHINT_head
    NMLVCACHEHINT._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iFrom', Int32),
        ('iTo', Int32),
    ]
    return NMLVCACHEHINT
def _define_NMLVCUSTOMDRAW_head():
    class NMLVCUSTOMDRAW(Structure):
        pass
    return NMLVCUSTOMDRAW
def _define_NMLVCUSTOMDRAW():
    NMLVCUSTOMDRAW = win32more.UI.Controls.NMLVCUSTOMDRAW_head
    NMLVCUSTOMDRAW._fields_ = [
        ('nmcd', win32more.UI.Controls.NMCUSTOMDRAW),
        ('clrText', win32more.Foundation.COLORREF),
        ('clrTextBk', win32more.Foundation.COLORREF),
        ('iSubItem', Int32),
        ('dwItemType', win32more.UI.Controls.NMLVCUSTOMDRAW_ITEM_TYPE),
        ('clrFace', win32more.Foundation.COLORREF),
        ('iIconEffect', Int32),
        ('iIconPhase', Int32),
        ('iPartId', Int32),
        ('iStateId', Int32),
        ('rcText', win32more.Foundation.RECT),
        ('uAlign', win32more.UI.Controls.LIST_VIEW_GROUP_ALIGN_FLAGS),
    ]
    return NMLVCUSTOMDRAW
NMLVCUSTOMDRAW_ITEM_TYPE = UInt32
LVCDI_ITEM = 0
LVCDI_GROUP = 1
LVCDI_ITEMSLIST = 2
def _define_NMLVDISPINFOA_head():
    class NMLVDISPINFOA(Structure):
        pass
    return NMLVDISPINFOA
def _define_NMLVDISPINFOA():
    NMLVDISPINFOA = win32more.UI.Controls.NMLVDISPINFOA_head
    NMLVDISPINFOA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('item', win32more.UI.Controls.LVITEMA),
    ]
    return NMLVDISPINFOA
def _define_NMLVDISPINFOW_head():
    class NMLVDISPINFOW(Structure):
        pass
    return NMLVDISPINFOW
def _define_NMLVDISPINFOW():
    NMLVDISPINFOW = win32more.UI.Controls.NMLVDISPINFOW_head
    NMLVDISPINFOW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('item', win32more.UI.Controls.LVITEMW),
    ]
    return NMLVDISPINFOW
def _define_NMLVEMPTYMARKUP_head():
    class NMLVEMPTYMARKUP(Structure):
        pass
    return NMLVEMPTYMARKUP
def _define_NMLVEMPTYMARKUP():
    NMLVEMPTYMARKUP = win32more.UI.Controls.NMLVEMPTYMARKUP_head
    NMLVEMPTYMARKUP._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwFlags', win32more.UI.Controls.NMLVEMPTYMARKUP_FLAGS),
        ('szMarkup', Char * 2084),
    ]
    return NMLVEMPTYMARKUP
NMLVEMPTYMARKUP_FLAGS = UInt32
EMF_CENTERED = 1
def _define_NMLVFINDITEMA_head():
    class NMLVFINDITEMA(Structure):
        pass
    return NMLVFINDITEMA
def _define_NMLVFINDITEMA():
    NMLVFINDITEMA = win32more.UI.Controls.NMLVFINDITEMA_head
    NMLVFINDITEMA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iStart', Int32),
        ('lvfi', win32more.UI.Controls.LVFINDINFOA),
    ]
    return NMLVFINDITEMA
def _define_NMLVFINDITEMW_head():
    class NMLVFINDITEMW(Structure):
        pass
    return NMLVFINDITEMW
def _define_NMLVFINDITEMW():
    NMLVFINDITEMW = win32more.UI.Controls.NMLVFINDITEMW_head
    NMLVFINDITEMW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iStart', Int32),
        ('lvfi', win32more.UI.Controls.LVFINDINFOW),
    ]
    return NMLVFINDITEMW
NMLVGETINFOTIP_FLAGS = UInt32
LVGIT_UNFOLDED = 1
LVGIT_ZERO = 0
def _define_NMLVGETINFOTIPA_head():
    class NMLVGETINFOTIPA(Structure):
        pass
    return NMLVGETINFOTIPA
def _define_NMLVGETINFOTIPA():
    NMLVGETINFOTIPA = win32more.UI.Controls.NMLVGETINFOTIPA_head
    NMLVGETINFOTIPA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwFlags', win32more.UI.Controls.NMLVGETINFOTIP_FLAGS),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iItem', Int32),
        ('iSubItem', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMLVGETINFOTIPA
def _define_NMLVGETINFOTIPW_head():
    class NMLVGETINFOTIPW(Structure):
        pass
    return NMLVGETINFOTIPW
def _define_NMLVGETINFOTIPW():
    NMLVGETINFOTIPW = win32more.UI.Controls.NMLVGETINFOTIPW_head
    NMLVGETINFOTIPW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwFlags', win32more.UI.Controls.NMLVGETINFOTIP_FLAGS),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iItem', Int32),
        ('iSubItem', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMLVGETINFOTIPW
def _define_NMLVKEYDOWN_head():
    class NMLVKEYDOWN(Structure):
        pass
    return NMLVKEYDOWN
def _define_NMLVKEYDOWN():
    NMLVKEYDOWN = win32more.UI.Controls.NMLVKEYDOWN_head
    NMLVKEYDOWN._pack_ = 1
    NMLVKEYDOWN._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('wVKey', UInt16),
        ('flags', UInt32),
    ]
    return NMLVKEYDOWN
def _define_NMLVLINK_head():
    class NMLVLINK(Structure):
        pass
    return NMLVLINK
def _define_NMLVLINK():
    NMLVLINK = win32more.UI.Controls.NMLVLINK_head
    NMLVLINK._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('link', win32more.UI.Controls.LITEM),
        ('iItem', Int32),
        ('iSubItem', Int32),
    ]
    return NMLVLINK
def _define_NMLVODSTATECHANGE_head():
    class NMLVODSTATECHANGE(Structure):
        pass
    return NMLVODSTATECHANGE
def _define_NMLVODSTATECHANGE():
    NMLVODSTATECHANGE = win32more.UI.Controls.NMLVODSTATECHANGE_head
    NMLVODSTATECHANGE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iFrom', Int32),
        ('iTo', Int32),
        ('uNewState', win32more.UI.Controls.LIST_VIEW_ITEM_STATE_FLAGS),
        ('uOldState', win32more.UI.Controls.LIST_VIEW_ITEM_STATE_FLAGS),
    ]
    return NMLVODSTATECHANGE
def _define_NMLVSCROLL_head():
    class NMLVSCROLL(Structure):
        pass
    return NMLVSCROLL
def _define_NMLVSCROLL():
    NMLVSCROLL = win32more.UI.Controls.NMLVSCROLL_head
    NMLVSCROLL._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dx', Int32),
        ('dy', Int32),
    ]
    return NMLVSCROLL
def _define_NMMOUSE_head():
    class NMMOUSE(Structure):
        pass
    return NMMOUSE
def _define_NMMOUSE():
    NMMOUSE = win32more.UI.Controls.NMMOUSE_head
    NMMOUSE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwItemSpec', UIntPtr),
        ('dwItemData', UIntPtr),
        ('pt', win32more.Foundation.POINT),
        ('dwHitInfo', win32more.Foundation.LPARAM),
    ]
    return NMMOUSE
def _define_NMOBJECTNOTIFY_head():
    class NMOBJECTNOTIFY(Structure):
        pass
    return NMOBJECTNOTIFY
def _define_NMOBJECTNOTIFY():
    NMOBJECTNOTIFY = win32more.UI.Controls.NMOBJECTNOTIFY_head
    NMOBJECTNOTIFY._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('piid', POINTER(Guid)),
        ('pObject', c_void_p),
        ('hResult', win32more.Foundation.HRESULT),
        ('dwFlags', UInt32),
    ]
    return NMOBJECTNOTIFY
def _define_NMPGCALCSIZE_head():
    class NMPGCALCSIZE(Structure):
        pass
    return NMPGCALCSIZE
def _define_NMPGCALCSIZE():
    NMPGCALCSIZE = win32more.UI.Controls.NMPGCALCSIZE_head
    NMPGCALCSIZE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwFlag', win32more.UI.Controls.NMPGCALCSIZE_FLAGS),
        ('iWidth', Int32),
        ('iHeight', Int32),
    ]
    return NMPGCALCSIZE
NMPGCALCSIZE_FLAGS = UInt32
PGF_CALCHEIGHT = 2
PGF_CALCWIDTH = 1
def _define_NMPGHOTITEM_head():
    class NMPGHOTITEM(Structure):
        pass
    return NMPGHOTITEM
def _define_NMPGHOTITEM():
    NMPGHOTITEM = win32more.UI.Controls.NMPGHOTITEM_head
    NMPGHOTITEM._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('idOld', Int32),
        ('idNew', Int32),
        ('dwFlags', UInt32),
    ]
    return NMPGHOTITEM
def _define_NMPGSCROLL_head():
    class NMPGSCROLL(Structure):
        pass
    return NMPGSCROLL
def _define_NMPGSCROLL():
    NMPGSCROLL = win32more.UI.Controls.NMPGSCROLL_head
    NMPGSCROLL._pack_ = 1
    NMPGSCROLL._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('fwKeys', win32more.UI.Controls.NMPGSCROLL_KEYS),
        ('rcParent', win32more.Foundation.RECT),
        ('iDir', win32more.UI.Controls.NMPGSCROLL_DIR),
        ('iXpos', Int32),
        ('iYpos', Int32),
        ('iScroll', Int32),
    ]
    return NMPGSCROLL
NMPGSCROLL_DIR = UInt32
PGF_SCROLLDOWN = 2
PGF_SCROLLLEFT = 4
PGF_SCROLLRIGHT = 8
PGF_SCROLLUP = 1
NMPGSCROLL_KEYS = UInt16
PGK_NONE = 0
PGK_SHIFT = 1
PGK_CONTROL = 2
PGK_MENU = 4
def _define_NMRBAUTOSIZE_head():
    class NMRBAUTOSIZE(Structure):
        pass
    return NMRBAUTOSIZE
def _define_NMRBAUTOSIZE():
    NMRBAUTOSIZE = win32more.UI.Controls.NMRBAUTOSIZE_head
    NMRBAUTOSIZE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('fChanged', win32more.Foundation.BOOL),
        ('rcTarget', win32more.Foundation.RECT),
        ('rcActual', win32more.Foundation.RECT),
    ]
    return NMRBAUTOSIZE
def _define_NMREBAR_head():
    class NMREBAR(Structure):
        pass
    return NMREBAR
def _define_NMREBAR():
    NMREBAR = win32more.UI.Controls.NMREBAR_head
    NMREBAR._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwMask', win32more.UI.Controls.NMREBAR_MASK_FLAGS),
        ('uBand', UInt32),
        ('fStyle', UInt32),
        ('wID', UInt32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMREBAR
NMREBAR_MASK_FLAGS = UInt32
RBNM_ID = 1
RBNM_LPARAM = 4
RBNM_STYLE = 2
def _define_NMREBARAUTOBREAK_head():
    class NMREBARAUTOBREAK(Structure):
        pass
    return NMREBARAUTOBREAK
def _define_NMREBARAUTOBREAK():
    NMREBARAUTOBREAK = win32more.UI.Controls.NMREBARAUTOBREAK_head
    NMREBARAUTOBREAK._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('uBand', UInt32),
        ('wID', UInt32),
        ('lParam', win32more.Foundation.LPARAM),
        ('uMsg', UInt32),
        ('fStyleCurrent', UInt32),
        ('fAutoBreak', win32more.Foundation.BOOL),
    ]
    return NMREBARAUTOBREAK
def _define_NMREBARCHEVRON_head():
    class NMREBARCHEVRON(Structure):
        pass
    return NMREBARCHEVRON
def _define_NMREBARCHEVRON():
    NMREBARCHEVRON = win32more.UI.Controls.NMREBARCHEVRON_head
    NMREBARCHEVRON._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('uBand', UInt32),
        ('wID', UInt32),
        ('lParam', win32more.Foundation.LPARAM),
        ('rc', win32more.Foundation.RECT),
        ('lParamNM', win32more.Foundation.LPARAM),
    ]
    return NMREBARCHEVRON
def _define_NMREBARCHILDSIZE_head():
    class NMREBARCHILDSIZE(Structure):
        pass
    return NMREBARCHILDSIZE
def _define_NMREBARCHILDSIZE():
    NMREBARCHILDSIZE = win32more.UI.Controls.NMREBARCHILDSIZE_head
    NMREBARCHILDSIZE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('uBand', UInt32),
        ('wID', UInt32),
        ('rcChild', win32more.Foundation.RECT),
        ('rcBand', win32more.Foundation.RECT),
    ]
    return NMREBARCHILDSIZE
def _define_NMREBARSPLITTER_head():
    class NMREBARSPLITTER(Structure):
        pass
    return NMREBARSPLITTER
def _define_NMREBARSPLITTER():
    NMREBARSPLITTER = win32more.UI.Controls.NMREBARSPLITTER_head
    NMREBARSPLITTER._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('rcSizing', win32more.Foundation.RECT),
    ]
    return NMREBARSPLITTER
def _define_NMSEARCHWEB_head():
    class NMSEARCHWEB(Structure):
        pass
    return NMSEARCHWEB
def _define_NMSEARCHWEB():
    NMSEARCHWEB = win32more.UI.Controls.NMSEARCHWEB_head
    NMSEARCHWEB._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('entrypoint', win32more.UI.Controls.EC_SEARCHWEB_ENTRYPOINT),
        ('hasQueryText', win32more.Foundation.BOOL),
        ('invokeSucceeded', win32more.Foundation.BOOL),
    ]
    return NMSEARCHWEB
def _define_NMSELCHANGE_head():
    class NMSELCHANGE(Structure):
        pass
    return NMSELCHANGE
def _define_NMSELCHANGE():
    NMSELCHANGE = win32more.UI.Controls.NMSELCHANGE_head
    NMSELCHANGE._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('stSelStart', win32more.Foundation.SYSTEMTIME),
        ('stSelEnd', win32more.Foundation.SYSTEMTIME),
    ]
    return NMSELCHANGE
def _define_NMTBCUSTOMDRAW_head():
    class NMTBCUSTOMDRAW(Structure):
        pass
    return NMTBCUSTOMDRAW
def _define_NMTBCUSTOMDRAW():
    NMTBCUSTOMDRAW = win32more.UI.Controls.NMTBCUSTOMDRAW_head
    NMTBCUSTOMDRAW._fields_ = [
        ('nmcd', win32more.UI.Controls.NMCUSTOMDRAW),
        ('hbrMonoDither', win32more.Graphics.Gdi.HBRUSH),
        ('hbrLines', win32more.Graphics.Gdi.HBRUSH),
        ('hpenLines', win32more.Graphics.Gdi.HPEN),
        ('clrText', win32more.Foundation.COLORREF),
        ('clrMark', win32more.Foundation.COLORREF),
        ('clrTextHighlight', win32more.Foundation.COLORREF),
        ('clrBtnFace', win32more.Foundation.COLORREF),
        ('clrBtnHighlight', win32more.Foundation.COLORREF),
        ('clrHighlightHotTrack', win32more.Foundation.COLORREF),
        ('rcText', win32more.Foundation.RECT),
        ('nStringBkMode', Int32),
        ('nHLStringBkMode', Int32),
        ('iListGap', Int32),
    ]
    return NMTBCUSTOMDRAW
def _define_NMTBDISPINFOA_head():
    class NMTBDISPINFOA(Structure):
        pass
    return NMTBDISPINFOA
def _define_NMTBDISPINFOA():
    NMTBDISPINFOA = win32more.UI.Controls.NMTBDISPINFOA_head
    NMTBDISPINFOA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwMask', win32more.UI.Controls.NMTBDISPINFOW_MASK),
        ('idCommand', Int32),
        ('lParam', UIntPtr),
        ('iImage', Int32),
        ('pszText', win32more.Foundation.PSTR),
        ('cchText', Int32),
    ]
    return NMTBDISPINFOA
def _define_NMTBDISPINFOW_head():
    class NMTBDISPINFOW(Structure):
        pass
    return NMTBDISPINFOW
def _define_NMTBDISPINFOW():
    NMTBDISPINFOW = win32more.UI.Controls.NMTBDISPINFOW_head
    NMTBDISPINFOW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwMask', win32more.UI.Controls.NMTBDISPINFOW_MASK),
        ('idCommand', Int32),
        ('lParam', UIntPtr),
        ('iImage', Int32),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchText', Int32),
    ]
    return NMTBDISPINFOW
NMTBDISPINFOW_MASK = UInt32
TBNF_IMAGE = 1
TBNF_TEXT = 2
TBNF_DI_SETITEM = 268435456
def _define_NMTBGETINFOTIPA_head():
    class NMTBGETINFOTIPA(Structure):
        pass
    return NMTBGETINFOTIPA
def _define_NMTBGETINFOTIPA():
    NMTBGETINFOTIPA = win32more.UI.Controls.NMTBGETINFOTIPA_head
    NMTBGETINFOTIPA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iItem', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMTBGETINFOTIPA
def _define_NMTBGETINFOTIPW_head():
    class NMTBGETINFOTIPW(Structure):
        pass
    return NMTBGETINFOTIPW
def _define_NMTBGETINFOTIPW():
    NMTBGETINFOTIPW = win32more.UI.Controls.NMTBGETINFOTIPW_head
    NMTBGETINFOTIPW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iItem', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMTBGETINFOTIPW
def _define_NMTBHOTITEM_head():
    class NMTBHOTITEM(Structure):
        pass
    return NMTBHOTITEM
def _define_NMTBHOTITEM():
    NMTBHOTITEM = win32more.UI.Controls.NMTBHOTITEM_head
    NMTBHOTITEM._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('idOld', Int32),
        ('idNew', Int32),
        ('dwFlags', win32more.UI.Controls.NMTBHOTITEM_FLAGS),
    ]
    return NMTBHOTITEM
NMTBHOTITEM_FLAGS = UInt32
HICF_ACCELERATOR = 4
HICF_ARROWKEYS = 2
HICF_DUPACCEL = 8
HICF_ENTERING = 16
HICF_LEAVING = 32
HICF_LMOUSE = 128
HICF_MOUSE = 1
HICF_OTHER = 0
HICF_RESELECT = 64
HICF_TOGGLEDROPDOWN = 256
def _define_NMTBRESTORE_head():
    class NMTBRESTORE(Structure):
        pass
    return NMTBRESTORE
def _define_NMTBRESTORE():
    NMTBRESTORE = win32more.UI.Controls.NMTBRESTORE_head
    NMTBRESTORE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('pData', POINTER(UInt32)),
        ('pCurrent', POINTER(UInt32)),
        ('cbData', UInt32),
        ('iItem', Int32),
        ('cButtons', Int32),
        ('cbBytesPerRecord', Int32),
        ('tbButton', win32more.UI.Controls.TBBUTTON),
    ]
    return NMTBRESTORE
def _define_NMTBSAVE_head():
    class NMTBSAVE(Structure):
        pass
    return NMTBSAVE
def _define_NMTBSAVE():
    NMTBSAVE = win32more.UI.Controls.NMTBSAVE_head
    NMTBSAVE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('pData', POINTER(UInt32)),
        ('pCurrent', POINTER(UInt32)),
        ('cbData', UInt32),
        ('iItem', Int32),
        ('cButtons', Int32),
        ('tbButton', win32more.UI.Controls.TBBUTTON),
    ]
    return NMTBSAVE
def _define_NMTCKEYDOWN_head():
    class NMTCKEYDOWN(Structure):
        pass
    return NMTCKEYDOWN
def _define_NMTCKEYDOWN():
    NMTCKEYDOWN = win32more.UI.Controls.NMTCKEYDOWN_head
    NMTCKEYDOWN._pack_ = 1
    NMTCKEYDOWN._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('wVKey', UInt16),
        ('flags', UInt32),
    ]
    return NMTCKEYDOWN
def _define_NMTOOLBARA_head():
    class NMTOOLBARA(Structure):
        pass
    return NMTOOLBARA
def _define_NMTOOLBARA():
    NMTOOLBARA = win32more.UI.Controls.NMTOOLBARA_head
    NMTOOLBARA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('tbButton', win32more.UI.Controls.TBBUTTON),
        ('cchText', Int32),
        ('pszText', win32more.Foundation.PSTR),
        ('rcButton', win32more.Foundation.RECT),
    ]
    return NMTOOLBARA
def _define_NMTOOLBARW_head():
    class NMTOOLBARW(Structure):
        pass
    return NMTOOLBARW
def _define_NMTOOLBARW():
    NMTOOLBARW = win32more.UI.Controls.NMTOOLBARW_head
    NMTOOLBARW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iItem', Int32),
        ('tbButton', win32more.UI.Controls.TBBUTTON),
        ('cchText', Int32),
        ('pszText', win32more.Foundation.PWSTR),
        ('rcButton', win32more.Foundation.RECT),
    ]
    return NMTOOLBARW
def _define_NMTOOLTIPSCREATED_head():
    class NMTOOLTIPSCREATED(Structure):
        pass
    return NMTOOLTIPSCREATED
def _define_NMTOOLTIPSCREATED():
    NMTOOLTIPSCREATED = win32more.UI.Controls.NMTOOLTIPSCREATED_head
    NMTOOLTIPSCREATED._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('hwndToolTips', win32more.Foundation.HWND),
    ]
    return NMTOOLTIPSCREATED
def _define_NMTRBTHUMBPOSCHANGING_head():
    class NMTRBTHUMBPOSCHANGING(Structure):
        pass
    return NMTRBTHUMBPOSCHANGING
def _define_NMTRBTHUMBPOSCHANGING():
    NMTRBTHUMBPOSCHANGING = win32more.UI.Controls.NMTRBTHUMBPOSCHANGING_head
    NMTRBTHUMBPOSCHANGING._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('dwPos', UInt32),
        ('nReason', Int32),
    ]
    return NMTRBTHUMBPOSCHANGING
def _define_NMTREEVIEWA_head():
    class NMTREEVIEWA(Structure):
        pass
    return NMTREEVIEWA
def _define_NMTREEVIEWA():
    NMTREEVIEWA = win32more.UI.Controls.NMTREEVIEWA_head
    NMTREEVIEWA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('action', win32more.UI.Controls.NM_TREEVIEW_ACTION),
        ('itemOld', win32more.UI.Controls.TVITEMA),
        ('itemNew', win32more.UI.Controls.TVITEMA),
        ('ptDrag', win32more.Foundation.POINT),
    ]
    return NMTREEVIEWA
def _define_NMTREEVIEWW_head():
    class NMTREEVIEWW(Structure):
        pass
    return NMTREEVIEWW
def _define_NMTREEVIEWW():
    NMTREEVIEWW = win32more.UI.Controls.NMTREEVIEWW_head
    NMTREEVIEWW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('action', win32more.UI.Controls.NM_TREEVIEW_ACTION),
        ('itemOld', win32more.UI.Controls.TVITEMW),
        ('itemNew', win32more.UI.Controls.TVITEMW),
        ('ptDrag', win32more.Foundation.POINT),
    ]
    return NMTREEVIEWW
def _define_NMTTCUSTOMDRAW_head():
    class NMTTCUSTOMDRAW(Structure):
        pass
    return NMTTCUSTOMDRAW
def _define_NMTTCUSTOMDRAW():
    NMTTCUSTOMDRAW = win32more.UI.Controls.NMTTCUSTOMDRAW_head
    NMTTCUSTOMDRAW._fields_ = [
        ('nmcd', win32more.UI.Controls.NMCUSTOMDRAW),
        ('uDrawFlags', UInt32),
    ]
    return NMTTCUSTOMDRAW
def _define_NMTTDISPINFOA_head():
    class NMTTDISPINFOA(Structure):
        pass
    return NMTTDISPINFOA
def _define_NMTTDISPINFOA():
    NMTTDISPINFOA = win32more.UI.Controls.NMTTDISPINFOA_head
    NMTTDISPINFOA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('lpszText', win32more.Foundation.PSTR),
        ('szText', win32more.Foundation.CHAR * 80),
        ('hinst', win32more.Foundation.HINSTANCE),
        ('uFlags', win32more.UI.Controls.TOOLTIP_FLAGS),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMTTDISPINFOA
def _define_NMTTDISPINFOW_head():
    class NMTTDISPINFOW(Structure):
        pass
    return NMTTDISPINFOW
def _define_NMTTDISPINFOW():
    NMTTDISPINFOW = win32more.UI.Controls.NMTTDISPINFOW_head
    NMTTDISPINFOW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('lpszText', win32more.Foundation.PWSTR),
        ('szText', Char * 80),
        ('hinst', win32more.Foundation.HINSTANCE),
        ('uFlags', win32more.UI.Controls.TOOLTIP_FLAGS),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMTTDISPINFOW
def _define_NMTVASYNCDRAW_head():
    class NMTVASYNCDRAW(Structure):
        pass
    return NMTVASYNCDRAW
def _define_NMTVASYNCDRAW():
    NMTVASYNCDRAW = win32more.UI.Controls.NMTVASYNCDRAW_head
    NMTVASYNCDRAW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('pimldp', POINTER(win32more.UI.Controls.IMAGELISTDRAWPARAMS_head)),
        ('hr', win32more.Foundation.HRESULT),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('lParam', win32more.Foundation.LPARAM),
        ('dwRetFlags', UInt32),
        ('iRetImageIndex', Int32),
    ]
    return NMTVASYNCDRAW
def _define_NMTVCUSTOMDRAW_head():
    class NMTVCUSTOMDRAW(Structure):
        pass
    return NMTVCUSTOMDRAW
def _define_NMTVCUSTOMDRAW():
    NMTVCUSTOMDRAW = win32more.UI.Controls.NMTVCUSTOMDRAW_head
    NMTVCUSTOMDRAW._fields_ = [
        ('nmcd', win32more.UI.Controls.NMCUSTOMDRAW),
        ('clrText', win32more.Foundation.COLORREF),
        ('clrTextBk', win32more.Foundation.COLORREF),
        ('iLevel', Int32),
    ]
    return NMTVCUSTOMDRAW
def _define_NMTVDISPINFOA_head():
    class NMTVDISPINFOA(Structure):
        pass
    return NMTVDISPINFOA
def _define_NMTVDISPINFOA():
    NMTVDISPINFOA = win32more.UI.Controls.NMTVDISPINFOA_head
    NMTVDISPINFOA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('item', win32more.UI.Controls.TVITEMA),
    ]
    return NMTVDISPINFOA
def _define_NMTVDISPINFOEXA_head():
    class NMTVDISPINFOEXA(Structure):
        pass
    return NMTVDISPINFOEXA
def _define_NMTVDISPINFOEXA():
    NMTVDISPINFOEXA = win32more.UI.Controls.NMTVDISPINFOEXA_head
    NMTVDISPINFOEXA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('item', win32more.UI.Controls.TVITEMEXA),
    ]
    return NMTVDISPINFOEXA
def _define_NMTVDISPINFOEXW_head():
    class NMTVDISPINFOEXW(Structure):
        pass
    return NMTVDISPINFOEXW
def _define_NMTVDISPINFOEXW():
    NMTVDISPINFOEXW = win32more.UI.Controls.NMTVDISPINFOEXW_head
    NMTVDISPINFOEXW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('item', win32more.UI.Controls.TVITEMEXW),
    ]
    return NMTVDISPINFOEXW
def _define_NMTVDISPINFOW_head():
    class NMTVDISPINFOW(Structure):
        pass
    return NMTVDISPINFOW
def _define_NMTVDISPINFOW():
    NMTVDISPINFOW = win32more.UI.Controls.NMTVDISPINFOW_head
    NMTVDISPINFOW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('item', win32more.UI.Controls.TVITEMW),
    ]
    return NMTVDISPINFOW
def _define_NMTVGETINFOTIPA_head():
    class NMTVGETINFOTIPA(Structure):
        pass
    return NMTVGETINFOTIPA
def _define_NMTVGETINFOTIPA():
    NMTVGETINFOTIPA = win32more.UI.Controls.NMTVGETINFOTIPA_head
    NMTVGETINFOTIPA._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMTVGETINFOTIPA
def _define_NMTVGETINFOTIPW_head():
    class NMTVGETINFOTIPW(Structure):
        pass
    return NMTVGETINFOTIPW
def _define_NMTVGETINFOTIPW():
    NMTVGETINFOTIPW = win32more.UI.Controls.NMTVGETINFOTIPW_head
    NMTVGETINFOTIPW._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMTVGETINFOTIPW
def _define_NMTVITEMCHANGE_head():
    class NMTVITEMCHANGE(Structure):
        pass
    return NMTVITEMCHANGE
def _define_NMTVITEMCHANGE():
    NMTVITEMCHANGE = win32more.UI.Controls.NMTVITEMCHANGE_head
    NMTVITEMCHANGE._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('uChanged', UInt32),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('uStateNew', UInt32),
        ('uStateOld', UInt32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return NMTVITEMCHANGE
def _define_NMTVKEYDOWN_head():
    class NMTVKEYDOWN(Structure):
        pass
    return NMTVKEYDOWN
def _define_NMTVKEYDOWN():
    NMTVKEYDOWN = win32more.UI.Controls.NMTVKEYDOWN_head
    NMTVKEYDOWN._pack_ = 1
    NMTVKEYDOWN._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('wVKey', UInt16),
        ('flags', UInt32),
    ]
    return NMTVKEYDOWN
def _define_NMTVSTATEIMAGECHANGING_head():
    class NMTVSTATEIMAGECHANGING(Structure):
        pass
    return NMTVSTATEIMAGECHANGING
def _define_NMTVSTATEIMAGECHANGING():
    NMTVSTATEIMAGECHANGING = win32more.UI.Controls.NMTVSTATEIMAGECHANGING_head
    NMTVSTATEIMAGECHANGING._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('hti', win32more.UI.Controls.HTREEITEM),
        ('iOldStateImageIndex', Int32),
        ('iNewStateImageIndex', Int32),
    ]
    return NMTVSTATEIMAGECHANGING
def _define_NMUPDOWN_head():
    class NMUPDOWN(Structure):
        pass
    return NMUPDOWN
def _define_NMUPDOWN():
    NMUPDOWN = win32more.UI.Controls.NMUPDOWN_head
    NMUPDOWN._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('iPos', Int32),
        ('iDelta', Int32),
    ]
    return NMUPDOWN
def _define_NMVIEWCHANGE_head():
    class NMVIEWCHANGE(Structure):
        pass
    return NMVIEWCHANGE
def _define_NMVIEWCHANGE():
    NMVIEWCHANGE = win32more.UI.Controls.NMVIEWCHANGE_head
    NMVIEWCHANGE._fields_ = [
        ('nmhdr', win32more.UI.Controls.NMHDR),
        ('dwOldView', win32more.UI.Controls.MONTH_CALDENDAR_MESSAGES_VIEW),
        ('dwNewView', win32more.UI.Controls.MONTH_CALDENDAR_MESSAGES_VIEW),
    ]
    return NMVIEWCHANGE
NONESTATES = Int32
DDNONE_HIGHLIGHT = 1
DDNONE_NOHIGHLIGHT = 2
NORMALGROUPCOLLAPSESTATES = Int32
EBNGC_NORMAL = 1
EBNGC_HOT = 2
EBNGC_PRESSED = 3
NORMALGROUPEXPANDSTATES = Int32
EBNGE_NORMAL = 1
EBNGE_HOT = 2
EBNGE_PRESSED = 3
ODA_FLAGS = UInt32
ODA_DRAWENTIRE = 1
ODA_SELECT = 2
ODA_FOCUS = 4
ODS_FLAGS = UInt32
ODS_SELECTED = 1
ODS_GRAYED = 2
ODS_DISABLED = 4
ODS_CHECKED = 8
ODS_FOCUS = 16
ODS_DEFAULT = 32
ODS_COMBOBOXEDIT = 4096
ODS_HOTLIGHT = 64
ODS_INACTIVE = 128
ODS_NOACCEL = 256
ODS_NOFOCUSRECT = 512
OFFSETTYPE = Int32
OT_TOPLEFT = 0
OT_TOPRIGHT = 1
OT_TOPMIDDLE = 2
OT_BOTTOMLEFT = 3
OT_BOTTOMRIGHT = 4
OT_BOTTOMMIDDLE = 5
OT_MIDDLELEFT = 6
OT_MIDDLERIGHT = 7
OT_LEFTOFCAPTION = 8
OT_RIGHTOFCAPTION = 9
OT_LEFTOFLASTBUTTON = 10
OT_RIGHTOFLASTBUTTON = 11
OT_ABOVELASTBUTTON = 12
OT_BELOWLASTBUTTON = 13
OPEN_THEME_DATA_FLAGS = UInt32
OTD_FORCE_RECT_SIZING = 1
OTD_NONCLIENT = 2
OPENBOXSTATES = Int32
SPOB_NORMAL = 1
SPOB_HOT = 2
SPOB_SELECTED = 3
SPOB_DISABLED = 4
SPOB_FOCUSED = 5
PAGEPARTS = Int32
PGRP_UP = 1
PGRP_DOWN = 2
PGRP_UPHORZ = 3
PGRP_DOWNHORZ = 4
def _define_PBRANGE_head():
    class PBRANGE(Structure):
        pass
    return PBRANGE
def _define_PBRANGE():
    PBRANGE = win32more.UI.Controls.PBRANGE_head
    PBRANGE._fields_ = [
        ('iLow', Int32),
        ('iHigh', Int32),
    ]
    return PBRANGE
def _define_PFNDACOMPARE():
    return WINFUNCTYPE(Int32,c_void_p,c_void_p,win32more.Foundation.LPARAM)
def _define_PFNDACOMPARECONST():
    return WINFUNCTYPE(Int32,c_void_p,c_void_p,win32more.Foundation.LPARAM)
def _define_PFNDAENUMCALLBACK():
    return WINFUNCTYPE(Int32,c_void_p,c_void_p)
def _define_PFNDAENUMCALLBACKCONST():
    return WINFUNCTYPE(Int32,c_void_p,c_void_p)
def _define_PFNDPAMERGE():
    return WINFUNCTYPE(c_void_p,win32more.UI.Controls.DPAMM_MESSAGE,c_void_p,c_void_p,win32more.Foundation.LPARAM)
def _define_PFNDPAMERGECONST():
    return WINFUNCTYPE(c_void_p,win32more.UI.Controls.DPAMM_MESSAGE,c_void_p,c_void_p,win32more.Foundation.LPARAM)
def _define_PFNDPASTREAM():
    return WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.UI.Controls.DPASTREAMINFO_head),win32more.System.Com.IStream_head,c_void_p)
def _define_PFNLVCOMPARE():
    return WINFUNCTYPE(Int32,win32more.Foundation.LPARAM,win32more.Foundation.LPARAM,win32more.Foundation.LPARAM)
def _define_PFNLVGROUPCOMPARE():
    return WINFUNCTYPE(Int32,Int32,Int32,c_void_p)
def _define_PFNPROPSHEETCALLBACK():
    return WINFUNCTYPE(Int32,win32more.Foundation.HWND,UInt32,win32more.Foundation.LPARAM)
def _define_PFNTVCOMPARE():
    return WINFUNCTYPE(Int32,win32more.Foundation.LPARAM,win32more.Foundation.LPARAM,win32more.Foundation.LPARAM)
def _define_PFTASKDIALOGCALLBACK():
    return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32,win32more.Foundation.WPARAM,win32more.Foundation.LPARAM,IntPtr)
def _define_POINTER_DEVICE_CURSOR_INFO_head():
    class POINTER_DEVICE_CURSOR_INFO(Structure):
        pass
    return POINTER_DEVICE_CURSOR_INFO
def _define_POINTER_DEVICE_CURSOR_INFO():
    POINTER_DEVICE_CURSOR_INFO = win32more.UI.Controls.POINTER_DEVICE_CURSOR_INFO_head
    POINTER_DEVICE_CURSOR_INFO._fields_ = [
        ('cursorId', UInt32),
        ('cursor', win32more.UI.Controls.POINTER_DEVICE_CURSOR_TYPE),
    ]
    return POINTER_DEVICE_CURSOR_INFO
POINTER_DEVICE_CURSOR_TYPE = Int32
POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0
POINTER_DEVICE_CURSOR_TYPE_TIP = 1
POINTER_DEVICE_CURSOR_TYPE_ERASER = 2
POINTER_DEVICE_CURSOR_TYPE_MAX = -1
def _define_POINTER_DEVICE_INFO_head():
    class POINTER_DEVICE_INFO(Structure):
        pass
    return POINTER_DEVICE_INFO
def _define_POINTER_DEVICE_INFO():
    POINTER_DEVICE_INFO = win32more.UI.Controls.POINTER_DEVICE_INFO_head
    POINTER_DEVICE_INFO._fields_ = [
        ('displayOrientation', UInt32),
        ('device', win32more.Foundation.HANDLE),
        ('pointerDeviceType', win32more.UI.Controls.POINTER_DEVICE_TYPE),
        ('monitor', win32more.Graphics.Gdi.HMONITOR),
        ('startingCursorId', UInt32),
        ('maxActiveContacts', UInt16),
        ('productString', Char * 520),
    ]
    return POINTER_DEVICE_INFO
def _define_POINTER_DEVICE_PROPERTY_head():
    class POINTER_DEVICE_PROPERTY(Structure):
        pass
    return POINTER_DEVICE_PROPERTY
def _define_POINTER_DEVICE_PROPERTY():
    POINTER_DEVICE_PROPERTY = win32more.UI.Controls.POINTER_DEVICE_PROPERTY_head
    POINTER_DEVICE_PROPERTY._fields_ = [
        ('logicalMin', Int32),
        ('logicalMax', Int32),
        ('physicalMin', Int32),
        ('physicalMax', Int32),
        ('unit', UInt32),
        ('unitExponent', UInt32),
        ('usagePageId', UInt16),
        ('usageId', UInt16),
    ]
    return POINTER_DEVICE_PROPERTY
POINTER_DEVICE_TYPE = Int32
POINTER_DEVICE_TYPE_INTEGRATED_PEN = 1
POINTER_DEVICE_TYPE_EXTERNAL_PEN = 2
POINTER_DEVICE_TYPE_TOUCH = 3
POINTER_DEVICE_TYPE_TOUCH_PAD = 4
POINTER_DEVICE_TYPE_MAX = -1
POINTER_FEEDBACK_MODE = Int32
POINTER_FEEDBACK_DEFAULT = 1
POINTER_FEEDBACK_INDIRECT = 2
POINTER_FEEDBACK_NONE = 3
def _define_POINTER_TYPE_INFO_head():
    class POINTER_TYPE_INFO(Structure):
        pass
    return POINTER_TYPE_INFO
def _define_POINTER_TYPE_INFO():
    POINTER_TYPE_INFO = win32more.UI.Controls.POINTER_TYPE_INFO_head
    class POINTER_TYPE_INFO__Anonymous_e__Union(Union):
        pass
    POINTER_TYPE_INFO__Anonymous_e__Union._fields_ = [
        ('touchInfo', win32more.UI.Input.Pointer.POINTER_TOUCH_INFO),
        ('penInfo', win32more.UI.Input.Pointer.POINTER_PEN_INFO),
    ]
    POINTER_TYPE_INFO._anonymous_ = [
        'Anonymous',
    ]
    POINTER_TYPE_INFO._fields_ = [
        ('type', win32more.UI.WindowsAndMessaging.POINTER_INPUT_TYPE),
        ('Anonymous', POINTER_TYPE_INFO__Anonymous_e__Union),
    ]
    return POINTER_TYPE_INFO
POPUPCHECKBACKGROUNDSTATES = Int32
MCB_DISABLED = 1
MCB_NORMAL = 2
MCB_BITMAP = 3
POPUPCHECKSTATES = Int32
MC_CHECKMARKNORMAL = 1
MC_CHECKMARKDISABLED = 2
MC_BULLETNORMAL = 3
MC_BULLETDISABLED = 4
POPUPITEMSTATES = Int32
MPI_NORMAL = 1
MPI_HOT = 2
MPI_DISABLED = 3
MPI_DISABLEDHOT = 4
POPUPSUBMENUSTATES = Int32
MSM_NORMAL = 1
MSM_DISABLED = 2
PROGRESSPARTS = Int32
PP_BAR = 1
PP_BARVERT = 2
PP_CHUNK = 3
PP_CHUNKVERT = 4
PP_FILL = 5
PP_FILLVERT = 6
PP_PULSEOVERLAY = 7
PP_MOVEOVERLAY = 8
PP_PULSEOVERLAYVERT = 9
PP_MOVEOVERLAYVERT = 10
PP_TRANSPARENTBAR = 11
PP_TRANSPARENTBARVERT = 12
PROPERTYORIGIN = Int32
PO_STATE = 0
PO_PART = 1
PO_CLASS = 2
PO_GLOBAL = 3
PO_NOTFOUND = 4
def _define_PROPSHEETHEADERA_V1_head():
    class PROPSHEETHEADERA_V1(Structure):
        pass
    return PROPSHEETHEADERA_V1
def _define_PROPSHEETHEADERA_V1():
    PROPSHEETHEADERA_V1 = win32more.UI.Controls.PROPSHEETHEADERA_V1_head
    class PROPSHEETHEADERA_V1__Anonymous1_e__Union(Union):
        pass
    PROPSHEETHEADERA_V1__Anonymous1_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PSTR),
    ]
    class PROPSHEETHEADERA_V1__Anonymous2_e__Union(Union):
        pass
    PROPSHEETHEADERA_V1__Anonymous2_e__Union._fields_ = [
        ('nStartPage', UInt32),
        ('pStartPage', win32more.Foundation.PSTR),
    ]
    class PROPSHEETHEADERA_V1__Anonymous3_e__Union(Union):
        pass
    PROPSHEETHEADERA_V1__Anonymous3_e__Union._fields_ = [
        ('ppsp', POINTER(win32more.UI.Controls.PROPSHEETPAGEA_head)),
        ('phpage', POINTER(win32more.UI.Controls.HPROPSHEETPAGE)),
    ]
    PROPSHEETHEADERA_V1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    PROPSHEETHEADERA_V1._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hwndParent', win32more.Foundation.HWND),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETHEADERA_V1__Anonymous1_e__Union),
        ('pszCaption', win32more.Foundation.PSTR),
        ('nPages', UInt32),
        ('Anonymous2', PROPSHEETHEADERA_V1__Anonymous2_e__Union),
        ('Anonymous3', PROPSHEETHEADERA_V1__Anonymous3_e__Union),
        ('pfnCallback', win32more.UI.Controls.PFNPROPSHEETCALLBACK),
    ]
    return PROPSHEETHEADERA_V1
def _define_PROPSHEETHEADERA_V2_head():
    class PROPSHEETHEADERA_V2(Structure):
        pass
    return PROPSHEETHEADERA_V2
def _define_PROPSHEETHEADERA_V2():
    PROPSHEETHEADERA_V2 = win32more.UI.Controls.PROPSHEETHEADERA_V2_head
    class PROPSHEETHEADERA_V2__Anonymous1_e__Union(Union):
        pass
    PROPSHEETHEADERA_V2__Anonymous1_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PSTR),
    ]
    class PROPSHEETHEADERA_V2__Anonymous2_e__Union(Union):
        pass
    PROPSHEETHEADERA_V2__Anonymous2_e__Union._fields_ = [
        ('nStartPage', UInt32),
        ('pStartPage', win32more.Foundation.PSTR),
    ]
    class PROPSHEETHEADERA_V2__Anonymous3_e__Union(Union):
        pass
    PROPSHEETHEADERA_V2__Anonymous3_e__Union._fields_ = [
        ('ppsp', POINTER(win32more.UI.Controls.PROPSHEETPAGEA_head)),
        ('phpage', POINTER(win32more.UI.Controls.HPROPSHEETPAGE)),
    ]
    class PROPSHEETHEADERA_V2__Anonymous4_e__Union(Union):
        pass
    PROPSHEETHEADERA_V2__Anonymous4_e__Union._fields_ = [
        ('hbmWatermark', win32more.Graphics.Gdi.HBITMAP),
        ('pszbmWatermark', win32more.Foundation.PSTR),
    ]
    class PROPSHEETHEADERA_V2__Anonymous5_e__Union(Union):
        pass
    PROPSHEETHEADERA_V2__Anonymous5_e__Union._fields_ = [
        ('hbmHeader', win32more.Graphics.Gdi.HBITMAP),
        ('pszbmHeader', win32more.Foundation.PSTR),
    ]
    PROPSHEETHEADERA_V2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
        'Anonymous4',
        'Anonymous5',
    ]
    PROPSHEETHEADERA_V2._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hwndParent', win32more.Foundation.HWND),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETHEADERA_V2__Anonymous1_e__Union),
        ('pszCaption', win32more.Foundation.PSTR),
        ('nPages', UInt32),
        ('Anonymous2', PROPSHEETHEADERA_V2__Anonymous2_e__Union),
        ('Anonymous3', PROPSHEETHEADERA_V2__Anonymous3_e__Union),
        ('pfnCallback', win32more.UI.Controls.PFNPROPSHEETCALLBACK),
        ('Anonymous4', PROPSHEETHEADERA_V2__Anonymous4_e__Union),
        ('hplWatermark', win32more.Graphics.Gdi.HPALETTE),
        ('Anonymous5', PROPSHEETHEADERA_V2__Anonymous5_e__Union),
    ]
    return PROPSHEETHEADERA_V2
def _define_PROPSHEETHEADERW_V1_head():
    class PROPSHEETHEADERW_V1(Structure):
        pass
    return PROPSHEETHEADERW_V1
def _define_PROPSHEETHEADERW_V1():
    PROPSHEETHEADERW_V1 = win32more.UI.Controls.PROPSHEETHEADERW_V1_head
    class PROPSHEETHEADERW_V1__Anonymous1_e__Union(Union):
        pass
    PROPSHEETHEADERW_V1__Anonymous1_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PWSTR),
    ]
    class PROPSHEETHEADERW_V1__Anonymous2_e__Union(Union):
        pass
    PROPSHEETHEADERW_V1__Anonymous2_e__Union._fields_ = [
        ('nStartPage', UInt32),
        ('pStartPage', win32more.Foundation.PWSTR),
    ]
    class PROPSHEETHEADERW_V1__Anonymous3_e__Union(Union):
        pass
    PROPSHEETHEADERW_V1__Anonymous3_e__Union._fields_ = [
        ('ppsp', POINTER(win32more.UI.Controls.PROPSHEETPAGEW_head)),
        ('phpage', POINTER(win32more.UI.Controls.HPROPSHEETPAGE)),
    ]
    PROPSHEETHEADERW_V1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    PROPSHEETHEADERW_V1._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hwndParent', win32more.Foundation.HWND),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETHEADERW_V1__Anonymous1_e__Union),
        ('pszCaption', win32more.Foundation.PWSTR),
        ('nPages', UInt32),
        ('Anonymous2', PROPSHEETHEADERW_V1__Anonymous2_e__Union),
        ('Anonymous3', PROPSHEETHEADERW_V1__Anonymous3_e__Union),
        ('pfnCallback', win32more.UI.Controls.PFNPROPSHEETCALLBACK),
    ]
    return PROPSHEETHEADERW_V1
def _define_PROPSHEETHEADERW_V2_head():
    class PROPSHEETHEADERW_V2(Structure):
        pass
    return PROPSHEETHEADERW_V2
def _define_PROPSHEETHEADERW_V2():
    PROPSHEETHEADERW_V2 = win32more.UI.Controls.PROPSHEETHEADERW_V2_head
    class PROPSHEETHEADERW_V2__Anonymous1_e__Union(Union):
        pass
    PROPSHEETHEADERW_V2__Anonymous1_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PWSTR),
    ]
    class PROPSHEETHEADERW_V2__Anonymous2_e__Union(Union):
        pass
    PROPSHEETHEADERW_V2__Anonymous2_e__Union._fields_ = [
        ('nStartPage', UInt32),
        ('pStartPage', win32more.Foundation.PWSTR),
    ]
    class PROPSHEETHEADERW_V2__Anonymous3_e__Union(Union):
        pass
    PROPSHEETHEADERW_V2__Anonymous3_e__Union._fields_ = [
        ('ppsp', POINTER(win32more.UI.Controls.PROPSHEETPAGEW_head)),
        ('phpage', POINTER(win32more.UI.Controls.HPROPSHEETPAGE)),
    ]
    class PROPSHEETHEADERW_V2__Anonymous4_e__Union(Union):
        pass
    PROPSHEETHEADERW_V2__Anonymous4_e__Union._fields_ = [
        ('hbmWatermark', win32more.Graphics.Gdi.HBITMAP),
        ('pszbmWatermark', win32more.Foundation.PWSTR),
    ]
    class PROPSHEETHEADERW_V2__Anonymous5_e__Union(Union):
        pass
    PROPSHEETHEADERW_V2__Anonymous5_e__Union._fields_ = [
        ('hbmHeader', win32more.Graphics.Gdi.HBITMAP),
        ('pszbmHeader', win32more.Foundation.PWSTR),
    ]
    PROPSHEETHEADERW_V2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
        'Anonymous4',
        'Anonymous5',
    ]
    PROPSHEETHEADERW_V2._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hwndParent', win32more.Foundation.HWND),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETHEADERW_V2__Anonymous1_e__Union),
        ('pszCaption', win32more.Foundation.PWSTR),
        ('nPages', UInt32),
        ('Anonymous2', PROPSHEETHEADERW_V2__Anonymous2_e__Union),
        ('Anonymous3', PROPSHEETHEADERW_V2__Anonymous3_e__Union),
        ('pfnCallback', win32more.UI.Controls.PFNPROPSHEETCALLBACK),
        ('Anonymous4', PROPSHEETHEADERW_V2__Anonymous4_e__Union),
        ('hplWatermark', win32more.Graphics.Gdi.HPALETTE),
        ('Anonymous5', PROPSHEETHEADERW_V2__Anonymous5_e__Union),
    ]
    return PROPSHEETHEADERW_V2
def _define_PROPSHEETPAGEA_head():
    class PROPSHEETPAGEA(Structure):
        pass
    return PROPSHEETPAGEA
def _define_PROPSHEETPAGEA():
    PROPSHEETPAGEA = win32more.UI.Controls.PROPSHEETPAGEA_head
    class PROPSHEETPAGEA__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEA__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEA__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEA__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PSTR),
    ]
    class PROPSHEETPAGEA__Anonymous3_e__Union(Union):
        pass
    PROPSHEETPAGEA__Anonymous3_e__Union._fields_ = [
        ('hbmHeader', win32more.Graphics.Gdi.HBITMAP),
        ('pszbmHeader', win32more.Foundation.PSTR),
    ]
    PROPSHEETPAGEA._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    PROPSHEETPAGEA._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEA__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEA__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKA),
        ('pcRefParent', POINTER(UInt32)),
        ('pszHeaderTitle', win32more.Foundation.PSTR),
        ('pszHeaderSubTitle', win32more.Foundation.PSTR),
        ('hActCtx', win32more.Foundation.HANDLE),
        ('Anonymous3', PROPSHEETPAGEA__Anonymous3_e__Union),
    ]
    return PROPSHEETPAGEA
def _define_PROPSHEETPAGEA_V1_head():
    class PROPSHEETPAGEA_V1(Structure):
        pass
    return PROPSHEETPAGEA_V1
def _define_PROPSHEETPAGEA_V1():
    PROPSHEETPAGEA_V1 = win32more.UI.Controls.PROPSHEETPAGEA_V1_head
    class PROPSHEETPAGEA_V1__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEA_V1__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEA_V1__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEA_V1__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PSTR),
    ]
    PROPSHEETPAGEA_V1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    PROPSHEETPAGEA_V1._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEA_V1__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEA_V1__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKA),
        ('pcRefParent', POINTER(UInt32)),
    ]
    return PROPSHEETPAGEA_V1
def _define_PROPSHEETPAGEA_V2_head():
    class PROPSHEETPAGEA_V2(Structure):
        pass
    return PROPSHEETPAGEA_V2
def _define_PROPSHEETPAGEA_V2():
    PROPSHEETPAGEA_V2 = win32more.UI.Controls.PROPSHEETPAGEA_V2_head
    class PROPSHEETPAGEA_V2__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEA_V2__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEA_V2__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEA_V2__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PSTR),
    ]
    PROPSHEETPAGEA_V2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    PROPSHEETPAGEA_V2._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEA_V2__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEA_V2__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKA),
        ('pcRefParent', POINTER(UInt32)),
        ('pszHeaderTitle', win32more.Foundation.PSTR),
        ('pszHeaderSubTitle', win32more.Foundation.PSTR),
    ]
    return PROPSHEETPAGEA_V2
def _define_PROPSHEETPAGEA_V3_head():
    class PROPSHEETPAGEA_V3(Structure):
        pass
    return PROPSHEETPAGEA_V3
def _define_PROPSHEETPAGEA_V3():
    PROPSHEETPAGEA_V3 = win32more.UI.Controls.PROPSHEETPAGEA_V3_head
    class PROPSHEETPAGEA_V3__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEA_V3__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEA_V3__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEA_V3__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PSTR),
    ]
    PROPSHEETPAGEA_V3._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    PROPSHEETPAGEA_V3._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEA_V3__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEA_V3__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKA),
        ('pcRefParent', POINTER(UInt32)),
        ('pszHeaderTitle', win32more.Foundation.PSTR),
        ('pszHeaderSubTitle', win32more.Foundation.PSTR),
        ('hActCtx', win32more.Foundation.HANDLE),
    ]
    return PROPSHEETPAGEA_V3
def _define_PROPSHEETPAGEW_head():
    class PROPSHEETPAGEW(Structure):
        pass
    return PROPSHEETPAGEW
def _define_PROPSHEETPAGEW():
    PROPSHEETPAGEW = win32more.UI.Controls.PROPSHEETPAGEW_head
    class PROPSHEETPAGEW__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEW__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PWSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEW__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEW__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PWSTR),
    ]
    class PROPSHEETPAGEW__Anonymous3_e__Union(Union):
        pass
    PROPSHEETPAGEW__Anonymous3_e__Union._fields_ = [
        ('hbmHeader', win32more.Graphics.Gdi.HBITMAP),
        ('pszbmHeader', win32more.Foundation.PWSTR),
    ]
    PROPSHEETPAGEW._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
        'Anonymous3',
    ]
    PROPSHEETPAGEW._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEW__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEW__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PWSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKW),
        ('pcRefParent', POINTER(UInt32)),
        ('pszHeaderTitle', win32more.Foundation.PWSTR),
        ('pszHeaderSubTitle', win32more.Foundation.PWSTR),
        ('hActCtx', win32more.Foundation.HANDLE),
        ('Anonymous3', PROPSHEETPAGEW__Anonymous3_e__Union),
    ]
    return PROPSHEETPAGEW
def _define_PROPSHEETPAGEW_V1_head():
    class PROPSHEETPAGEW_V1(Structure):
        pass
    return PROPSHEETPAGEW_V1
def _define_PROPSHEETPAGEW_V1():
    PROPSHEETPAGEW_V1 = win32more.UI.Controls.PROPSHEETPAGEW_V1_head
    class PROPSHEETPAGEW_V1__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEW_V1__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PWSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEW_V1__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEW_V1__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PWSTR),
    ]
    PROPSHEETPAGEW_V1._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    PROPSHEETPAGEW_V1._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEW_V1__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEW_V1__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PWSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKW),
        ('pcRefParent', POINTER(UInt32)),
    ]
    return PROPSHEETPAGEW_V1
def _define_PROPSHEETPAGEW_V2_head():
    class PROPSHEETPAGEW_V2(Structure):
        pass
    return PROPSHEETPAGEW_V2
def _define_PROPSHEETPAGEW_V2():
    PROPSHEETPAGEW_V2 = win32more.UI.Controls.PROPSHEETPAGEW_V2_head
    class PROPSHEETPAGEW_V2__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEW_V2__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PWSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEW_V2__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEW_V2__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PWSTR),
    ]
    PROPSHEETPAGEW_V2._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    PROPSHEETPAGEW_V2._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEW_V2__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEW_V2__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PWSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKW),
        ('pcRefParent', POINTER(UInt32)),
        ('pszHeaderTitle', win32more.Foundation.PWSTR),
        ('pszHeaderSubTitle', win32more.Foundation.PWSTR),
    ]
    return PROPSHEETPAGEW_V2
def _define_PROPSHEETPAGEW_V3_head():
    class PROPSHEETPAGEW_V3(Structure):
        pass
    return PROPSHEETPAGEW_V3
def _define_PROPSHEETPAGEW_V3():
    PROPSHEETPAGEW_V3 = win32more.UI.Controls.PROPSHEETPAGEW_V3_head
    class PROPSHEETPAGEW_V3__Anonymous1_e__Union(Union):
        pass
    PROPSHEETPAGEW_V3__Anonymous1_e__Union._fields_ = [
        ('pszTemplate', win32more.Foundation.PWSTR),
        ('pResource', POINTER(win32more.UI.WindowsAndMessaging.DLGTEMPLATE_head)),
    ]
    class PROPSHEETPAGEW_V3__Anonymous2_e__Union(Union):
        pass
    PROPSHEETPAGEW_V3__Anonymous2_e__Union._fields_ = [
        ('hIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszIcon', win32more.Foundation.PWSTR),
    ]
    PROPSHEETPAGEW_V3._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    PROPSHEETPAGEW_V3._fields_ = [
        ('dwSize', UInt32),
        ('dwFlags', UInt32),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('Anonymous1', PROPSHEETPAGEW_V3__Anonymous1_e__Union),
        ('Anonymous2', PROPSHEETPAGEW_V3__Anonymous2_e__Union),
        ('pszTitle', win32more.Foundation.PWSTR),
        ('pfnDlgProc', win32more.UI.WindowsAndMessaging.DLGPROC),
        ('lParam', win32more.Foundation.LPARAM),
        ('pfnCallback', win32more.UI.Controls.LPFNPSPCALLBACKW),
        ('pcRefParent', POINTER(UInt32)),
        ('pszHeaderTitle', win32more.Foundation.PWSTR),
        ('pszHeaderSubTitle', win32more.Foundation.PWSTR),
        ('hActCtx', win32more.Foundation.HANDLE),
    ]
    return PROPSHEETPAGEW_V3
def _define_PSHNOTIFY_head():
    class PSHNOTIFY(Structure):
        pass
    return PSHNOTIFY
def _define_PSHNOTIFY():
    PSHNOTIFY = win32more.UI.Controls.PSHNOTIFY_head
    PSHNOTIFY._fields_ = [
        ('hdr', win32more.UI.Controls.NMHDR),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return PSHNOTIFY
PSPCB_MESSAGE = UInt32
PSPCB_ADDREF = 0
PSPCB_CREATE = 2
PSPCB_RELEASE = 1
PSPCB_SI_INITDIALOG = 1025
PUSHBUTTONDROPDOWNSTATES = Int32
PBDDS_NORMAL = 1
PBDDS_DISABLED = 2
PUSHBUTTONSTATES = Int32
PBS_NORMAL = 1
PBS_HOT = 2
PBS_PRESSED = 3
PBS_DISABLED = 4
PBS_DEFAULTED = 5
PBS_DEFAULTED_ANIMATING = 6
RADIOBUTTONSTATES = Int32
RBS_UNCHECKEDNORMAL = 1
RBS_UNCHECKEDHOT = 2
RBS_UNCHECKEDPRESSED = 3
RBS_UNCHECKEDDISABLED = 4
RBS_CHECKEDNORMAL = 5
RBS_CHECKEDHOT = 6
RBS_CHECKEDPRESSED = 7
RBS_CHECKEDDISABLED = 8
def _define_RBHITTESTINFO_head():
    class RBHITTESTINFO(Structure):
        pass
    return RBHITTESTINFO
def _define_RBHITTESTINFO():
    RBHITTESTINFO = win32more.UI.Controls.RBHITTESTINFO_head
    RBHITTESTINFO._fields_ = [
        ('pt', win32more.Foundation.POINT),
        ('flags', UInt32),
        ('iBand', Int32),
    ]
    return RBHITTESTINFO
READONLYSTATES = Int32
CBRO_NORMAL = 1
CBRO_HOT = 2
CBRO_PRESSED = 3
CBRO_DISABLED = 4
def _define_REBARBANDINFOA_head():
    class REBARBANDINFOA(Structure):
        pass
    return REBARBANDINFOA
def _define_REBARBANDINFOA():
    REBARBANDINFOA = win32more.UI.Controls.REBARBANDINFOA_head
    REBARBANDINFOA._fields_ = [
        ('cbSize', UInt32),
        ('fMask', UInt32),
        ('fStyle', UInt32),
        ('clrFore', win32more.Foundation.COLORREF),
        ('clrBack', win32more.Foundation.COLORREF),
        ('lpText', win32more.Foundation.PSTR),
        ('cch', UInt32),
        ('iImage', Int32),
        ('hwndChild', win32more.Foundation.HWND),
        ('cxMinChild', UInt32),
        ('cyMinChild', UInt32),
        ('cx', UInt32),
        ('hbmBack', win32more.Graphics.Gdi.HBITMAP),
        ('wID', UInt32),
        ('cyChild', UInt32),
        ('cyMaxChild', UInt32),
        ('cyIntegral', UInt32),
        ('cxIdeal', UInt32),
        ('lParam', win32more.Foundation.LPARAM),
        ('cxHeader', UInt32),
        ('rcChevronLocation', win32more.Foundation.RECT),
        ('uChevronState', UInt32),
    ]
    return REBARBANDINFOA
def _define_REBARBANDINFOW_head():
    class REBARBANDINFOW(Structure):
        pass
    return REBARBANDINFOW
def _define_REBARBANDINFOW():
    REBARBANDINFOW = win32more.UI.Controls.REBARBANDINFOW_head
    REBARBANDINFOW._fields_ = [
        ('cbSize', UInt32),
        ('fMask', UInt32),
        ('fStyle', UInt32),
        ('clrFore', win32more.Foundation.COLORREF),
        ('clrBack', win32more.Foundation.COLORREF),
        ('lpText', win32more.Foundation.PWSTR),
        ('cch', UInt32),
        ('iImage', Int32),
        ('hwndChild', win32more.Foundation.HWND),
        ('cxMinChild', UInt32),
        ('cyMinChild', UInt32),
        ('cx', UInt32),
        ('hbmBack', win32more.Graphics.Gdi.HBITMAP),
        ('wID', UInt32),
        ('cyChild', UInt32),
        ('cyMaxChild', UInt32),
        ('cyIntegral', UInt32),
        ('cxIdeal', UInt32),
        ('lParam', win32more.Foundation.LPARAM),
        ('cxHeader', UInt32),
        ('rcChevronLocation', win32more.Foundation.RECT),
        ('uChevronState', UInt32),
    ]
    return REBARBANDINFOW
def _define_REBARINFO_head():
    class REBARINFO(Structure):
        pass
    return REBARINFO
def _define_REBARINFO():
    REBARINFO = win32more.UI.Controls.REBARINFO_head
    REBARINFO._fields_ = [
        ('cbSize', UInt32),
        ('fMask', UInt32),
        ('himl', win32more.UI.Controls.HIMAGELIST),
    ]
    return REBARINFO
REBARPARTS = Int32
RP_GRIPPER = 1
RP_GRIPPERVERT = 2
RP_BAND = 3
RP_CHEVRON = 4
RP_CHEVRONVERT = 5
RP_BACKGROUND = 6
RP_SPLITTER = 7
RP_SPLITTERVERT = 8
RESTOREBUTTONSTATES = Int32
RBS_NORMAL = 1
RBS_HOT = 2
RBS_PUSHED = 3
RBS_DISABLED = 4
SCROLLBARPARTS = Int32
SBP_ARROWBTN = 1
SBP_THUMBBTNHORZ = 2
SBP_THUMBBTNVERT = 3
SBP_LOWERTRACKHORZ = 4
SBP_UPPERTRACKHORZ = 5
SBP_LOWERTRACKVERT = 6
SBP_UPPERTRACKVERT = 7
SBP_GRIPPERHORZ = 8
SBP_GRIPPERVERT = 9
SBP_SIZEBOX = 10
SBP_SIZEBOXBKGND = 11
SCROLLBARSTYLESTATES = Int32
SCRBS_NORMAL = 1
SCRBS_HOT = 2
SCRBS_PRESSED = 3
SCRBS_DISABLED = 4
SCRBS_HOVER = 5
SECTIONTITLELINKSTATES = Int32
CPSTL_NORMAL = 1
CPSTL_HOT = 2
SET_THEME_APP_PROPERTIES_FLAGS = UInt32
ALLOW_NONCLIENT = 1
ALLOW_CONTROLS = 2
ALLOW_WEBCONTENT = 4
VALIDBITS = 7
SHOWCALENDARBUTTONRIGHTSTATES = Int32
DPSCBR_NORMAL = 1
DPSCBR_HOT = 2
DPSCBR_PRESSED = 3
DPSCBR_DISABLED = 4
SIZEBOXSTATES = Int32
SZB_RIGHTALIGN = 1
SZB_LEFTALIGN = 2
SZB_TOPRIGHTALIGN = 3
SZB_TOPLEFTALIGN = 4
SZB_HALFBOTTOMRIGHTALIGN = 5
SZB_HALFBOTTOMLEFTALIGN = 6
SZB_HALFTOPRIGHTALIGN = 7
SZB_HALFTOPLEFTALIGN = 8
SIZINGTYPE = Int32
ST_TRUESIZE = 0
ST_STRETCH = 1
ST_TILE = 2
SMALLCAPTIONSTATES = Int32
SCS_ACTIVE = 1
SCS_INACTIVE = 2
SCS_DISABLED = 3
SMALLCLOSEBUTTONSTATES = Int32
SCBS_NORMAL = 1
SCBS_HOT = 2
SCBS_PUSHED = 3
SCBS_DISABLED = 4
SMALLFRAMEBOTTOMSTATES = Int32
SFRB_ACTIVE = 1
SFRB_INACTIVE = 2
SMALLFRAMELEFTSTATES = Int32
SFRL_ACTIVE = 1
SFRL_INACTIVE = 2
SMALLFRAMERIGHTSTATES = Int32
SFRR_ACTIVE = 1
SFRR_INACTIVE = 2
SOFTWAREEXPLORERSTATES = Int32
SPSE_NORMAL = 1
SPSE_HOT = 2
SPSE_SELECTED = 3
SPSE_DISABLED = 4
SPSE_FOCUSED = 5
SPECIALGROUPCOLLAPSESTATES = Int32
EBSGC_NORMAL = 1
EBSGC_HOT = 2
EBSGC_PRESSED = 3
SPECIALGROUPEXPANDSTATES = Int32
EBSGE_NORMAL = 1
EBSGE_HOT = 2
EBSGE_PRESSED = 3
SPINPARTS = Int32
SPNP_UP = 1
SPNP_DOWN = 2
SPNP_UPHORZ = 3
SPNP_DOWNHORZ = 4
SPLITTERSTATES = Int32
SPLITS_NORMAL = 1
SPLITS_HOT = 2
SPLITS_PRESSED = 3
SPLITTERVERTSTATES = Int32
SPLITSV_NORMAL = 1
SPLITSV_HOT = 2
SPLITSV_PRESSED = 3
STANDARDSTATES = Int32
TTSS_NORMAL = 1
TTSS_LINK = 2
STARTPANELPARTS = Int32
SPP_USERPANE = 1
SPP_MOREPROGRAMS = 2
SPP_MOREPROGRAMSARROW = 3
SPP_PROGLIST = 4
SPP_PROGLISTSEPARATOR = 5
SPP_PLACESLIST = 6
SPP_PLACESLISTSEPARATOR = 7
SPP_LOGOFF = 8
SPP_LOGOFFBUTTONS = 9
SPP_USERPICTURE = 10
SPP_PREVIEW = 11
SPP_MOREPROGRAMSTAB = 12
SPP_NSCHOST = 13
SPP_SOFTWAREEXPLORER = 14
SPP_OPENBOX = 15
SPP_SEARCHVIEW = 16
SPP_MOREPROGRAMSARROWBACK = 17
SPP_TOPMATCH = 18
SPP_LOGOFFSPLITBUTTONDROPDOWN = 19
STATICPARTS = Int32
STAT_TEXT = 1
STATUSPARTS = Int32
SP_PANE = 1
SP_GRIPPERPANE = 2
SP_GRIPPER = 3
SYSBUTTONSTATES = Int32
SBS_NORMAL = 1
SBS_HOT = 2
SBS_PUSHED = 3
SBS_DISABLED = 4
SYSTEMCLOSESTATES = Int32
MSYSC_NORMAL = 1
MSYSC_DISABLED = 2
SYSTEMMAXIMIZESTATES = Int32
MSYSMX_NORMAL = 1
MSYSMX_DISABLED = 2
SYSTEMMINIMIZESTATES = Int32
MSYSMN_NORMAL = 1
MSYSMN_DISABLED = 2
SYSTEMRESTORESTATES = Int32
MSYSR_NORMAL = 1
MSYSR_DISABLED = 2
def _define_TA_CUBIC_BEZIER_head():
    class TA_CUBIC_BEZIER(Structure):
        pass
    return TA_CUBIC_BEZIER
def _define_TA_CUBIC_BEZIER():
    TA_CUBIC_BEZIER = win32more.UI.Controls.TA_CUBIC_BEZIER_head
    TA_CUBIC_BEZIER._fields_ = [
        ('header', win32more.UI.Controls.TA_TIMINGFUNCTION),
        ('rX0', Single),
        ('rY0', Single),
        ('rX1', Single),
        ('rY1', Single),
    ]
    return TA_CUBIC_BEZIER
TA_PROPERTY = Int32
TAP_FLAGS = 0
TAP_TRANSFORMCOUNT = 1
TAP_STAGGERDELAY = 2
TAP_STAGGERDELAYCAP = 3
TAP_STAGGERDELAYFACTOR = 4
TAP_ZORDER = 5
TA_PROPERTY_FLAG = UInt32
TAPF_NONE = 0
TAPF_HASSTAGGER = 1
TAPF_ISRTLAWARE = 2
TAPF_ALLOWCOLLECTION = 4
TAPF_HASBACKGROUND = 8
TAPF_HASPERSPECTIVE = 16
def _define_TA_TIMINGFUNCTION_head():
    class TA_TIMINGFUNCTION(Structure):
        pass
    return TA_TIMINGFUNCTION
def _define_TA_TIMINGFUNCTION():
    TA_TIMINGFUNCTION = win32more.UI.Controls.TA_TIMINGFUNCTION_head
    TA_TIMINGFUNCTION._fields_ = [
        ('eTimingFunctionType', win32more.UI.Controls.TA_TIMINGFUNCTION_TYPE),
    ]
    return TA_TIMINGFUNCTION
TA_TIMINGFUNCTION_TYPE = Int32
TTFT_UNDEFINED = 0
TTFT_CUBIC_BEZIER = 1
def _define_TA_TRANSFORM_head():
    class TA_TRANSFORM(Structure):
        pass
    return TA_TRANSFORM
def _define_TA_TRANSFORM():
    TA_TRANSFORM = win32more.UI.Controls.TA_TRANSFORM_head
    TA_TRANSFORM._fields_ = [
        ('eTransformType', win32more.UI.Controls.TA_TRANSFORM_TYPE),
        ('dwTimingFunctionId', UInt32),
        ('dwStartTime', UInt32),
        ('dwDurationTime', UInt32),
        ('eFlags', win32more.UI.Controls.TA_TRANSFORM_FLAG),
    ]
    return TA_TRANSFORM
def _define_TA_TRANSFORM_2D_head():
    class TA_TRANSFORM_2D(Structure):
        pass
    return TA_TRANSFORM_2D
def _define_TA_TRANSFORM_2D():
    TA_TRANSFORM_2D = win32more.UI.Controls.TA_TRANSFORM_2D_head
    TA_TRANSFORM_2D._fields_ = [
        ('header', win32more.UI.Controls.TA_TRANSFORM),
        ('rX', Single),
        ('rY', Single),
        ('rInitialX', Single),
        ('rInitialY', Single),
        ('rOriginX', Single),
        ('rOriginY', Single),
    ]
    return TA_TRANSFORM_2D
def _define_TA_TRANSFORM_CLIP_head():
    class TA_TRANSFORM_CLIP(Structure):
        pass
    return TA_TRANSFORM_CLIP
def _define_TA_TRANSFORM_CLIP():
    TA_TRANSFORM_CLIP = win32more.UI.Controls.TA_TRANSFORM_CLIP_head
    TA_TRANSFORM_CLIP._fields_ = [
        ('header', win32more.UI.Controls.TA_TRANSFORM),
        ('rLeft', Single),
        ('rTop', Single),
        ('rRight', Single),
        ('rBottom', Single),
        ('rInitialLeft', Single),
        ('rInitialTop', Single),
        ('rInitialRight', Single),
        ('rInitialBottom', Single),
    ]
    return TA_TRANSFORM_CLIP
TA_TRANSFORM_FLAG = Int32
TATF_NONE = 0
TATF_TARGETVALUES_USER = 1
TATF_HASINITIALVALUES = 2
TATF_HASORIGINVALUES = 4
def _define_TA_TRANSFORM_OPACITY_head():
    class TA_TRANSFORM_OPACITY(Structure):
        pass
    return TA_TRANSFORM_OPACITY
def _define_TA_TRANSFORM_OPACITY():
    TA_TRANSFORM_OPACITY = win32more.UI.Controls.TA_TRANSFORM_OPACITY_head
    TA_TRANSFORM_OPACITY._fields_ = [
        ('header', win32more.UI.Controls.TA_TRANSFORM),
        ('rOpacity', Single),
        ('rInitialOpacity', Single),
    ]
    return TA_TRANSFORM_OPACITY
TA_TRANSFORM_TYPE = Int32
TATT_TRANSLATE_2D = 0
TATT_SCALE_2D = 1
TATT_OPACITY = 2
TATT_CLIP = 3
TAB_CONTROL_ITEM_STATE = UInt32
TCIS_BUTTONPRESSED = 1
TCIS_HIGHLIGHTED = 2
TABITEMBOTHEDGESTATES = Int32
TIBES_NORMAL = 1
TIBES_HOT = 2
TIBES_SELECTED = 3
TIBES_DISABLED = 4
TIBES_FOCUSED = 5
TABITEMLEFTEDGESTATES = Int32
TILES_NORMAL = 1
TILES_HOT = 2
TILES_SELECTED = 3
TILES_DISABLED = 4
TILES_FOCUSED = 5
TABITEMRIGHTEDGESTATES = Int32
TIRES_NORMAL = 1
TIRES_HOT = 2
TIRES_SELECTED = 3
TIRES_DISABLED = 4
TIRES_FOCUSED = 5
TABITEMSTATES = Int32
TIS_NORMAL = 1
TIS_HOT = 2
TIS_SELECTED = 3
TIS_DISABLED = 4
TIS_FOCUSED = 5
TABPARTS = Int32
TABP_TABITEM = 1
TABP_TABITEMLEFTEDGE = 2
TABP_TABITEMRIGHTEDGE = 3
TABP_TABITEMBOTHEDGE = 4
TABP_TOPTABITEM = 5
TABP_TOPTABITEMLEFTEDGE = 6
TABP_TOPTABITEMRIGHTEDGE = 7
TABP_TOPTABITEMBOTHEDGE = 8
TABP_PANE = 9
TABP_BODY = 10
TABP_AEROWIZARDBODY = 11
TABSTATES = Int32
CSTB_NORMAL = 1
CSTB_HOT = 2
CSTB_SELECTED = 3
TASKBANDPARTS = Int32
TDP_GROUPCOUNT = 1
TDP_FLASHBUTTON = 2
TDP_FLASHBUTTONGROUPMENU = 3
TASKBARPARTS = Int32
TBP_BACKGROUNDBOTTOM = 1
TBP_BACKGROUNDRIGHT = 2
TBP_BACKGROUNDTOP = 3
TBP_BACKGROUNDLEFT = 4
TBP_SIZINGBARBOTTOM = 5
TBP_SIZINGBARRIGHT = 6
TBP_SIZINGBARTOP = 7
TBP_SIZINGBARLEFT = 8
def _define_TASKDIALOG_BUTTON_head():
    class TASKDIALOG_BUTTON(Structure):
        pass
    return TASKDIALOG_BUTTON
def _define_TASKDIALOG_BUTTON():
    TASKDIALOG_BUTTON = win32more.UI.Controls.TASKDIALOG_BUTTON_head
    TASKDIALOG_BUTTON._pack_ = 1
    TASKDIALOG_BUTTON._fields_ = [
        ('nButtonID', Int32),
        ('pszButtonText', win32more.Foundation.PWSTR),
    ]
    return TASKDIALOG_BUTTON
TASKDIALOG_COMMON_BUTTON_FLAGS = Int32
TDCBF_OK_BUTTON = 1
TDCBF_YES_BUTTON = 2
TDCBF_NO_BUTTON = 4
TDCBF_CANCEL_BUTTON = 8
TDCBF_RETRY_BUTTON = 16
TDCBF_CLOSE_BUTTON = 32
TASKDIALOG_ELEMENTS = Int32
TDE_CONTENT = 0
TDE_EXPANDED_INFORMATION = 1
TDE_FOOTER = 2
TDE_MAIN_INSTRUCTION = 3
TASKDIALOG_FLAGS = Int32
TDF_ENABLE_HYPERLINKS = 1
TDF_USE_HICON_MAIN = 2
TDF_USE_HICON_FOOTER = 4
TDF_ALLOW_DIALOG_CANCELLATION = 8
TDF_USE_COMMAND_LINKS = 16
TDF_USE_COMMAND_LINKS_NO_ICON = 32
TDF_EXPAND_FOOTER_AREA = 64
TDF_EXPANDED_BY_DEFAULT = 128
TDF_VERIFICATION_FLAG_CHECKED = 256
TDF_SHOW_PROGRESS_BAR = 512
TDF_SHOW_MARQUEE_PROGRESS_BAR = 1024
TDF_CALLBACK_TIMER = 2048
TDF_POSITION_RELATIVE_TO_WINDOW = 4096
TDF_RTL_LAYOUT = 8192
TDF_NO_DEFAULT_RADIO_BUTTON = 16384
TDF_CAN_BE_MINIMIZED = 32768
TDF_NO_SET_FOREGROUND = 65536
TDF_SIZE_TO_CONTENT = 16777216
TASKDIALOG_ICON_ELEMENTS = Int32
TDIE_ICON_MAIN = 0
TDIE_ICON_FOOTER = 1
TASKDIALOG_MESSAGES = Int32
TDM_NAVIGATE_PAGE = 1125
TDM_CLICK_BUTTON = 1126
TDM_SET_MARQUEE_PROGRESS_BAR = 1127
TDM_SET_PROGRESS_BAR_STATE = 1128
TDM_SET_PROGRESS_BAR_RANGE = 1129
TDM_SET_PROGRESS_BAR_POS = 1130
TDM_SET_PROGRESS_BAR_MARQUEE = 1131
TDM_SET_ELEMENT_TEXT = 1132
TDM_CLICK_RADIO_BUTTON = 1134
TDM_ENABLE_BUTTON = 1135
TDM_ENABLE_RADIO_BUTTON = 1136
TDM_CLICK_VERIFICATION = 1137
TDM_UPDATE_ELEMENT_TEXT = 1138
TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE = 1139
TDM_UPDATE_ICON = 1140
TASKDIALOG_NOTIFICATIONS = Int32
TDN_CREATED = 0
TDN_NAVIGATED = 1
TDN_BUTTON_CLICKED = 2
TDN_HYPERLINK_CLICKED = 3
TDN_TIMER = 4
TDN_DESTROYED = 5
TDN_RADIO_BUTTON_CLICKED = 6
TDN_DIALOG_CONSTRUCTED = 7
TDN_VERIFICATION_CLICKED = 8
TDN_HELP = 9
TDN_EXPANDO_BUTTON_CLICKED = 10
def _define_TASKDIALOGCONFIG_head():
    class TASKDIALOGCONFIG(Structure):
        pass
    return TASKDIALOGCONFIG
def _define_TASKDIALOGCONFIG():
    TASKDIALOGCONFIG = win32more.UI.Controls.TASKDIALOGCONFIG_head
    class TASKDIALOGCONFIG__Anonymous1_e__Union(Union):
        pass
    TASKDIALOGCONFIG__Anonymous1_e__Union._pack_ = 1
    TASKDIALOGCONFIG__Anonymous1_e__Union._fields_ = [
        ('hMainIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszMainIcon', win32more.Foundation.PWSTR),
    ]
    class TASKDIALOGCONFIG__Anonymous2_e__Union(Union):
        pass
    TASKDIALOGCONFIG__Anonymous2_e__Union._pack_ = 1
    TASKDIALOGCONFIG__Anonymous2_e__Union._fields_ = [
        ('hFooterIcon', win32more.UI.WindowsAndMessaging.HICON),
        ('pszFooterIcon', win32more.Foundation.PWSTR),
    ]
    TASKDIALOGCONFIG._pack_ = 1
    TASKDIALOGCONFIG._anonymous_ = [
        'Anonymous1',
        'Anonymous2',
    ]
    TASKDIALOGCONFIG._fields_ = [
        ('cbSize', UInt32),
        ('hwndParent', win32more.Foundation.HWND),
        ('hInstance', win32more.Foundation.HINSTANCE),
        ('dwFlags', win32more.UI.Controls.TASKDIALOG_FLAGS),
        ('dwCommonButtons', win32more.UI.Controls.TASKDIALOG_COMMON_BUTTON_FLAGS),
        ('pszWindowTitle', win32more.Foundation.PWSTR),
        ('Anonymous1', TASKDIALOGCONFIG__Anonymous1_e__Union),
        ('pszMainInstruction', win32more.Foundation.PWSTR),
        ('pszContent', win32more.Foundation.PWSTR),
        ('cButtons', UInt32),
        ('pButtons', POINTER(win32more.UI.Controls.TASKDIALOG_BUTTON_head)),
        ('nDefaultButton', Int32),
        ('cRadioButtons', UInt32),
        ('pRadioButtons', POINTER(win32more.UI.Controls.TASKDIALOG_BUTTON_head)),
        ('nDefaultRadioButton', Int32),
        ('pszVerificationText', win32more.Foundation.PWSTR),
        ('pszExpandedInformation', win32more.Foundation.PWSTR),
        ('pszExpandedControlText', win32more.Foundation.PWSTR),
        ('pszCollapsedControlText', win32more.Foundation.PWSTR),
        ('Anonymous2', TASKDIALOGCONFIG__Anonymous2_e__Union),
        ('pszFooter', win32more.Foundation.PWSTR),
        ('pfCallback', win32more.UI.Controls.PFTASKDIALOGCALLBACK),
        ('lpCallbackData', IntPtr),
        ('cxWidth', UInt32),
    ]
    return TASKDIALOGCONFIG
TASKDIALOGPARTS = Int32
TDLG_PRIMARYPANEL = 1
TDLG_MAININSTRUCTIONPANE = 2
TDLG_MAINICON = 3
TDLG_CONTENTPANE = 4
TDLG_CONTENTICON = 5
TDLG_EXPANDEDCONTENT = 6
TDLG_COMMANDLINKPANE = 7
TDLG_SECONDARYPANEL = 8
TDLG_CONTROLPANE = 9
TDLG_BUTTONSECTION = 10
TDLG_BUTTONWRAPPER = 11
TDLG_EXPANDOTEXT = 12
TDLG_EXPANDOBUTTON = 13
TDLG_VERIFICATIONTEXT = 14
TDLG_FOOTNOTEPANE = 15
TDLG_FOOTNOTEAREA = 16
TDLG_FOOTNOTESEPARATOR = 17
TDLG_EXPANDEDFOOTERAREA = 18
TDLG_PROGRESSBAR = 19
TDLG_IMAGEALIGNMENT = 20
TDLG_RADIOBUTTONPANE = 21
TASKLINKSTATES = Int32
CPTL_NORMAL = 1
CPTL_HOT = 2
CPTL_PRESSED = 3
CPTL_DISABLED = 4
CPTL_PAGE = 5
def _define_TBADDBITMAP_head():
    class TBADDBITMAP(Structure):
        pass
    return TBADDBITMAP
def _define_TBADDBITMAP():
    TBADDBITMAP = win32more.UI.Controls.TBADDBITMAP_head
    TBADDBITMAP._fields_ = [
        ('hInst', win32more.Foundation.HINSTANCE),
        ('nID', UIntPtr),
    ]
    return TBADDBITMAP
def _define_TBBUTTON_head():
    class TBBUTTON(Structure):
        pass
    return TBBUTTON
def _define_TBBUTTON():
    TBBUTTON = win32more.UI.Controls.TBBUTTON_head
    TBBUTTON._fields_ = [
        ('iBitmap', Int32),
        ('idCommand', Int32),
        ('fsState', Byte),
        ('fsStyle', Byte),
        ('bReserved', Byte * 6),
        ('dwData', UIntPtr),
        ('iString', IntPtr),
    ]
    return TBBUTTON
def _define_TBBUTTONINFOA_head():
    class TBBUTTONINFOA(Structure):
        pass
    return TBBUTTONINFOA
def _define_TBBUTTONINFOA():
    TBBUTTONINFOA = win32more.UI.Controls.TBBUTTONINFOA_head
    TBBUTTONINFOA._fields_ = [
        ('cbSize', UInt32),
        ('dwMask', win32more.UI.Controls.TBBUTTONINFOW_MASK),
        ('idCommand', Int32),
        ('iImage', Int32),
        ('fsState', Byte),
        ('fsStyle', Byte),
        ('cx', UInt16),
        ('lParam', UIntPtr),
        ('pszText', win32more.Foundation.PSTR),
        ('cchText', Int32),
    ]
    return TBBUTTONINFOA
def _define_TBBUTTONINFOW_head():
    class TBBUTTONINFOW(Structure):
        pass
    return TBBUTTONINFOW
def _define_TBBUTTONINFOW():
    TBBUTTONINFOW = win32more.UI.Controls.TBBUTTONINFOW_head
    TBBUTTONINFOW._fields_ = [
        ('cbSize', UInt32),
        ('dwMask', win32more.UI.Controls.TBBUTTONINFOW_MASK),
        ('idCommand', Int32),
        ('iImage', Int32),
        ('fsState', Byte),
        ('fsStyle', Byte),
        ('cx', UInt16),
        ('lParam', UIntPtr),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchText', Int32),
    ]
    return TBBUTTONINFOW
TBBUTTONINFOW_MASK = UInt32
TBIF_BYINDEX = 2147483648
TBIF_COMMAND = 32
TBIF_IMAGE = 1
TBIF_LPARAM = 16
TBIF_SIZE = 64
TBIF_STATE = 4
TBIF_STYLE = 8
TBIF_TEXT = 2
def _define_TBINSERTMARK_head():
    class TBINSERTMARK(Structure):
        pass
    return TBINSERTMARK
def _define_TBINSERTMARK():
    TBINSERTMARK = win32more.UI.Controls.TBINSERTMARK_head
    TBINSERTMARK._fields_ = [
        ('iButton', Int32),
        ('dwFlags', win32more.UI.Controls.TBINSERTMARK_FLAGS),
    ]
    return TBINSERTMARK
TBINSERTMARK_FLAGS = UInt32
TBIMHT_NONE = 0
TBIMHT_AFTER = 1
TBIMHT_BACKGROUND = 2
def _define_TBMETRICS_head():
    class TBMETRICS(Structure):
        pass
    return TBMETRICS
def _define_TBMETRICS():
    TBMETRICS = win32more.UI.Controls.TBMETRICS_head
    TBMETRICS._fields_ = [
        ('cbSize', UInt32),
        ('dwMask', UInt32),
        ('cxPad', Int32),
        ('cyPad', Int32),
        ('cxBarPad', Int32),
        ('cyBarPad', Int32),
        ('cxButtonSpacing', Int32),
        ('cyButtonSpacing', Int32),
    ]
    return TBMETRICS
def _define_TBREPLACEBITMAP_head():
    class TBREPLACEBITMAP(Structure):
        pass
    return TBREPLACEBITMAP
def _define_TBREPLACEBITMAP():
    TBREPLACEBITMAP = win32more.UI.Controls.TBREPLACEBITMAP_head
    TBREPLACEBITMAP._fields_ = [
        ('hInstOld', win32more.Foundation.HINSTANCE),
        ('nIDOld', UIntPtr),
        ('hInstNew', win32more.Foundation.HINSTANCE),
        ('nIDNew', UIntPtr),
        ('nButtons', Int32),
    ]
    return TBREPLACEBITMAP
def _define_TBSAVEPARAMSA_head():
    class TBSAVEPARAMSA(Structure):
        pass
    return TBSAVEPARAMSA
def _define_TBSAVEPARAMSA():
    TBSAVEPARAMSA = win32more.UI.Controls.TBSAVEPARAMSA_head
    TBSAVEPARAMSA._fields_ = [
        ('hkr', win32more.System.Registry.HKEY),
        ('pszSubKey', win32more.Foundation.PSTR),
        ('pszValueName', win32more.Foundation.PSTR),
    ]
    return TBSAVEPARAMSA
def _define_TBSAVEPARAMSW_head():
    class TBSAVEPARAMSW(Structure):
        pass
    return TBSAVEPARAMSW
def _define_TBSAVEPARAMSW():
    TBSAVEPARAMSW = win32more.UI.Controls.TBSAVEPARAMSW_head
    TBSAVEPARAMSW._fields_ = [
        ('hkr', win32more.System.Registry.HKEY),
        ('pszSubKey', win32more.Foundation.PWSTR),
        ('pszValueName', win32more.Foundation.PWSTR),
    ]
    return TBSAVEPARAMSW
def _define_TCHITTESTINFO_head():
    class TCHITTESTINFO(Structure):
        pass
    return TCHITTESTINFO
def _define_TCHITTESTINFO():
    TCHITTESTINFO = win32more.UI.Controls.TCHITTESTINFO_head
    TCHITTESTINFO._fields_ = [
        ('pt', win32more.Foundation.POINT),
        ('flags', win32more.UI.Controls.TCHITTESTINFO_FLAGS),
    ]
    return TCHITTESTINFO
TCHITTESTINFO_FLAGS = UInt32
TCHT_NOWHERE = 1
TCHT_ONITEM = 6
TCHT_ONITEMICON = 2
TCHT_ONITEMLABEL = 4
def _define_TCITEMA_head():
    class TCITEMA(Structure):
        pass
    return TCITEMA
def _define_TCITEMA():
    TCITEMA = win32more.UI.Controls.TCITEMA_head
    TCITEMA._fields_ = [
        ('mask', win32more.UI.Controls.TCITEMHEADERA_MASK),
        ('dwState', win32more.UI.Controls.TAB_CONTROL_ITEM_STATE),
        ('dwStateMask', win32more.UI.Controls.TAB_CONTROL_ITEM_STATE),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return TCITEMA
def _define_TCITEMHEADERA_head():
    class TCITEMHEADERA(Structure):
        pass
    return TCITEMHEADERA
def _define_TCITEMHEADERA():
    TCITEMHEADERA = win32more.UI.Controls.TCITEMHEADERA_head
    TCITEMHEADERA._fields_ = [
        ('mask', win32more.UI.Controls.TCITEMHEADERA_MASK),
        ('lpReserved1', UInt32),
        ('lpReserved2', UInt32),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
    ]
    return TCITEMHEADERA
TCITEMHEADERA_MASK = UInt32
TCIF_IMAGE = 2
TCIF_RTLREADING = 4
TCIF_TEXT = 1
TCIF_PARAM = 8
TCIF_STATE = 16
def _define_TCITEMHEADERW_head():
    class TCITEMHEADERW(Structure):
        pass
    return TCITEMHEADERW
def _define_TCITEMHEADERW():
    TCITEMHEADERW = win32more.UI.Controls.TCITEMHEADERW_head
    TCITEMHEADERW._fields_ = [
        ('mask', win32more.UI.Controls.TCITEMHEADERA_MASK),
        ('lpReserved1', UInt32),
        ('lpReserved2', UInt32),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
    ]
    return TCITEMHEADERW
def _define_TCITEMW_head():
    class TCITEMW(Structure):
        pass
    return TCITEMW
def _define_TCITEMW():
    TCITEMW = win32more.UI.Controls.TCITEMW_head
    TCITEMW._fields_ = [
        ('mask', win32more.UI.Controls.TCITEMHEADERA_MASK),
        ('dwState', win32more.UI.Controls.TAB_CONTROL_ITEM_STATE),
        ('dwStateMask', win32more.UI.Controls.TAB_CONTROL_ITEM_STATE),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return TCITEMW
TEXTSELECTIONGRIPPERPARTS = Int32
TSGP_GRIPPER = 1
TEXTSHADOWTYPE = Int32
TST_NONE = 0
TST_SINGLE = 1
TST_CONTINUOUS = 2
TEXTSTYLEPARTS = Int32
TEXT_MAININSTRUCTION = 1
TEXT_INSTRUCTION = 2
TEXT_BODYTITLE = 3
TEXT_BODYTEXT = 4
TEXT_SECONDARYTEXT = 5
TEXT_HYPERLINKTEXT = 6
TEXT_EXPANDED = 7
TEXT_LABEL = 8
TEXT_CONTROLLABEL = 9
THEME_PROPERTY_SYMBOL_ID = UInt32
TMT_RESERVEDLOW = 0
TMT_RESERVEDHIGH = 7999
TMT_DIBDATA = 2
TMT_GLYPHDIBDATA = 8
TMT_ENUM = 200
TMT_STRING = 201
TMT_INT = 202
TMT_BOOL = 203
TMT_COLOR = 204
TMT_MARGINS = 205
TMT_FILENAME = 206
TMT_SIZE = 207
TMT_POSITION = 208
TMT_RECT = 209
TMT_FONT = 210
TMT_INTLIST = 211
TMT_HBITMAP = 212
TMT_DISKSTREAM = 213
TMT_STREAM = 214
TMT_BITMAPREF = 215
TMT_FLOAT = 216
TMT_FLOATLIST = 217
TMT_COLORSCHEMES = 401
TMT_SIZES = 402
TMT_CHARSET = 403
TMT_NAME = 600
TMT_DISPLAYNAME = 601
TMT_TOOLTIP = 602
TMT_COMPANY = 603
TMT_AUTHOR = 604
TMT_COPYRIGHT = 605
TMT_URL = 606
TMT_VERSION = 607
TMT_DESCRIPTION = 608
TMT_FIRST_RCSTRING_NAME = 601
TMT_LAST_RCSTRING_NAME = 608
TMT_CAPTIONFONT = 801
TMT_SMALLCAPTIONFONT = 802
TMT_MENUFONT = 803
TMT_STATUSFONT = 804
TMT_MSGBOXFONT = 805
TMT_ICONTITLEFONT = 806
TMT_HEADING1FONT = 807
TMT_HEADING2FONT = 808
TMT_BODYFONT = 809
TMT_FIRSTFONT = 801
TMT_LASTFONT = 809
TMT_FLATMENUS = 1001
TMT_FIRSTBOOL = 1001
TMT_LASTBOOL = 1001
TMT_SIZINGBORDERWIDTH = 1201
TMT_SCROLLBARWIDTH = 1202
TMT_SCROLLBARHEIGHT = 1203
TMT_CAPTIONBARWIDTH = 1204
TMT_CAPTIONBARHEIGHT = 1205
TMT_SMCAPTIONBARWIDTH = 1206
TMT_SMCAPTIONBARHEIGHT = 1207
TMT_MENUBARWIDTH = 1208
TMT_MENUBARHEIGHT = 1209
TMT_PADDEDBORDERWIDTH = 1210
TMT_FIRSTSIZE = 1201
TMT_LASTSIZE = 1210
TMT_MINCOLORDEPTH = 1301
TMT_FIRSTINT = 1301
TMT_LASTINT = 1301
TMT_CSSNAME = 1401
TMT_XMLNAME = 1402
TMT_LASTUPDATED = 1403
TMT_ALIAS = 1404
TMT_FIRSTSTRING = 1401
TMT_LASTSTRING = 1404
TMT_SCROLLBAR = 1601
TMT_BACKGROUND = 1602
TMT_ACTIVECAPTION = 1603
TMT_INACTIVECAPTION = 1604
TMT_MENU = 1605
TMT_WINDOW = 1606
TMT_WINDOWFRAME = 1607
TMT_MENUTEXT = 1608
TMT_WINDOWTEXT = 1609
TMT_CAPTIONTEXT = 1610
TMT_ACTIVEBORDER = 1611
TMT_INACTIVEBORDER = 1612
TMT_APPWORKSPACE = 1613
TMT_HIGHLIGHT = 1614
TMT_HIGHLIGHTTEXT = 1615
TMT_BTNFACE = 1616
TMT_BTNSHADOW = 1617
TMT_GRAYTEXT = 1618
TMT_BTNTEXT = 1619
TMT_INACTIVECAPTIONTEXT = 1620
TMT_BTNHIGHLIGHT = 1621
TMT_DKSHADOW3D = 1622
TMT_LIGHT3D = 1623
TMT_INFOTEXT = 1624
TMT_INFOBK = 1625
TMT_BUTTONALTERNATEFACE = 1626
TMT_HOTTRACKING = 1627
TMT_GRADIENTACTIVECAPTION = 1628
TMT_GRADIENTINACTIVECAPTION = 1629
TMT_MENUHILIGHT = 1630
TMT_MENUBAR = 1631
TMT_FIRSTCOLOR = 1601
TMT_LASTCOLOR = 1631
TMT_FROMHUE1 = 1801
TMT_FROMHUE2 = 1802
TMT_FROMHUE3 = 1803
TMT_FROMHUE4 = 1804
TMT_FROMHUE5 = 1805
TMT_TOHUE1 = 1806
TMT_TOHUE2 = 1807
TMT_TOHUE3 = 1808
TMT_TOHUE4 = 1809
TMT_TOHUE5 = 1810
TMT_FROMCOLOR1 = 2001
TMT_FROMCOLOR2 = 2002
TMT_FROMCOLOR3 = 2003
TMT_FROMCOLOR4 = 2004
TMT_FROMCOLOR5 = 2005
TMT_TOCOLOR1 = 2006
TMT_TOCOLOR2 = 2007
TMT_TOCOLOR3 = 2008
TMT_TOCOLOR4 = 2009
TMT_TOCOLOR5 = 2010
TMT_TRANSPARENT = 2201
TMT_AUTOSIZE = 2202
TMT_BORDERONLY = 2203
TMT_COMPOSITED = 2204
TMT_BGFILL = 2205
TMT_GLYPHTRANSPARENT = 2206
TMT_GLYPHONLY = 2207
TMT_ALWAYSSHOWSIZINGBAR = 2208
TMT_MIRRORIMAGE = 2209
TMT_UNIFORMSIZING = 2210
TMT_INTEGRALSIZING = 2211
TMT_SOURCEGROW = 2212
TMT_SOURCESHRINK = 2213
TMT_DRAWBORDERS = 2214
TMT_NOETCHEDEFFECT = 2215
TMT_TEXTAPPLYOVERLAY = 2216
TMT_TEXTGLOW = 2217
TMT_TEXTITALIC = 2218
TMT_COMPOSITEDOPAQUE = 2219
TMT_LOCALIZEDMIRRORIMAGE = 2220
TMT_IMAGECOUNT = 2401
TMT_ALPHALEVEL = 2402
TMT_BORDERSIZE = 2403
TMT_ROUNDCORNERWIDTH = 2404
TMT_ROUNDCORNERHEIGHT = 2405
TMT_GRADIENTRATIO1 = 2406
TMT_GRADIENTRATIO2 = 2407
TMT_GRADIENTRATIO3 = 2408
TMT_GRADIENTRATIO4 = 2409
TMT_GRADIENTRATIO5 = 2410
TMT_PROGRESSCHUNKSIZE = 2411
TMT_PROGRESSSPACESIZE = 2412
TMT_SATURATION = 2413
TMT_TEXTBORDERSIZE = 2414
TMT_ALPHATHRESHOLD = 2415
TMT_WIDTH = 2416
TMT_HEIGHT = 2417
TMT_GLYPHINDEX = 2418
TMT_TRUESIZESTRETCHMARK = 2419
TMT_MINDPI1 = 2420
TMT_MINDPI2 = 2421
TMT_MINDPI3 = 2422
TMT_MINDPI4 = 2423
TMT_MINDPI5 = 2424
TMT_TEXTGLOWSIZE = 2425
TMT_FRAMESPERSECOND = 2426
TMT_PIXELSPERFRAME = 2427
TMT_ANIMATIONDELAY = 2428
TMT_GLOWINTENSITY = 2429
TMT_OPACITY = 2430
TMT_COLORIZATIONCOLOR = 2431
TMT_COLORIZATIONOPACITY = 2432
TMT_MINDPI6 = 2433
TMT_MINDPI7 = 2434
TMT_GLYPHFONT = 2601
TMT_IMAGEFILE = 3001
TMT_IMAGEFILE1 = 3002
TMT_IMAGEFILE2 = 3003
TMT_IMAGEFILE3 = 3004
TMT_IMAGEFILE4 = 3005
TMT_IMAGEFILE5 = 3006
TMT_GLYPHIMAGEFILE = 3008
TMT_IMAGEFILE6 = 3009
TMT_IMAGEFILE7 = 3010
TMT_TEXT = 3201
TMT_CLASSICVALUE = 3202
TMT_OFFSET = 3401
TMT_TEXTSHADOWOFFSET = 3402
TMT_MINSIZE = 3403
TMT_MINSIZE1 = 3404
TMT_MINSIZE2 = 3405
TMT_MINSIZE3 = 3406
TMT_MINSIZE4 = 3407
TMT_MINSIZE5 = 3408
TMT_NORMALSIZE = 3409
TMT_MINSIZE6 = 3410
TMT_MINSIZE7 = 3411
TMT_SIZINGMARGINS = 3601
TMT_CONTENTMARGINS = 3602
TMT_CAPTIONMARGINS = 3603
TMT_BORDERCOLOR = 3801
TMT_FILLCOLOR = 3802
TMT_TEXTCOLOR = 3803
TMT_EDGELIGHTCOLOR = 3804
TMT_EDGEHIGHLIGHTCOLOR = 3805
TMT_EDGESHADOWCOLOR = 3806
TMT_EDGEDKSHADOWCOLOR = 3807
TMT_EDGEFILLCOLOR = 3808
TMT_TRANSPARENTCOLOR = 3809
TMT_GRADIENTCOLOR1 = 3810
TMT_GRADIENTCOLOR2 = 3811
TMT_GRADIENTCOLOR3 = 3812
TMT_GRADIENTCOLOR4 = 3813
TMT_GRADIENTCOLOR5 = 3814
TMT_SHADOWCOLOR = 3815
TMT_GLOWCOLOR = 3816
TMT_TEXTBORDERCOLOR = 3817
TMT_TEXTSHADOWCOLOR = 3818
TMT_GLYPHTEXTCOLOR = 3819
TMT_GLYPHTRANSPARENTCOLOR = 3820
TMT_FILLCOLORHINT = 3821
TMT_BORDERCOLORHINT = 3822
TMT_ACCENTCOLORHINT = 3823
TMT_TEXTCOLORHINT = 3824
TMT_HEADING1TEXTCOLOR = 3825
TMT_HEADING2TEXTCOLOR = 3826
TMT_BODYTEXTCOLOR = 3827
TMT_BGTYPE = 4001
TMT_BORDERTYPE = 4002
TMT_FILLTYPE = 4003
TMT_SIZINGTYPE = 4004
TMT_HALIGN = 4005
TMT_CONTENTALIGNMENT = 4006
TMT_VALIGN = 4007
TMT_OFFSETTYPE = 4008
TMT_ICONEFFECT = 4009
TMT_TEXTSHADOWTYPE = 4010
TMT_IMAGELAYOUT = 4011
TMT_GLYPHTYPE = 4012
TMT_IMAGESELECTTYPE = 4013
TMT_GLYPHFONTSIZINGTYPE = 4014
TMT_TRUESIZESCALINGTYPE = 4015
TMT_USERPICTURE = 5001
TMT_DEFAULTPANESIZE = 5002
TMT_BLENDCOLOR = 5003
TMT_CUSTOMSPLITRECT = 5004
TMT_ANIMATIONBUTTONRECT = 5005
TMT_ANIMATIONDURATION = 5006
TMT_TRANSITIONDURATIONS = 6000
TMT_SCALEDBACKGROUND = 7001
TMT_ATLASIMAGE = 8000
TMT_ATLASINPUTIMAGE = 8001
TMT_ATLASRECT = 8002
THEMESIZE = Int32
TS_MIN = 0
TS_TRUE = 1
TS_DRAW = 2
THUMBBOTTOMSTATES = Int32
TUBS_NORMAL = 1
TUBS_HOT = 2
TUBS_PRESSED = 3
TUBS_FOCUSED = 4
TUBS_DISABLED = 5
THUMBLEFTSTATES = Int32
TUVLS_NORMAL = 1
TUVLS_HOT = 2
TUVLS_PRESSED = 3
TUVLS_FOCUSED = 4
TUVLS_DISABLED = 5
THUMBRIGHTSTATES = Int32
TUVRS_NORMAL = 1
TUVRS_HOT = 2
TUVRS_PRESSED = 3
TUVRS_FOCUSED = 4
TUVRS_DISABLED = 5
THUMBSTATES = Int32
TUS_NORMAL = 1
TUS_HOT = 2
TUS_PRESSED = 3
TUS_FOCUSED = 4
TUS_DISABLED = 5
THUMBTOPSTATES = Int32
TUTS_NORMAL = 1
TUTS_HOT = 2
TUTS_PRESSED = 3
TUTS_FOCUSED = 4
TUTS_DISABLED = 5
THUMBVERTSTATES = Int32
TUVS_NORMAL = 1
TUVS_HOT = 2
TUVS_PRESSED = 3
TUVS_FOCUSED = 4
TUVS_DISABLED = 5
TICSSTATES = Int32
TSS_NORMAL = 1
TICSVERTSTATES = Int32
TSVS_NORMAL = 1
TITLEBARSTATES = Int32
AW_S_TITLEBAR_ACTIVE = 1
AW_S_TITLEBAR_INACTIVE = 2
TOOLBARPARTS = Int32
TP_BUTTON = 1
TP_DROPDOWNBUTTON = 2
TP_SPLITBUTTON = 3
TP_SPLITBUTTONDROPDOWN = 4
TP_SEPARATOR = 5
TP_SEPARATORVERT = 6
TP_DROPDOWNBUTTONGLYPH = 7
TOOLBARSTYLESTATES = Int32
TS_NORMAL = 1
TS_HOT = 2
TS_PRESSED = 3
TS_DISABLED = 4
TS_CHECKED = 5
TS_HOTCHECKED = 6
TS_NEARHOT = 7
TS_OTHERSIDEHOT = 8
TOOLTIP_FLAGS = UInt32
TTF_IDISHWND = 1
TTF_CENTERTIP = 2
TTF_RTLREADING = 4
TTF_SUBCLASS = 16
TTF_TRACK = 32
TTF_ABSOLUTE = 128
TTF_TRANSPARENT = 256
TTF_PARSELINKS = 4096
TTF_DI_SETITEM = 32768
TOOLTIPPARTS = Int32
TTP_STANDARD = 1
TTP_STANDARDTITLE = 2
TTP_BALLOON = 3
TTP_BALLOONTITLE = 4
TTP_CLOSE = 5
TTP_BALLOONSTEM = 6
TTP_WRENCH = 7
TOPTABITEMBOTHEDGESTATES = Int32
TTIBES_NORMAL = 1
TTIBES_HOT = 2
TTIBES_SELECTED = 3
TTIBES_DISABLED = 4
TTIBES_FOCUSED = 5
TOPTABITEMLEFTEDGESTATES = Int32
TTILES_NORMAL = 1
TTILES_HOT = 2
TTILES_SELECTED = 3
TTILES_DISABLED = 4
TTILES_FOCUSED = 5
TOPTABITEMRIGHTEDGESTATES = Int32
TTIRES_NORMAL = 1
TTIRES_HOT = 2
TTIRES_SELECTED = 3
TTIRES_DISABLED = 4
TTIRES_FOCUSED = 5
TOPTABITEMSTATES = Int32
TTIS_NORMAL = 1
TTIS_HOT = 2
TTIS_SELECTED = 3
TTIS_DISABLED = 4
TTIS_FOCUSED = 5
def _define_TOUCH_HIT_TESTING_INPUT_head():
    class TOUCH_HIT_TESTING_INPUT(Structure):
        pass
    return TOUCH_HIT_TESTING_INPUT
def _define_TOUCH_HIT_TESTING_INPUT():
    TOUCH_HIT_TESTING_INPUT = win32more.UI.Controls.TOUCH_HIT_TESTING_INPUT_head
    TOUCH_HIT_TESTING_INPUT._fields_ = [
        ('pointerId', UInt32),
        ('point', win32more.Foundation.POINT),
        ('boundingBox', win32more.Foundation.RECT),
        ('nonOccludedBoundingBox', win32more.Foundation.RECT),
        ('orientation', UInt32),
    ]
    return TOUCH_HIT_TESTING_INPUT
def _define_TOUCH_HIT_TESTING_PROXIMITY_EVALUATION_head():
    class TOUCH_HIT_TESTING_PROXIMITY_EVALUATION(Structure):
        pass
    return TOUCH_HIT_TESTING_PROXIMITY_EVALUATION
def _define_TOUCH_HIT_TESTING_PROXIMITY_EVALUATION():
    TOUCH_HIT_TESTING_PROXIMITY_EVALUATION = win32more.UI.Controls.TOUCH_HIT_TESTING_PROXIMITY_EVALUATION_head
    TOUCH_HIT_TESTING_PROXIMITY_EVALUATION._fields_ = [
        ('score', UInt16),
        ('adjustedPoint', win32more.Foundation.POINT),
    ]
    return TOUCH_HIT_TESTING_PROXIMITY_EVALUATION
TRACKBARPARTS = Int32
TKP_TRACK = 1
TKP_TRACKVERT = 2
TKP_THUMB = 3
TKP_THUMBBOTTOM = 4
TKP_THUMBTOP = 5
TKP_THUMBVERT = 6
TKP_THUMBLEFT = 7
TKP_THUMBRIGHT = 8
TKP_TICS = 9
TKP_TICSVERT = 10
TRACKBARSTYLESTATES = Int32
TKS_NORMAL = 1
TRACKSTATES = Int32
TRS_NORMAL = 1
TRACKVERTSTATES = Int32
TRVS_NORMAL = 1
TRAILINGGRIDCELLSTATES = Int32
MCTGC_HOT = 1
MCTGC_HASSTATE = 2
MCTGC_HASSTATEHOT = 3
MCTGC_TODAY = 4
MCTGC_TODAYSELECTED = 5
MCTGC_SELECTED = 6
MCTGC_SELECTEDHOT = 7
TRAILINGGRIDCELLUPPERSTATES = Int32
MCTGCU_HOT = 1
MCTGCU_HASSTATE = 2
MCTGCU_HASSTATEHOT = 3
MCTGCU_SELECTED = 4
MCTGCU_SELECTEDHOT = 5
TRANSPARENTBACKGROUNDSTATES = Int32
CBTBS_NORMAL = 1
CBTBS_HOT = 2
CBTBS_DISABLED = 3
CBTBS_FOCUSED = 4
TRANSPARENTBARSTATES = Int32
PBBS_NORMAL = 1
PBBS_PARTIAL = 2
TRANSPARENTBARVERTSTATES = Int32
PBBVS_NORMAL = 1
PBBVS_PARTIAL = 2
TRAYNOTIFYPARTS = Int32
TNP_BACKGROUND = 1
TNP_ANIMBACKGROUND = 2
TREE_VIEW_ITEM_STATE_FLAGS = UInt32
TVIS_SELECTED = 2
TVIS_CUT = 4
TVIS_DROPHILITED = 8
TVIS_BOLD = 16
TVIS_EXPANDED = 32
TVIS_EXPANDEDONCE = 64
TVIS_EXPANDPARTIAL = 128
TVIS_OVERLAYMASK = 3840
TVIS_STATEIMAGEMASK = 61440
TVIS_USERMASK = 61440
TVIS_EX_FLAT = 1
TVIS_EX_DISABLED = 2
TVIS_EX_ALL = 2
TREEITEMSTATES = Int32
TREIS_NORMAL = 1
TREIS_HOT = 2
TREIS_SELECTED = 3
TREIS_DISABLED = 4
TREIS_SELECTEDNOTFOCUS = 5
TREIS_HOTSELECTED = 6
TREEVIEWPARTS = Int32
TVP_TREEITEM = 1
TVP_GLYPH = 2
TVP_BRANCH = 3
TVP_HOTGLYPH = 4
TRUESIZESCALINGTYPE = Int32
TSST_NONE = 0
TSST_SIZE = 1
TSST_DPI = 2
def _define_TTGETTITLE_head():
    class TTGETTITLE(Structure):
        pass
    return TTGETTITLE
def _define_TTGETTITLE():
    TTGETTITLE = win32more.UI.Controls.TTGETTITLE_head
    TTGETTITLE._fields_ = [
        ('dwSize', UInt32),
        ('uTitleBitmap', UInt32),
        ('cch', UInt32),
        ('pszTitle', win32more.Foundation.PWSTR),
    ]
    return TTGETTITLE
def _define_TTHITTESTINFOA_head():
    class TTHITTESTINFOA(Structure):
        pass
    return TTHITTESTINFOA
def _define_TTHITTESTINFOA():
    TTHITTESTINFOA = win32more.UI.Controls.TTHITTESTINFOA_head
    TTHITTESTINFOA._fields_ = [
        ('hwnd', win32more.Foundation.HWND),
        ('pt', win32more.Foundation.POINT),
        ('ti', win32more.UI.Controls.TTTOOLINFOA),
    ]
    return TTHITTESTINFOA
def _define_TTHITTESTINFOW_head():
    class TTHITTESTINFOW(Structure):
        pass
    return TTHITTESTINFOW
def _define_TTHITTESTINFOW():
    TTHITTESTINFOW = win32more.UI.Controls.TTHITTESTINFOW_head
    TTHITTESTINFOW._fields_ = [
        ('hwnd', win32more.Foundation.HWND),
        ('pt', win32more.Foundation.POINT),
        ('ti', win32more.UI.Controls.TTTOOLINFOW),
    ]
    return TTHITTESTINFOW
def _define_TTTOOLINFOA_head():
    class TTTOOLINFOA(Structure):
        pass
    return TTTOOLINFOA
def _define_TTTOOLINFOA():
    TTTOOLINFOA = win32more.UI.Controls.TTTOOLINFOA_head
    TTTOOLINFOA._fields_ = [
        ('cbSize', UInt32),
        ('uFlags', win32more.UI.Controls.TOOLTIP_FLAGS),
        ('hwnd', win32more.Foundation.HWND),
        ('uId', UIntPtr),
        ('rect', win32more.Foundation.RECT),
        ('hinst', win32more.Foundation.HINSTANCE),
        ('lpszText', win32more.Foundation.PSTR),
        ('lParam', win32more.Foundation.LPARAM),
        ('lpReserved', c_void_p),
    ]
    return TTTOOLINFOA
def _define_TTTOOLINFOW_head():
    class TTTOOLINFOW(Structure):
        pass
    return TTTOOLINFOW
def _define_TTTOOLINFOW():
    TTTOOLINFOW = win32more.UI.Controls.TTTOOLINFOW_head
    TTTOOLINFOW._fields_ = [
        ('cbSize', UInt32),
        ('uFlags', win32more.UI.Controls.TOOLTIP_FLAGS),
        ('hwnd', win32more.Foundation.HWND),
        ('uId', UIntPtr),
        ('rect', win32more.Foundation.RECT),
        ('hinst', win32more.Foundation.HINSTANCE),
        ('lpszText', win32more.Foundation.PWSTR),
        ('lParam', win32more.Foundation.LPARAM),
        ('lpReserved', c_void_p),
    ]
    return TTTOOLINFOW
def _define_TVGETITEMPARTRECTINFO_head():
    class TVGETITEMPARTRECTINFO(Structure):
        pass
    return TVGETITEMPARTRECTINFO
def _define_TVGETITEMPARTRECTINFO():
    TVGETITEMPARTRECTINFO = win32more.UI.Controls.TVGETITEMPARTRECTINFO_head
    TVGETITEMPARTRECTINFO._fields_ = [
        ('hti', win32more.UI.Controls.HTREEITEM),
        ('prc', POINTER(win32more.Foundation.RECT_head)),
        ('partID', win32more.UI.Controls.TVITEMPART),
    ]
    return TVGETITEMPARTRECTINFO
def _define_TVHITTESTINFO_head():
    class TVHITTESTINFO(Structure):
        pass
    return TVHITTESTINFO
def _define_TVHITTESTINFO():
    TVHITTESTINFO = win32more.UI.Controls.TVHITTESTINFO_head
    TVHITTESTINFO._fields_ = [
        ('pt', win32more.Foundation.POINT),
        ('flags', win32more.UI.Controls.TVHITTESTINFO_FLAGS),
        ('hItem', win32more.UI.Controls.HTREEITEM),
    ]
    return TVHITTESTINFO
TVHITTESTINFO_FLAGS = UInt32
TVHT_ABOVE = 256
TVHT_BELOW = 512
TVHT_NOWHERE = 1
TVHT_ONITEM = 70
TVHT_ONITEMBUTTON = 16
TVHT_ONITEMICON = 2
TVHT_ONITEMINDENT = 8
TVHT_ONITEMLABEL = 4
TVHT_ONITEMRIGHT = 32
TVHT_ONITEMSTATEICON = 64
TVHT_TOLEFT = 2048
TVHT_TORIGHT = 1024
def _define_TVINSERTSTRUCTA_head():
    class TVINSERTSTRUCTA(Structure):
        pass
    return TVINSERTSTRUCTA
def _define_TVINSERTSTRUCTA():
    TVINSERTSTRUCTA = win32more.UI.Controls.TVINSERTSTRUCTA_head
    class TVINSERTSTRUCTA__Anonymous_e__Union(Union):
        pass
    TVINSERTSTRUCTA__Anonymous_e__Union._fields_ = [
        ('itemex', win32more.UI.Controls.TVITEMEXA),
        ('item', win32more.UI.Controls.TVITEMA),
    ]
    TVINSERTSTRUCTA._anonymous_ = [
        'Anonymous',
    ]
    TVINSERTSTRUCTA._fields_ = [
        ('hParent', win32more.UI.Controls.HTREEITEM),
        ('hInsertAfter', win32more.UI.Controls.HTREEITEM),
        ('Anonymous', TVINSERTSTRUCTA__Anonymous_e__Union),
    ]
    return TVINSERTSTRUCTA
def _define_TVINSERTSTRUCTW_head():
    class TVINSERTSTRUCTW(Structure):
        pass
    return TVINSERTSTRUCTW
def _define_TVINSERTSTRUCTW():
    TVINSERTSTRUCTW = win32more.UI.Controls.TVINSERTSTRUCTW_head
    class TVINSERTSTRUCTW__Anonymous_e__Union(Union):
        pass
    TVINSERTSTRUCTW__Anonymous_e__Union._fields_ = [
        ('itemex', win32more.UI.Controls.TVITEMEXW),
        ('item', win32more.UI.Controls.TVITEMW),
    ]
    TVINSERTSTRUCTW._anonymous_ = [
        'Anonymous',
    ]
    TVINSERTSTRUCTW._fields_ = [
        ('hParent', win32more.UI.Controls.HTREEITEM),
        ('hInsertAfter', win32more.UI.Controls.HTREEITEM),
        ('Anonymous', TVINSERTSTRUCTW__Anonymous_e__Union),
    ]
    return TVINSERTSTRUCTW
TVITEM_MASK = UInt32
TVIF_CHILDREN = 64
TVIF_DI_SETITEM = 4096
TVIF_HANDLE = 16
TVIF_IMAGE = 2
TVIF_PARAM = 4
TVIF_SELECTEDIMAGE = 32
TVIF_STATE = 8
TVIF_TEXT = 1
TVIF_EXPANDEDIMAGE = 512
TVIF_INTEGRAL = 128
TVIF_STATEEX = 256
def _define_TVITEMA_head():
    class TVITEMA(Structure):
        pass
    return TVITEMA
def _define_TVITEMA():
    TVITEMA = win32more.UI.Controls.TVITEMA_head
    TVITEMA._fields_ = [
        ('mask', win32more.UI.Controls.TVITEM_MASK),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('state', win32more.UI.Controls.TREE_VIEW_ITEM_STATE_FLAGS),
        ('stateMask', win32more.UI.Controls.TREE_VIEW_ITEM_STATE_FLAGS),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('iSelectedImage', Int32),
        ('cChildren', win32more.UI.Controls.TVITEMEXW_CHILDREN),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return TVITEMA
def _define_TVITEMEXA_head():
    class TVITEMEXA(Structure):
        pass
    return TVITEMEXA
def _define_TVITEMEXA():
    TVITEMEXA = win32more.UI.Controls.TVITEMEXA_head
    TVITEMEXA._fields_ = [
        ('mask', win32more.UI.Controls.TVITEM_MASK),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('state', UInt32),
        ('stateMask', UInt32),
        ('pszText', win32more.Foundation.PSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('iSelectedImage', Int32),
        ('cChildren', win32more.UI.Controls.TVITEMEXW_CHILDREN),
        ('lParam', win32more.Foundation.LPARAM),
        ('iIntegral', Int32),
        ('uStateEx', UInt32),
        ('hwnd', win32more.Foundation.HWND),
        ('iExpandedImage', Int32),
        ('iReserved', Int32),
    ]
    return TVITEMEXA
def _define_TVITEMEXW_head():
    class TVITEMEXW(Structure):
        pass
    return TVITEMEXW
def _define_TVITEMEXW():
    TVITEMEXW = win32more.UI.Controls.TVITEMEXW_head
    TVITEMEXW._fields_ = [
        ('mask', win32more.UI.Controls.TVITEM_MASK),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('state', UInt32),
        ('stateMask', UInt32),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('iSelectedImage', Int32),
        ('cChildren', win32more.UI.Controls.TVITEMEXW_CHILDREN),
        ('lParam', win32more.Foundation.LPARAM),
        ('iIntegral', Int32),
        ('uStateEx', UInt32),
        ('hwnd', win32more.Foundation.HWND),
        ('iExpandedImage', Int32),
        ('iReserved', Int32),
    ]
    return TVITEMEXW
TVITEMEXW_CHILDREN = Int32
I_ZERO = 0
I_ONE_OR_MORE = 1
I_CHILDRENCALLBACK = -1
I_CHILDRENAUTO = -2
TVITEMPART = Int32
TVGIPR_BUTTON = 1
def _define_TVITEMW_head():
    class TVITEMW(Structure):
        pass
    return TVITEMW
def _define_TVITEMW():
    TVITEMW = win32more.UI.Controls.TVITEMW_head
    TVITEMW._fields_ = [
        ('mask', win32more.UI.Controls.TVITEM_MASK),
        ('hItem', win32more.UI.Controls.HTREEITEM),
        ('state', win32more.UI.Controls.TREE_VIEW_ITEM_STATE_FLAGS),
        ('stateMask', win32more.UI.Controls.TREE_VIEW_ITEM_STATE_FLAGS),
        ('pszText', win32more.Foundation.PWSTR),
        ('cchTextMax', Int32),
        ('iImage', Int32),
        ('iSelectedImage', Int32),
        ('cChildren', win32more.UI.Controls.TVITEMEXW_CHILDREN),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return TVITEMW
def _define_TVSORTCB_head():
    class TVSORTCB(Structure):
        pass
    return TVSORTCB
def _define_TVSORTCB():
    TVSORTCB = win32more.UI.Controls.TVSORTCB_head
    TVSORTCB._fields_ = [
        ('hParent', win32more.UI.Controls.HTREEITEM),
        ('lpfnCompare', win32more.UI.Controls.PFNTVCOMPARE),
        ('lParam', win32more.Foundation.LPARAM),
    ]
    return TVSORTCB
def _define_UDACCEL_head():
    class UDACCEL(Structure):
        pass
    return UDACCEL
def _define_UDACCEL():
    UDACCEL = win32more.UI.Controls.UDACCEL_head
    UDACCEL._fields_ = [
        ('nSec', UInt32),
        ('nInc', UInt32),
    ]
    return UDACCEL
UPDATEMETADATASTATES = Int32
DDUPDATEMETADATA_HIGHLIGHT = 1
DDUPDATEMETADATA_NOHIGHLIGHT = 2
UPHORZSTATES = Int32
UPHZS_NORMAL = 1
UPHZS_HOT = 2
UPHZS_PRESSED = 3
UPHZS_DISABLED = 4
UPSTATES = Int32
UPS_NORMAL = 1
UPS_HOT = 2
UPS_PRESSED = 3
UPS_DISABLED = 4
def _define_USAGE_PROPERTIES_head():
    class USAGE_PROPERTIES(Structure):
        pass
    return USAGE_PROPERTIES
def _define_USAGE_PROPERTIES():
    USAGE_PROPERTIES = win32more.UI.Controls.USAGE_PROPERTIES_head
    USAGE_PROPERTIES._fields_ = [
        ('level', UInt16),
        ('page', UInt16),
        ('usage', UInt16),
        ('logicalMinimum', Int32),
        ('logicalMaximum', Int32),
        ('unit', UInt16),
        ('exponent', UInt16),
        ('count', Byte),
        ('physicalMinimum', Int32),
        ('physicalMaximum', Int32),
    ]
    return USAGE_PROPERTIES
USERTILEPARTS = Int32
UTP_STROKEBACKGROUND = 1
UTP_HOVERBACKGROUND = 2
VALIGN = Int32
VA_TOP = 0
VA_CENTER = 1
VA_BOTTOM = 2
VERTSCROLLSTATES = Int32
VSS_NORMAL = 1
VSS_HOT = 2
VSS_PUSHED = 3
VSS_DISABLED = 4
VERTTHUMBSTATES = Int32
VTS_NORMAL = 1
VTS_HOT = 2
VTS_PUSHED = 3
VTS_DISABLED = 4
WARNINGSTATES = Int32
DDWARNING_HIGHLIGHT = 1
DDWARNING_NOHIGHLIGHT = 2
WINDOWPARTS = Int32
WP_CAPTION = 1
WP_SMALLCAPTION = 2
WP_MINCAPTION = 3
WP_SMALLMINCAPTION = 4
WP_MAXCAPTION = 5
WP_SMALLMAXCAPTION = 6
WP_FRAMELEFT = 7
WP_FRAMERIGHT = 8
WP_FRAMEBOTTOM = 9
WP_SMALLFRAMELEFT = 10
WP_SMALLFRAMERIGHT = 11
WP_SMALLFRAMEBOTTOM = 12
WP_SYSBUTTON = 13
WP_MDISYSBUTTON = 14
WP_MINBUTTON = 15
WP_MDIMINBUTTON = 16
WP_MAXBUTTON = 17
WP_CLOSEBUTTON = 18
WP_SMALLCLOSEBUTTON = 19
WP_MDICLOSEBUTTON = 20
WP_RESTOREBUTTON = 21
WP_MDIRESTOREBUTTON = 22
WP_HELPBUTTON = 23
WP_MDIHELPBUTTON = 24
WP_HORZSCROLL = 25
WP_HORZTHUMB = 26
WP_VERTSCROLL = 27
WP_VERTTHUMB = 28
WP_DIALOG = 29
WP_CAPTIONSIZINGTEMPLATE = 30
WP_SMALLCAPTIONSIZINGTEMPLATE = 31
WP_FRAMELEFTSIZINGTEMPLATE = 32
WP_SMALLFRAMELEFTSIZINGTEMPLATE = 33
WP_FRAMERIGHTSIZINGTEMPLATE = 34
WP_SMALLFRAMERIGHTSIZINGTEMPLATE = 35
WP_FRAMEBOTTOMSIZINGTEMPLATE = 36
WP_SMALLFRAMEBOTTOMSIZINGTEMPLATE = 37
WP_FRAME = 38
WP_BORDER = 39
WINDOWTHEMEATTRIBUTETYPE = Int32
WTA_NONCLIENT = 1
WORD_BREAK_ACTION = UInt32
WB_CLASSIFY = 3
WB_ISDELIMITER = 2
WB_LEFT = 0
WB_LEFTBREAK = 6
WB_MOVEWORDLEFT = 4
WB_MOVEWORDRIGHT = 5
WB_RIGHT = 1
WB_RIGHTBREAK = 7
WRENCHSTATES = Int32
TTWS_NORMAL = 1
TTWS_HOT = 2
TTWS_PRESSED = 3
WSB_PROP = Int32
WSB_PROP_CXHSCROLL = 2
WSB_PROP_CXHTHUMB = 16
WSB_PROP_CXVSCROLL = 8
WSB_PROP_CYHSCROLL = 4
WSB_PROP_CYVSCROLL = 1
WSB_PROP_CYVTHUMB = 32
WSB_PROP_HBKGCOLOR = 128
WSB_PROP_HSTYLE = 512
WSB_PROP_PALETTE = 2048
WSB_PROP_VBKGCOLOR = 64
WSB_PROP_VSTYLE = 256
WSB_PROP_WINSTYLE = 1024
def _define_WTA_OPTIONS_head():
    class WTA_OPTIONS(Structure):
        pass
    return WTA_OPTIONS
def _define_WTA_OPTIONS():
    WTA_OPTIONS = win32more.UI.Controls.WTA_OPTIONS_head
    WTA_OPTIONS._fields_ = [
        ('dwFlags', UInt32),
        ('dwMask', UInt32),
    ]
    return WTA_OPTIONS
__all__ = [
    "ABS_DOWNDISABLED",
    "ABS_DOWNHOT",
    "ABS_DOWNHOVER",
    "ABS_DOWNNORMAL",
    "ABS_DOWNPRESSED",
    "ABS_LEFTDISABLED",
    "ABS_LEFTHOT",
    "ABS_LEFTHOVER",
    "ABS_LEFTNORMAL",
    "ABS_LEFTPRESSED",
    "ABS_RIGHTDISABLED",
    "ABS_RIGHTHOT",
    "ABS_RIGHTHOVER",
    "ABS_RIGHTNORMAL",
    "ABS_RIGHTPRESSED",
    "ABS_UPDISABLED",
    "ABS_UPHOT",
    "ABS_UPHOVER",
    "ABS_UPNORMAL",
    "ABS_UPPRESSED",
    "ACM_ISPLAYING",
    "ACM_OPEN",
    "ACM_OPENA",
    "ACM_OPENW",
    "ACM_PLAY",
    "ACM_STOP",
    "ACN_START",
    "ACN_STOP",
    "ACS_AUTOPLAY",
    "ACS_CENTER",
    "ACS_TIMER",
    "ACS_TRANSPARENT",
    "AEROWIZARDPARTS",
    "ALLOW_CONTROLS",
    "ALLOW_NONCLIENT",
    "ALLOW_WEBCONTENT",
    "ANIMATE_CLASS",
    "ANIMATE_CLASSA",
    "ANIMATE_CLASSW",
    "ARROWBTNSTATES",
    "AW_BUTTON",
    "AW_COMMANDAREA",
    "AW_CONTENTAREA",
    "AW_HEADERAREA",
    "AW_S_CONTENTAREA_NOMARGIN",
    "AW_S_HEADERAREA_NOMARGIN",
    "AW_S_TITLEBAR_ACTIVE",
    "AW_S_TITLEBAR_INACTIVE",
    "AW_TITLEBAR",
    "BACKGROUNDSTATES",
    "BACKGROUNDWITHBORDERSTATES",
    "BALLOONSTATES",
    "BALLOONSTEMSTATES",
    "BARBACKGROUNDSTATES",
    "BARITEMSTATES",
    "BCM_FIRST",
    "BCM_GETIDEALSIZE",
    "BCM_GETIMAGELIST",
    "BCM_GETNOTE",
    "BCM_GETNOTELENGTH",
    "BCM_GETSPLITINFO",
    "BCM_GETTEXTMARGIN",
    "BCM_SETDROPDOWNSTATE",
    "BCM_SETIMAGELIST",
    "BCM_SETNOTE",
    "BCM_SETSHIELD",
    "BCM_SETSPLITINFO",
    "BCM_SETTEXTMARGIN",
    "BCN_DROPDOWN",
    "BCN_FIRST",
    "BCN_HOTITEMCHANGE",
    "BCSIF_GLYPH",
    "BCSIF_IMAGE",
    "BCSIF_SIZE",
    "BCSIF_STYLE",
    "BCSS_ALIGNLEFT",
    "BCSS_IMAGE",
    "BCSS_NOSPLIT",
    "BCSS_STRETCH",
    "BGTYPE",
    "BODYSTATES",
    "BORDERSTATES",
    "BORDERTYPE",
    "BORDER_HSCROLLSTATES",
    "BORDER_HVSCROLLSTATES",
    "BORDER_NOSCROLLSTATES",
    "BORDER_VSCROLLSTATES",
    "BPAS_CUBIC",
    "BPAS_LINEAR",
    "BPAS_NONE",
    "BPAS_SINE",
    "BPBF_COMPATIBLEBITMAP",
    "BPBF_DIB",
    "BPBF_TOPDOWNDIB",
    "BPBF_TOPDOWNMONODIB",
    "BPPF_ERASE",
    "BPPF_NOCLIP",
    "BPPF_NONCLIENT",
    "BP_ANIMATIONPARAMS",
    "BP_ANIMATIONSTYLE",
    "BP_BUFFERFORMAT",
    "BP_CHECKBOX",
    "BP_CHECKBOX_HCDISABLED",
    "BP_COMMANDLINK",
    "BP_COMMANDLINKGLYPH",
    "BP_GROUPBOX",
    "BP_GROUPBOX_HCDISABLED",
    "BP_PAINTPARAMS",
    "BP_PAINTPARAMS_FLAGS",
    "BP_PUSHBUTTON",
    "BP_PUSHBUTTONDROPDOWN",
    "BP_RADIOBUTTON",
    "BP_RADIOBUTTON_HCDISABLED",
    "BP_USERBUTTON",
    "BST_CHECKED",
    "BST_DROPDOWNPUSHED",
    "BST_HOT",
    "BST_INDETERMINATE",
    "BST_UNCHECKED",
    "BS_COMMANDLINK",
    "BS_DEFCOMMANDLINK",
    "BS_DEFSPLITBUTTON",
    "BS_SPLITBUTTON",
    "BTNS_AUTOSIZE",
    "BTNS_BUTTON",
    "BTNS_CHECK",
    "BTNS_DROPDOWN",
    "BTNS_GROUP",
    "BTNS_NOPREFIX",
    "BTNS_SEP",
    "BTNS_SHOWTEXT",
    "BTNS_WHOLEDROPDOWN",
    "BT_BORDERFILL",
    "BT_ELLIPSE",
    "BT_IMAGEFILE",
    "BT_NONE",
    "BT_RECT",
    "BT_ROUNDRECT",
    "BUTTONPARTS",
    "BUTTON_IMAGELIST",
    "BUTTON_IMAGELIST_ALIGN",
    "BUTTON_IMAGELIST_ALIGN_BOTTOM",
    "BUTTON_IMAGELIST_ALIGN_CENTER",
    "BUTTON_IMAGELIST_ALIGN_LEFT",
    "BUTTON_IMAGELIST_ALIGN_RIGHT",
    "BUTTON_IMAGELIST_ALIGN_TOP",
    "BUTTON_SPLITINFO",
    "BeginBufferedAnimation",
    "BeginBufferedPaint",
    "BeginPanningFeedback",
    "BufferedPaintClear",
    "BufferedPaintInit",
    "BufferedPaintRenderAnimation",
    "BufferedPaintSetAlpha",
    "BufferedPaintStopAllAnimations",
    "BufferedPaintUnInit",
    "CAPTIONSTATES",
    "CA_CENTER",
    "CA_LEFT",
    "CA_RIGHT",
    "CBB_DISABLED",
    "CBB_FOCUSED",
    "CBB_HOT",
    "CBB_NORMAL",
    "CBCB_DISABLED",
    "CBCB_HOT",
    "CBCB_NORMAL",
    "CBCB_PRESSED",
    "CBDI_HIGHLIGHTED",
    "CBDI_NORMAL",
    "CBEIF_DI_SETITEM",
    "CBEIF_IMAGE",
    "CBEIF_INDENT",
    "CBEIF_LPARAM",
    "CBEIF_OVERLAY",
    "CBEIF_SELECTEDIMAGE",
    "CBEIF_TEXT",
    "CBEMAXSTRLEN",
    "CBEM_GETCOMBOCONTROL",
    "CBEM_GETEDITCONTROL",
    "CBEM_GETEXSTYLE",
    "CBEM_GETEXTENDEDSTYLE",
    "CBEM_GETIMAGELIST",
    "CBEM_GETITEM",
    "CBEM_GETITEMA",
    "CBEM_GETITEMW",
    "CBEM_GETUNICODEFORMAT",
    "CBEM_HASEDITCHANGED",
    "CBEM_INSERTITEM",
    "CBEM_INSERTITEMA",
    "CBEM_INSERTITEMW",
    "CBEM_SETEXSTYLE",
    "CBEM_SETEXTENDEDSTYLE",
    "CBEM_SETIMAGELIST",
    "CBEM_SETITEM",
    "CBEM_SETITEMA",
    "CBEM_SETITEMW",
    "CBEM_SETUNICODEFORMAT",
    "CBEM_SETWINDOWTHEME",
    "CBENF_DROPDOWN",
    "CBENF_ESCAPE",
    "CBENF_KILLFOCUS",
    "CBENF_RETURN",
    "CBES_EX_CASESENSITIVE",
    "CBES_EX_NOEDITIMAGE",
    "CBES_EX_NOEDITIMAGEINDENT",
    "CBES_EX_NOSIZELIMIT",
    "CBES_EX_PATHWORDBREAKPROC",
    "CBES_EX_TEXTENDELLIPSIS",
    "CBM_FIRST",
    "CBRO_DISABLED",
    "CBRO_HOT",
    "CBRO_NORMAL",
    "CBRO_PRESSED",
    "CBS_CHECKEDDISABLED",
    "CBS_CHECKEDHOT",
    "CBS_CHECKEDNORMAL",
    "CBS_CHECKEDPRESSED",
    "CBS_DISABLED",
    "CBS_EXCLUDEDDISABLED",
    "CBS_EXCLUDEDHOT",
    "CBS_EXCLUDEDNORMAL",
    "CBS_EXCLUDEDPRESSED",
    "CBS_HOT",
    "CBS_IMPLICITDISABLED",
    "CBS_IMPLICITHOT",
    "CBS_IMPLICITNORMAL",
    "CBS_IMPLICITPRESSED",
    "CBS_MIXEDDISABLED",
    "CBS_MIXEDHOT",
    "CBS_MIXEDNORMAL",
    "CBS_MIXEDPRESSED",
    "CBS_NORMAL",
    "CBS_PUSHED",
    "CBS_UNCHECKEDDISABLED",
    "CBS_UNCHECKEDHOT",
    "CBS_UNCHECKEDNORMAL",
    "CBS_UNCHECKEDPRESSED",
    "CBTBS_DISABLED",
    "CBTBS_FOCUSED",
    "CBTBS_HOT",
    "CBTBS_NORMAL",
    "CBXSL_DISABLED",
    "CBXSL_HOT",
    "CBXSL_NORMAL",
    "CBXSL_PRESSED",
    "CBXSR_DISABLED",
    "CBXSR_HOT",
    "CBXSR_NORMAL",
    "CBXSR_PRESSED",
    "CBXS_DISABLED",
    "CBXS_HOT",
    "CBXS_NORMAL",
    "CBXS_PRESSED",
    "CB_GETCUEBANNER",
    "CB_GETMINVISIBLE",
    "CB_SETCUEBANNER",
    "CB_SETMINVISIBLE",
    "CCF_NOTEXT",
    "CCHCCCLASS",
    "CCHCCDESC",
    "CCHCCTEXT",
    "CCINFOA",
    "CCINFOW",
    "CCM_DPISCALE",
    "CCM_FIRST",
    "CCM_GETCOLORSCHEME",
    "CCM_GETDROPTARGET",
    "CCM_GETUNICODEFORMAT",
    "CCM_GETVERSION",
    "CCM_LAST",
    "CCM_SETBKCOLOR",
    "CCM_SETCOLORSCHEME",
    "CCM_SETNOTIFYWINDOW",
    "CCM_SETUNICODEFORMAT",
    "CCM_SETVERSION",
    "CCM_SETWINDOWTHEME",
    "CCSTYLEA",
    "CCSTYLEFLAGA",
    "CCSTYLEFLAGW",
    "CCSTYLEW",
    "CCS_ADJUSTABLE",
    "CCS_BOTTOM",
    "CCS_NODIVIDER",
    "CCS_NOMOVEY",
    "CCS_NOPARENTALIGN",
    "CCS_NORESIZE",
    "CCS_TOP",
    "CCS_VERT",
    "CDDS_ITEM",
    "CDDS_ITEMPOSTERASE",
    "CDDS_ITEMPOSTPAINT",
    "CDDS_ITEMPREERASE",
    "CDDS_ITEMPREPAINT",
    "CDDS_POSTERASE",
    "CDDS_POSTPAINT",
    "CDDS_PREERASE",
    "CDDS_PREPAINT",
    "CDDS_SUBITEM",
    "CDIS_CHECKED",
    "CDIS_DEFAULT",
    "CDIS_DISABLED",
    "CDIS_DROPHILITED",
    "CDIS_FOCUS",
    "CDIS_GRAYED",
    "CDIS_HOT",
    "CDIS_INDETERMINATE",
    "CDIS_MARKED",
    "CDIS_NEARHOT",
    "CDIS_OTHERSIDEHOT",
    "CDIS_SELECTED",
    "CDIS_SHOWKEYBOARDCUES",
    "CDRF_DODEFAULT",
    "CDRF_DOERASE",
    "CDRF_NEWFONT",
    "CDRF_NOTIFYITEMDRAW",
    "CDRF_NOTIFYPOSTERASE",
    "CDRF_NOTIFYPOSTPAINT",
    "CDRF_NOTIFYSUBITEMDRAW",
    "CDRF_SKIPDEFAULT",
    "CDRF_SKIPPOSTPAINT",
    "CHECKBOXSTATES",
    "CHEVRONSTATES",
    "CHEVRONVERTSTATES",
    "CHEVSV_HOT",
    "CHEVSV_NORMAL",
    "CHEVSV_PRESSED",
    "CHEVS_HOT",
    "CHEVS_NORMAL",
    "CHEVS_PRESSED",
    "CLOCKPARTS",
    "CLOCKSTATES",
    "CLOSEBUTTONSTATES",
    "CLOSESTATES",
    "CLP_TIME",
    "CLR_DEFAULT",
    "CLR_HILIGHT",
    "CLR_NONE",
    "CLS_HOT",
    "CLS_NORMAL",
    "CLS_PRESSED",
    "CMB_MASKED",
    "CMDLGS_DEFAULTED",
    "CMDLGS_DISABLED",
    "CMDLGS_HOT",
    "CMDLGS_NORMAL",
    "CMDLGS_PRESSED",
    "CMDLS_DEFAULTED",
    "CMDLS_DEFAULTED_ANIMATING",
    "CMDLS_DISABLED",
    "CMDLS_HOT",
    "CMDLS_NORMAL",
    "CMDLS_PRESSED",
    "COLLAPSEBUTTONSTATES",
    "COLORMAP",
    "COLORMGMTDLGORD",
    "COLORSCHEME",
    "COMBOBOXEXITEMA",
    "COMBOBOXEXITEMW",
    "COMBOBOXINFO",
    "COMBOBOXINFO_BUTTON_STATE",
    "COMBOBOXPARTS",
    "COMBOBOXSTYLESTATES",
    "COMBOBOX_EX_ITEM_FLAGS",
    "COMCTL32_VERSION",
    "COMMANDLINKGLYPHSTATES",
    "COMMANDLINKSTATES",
    "COMMUNICATIONSPARTS",
    "COMPAREITEMSTRUCT",
    "CONTENTALIGNMENT",
    "CONTENTAREASTATES",
    "CONTENTLINKSTATES",
    "CONTENTPANESTATES",
    "CONTROLLABELSTATES",
    "CONTROLPANELPARTS",
    "COPYSTATES",
    "CPANEL_BANNERAREA",
    "CPANEL_BODYTEXT",
    "CPANEL_BODYTITLE",
    "CPANEL_BUTTON",
    "CPANEL_CONTENTLINK",
    "CPANEL_CONTENTPANE",
    "CPANEL_CONTENTPANELABEL",
    "CPANEL_CONTENTPANELINE",
    "CPANEL_GROUPTEXT",
    "CPANEL_HELPLINK",
    "CPANEL_LARGECOMMANDAREA",
    "CPANEL_MESSAGETEXT",
    "CPANEL_NAVIGATIONPANE",
    "CPANEL_NAVIGATIONPANELABEL",
    "CPANEL_NAVIGATIONPANELINE",
    "CPANEL_SECTIONTITLELINK",
    "CPANEL_SMALLCOMMANDAREA",
    "CPANEL_TASKLINK",
    "CPANEL_TITLE",
    "CPCL_DISABLED",
    "CPCL_HOT",
    "CPCL_NORMAL",
    "CPCL_PRESSED",
    "CPHL_DISABLED",
    "CPHL_HOT",
    "CPHL_NORMAL",
    "CPHL_PRESSED",
    "CPSTL_HOT",
    "CPSTL_NORMAL",
    "CPTL_DISABLED",
    "CPTL_HOT",
    "CPTL_NORMAL",
    "CPTL_PAGE",
    "CPTL_PRESSED",
    "CP_BACKGROUND",
    "CP_BORDER",
    "CP_CUEBANNER",
    "CP_DROPDOWNBUTTON",
    "CP_DROPDOWNBUTTONLEFT",
    "CP_DROPDOWNBUTTONRIGHT",
    "CP_DROPDOWNITEM",
    "CP_READONLY",
    "CP_TRANSPARENTBACKGROUND",
    "CREATELINKSTATES",
    "CSST_TAB",
    "CSTB_HOT",
    "CSTB_NORMAL",
    "CSTB_SELECTED",
    "CS_ACTIVE",
    "CS_DISABLED",
    "CS_INACTIVE",
    "CUEBANNERSTATES",
    "CheckDlgButton",
    "CheckRadioButton",
    "CloseThemeData",
    "CreateMappedBitmap",
    "CreatePropertySheetPageA",
    "CreatePropertySheetPageW",
    "CreateStatusWindowA",
    "CreateStatusWindowW",
    "CreateSyntheticPointerDevice",
    "CreateToolbarEx",
    "CreateUpDownControl",
    "DATEBORDERSTATES",
    "DATEPICKERPARTS",
    "DATETEXTSTATES",
    "DATETIMEPICKERINFO",
    "DATETIMEPICK_CLASS",
    "DATETIMEPICK_CLASSA",
    "DATETIMEPICK_CLASSW",
    "DA_ERR",
    "DA_LAST",
    "DDCOPY_HIGHLIGHT",
    "DDCOPY_NOHIGHLIGHT",
    "DDCREATELINK_HIGHLIGHT",
    "DDCREATELINK_NOHIGHLIGHT",
    "DDL_ARCHIVE",
    "DDL_DIRECTORY",
    "DDL_DRIVES",
    "DDL_EXCLUSIVE",
    "DDL_HIDDEN",
    "DDL_POSTMSGS",
    "DDL_READONLY",
    "DDL_READWRITE",
    "DDL_SYSTEM",
    "DDMOVE_HIGHLIGHT",
    "DDMOVE_NOHIGHLIGHT",
    "DDNONE_HIGHLIGHT",
    "DDNONE_NOHIGHLIGHT",
    "DDUPDATEMETADATA_HIGHLIGHT",
    "DDUPDATEMETADATA_NOHIGHLIGHT",
    "DDWARNING_HIGHLIGHT",
    "DDWARNING_NOHIGHLIGHT",
    "DD_COPY",
    "DD_CREATELINK",
    "DD_IMAGEBG",
    "DD_MOVE",
    "DD_NONE",
    "DD_TEXTBG",
    "DD_UPDATEMETADATA",
    "DD_WARNING",
    "DELETEITEMSTRUCT",
    "DLG_BUTTON_CHECK_STATE",
    "DLG_DIR_LIST_FILE_TYPE",
    "DL_BEGINDRAG",
    "DL_CANCELDRAG",
    "DL_COPYCURSOR",
    "DL_CURSORSET",
    "DL_DRAGGING",
    "DL_DROPPED",
    "DL_MOVECURSOR",
    "DL_STOPCURSOR",
    "DNHZS_DISABLED",
    "DNHZS_HOT",
    "DNHZS_NORMAL",
    "DNHZS_PRESSED",
    "DNS_DISABLED",
    "DNS_HOT",
    "DNS_NORMAL",
    "DNS_PRESSED",
    "DOWNHORZSTATES",
    "DOWNSTATES",
    "DPAMM_DELETE",
    "DPAMM_INSERT",
    "DPAMM_MERGE",
    "DPAMM_MESSAGE",
    "DPAM_INTERSECT",
    "DPAM_NORMAL",
    "DPAM_SORTED",
    "DPAM_UNION",
    "DPASTREAMINFO",
    "DPAS_INSERTAFTER",
    "DPAS_INSERTBEFORE",
    "DPAS_SORTED",
    "DPA_APPEND",
    "DPA_Clone",
    "DPA_Create",
    "DPA_CreateEx",
    "DPA_DeleteAllPtrs",
    "DPA_DeletePtr",
    "DPA_Destroy",
    "DPA_DestroyCallback",
    "DPA_ERR",
    "DPA_EnumCallback",
    "DPA_GetPtr",
    "DPA_GetPtrIndex",
    "DPA_GetSize",
    "DPA_Grow",
    "DPA_InsertPtr",
    "DPA_LoadStream",
    "DPA_Merge",
    "DPA_SaveStream",
    "DPA_Search",
    "DPA_SetPtr",
    "DPA_Sort",
    "DPDB_DISABLED",
    "DPDB_FOCUSED",
    "DPDB_HOT",
    "DPDB_NORMAL",
    "DPDT_DISABLED",
    "DPDT_NORMAL",
    "DPDT_SELECTED",
    "DPSCBR_DISABLED",
    "DPSCBR_HOT",
    "DPSCBR_NORMAL",
    "DPSCBR_PRESSED",
    "DP_DATEBORDER",
    "DP_DATETEXT",
    "DP_SHOWCALENDARBUTTONRIGHT",
    "DRAGDROPPARTS",
    "DRAGLISTINFO",
    "DRAGLISTINFO_NOTIFICATION_FLAGS",
    "DRAGLISTMSGSTRING",
    "DRAWITEMSTRUCT",
    "DRAWITEMSTRUCT_CTL_TYPE",
    "DRAW_THEME_PARENT_BACKGROUND_FLAGS",
    "DROPDOWNBUTTONLEFTSTATES",
    "DROPDOWNBUTTONRIGHTSTATES",
    "DROPDOWNITEMSTATES",
    "DSA_APPEND",
    "DSA_Clone",
    "DSA_Create",
    "DSA_DeleteAllItems",
    "DSA_DeleteItem",
    "DSA_Destroy",
    "DSA_DestroyCallback",
    "DSA_ERR",
    "DSA_EnumCallback",
    "DSA_GetItem",
    "DSA_GetItemPtr",
    "DSA_GetSize",
    "DSA_InsertItem",
    "DSA_SetItem",
    "DSA_Sort",
    "DTBGOPTS",
    "DTBG_CLIPRECT",
    "DTBG_COMPUTINGREGION",
    "DTBG_DRAWSOLID",
    "DTBG_MIRRORDC",
    "DTBG_NOMIRROR",
    "DTBG_OMITBORDER",
    "DTBG_OMITCONTENT",
    "DTM_CLOSEMONTHCAL",
    "DTM_FIRST",
    "DTM_GETDATETIMEPICKERINFO",
    "DTM_GETIDEALSIZE",
    "DTM_GETMCCOLOR",
    "DTM_GETMCFONT",
    "DTM_GETMCSTYLE",
    "DTM_GETMONTHCAL",
    "DTM_GETRANGE",
    "DTM_GETSYSTEMTIME",
    "DTM_SETFORMAT",
    "DTM_SETFORMATA",
    "DTM_SETFORMATW",
    "DTM_SETMCCOLOR",
    "DTM_SETMCFONT",
    "DTM_SETMCSTYLE",
    "DTM_SETRANGE",
    "DTM_SETSYSTEMTIME",
    "DTPB_USECTLCOLORSTATIC",
    "DTPB_USEERASEBKGND",
    "DTPB_WINDOWDC",
    "DTS_APPCANPARSE",
    "DTS_LONGDATEFORMAT",
    "DTS_RIGHTALIGN",
    "DTS_SHORTDATECENTURYFORMAT",
    "DTS_SHORTDATEFORMAT",
    "DTS_SHOWNONE",
    "DTS_TIMEFORMAT",
    "DTS_UPDOWN",
    "DTTOPTS",
    "DTTOPTS_FLAGS",
    "DTT_APPLYOVERLAY",
    "DTT_BORDERCOLOR",
    "DTT_BORDERSIZE",
    "DTT_CALCRECT",
    "DTT_CALLBACK",
    "DTT_CALLBACK_PROC",
    "DTT_COLORPROP",
    "DTT_COMPOSITED",
    "DTT_FLAGS2VALIDBITS",
    "DTT_FONTPROP",
    "DTT_GLOWSIZE",
    "DTT_GRAYED",
    "DTT_SHADOWCOLOR",
    "DTT_SHADOWOFFSET",
    "DTT_SHADOWTYPE",
    "DTT_STATEID",
    "DTT_TEXTCOLOR",
    "DTT_VALIDBITS",
    "DestroyPropertySheetPage",
    "DestroySyntheticPointerDevice",
    "DlgDirListA",
    "DlgDirListComboBoxA",
    "DlgDirListComboBoxW",
    "DlgDirListW",
    "DlgDirSelectComboBoxExA",
    "DlgDirSelectComboBoxExW",
    "DlgDirSelectExA",
    "DlgDirSelectExW",
    "DrawInsert",
    "DrawShadowText",
    "DrawStatusTextA",
    "DrawStatusTextW",
    "DrawThemeBackground",
    "DrawThemeBackgroundEx",
    "DrawThemeEdge",
    "DrawThemeIcon",
    "DrawThemeParentBackground",
    "DrawThemeParentBackgroundEx",
    "DrawThemeText",
    "DrawThemeTextEx",
    "EBHC_HOT",
    "EBHC_NORMAL",
    "EBHC_PRESSED",
    "EBHP_HOT",
    "EBHP_NORMAL",
    "EBHP_PRESSED",
    "EBHP_SELECTEDHOT",
    "EBHP_SELECTEDNORMAL",
    "EBHP_SELECTEDPRESSED",
    "EBM_HOT",
    "EBM_NORMAL",
    "EBM_PRESSED",
    "EBNGC_HOT",
    "EBNGC_NORMAL",
    "EBNGC_PRESSED",
    "EBNGE_HOT",
    "EBNGE_NORMAL",
    "EBNGE_PRESSED",
    "EBP_HEADERBACKGROUND",
    "EBP_HEADERCLOSE",
    "EBP_HEADERPIN",
    "EBP_IEBARMENU",
    "EBP_NORMALGROUPBACKGROUND",
    "EBP_NORMALGROUPCOLLAPSE",
    "EBP_NORMALGROUPEXPAND",
    "EBP_NORMALGROUPHEAD",
    "EBP_SPECIALGROUPBACKGROUND",
    "EBP_SPECIALGROUPCOLLAPSE",
    "EBP_SPECIALGROUPEXPAND",
    "EBP_SPECIALGROUPHEAD",
    "EBSGC_HOT",
    "EBSGC_NORMAL",
    "EBSGC_PRESSED",
    "EBSGE_HOT",
    "EBSGE_NORMAL",
    "EBSGE_PRESSED",
    "EBS_ASSIST",
    "EBS_DISABLED",
    "EBS_FOCUSED",
    "EBS_HOT",
    "EBS_NORMAL",
    "EBS_READONLY",
    "EBWBS_DISABLED",
    "EBWBS_FOCUSED",
    "EBWBS_HOT",
    "EBWBS_NORMAL",
    "ECM_FIRST",
    "EC_ENDOFLINE",
    "EC_ENDOFLINE_CR",
    "EC_ENDOFLINE_CRLF",
    "EC_ENDOFLINE_DETECTFROMCONTENT",
    "EC_ENDOFLINE_LF",
    "EC_SEARCHWEB_ENTRYPOINT",
    "EC_SEARCHWEB_ENTRYPOINT_CONTEXTMENU",
    "EC_SEARCHWEB_ENTRYPOINT_EXTERNAL",
    "EDITBALLOONTIP",
    "EDITBALLOONTIP_ICON",
    "EDITBORDER_HSCROLLSTATES",
    "EDITBORDER_HVSCROLLSTATES",
    "EDITBORDER_NOSCROLLSTATES",
    "EDITBORDER_VSCROLLSTATES",
    "EDITPARTS",
    "EDITTEXTSTATES",
    "EDITWORDBREAKPROCA",
    "EDITWORDBREAKPROCW",
    "EMF_CENTERED",
    "EMPTYMARKUPPARTS",
    "EMP_MARKUPTEXT",
    "EMT_LINKTEXT",
    "EMT_NORMALTEXT",
    "EM_CANUNDO",
    "EM_CHARFROMPOS",
    "EM_EMPTYUNDOBUFFER",
    "EM_ENABLEFEATURE",
    "EM_ENABLESEARCHWEB",
    "EM_FILELINEFROMCHAR",
    "EM_FILELINEINDEX",
    "EM_FILELINELENGTH",
    "EM_FMTLINES",
    "EM_GETCARETINDEX",
    "EM_GETCUEBANNER",
    "EM_GETENDOFLINE",
    "EM_GETEXTENDEDSTYLE",
    "EM_GETFILELINE",
    "EM_GETFILELINECOUNT",
    "EM_GETFIRSTVISIBLELINE",
    "EM_GETHANDLE",
    "EM_GETHILITE",
    "EM_GETIMESTATUS",
    "EM_GETLIMITTEXT",
    "EM_GETLINE",
    "EM_GETLINECOUNT",
    "EM_GETMARGINS",
    "EM_GETMODIFY",
    "EM_GETPASSWORDCHAR",
    "EM_GETRECT",
    "EM_GETSEL",
    "EM_GETTHUMB",
    "EM_GETWORDBREAKPROC",
    "EM_HIDEBALLOONTIP",
    "EM_LIMITTEXT",
    "EM_LINEFROMCHAR",
    "EM_LINEINDEX",
    "EM_LINELENGTH",
    "EM_LINESCROLL",
    "EM_NOSETFOCUS",
    "EM_POSFROMCHAR",
    "EM_REPLACESEL",
    "EM_SCROLL",
    "EM_SCROLLCARET",
    "EM_SEARCHWEB",
    "EM_SETCARETINDEX",
    "EM_SETCUEBANNER",
    "EM_SETENDOFLINE",
    "EM_SETEXTENDEDSTYLE",
    "EM_SETHANDLE",
    "EM_SETHILITE",
    "EM_SETIMESTATUS",
    "EM_SETLIMITTEXT",
    "EM_SETMARGINS",
    "EM_SETMODIFY",
    "EM_SETPASSWORDCHAR",
    "EM_SETREADONLY",
    "EM_SETRECT",
    "EM_SETRECTNP",
    "EM_SETSEL",
    "EM_SETTABSTOPS",
    "EM_SETWORDBREAKPROC",
    "EM_SHOWBALLOONTIP",
    "EM_TAKEFOCUS",
    "EM_UNDO",
    "ENABLE_SCROLL_BAR_ARROWS",
    "EPSHV_DISABLED",
    "EPSHV_FOCUSED",
    "EPSHV_HOT",
    "EPSHV_NORMAL",
    "EPSH_DISABLED",
    "EPSH_FOCUSED",
    "EPSH_HOT",
    "EPSH_NORMAL",
    "EPSN_DISABLED",
    "EPSN_FOCUSED",
    "EPSN_HOT",
    "EPSN_NORMAL",
    "EPSV_DISABLED",
    "EPSV_FOCUSED",
    "EPSV_HOT",
    "EPSV_NORMAL",
    "EP_BACKGROUND",
    "EP_BACKGROUNDWITHBORDER",
    "EP_CARET",
    "EP_EDITBORDER_HSCROLL",
    "EP_EDITBORDER_HVSCROLL",
    "EP_EDITBORDER_NOSCROLL",
    "EP_EDITBORDER_VSCROLL",
    "EP_EDITTEXT",
    "EP_PASSWORD",
    "ESB_DISABLE_BOTH",
    "ESB_DISABLE_DOWN",
    "ESB_DISABLE_LEFT",
    "ESB_DISABLE_LTUP",
    "ESB_DISABLE_RIGHT",
    "ESB_DISABLE_RTDN",
    "ESB_DISABLE_UP",
    "ESB_ENABLE_BOTH",
    "ES_EX_ALLOWEOL_CR",
    "ES_EX_ALLOWEOL_LF",
    "ES_EX_CONVERT_EOL_ON_PASTE",
    "ES_EX_ZOOMABLE",
    "ETDT_DISABLE",
    "ETDT_ENABLE",
    "ETDT_USEAEROWIZARDTABTEXTURE",
    "ETDT_USETABTEXTURE",
    "ETS_ASSIST",
    "ETS_CUEBANNER",
    "ETS_DISABLED",
    "ETS_FOCUSED",
    "ETS_HOT",
    "ETS_NORMAL",
    "ETS_READONLY",
    "ETS_SELECTED",
    "EXPANDBUTTONSTATES",
    "EXPANDOBUTTONSTATES",
    "EXPLORERBARPARTS",
    "EnableScrollBar",
    "EnableThemeDialogTexture",
    "EnableTheming",
    "EndBufferedAnimation",
    "EndBufferedPaint",
    "EndPanningFeedback",
    "EvaluateProximityToPolygon",
    "EvaluateProximityToRect",
    "FBS_EMPHASIZED",
    "FBS_NORMAL",
    "FEEDBACK_GESTURE_PRESSANDTAP",
    "FEEDBACK_MAX",
    "FEEDBACK_PEN_BARRELVISUALIZATION",
    "FEEDBACK_PEN_DOUBLETAP",
    "FEEDBACK_PEN_PRESSANDHOLD",
    "FEEDBACK_PEN_RIGHTTAP",
    "FEEDBACK_PEN_TAP",
    "FEEDBACK_TOUCH_CONTACTVISUALIZATION",
    "FEEDBACK_TOUCH_DOUBLETAP",
    "FEEDBACK_TOUCH_PRESSANDHOLD",
    "FEEDBACK_TOUCH_RIGHTTAP",
    "FEEDBACK_TOUCH_TAP",
    "FEEDBACK_TYPE",
    "FILEOPENORD",
    "FILLSTATES",
    "FILLTYPE",
    "FILLVERTSTATES",
    "FINDDLGORD",
    "FLH_HOVER",
    "FLH_NORMAL",
    "FLS_DISABLED",
    "FLS_EMPHASIZED",
    "FLS_NORMAL",
    "FLS_SELECTED",
    "FLYOUTLINK_HOVER",
    "FLYOUTLINK_NORMAL",
    "FLYOUTPARTS",
    "FLYOUT_BODY",
    "FLYOUT_DIVIDER",
    "FLYOUT_HEADER",
    "FLYOUT_LABEL",
    "FLYOUT_LINK",
    "FLYOUT_LINKAREA",
    "FLYOUT_LINKHEADER",
    "FLYOUT_WINDOW",
    "FONTDLGORD",
    "FORMATDLGORD30",
    "FORMATDLGORD31",
    "FRAMEBOTTOMSTATES",
    "FRAMELEFTSTATES",
    "FRAMERIGHTSTATES",
    "FRAMESTATES",
    "FRB_ACTIVE",
    "FRB_INACTIVE",
    "FRL_ACTIVE",
    "FRL_INACTIVE",
    "FRR_ACTIVE",
    "FRR_INACTIVE",
    "FSB_ENCARTA_MODE",
    "FSB_FLAT_MODE",
    "FSB_REGULAR_MODE",
    "FS_ACTIVE",
    "FS_INACTIVE",
    "FT_HORZGRADIENT",
    "FT_RADIALGRADIENT",
    "FT_SOLID",
    "FT_TILEIMAGE",
    "FT_VERTGRADIENT",
    "FlatSB_EnableScrollBar",
    "FlatSB_GetScrollInfo",
    "FlatSB_GetScrollPos",
    "FlatSB_GetScrollProp",
    "FlatSB_GetScrollRange",
    "FlatSB_SetScrollInfo",
    "FlatSB_SetScrollPos",
    "FlatSB_SetScrollProp",
    "FlatSB_SetScrollRange",
    "FlatSB_ShowScrollBar",
    "GBF_COPY",
    "GBF_DIRECT",
    "GBF_VALIDBITS",
    "GBS_DISABLED",
    "GBS_NORMAL",
    "GDTR_MAX",
    "GDTR_MIN",
    "GDT_ERROR",
    "GDT_NONE",
    "GDT_VALID",
    "GET_THEME_BITMAP_FLAGS",
    "GFST_DPI",
    "GFST_NONE",
    "GFST_SIZE",
    "GLPS_CLOSED",
    "GLPS_OPENED",
    "GLYPHFONTSIZINGTYPE",
    "GLYPHSTATES",
    "GLYPHTYPE",
    "GMR_DAYSTATE",
    "GMR_VISIBLE",
    "GRIDCELLBACKGROUNDSTATES",
    "GRIDCELLSTATES",
    "GRIDCELLUPPERSTATES",
    "GRIPPERSTATES",
    "GROUPBOXSTATES",
    "GROUPHEADERLINESTATES",
    "GROUPHEADERSTATES",
    "GT_FONTGLYPH",
    "GT_IMAGEGLYPH",
    "GT_NONE",
    "GetBufferedPaintBits",
    "GetBufferedPaintDC",
    "GetBufferedPaintTargetDC",
    "GetBufferedPaintTargetRect",
    "GetComboBoxInfo",
    "GetCurrentThemeName",
    "GetEffectiveClientRect",
    "GetListBoxInfo",
    "GetMUILanguage",
    "GetThemeAnimationProperty",
    "GetThemeAnimationTransform",
    "GetThemeAppProperties",
    "GetThemeBackgroundContentRect",
    "GetThemeBackgroundExtent",
    "GetThemeBackgroundRegion",
    "GetThemeBitmap",
    "GetThemeBool",
    "GetThemeColor",
    "GetThemeDocumentationProperty",
    "GetThemeEnumValue",
    "GetThemeFilename",
    "GetThemeFont",
    "GetThemeInt",
    "GetThemeIntList",
    "GetThemeMargins",
    "GetThemeMetric",
    "GetThemePartSize",
    "GetThemePosition",
    "GetThemePropertyOrigin",
    "GetThemeRect",
    "GetThemeStream",
    "GetThemeString",
    "GetThemeSysBool",
    "GetThemeSysColor",
    "GetThemeSysColorBrush",
    "GetThemeSysFont",
    "GetThemeSysInt",
    "GetThemeSysSize",
    "GetThemeSysString",
    "GetThemeTextExtent",
    "GetThemeTextMetrics",
    "GetThemeTimingFunction",
    "GetThemeTransitionDuration",
    "GetWindowFeedbackSetting",
    "GetWindowTheme",
    "HALIGN",
    "HA_CENTER",
    "HA_LEFT",
    "HA_RIGHT",
    "HBG_DETAILS",
    "HBG_ICON",
    "HBS_DISABLED",
    "HBS_HOT",
    "HBS_NORMAL",
    "HBS_PUSHED",
    "HDDFS_HOT",
    "HDDFS_NORMAL",
    "HDDFS_SOFTHOT",
    "HDDS_HOT",
    "HDDS_NORMAL",
    "HDDS_SOFTHOT",
    "HDFT_HASNOVALUE",
    "HDFT_ISDATE",
    "HDFT_ISNUMBER",
    "HDFT_ISSTRING",
    "HDF_BITMAP",
    "HDF_BITMAP_ON_RIGHT",
    "HDF_CENTER",
    "HDF_CHECKBOX",
    "HDF_CHECKED",
    "HDF_FIXEDWIDTH",
    "HDF_IMAGE",
    "HDF_JUSTIFYMASK",
    "HDF_LEFT",
    "HDF_OWNERDRAW",
    "HDF_RIGHT",
    "HDF_RTLREADING",
    "HDF_SORTDOWN",
    "HDF_SORTUP",
    "HDF_SPLITBUTTON",
    "HDF_STRING",
    "HDHITTESTINFO",
    "HDIS_FOCUSED",
    "HDITEMA",
    "HDITEMW",
    "HDI_BITMAP",
    "HDI_DI_SETITEM",
    "HDI_FILTER",
    "HDI_FORMAT",
    "HDI_HEIGHT",
    "HDI_IMAGE",
    "HDI_LPARAM",
    "HDI_MASK",
    "HDI_ORDER",
    "HDI_STATE",
    "HDI_TEXT",
    "HDI_WIDTH",
    "HDLAYOUT",
    "HDM_CLEARFILTER",
    "HDM_CREATEDRAGIMAGE",
    "HDM_DELETEITEM",
    "HDM_EDITFILTER",
    "HDM_FIRST",
    "HDM_GETBITMAPMARGIN",
    "HDM_GETFOCUSEDITEM",
    "HDM_GETIMAGELIST",
    "HDM_GETITEM",
    "HDM_GETITEMA",
    "HDM_GETITEMCOUNT",
    "HDM_GETITEMDROPDOWNRECT",
    "HDM_GETITEMRECT",
    "HDM_GETITEMW",
    "HDM_GETORDERARRAY",
    "HDM_GETOVERFLOWRECT",
    "HDM_GETUNICODEFORMAT",
    "HDM_HITTEST",
    "HDM_INSERTITEM",
    "HDM_INSERTITEMA",
    "HDM_INSERTITEMW",
    "HDM_LAYOUT",
    "HDM_ORDERTOINDEX",
    "HDM_SETBITMAPMARGIN",
    "HDM_SETFILTERCHANGETIMEOUT",
    "HDM_SETFOCUSEDITEM",
    "HDM_SETHOTDIVIDER",
    "HDM_SETIMAGELIST",
    "HDM_SETITEM",
    "HDM_SETITEMA",
    "HDM_SETITEMW",
    "HDM_SETORDERARRAY",
    "HDM_SETUNICODEFORMAT",
    "HDPA",
    "HDSA",
    "HDSIL_NORMAL",
    "HDSIL_STATE",
    "HDS_BUTTONS",
    "HDS_CHECKBOXES",
    "HDS_DRAGDROP",
    "HDS_FILTERBAR",
    "HDS_FLAT",
    "HDS_FULLDRAG",
    "HDS_HIDDEN",
    "HDS_HORZ",
    "HDS_HOTTRACK",
    "HDS_NOSIZING",
    "HDS_OVERFLOW",
    "HD_TEXTFILTERA",
    "HD_TEXTFILTERW",
    "HEADERAREASTATES",
    "HEADERCLOSESTATES",
    "HEADERDROPDOWNFILTERSTATES",
    "HEADERDROPDOWNSTATES",
    "HEADERITEMLEFTSTATES",
    "HEADERITEMRIGHTSTATES",
    "HEADERITEMSTATES",
    "HEADEROVERFLOWSTATES",
    "HEADERPARTS",
    "HEADERPINSTATES",
    "HEADERSORTARROWSTATES",
    "HEADERSTYLESTATES",
    "HEADER_CONTROL_FORMAT_FLAGS",
    "HEADER_CONTROL_FORMAT_STATE",
    "HEADER_CONTROL_FORMAT_TYPE",
    "HEADER_CONTROL_NOTIFICATION_BUTTON",
    "HEADER_CONTROL_NOTIFICATION_BUTTON_LEFT",
    "HEADER_CONTROL_NOTIFICATION_BUTTON_MIDDLE",
    "HEADER_CONTROL_NOTIFICATION_BUTTON_RIGHT",
    "HEADER_HITTEST_INFO_FLAGS",
    "HELPBUTTONSTATES",
    "HELPLINKSTATES",
    "HGLPS_CLOSED",
    "HGLPS_OPENED",
    "HHT_ABOVE",
    "HHT_BELOW",
    "HHT_NOWHERE",
    "HHT_ONDIVIDER",
    "HHT_ONDIVOPEN",
    "HHT_ONDROPDOWN",
    "HHT_ONFILTER",
    "HHT_ONFILTERBUTTON",
    "HHT_ONHEADER",
    "HHT_ONITEMSTATEICON",
    "HHT_ONOVERFLOW",
    "HHT_TOLEFT",
    "HHT_TORIGHT",
    "HICF_ACCELERATOR",
    "HICF_ARROWKEYS",
    "HICF_DUPACCEL",
    "HICF_ENTERING",
    "HICF_LEAVING",
    "HICF_LMOUSE",
    "HICF_MOUSE",
    "HICF_OTHER",
    "HICF_RESELECT",
    "HICF_TOGGLEDROPDOWN",
    "HILS_HOT",
    "HILS_NORMAL",
    "HILS_PRESSED",
    "HIMAGELIST",
    "HIMAGELIST_QueryInterface",
    "HIRS_HOT",
    "HIRS_NORMAL",
    "HIRS_PRESSED",
    "HIST_ADDTOFAVORITES",
    "HIST_BACK",
    "HIST_FAVORITES",
    "HIST_FORWARD",
    "HIST_VIEWTREE",
    "HIS_HOT",
    "HIS_ICONHOT",
    "HIS_ICONNORMAL",
    "HIS_ICONPRESSED",
    "HIS_ICONSORTEDHOT",
    "HIS_ICONSORTEDNORMAL",
    "HIS_ICONSORTEDPRESSED",
    "HIS_NORMAL",
    "HIS_PRESSED",
    "HIS_SORTEDHOT",
    "HIS_SORTEDNORMAL",
    "HIS_SORTEDPRESSED",
    "HIT_TEST_BACKGROUND_OPTIONS",
    "HKCOMB_A",
    "HKCOMB_C",
    "HKCOMB_CA",
    "HKCOMB_NONE",
    "HKCOMB_S",
    "HKCOMB_SA",
    "HKCOMB_SC",
    "HKCOMB_SCA",
    "HKM_GETHOTKEY",
    "HKM_SETHOTKEY",
    "HKM_SETRULES",
    "HLS_LINKTEXT",
    "HLS_NORMALTEXT",
    "HOFS_HOT",
    "HOFS_NORMAL",
    "HORZSCROLLSTATES",
    "HORZTHUMBSTATES",
    "HOTGLYPHSTATES",
    "HOTKEYF_ALT",
    "HOTKEYF_CONTROL",
    "HOTKEYF_EXT",
    "HOTKEYF_SHIFT",
    "HOTKEY_CLASS",
    "HOTKEY_CLASSA",
    "HOTKEY_CLASSW",
    "HOVERBACKGROUNDSTATES",
    "HOVER_DEFAULT",
    "HPROPSHEETPAGE",
    "HP_HEADERDROPDOWN",
    "HP_HEADERDROPDOWNFILTER",
    "HP_HEADERITEM",
    "HP_HEADERITEMLEFT",
    "HP_HEADERITEMRIGHT",
    "HP_HEADEROVERFLOW",
    "HP_HEADERSORTARROW",
    "HSAS_SORTEDDOWN",
    "HSAS_SORTEDUP",
    "HSS_DISABLED",
    "HSS_HOT",
    "HSS_NORMAL",
    "HSS_PUSHED",
    "HSYNTHETICPOINTERDEVICE",
    "HTHEME",
    "HTREEITEM",
    "HTS_DISABLED",
    "HTS_HOT",
    "HTS_NORMAL",
    "HTS_PUSHED",
    "HTTB_BACKGROUNDSEG",
    "HTTB_CAPTION",
    "HTTB_FIXEDBORDER",
    "HTTB_RESIZINGBORDER",
    "HTTB_RESIZINGBORDER_BOTTOM",
    "HTTB_RESIZINGBORDER_LEFT",
    "HTTB_RESIZINGBORDER_RIGHT",
    "HTTB_RESIZINGBORDER_TOP",
    "HTTB_SIZINGTEMPLATE",
    "HTTB_SYSTEMSIZINGMARGINS",
    "HYPERLINKSTATES",
    "HYPERLINKTEXTSTATES",
    "HitTestThemeBackground",
    "ICC_ANIMATE_CLASS",
    "ICC_BAR_CLASSES",
    "ICC_COOL_CLASSES",
    "ICC_DATE_CLASSES",
    "ICC_HOTKEY_CLASS",
    "ICC_INTERNET_CLASSES",
    "ICC_LINK_CLASS",
    "ICC_LISTVIEW_CLASSES",
    "ICC_NATIVEFNTCTL_CLASS",
    "ICC_PAGESCROLLER_CLASS",
    "ICC_PROGRESS_CLASS",
    "ICC_STANDARD_CLASSES",
    "ICC_TAB_CLASSES",
    "ICC_TREEVIEW_CLASSES",
    "ICC_UPDOWN_CLASS",
    "ICC_USEREX_CLASSES",
    "ICC_WIN95_CLASSES",
    "ICE_ALPHA",
    "ICE_GLOW",
    "ICE_NONE",
    "ICE_PULSE",
    "ICE_SHADOW",
    "ICONEFFECT",
    "IDB_HIST_DISABLED",
    "IDB_HIST_HOT",
    "IDB_HIST_LARGE_COLOR",
    "IDB_HIST_NORMAL",
    "IDB_HIST_PRESSED",
    "IDB_HIST_SMALL_COLOR",
    "IDB_STD_LARGE_COLOR",
    "IDB_STD_SMALL_COLOR",
    "IDB_VIEW_LARGE_COLOR",
    "IDB_VIEW_SMALL_COLOR",
    "IDC_MANAGE_LINK",
    "ID_PSRESTARTWINDOWS",
    "IEBARMENUSTATES",
    "IImageList",
    "IImageList2",
    "ILCF_MOVE",
    "ILCF_SWAP",
    "ILC_COLOR",
    "ILC_COLOR16",
    "ILC_COLOR24",
    "ILC_COLOR32",
    "ILC_COLOR4",
    "ILC_COLOR8",
    "ILC_COLORDDB",
    "ILC_HIGHQUALITYSCALE",
    "ILC_MASK",
    "ILC_MIRROR",
    "ILC_ORIGINALSIZE",
    "ILC_PALETTE",
    "ILC_PERITEMMIRROR",
    "ILDI_PURGE",
    "ILDI_QUERYACCESS",
    "ILDI_RESETACCESS",
    "ILDI_STANDBY",
    "ILDRF_IMAGELOWQUALITY",
    "ILDRF_OVERLAYLOWQUALITY",
    "ILD_ASYNC",
    "ILD_BLEND",
    "ILD_BLEND25",
    "ILD_BLEND50",
    "ILD_DPISCALE",
    "ILD_FOCUS",
    "ILD_IMAGE",
    "ILD_MASK",
    "ILD_NORMAL",
    "ILD_OVERLAYMASK",
    "ILD_PRESERVEALPHA",
    "ILD_ROP",
    "ILD_SCALE",
    "ILD_SELECTED",
    "ILD_TRANSPARENT",
    "ILFIP_ALWAYS",
    "ILFIP_FROMSTANDBY",
    "ILGOS_ALWAYS",
    "ILGOS_FROMSTANDBY",
    "ILGT_ASYNC",
    "ILGT_NORMAL",
    "ILIF_ALPHA",
    "ILIF_LOWQUALITY",
    "ILP_DOWNLEVEL",
    "ILP_NORMAL",
    "ILR_DEFAULT",
    "ILR_HORIZONTAL_CENTER",
    "ILR_HORIZONTAL_LEFT",
    "ILR_HORIZONTAL_RIGHT",
    "ILR_SCALE_ASPECTRATIO",
    "ILR_SCALE_CLIP",
    "ILR_VERTICAL_BOTTOM",
    "ILR_VERTICAL_CENTER",
    "ILR_VERTICAL_TOP",
    "ILS_ALPHA",
    "ILS_GLOW",
    "ILS_NORMAL",
    "ILS_SATURATE",
    "ILS_SHADOW",
    "IL_HORIZONTAL",
    "IL_VERTICAL",
    "IMAGEINFO",
    "IMAGELAYOUT",
    "IMAGELISTDRAWPARAMS",
    "IMAGELISTSTATS",
    "IMAGELIST_CREATION_FLAGS",
    "IMAGESELECTTYPE",
    "IMAGE_LIST_COPY_FLAGS",
    "IMAGE_LIST_DRAW_STYLE",
    "IMAGE_LIST_ITEM_FLAGS",
    "IMAGE_LIST_WRITE_STREAM_FLAGS",
    "INFOTIPSIZE",
    "INITCOMMONCONTROLSEX",
    "INITCOMMONCONTROLSEX_ICC",
    "INTLIST",
    "INVALID_LINK_INDEX",
    "IPM_CLEARADDRESS",
    "IPM_GETADDRESS",
    "IPM_ISBLANK",
    "IPM_SETADDRESS",
    "IPM_SETFOCUS",
    "IPM_SETRANGE",
    "IST_DPI",
    "IST_NONE",
    "IST_SIZE",
    "ITEMSTATES",
    "I_CHILDRENAUTO",
    "I_CHILDRENCALLBACK",
    "I_GROUPIDCALLBACK",
    "I_GROUPIDNONE",
    "I_IMAGECALLBACK",
    "I_IMAGENONE",
    "I_INDENTCALLBACK",
    "I_ONE_OR_MORE",
    "I_ZERO",
    "ImageList",
    "ImageList_Add",
    "ImageList_AddMasked",
    "ImageList_BeginDrag",
    "ImageList_CoCreateInstance",
    "ImageList_Copy",
    "ImageList_Create",
    "ImageList_Destroy",
    "ImageList_DragEnter",
    "ImageList_DragLeave",
    "ImageList_DragMove",
    "ImageList_DragShowNolock",
    "ImageList_Draw",
    "ImageList_DrawEx",
    "ImageList_DrawIndirect",
    "ImageList_Duplicate",
    "ImageList_EndDrag",
    "ImageList_GetBkColor",
    "ImageList_GetDragImage",
    "ImageList_GetIcon",
    "ImageList_GetIconSize",
    "ImageList_GetImageCount",
    "ImageList_GetImageInfo",
    "ImageList_LoadImageA",
    "ImageList_LoadImageW",
    "ImageList_Merge",
    "ImageList_Read",
    "ImageList_ReadEx",
    "ImageList_Remove",
    "ImageList_Replace",
    "ImageList_ReplaceIcon",
    "ImageList_SetBkColor",
    "ImageList_SetDragCursorImage",
    "ImageList_SetIconSize",
    "ImageList_SetImageCount",
    "ImageList_SetOverlayImage",
    "ImageList_Write",
    "ImageList_WriteEx",
    "InitCommonControls",
    "InitCommonControlsEx",
    "InitMUILanguage",
    "InitializeFlatSB",
    "IsAppThemed",
    "IsCharLowerW",
    "IsCompositionActive",
    "IsDlgButtonChecked",
    "IsThemeActive",
    "IsThemeBackgroundPartiallyTransparent",
    "IsThemeDialogTextureEnabled",
    "IsThemePartDefined",
    "LABELSTATES",
    "LBCP_BORDER_HSCROLL",
    "LBCP_BORDER_HVSCROLL",
    "LBCP_BORDER_NOSCROLL",
    "LBCP_BORDER_VSCROLL",
    "LBCP_ITEM",
    "LBItemFromPt",
    "LBPSHV_DISABLED",
    "LBPSHV_FOCUSED",
    "LBPSHV_HOT",
    "LBPSHV_NORMAL",
    "LBPSH_DISABLED",
    "LBPSH_FOCUSED",
    "LBPSH_HOT",
    "LBPSH_NORMAL",
    "LBPSI_HOT",
    "LBPSI_HOTSELECTED",
    "LBPSI_SELECTED",
    "LBPSI_SELECTEDNOTFOCUS",
    "LBPSN_DISABLED",
    "LBPSN_FOCUSED",
    "LBPSN_HOT",
    "LBPSN_NORMAL",
    "LBPSV_DISABLED",
    "LBPSV_FOCUSED",
    "LBPSV_HOT",
    "LBPSV_NORMAL",
    "LHITTESTINFO",
    "LIF_ITEMID",
    "LIF_ITEMINDEX",
    "LIF_STATE",
    "LIF_URL",
    "LIM_LARGE",
    "LIM_SMALL",
    "LINKHEADERSTATES",
    "LINKPARTS",
    "LINKSTATES",
    "LISS_DISABLED",
    "LISS_HOT",
    "LISS_HOTSELECTED",
    "LISS_NORMAL",
    "LISS_SELECTED",
    "LISS_SELECTEDNOTFOCUS",
    "LISTBOXPARTS",
    "LISTITEMSTATES",
    "LISTVIEWPARTS",
    "LIST_ITEM_FLAGS",
    "LIST_ITEM_STATE_FLAGS",
    "LIST_VIEW_BACKGROUND_IMAGE_FLAGS",
    "LIST_VIEW_GROUP_ALIGN_FLAGS",
    "LIST_VIEW_GROUP_STATE_FLAGS",
    "LIST_VIEW_INSERT_MARK_FLAGS",
    "LIST_VIEW_ITEM_COLUMN_FORMAT_FLAGS",
    "LIST_VIEW_ITEM_FLAGS",
    "LIST_VIEW_ITEM_STATE_FLAGS",
    "LIS_DEFAULTCOLORS",
    "LIS_ENABLED",
    "LIS_FOCUSED",
    "LIS_HOTTRACK",
    "LIS_VISITED",
    "LITEM",
    "LM_GETIDEALHEIGHT",
    "LM_GETIDEALSIZE",
    "LM_GETITEM",
    "LM_HITTEST",
    "LM_SETITEM",
    "LOGOFFBUTTONSSTATES",
    "LPFNADDPROPSHEETPAGES",
    "LPFNCCINFOA",
    "LPFNCCINFOW",
    "LPFNCCSIZETOTEXTA",
    "LPFNCCSIZETOTEXTW",
    "LPFNCCSTYLEA",
    "LPFNCCSTYLEW",
    "LPFNPSPCALLBACKA",
    "LPFNPSPCALLBACKW",
    "LPFNSVADDPROPSHEETPAGE",
    "LP_HYPERLINK",
    "LVA_ALIGNLEFT",
    "LVA_ALIGNTOP",
    "LVA_DEFAULT",
    "LVA_SNAPTOGRID",
    "LVBKIF_FLAG_ALPHABLEND",
    "LVBKIF_FLAG_TILEOFFSET",
    "LVBKIF_SOURCE_HBITMAP",
    "LVBKIF_SOURCE_MASK",
    "LVBKIF_SOURCE_NONE",
    "LVBKIF_SOURCE_URL",
    "LVBKIF_STYLE_MASK",
    "LVBKIF_STYLE_NORMAL",
    "LVBKIF_STYLE_TILE",
    "LVBKIF_TYPE_WATERMARK",
    "LVBKIMAGEA",
    "LVBKIMAGEW",
    "LVCB_HOVER",
    "LVCB_NORMAL",
    "LVCB_PUSHED",
    "LVCDI_GROUP",
    "LVCDI_ITEM",
    "LVCDI_ITEMSLIST",
    "LVCDRF_NOGROUPFRAME",
    "LVCDRF_NOSELECT",
    "LVCFMT_BITMAP_ON_RIGHT",
    "LVCFMT_CENTER",
    "LVCFMT_COL_HAS_IMAGES",
    "LVCFMT_FILL",
    "LVCFMT_FIXED_RATIO",
    "LVCFMT_FIXED_WIDTH",
    "LVCFMT_IMAGE",
    "LVCFMT_JUSTIFYMASK",
    "LVCFMT_LEFT",
    "LVCFMT_LINE_BREAK",
    "LVCFMT_NO_DPI_SCALE",
    "LVCFMT_NO_TITLE",
    "LVCFMT_RIGHT",
    "LVCFMT_SPLITBUTTON",
    "LVCFMT_TILE_PLACEMENTMASK",
    "LVCFMT_WRAP",
    "LVCF_DEFAULTWIDTH",
    "LVCF_FMT",
    "LVCF_IDEALWIDTH",
    "LVCF_IMAGE",
    "LVCF_MINWIDTH",
    "LVCF_ORDER",
    "LVCF_SUBITEM",
    "LVCF_TEXT",
    "LVCF_WIDTH",
    "LVCOLUMNA",
    "LVCOLUMNW",
    "LVCOLUMNW_FORMAT",
    "LVCOLUMNW_MASK",
    "LVEB_HOVER",
    "LVEB_NORMAL",
    "LVEB_PUSHED",
    "LVFF_ITEMCOUNT",
    "LVFIF_STATE",
    "LVFIF_TEXT",
    "LVFINDINFOA",
    "LVFINDINFOW",
    "LVFINDINFOW_FLAGS",
    "LVFIS_FOCUSED",
    "LVFI_NEARESTXY",
    "LVFI_PARAM",
    "LVFI_PARTIAL",
    "LVFI_STRING",
    "LVFI_SUBSTRING",
    "LVFI_WRAP",
    "LVFOOTERINFO",
    "LVFOOTERITEM",
    "LVFOOTERITEM_MASK",
    "LVGA_FOOTER_CENTER",
    "LVGA_FOOTER_LEFT",
    "LVGA_FOOTER_RIGHT",
    "LVGA_HEADER_CENTER",
    "LVGA_HEADER_LEFT",
    "LVGA_HEADER_RIGHT",
    "LVGF_ALIGN",
    "LVGF_DESCRIPTIONBOTTOM",
    "LVGF_DESCRIPTIONTOP",
    "LVGF_EXTENDEDIMAGE",
    "LVGF_FOOTER",
    "LVGF_GROUPID",
    "LVGF_HEADER",
    "LVGF_ITEMS",
    "LVGF_NONE",
    "LVGF_STATE",
    "LVGF_SUBSET",
    "LVGF_SUBSETITEMS",
    "LVGF_SUBTITLE",
    "LVGF_TASK",
    "LVGF_TITLEIMAGE",
    "LVGGR_GROUP",
    "LVGGR_HEADER",
    "LVGGR_LABEL",
    "LVGGR_SUBSETLINK",
    "LVGHL_CLOSE",
    "LVGHL_CLOSEHOT",
    "LVGHL_CLOSEMIXEDSELECTION",
    "LVGHL_CLOSEMIXEDSELECTIONHOT",
    "LVGHL_CLOSESELECTED",
    "LVGHL_CLOSESELECTEDHOT",
    "LVGHL_CLOSESELECTEDNOTFOCUSED",
    "LVGHL_CLOSESELECTEDNOTFOCUSEDHOT",
    "LVGHL_OPEN",
    "LVGHL_OPENHOT",
    "LVGHL_OPENMIXEDSELECTION",
    "LVGHL_OPENMIXEDSELECTIONHOT",
    "LVGHL_OPENSELECTED",
    "LVGHL_OPENSELECTEDHOT",
    "LVGHL_OPENSELECTEDNOTFOCUSED",
    "LVGHL_OPENSELECTEDNOTFOCUSEDHOT",
    "LVGH_CLOSE",
    "LVGH_CLOSEHOT",
    "LVGH_CLOSEMIXEDSELECTION",
    "LVGH_CLOSEMIXEDSELECTIONHOT",
    "LVGH_CLOSESELECTED",
    "LVGH_CLOSESELECTEDHOT",
    "LVGH_CLOSESELECTEDNOTFOCUSED",
    "LVGH_CLOSESELECTEDNOTFOCUSEDHOT",
    "LVGH_OPEN",
    "LVGH_OPENHOT",
    "LVGH_OPENMIXEDSELECTION",
    "LVGH_OPENMIXEDSELECTIONHOT",
    "LVGH_OPENSELECTED",
    "LVGH_OPENSELECTEDHOT",
    "LVGH_OPENSELECTEDNOTFOCUSED",
    "LVGH_OPENSELECTEDNOTFOCUSEDHOT",
    "LVGIT_UNFOLDED",
    "LVGIT_ZERO",
    "LVGMF_BORDERCOLOR",
    "LVGMF_BORDERSIZE",
    "LVGMF_NONE",
    "LVGMF_TEXTCOLOR",
    "LVGROUP",
    "LVGROUPMETRICS",
    "LVGROUP_MASK",
    "LVGS_COLLAPSED",
    "LVGS_COLLAPSIBLE",
    "LVGS_FOCUSED",
    "LVGS_HIDDEN",
    "LVGS_NOHEADER",
    "LVGS_NORMAL",
    "LVGS_SELECTED",
    "LVGS_SUBSETED",
    "LVGS_SUBSETLINKFOCUSED",
    "LVHITTESTINFO",
    "LVHITTESTINFO_FLAGS",
    "LVHT_ABOVE",
    "LVHT_BELOW",
    "LVHT_EX_FOOTER",
    "LVHT_EX_GROUP",
    "LVHT_EX_GROUP_BACKGROUND",
    "LVHT_EX_GROUP_COLLAPSE",
    "LVHT_EX_GROUP_FOOTER",
    "LVHT_EX_GROUP_HEADER",
    "LVHT_EX_GROUP_STATEICON",
    "LVHT_EX_GROUP_SUBSETLINK",
    "LVHT_EX_ONCONTENTS",
    "LVHT_NOWHERE",
    "LVHT_ONITEMICON",
    "LVHT_ONITEMLABEL",
    "LVHT_ONITEMSTATEICON",
    "LVHT_TOLEFT",
    "LVHT_TORIGHT",
    "LVIF_COLFMT",
    "LVIF_COLUMNS",
    "LVIF_DI_SETITEM",
    "LVIF_GROUPID",
    "LVIF_IMAGE",
    "LVIF_INDENT",
    "LVIF_NORECOMPUTE",
    "LVIF_PARAM",
    "LVIF_STATE",
    "LVIF_TEXT",
    "LVIM_AFTER",
    "LVINSERTGROUPSORTED",
    "LVINSERTMARK",
    "LVIR_BOUNDS",
    "LVIR_ICON",
    "LVIR_LABEL",
    "LVIR_SELECTBOUNDS",
    "LVIS_ACTIVATING",
    "LVIS_CUT",
    "LVIS_DROPHILITED",
    "LVIS_FOCUSED",
    "LVIS_GLOW",
    "LVIS_OVERLAYMASK",
    "LVIS_SELECTED",
    "LVIS_STATEIMAGEMASK",
    "LVITEMA",
    "LVITEMA_GROUP_ID",
    "LVITEMINDEX",
    "LVITEMW",
    "LVKF_ALT",
    "LVKF_CONTROL",
    "LVKF_SHIFT",
    "LVM_APPROXIMATEVIEWRECT",
    "LVM_ARRANGE",
    "LVM_CANCELEDITLABEL",
    "LVM_CREATEDRAGIMAGE",
    "LVM_DELETEALLITEMS",
    "LVM_DELETECOLUMN",
    "LVM_DELETEITEM",
    "LVM_EDITLABEL",
    "LVM_EDITLABELA",
    "LVM_EDITLABELW",
    "LVM_ENABLEGROUPVIEW",
    "LVM_ENSUREVISIBLE",
    "LVM_FINDITEM",
    "LVM_FINDITEMA",
    "LVM_FINDITEMW",
    "LVM_FIRST",
    "LVM_GETBKCOLOR",
    "LVM_GETBKIMAGE",
    "LVM_GETBKIMAGEA",
    "LVM_GETBKIMAGEW",
    "LVM_GETCALLBACKMASK",
    "LVM_GETCOLUMN",
    "LVM_GETCOLUMNA",
    "LVM_GETCOLUMNORDERARRAY",
    "LVM_GETCOLUMNW",
    "LVM_GETCOLUMNWIDTH",
    "LVM_GETCOUNTPERPAGE",
    "LVM_GETEDITCONTROL",
    "LVM_GETEMPTYTEXT",
    "LVM_GETEXTENDEDLISTVIEWSTYLE",
    "LVM_GETFOCUSEDGROUP",
    "LVM_GETFOOTERINFO",
    "LVM_GETFOOTERITEM",
    "LVM_GETFOOTERITEMRECT",
    "LVM_GETFOOTERRECT",
    "LVM_GETGROUPCOUNT",
    "LVM_GETGROUPINFO",
    "LVM_GETGROUPINFOBYINDEX",
    "LVM_GETGROUPMETRICS",
    "LVM_GETGROUPRECT",
    "LVM_GETGROUPSTATE",
    "LVM_GETHEADER",
    "LVM_GETHOTCURSOR",
    "LVM_GETHOTITEM",
    "LVM_GETHOVERTIME",
    "LVM_GETIMAGELIST",
    "LVM_GETINSERTMARK",
    "LVM_GETINSERTMARKCOLOR",
    "LVM_GETINSERTMARKRECT",
    "LVM_GETISEARCHSTRING",
    "LVM_GETISEARCHSTRINGA",
    "LVM_GETISEARCHSTRINGW",
    "LVM_GETITEM",
    "LVM_GETITEMA",
    "LVM_GETITEMCOUNT",
    "LVM_GETITEMINDEXRECT",
    "LVM_GETITEMPOSITION",
    "LVM_GETITEMRECT",
    "LVM_GETITEMSPACING",
    "LVM_GETITEMSTATE",
    "LVM_GETITEMTEXT",
    "LVM_GETITEMTEXTA",
    "LVM_GETITEMTEXTW",
    "LVM_GETITEMW",
    "LVM_GETNEXTITEM",
    "LVM_GETNEXTITEMINDEX",
    "LVM_GETNUMBEROFWORKAREAS",
    "LVM_GETORIGIN",
    "LVM_GETOUTLINECOLOR",
    "LVM_GETSELECTEDCOLUMN",
    "LVM_GETSELECTEDCOUNT",
    "LVM_GETSELECTIONMARK",
    "LVM_GETSTRINGWIDTH",
    "LVM_GETSTRINGWIDTHA",
    "LVM_GETSTRINGWIDTHW",
    "LVM_GETSUBITEMRECT",
    "LVM_GETTEXTBKCOLOR",
    "LVM_GETTEXTCOLOR",
    "LVM_GETTILEINFO",
    "LVM_GETTILEVIEWINFO",
    "LVM_GETTOOLTIPS",
    "LVM_GETTOPINDEX",
    "LVM_GETUNICODEFORMAT",
    "LVM_GETVIEW",
    "LVM_GETVIEWRECT",
    "LVM_GETWORKAREAS",
    "LVM_HASGROUP",
    "LVM_HITTEST",
    "LVM_INSERTCOLUMN",
    "LVM_INSERTCOLUMNA",
    "LVM_INSERTCOLUMNW",
    "LVM_INSERTGROUP",
    "LVM_INSERTGROUPSORTED",
    "LVM_INSERTITEM",
    "LVM_INSERTITEMA",
    "LVM_INSERTITEMW",
    "LVM_INSERTMARKHITTEST",
    "LVM_ISGROUPVIEWENABLED",
    "LVM_ISITEMVISIBLE",
    "LVM_MAPIDTOINDEX",
    "LVM_MAPINDEXTOID",
    "LVM_MOVEGROUP",
    "LVM_MOVEITEMTOGROUP",
    "LVM_REDRAWITEMS",
    "LVM_REMOVEALLGROUPS",
    "LVM_REMOVEGROUP",
    "LVM_SCROLL",
    "LVM_SETBKCOLOR",
    "LVM_SETBKIMAGE",
    "LVM_SETBKIMAGEA",
    "LVM_SETBKIMAGEW",
    "LVM_SETCALLBACKMASK",
    "LVM_SETCOLUMN",
    "LVM_SETCOLUMNA",
    "LVM_SETCOLUMNORDERARRAY",
    "LVM_SETCOLUMNW",
    "LVM_SETCOLUMNWIDTH",
    "LVM_SETEXTENDEDLISTVIEWSTYLE",
    "LVM_SETGROUPINFO",
    "LVM_SETGROUPMETRICS",
    "LVM_SETHOTCURSOR",
    "LVM_SETHOTITEM",
    "LVM_SETHOVERTIME",
    "LVM_SETICONSPACING",
    "LVM_SETIMAGELIST",
    "LVM_SETINFOTIP",
    "LVM_SETINSERTMARK",
    "LVM_SETINSERTMARKCOLOR",
    "LVM_SETITEM",
    "LVM_SETITEMA",
    "LVM_SETITEMCOUNT",
    "LVM_SETITEMINDEXSTATE",
    "LVM_SETITEMPOSITION",
    "LVM_SETITEMPOSITION32",
    "LVM_SETITEMSTATE",
    "LVM_SETITEMTEXT",
    "LVM_SETITEMTEXTA",
    "LVM_SETITEMTEXTW",
    "LVM_SETITEMW",
    "LVM_SETOUTLINECOLOR",
    "LVM_SETSELECTEDCOLUMN",
    "LVM_SETSELECTIONMARK",
    "LVM_SETTEXTBKCOLOR",
    "LVM_SETTEXTCOLOR",
    "LVM_SETTILEINFO",
    "LVM_SETTILEVIEWINFO",
    "LVM_SETTOOLTIPS",
    "LVM_SETUNICODEFORMAT",
    "LVM_SETVIEW",
    "LVM_SETWORKAREAS",
    "LVM_SORTGROUPS",
    "LVM_SORTITEMS",
    "LVM_SORTITEMSEX",
    "LVM_SUBITEMHITTEST",
    "LVM_UPDATE",
    "LVNI_ABOVE",
    "LVNI_ALL",
    "LVNI_BELOW",
    "LVNI_CUT",
    "LVNI_DROPHILITED",
    "LVNI_FOCUSED",
    "LVNI_PREVIOUS",
    "LVNI_SAMEGROUPONLY",
    "LVNI_SELECTED",
    "LVNI_TOLEFT",
    "LVNI_TORIGHT",
    "LVNI_VISIBLEONLY",
    "LVNI_VISIBLEORDER",
    "LVNSCH_DEFAULT",
    "LVNSCH_ERROR",
    "LVNSCH_IGNORE",
    "LVP_COLLAPSEBUTTON",
    "LVP_COLUMNDETAIL",
    "LVP_EMPTYTEXT",
    "LVP_EXPANDBUTTON",
    "LVP_GROUPHEADER",
    "LVP_GROUPHEADERLINE",
    "LVP_LISTDETAIL",
    "LVP_LISTGROUP",
    "LVP_LISTITEM",
    "LVP_LISTSORTEDDETAIL",
    "LVSCW_AUTOSIZE",
    "LVSCW_AUTOSIZE_USEHEADER",
    "LVSETINFOTIP",
    "LVSICF_NOINVALIDATEALL",
    "LVSICF_NOSCROLL",
    "LVSIL_GROUPHEADER",
    "LVSIL_NORMAL",
    "LVSIL_SMALL",
    "LVSIL_STATE",
    "LVS_ALIGNLEFT",
    "LVS_ALIGNMASK",
    "LVS_ALIGNTOP",
    "LVS_AUTOARRANGE",
    "LVS_EDITLABELS",
    "LVS_EX_AUTOAUTOARRANGE",
    "LVS_EX_AUTOCHECKSELECT",
    "LVS_EX_AUTOSIZECOLUMNS",
    "LVS_EX_BORDERSELECT",
    "LVS_EX_CHECKBOXES",
    "LVS_EX_COLUMNOVERFLOW",
    "LVS_EX_COLUMNSNAPPOINTS",
    "LVS_EX_DOUBLEBUFFER",
    "LVS_EX_FLATSB",
    "LVS_EX_FULLROWSELECT",
    "LVS_EX_GRIDLINES",
    "LVS_EX_HEADERDRAGDROP",
    "LVS_EX_HEADERINALLVIEWS",
    "LVS_EX_HIDELABELS",
    "LVS_EX_INFOTIP",
    "LVS_EX_JUSTIFYCOLUMNS",
    "LVS_EX_LABELTIP",
    "LVS_EX_MULTIWORKAREAS",
    "LVS_EX_ONECLICKACTIVATE",
    "LVS_EX_REGIONAL",
    "LVS_EX_SIMPLESELECT",
    "LVS_EX_SINGLEROW",
    "LVS_EX_SNAPTOGRID",
    "LVS_EX_SUBITEMIMAGES",
    "LVS_EX_TRACKSELECT",
    "LVS_EX_TRANSPARENTBKGND",
    "LVS_EX_TRANSPARENTSHADOWTEXT",
    "LVS_EX_TWOCLICKACTIVATE",
    "LVS_EX_UNDERLINECOLD",
    "LVS_EX_UNDERLINEHOT",
    "LVS_ICON",
    "LVS_LIST",
    "LVS_NOCOLUMNHEADER",
    "LVS_NOLABELWRAP",
    "LVS_NOSCROLL",
    "LVS_NOSORTHEADER",
    "LVS_OWNERDATA",
    "LVS_OWNERDRAWFIXED",
    "LVS_REPORT",
    "LVS_SHAREIMAGELISTS",
    "LVS_SHOWSELALWAYS",
    "LVS_SINGLESEL",
    "LVS_SMALLICON",
    "LVS_SORTASCENDING",
    "LVS_SORTDESCENDING",
    "LVS_TYPEMASK",
    "LVS_TYPESTYLEMASK",
    "LVTILEINFO",
    "LVTILEVIEWINFO",
    "LVTILEVIEWINFO_FLAGS",
    "LVTILEVIEWINFO_MASK",
    "LVTVIF_AUTOSIZE",
    "LVTVIF_EXTENDED",
    "LVTVIF_FIXEDHEIGHT",
    "LVTVIF_FIXEDSIZE",
    "LVTVIF_FIXEDWIDTH",
    "LVTVIM_COLUMNS",
    "LVTVIM_LABELMARGIN",
    "LVTVIM_TILESIZE",
    "LV_MAX_WORKAREAS",
    "LV_VIEW_DETAILS",
    "LV_VIEW_ICON",
    "LV_VIEW_LIST",
    "LV_VIEW_MAX",
    "LV_VIEW_SMALLICON",
    "LV_VIEW_TILE",
    "LWS_IGNORERETURN",
    "LWS_NOPREFIX",
    "LWS_RIGHT",
    "LWS_TRANSPARENT",
    "LWS_USECUSTOMTEXT",
    "LWS_USEVISUALSTYLE",
    "LoadIconMetric",
    "LoadIconWithScaleDown",
    "MARGINS",
    "MARKUPTEXTSTATES",
    "MAXBS_DISABLED",
    "MAXBS_HOT",
    "MAXBS_NORMAL",
    "MAXBS_PUSHED",
    "MAXBUTTONSTATES",
    "MAXCAPTIONSTATES",
    "MAXPROPPAGES",
    "MAX_INTLIST_COUNT",
    "MAX_LINKID_TEXT",
    "MAX_THEMECOLOR",
    "MAX_THEMESIZE",
    "MBI_DISABLED",
    "MBI_DISABLEDHOT",
    "MBI_DISABLEDPUSHED",
    "MBI_HOT",
    "MBI_NORMAL",
    "MBI_PUSHED",
    "MB_ACTIVE",
    "MB_INACTIVE",
    "MCB_BITMAP",
    "MCB_DISABLED",
    "MCB_NORMAL",
    "MCGCB_HOT",
    "MCGCB_SELECTED",
    "MCGCB_SELECTEDHOT",
    "MCGCB_SELECTEDNOTFOCUSED",
    "MCGCB_TODAY",
    "MCGCB_TODAYSELECTED",
    "MCGCU_HASSTATE",
    "MCGCU_HASSTATEHOT",
    "MCGCU_HOT",
    "MCGCU_SELECTED",
    "MCGCU_SELECTEDHOT",
    "MCGC_HASSTATE",
    "MCGC_HASSTATEHOT",
    "MCGC_HOT",
    "MCGC_SELECTED",
    "MCGC_SELECTEDHOT",
    "MCGC_TODAY",
    "MCGC_TODAYSELECTED",
    "MCGIF_DATE",
    "MCGIF_NAME",
    "MCGIF_RECT",
    "MCGIP_CALENDAR",
    "MCGIP_CALENDARBODY",
    "MCGIP_CALENDARCELL",
    "MCGIP_CALENDARCONTROL",
    "MCGIP_CALENDARHEADER",
    "MCGIP_CALENDARROW",
    "MCGIP_FOOTER",
    "MCGIP_NEXT",
    "MCGIP_PREV",
    "MCGRIDINFO",
    "MCGRIDINFO_FLAGS",
    "MCGRIDINFO_PART",
    "MCHITTESTINFO",
    "MCHITTESTINFO_HIT_FLAGS",
    "MCHT_CALENDAR",
    "MCHT_CALENDARBK",
    "MCHT_CALENDARCONTROL",
    "MCHT_CALENDARDATE",
    "MCHT_CALENDARDATEMAX",
    "MCHT_CALENDARDATEMIN",
    "MCHT_CALENDARDATENEXT",
    "MCHT_CALENDARDATEPREV",
    "MCHT_CALENDARDAY",
    "MCHT_CALENDARWEEKNUM",
    "MCHT_NEXT",
    "MCHT_NOWHERE",
    "MCHT_PREV",
    "MCHT_TITLE",
    "MCHT_TITLEBK",
    "MCHT_TITLEBTNNEXT",
    "MCHT_TITLEBTNPREV",
    "MCHT_TITLEMONTH",
    "MCHT_TITLEYEAR",
    "MCHT_TODAYLINK",
    "MCMV_CENTURY",
    "MCMV_DECADE",
    "MCMV_MAX",
    "MCMV_MONTH",
    "MCMV_YEAR",
    "MCM_FIRST",
    "MCM_GETCALENDARBORDER",
    "MCM_GETCALENDARCOUNT",
    "MCM_GETCALENDARGRIDINFO",
    "MCM_GETCALID",
    "MCM_GETCOLOR",
    "MCM_GETCURRENTVIEW",
    "MCM_GETCURSEL",
    "MCM_GETFIRSTDAYOFWEEK",
    "MCM_GETMAXSELCOUNT",
    "MCM_GETMAXTODAYWIDTH",
    "MCM_GETMINREQRECT",
    "MCM_GETMONTHDELTA",
    "MCM_GETMONTHRANGE",
    "MCM_GETRANGE",
    "MCM_GETSELRANGE",
    "MCM_GETTODAY",
    "MCM_GETUNICODEFORMAT",
    "MCM_HITTEST",
    "MCM_SETCALENDARBORDER",
    "MCM_SETCALID",
    "MCM_SETCOLOR",
    "MCM_SETCURRENTVIEW",
    "MCM_SETCURSEL",
    "MCM_SETDAYSTATE",
    "MCM_SETFIRSTDAYOFWEEK",
    "MCM_SETMAXSELCOUNT",
    "MCM_SETMONTHDELTA",
    "MCM_SETRANGE",
    "MCM_SETSELRANGE",
    "MCM_SETTODAY",
    "MCM_SETUNICODEFORMAT",
    "MCM_SIZERECTTOMIN",
    "MCNN_DISABLED",
    "MCNN_HOT",
    "MCNN_NORMAL",
    "MCNN_PRESSED",
    "MCNP_DISABLED",
    "MCNP_HOT",
    "MCNP_NORMAL",
    "MCNP_PRESSED",
    "MCSC_BACKGROUND",
    "MCSC_MONTHBK",
    "MCSC_TEXT",
    "MCSC_TITLEBK",
    "MCSC_TITLETEXT",
    "MCSC_TRAILINGTEXT",
    "MCS_DAYSTATE",
    "MCS_MULTISELECT",
    "MCS_NOSELCHANGEONNAV",
    "MCS_NOTODAY",
    "MCS_NOTODAYCIRCLE",
    "MCS_NOTRAILINGDATES",
    "MCS_SHORTDAYSOFWEEK",
    "MCS_WEEKNUMBERS",
    "MCTGCU_HASSTATE",
    "MCTGCU_HASSTATEHOT",
    "MCTGCU_HOT",
    "MCTGCU_SELECTED",
    "MCTGCU_SELECTEDHOT",
    "MCTGC_HASSTATE",
    "MCTGC_HASSTATEHOT",
    "MCTGC_HOT",
    "MCTGC_SELECTED",
    "MCTGC_SELECTEDHOT",
    "MCTGC_TODAY",
    "MCTGC_TODAYSELECTED",
    "MC_BACKGROUND",
    "MC_BORDERS",
    "MC_BULLETDISABLED",
    "MC_BULLETNORMAL",
    "MC_CHECKMARKDISABLED",
    "MC_CHECKMARKNORMAL",
    "MC_COLHEADERSPLITTER",
    "MC_GRIDBACKGROUND",
    "MC_GRIDCELL",
    "MC_GRIDCELLBACKGROUND",
    "MC_GRIDCELLUPPER",
    "MC_NAVNEXT",
    "MC_NAVPREV",
    "MC_TRAILINGGRIDCELL",
    "MC_TRAILINGGRIDCELLUPPER",
    "MDCL_DISABLED",
    "MDCL_HOT",
    "MDCL_NORMAL",
    "MDCL_PUSHED",
    "MDICLOSEBUTTONSTATES",
    "MDIMINBUTTONSTATES",
    "MDIRESTOREBUTTONSTATES",
    "MDMI_DISABLED",
    "MDMI_HOT",
    "MDMI_NORMAL",
    "MDMI_PUSHED",
    "MDP_NEWAPPBUTTON",
    "MDP_SEPERATOR",
    "MDRE_DISABLED",
    "MDRE_HOT",
    "MDRE_NORMAL",
    "MDRE_PUSHED",
    "MDS_CHECKED",
    "MDS_DISABLED",
    "MDS_HOT",
    "MDS_HOTCHECKED",
    "MDS_NORMAL",
    "MDS_PRESSED",
    "MEASUREITEMSTRUCT",
    "MENUBANDPARTS",
    "MENUBANDSTATES",
    "MENUPARTS",
    "MENU_BARBACKGROUND",
    "MENU_BARITEM",
    "MENU_CHEVRON_TMSCHEMA",
    "MENU_MENUBARDROPDOWN_TMSCHEMA",
    "MENU_MENUBARITEM_TMSCHEMA",
    "MENU_MENUDROPDOWN_TMSCHEMA",
    "MENU_MENUITEM_TMSCHEMA",
    "MENU_POPUPBACKGROUND",
    "MENU_POPUPBORDERS",
    "MENU_POPUPCHECK",
    "MENU_POPUPCHECKBACKGROUND",
    "MENU_POPUPGUTTER",
    "MENU_POPUPITEM",
    "MENU_POPUPSEPARATOR",
    "MENU_POPUPSUBMENU",
    "MENU_SEPARATOR_TMSCHEMA",
    "MENU_SYSTEMCLOSE",
    "MENU_SYSTEMMAXIMIZE",
    "MENU_SYSTEMMINIMIZE",
    "MENU_SYSTEMRESTORE",
    "MINBS_DISABLED",
    "MINBS_HOT",
    "MINBS_NORMAL",
    "MINBS_PUSHED",
    "MINBUTTONSTATES",
    "MINCAPTIONSTATES",
    "MNCS_ACTIVE",
    "MNCS_DISABLED",
    "MNCS_INACTIVE",
    "MONTHCALPARTS",
    "MONTHCAL_CLASS",
    "MONTHCAL_CLASSA",
    "MONTHCAL_CLASSW",
    "MONTH_CALDENDAR_MESSAGES_VIEW",
    "MOREPROGRAMSARROWBACKSTATES",
    "MOREPROGRAMSARROWSTATES",
    "MOREPROGRAMSTABSTATES",
    "MOVESTATES",
    "MPI_DISABLED",
    "MPI_DISABLEDHOT",
    "MPI_HOT",
    "MPI_NORMAL",
    "MSGF_COMMCTRL_BEGINDRAG",
    "MSGF_COMMCTRL_DRAGSELECT",
    "MSGF_COMMCTRL_SIZEHEADER",
    "MSGF_COMMCTRL_TOOLBARCUST",
    "MSM_DISABLED",
    "MSM_NORMAL",
    "MSYSC_DISABLED",
    "MSYSC_NORMAL",
    "MSYSMN_DISABLED",
    "MSYSMN_NORMAL",
    "MSYSMX_DISABLED",
    "MSYSMX_NORMAL",
    "MSYSR_DISABLED",
    "MSYSR_NORMAL",
    "MULTIFILEOPENORD",
    "MXCS_ACTIVE",
    "MXCS_DISABLED",
    "MXCS_INACTIVE",
    "MakeDragList",
    "MenuHelp",
    "NAVIGATIONPARTS",
    "NAVNEXTSTATES",
    "NAVPREVSTATES",
    "NAV_BACKBUTTON",
    "NAV_BACKBUTTONSTATES",
    "NAV_BB_DISABLED",
    "NAV_BB_HOT",
    "NAV_BB_NORMAL",
    "NAV_BB_PRESSED",
    "NAV_FB_DISABLED",
    "NAV_FB_HOT",
    "NAV_FB_NORMAL",
    "NAV_FB_PRESSED",
    "NAV_FORWARDBUTTON",
    "NAV_FORWARDBUTTONSTATES",
    "NAV_MB_DISABLED",
    "NAV_MB_HOT",
    "NAV_MB_NORMAL",
    "NAV_MB_PRESSED",
    "NAV_MENUBUTTON",
    "NAV_MENUBUTTONSTATES",
    "NEWFILEOPENORD",
    "NEWFILEOPENV2ORD",
    "NEWFILEOPENV3ORD",
    "NEWFORMATDLGWITHLINK",
    "NFS_ALL",
    "NFS_BUTTON",
    "NFS_EDIT",
    "NFS_LISTCOMBO",
    "NFS_STATIC",
    "NFS_USEFONTASSOC",
    "NMBCDROPDOWN",
    "NMBCHOTITEM",
    "NMCBEDRAGBEGINA",
    "NMCBEDRAGBEGINW",
    "NMCBEENDEDITA",
    "NMCBEENDEDITW",
    "NMCHAR",
    "NMCOMBOBOXEXA",
    "NMCOMBOBOXEXW",
    "NMCUSTOMDRAW",
    "NMCUSTOMDRAW_DRAW_STAGE",
    "NMCUSTOMDRAW_DRAW_STATE_FLAGS",
    "NMCUSTOMSPLITRECTINFO",
    "NMCUSTOMTEXT",
    "NMDATETIMECHANGE",
    "NMDATETIMECHANGE_FLAGS",
    "NMDATETIMEFORMATA",
    "NMDATETIMEFORMATQUERYA",
    "NMDATETIMEFORMATQUERYW",
    "NMDATETIMEFORMATW",
    "NMDATETIMESTRINGA",
    "NMDATETIMESTRINGW",
    "NMDATETIMEWMKEYDOWNA",
    "NMDATETIMEWMKEYDOWNW",
    "NMDAYSTATE",
    "NMHDDISPINFOA",
    "NMHDDISPINFOW",
    "NMHDFILTERBTNCLICK",
    "NMHDR",
    "NMHEADERA",
    "NMHEADERW",
    "NMIPADDRESS",
    "NMITEMACTIVATE",
    "NMKEY",
    "NMLINK",
    "NMLISTVIEW",
    "NMLVCACHEHINT",
    "NMLVCUSTOMDRAW",
    "NMLVCUSTOMDRAW_ITEM_TYPE",
    "NMLVDISPINFOA",
    "NMLVDISPINFOW",
    "NMLVEMPTYMARKUP",
    "NMLVEMPTYMARKUP_FLAGS",
    "NMLVFINDITEMA",
    "NMLVFINDITEMW",
    "NMLVGETINFOTIPA",
    "NMLVGETINFOTIPW",
    "NMLVGETINFOTIP_FLAGS",
    "NMLVKEYDOWN",
    "NMLVLINK",
    "NMLVODSTATECHANGE",
    "NMLVSCROLL",
    "NMMOUSE",
    "NMOBJECTNOTIFY",
    "NMPGCALCSIZE",
    "NMPGCALCSIZE_FLAGS",
    "NMPGHOTITEM",
    "NMPGSCROLL",
    "NMPGSCROLL_DIR",
    "NMPGSCROLL_KEYS",
    "NMRBAUTOSIZE",
    "NMREBAR",
    "NMREBARAUTOBREAK",
    "NMREBARCHEVRON",
    "NMREBARCHILDSIZE",
    "NMREBARSPLITTER",
    "NMREBAR_MASK_FLAGS",
    "NMSEARCHWEB",
    "NMSELCHANGE",
    "NMTBCUSTOMDRAW",
    "NMTBDISPINFOA",
    "NMTBDISPINFOW",
    "NMTBDISPINFOW_MASK",
    "NMTBGETINFOTIPA",
    "NMTBGETINFOTIPW",
    "NMTBHOTITEM",
    "NMTBHOTITEM_FLAGS",
    "NMTBRESTORE",
    "NMTBSAVE",
    "NMTCKEYDOWN",
    "NMTOOLBARA",
    "NMTOOLBARW",
    "NMTOOLTIPSCREATED",
    "NMTRBTHUMBPOSCHANGING",
    "NMTREEVIEWA",
    "NMTREEVIEWW",
    "NMTTCUSTOMDRAW",
    "NMTTDISPINFOA",
    "NMTTDISPINFOW",
    "NMTVASYNCDRAW",
    "NMTVCUSTOMDRAW",
    "NMTVDISPINFOA",
    "NMTVDISPINFOEXA",
    "NMTVDISPINFOEXW",
    "NMTVDISPINFOW",
    "NMTVGETINFOTIPA",
    "NMTVGETINFOTIPW",
    "NMTVITEMCHANGE",
    "NMTVKEYDOWN",
    "NMTVSTATEIMAGECHANGING",
    "NMUPDOWN",
    "NMVIEWCHANGE",
    "NM_GETCUSTOMSPLITRECT",
    "NM_TREEVIEW_ACTION",
    "NONESTATES",
    "NORMALGROUPCOLLAPSESTATES",
    "NORMALGROUPEXPANDSTATES",
    "ODA_DRAWENTIRE",
    "ODA_FLAGS",
    "ODA_FOCUS",
    "ODA_SELECT",
    "ODS_CHECKED",
    "ODS_COMBOBOXEDIT",
    "ODS_DEFAULT",
    "ODS_DISABLED",
    "ODS_FLAGS",
    "ODS_FOCUS",
    "ODS_GRAYED",
    "ODS_HOTLIGHT",
    "ODS_INACTIVE",
    "ODS_NOACCEL",
    "ODS_NOFOCUSRECT",
    "ODS_SELECTED",
    "ODT_BUTTON",
    "ODT_COMBOBOX",
    "ODT_HEADER",
    "ODT_LISTBOX",
    "ODT_LISTVIEW",
    "ODT_MENU",
    "ODT_STATIC",
    "ODT_TAB",
    "OFFSETTYPE",
    "OPENBOXSTATES",
    "OPEN_THEME_DATA_FLAGS",
    "OTD_FORCE_RECT_SIZING",
    "OTD_NONCLIENT",
    "OT_ABOVELASTBUTTON",
    "OT_BELOWLASTBUTTON",
    "OT_BOTTOMLEFT",
    "OT_BOTTOMMIDDLE",
    "OT_BOTTOMRIGHT",
    "OT_LEFTOFCAPTION",
    "OT_LEFTOFLASTBUTTON",
    "OT_MIDDLELEFT",
    "OT_MIDDLERIGHT",
    "OT_RIGHTOFCAPTION",
    "OT_RIGHTOFLASTBUTTON",
    "OT_TOPLEFT",
    "OT_TOPMIDDLE",
    "OT_TOPRIGHT",
    "OpenThemeData",
    "OpenThemeDataEx",
    "PAGEPARTS",
    "PAGESETUPDLGORD",
    "PAGESETUPDLGORDMOTIF",
    "PBBS_NORMAL",
    "PBBS_PARTIAL",
    "PBBVS_NORMAL",
    "PBBVS_PARTIAL",
    "PBDDS_DISABLED",
    "PBDDS_NORMAL",
    "PBFS_ERROR",
    "PBFS_NORMAL",
    "PBFS_PARTIAL",
    "PBFS_PAUSED",
    "PBFVS_ERROR",
    "PBFVS_NORMAL",
    "PBFVS_PARTIAL",
    "PBFVS_PAUSED",
    "PBM_DELTAPOS",
    "PBM_GETBARCOLOR",
    "PBM_GETBKCOLOR",
    "PBM_GETPOS",
    "PBM_GETRANGE",
    "PBM_GETSTATE",
    "PBM_GETSTEP",
    "PBM_SETBARCOLOR",
    "PBM_SETBKCOLOR",
    "PBM_SETMARQUEE",
    "PBM_SETPOS",
    "PBM_SETRANGE",
    "PBM_SETRANGE32",
    "PBM_SETSTATE",
    "PBM_SETSTEP",
    "PBM_STEPIT",
    "PBRANGE",
    "PBST_ERROR",
    "PBST_NORMAL",
    "PBST_PAUSED",
    "PBS_DEFAULTED",
    "PBS_DEFAULTED_ANIMATING",
    "PBS_DISABLED",
    "PBS_HOT",
    "PBS_MARQUEE",
    "PBS_NORMAL",
    "PBS_PRESSED",
    "PBS_SMOOTH",
    "PBS_SMOOTHREVERSE",
    "PBS_VERTICAL",
    "PFNDACOMPARE",
    "PFNDACOMPARECONST",
    "PFNDAENUMCALLBACK",
    "PFNDAENUMCALLBACKCONST",
    "PFNDPAMERGE",
    "PFNDPAMERGECONST",
    "PFNDPASTREAM",
    "PFNLVCOMPARE",
    "PFNLVGROUPCOMPARE",
    "PFNPROPSHEETCALLBACK",
    "PFNTVCOMPARE",
    "PFTASKDIALOGCALLBACK",
    "PGB_BOTTOMORRIGHT",
    "PGB_TOPORLEFT",
    "PGF_CALCHEIGHT",
    "PGF_CALCWIDTH",
    "PGF_DEPRESSED",
    "PGF_GRAYED",
    "PGF_HOT",
    "PGF_INVISIBLE",
    "PGF_NORMAL",
    "PGF_SCROLLDOWN",
    "PGF_SCROLLLEFT",
    "PGF_SCROLLRIGHT",
    "PGF_SCROLLUP",
    "PGK_CONTROL",
    "PGK_MENU",
    "PGK_NONE",
    "PGK_SHIFT",
    "PGM_FIRST",
    "PGM_FORWARDMOUSE",
    "PGM_GETBKCOLOR",
    "PGM_GETBORDER",
    "PGM_GETBUTTONSIZE",
    "PGM_GETBUTTONSTATE",
    "PGM_GETDROPTARGET",
    "PGM_GETPOS",
    "PGM_RECALCSIZE",
    "PGM_SETBKCOLOR",
    "PGM_SETBORDER",
    "PGM_SETBUTTONSIZE",
    "PGM_SETCHILD",
    "PGM_SETPOS",
    "PGM_SETSCROLLINFO",
    "PGRP_DOWN",
    "PGRP_DOWNHORZ",
    "PGRP_UP",
    "PGRP_UPHORZ",
    "PGS_AUTOSCROLL",
    "PGS_DRAGNDROP",
    "PGS_HORZ",
    "PGS_VERT",
    "POINTER_DEVICE_CURSOR_INFO",
    "POINTER_DEVICE_CURSOR_TYPE",
    "POINTER_DEVICE_CURSOR_TYPE_ERASER",
    "POINTER_DEVICE_CURSOR_TYPE_MAX",
    "POINTER_DEVICE_CURSOR_TYPE_TIP",
    "POINTER_DEVICE_CURSOR_TYPE_UNKNOWN",
    "POINTER_DEVICE_INFO",
    "POINTER_DEVICE_PROPERTY",
    "POINTER_DEVICE_TYPE",
    "POINTER_DEVICE_TYPE_EXTERNAL_PEN",
    "POINTER_DEVICE_TYPE_INTEGRATED_PEN",
    "POINTER_DEVICE_TYPE_MAX",
    "POINTER_DEVICE_TYPE_TOUCH",
    "POINTER_DEVICE_TYPE_TOUCH_PAD",
    "POINTER_FEEDBACK_DEFAULT",
    "POINTER_FEEDBACK_INDIRECT",
    "POINTER_FEEDBACK_MODE",
    "POINTER_FEEDBACK_NONE",
    "POINTER_TYPE_INFO",
    "POPUPCHECKBACKGROUNDSTATES",
    "POPUPCHECKSTATES",
    "POPUPITEMSTATES",
    "POPUPSUBMENUSTATES",
    "PO_CLASS",
    "PO_GLOBAL",
    "PO_NOTFOUND",
    "PO_PART",
    "PO_STATE",
    "PP_BAR",
    "PP_BARVERT",
    "PP_CHUNK",
    "PP_CHUNKVERT",
    "PP_FILL",
    "PP_FILLVERT",
    "PP_MOVEOVERLAY",
    "PP_MOVEOVERLAYVERT",
    "PP_PULSEOVERLAY",
    "PP_PULSEOVERLAYVERT",
    "PP_TRANSPARENTBAR",
    "PP_TRANSPARENTBARVERT",
    "PRINTDLGEXORD",
    "PRINTDLGORD",
    "PRNSETUPDLGORD",
    "PROGRESSPARTS",
    "PROGRESS_CLASS",
    "PROGRESS_CLASSA",
    "PROGRESS_CLASSW",
    "PROPERTYORIGIN",
    "PROPSHEETHEADERA_V1",
    "PROPSHEETHEADERA_V2",
    "PROPSHEETHEADERW_V1",
    "PROPSHEETHEADERW_V2",
    "PROPSHEETPAGEA",
    "PROPSHEETPAGEA_V1",
    "PROPSHEETPAGEA_V2",
    "PROPSHEETPAGEA_V3",
    "PROPSHEETPAGEW",
    "PROPSHEETPAGEW_V1",
    "PROPSHEETPAGEW_V2",
    "PROPSHEETPAGEW_V3",
    "PROP_LG_CXDLG",
    "PROP_LG_CYDLG",
    "PROP_MED_CXDLG",
    "PROP_MED_CYDLG",
    "PROP_SM_CXDLG",
    "PROP_SM_CYDLG",
    "PSBTN_APPLYNOW",
    "PSBTN_BACK",
    "PSBTN_CANCEL",
    "PSBTN_FINISH",
    "PSBTN_HELP",
    "PSBTN_MAX",
    "PSBTN_NEXT",
    "PSBTN_OK",
    "PSCB_BUTTONPRESSED",
    "PSCB_INITIALIZED",
    "PSCB_PRECREATE",
    "PSHNOTIFY",
    "PSH_AEROWIZARD",
    "PSH_DEFAULT",
    "PSH_HASHELP",
    "PSH_HEADER",
    "PSH_HEADERBITMAP",
    "PSH_MODELESS",
    "PSH_NOAPPLYNOW",
    "PSH_NOCONTEXTHELP",
    "PSH_NOMARGIN",
    "PSH_PROPSHEETPAGE",
    "PSH_PROPTITLE",
    "PSH_RESIZABLE",
    "PSH_RTLREADING",
    "PSH_STRETCHWATERMARK",
    "PSH_USECALLBACK",
    "PSH_USEHBMHEADER",
    "PSH_USEHBMWATERMARK",
    "PSH_USEHICON",
    "PSH_USEHPLWATERMARK",
    "PSH_USEICONID",
    "PSH_USEPAGELANG",
    "PSH_USEPSTARTPAGE",
    "PSH_WATERMARK",
    "PSH_WIZARD",
    "PSH_WIZARD97",
    "PSH_WIZARDCONTEXTHELP",
    "PSH_WIZARDHASFINISH",
    "PSH_WIZARD_LITE",
    "PSM_ADDPAGE",
    "PSM_APPLY",
    "PSM_CANCELTOCLOSE",
    "PSM_CHANGED",
    "PSM_ENABLEWIZBUTTONS",
    "PSM_GETCURRENTPAGEHWND",
    "PSM_GETRESULT",
    "PSM_GETTABCONTROL",
    "PSM_HWNDTOINDEX",
    "PSM_IDTOINDEX",
    "PSM_INDEXTOHWND",
    "PSM_INDEXTOID",
    "PSM_INDEXTOPAGE",
    "PSM_INSERTPAGE",
    "PSM_ISDIALOGMESSAGE",
    "PSM_PAGETOINDEX",
    "PSM_PRESSBUTTON",
    "PSM_QUERYSIBLINGS",
    "PSM_REBOOTSYSTEM",
    "PSM_RECALCPAGESIZES",
    "PSM_REMOVEPAGE",
    "PSM_RESTARTWINDOWS",
    "PSM_SETBUTTONTEXT",
    "PSM_SETBUTTONTEXTW",
    "PSM_SETCURSEL",
    "PSM_SETCURSELID",
    "PSM_SETFINISHTEXT",
    "PSM_SETFINISHTEXTA",
    "PSM_SETFINISHTEXTW",
    "PSM_SETHEADERSUBTITLE",
    "PSM_SETHEADERSUBTITLEA",
    "PSM_SETHEADERSUBTITLEW",
    "PSM_SETHEADERTITLE",
    "PSM_SETHEADERTITLEA",
    "PSM_SETHEADERTITLEW",
    "PSM_SETNEXTTEXT",
    "PSM_SETNEXTTEXTW",
    "PSM_SETTITLE",
    "PSM_SETTITLEA",
    "PSM_SETTITLEW",
    "PSM_SETWIZBUTTONS",
    "PSM_SHOWWIZBUTTONS",
    "PSM_UNCHANGED",
    "PSNRET_INVALID",
    "PSNRET_INVALID_NOCHANGEPAGE",
    "PSNRET_MESSAGEHANDLED",
    "PSNRET_NOERROR",
    "PSPCB_ADDREF",
    "PSPCB_CREATE",
    "PSPCB_MESSAGE",
    "PSPCB_RELEASE",
    "PSPCB_SI_INITDIALOG",
    "PSP_DEFAULT",
    "PSP_DLGINDIRECT",
    "PSP_HASHELP",
    "PSP_HIDEHEADER",
    "PSP_PREMATURE",
    "PSP_RTLREADING",
    "PSP_USECALLBACK",
    "PSP_USEFUSIONCONTEXT",
    "PSP_USEHEADERSUBTITLE",
    "PSP_USEHEADERTITLE",
    "PSP_USEHICON",
    "PSP_USEICONID",
    "PSP_USEREFPARENT",
    "PSP_USETITLE",
    "PSWIZBF_ELEVATIONREQUIRED",
    "PSWIZB_BACK",
    "PSWIZB_CANCEL",
    "PSWIZB_DISABLEDFINISH",
    "PSWIZB_FINISH",
    "PSWIZB_NEXT",
    "PSWIZB_RESTORE",
    "PSWIZB_SHOW",
    "PUSHBUTTONDROPDOWNSTATES",
    "PUSHBUTTONSTATES",
    "PackTouchHitTestingProximityEvaluation",
    "PropertySheetA",
    "PropertySheetW",
    "RADIOBUTTONSTATES",
    "RBAB_ADDBAND",
    "RBAB_AUTOSIZE",
    "RBBIM_BACKGROUND",
    "RBBIM_CHEVRONLOCATION",
    "RBBIM_CHEVRONSTATE",
    "RBBIM_CHILD",
    "RBBIM_CHILDSIZE",
    "RBBIM_COLORS",
    "RBBIM_HEADERSIZE",
    "RBBIM_ID",
    "RBBIM_IDEALSIZE",
    "RBBIM_IMAGE",
    "RBBIM_LPARAM",
    "RBBIM_SIZE",
    "RBBIM_STYLE",
    "RBBIM_TEXT",
    "RBBS_BREAK",
    "RBBS_CHILDEDGE",
    "RBBS_FIXEDBMP",
    "RBBS_FIXEDSIZE",
    "RBBS_GRIPPERALWAYS",
    "RBBS_HIDDEN",
    "RBBS_HIDETITLE",
    "RBBS_NOGRIPPER",
    "RBBS_NOVERT",
    "RBBS_TOPALIGN",
    "RBBS_USECHEVRON",
    "RBBS_VARIABLEHEIGHT",
    "RBHITTESTINFO",
    "RBHT_CAPTION",
    "RBHT_CHEVRON",
    "RBHT_CLIENT",
    "RBHT_GRABBER",
    "RBHT_NOWHERE",
    "RBHT_SPLITTER",
    "RBIM_IMAGELIST",
    "RBNM_ID",
    "RBNM_LPARAM",
    "RBNM_STYLE",
    "RBSTR_CHANGERECT",
    "RBS_AUTOSIZE",
    "RBS_BANDBORDERS",
    "RBS_CHECKEDDISABLED",
    "RBS_CHECKEDHOT",
    "RBS_CHECKEDNORMAL",
    "RBS_CHECKEDPRESSED",
    "RBS_DBLCLKTOGGLE",
    "RBS_DISABLED",
    "RBS_FIXEDORDER",
    "RBS_HOT",
    "RBS_NORMAL",
    "RBS_PUSHED",
    "RBS_REGISTERDROP",
    "RBS_TOOLTIPS",
    "RBS_UNCHECKEDDISABLED",
    "RBS_UNCHECKEDHOT",
    "RBS_UNCHECKEDNORMAL",
    "RBS_UNCHECKEDPRESSED",
    "RBS_VARHEIGHT",
    "RBS_VERTICALGRIPPER",
    "RB_BEGINDRAG",
    "RB_DELETEBAND",
    "RB_DRAGMOVE",
    "RB_ENDDRAG",
    "RB_GETBANDBORDERS",
    "RB_GETBANDCOUNT",
    "RB_GETBANDINFO",
    "RB_GETBANDINFOA",
    "RB_GETBANDINFOW",
    "RB_GETBANDMARGINS",
    "RB_GETBARHEIGHT",
    "RB_GETBARINFO",
    "RB_GETBKCOLOR",
    "RB_GETCOLORSCHEME",
    "RB_GETDROPTARGET",
    "RB_GETEXTENDEDSTYLE",
    "RB_GETPALETTE",
    "RB_GETRECT",
    "RB_GETROWCOUNT",
    "RB_GETROWHEIGHT",
    "RB_GETTEXTCOLOR",
    "RB_GETTOOLTIPS",
    "RB_GETUNICODEFORMAT",
    "RB_HITTEST",
    "RB_IDTOINDEX",
    "RB_INSERTBAND",
    "RB_INSERTBANDA",
    "RB_INSERTBANDW",
    "RB_MAXIMIZEBAND",
    "RB_MINIMIZEBAND",
    "RB_MOVEBAND",
    "RB_PUSHCHEVRON",
    "RB_SETBANDINFO",
    "RB_SETBANDINFOA",
    "RB_SETBANDINFOW",
    "RB_SETBANDWIDTH",
    "RB_SETBARINFO",
    "RB_SETBKCOLOR",
    "RB_SETCOLORSCHEME",
    "RB_SETEXTENDEDSTYLE",
    "RB_SETPALETTE",
    "RB_SETPARENT",
    "RB_SETTEXTCOLOR",
    "RB_SETTOOLTIPS",
    "RB_SETUNICODEFORMAT",
    "RB_SETWINDOWTHEME",
    "RB_SHOWBAND",
    "RB_SIZETORECT",
    "READONLYSTATES",
    "REBARBANDINFOA",
    "REBARBANDINFOW",
    "REBARCLASSNAME",
    "REBARCLASSNAMEA",
    "REBARCLASSNAMEW",
    "REBARINFO",
    "REBARPARTS",
    "REPLACEDLGORD",
    "RESTOREBUTTONSTATES",
    "RP_BACKGROUND",
    "RP_BAND",
    "RP_CHEVRON",
    "RP_CHEVRONVERT",
    "RP_GRIPPER",
    "RP_GRIPPERVERT",
    "RP_SPLITTER",
    "RP_SPLITTERVERT",
    "RUNDLGORD",
    "RegisterPointerDeviceNotifications",
    "RegisterTouchHitTestingWindow",
    "SBARS_SIZEGRIP",
    "SBARS_TOOLTIPS",
    "SBP_ARROWBTN",
    "SBP_GRIPPERHORZ",
    "SBP_GRIPPERVERT",
    "SBP_LOWERTRACKHORZ",
    "SBP_LOWERTRACKVERT",
    "SBP_SIZEBOX",
    "SBP_SIZEBOXBKGND",
    "SBP_THUMBBTNHORZ",
    "SBP_THUMBBTNVERT",
    "SBP_UPPERTRACKHORZ",
    "SBP_UPPERTRACKVERT",
    "SBS_DISABLED",
    "SBS_HOT",
    "SBS_NORMAL",
    "SBS_PUSHED",
    "SBT_NOBORDERS",
    "SBT_NOTABPARSING",
    "SBT_OWNERDRAW",
    "SBT_POPOUT",
    "SBT_RTLREADING",
    "SBT_TOOLTIPS",
    "SB_GETBORDERS",
    "SB_GETICON",
    "SB_GETPARTS",
    "SB_GETRECT",
    "SB_GETTEXT",
    "SB_GETTEXTA",
    "SB_GETTEXTLENGTH",
    "SB_GETTEXTLENGTHA",
    "SB_GETTEXTLENGTHW",
    "SB_GETTEXTW",
    "SB_GETTIPTEXTA",
    "SB_GETTIPTEXTW",
    "SB_GETUNICODEFORMAT",
    "SB_ISSIMPLE",
    "SB_SETBKCOLOR",
    "SB_SETICON",
    "SB_SETMINHEIGHT",
    "SB_SETPARTS",
    "SB_SETTEXT",
    "SB_SETTEXTA",
    "SB_SETTEXTW",
    "SB_SETTIPTEXTA",
    "SB_SETTIPTEXTW",
    "SB_SETUNICODEFORMAT",
    "SB_SIMPLE",
    "SB_SIMPLEID",
    "SCBS_DISABLED",
    "SCBS_HOT",
    "SCBS_NORMAL",
    "SCBS_PUSHED",
    "SCRBS_DISABLED",
    "SCRBS_HOT",
    "SCRBS_HOVER",
    "SCRBS_NORMAL",
    "SCRBS_PRESSED",
    "SCROLLBARPARTS",
    "SCROLLBARSTYLESTATES",
    "SCS_ACTIVE",
    "SCS_DISABLED",
    "SCS_INACTIVE",
    "SECTIONTITLELINKSTATES",
    "SET_THEME_APP_PROPERTIES_FLAGS",
    "SFRB_ACTIVE",
    "SFRB_INACTIVE",
    "SFRL_ACTIVE",
    "SFRL_INACTIVE",
    "SFRR_ACTIVE",
    "SFRR_INACTIVE",
    "SHOWCALENDARBUTTONRIGHTSTATES",
    "SIZEBOXSTATES",
    "SIZINGTYPE",
    "SMALLCAPTIONSTATES",
    "SMALLCLOSEBUTTONSTATES",
    "SMALLFRAMEBOTTOMSTATES",
    "SMALLFRAMELEFTSTATES",
    "SMALLFRAMERIGHTSTATES",
    "SOFTWAREEXPLORERSTATES",
    "SPECIALGROUPCOLLAPSESTATES",
    "SPECIALGROUPEXPANDSTATES",
    "SPINPARTS",
    "SPLITSV_HOT",
    "SPLITSV_NORMAL",
    "SPLITSV_PRESSED",
    "SPLITS_HOT",
    "SPLITS_NORMAL",
    "SPLITS_PRESSED",
    "SPLITTERSTATES",
    "SPLITTERVERTSTATES",
    "SPLS_HOT",
    "SPLS_NORMAL",
    "SPLS_PRESSED",
    "SPMPT_DISABLED",
    "SPMPT_FOCUSED",
    "SPMPT_HOT",
    "SPMPT_NORMAL",
    "SPMPT_SELECTED",
    "SPNP_DOWN",
    "SPNP_DOWNHORZ",
    "SPNP_UP",
    "SPNP_UPHORZ",
    "SPOB_DISABLED",
    "SPOB_FOCUSED",
    "SPOB_HOT",
    "SPOB_NORMAL",
    "SPOB_SELECTED",
    "SPP_LOGOFF",
    "SPP_LOGOFFBUTTONS",
    "SPP_LOGOFFSPLITBUTTONDROPDOWN",
    "SPP_MOREPROGRAMS",
    "SPP_MOREPROGRAMSARROW",
    "SPP_MOREPROGRAMSARROWBACK",
    "SPP_MOREPROGRAMSTAB",
    "SPP_NSCHOST",
    "SPP_OPENBOX",
    "SPP_PLACESLIST",
    "SPP_PLACESLISTSEPARATOR",
    "SPP_PREVIEW",
    "SPP_PROGLIST",
    "SPP_PROGLISTSEPARATOR",
    "SPP_SEARCHVIEW",
    "SPP_SOFTWAREEXPLORER",
    "SPP_TOPMATCH",
    "SPP_USERPANE",
    "SPP_USERPICTURE",
    "SPSB_HOT",
    "SPSB_NORMAL",
    "SPSB_PRESSED",
    "SPSE_DISABLED",
    "SPSE_FOCUSED",
    "SPSE_HOT",
    "SPSE_NORMAL",
    "SPSE_SELECTED",
    "SPS_HOT",
    "SPS_NORMAL",
    "SPS_PRESSED",
    "SP_GRIPPER",
    "SP_GRIPPERPANE",
    "SP_PANE",
    "STANDARDSTATES",
    "STARTPANELPARTS",
    "STATE_SYSTEM_FOCUSABLE",
    "STATE_SYSTEM_INVISIBLE",
    "STATE_SYSTEM_OFFSCREEN",
    "STATE_SYSTEM_PRESSED",
    "STATE_SYSTEM_UNAVAILABLE",
    "STATICPARTS",
    "STATUSCLASSNAME",
    "STATUSCLASSNAMEA",
    "STATUSCLASSNAMEW",
    "STATUSPARTS",
    "STAT_TEXT",
    "STD_COPY",
    "STD_CUT",
    "STD_DELETE",
    "STD_FILENEW",
    "STD_FILEOPEN",
    "STD_FILESAVE",
    "STD_FIND",
    "STD_HELP",
    "STD_PASTE",
    "STD_PRINT",
    "STD_PRINTPRE",
    "STD_PROPERTIES",
    "STD_REDOW",
    "STD_REPLACE",
    "STD_UNDO",
    "ST_STRETCH",
    "ST_TILE",
    "ST_TRUESIZE",
    "SYSBUTTONSTATES",
    "SYSTEMCLOSESTATES",
    "SYSTEMMAXIMIZESTATES",
    "SYSTEMMINIMIZESTATES",
    "SYSTEMRESTORESTATES",
    "SZB_HALFBOTTOMLEFTALIGN",
    "SZB_HALFBOTTOMRIGHTALIGN",
    "SZB_HALFTOPLEFTALIGN",
    "SZB_HALFTOPRIGHTALIGN",
    "SZB_LEFTALIGN",
    "SZB_RIGHTALIGN",
    "SZB_TOPLEFTALIGN",
    "SZB_TOPRIGHTALIGN",
    "SZ_THDOCPROP_AUTHOR",
    "SZ_THDOCPROP_CANONICALNAME",
    "SZ_THDOCPROP_DISPLAYNAME",
    "SZ_THDOCPROP_TOOLTIP",
    "SetScrollInfo",
    "SetScrollPos",
    "SetScrollRange",
    "SetThemeAppProperties",
    "SetWindowFeedbackSetting",
    "SetWindowTheme",
    "SetWindowThemeAttribute",
    "ShowHideMenuCtl",
    "ShowScrollBar",
    "Str_SetPtrW",
    "TABITEMBOTHEDGESTATES",
    "TABITEMLEFTEDGESTATES",
    "TABITEMRIGHTEDGESTATES",
    "TABITEMSTATES",
    "TABPARTS",
    "TABP_AEROWIZARDBODY",
    "TABP_BODY",
    "TABP_PANE",
    "TABP_TABITEM",
    "TABP_TABITEMBOTHEDGE",
    "TABP_TABITEMLEFTEDGE",
    "TABP_TABITEMRIGHTEDGE",
    "TABP_TOPTABITEM",
    "TABP_TOPTABITEMBOTHEDGE",
    "TABP_TOPTABITEMLEFTEDGE",
    "TABP_TOPTABITEMRIGHTEDGE",
    "TABSTATES",
    "TAB_CONTROL_ITEM_STATE",
    "TAPF_ALLOWCOLLECTION",
    "TAPF_HASBACKGROUND",
    "TAPF_HASPERSPECTIVE",
    "TAPF_HASSTAGGER",
    "TAPF_ISRTLAWARE",
    "TAPF_NONE",
    "TAP_FLAGS",
    "TAP_STAGGERDELAY",
    "TAP_STAGGERDELAYCAP",
    "TAP_STAGGERDELAYFACTOR",
    "TAP_TRANSFORMCOUNT",
    "TAP_ZORDER",
    "TASKBANDPARTS",
    "TASKBARPARTS",
    "TASKDIALOGCONFIG",
    "TASKDIALOGPARTS",
    "TASKDIALOG_BUTTON",
    "TASKDIALOG_COMMON_BUTTON_FLAGS",
    "TASKDIALOG_ELEMENTS",
    "TASKDIALOG_FLAGS",
    "TASKDIALOG_ICON_ELEMENTS",
    "TASKDIALOG_MESSAGES",
    "TASKDIALOG_NOTIFICATIONS",
    "TASKLINKSTATES",
    "TATF_HASINITIALVALUES",
    "TATF_HASORIGINVALUES",
    "TATF_NONE",
    "TATF_TARGETVALUES_USER",
    "TATT_CLIP",
    "TATT_OPACITY",
    "TATT_SCALE_2D",
    "TATT_TRANSLATE_2D",
    "TA_CUBIC_BEZIER",
    "TA_PROPERTY",
    "TA_PROPERTY_FLAG",
    "TA_TIMINGFUNCTION",
    "TA_TIMINGFUNCTION_TYPE",
    "TA_TRANSFORM",
    "TA_TRANSFORM_2D",
    "TA_TRANSFORM_CLIP",
    "TA_TRANSFORM_FLAG",
    "TA_TRANSFORM_OPACITY",
    "TA_TRANSFORM_TYPE",
    "TBADDBITMAP",
    "TBBF_LARGE",
    "TBBUTTON",
    "TBBUTTONINFOA",
    "TBBUTTONINFOW",
    "TBBUTTONINFOW_MASK",
    "TBCDRF_BLENDICON",
    "TBCDRF_HILITEHOTTRACK",
    "TBCDRF_NOBACKGROUND",
    "TBCDRF_NOEDGES",
    "TBCDRF_NOETCHEDEFFECT",
    "TBCDRF_NOMARK",
    "TBCDRF_NOOFFSET",
    "TBCDRF_USECDCOLORS",
    "TBCD_CHANNEL",
    "TBCD_THUMB",
    "TBCD_TICS",
    "TBDDRET_DEFAULT",
    "TBDDRET_NODEFAULT",
    "TBDDRET_TREATPRESSED",
    "TBIF_BYINDEX",
    "TBIF_COMMAND",
    "TBIF_IMAGE",
    "TBIF_LPARAM",
    "TBIF_SIZE",
    "TBIF_STATE",
    "TBIF_STYLE",
    "TBIF_TEXT",
    "TBIMHT_AFTER",
    "TBIMHT_BACKGROUND",
    "TBIMHT_NONE",
    "TBINSERTMARK",
    "TBINSERTMARK_FLAGS",
    "TBMETRICS",
    "TBMF_BARPAD",
    "TBMF_BUTTONSPACING",
    "TBMF_PAD",
    "TBM_CLEARSEL",
    "TBM_CLEARTICS",
    "TBM_GETBUDDY",
    "TBM_GETCHANNELRECT",
    "TBM_GETLINESIZE",
    "TBM_GETNUMTICS",
    "TBM_GETPAGESIZE",
    "TBM_GETPTICS",
    "TBM_GETRANGEMAX",
    "TBM_GETRANGEMIN",
    "TBM_GETSELEND",
    "TBM_GETSELSTART",
    "TBM_GETTHUMBLENGTH",
    "TBM_GETTHUMBRECT",
    "TBM_GETTIC",
    "TBM_GETTICPOS",
    "TBM_GETTOOLTIPS",
    "TBM_GETUNICODEFORMAT",
    "TBM_SETBUDDY",
    "TBM_SETLINESIZE",
    "TBM_SETPAGESIZE",
    "TBM_SETPOS",
    "TBM_SETPOSNOTIFY",
    "TBM_SETRANGE",
    "TBM_SETRANGEMAX",
    "TBM_SETRANGEMIN",
    "TBM_SETSEL",
    "TBM_SETSELEND",
    "TBM_SETSELSTART",
    "TBM_SETTHUMBLENGTH",
    "TBM_SETTIC",
    "TBM_SETTICFREQ",
    "TBM_SETTIPSIDE",
    "TBM_SETTOOLTIPS",
    "TBM_SETUNICODEFORMAT",
    "TBNF_DI_SETITEM",
    "TBNF_IMAGE",
    "TBNF_TEXT",
    "TBNRF_ENDCUSTOMIZE",
    "TBNRF_HIDEHELP",
    "TBP_BACKGROUNDBOTTOM",
    "TBP_BACKGROUNDLEFT",
    "TBP_BACKGROUNDRIGHT",
    "TBP_BACKGROUNDTOP",
    "TBP_SIZINGBARBOTTOM",
    "TBP_SIZINGBARLEFT",
    "TBP_SIZINGBARRIGHT",
    "TBP_SIZINGBARTOP",
    "TBREPLACEBITMAP",
    "TBSAVEPARAMSA",
    "TBSAVEPARAMSW",
    "TBSTATE_CHECKED",
    "TBSTATE_ELLIPSES",
    "TBSTATE_ENABLED",
    "TBSTATE_HIDDEN",
    "TBSTATE_INDETERMINATE",
    "TBSTATE_MARKED",
    "TBSTATE_PRESSED",
    "TBSTATE_WRAP",
    "TBSTYLE_ALTDRAG",
    "TBSTYLE_AUTOSIZE",
    "TBSTYLE_BUTTON",
    "TBSTYLE_CHECK",
    "TBSTYLE_CUSTOMERASE",
    "TBSTYLE_DROPDOWN",
    "TBSTYLE_EX_DOUBLEBUFFER",
    "TBSTYLE_EX_DRAWDDARROWS",
    "TBSTYLE_EX_HIDECLIPPEDBUTTONS",
    "TBSTYLE_EX_MIXEDBUTTONS",
    "TBSTYLE_EX_MULTICOLUMN",
    "TBSTYLE_EX_VERTICAL",
    "TBSTYLE_FLAT",
    "TBSTYLE_GROUP",
    "TBSTYLE_LIST",
    "TBSTYLE_NOPREFIX",
    "TBSTYLE_REGISTERDROP",
    "TBSTYLE_SEP",
    "TBSTYLE_TOOLTIPS",
    "TBSTYLE_TRANSPARENT",
    "TBSTYLE_WRAPABLE",
    "TBS_AUTOTICKS",
    "TBS_BOTH",
    "TBS_BOTTOM",
    "TBS_DOWNISLEFT",
    "TBS_ENABLESELRANGE",
    "TBS_FIXEDLENGTH",
    "TBS_HORZ",
    "TBS_LEFT",
    "TBS_NOTHUMB",
    "TBS_NOTICKS",
    "TBS_NOTIFYBEFOREMOVE",
    "TBS_REVERSED",
    "TBS_RIGHT",
    "TBS_TOOLTIPS",
    "TBS_TOP",
    "TBS_TRANSPARENTBKGND",
    "TBS_VERT",
    "TBTS_BOTTOM",
    "TBTS_LEFT",
    "TBTS_RIGHT",
    "TBTS_TOP",
    "TB_ADDBITMAP",
    "TB_ADDBUTTONS",
    "TB_ADDBUTTONSA",
    "TB_ADDBUTTONSW",
    "TB_ADDSTRING",
    "TB_ADDSTRINGA",
    "TB_ADDSTRINGW",
    "TB_AUTOSIZE",
    "TB_BOTTOM",
    "TB_BUTTONCOUNT",
    "TB_BUTTONSTRUCTSIZE",
    "TB_CHANGEBITMAP",
    "TB_CHECKBUTTON",
    "TB_COMMANDTOINDEX",
    "TB_CUSTOMIZE",
    "TB_DELETEBUTTON",
    "TB_ENABLEBUTTON",
    "TB_ENDTRACK",
    "TB_GETANCHORHIGHLIGHT",
    "TB_GETBITMAP",
    "TB_GETBITMAPFLAGS",
    "TB_GETBUTTON",
    "TB_GETBUTTONINFO",
    "TB_GETBUTTONINFOA",
    "TB_GETBUTTONINFOW",
    "TB_GETBUTTONSIZE",
    "TB_GETBUTTONTEXT",
    "TB_GETBUTTONTEXTA",
    "TB_GETBUTTONTEXTW",
    "TB_GETCOLORSCHEME",
    "TB_GETDISABLEDIMAGELIST",
    "TB_GETEXTENDEDSTYLE",
    "TB_GETHOTIMAGELIST",
    "TB_GETHOTITEM",
    "TB_GETIDEALSIZE",
    "TB_GETIMAGELIST",
    "TB_GETIMAGELISTCOUNT",
    "TB_GETINSERTMARK",
    "TB_GETINSERTMARKCOLOR",
    "TB_GETITEMDROPDOWNRECT",
    "TB_GETITEMRECT",
    "TB_GETMAXSIZE",
    "TB_GETMETRICS",
    "TB_GETOBJECT",
    "TB_GETPADDING",
    "TB_GETPRESSEDIMAGELIST",
    "TB_GETRECT",
    "TB_GETROWS",
    "TB_GETSTATE",
    "TB_GETSTRING",
    "TB_GETSTRINGA",
    "TB_GETSTRINGW",
    "TB_GETSTYLE",
    "TB_GETTEXTROWS",
    "TB_GETTOOLTIPS",
    "TB_GETUNICODEFORMAT",
    "TB_HASACCELERATOR",
    "TB_HIDEBUTTON",
    "TB_HITTEST",
    "TB_INDETERMINATE",
    "TB_INSERTBUTTON",
    "TB_INSERTBUTTONA",
    "TB_INSERTBUTTONW",
    "TB_INSERTMARKHITTEST",
    "TB_ISBUTTONCHECKED",
    "TB_ISBUTTONENABLED",
    "TB_ISBUTTONHIDDEN",
    "TB_ISBUTTONHIGHLIGHTED",
    "TB_ISBUTTONINDETERMINATE",
    "TB_ISBUTTONPRESSED",
    "TB_LINEDOWN",
    "TB_LINEUP",
    "TB_LOADIMAGES",
    "TB_MAPACCELERATOR",
    "TB_MAPACCELERATORA",
    "TB_MAPACCELERATORW",
    "TB_MARKBUTTON",
    "TB_MOVEBUTTON",
    "TB_PAGEDOWN",
    "TB_PAGEUP",
    "TB_PRESSBUTTON",
    "TB_REPLACEBITMAP",
    "TB_SAVERESTORE",
    "TB_SAVERESTOREA",
    "TB_SAVERESTOREW",
    "TB_SETANCHORHIGHLIGHT",
    "TB_SETBITMAPSIZE",
    "TB_SETBOUNDINGSIZE",
    "TB_SETBUTTONINFO",
    "TB_SETBUTTONINFOA",
    "TB_SETBUTTONINFOW",
    "TB_SETBUTTONSIZE",
    "TB_SETBUTTONWIDTH",
    "TB_SETCMDID",
    "TB_SETCOLORSCHEME",
    "TB_SETDISABLEDIMAGELIST",
    "TB_SETDRAWTEXTFLAGS",
    "TB_SETEXTENDEDSTYLE",
    "TB_SETHOTIMAGELIST",
    "TB_SETHOTITEM",
    "TB_SETHOTITEM2",
    "TB_SETIMAGELIST",
    "TB_SETINDENT",
    "TB_SETINSERTMARK",
    "TB_SETINSERTMARKCOLOR",
    "TB_SETLISTGAP",
    "TB_SETMAXTEXTROWS",
    "TB_SETMETRICS",
    "TB_SETPADDING",
    "TB_SETPARENT",
    "TB_SETPRESSEDIMAGELIST",
    "TB_SETROWS",
    "TB_SETSTATE",
    "TB_SETSTYLE",
    "TB_SETTOOLTIPS",
    "TB_SETUNICODEFORMAT",
    "TB_SETWINDOWTHEME",
    "TB_THUMBPOSITION",
    "TB_THUMBTRACK",
    "TB_TOP",
    "TCHITTESTINFO",
    "TCHITTESTINFO_FLAGS",
    "TCHT_NOWHERE",
    "TCHT_ONITEM",
    "TCHT_ONITEMICON",
    "TCHT_ONITEMLABEL",
    "TCIF_IMAGE",
    "TCIF_PARAM",
    "TCIF_RTLREADING",
    "TCIF_STATE",
    "TCIF_TEXT",
    "TCIS_BUTTONPRESSED",
    "TCIS_HIGHLIGHTED",
    "TCITEMA",
    "TCITEMHEADERA",
    "TCITEMHEADERA_MASK",
    "TCITEMHEADERW",
    "TCITEMW",
    "TCM_ADJUSTRECT",
    "TCM_DELETEALLITEMS",
    "TCM_DELETEITEM",
    "TCM_DESELECTALL",
    "TCM_FIRST",
    "TCM_GETCURFOCUS",
    "TCM_GETCURSEL",
    "TCM_GETEXTENDEDSTYLE",
    "TCM_GETIMAGELIST",
    "TCM_GETITEM",
    "TCM_GETITEMA",
    "TCM_GETITEMCOUNT",
    "TCM_GETITEMRECT",
    "TCM_GETITEMW",
    "TCM_GETROWCOUNT",
    "TCM_GETTOOLTIPS",
    "TCM_GETUNICODEFORMAT",
    "TCM_HIGHLIGHTITEM",
    "TCM_HITTEST",
    "TCM_INSERTITEM",
    "TCM_INSERTITEMA",
    "TCM_INSERTITEMW",
    "TCM_REMOVEIMAGE",
    "TCM_SETCURFOCUS",
    "TCM_SETCURSEL",
    "TCM_SETEXTENDEDSTYLE",
    "TCM_SETIMAGELIST",
    "TCM_SETITEM",
    "TCM_SETITEMA",
    "TCM_SETITEMEXTRA",
    "TCM_SETITEMSIZE",
    "TCM_SETITEMW",
    "TCM_SETMINTABWIDTH",
    "TCM_SETPADDING",
    "TCM_SETTOOLTIPS",
    "TCM_SETUNICODEFORMAT",
    "TCS_BOTTOM",
    "TCS_BUTTONS",
    "TCS_EX_FLATSEPARATORS",
    "TCS_EX_REGISTERDROP",
    "TCS_FIXEDWIDTH",
    "TCS_FLATBUTTONS",
    "TCS_FOCUSNEVER",
    "TCS_FOCUSONBUTTONDOWN",
    "TCS_FORCEICONLEFT",
    "TCS_FORCELABELLEFT",
    "TCS_HOTTRACK",
    "TCS_MULTILINE",
    "TCS_MULTISELECT",
    "TCS_OWNERDRAWFIXED",
    "TCS_RAGGEDRIGHT",
    "TCS_RIGHT",
    "TCS_RIGHTJUSTIFY",
    "TCS_SCROLLOPPOSITE",
    "TCS_SINGLELINE",
    "TCS_TABS",
    "TCS_TOOLTIPS",
    "TCS_VERTICAL",
    "TDCBF_CANCEL_BUTTON",
    "TDCBF_CLOSE_BUTTON",
    "TDCBF_NO_BUTTON",
    "TDCBF_OK_BUTTON",
    "TDCBF_RETRY_BUTTON",
    "TDCBF_YES_BUTTON",
    "TDE_CONTENT",
    "TDE_EXPANDED_INFORMATION",
    "TDE_FOOTER",
    "TDE_MAIN_INSTRUCTION",
    "TDF_ALLOW_DIALOG_CANCELLATION",
    "TDF_CALLBACK_TIMER",
    "TDF_CAN_BE_MINIMIZED",
    "TDF_ENABLE_HYPERLINKS",
    "TDF_EXPANDED_BY_DEFAULT",
    "TDF_EXPAND_FOOTER_AREA",
    "TDF_NO_DEFAULT_RADIO_BUTTON",
    "TDF_NO_SET_FOREGROUND",
    "TDF_POSITION_RELATIVE_TO_WINDOW",
    "TDF_RTL_LAYOUT",
    "TDF_SHOW_MARQUEE_PROGRESS_BAR",
    "TDF_SHOW_PROGRESS_BAR",
    "TDF_SIZE_TO_CONTENT",
    "TDF_USE_COMMAND_LINKS",
    "TDF_USE_COMMAND_LINKS_NO_ICON",
    "TDF_USE_HICON_FOOTER",
    "TDF_USE_HICON_MAIN",
    "TDF_VERIFICATION_FLAG_CHECKED",
    "TDIE_ICON_FOOTER",
    "TDIE_ICON_MAIN",
    "TDLGCPS_STANDALONE",
    "TDLGEBS_EXPANDEDDISABLED",
    "TDLGEBS_EXPANDEDHOVER",
    "TDLGEBS_EXPANDEDNORMAL",
    "TDLGEBS_EXPANDEDPRESSED",
    "TDLGEBS_HOVER",
    "TDLGEBS_NORMAL",
    "TDLGEBS_NORMALDISABLED",
    "TDLGEBS_PRESSED",
    "TDLG_BUTTONSECTION",
    "TDLG_BUTTONWRAPPER",
    "TDLG_COMMANDLINKPANE",
    "TDLG_CONTENTICON",
    "TDLG_CONTENTPANE",
    "TDLG_CONTROLPANE",
    "TDLG_EXPANDEDCONTENT",
    "TDLG_EXPANDEDFOOTERAREA",
    "TDLG_EXPANDOBUTTON",
    "TDLG_EXPANDOTEXT",
    "TDLG_FOOTNOTEAREA",
    "TDLG_FOOTNOTEPANE",
    "TDLG_FOOTNOTESEPARATOR",
    "TDLG_IMAGEALIGNMENT",
    "TDLG_MAINICON",
    "TDLG_MAININSTRUCTIONPANE",
    "TDLG_PRIMARYPANEL",
    "TDLG_PROGRESSBAR",
    "TDLG_RADIOBUTTONPANE",
    "TDLG_SECONDARYPANEL",
    "TDLG_VERIFICATIONTEXT",
    "TDM_CLICK_BUTTON",
    "TDM_CLICK_RADIO_BUTTON",
    "TDM_CLICK_VERIFICATION",
    "TDM_ENABLE_BUTTON",
    "TDM_ENABLE_RADIO_BUTTON",
    "TDM_NAVIGATE_PAGE",
    "TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE",
    "TDM_SET_ELEMENT_TEXT",
    "TDM_SET_MARQUEE_PROGRESS_BAR",
    "TDM_SET_PROGRESS_BAR_MARQUEE",
    "TDM_SET_PROGRESS_BAR_POS",
    "TDM_SET_PROGRESS_BAR_RANGE",
    "TDM_SET_PROGRESS_BAR_STATE",
    "TDM_UPDATE_ELEMENT_TEXT",
    "TDM_UPDATE_ICON",
    "TDN_BUTTON_CLICKED",
    "TDN_CREATED",
    "TDN_DESTROYED",
    "TDN_DIALOG_CONSTRUCTED",
    "TDN_EXPANDO_BUTTON_CLICKED",
    "TDN_HELP",
    "TDN_HYPERLINK_CLICKED",
    "TDN_NAVIGATED",
    "TDN_RADIO_BUTTON_CLICKED",
    "TDN_TIMER",
    "TDN_VERIFICATION_CLICKED",
    "TDP_FLASHBUTTON",
    "TDP_FLASHBUTTONGROUPMENU",
    "TDP_GROUPCOUNT",
    "TD_ERROR_ICON",
    "TD_INFORMATION_ICON",
    "TD_SHIELD_ICON",
    "TD_WARNING_ICON",
    "TEXTSELECTIONGRIPPERPARTS",
    "TEXTSHADOWTYPE",
    "TEXTSTYLEPARTS",
    "TEXT_BODYTEXT",
    "TEXT_BODYTITLE",
    "TEXT_CONTROLLABEL",
    "TEXT_EXPANDED",
    "TEXT_HYPERLINKTEXT",
    "TEXT_INSTRUCTION",
    "TEXT_LABEL",
    "TEXT_MAININSTRUCTION",
    "TEXT_SECONDARYTEXT",
    "THEMESIZE",
    "THEME_PROPERTY_SYMBOL_ID",
    "THUMBBOTTOMSTATES",
    "THUMBLEFTSTATES",
    "THUMBRIGHTSTATES",
    "THUMBSTATES",
    "THUMBTOPSTATES",
    "THUMBVERTSTATES",
    "TIBES_DISABLED",
    "TIBES_FOCUSED",
    "TIBES_HOT",
    "TIBES_NORMAL",
    "TIBES_SELECTED",
    "TICSSTATES",
    "TICSVERTSTATES",
    "TILES_DISABLED",
    "TILES_FOCUSED",
    "TILES_HOT",
    "TILES_NORMAL",
    "TILES_SELECTED",
    "TIRES_DISABLED",
    "TIRES_FOCUSED",
    "TIRES_HOT",
    "TIRES_NORMAL",
    "TIRES_SELECTED",
    "TIS_DISABLED",
    "TIS_FOCUSED",
    "TIS_HOT",
    "TIS_NORMAL",
    "TIS_SELECTED",
    "TITLEBARSTATES",
    "TKP_THUMB",
    "TKP_THUMBBOTTOM",
    "TKP_THUMBLEFT",
    "TKP_THUMBRIGHT",
    "TKP_THUMBTOP",
    "TKP_THUMBVERT",
    "TKP_TICS",
    "TKP_TICSVERT",
    "TKP_TRACK",
    "TKP_TRACKVERT",
    "TKS_NORMAL",
    "TMTVS_RESERVEDHIGH",
    "TMTVS_RESERVEDLOW",
    "TMT_ACCENTCOLORHINT",
    "TMT_ACTIVEBORDER",
    "TMT_ACTIVECAPTION",
    "TMT_ALIAS",
    "TMT_ALPHALEVEL",
    "TMT_ALPHATHRESHOLD",
    "TMT_ALWAYSSHOWSIZINGBAR",
    "TMT_ANIMATIONBUTTONRECT",
    "TMT_ANIMATIONDELAY",
    "TMT_ANIMATIONDURATION",
    "TMT_APPWORKSPACE",
    "TMT_ATLASIMAGE",
    "TMT_ATLASINPUTIMAGE",
    "TMT_ATLASRECT",
    "TMT_AUTHOR",
    "TMT_AUTOSIZE",
    "TMT_BACKGROUND",
    "TMT_BGFILL",
    "TMT_BGTYPE",
    "TMT_BITMAPREF",
    "TMT_BLENDCOLOR",
    "TMT_BODYFONT",
    "TMT_BODYTEXTCOLOR",
    "TMT_BOOL",
    "TMT_BORDERCOLOR",
    "TMT_BORDERCOLORHINT",
    "TMT_BORDERONLY",
    "TMT_BORDERSIZE",
    "TMT_BORDERTYPE",
    "TMT_BTNFACE",
    "TMT_BTNHIGHLIGHT",
    "TMT_BTNSHADOW",
    "TMT_BTNTEXT",
    "TMT_BUTTONALTERNATEFACE",
    "TMT_CAPTIONBARHEIGHT",
    "TMT_CAPTIONBARWIDTH",
    "TMT_CAPTIONFONT",
    "TMT_CAPTIONMARGINS",
    "TMT_CAPTIONTEXT",
    "TMT_CHARSET",
    "TMT_CLASSICVALUE",
    "TMT_COLOR",
    "TMT_COLORIZATIONCOLOR",
    "TMT_COLORIZATIONOPACITY",
    "TMT_COLORSCHEMES",
    "TMT_COMPANY",
    "TMT_COMPOSITED",
    "TMT_COMPOSITEDOPAQUE",
    "TMT_CONTENTALIGNMENT",
    "TMT_CONTENTMARGINS",
    "TMT_COPYRIGHT",
    "TMT_CSSNAME",
    "TMT_CUSTOMSPLITRECT",
    "TMT_DEFAULTPANESIZE",
    "TMT_DESCRIPTION",
    "TMT_DIBDATA",
    "TMT_DISKSTREAM",
    "TMT_DISPLAYNAME",
    "TMT_DKSHADOW3D",
    "TMT_DRAWBORDERS",
    "TMT_EDGEDKSHADOWCOLOR",
    "TMT_EDGEFILLCOLOR",
    "TMT_EDGEHIGHLIGHTCOLOR",
    "TMT_EDGELIGHTCOLOR",
    "TMT_EDGESHADOWCOLOR",
    "TMT_ENUM",
    "TMT_FILENAME",
    "TMT_FILLCOLOR",
    "TMT_FILLCOLORHINT",
    "TMT_FILLTYPE",
    "TMT_FIRSTBOOL",
    "TMT_FIRSTCOLOR",
    "TMT_FIRSTFONT",
    "TMT_FIRSTINT",
    "TMT_FIRSTSIZE",
    "TMT_FIRSTSTRING",
    "TMT_FIRST_RCSTRING_NAME",
    "TMT_FLATMENUS",
    "TMT_FLOAT",
    "TMT_FLOATLIST",
    "TMT_FONT",
    "TMT_FRAMESPERSECOND",
    "TMT_FROMCOLOR1",
    "TMT_FROMCOLOR2",
    "TMT_FROMCOLOR3",
    "TMT_FROMCOLOR4",
    "TMT_FROMCOLOR5",
    "TMT_FROMHUE1",
    "TMT_FROMHUE2",
    "TMT_FROMHUE3",
    "TMT_FROMHUE4",
    "TMT_FROMHUE5",
    "TMT_GLOWCOLOR",
    "TMT_GLOWINTENSITY",
    "TMT_GLYPHDIBDATA",
    "TMT_GLYPHFONT",
    "TMT_GLYPHFONTSIZINGTYPE",
    "TMT_GLYPHIMAGEFILE",
    "TMT_GLYPHINDEX",
    "TMT_GLYPHONLY",
    "TMT_GLYPHTEXTCOLOR",
    "TMT_GLYPHTRANSPARENT",
    "TMT_GLYPHTRANSPARENTCOLOR",
    "TMT_GLYPHTYPE",
    "TMT_GRADIENTACTIVECAPTION",
    "TMT_GRADIENTCOLOR1",
    "TMT_GRADIENTCOLOR2",
    "TMT_GRADIENTCOLOR3",
    "TMT_GRADIENTCOLOR4",
    "TMT_GRADIENTCOLOR5",
    "TMT_GRADIENTINACTIVECAPTION",
    "TMT_GRADIENTRATIO1",
    "TMT_GRADIENTRATIO2",
    "TMT_GRADIENTRATIO3",
    "TMT_GRADIENTRATIO4",
    "TMT_GRADIENTRATIO5",
    "TMT_GRAYTEXT",
    "TMT_HALIGN",
    "TMT_HBITMAP",
    "TMT_HEADING1FONT",
    "TMT_HEADING1TEXTCOLOR",
    "TMT_HEADING2FONT",
    "TMT_HEADING2TEXTCOLOR",
    "TMT_HEIGHT",
    "TMT_HIGHLIGHT",
    "TMT_HIGHLIGHTTEXT",
    "TMT_HOTTRACKING",
    "TMT_ICONEFFECT",
    "TMT_ICONTITLEFONT",
    "TMT_IMAGECOUNT",
    "TMT_IMAGEFILE",
    "TMT_IMAGEFILE1",
    "TMT_IMAGEFILE2",
    "TMT_IMAGEFILE3",
    "TMT_IMAGEFILE4",
    "TMT_IMAGEFILE5",
    "TMT_IMAGEFILE6",
    "TMT_IMAGEFILE7",
    "TMT_IMAGELAYOUT",
    "TMT_IMAGESELECTTYPE",
    "TMT_INACTIVEBORDER",
    "TMT_INACTIVECAPTION",
    "TMT_INACTIVECAPTIONTEXT",
    "TMT_INFOBK",
    "TMT_INFOTEXT",
    "TMT_INT",
    "TMT_INTEGRALSIZING",
    "TMT_INTLIST",
    "TMT_LASTBOOL",
    "TMT_LASTCOLOR",
    "TMT_LASTFONT",
    "TMT_LASTINT",
    "TMT_LASTSIZE",
    "TMT_LASTSTRING",
    "TMT_LASTUPDATED",
    "TMT_LAST_RCSTRING_NAME",
    "TMT_LIGHT3D",
    "TMT_LOCALIZEDMIRRORIMAGE",
    "TMT_MARGINS",
    "TMT_MENU",
    "TMT_MENUBAR",
    "TMT_MENUBARHEIGHT",
    "TMT_MENUBARWIDTH",
    "TMT_MENUFONT",
    "TMT_MENUHILIGHT",
    "TMT_MENUTEXT",
    "TMT_MINCOLORDEPTH",
    "TMT_MINDPI1",
    "TMT_MINDPI2",
    "TMT_MINDPI3",
    "TMT_MINDPI4",
    "TMT_MINDPI5",
    "TMT_MINDPI6",
    "TMT_MINDPI7",
    "TMT_MINSIZE",
    "TMT_MINSIZE1",
    "TMT_MINSIZE2",
    "TMT_MINSIZE3",
    "TMT_MINSIZE4",
    "TMT_MINSIZE5",
    "TMT_MINSIZE6",
    "TMT_MINSIZE7",
    "TMT_MIRRORIMAGE",
    "TMT_MSGBOXFONT",
    "TMT_NAME",
    "TMT_NOETCHEDEFFECT",
    "TMT_NORMALSIZE",
    "TMT_OFFSET",
    "TMT_OFFSETTYPE",
    "TMT_OPACITY",
    "TMT_PADDEDBORDERWIDTH",
    "TMT_PIXELSPERFRAME",
    "TMT_POSITION",
    "TMT_PROGRESSCHUNKSIZE",
    "TMT_PROGRESSSPACESIZE",
    "TMT_RECT",
    "TMT_RESERVEDHIGH",
    "TMT_RESERVEDLOW",
    "TMT_ROUNDCORNERHEIGHT",
    "TMT_ROUNDCORNERWIDTH",
    "TMT_SATURATION",
    "TMT_SCALEDBACKGROUND",
    "TMT_SCROLLBAR",
    "TMT_SCROLLBARHEIGHT",
    "TMT_SCROLLBARWIDTH",
    "TMT_SHADOWCOLOR",
    "TMT_SIZE",
    "TMT_SIZES",
    "TMT_SIZINGBORDERWIDTH",
    "TMT_SIZINGMARGINS",
    "TMT_SIZINGTYPE",
    "TMT_SMALLCAPTIONFONT",
    "TMT_SMCAPTIONBARHEIGHT",
    "TMT_SMCAPTIONBARWIDTH",
    "TMT_SOURCEGROW",
    "TMT_SOURCESHRINK",
    "TMT_STATUSFONT",
    "TMT_STREAM",
    "TMT_STRING",
    "TMT_TEXT",
    "TMT_TEXTAPPLYOVERLAY",
    "TMT_TEXTBORDERCOLOR",
    "TMT_TEXTBORDERSIZE",
    "TMT_TEXTCOLOR",
    "TMT_TEXTCOLORHINT",
    "TMT_TEXTGLOW",
    "TMT_TEXTGLOWSIZE",
    "TMT_TEXTITALIC",
    "TMT_TEXTSHADOWCOLOR",
    "TMT_TEXTSHADOWOFFSET",
    "TMT_TEXTSHADOWTYPE",
    "TMT_TOCOLOR1",
    "TMT_TOCOLOR2",
    "TMT_TOCOLOR3",
    "TMT_TOCOLOR4",
    "TMT_TOCOLOR5",
    "TMT_TOHUE1",
    "TMT_TOHUE2",
    "TMT_TOHUE3",
    "TMT_TOHUE4",
    "TMT_TOHUE5",
    "TMT_TOOLTIP",
    "TMT_TRANSITIONDURATIONS",
    "TMT_TRANSPARENT",
    "TMT_TRANSPARENTCOLOR",
    "TMT_TRUESIZESCALINGTYPE",
    "TMT_TRUESIZESTRETCHMARK",
    "TMT_UNIFORMSIZING",
    "TMT_URL",
    "TMT_USERPICTURE",
    "TMT_VALIGN",
    "TMT_VERSION",
    "TMT_WIDTH",
    "TMT_WINDOW",
    "TMT_WINDOWFRAME",
    "TMT_WINDOWTEXT",
    "TMT_XMLNAME",
    "TNP_ANIMBACKGROUND",
    "TNP_BACKGROUND",
    "TOOLBARCLASSNAME",
    "TOOLBARCLASSNAMEA",
    "TOOLBARCLASSNAMEW",
    "TOOLBARPARTS",
    "TOOLBARSTYLESTATES",
    "TOOLTIPPARTS",
    "TOOLTIPS_CLASS",
    "TOOLTIPS_CLASSA",
    "TOOLTIPS_CLASSW",
    "TOOLTIP_FLAGS",
    "TOPTABITEMBOTHEDGESTATES",
    "TOPTABITEMLEFTEDGESTATES",
    "TOPTABITEMRIGHTEDGESTATES",
    "TOPTABITEMSTATES",
    "TOUCH_HIT_TESTING_INPUT",
    "TOUCH_HIT_TESTING_PROXIMITY_EVALUATION",
    "TP_BUTTON",
    "TP_DROPDOWNBUTTON",
    "TP_DROPDOWNBUTTONGLYPH",
    "TP_SEPARATOR",
    "TP_SEPARATORVERT",
    "TP_SPLITBUTTON",
    "TP_SPLITBUTTONDROPDOWN",
    "TRACKBARPARTS",
    "TRACKBARSTYLESTATES",
    "TRACKBAR_CLASS",
    "TRACKBAR_CLASSA",
    "TRACKBAR_CLASSW",
    "TRACKSTATES",
    "TRACKVERTSTATES",
    "TRAILINGGRIDCELLSTATES",
    "TRAILINGGRIDCELLUPPERSTATES",
    "TRANSPARENTBACKGROUNDSTATES",
    "TRANSPARENTBARSTATES",
    "TRANSPARENTBARVERTSTATES",
    "TRAYNOTIFYPARTS",
    "TREEITEMSTATES",
    "TREEVIEWPARTS",
    "TREE_VIEW_ITEM_STATE_FLAGS",
    "TREIS_DISABLED",
    "TREIS_HOT",
    "TREIS_HOTSELECTED",
    "TREIS_NORMAL",
    "TREIS_SELECTED",
    "TREIS_SELECTEDNOTFOCUS",
    "TRS_NORMAL",
    "TRUESIZESCALINGTYPE",
    "TRVS_NORMAL",
    "TSGP_GRIPPER",
    "TSGS_CENTERED",
    "TSGS_NORMAL",
    "TSST_DPI",
    "TSST_NONE",
    "TSST_SIZE",
    "TSS_NORMAL",
    "TST_CONTINUOUS",
    "TST_NONE",
    "TST_SINGLE",
    "TSVS_NORMAL",
    "TS_CHECKED",
    "TS_CONTROLLABEL_DISABLED",
    "TS_CONTROLLABEL_NORMAL",
    "TS_DISABLED",
    "TS_DRAW",
    "TS_HOT",
    "TS_HOTCHECKED",
    "TS_HYPERLINK_DISABLED",
    "TS_HYPERLINK_HOT",
    "TS_HYPERLINK_NORMAL",
    "TS_HYPERLINK_PRESSED",
    "TS_MIN",
    "TS_NEARHOT",
    "TS_NORMAL",
    "TS_OTHERSIDEHOT",
    "TS_PRESSED",
    "TS_TRUE",
    "TTBSS_POINTINGDOWNCENTERED",
    "TTBSS_POINTINGDOWNLEFTWALL",
    "TTBSS_POINTINGDOWNRIGHTWALL",
    "TTBSS_POINTINGUPCENTERED",
    "TTBSS_POINTINGUPLEFTWALL",
    "TTBSS_POINTINGUPRIGHTWALL",
    "TTBS_LINK",
    "TTBS_NORMAL",
    "TTCS_HOT",
    "TTCS_NORMAL",
    "TTCS_PRESSED",
    "TTDT_AUTOMATIC",
    "TTDT_AUTOPOP",
    "TTDT_INITIAL",
    "TTDT_RESHOW",
    "TTFT_CUBIC_BEZIER",
    "TTFT_UNDEFINED",
    "TTF_ABSOLUTE",
    "TTF_CENTERTIP",
    "TTF_DI_SETITEM",
    "TTF_IDISHWND",
    "TTF_PARSELINKS",
    "TTF_RTLREADING",
    "TTF_SUBCLASS",
    "TTF_TRACK",
    "TTF_TRANSPARENT",
    "TTGETTITLE",
    "TTHITTESTINFOA",
    "TTHITTESTINFOW",
    "TTIBES_DISABLED",
    "TTIBES_FOCUSED",
    "TTIBES_HOT",
    "TTIBES_NORMAL",
    "TTIBES_SELECTED",
    "TTILES_DISABLED",
    "TTILES_FOCUSED",
    "TTILES_HOT",
    "TTILES_NORMAL",
    "TTILES_SELECTED",
    "TTIRES_DISABLED",
    "TTIRES_FOCUSED",
    "TTIRES_HOT",
    "TTIRES_NORMAL",
    "TTIRES_SELECTED",
    "TTIS_DISABLED",
    "TTIS_FOCUSED",
    "TTIS_HOT",
    "TTIS_NORMAL",
    "TTIS_SELECTED",
    "TTI_ERROR",
    "TTI_ERROR_LARGE",
    "TTI_INFO",
    "TTI_INFO_LARGE",
    "TTI_NONE",
    "TTI_WARNING",
    "TTI_WARNING_LARGE",
    "TTM_ACTIVATE",
    "TTM_ADDTOOL",
    "TTM_ADDTOOLA",
    "TTM_ADDTOOLW",
    "TTM_ADJUSTRECT",
    "TTM_DELTOOL",
    "TTM_DELTOOLA",
    "TTM_DELTOOLW",
    "TTM_ENUMTOOLS",
    "TTM_ENUMTOOLSA",
    "TTM_ENUMTOOLSW",
    "TTM_GETBUBBLESIZE",
    "TTM_GETCURRENTTOOL",
    "TTM_GETCURRENTTOOLA",
    "TTM_GETCURRENTTOOLW",
    "TTM_GETDELAYTIME",
    "TTM_GETMARGIN",
    "TTM_GETMAXTIPWIDTH",
    "TTM_GETTEXT",
    "TTM_GETTEXTA",
    "TTM_GETTEXTW",
    "TTM_GETTIPBKCOLOR",
    "TTM_GETTIPTEXTCOLOR",
    "TTM_GETTITLE",
    "TTM_GETTOOLCOUNT",
    "TTM_GETTOOLINFO",
    "TTM_GETTOOLINFOA",
    "TTM_GETTOOLINFOW",
    "TTM_HITTEST",
    "TTM_HITTESTA",
    "TTM_HITTESTW",
    "TTM_NEWTOOLRECT",
    "TTM_NEWTOOLRECTA",
    "TTM_NEWTOOLRECTW",
    "TTM_POP",
    "TTM_POPUP",
    "TTM_RELAYEVENT",
    "TTM_SETDELAYTIME",
    "TTM_SETMARGIN",
    "TTM_SETMAXTIPWIDTH",
    "TTM_SETTIPBKCOLOR",
    "TTM_SETTIPTEXTCOLOR",
    "TTM_SETTITLE",
    "TTM_SETTITLEA",
    "TTM_SETTITLEW",
    "TTM_SETTOOLINFO",
    "TTM_SETTOOLINFOA",
    "TTM_SETTOOLINFOW",
    "TTM_SETWINDOWTHEME",
    "TTM_TRACKACTIVATE",
    "TTM_TRACKPOSITION",
    "TTM_UPDATE",
    "TTM_UPDATETIPTEXT",
    "TTM_UPDATETIPTEXTA",
    "TTM_UPDATETIPTEXTW",
    "TTM_WINDOWFROMPOINT",
    "TTP_BALLOON",
    "TTP_BALLOONSTEM",
    "TTP_BALLOONTITLE",
    "TTP_CLOSE",
    "TTP_STANDARD",
    "TTP_STANDARDTITLE",
    "TTP_WRENCH",
    "TTSS_LINK",
    "TTSS_NORMAL",
    "TTS_ALWAYSTIP",
    "TTS_BALLOON",
    "TTS_CLOSE",
    "TTS_NOANIMATE",
    "TTS_NOFADE",
    "TTS_NOPREFIX",
    "TTS_USEVISUALSTYLE",
    "TTTOOLINFOA",
    "TTTOOLINFOW",
    "TTWS_HOT",
    "TTWS_NORMAL",
    "TTWS_PRESSED",
    "TUBS_DISABLED",
    "TUBS_FOCUSED",
    "TUBS_HOT",
    "TUBS_NORMAL",
    "TUBS_PRESSED",
    "TUS_DISABLED",
    "TUS_FOCUSED",
    "TUS_HOT",
    "TUS_NORMAL",
    "TUS_PRESSED",
    "TUTS_DISABLED",
    "TUTS_FOCUSED",
    "TUTS_HOT",
    "TUTS_NORMAL",
    "TUTS_PRESSED",
    "TUVLS_DISABLED",
    "TUVLS_FOCUSED",
    "TUVLS_HOT",
    "TUVLS_NORMAL",
    "TUVLS_PRESSED",
    "TUVRS_DISABLED",
    "TUVRS_FOCUSED",
    "TUVRS_HOT",
    "TUVRS_NORMAL",
    "TUVRS_PRESSED",
    "TUVS_DISABLED",
    "TUVS_FOCUSED",
    "TUVS_HOT",
    "TUVS_NORMAL",
    "TUVS_PRESSED",
    "TVCDRF_NOIMAGES",
    "TVC_BYKEYBOARD",
    "TVC_BYMOUSE",
    "TVC_UNKNOWN",
    "TVE_COLLAPSE",
    "TVE_COLLAPSERESET",
    "TVE_EXPAND",
    "TVE_EXPANDPARTIAL",
    "TVE_TOGGLE",
    "TVGETITEMPARTRECTINFO",
    "TVGIPR_BUTTON",
    "TVGN_CARET",
    "TVGN_CHILD",
    "TVGN_DROPHILITE",
    "TVGN_FIRSTVISIBLE",
    "TVGN_LASTVISIBLE",
    "TVGN_NEXT",
    "TVGN_NEXTSELECTED",
    "TVGN_NEXTVISIBLE",
    "TVGN_PARENT",
    "TVGN_PREVIOUS",
    "TVGN_PREVIOUSVISIBLE",
    "TVGN_ROOT",
    "TVHITTESTINFO",
    "TVHITTESTINFO_FLAGS",
    "TVHT_ABOVE",
    "TVHT_BELOW",
    "TVHT_NOWHERE",
    "TVHT_ONITEM",
    "TVHT_ONITEMBUTTON",
    "TVHT_ONITEMICON",
    "TVHT_ONITEMINDENT",
    "TVHT_ONITEMLABEL",
    "TVHT_ONITEMRIGHT",
    "TVHT_ONITEMSTATEICON",
    "TVHT_TOLEFT",
    "TVHT_TORIGHT",
    "TVIF_CHILDREN",
    "TVIF_DI_SETITEM",
    "TVIF_EXPANDEDIMAGE",
    "TVIF_HANDLE",
    "TVIF_IMAGE",
    "TVIF_INTEGRAL",
    "TVIF_PARAM",
    "TVIF_SELECTEDIMAGE",
    "TVIF_STATE",
    "TVIF_STATEEX",
    "TVIF_TEXT",
    "TVINSERTSTRUCTA",
    "TVINSERTSTRUCTW",
    "TVIS_BOLD",
    "TVIS_CUT",
    "TVIS_DROPHILITED",
    "TVIS_EXPANDED",
    "TVIS_EXPANDEDONCE",
    "TVIS_EXPANDPARTIAL",
    "TVIS_EX_ALL",
    "TVIS_EX_DISABLED",
    "TVIS_EX_FLAT",
    "TVIS_OVERLAYMASK",
    "TVIS_SELECTED",
    "TVIS_STATEIMAGEMASK",
    "TVIS_USERMASK",
    "TVITEMA",
    "TVITEMEXA",
    "TVITEMEXW",
    "TVITEMEXW_CHILDREN",
    "TVITEMPART",
    "TVITEMW",
    "TVITEM_MASK",
    "TVI_FIRST",
    "TVI_LAST",
    "TVI_ROOT",
    "TVI_SORT",
    "TVM_CREATEDRAGIMAGE",
    "TVM_DELETEITEM",
    "TVM_EDITLABEL",
    "TVM_EDITLABELA",
    "TVM_EDITLABELW",
    "TVM_ENDEDITLABELNOW",
    "TVM_ENSUREVISIBLE",
    "TVM_EXPAND",
    "TVM_GETBKCOLOR",
    "TVM_GETCOUNT",
    "TVM_GETEDITCONTROL",
    "TVM_GETEXTENDEDSTYLE",
    "TVM_GETIMAGELIST",
    "TVM_GETINDENT",
    "TVM_GETINSERTMARKCOLOR",
    "TVM_GETISEARCHSTRING",
    "TVM_GETISEARCHSTRINGA",
    "TVM_GETISEARCHSTRINGW",
    "TVM_GETITEM",
    "TVM_GETITEMA",
    "TVM_GETITEMHEIGHT",
    "TVM_GETITEMPARTRECT",
    "TVM_GETITEMRECT",
    "TVM_GETITEMSTATE",
    "TVM_GETITEMW",
    "TVM_GETLINECOLOR",
    "TVM_GETNEXTITEM",
    "TVM_GETSCROLLTIME",
    "TVM_GETSELECTEDCOUNT",
    "TVM_GETTEXTCOLOR",
    "TVM_GETTOOLTIPS",
    "TVM_GETUNICODEFORMAT",
    "TVM_GETVISIBLECOUNT",
    "TVM_HITTEST",
    "TVM_INSERTITEM",
    "TVM_INSERTITEMA",
    "TVM_INSERTITEMW",
    "TVM_MAPACCIDTOHTREEITEM",
    "TVM_MAPHTREEITEMTOACCID",
    "TVM_SELECTITEM",
    "TVM_SETAUTOSCROLLINFO",
    "TVM_SETBKCOLOR",
    "TVM_SETBORDER",
    "TVM_SETEXTENDEDSTYLE",
    "TVM_SETHOT",
    "TVM_SETIMAGELIST",
    "TVM_SETINDENT",
    "TVM_SETINSERTMARK",
    "TVM_SETINSERTMARKCOLOR",
    "TVM_SETITEM",
    "TVM_SETITEMA",
    "TVM_SETITEMHEIGHT",
    "TVM_SETITEMW",
    "TVM_SETLINECOLOR",
    "TVM_SETSCROLLTIME",
    "TVM_SETTEXTCOLOR",
    "TVM_SETTOOLTIPS",
    "TVM_SETUNICODEFORMAT",
    "TVM_SHOWINFOTIP",
    "TVM_SORTCHILDREN",
    "TVM_SORTCHILDRENCB",
    "TVNRET_DEFAULT",
    "TVNRET_SKIPNEW",
    "TVNRET_SKIPOLD",
    "TVP_BRANCH",
    "TVP_GLYPH",
    "TVP_HOTGLYPH",
    "TVP_TREEITEM",
    "TVSBF_XBORDER",
    "TVSBF_YBORDER",
    "TVSIL_NORMAL",
    "TVSIL_STATE",
    "TVSI_NOSINGLEEXPAND",
    "TVSORTCB",
    "TVS_CHECKBOXES",
    "TVS_DISABLEDRAGDROP",
    "TVS_EDITLABELS",
    "TVS_EX_AUTOHSCROLL",
    "TVS_EX_DIMMEDCHECKBOXES",
    "TVS_EX_DOUBLEBUFFER",
    "TVS_EX_DRAWIMAGEASYNC",
    "TVS_EX_EXCLUSIONCHECKBOXES",
    "TVS_EX_FADEINOUTEXPANDOS",
    "TVS_EX_MULTISELECT",
    "TVS_EX_NOINDENTSTATE",
    "TVS_EX_NOSINGLECOLLAPSE",
    "TVS_EX_PARTIALCHECKBOXES",
    "TVS_EX_RICHTOOLTIP",
    "TVS_FULLROWSELECT",
    "TVS_HASBUTTONS",
    "TVS_HASLINES",
    "TVS_INFOTIP",
    "TVS_LINESATROOT",
    "TVS_NOHSCROLL",
    "TVS_NONEVENHEIGHT",
    "TVS_NOSCROLL",
    "TVS_NOTOOLTIPS",
    "TVS_RTLREADING",
    "TVS_SHOWSELALWAYS",
    "TVS_SINGLEEXPAND",
    "TVS_TRACKSELECT",
    "TV_FIRST",
    "TaskDialog",
    "TaskDialogIndirect",
    "UDACCEL",
    "UDM_GETACCEL",
    "UDM_GETBASE",
    "UDM_GETBUDDY",
    "UDM_GETPOS",
    "UDM_GETPOS32",
    "UDM_GETRANGE",
    "UDM_GETRANGE32",
    "UDM_GETUNICODEFORMAT",
    "UDM_SETACCEL",
    "UDM_SETBASE",
    "UDM_SETBUDDY",
    "UDM_SETPOS",
    "UDM_SETPOS32",
    "UDM_SETRANGE",
    "UDM_SETRANGE32",
    "UDM_SETUNICODEFORMAT",
    "UDS_ALIGNLEFT",
    "UDS_ALIGNRIGHT",
    "UDS_ARROWKEYS",
    "UDS_AUTOBUDDY",
    "UDS_HORZ",
    "UDS_HOTTRACK",
    "UDS_NOTHOUSANDS",
    "UDS_SETBUDDYINT",
    "UDS_WRAP",
    "UD_MAXVAL",
    "UPDATEMETADATASTATES",
    "UPDOWN_CLASS",
    "UPDOWN_CLASSA",
    "UPDOWN_CLASSW",
    "UPHORZSTATES",
    "UPHZS_DISABLED",
    "UPHZS_HOT",
    "UPHZS_NORMAL",
    "UPHZS_PRESSED",
    "UPSTATES",
    "UPS_DISABLED",
    "UPS_HOT",
    "UPS_NORMAL",
    "UPS_PRESSED",
    "USAGE_PROPERTIES",
    "USERTILEPARTS",
    "UTP_HOVERBACKGROUND",
    "UTP_STROKEBACKGROUND",
    "UTS_HOT",
    "UTS_NORMAL",
    "UTS_PRESSED",
    "UninitializeFlatSB",
    "UpdatePanningFeedback",
    "VALIDBITS",
    "VALIGN",
    "VA_BOTTOM",
    "VA_CENTER",
    "VA_TOP",
    "VERTSCROLLSTATES",
    "VERTTHUMBSTATES",
    "VIEW_DETAILS",
    "VIEW_LARGEICONS",
    "VIEW_LIST",
    "VIEW_NETCONNECT",
    "VIEW_NETDISCONNECT",
    "VIEW_NEWFOLDER",
    "VIEW_PARENTFOLDER",
    "VIEW_SMALLICONS",
    "VIEW_SORTDATE",
    "VIEW_SORTNAME",
    "VIEW_SORTSIZE",
    "VIEW_SORTTYPE",
    "VIEW_VIEWMENU",
    "VSCLASS_AEROWIZARD",
    "VSCLASS_AEROWIZARDSTYLE",
    "VSCLASS_BUTTON",
    "VSCLASS_BUTTONSTYLE",
    "VSCLASS_CLOCK",
    "VSCLASS_COMBOBOX",
    "VSCLASS_COMBOBOXSTYLE",
    "VSCLASS_COMMUNICATIONS",
    "VSCLASS_COMMUNICATIONSSTYLE",
    "VSCLASS_CONTROLPANEL",
    "VSCLASS_CONTROLPANELSTYLE",
    "VSCLASS_DATEPICKER",
    "VSCLASS_DATEPICKERSTYLE",
    "VSCLASS_DRAGDROP",
    "VSCLASS_DRAGDROPSTYLE",
    "VSCLASS_EDIT",
    "VSCLASS_EDITSTYLE",
    "VSCLASS_EMPTYMARKUP",
    "VSCLASS_EXPLORERBAR",
    "VSCLASS_EXPLORERBARSTYLE",
    "VSCLASS_FLYOUT",
    "VSCLASS_FLYOUTSTYLE",
    "VSCLASS_HEADER",
    "VSCLASS_HEADERSTYLE",
    "VSCLASS_LINK",
    "VSCLASS_LISTBOX",
    "VSCLASS_LISTBOXSTYLE",
    "VSCLASS_LISTVIEW",
    "VSCLASS_LISTVIEWSTYLE",
    "VSCLASS_MENU",
    "VSCLASS_MENUBAND",
    "VSCLASS_MENUSTYLE",
    "VSCLASS_MONTHCAL",
    "VSCLASS_NAVIGATION",
    "VSCLASS_PAGE",
    "VSCLASS_PROGRESS",
    "VSCLASS_PROGRESSSTYLE",
    "VSCLASS_REBAR",
    "VSCLASS_REBARSTYLE",
    "VSCLASS_SCROLLBAR",
    "VSCLASS_SCROLLBARSTYLE",
    "VSCLASS_SPIN",
    "VSCLASS_SPINSTYLE",
    "VSCLASS_STARTPANEL",
    "VSCLASS_STATIC",
    "VSCLASS_STATUS",
    "VSCLASS_STATUSSTYLE",
    "VSCLASS_TAB",
    "VSCLASS_TABSTYLE",
    "VSCLASS_TASKBAND",
    "VSCLASS_TASKBAR",
    "VSCLASS_TASKDIALOG",
    "VSCLASS_TASKDIALOGSTYLE",
    "VSCLASS_TEXTSELECTIONGRIPPER",
    "VSCLASS_TEXTSTYLE",
    "VSCLASS_TOOLBAR",
    "VSCLASS_TOOLBARSTYLE",
    "VSCLASS_TOOLTIP",
    "VSCLASS_TOOLTIPSTYLE",
    "VSCLASS_TRACKBAR",
    "VSCLASS_TRACKBARSTYLE",
    "VSCLASS_TRAYNOTIFY",
    "VSCLASS_TREEVIEW",
    "VSCLASS_TREEVIEWSTYLE",
    "VSCLASS_USERTILE",
    "VSCLASS_WINDOW",
    "VSCLASS_WINDOWSTYLE",
    "VSS_DISABLED",
    "VSS_HOT",
    "VSS_NORMAL",
    "VSS_PUSHED",
    "VTS_DISABLED",
    "VTS_HOT",
    "VTS_NORMAL",
    "VTS_PUSHED",
    "WARNINGSTATES",
    "WB_CLASSIFY",
    "WB_ISDELIMITER",
    "WB_LEFT",
    "WB_LEFTBREAK",
    "WB_MOVEWORDLEFT",
    "WB_MOVEWORDRIGHT",
    "WB_RIGHT",
    "WB_RIGHTBREAK",
    "WC_BUTTON",
    "WC_BUTTONA",
    "WC_BUTTONW",
    "WC_COMBOBOX",
    "WC_COMBOBOXA",
    "WC_COMBOBOXEX",
    "WC_COMBOBOXEXA",
    "WC_COMBOBOXEXW",
    "WC_COMBOBOXW",
    "WC_EDIT",
    "WC_EDITA",
    "WC_EDITW",
    "WC_HEADER",
    "WC_HEADERA",
    "WC_HEADERW",
    "WC_IPADDRESS",
    "WC_IPADDRESSA",
    "WC_IPADDRESSW",
    "WC_LINK",
    "WC_LISTBOX",
    "WC_LISTBOXA",
    "WC_LISTBOXW",
    "WC_LISTVIEW",
    "WC_LISTVIEWA",
    "WC_LISTVIEWW",
    "WC_NATIVEFONTCTL",
    "WC_NATIVEFONTCTLA",
    "WC_NATIVEFONTCTLW",
    "WC_PAGESCROLLER",
    "WC_PAGESCROLLERA",
    "WC_PAGESCROLLERW",
    "WC_SCROLLBAR",
    "WC_SCROLLBARA",
    "WC_SCROLLBARW",
    "WC_STATIC",
    "WC_STATICA",
    "WC_STATICW",
    "WC_TABCONTROL",
    "WC_TABCONTROLA",
    "WC_TABCONTROLW",
    "WC_TREEVIEW",
    "WC_TREEVIEWA",
    "WC_TREEVIEWW",
    "WINDOWPARTS",
    "WINDOWTHEMEATTRIBUTETYPE",
    "WIZ_BODYCX",
    "WIZ_BODYX",
    "WIZ_CXBMP",
    "WIZ_CXDLG",
    "WIZ_CYDLG",
    "WM_CTLCOLOR",
    "WM_MOUSEHOVER",
    "WM_MOUSELEAVE",
    "WORD_BREAK_ACTION",
    "WP_BORDER",
    "WP_CAPTION",
    "WP_CAPTIONSIZINGTEMPLATE",
    "WP_CLOSEBUTTON",
    "WP_DIALOG",
    "WP_FRAME",
    "WP_FRAMEBOTTOM",
    "WP_FRAMEBOTTOMSIZINGTEMPLATE",
    "WP_FRAMELEFT",
    "WP_FRAMELEFTSIZINGTEMPLATE",
    "WP_FRAMERIGHT",
    "WP_FRAMERIGHTSIZINGTEMPLATE",
    "WP_HELPBUTTON",
    "WP_HORZSCROLL",
    "WP_HORZTHUMB",
    "WP_MAXBUTTON",
    "WP_MAXCAPTION",
    "WP_MDICLOSEBUTTON",
    "WP_MDIHELPBUTTON",
    "WP_MDIMINBUTTON",
    "WP_MDIRESTOREBUTTON",
    "WP_MDISYSBUTTON",
    "WP_MINBUTTON",
    "WP_MINCAPTION",
    "WP_RESTOREBUTTON",
    "WP_SMALLCAPTION",
    "WP_SMALLCAPTIONSIZINGTEMPLATE",
    "WP_SMALLCLOSEBUTTON",
    "WP_SMALLFRAMEBOTTOM",
    "WP_SMALLFRAMEBOTTOMSIZINGTEMPLATE",
    "WP_SMALLFRAMELEFT",
    "WP_SMALLFRAMELEFTSIZINGTEMPLATE",
    "WP_SMALLFRAMERIGHT",
    "WP_SMALLFRAMERIGHTSIZINGTEMPLATE",
    "WP_SMALLMAXCAPTION",
    "WP_SMALLMINCAPTION",
    "WP_SYSBUTTON",
    "WP_VERTSCROLL",
    "WP_VERTTHUMB",
    "WRENCHSTATES",
    "WSB_PROP",
    "WSB_PROP_CXHSCROLL",
    "WSB_PROP_CXHTHUMB",
    "WSB_PROP_CXVSCROLL",
    "WSB_PROP_CYHSCROLL",
    "WSB_PROP_CYVSCROLL",
    "WSB_PROP_CYVTHUMB",
    "WSB_PROP_HBKGCOLOR",
    "WSB_PROP_HSTYLE",
    "WSB_PROP_MASK",
    "WSB_PROP_PALETTE",
    "WSB_PROP_VBKGCOLOR",
    "WSB_PROP_VSTYLE",
    "WSB_PROP_WINSTYLE",
    "WTA_NONCLIENT",
    "WTA_OPTIONS",
    "WTNCA_NODRAWCAPTION",
    "WTNCA_NODRAWICON",
    "WTNCA_NOMIRRORHELP",
    "WTNCA_NOSYSMENU",
    "_LI_METRIC",
    "chx1",
    "chx10",
    "chx11",
    "chx12",
    "chx13",
    "chx14",
    "chx15",
    "chx16",
    "chx2",
    "chx3",
    "chx4",
    "chx5",
    "chx6",
    "chx7",
    "chx8",
    "chx9",
    "cmb1",
    "cmb10",
    "cmb11",
    "cmb12",
    "cmb13",
    "cmb14",
    "cmb15",
    "cmb16",
    "cmb2",
    "cmb3",
    "cmb4",
    "cmb5",
    "cmb6",
    "cmb7",
    "cmb8",
    "cmb9",
    "ctl1",
    "ctlFirst",
    "ctlLast",
    "edt1",
    "edt10",
    "edt11",
    "edt12",
    "edt13",
    "edt14",
    "edt15",
    "edt16",
    "edt2",
    "edt3",
    "edt4",
    "edt5",
    "edt6",
    "edt7",
    "edt8",
    "edt9",
    "frm1",
    "frm2",
    "frm3",
    "frm4",
    "grp1",
    "grp2",
    "grp3",
    "grp4",
    "ico1",
    "ico2",
    "ico3",
    "ico4",
    "lst1",
    "lst10",
    "lst11",
    "lst12",
    "lst13",
    "lst14",
    "lst15",
    "lst16",
    "lst2",
    "lst3",
    "lst4",
    "lst5",
    "lst6",
    "lst7",
    "lst8",
    "lst9",
    "psh1",
    "psh10",
    "psh11",
    "psh12",
    "psh13",
    "psh14",
    "psh15",
    "psh16",
    "psh2",
    "psh3",
    "psh4",
    "psh5",
    "psh6",
    "psh7",
    "psh8",
    "psh9",
    "pshHelp",
    "rad1",
    "rad10",
    "rad11",
    "rad12",
    "rad13",
    "rad14",
    "rad15",
    "rad16",
    "rad2",
    "rad3",
    "rad4",
    "rad5",
    "rad6",
    "rad7",
    "rad8",
    "rad9",
    "rct1",
    "rct2",
    "rct3",
    "rct4",
    "scr1",
    "scr2",
    "scr3",
    "scr4",
    "scr5",
    "scr6",
    "scr7",
    "scr8",
    "stc1",
    "stc10",
    "stc11",
    "stc12",
    "stc13",
    "stc14",
    "stc15",
    "stc16",
    "stc17",
    "stc18",
    "stc19",
    "stc2",
    "stc20",
    "stc21",
    "stc22",
    "stc23",
    "stc24",
    "stc25",
    "stc26",
    "stc27",
    "stc28",
    "stc29",
    "stc3",
    "stc30",
    "stc31",
    "stc32",
    "stc4",
    "stc5",
    "stc6",
    "stc7",
    "stc8",
    "stc9",
]
