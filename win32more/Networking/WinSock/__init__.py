from __future__ import annotations
from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, SUCCEEDED, FAILED, cfunctype, winfunctype, commethod, cfunctype_pointer, winfunctype_pointer, press, make_head
import win32more.Foundation
import win32more.Networking.WinSock
import win32more.System.Com
import win32more.System.IO
import win32more.System.Kernel
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        prototype = globals()[f'{name}_head']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, press(prototype))
    return getattr(_module, name)
def __dir__():
    return __all__
class AAL_PARAMETERS_IE(Structure):
    AALType: win32more.Networking.WinSock.AAL_TYPE
    AALSpecificParameters: _AALSpecificParameters_e__Union
    class _AALSpecificParameters_e__Union(Union):
        AAL5Parameters: win32more.Networking.WinSock.AAL5_PARAMETERS
        AALUserParameters: win32more.Networking.WinSock.AALUSER_PARAMETERS
AAL_TYPE = Int32
AALTYPE_5: AAL_TYPE = 5
AALTYPE_USER: AAL_TYPE = 16
class AAL5_PARAMETERS(Structure):
    ForwardMaxCPCSSDUSize: UInt32
    BackwardMaxCPCSSDUSize: UInt32
    Mode: Byte
    SSCSType: Byte
class AALUSER_PARAMETERS(Structure):
    UserDefined: UInt32
ADDRESS_FAMILY = UInt16
AF_INET: ADDRESS_FAMILY = 2
AF_INET6: ADDRESS_FAMILY = 23
AF_UNSPEC: ADDRESS_FAMILY = 0
class ADDRINFO_DNS_SERVER(Structure):
    ai_servertype: UInt32
    ai_flags: UInt64
    ai_addrlen: UInt32
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        ai_template: win32more.Foundation.PWSTR
class ADDRINFOA(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOA_head)
class ADDRINFOEX2A(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEX2A_head)
    ai_version: Int32
    ai_fqdn: win32more.Foundation.PSTR
class ADDRINFOEX2W(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PWSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEX2W_head)
    ai_version: Int32
    ai_fqdn: win32more.Foundation.PWSTR
class ADDRINFOEX3(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PWSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEX3_head)
    ai_version: Int32
    ai_fqdn: win32more.Foundation.PWSTR
    ai_interfaceindex: Int32
class ADDRINFOEX4(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PWSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEX4_head)
    ai_version: Int32
    ai_fqdn: win32more.Foundation.PWSTR
    ai_interfaceindex: Int32
    ai_resolutionhandle: win32more.Foundation.HANDLE
class ADDRINFOEX5(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PWSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEX5_head)
    ai_version: Int32
    ai_fqdn: win32more.Foundation.PWSTR
    ai_interfaceindex: Int32
    ai_resolutionhandle: win32more.Foundation.HANDLE
    ai_ttl: UInt32
class ADDRINFOEX6(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PWSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEX5_head)
    ai_version: Int32
    ai_fqdn: win32more.Foundation.PWSTR
    ai_interfaceindex: Int32
    ai_resolutionhandle: win32more.Foundation.HANDLE
    ai_ttl: UInt32
    ai_numservers: UInt32
    ai_servers: POINTER(win32more.Networking.WinSock.ADDRINFO_DNS_SERVER_head)
    ai_responseflags: UInt64
class ADDRINFOEXA(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEXA_head)
class ADDRINFOEXW(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PWSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_blob: c_void_p
    ai_bloblen: UIntPtr
    ai_provider: POINTER(Guid)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOEXW_head)
class ADDRINFOW(Structure):
    ai_flags: Int32
    ai_family: Int32
    ai_socktype: Int32
    ai_protocol: Int32
    ai_addrlen: UIntPtr
    ai_canonname: win32more.Foundation.PWSTR
    ai_addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    ai_next: POINTER(win32more.Networking.WinSock.ADDRINFOW_head)
class AFPROTOCOLS(Structure):
    iAddressFamily: Int32
    iProtocol: Int32
SOCKET_DEFAULT2_QM_POLICY: Guid = Guid('aec2ef9c-3a4d-4d3e-88-42-23-99-42-e3-9a-47')
REAL_TIME_NOTIFICATION_CAPABILITY: Guid = Guid('6b59819a-5cae-492d-a9-01-2a-3c-2c-50-16-4f')
REAL_TIME_NOTIFICATION_CAPABILITY_EX: Guid = Guid('6843da03-154a-4616-a5-08-44-37-12-95-f9-6b')
ASSOCIATE_NAMERES_CONTEXT: Guid = Guid('59a38b67-d4fe-46e1-ba-3c-87-ea-74-ca-30-49')
SIO_RCVALL: UInt32 = 2550136833
SIO_RCVALL_MCAST: UInt32 = 2550136834
SIO_RCVALL_IGMPMCAST: UInt32 = 2550136835
SIO_KEEPALIVE_VALS: UInt32 = 2550136836
SIO_ABSORB_RTRALERT: UInt32 = 2550136837
SIO_UCAST_IF: UInt32 = 2550136838
SIO_LIMIT_BROADCASTS: UInt32 = 2550136839
SIO_INDEX_BIND: UInt32 = 2550136840
SIO_INDEX_MCASTIF: UInt32 = 2550136841
SIO_INDEX_ADD_MCAST: UInt32 = 2550136842
SIO_INDEX_DEL_MCAST: UInt32 = 2550136843
SIO_RCVALL_MCAST_IF: UInt32 = 2550136845
SIO_RCVALL_IF: UInt32 = 2550136846
SIO_LOOPBACK_FAST_PATH: UInt32 = 2550136848
SIO_TCP_INITIAL_RTO: UInt32 = 2550136849
SIO_APPLY_TRANSPORT_SETTING: UInt32 = 2550136851
SIO_QUERY_TRANSPORT_SETTING: UInt32 = 2550136852
SIO_TCP_SET_ICW: UInt32 = 2550136854
SIO_TCP_SET_ACK_FREQUENCY: UInt32 = 2550136855
SIO_SET_PRIORITY_HINT: UInt32 = 2550136856
SIO_PRIORITY_HINT: UInt32 = 2550136856
SIO_TCP_INFO: UInt32 = 3623878695
SIO_CPU_AFFINITY: UInt32 = 2550136853
SIO_TIMESTAMPING: UInt32 = 2550137067
TIMESTAMPING_FLAG_RX: UInt32 = 1
TIMESTAMPING_FLAG_TX: UInt32 = 2
SO_TIMESTAMP: UInt32 = 12298
SO_TIMESTAMP_ID: UInt32 = 12299
SIO_GET_TX_TIMESTAMP: UInt32 = 2550137066
TCP_INITIAL_RTO_DEFAULT_RTT: UInt32 = 0
TCP_INITIAL_RTO_DEFAULT_MAX_SYN_RETRANSMISSIONS: UInt32 = 0
SIO_ACQUIRE_PORT_RESERVATION: UInt32 = 2550136932
SIO_RELEASE_PORT_RESERVATION: UInt32 = 2550136933
SIO_ASSOCIATE_PORT_RESERVATION: UInt32 = 2550136934
SIO_SET_SECURITY: UInt32 = 2550137032
SIO_QUERY_SECURITY: UInt32 = 3623878857
SIO_SET_PEER_TARGET_NAME: UInt32 = 2550137034
SIO_DELETE_PEER_TARGET_NAME: UInt32 = 2550137035
SIO_QUERY_WFP_CONNECTION_REDIRECT_RECORDS: UInt32 = 2550137052
SIO_QUERY_WFP_CONNECTION_REDIRECT_CONTEXT: UInt32 = 2550137053
SIO_SET_WFP_CONNECTION_REDIRECT_RECORDS: UInt32 = 2550137054
SIO_SOCKET_USAGE_NOTIFICATION: UInt32 = 2550137036
SOCKET_SETTINGS_GUARANTEE_ENCRYPTION: UInt32 = 1
SOCKET_SETTINGS_ALLOW_INSECURE: UInt32 = 2
SOCKET_SETTINGS_IPSEC_SKIP_FILTER_INSTANTIATION: UInt32 = 1
SOCKET_SETTINGS_IPSEC_OPTIONAL_PEER_NAME_VERIFICATION: UInt32 = 2
SOCKET_SETTINGS_IPSEC_ALLOW_FIRST_INBOUND_PKT_UNENCRYPTED: UInt32 = 4
SOCKET_SETTINGS_IPSEC_PEER_NAME_IS_RAW_FORMAT: UInt32 = 8
SOCKET_QUERY_IPSEC2_ABORT_CONNECTION_ON_FIELD_CHANGE: UInt32 = 1
SOCKET_QUERY_IPSEC2_FIELD_MASK_MM_SA_ID: UInt32 = 1
SOCKET_QUERY_IPSEC2_FIELD_MASK_QM_SA_ID: UInt32 = 2
SOCKET_INFO_CONNECTION_SECURED: UInt32 = 1
SOCKET_INFO_CONNECTION_ENCRYPTED: UInt32 = 2
SOCKET_INFO_CONNECTION_IMPERSONATED: UInt32 = 4
SIO_QUERY_WFP_ALE_ENDPOINT_HANDLE: UInt32 = 1476395213
SIO_QUERY_RSS_SCALABILITY_INFO: UInt32 = 1476395218
IN4ADDR_LOOPBACK: UInt32 = 16777343
IN4ADDR_LOOPBACKPREFIX_LENGTH: UInt32 = 8
IN4ADDR_LINKLOCALPREFIX_LENGTH: UInt32 = 16
IN4ADDR_MULTICASTPREFIX_LENGTH: UInt32 = 4
SIO_SET_COMPATIBILITY_MODE: UInt32 = 2550137132
RIO_MSG_DONT_NOTIFY: UInt32 = 1
RIO_MSG_DEFER: UInt32 = 2
RIO_MSG_WAITALL: UInt32 = 4
RIO_MSG_COMMIT_ONLY: UInt32 = 8
RIO_MAX_CQ_SIZE: UInt32 = 134217728
RIO_CORRUPT_CQ: UInt32 = 4294967295
AF_UNIX: UInt16 = 1
AF_IMPLINK: UInt16 = 3
AF_PUP: UInt16 = 4
AF_CHAOS: UInt16 = 5
AF_NS: UInt16 = 6
AF_IPX: UInt16 = 6
AF_ISO: UInt16 = 7
AF_OSI: UInt16 = 7
AF_ECMA: UInt16 = 8
AF_DATAKIT: UInt16 = 9
AF_CCITT: UInt16 = 10
AF_SNA: UInt16 = 11
AF_DECnet: UInt16 = 12
AF_DLI: UInt16 = 13
AF_LAT: UInt16 = 14
AF_HYLINK: UInt16 = 15
AF_APPLETALK: UInt16 = 16
AF_NETBIOS: UInt16 = 17
AF_VOICEVIEW: UInt16 = 18
AF_FIREFOX: UInt16 = 19
AF_UNKNOWN1: UInt16 = 20
AF_BAN: UInt16 = 21
AF_ATM: UInt16 = 22
AF_CLUSTER: UInt16 = 24
AF_12844: UInt16 = 25
AF_IRDA: UInt16 = 26
AF_NETDES: UInt16 = 28
AF_MAX: UInt16 = 29
AF_TCNPROCESS: UInt16 = 29
AF_TCNMESSAGE: UInt16 = 30
AF_ICLFXBM: UInt16 = 31
AF_LINK: UInt16 = 33
AF_HYPERV: UInt16 = 34
SOCK_STREAM: UInt16 = 1
SOCK_DGRAM: UInt16 = 2
SOCK_RAW: UInt16 = 3
SOCK_RDM: UInt16 = 4
SOCK_SEQPACKET: UInt16 = 5
SOL_SOCKET: UInt32 = 65535
SO_DEBUG: UInt32 = 1
SO_ACCEPTCONN: UInt32 = 2
SO_REUSEADDR: UInt32 = 4
SO_KEEPALIVE: UInt32 = 8
SO_DONTROUTE: UInt32 = 16
SO_BROADCAST: UInt32 = 32
SO_USELOOPBACK: UInt32 = 64
SO_LINGER: UInt32 = 128
SO_OOBINLINE: UInt32 = 256
SO_SNDBUF: UInt32 = 4097
SO_RCVBUF: UInt32 = 4098
SO_SNDLOWAT: UInt32 = 4099
SO_RCVLOWAT: UInt32 = 4100
SO_SNDTIMEO: UInt32 = 4101
SO_RCVTIMEO: UInt32 = 4102
SO_ERROR: UInt32 = 4103
SO_TYPE: UInt32 = 4104
SO_BSP_STATE: UInt32 = 4105
SO_GROUP_ID: UInt32 = 8193
SO_GROUP_PRIORITY: UInt32 = 8194
SO_MAX_MSG_SIZE: UInt32 = 8195
SO_CONDITIONAL_ACCEPT: UInt32 = 12290
SO_PAUSE_ACCEPT: UInt32 = 12291
SO_COMPARTMENT_ID: UInt32 = 12292
SO_RANDOMIZE_PORT: UInt32 = 12293
SO_PORT_SCALABILITY: UInt32 = 12294
SO_REUSE_UNICASTPORT: UInt32 = 12295
SO_REUSE_MULTICASTPORT: UInt32 = 12296
SO_ORIGINAL_DST: UInt32 = 12303
IP6T_SO_ORIGINAL_DST: UInt32 = 12303
WSK_SO_BASE: UInt32 = 16384
TCP_NODELAY: UInt32 = 1
_SS_MAXSIZE: UInt32 = 128
IOC_UNIX: UInt32 = 0
IOC_WS2: UInt32 = 134217728
IOC_PROTOCOL: UInt32 = 268435456
IOC_VENDOR: UInt32 = 402653184
SIO_ASSOCIATE_HANDLE: UInt32 = 2281701377
SIO_ENABLE_CIRCULAR_QUEUEING: UInt32 = 671088642
SIO_FIND_ROUTE: UInt32 = 1207959555
SIO_FLUSH: UInt32 = 671088644
SIO_GET_BROADCAST_ADDRESS: UInt32 = 1207959557
SIO_GET_EXTENSION_FUNCTION_POINTER: UInt32 = 3355443206
SIO_GET_QOS: UInt32 = 3355443207
SIO_GET_GROUP_QOS: UInt32 = 3355443208
SIO_MULTIPOINT_LOOPBACK: UInt32 = 2281701385
SIO_MULTICAST_SCOPE: UInt32 = 2281701386
SIO_SET_QOS: UInt32 = 2281701387
SIO_SET_GROUP_QOS: UInt32 = 2281701388
SIO_TRANSLATE_HANDLE: UInt32 = 3355443213
SIO_ROUTING_INTERFACE_QUERY: UInt32 = 3355443220
SIO_ROUTING_INTERFACE_CHANGE: UInt32 = 2281701397
SIO_ADDRESS_LIST_QUERY: UInt32 = 1207959574
SIO_ADDRESS_LIST_CHANGE: UInt32 = 671088663
SIO_QUERY_TARGET_PNP_HANDLE: UInt32 = 1207959576
SIO_QUERY_RSS_PROCESSOR_INFO: UInt32 = 1207959589
SIO_ADDRESS_LIST_SORT: UInt32 = 3355443225
SIO_RESERVED_1: UInt32 = 2281701402
SIO_RESERVED_2: UInt32 = 2281701409
SIO_GET_MULTIPLE_EXTENSION_FUNCTION_POINTER: UInt32 = 3355443236
IPPROTO_IP: UInt32 = 0
IPPORT_TCPMUX: UInt32 = 1
IPPORT_ECHO: UInt32 = 7
IPPORT_DISCARD: UInt32 = 9
IPPORT_SYSTAT: UInt32 = 11
IPPORT_DAYTIME: UInt32 = 13
IPPORT_NETSTAT: UInt32 = 15
IPPORT_QOTD: UInt32 = 17
IPPORT_MSP: UInt32 = 18
IPPORT_CHARGEN: UInt32 = 19
IPPORT_FTP_DATA: UInt32 = 20
IPPORT_FTP: UInt32 = 21
IPPORT_TELNET: UInt32 = 23
IPPORT_SMTP: UInt32 = 25
IPPORT_TIMESERVER: UInt32 = 37
IPPORT_NAMESERVER: UInt32 = 42
IPPORT_WHOIS: UInt32 = 43
IPPORT_MTP: UInt32 = 57
IPPORT_TFTP: UInt32 = 69
IPPORT_RJE: UInt32 = 77
IPPORT_FINGER: UInt32 = 79
IPPORT_TTYLINK: UInt32 = 87
IPPORT_SUPDUP: UInt32 = 95
IPPORT_POP3: UInt32 = 110
IPPORT_NTP: UInt32 = 123
IPPORT_EPMAP: UInt32 = 135
IPPORT_NETBIOS_NS: UInt32 = 137
IPPORT_NETBIOS_DGM: UInt32 = 138
IPPORT_NETBIOS_SSN: UInt32 = 139
IPPORT_IMAP: UInt32 = 143
IPPORT_SNMP: UInt32 = 161
IPPORT_SNMP_TRAP: UInt32 = 162
IPPORT_IMAP3: UInt32 = 220
IPPORT_LDAP: UInt32 = 389
IPPORT_HTTPS: UInt32 = 443
IPPORT_MICROSOFT_DS: UInt32 = 445
IPPORT_EXECSERVER: UInt32 = 512
IPPORT_LOGINSERVER: UInt32 = 513
IPPORT_CMDSERVER: UInt32 = 514
IPPORT_EFSSERVER: UInt32 = 520
IPPORT_BIFFUDP: UInt32 = 512
IPPORT_WHOSERVER: UInt32 = 513
IPPORT_ROUTESERVER: UInt32 = 520
IPPORT_RESERVED: UInt32 = 1024
IPPORT_REGISTERED_MIN: UInt32 = 1024
IPPORT_REGISTERED_MAX: UInt32 = 49151
IPPORT_DYNAMIC_MIN: UInt32 = 49152
IPPORT_DYNAMIC_MAX: UInt32 = 65535
IN_CLASSA_NET: UInt32 = 4278190080
IN_CLASSA_NSHIFT: UInt32 = 24
IN_CLASSA_HOST: UInt32 = 16777215
IN_CLASSA_MAX: UInt32 = 128
IN_CLASSB_NET: UInt32 = 4294901760
IN_CLASSB_NSHIFT: UInt32 = 16
IN_CLASSB_HOST: UInt32 = 65535
IN_CLASSB_MAX: UInt32 = 65536
IN_CLASSC_NET: UInt32 = 4294967040
IN_CLASSC_NSHIFT: UInt32 = 8
IN_CLASSC_HOST: UInt32 = 255
IN_CLASSD_NET: UInt32 = 4026531840
IN_CLASSD_NSHIFT: UInt32 = 28
IN_CLASSD_HOST: UInt32 = 268435455
INADDR_LOOPBACK: UInt32 = 2130706433
INADDR_NONE: UInt32 = 4294967295
IOCPARM_MASK: UInt32 = 127
IOC_VOID: UInt32 = 536870912
IOC_OUT: UInt32 = 1073741824
IOC_IN: UInt32 = 2147483648
MSG_TRUNC: UInt32 = 256
MSG_CTRUNC: UInt32 = 512
MSG_BCAST: UInt32 = 1024
MSG_MCAST: UInt32 = 2048
MSG_ERRQUEUE: UInt32 = 4096
AI_PASSIVE: UInt32 = 1
AI_CANONNAME: UInt32 = 2
AI_NUMERICHOST: UInt32 = 4
AI_NUMERICSERV: UInt32 = 8
AI_DNS_ONLY: UInt32 = 16
AI_FORCE_CLEAR_TEXT: UInt32 = 32
AI_BYPASS_DNS_CACHE: UInt32 = 64
AI_RETURN_TTL: UInt32 = 128
AI_ALL: UInt32 = 256
AI_ADDRCONFIG: UInt32 = 1024
AI_V4MAPPED: UInt32 = 2048
AI_NON_AUTHORITATIVE: UInt32 = 16384
AI_SECURE: UInt32 = 32768
AI_RETURN_PREFERRED_NAMES: UInt32 = 65536
AI_FQDN: UInt32 = 131072
AI_FILESERVER: UInt32 = 262144
AI_DISABLE_IDN_ENCODING: UInt32 = 524288
AI_SECURE_WITH_FALLBACK: UInt32 = 1048576
AI_EXCLUSIVE_CUSTOM_SERVERS: UInt32 = 2097152
AI_RETURN_RESPONSE_FLAGS: UInt32 = 268435456
AI_REQUIRE_SECURE: UInt32 = 536870912
AI_RESOLUTION_HANDLE: UInt32 = 1073741824
AI_EXTENDED: UInt32 = 2147483648
ADDRINFOEX_VERSION_2: UInt32 = 2
ADDRINFOEX_VERSION_3: UInt32 = 3
ADDRINFOEX_VERSION_4: UInt32 = 4
ADDRINFOEX_VERSION_5: UInt32 = 5
ADDRINFOEX_VERSION_6: UInt32 = 6
AI_DNS_SERVER_TYPE_UDP: UInt32 = 1
AI_DNS_SERVER_TYPE_DOH: UInt32 = 2
AI_DNS_SERVER_UDP_FALLBACK: UInt32 = 1
AI_DNS_RESPONSE_SECURE: UInt32 = 1
AI_DNS_RESPONSE_HOSTFILE: UInt32 = 2
NS_ALL: UInt32 = 0
NS_SAP: UInt32 = 1
NS_NDS: UInt32 = 2
NS_PEER_BROWSE: UInt32 = 3
NS_SLP: UInt32 = 5
NS_DHCP: UInt32 = 6
NS_TCPIP_LOCAL: UInt32 = 10
NS_TCPIP_HOSTS: UInt32 = 11
NS_DNS: UInt32 = 12
NS_NETBT: UInt32 = 13
NS_WINS: UInt32 = 14
NS_NLA: UInt32 = 15
NS_NBP: UInt32 = 20
NS_MS: UInt32 = 30
NS_STDA: UInt32 = 31
NS_NTDS: UInt32 = 32
NS_EMAIL: UInt32 = 37
NS_X500: UInt32 = 40
NS_NIS: UInt32 = 41
NS_NISPLUS: UInt32 = 42
NS_WRQ: UInt32 = 50
NS_NETDES: UInt32 = 60
NI_NOFQDN: UInt32 = 1
NI_NUMERICHOST: UInt32 = 2
NI_NAMEREQD: UInt32 = 4
NI_NUMERICSERV: UInt32 = 8
NI_DGRAM: UInt32 = 16
NI_MAXHOST: UInt32 = 1025
NI_MAXSERV: UInt32 = 32
IFF_UP: UInt32 = 1
IFF_BROADCAST: UInt32 = 2
IFF_LOOPBACK: UInt32 = 4
IFF_POINTTOPOINT: UInt32 = 8
IFF_MULTICAST: UInt32 = 16
IP_OPTIONS: UInt32 = 1
IP_HDRINCL: UInt32 = 2
IP_TOS: UInt32 = 3
IP_TTL: UInt32 = 4
IP_MULTICAST_IF: UInt32 = 9
IP_MULTICAST_TTL: UInt32 = 10
IP_MULTICAST_LOOP: UInt32 = 11
IP_ADD_MEMBERSHIP: UInt32 = 12
IP_DROP_MEMBERSHIP: UInt32 = 13
IP_DONTFRAGMENT: UInt32 = 14
IP_ADD_SOURCE_MEMBERSHIP: UInt32 = 15
IP_DROP_SOURCE_MEMBERSHIP: UInt32 = 16
IP_BLOCK_SOURCE: UInt32 = 17
IP_UNBLOCK_SOURCE: UInt32 = 18
IP_PKTINFO: UInt32 = 19
IP_HOPLIMIT: UInt32 = 21
IP_RECVTTL: UInt32 = 21
IP_RECEIVE_BROADCAST: UInt32 = 22
IP_RECVIF: UInt32 = 24
IP_RECVDSTADDR: UInt32 = 25
IP_IFLIST: UInt32 = 28
IP_ADD_IFLIST: UInt32 = 29
IP_DEL_IFLIST: UInt32 = 30
IP_UNICAST_IF: UInt32 = 31
IP_RTHDR: UInt32 = 32
IP_GET_IFLIST: UInt32 = 33
IP_RECVRTHDR: UInt32 = 38
IP_TCLASS: UInt32 = 39
IP_RECVTCLASS: UInt32 = 40
IP_RECVTOS: UInt32 = 40
IP_ORIGINAL_ARRIVAL_IF: UInt32 = 47
IP_ECN: UInt32 = 50
IP_RECVECN: UInt32 = 50
IP_PKTINFO_EX: UInt32 = 51
IP_WFP_REDIRECT_RECORDS: UInt32 = 60
IP_WFP_REDIRECT_CONTEXT: UInt32 = 70
IP_MTU_DISCOVER: UInt32 = 71
IP_MTU: UInt32 = 73
IP_NRT_INTERFACE: UInt32 = 74
IP_RECVERR: UInt32 = 75
IP_USER_MTU: UInt32 = 76
IP_UNSPECIFIED_TYPE_OF_SERVICE: Int32 = -1
IP_UNSPECIFIED_USER_MTU: UInt32 = 4294967295
IN6ADDR_LINKLOCALPREFIX_LENGTH: UInt32 = 64
IN6ADDR_MULTICASTPREFIX_LENGTH: UInt32 = 8
IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_LENGTH: UInt32 = 104
IN6ADDR_V4MAPPEDPREFIX_LENGTH: UInt32 = 96
IN6ADDR_6TO4PREFIX_LENGTH: UInt32 = 16
IN6ADDR_TEREDOPREFIX_LENGTH: UInt32 = 32
MCAST_JOIN_GROUP: UInt32 = 41
MCAST_LEAVE_GROUP: UInt32 = 42
MCAST_BLOCK_SOURCE: UInt32 = 43
MCAST_UNBLOCK_SOURCE: UInt32 = 44
MCAST_JOIN_SOURCE_GROUP: UInt32 = 45
MCAST_LEAVE_SOURCE_GROUP: UInt32 = 46
IPV6_HOPOPTS: UInt32 = 1
IPV6_HDRINCL: UInt32 = 2
IPV6_UNICAST_HOPS: UInt32 = 4
IPV6_MULTICAST_IF: UInt32 = 9
IPV6_MULTICAST_HOPS: UInt32 = 10
IPV6_MULTICAST_LOOP: UInt32 = 11
IPV6_ADD_MEMBERSHIP: UInt32 = 12
IPV6_JOIN_GROUP: UInt32 = 12
IPV6_DROP_MEMBERSHIP: UInt32 = 13
IPV6_LEAVE_GROUP: UInt32 = 13
IPV6_DONTFRAG: UInt32 = 14
IPV6_PKTINFO: UInt32 = 19
IPV6_HOPLIMIT: UInt32 = 21
IPV6_PROTECTION_LEVEL: UInt32 = 23
IPV6_RECVIF: UInt32 = 24
IPV6_RECVDSTADDR: UInt32 = 25
IPV6_CHECKSUM: UInt32 = 26
IPV6_V6ONLY: UInt32 = 27
IPV6_IFLIST: UInt32 = 28
IPV6_ADD_IFLIST: UInt32 = 29
IPV6_DEL_IFLIST: UInt32 = 30
IPV6_UNICAST_IF: UInt32 = 31
IPV6_RTHDR: UInt32 = 32
IPV6_GET_IFLIST: UInt32 = 33
IPV6_RECVRTHDR: UInt32 = 38
IPV6_TCLASS: UInt32 = 39
IPV6_RECVTCLASS: UInt32 = 40
IPV6_ECN: UInt32 = 50
IPV6_RECVECN: UInt32 = 50
IPV6_PKTINFO_EX: UInt32 = 51
IPV6_WFP_REDIRECT_RECORDS: UInt32 = 60
IPV6_WFP_REDIRECT_CONTEXT: UInt32 = 70
IPV6_MTU_DISCOVER: UInt32 = 71
IPV6_MTU: UInt32 = 72
IPV6_NRT_INTERFACE: UInt32 = 74
IPV6_RECVERR: UInt32 = 75
IPV6_USER_MTU: UInt32 = 76
IP_UNSPECIFIED_HOP_LIMIT: Int32 = -1
IP_PROTECTION_LEVEL: UInt32 = 23
PROTECTION_LEVEL_UNRESTRICTED: UInt32 = 10
PROTECTION_LEVEL_EDGERESTRICTED: UInt32 = 20
PROTECTION_LEVEL_RESTRICTED: UInt32 = 30
PROTECTION_LEVEL_DEFAULT: UInt32 = 20
INET_ADDRSTRLEN: UInt32 = 22
INET6_ADDRSTRLEN: UInt32 = 65
TCP_OFFLOAD_NO_PREFERENCE: UInt32 = 0
TCP_OFFLOAD_NOT_PREFERRED: UInt32 = 1
TCP_OFFLOAD_PREFERRED: UInt32 = 2
TCP_EXPEDITED_1122: UInt32 = 2
TCP_KEEPALIVE: UInt32 = 3
TCP_MAXSEG: UInt32 = 4
TCP_MAXRT: UInt32 = 5
TCP_STDURG: UInt32 = 6
TCP_NOURG: UInt32 = 7
TCP_ATMARK: UInt32 = 8
TCP_NOSYNRETRIES: UInt32 = 9
TCP_TIMESTAMPS: UInt32 = 10
TCP_OFFLOAD_PREFERENCE: UInt32 = 11
TCP_CONGESTION_ALGORITHM: UInt32 = 12
TCP_DELAY_FIN_ACK: UInt32 = 13
TCP_MAXRTMS: UInt32 = 14
TCP_FASTOPEN: UInt32 = 15
TCP_KEEPCNT: UInt32 = 16
TCP_KEEPIDLE: UInt32 = 3
TCP_KEEPINTVL: UInt32 = 17
TCP_FAIL_CONNECT_ON_ICMP_ERROR: UInt32 = 18
TCP_ICMP_ERROR_INFO: UInt32 = 19
UDP_SEND_MSG_SIZE: UInt32 = 2
UDP_RECV_MAX_COALESCED_SIZE: UInt32 = 3
UDP_COALESCED_INFO: UInt32 = 3
WINDOWS_AF_IRDA: UInt32 = 26
WINDOWS_PF_IRDA: UInt32 = 26
WCE_AF_IRDA: UInt32 = 22
WCE_PF_IRDA: UInt32 = 22
IRDA_PROTO_SOCK_STREAM: UInt32 = 1
PF_IRDA: UInt16 = 26
SOL_IRLMP: UInt32 = 255
IRLMP_ENUMDEVICES: UInt32 = 16
IRLMP_IAS_SET: UInt32 = 17
IRLMP_IAS_QUERY: UInt32 = 18
IRLMP_SEND_PDU_LEN: UInt32 = 19
IRLMP_EXCLUSIVE_MODE: UInt32 = 20
IRLMP_IRLPT_MODE: UInt32 = 21
IRLMP_9WIRE_MODE: UInt32 = 22
IRLMP_TINYTP_MODE: UInt32 = 23
IRLMP_PARAMETERS: UInt32 = 24
IRLMP_DISCOVERY_MODE: UInt32 = 25
IRLMP_SHARP_MODE: UInt32 = 32
IAS_ATTRIB_NO_CLASS: UInt32 = 16
IAS_ATTRIB_NO_ATTRIB: UInt32 = 0
IAS_ATTRIB_INT: UInt32 = 1
IAS_ATTRIB_OCTETSEQ: UInt32 = 2
IAS_ATTRIB_STR: UInt32 = 3
IAS_MAX_USER_STRING: UInt32 = 256
IAS_MAX_OCTET_STRING: UInt32 = 1024
IAS_MAX_CLASSNAME: UInt32 = 64
IAS_MAX_ATTRIBNAME: UInt32 = 256
LmCharSetASCII: UInt32 = 0
LmCharSetISO_8859_1: UInt32 = 1
LmCharSetISO_8859_2: UInt32 = 2
LmCharSetISO_8859_3: UInt32 = 3
LmCharSetISO_8859_4: UInt32 = 4
LmCharSetISO_8859_5: UInt32 = 5
LmCharSetISO_8859_6: UInt32 = 6
LmCharSetISO_8859_7: UInt32 = 7
LmCharSetISO_8859_8: UInt32 = 8
LmCharSetISO_8859_9: UInt32 = 9
LmCharSetUNICODE: UInt32 = 255
LM_BAUD_1200: UInt32 = 1200
LM_BAUD_2400: UInt32 = 2400
LM_BAUD_9600: UInt32 = 9600
LM_BAUD_19200: UInt32 = 19200
LM_BAUD_38400: UInt32 = 38400
LM_BAUD_57600: UInt32 = 57600
LM_BAUD_115200: UInt32 = 115200
LM_BAUD_576K: UInt32 = 576000
LM_BAUD_1152K: UInt32 = 1152000
LM_BAUD_4M: UInt32 = 4000000
LM_BAUD_16M: UInt32 = 16000000
SO_CONNDATA: UInt32 = 28672
SO_CONNOPT: UInt32 = 28673
SO_DISCDATA: UInt32 = 28674
SO_DISCOPT: UInt32 = 28675
SO_CONNDATALEN: UInt32 = 28676
SO_CONNOPTLEN: UInt32 = 28677
SO_DISCDATALEN: UInt32 = 28678
SO_DISCOPTLEN: UInt32 = 28679
SO_OPENTYPE: UInt32 = 28680
SO_SYNCHRONOUS_ALERT: UInt32 = 16
SO_SYNCHRONOUS_NONALERT: UInt32 = 32
SO_MAXDG: UInt32 = 28681
SO_MAXPATHDG: UInt32 = 28682
SO_UPDATE_ACCEPT_CONTEXT: UInt32 = 28683
SO_CONNECT_TIME: UInt32 = 28684
SO_UPDATE_CONNECT_CONTEXT: UInt32 = 28688
TCP_BSDURGENT: UInt32 = 28672
SIO_UDP_CONNRESET: UInt32 = 2550136844
SIO_SOCKET_CLOSE_NOTIFY: UInt32 = 2550136845
SIO_UDP_NETRESET: UInt32 = 2550136847
TF_DISCONNECT: UInt32 = 1
TF_REUSE_SOCKET: UInt32 = 2
TF_WRITE_BEHIND: UInt32 = 4
TF_USE_DEFAULT_WORKER: UInt32 = 0
TF_USE_SYSTEM_THREAD: UInt32 = 16
TF_USE_KERNEL_APC: UInt32 = 32
WSAID_TRANSMITFILE: Guid = Guid('b5367df0-cbac-11cf-95-ca-00-80-5f-48-a1-92')
WSAID_ACCEPTEX: Guid = Guid('b5367df1-cbac-11cf-95-ca-00-80-5f-48-a1-92')
WSAID_GETACCEPTEXSOCKADDRS: Guid = Guid('b5367df2-cbac-11cf-95-ca-00-80-5f-48-a1-92')
TP_ELEMENT_MEMORY: UInt32 = 1
TP_ELEMENT_FILE: UInt32 = 2
TP_ELEMENT_EOP: UInt32 = 4
TP_DISCONNECT: UInt32 = 1
TP_REUSE_SOCKET: UInt32 = 2
TP_USE_DEFAULT_WORKER: UInt32 = 0
TP_USE_SYSTEM_THREAD: UInt32 = 16
TP_USE_KERNEL_APC: UInt32 = 32
WSAID_TRANSMITPACKETS: Guid = Guid('d9689da0-1f90-11d3-99-71-00-c0-4f-68-c8-76')
WSAID_CONNECTEX: Guid = Guid('25a207b9-ddf3-4660-8e-e9-76-e5-8c-74-06-3e')
WSAID_DISCONNECTEX: Guid = Guid('7fda2e11-8630-436f-a0-31-f5-36-a6-ee-c1-57')
DE_REUSE_SOCKET: UInt32 = 2
NLA_SERVICE_CLASS_GUID: Guid = Guid('0037e515-b5c9-4a43-ba-da-8b-48-a8-7a-d2-39')
NLA_ALLUSERS_NETWORK: UInt32 = 1
NLA_FRIENDLY_NAME: UInt32 = 2
WSAID_WSARECVMSG: Guid = Guid('f689d7c8-6f1f-436b-8a-53-e5-4f-e3-51-c3-22')
SIO_BSP_HANDLE: UInt32 = 1207959579
SIO_BSP_HANDLE_SELECT: UInt32 = 1207959580
SIO_BSP_HANDLE_POLL: UInt32 = 1207959581
SIO_BASE_HANDLE: UInt32 = 1207959586
SIO_EXT_SELECT: UInt32 = 3355443230
SIO_EXT_POLL: UInt32 = 3355443231
SIO_EXT_SENDMSG: UInt32 = 3355443232
WSAID_WSAPOLL: Guid = Guid('18c76f85-dc66-4964-97-2e-23-c2-72-38-31-2b')
SERVICE_RESOURCE: UInt32 = 1
SERVICE_SERVICE: UInt32 = 2
SERVICE_LOCAL: UInt32 = 4
SERVICE_FLAG_DEFER: UInt32 = 1
SERVICE_FLAG_HARD: UInt32 = 2
PROP_COMMENT: UInt32 = 1
PROP_LOCALE: UInt32 = 2
PROP_DISPLAY_HINT: UInt32 = 4
PROP_VERSION: UInt32 = 8
PROP_START_TIME: UInt32 = 16
PROP_MACHINE: UInt32 = 32
PROP_ADDRESSES: UInt32 = 256
PROP_SD: UInt32 = 512
PROP_ALL: UInt32 = 2147483648
SERVICE_ADDRESS_FLAG_RPC_CN: UInt32 = 1
SERVICE_ADDRESS_FLAG_RPC_DG: UInt32 = 2
SERVICE_ADDRESS_FLAG_RPC_NB: UInt32 = 4
NS_DEFAULT: UInt32 = 0
NS_VNS: UInt32 = 50
NSTYPE_HIERARCHICAL: UInt32 = 1
NSTYPE_DYNAMIC: UInt32 = 2
NSTYPE_ENUMERABLE: UInt32 = 4
NSTYPE_WORKGROUP: UInt32 = 8
XP_CONNECTIONLESS: UInt32 = 1
XP_GUARANTEED_DELIVERY: UInt32 = 2
XP_GUARANTEED_ORDER: UInt32 = 4
XP_MESSAGE_ORIENTED: UInt32 = 8
XP_PSEUDO_STREAM: UInt32 = 16
XP_GRACEFUL_CLOSE: UInt32 = 32
XP_EXPEDITED_DATA: UInt32 = 64
XP_CONNECT_DATA: UInt32 = 128
XP_DISCONNECT_DATA: UInt32 = 256
XP_SUPPORTS_BROADCAST: UInt32 = 512
XP_SUPPORTS_MULTICAST: UInt32 = 1024
XP_BANDWIDTH_ALLOCATION: UInt32 = 2048
XP_FRAGMENTATION: UInt32 = 4096
XP_ENCRYPTS: UInt32 = 8192
RES_SOFT_SEARCH: UInt32 = 1
RES_FIND_MULTIPLE: UInt32 = 2
RES_SERVICE: UInt32 = 4
SERVICE_TYPE_VALUE_SAPIDA: String = 'SapId'
SERVICE_TYPE_VALUE_SAPIDW: String = 'SapId'
SERVICE_TYPE_VALUE_CONNA: String = 'ConnectionOriented'
SERVICE_TYPE_VALUE_CONNW: String = 'ConnectionOriented'
SERVICE_TYPE_VALUE_TCPPORTA: String = 'TcpPort'
SERVICE_TYPE_VALUE_TCPPORTW: String = 'TcpPort'
SERVICE_TYPE_VALUE_UDPPORTA: String = 'UdpPort'
SERVICE_TYPE_VALUE_UDPPORTW: String = 'UdpPort'
SERVICE_TYPE_VALUE_SAPID: String = 'SapId'
SERVICE_TYPE_VALUE_CONN: String = 'ConnectionOriented'
SERVICE_TYPE_VALUE_TCPPORT: String = 'TcpPort'
SERVICE_TYPE_VALUE_UDPPORT: String = 'UdpPort'
SET_SERVICE_PARTIAL_SUCCESS: UInt32 = 1
FD_SETSIZE: UInt32 = 64
IMPLINK_IP: UInt32 = 155
IMPLINK_LOWEXPER: UInt32 = 156
IMPLINK_HIGHEXPER: UInt32 = 158
WSADESCRIPTION_LEN: UInt32 = 256
WSASYS_STATUS_LEN: UInt32 = 128
IP_DEFAULT_MULTICAST_TTL: UInt32 = 1
IP_DEFAULT_MULTICAST_LOOP: UInt32 = 1
IP_MAX_MEMBERSHIPS: UInt32 = 20
SOCKET_ERROR: Int32 = -1
PF_UNIX: UInt16 = 1
PF_IMPLINK: UInt16 = 3
PF_PUP: UInt16 = 4
PF_CHAOS: UInt16 = 5
PF_NS: UInt16 = 6
PF_IPX: UInt16 = 6
PF_ISO: UInt16 = 7
PF_OSI: UInt16 = 7
PF_ECMA: UInt16 = 8
PF_DATAKIT: UInt16 = 9
PF_CCITT: UInt16 = 10
PF_SNA: UInt16 = 11
PF_DECnet: UInt16 = 12
PF_DLI: UInt16 = 13
PF_LAT: UInt16 = 14
PF_HYLINK: UInt16 = 15
PF_APPLETALK: UInt16 = 16
PF_VOICEVIEW: UInt16 = 18
PF_FIREFOX: UInt16 = 19
PF_UNKNOWN1: UInt16 = 20
PF_BAN: UInt16 = 21
PF_MAX: UInt16 = 29
SOMAXCONN: UInt32 = 5
MSG_MAXIOVLEN: UInt32 = 16
MSG_PARTIAL: UInt32 = 32768
MAXGETHOSTSTRUCT: UInt32 = 1024
FD_READ: UInt32 = 1
FD_WRITE: UInt32 = 2
FD_OOB: UInt32 = 4
FD_ACCEPT: UInt32 = 8
FD_CONNECT: UInt32 = 16
FD_CLOSE: UInt32 = 32
INCL_WINSOCK_API_PROTOTYPES: UInt32 = 1
INCL_WINSOCK_API_TYPEDEFS: UInt32 = 0
FROM_PROTOCOL_INFO: Int32 = -1
SO_PROTOCOL_INFOA: UInt32 = 8196
SO_PROTOCOL_INFOW: UInt32 = 8197
SO_PROTOCOL_INFO: UInt32 = 8197
PVD_CONFIG: UInt32 = 12289
PF_ATM: UInt16 = 22
MSG_INTERRUPT: UInt32 = 16
FD_READ_BIT: UInt32 = 0
FD_WRITE_BIT: UInt32 = 1
FD_OOB_BIT: UInt32 = 2
FD_ACCEPT_BIT: UInt32 = 3
FD_CONNECT_BIT: UInt32 = 4
FD_CLOSE_BIT: UInt32 = 5
FD_QOS_BIT: UInt32 = 6
FD_GROUP_QOS_BIT: UInt32 = 7
FD_ROUTING_INTERFACE_CHANGE_BIT: UInt32 = 8
FD_ADDRESS_LIST_CHANGE_BIT: UInt32 = 9
FD_MAX_EVENTS: UInt32 = 10
WSA_MAXIMUM_WAIT_EVENTS: UInt32 = 64
WSA_WAIT_FAILED: UInt32 = 4294967295
WSA_WAIT_TIMEOUT: UInt32 = 258
CF_ACCEPT: UInt32 = 0
CF_REJECT: UInt32 = 1
CF_DEFER: UInt32 = 2
SD_RECEIVE: UInt32 = 0
SD_SEND: UInt32 = 1
SD_BOTH: UInt32 = 2
SG_UNCONSTRAINED_GROUP: UInt32 = 1
SG_CONSTRAINED_GROUP: UInt32 = 2
MAX_PROTOCOL_CHAIN: UInt32 = 7
BASE_PROTOCOL: UInt32 = 1
LAYERED_PROTOCOL: UInt32 = 0
WSAPROTOCOL_LEN: UInt32 = 255
PFL_MULTIPLE_PROTO_ENTRIES: UInt32 = 1
PFL_RECOMMENDED_PROTO_ENTRY: UInt32 = 2
PFL_HIDDEN: UInt32 = 4
PFL_MATCHES_PROTOCOL_ZERO: UInt32 = 8
PFL_NETWORKDIRECT_PROVIDER: UInt32 = 16
XP1_CONNECTIONLESS: UInt32 = 1
XP1_GUARANTEED_DELIVERY: UInt32 = 2
XP1_GUARANTEED_ORDER: UInt32 = 4
XP1_MESSAGE_ORIENTED: UInt32 = 8
XP1_PSEUDO_STREAM: UInt32 = 16
XP1_GRACEFUL_CLOSE: UInt32 = 32
XP1_EXPEDITED_DATA: UInt32 = 64
XP1_CONNECT_DATA: UInt32 = 128
XP1_DISCONNECT_DATA: UInt32 = 256
XP1_SUPPORT_BROADCAST: UInt32 = 512
XP1_SUPPORT_MULTIPOINT: UInt32 = 1024
XP1_MULTIPOINT_CONTROL_PLANE: UInt32 = 2048
XP1_MULTIPOINT_DATA_PLANE: UInt32 = 4096
XP1_QOS_SUPPORTED: UInt32 = 8192
XP1_INTERRUPT: UInt32 = 16384
XP1_UNI_SEND: UInt32 = 32768
XP1_UNI_RECV: UInt32 = 65536
XP1_IFS_HANDLES: UInt32 = 131072
XP1_PARTIAL_MESSAGE: UInt32 = 262144
XP1_SAN_SUPPORT_SDP: UInt32 = 524288
BIGENDIAN: UInt32 = 0
LITTLEENDIAN: UInt32 = 1
SECURITY_PROTOCOL_NONE: UInt32 = 0
JL_SENDER_ONLY: UInt32 = 1
JL_RECEIVER_ONLY: UInt32 = 2
JL_BOTH: UInt32 = 4
WSA_FLAG_OVERLAPPED: UInt32 = 1
WSA_FLAG_MULTIPOINT_C_ROOT: UInt32 = 2
WSA_FLAG_MULTIPOINT_C_LEAF: UInt32 = 4
WSA_FLAG_MULTIPOINT_D_ROOT: UInt32 = 8
WSA_FLAG_MULTIPOINT_D_LEAF: UInt32 = 16
WSA_FLAG_ACCESS_SYSTEM_SECURITY: UInt32 = 64
WSA_FLAG_NO_HANDLE_INHERIT: UInt32 = 128
WSA_FLAG_REGISTERED_IO: UInt32 = 256
SIO_NSP_NOTIFY_CHANGE: UInt32 = 2281701401
TH_NETDEV: UInt32 = 1
TH_TAPI: UInt32 = 2
SERVICE_MULTIPLE: UInt32 = 1
NS_LOCALNAME: UInt32 = 19
RES_UNUSED_1: UInt32 = 1
RES_FLUSH_CACHE: UInt32 = 2
SERVICE_TYPE_VALUE_IPXPORTA: String = 'IpxSocket'
SERVICE_TYPE_VALUE_IPXPORTW: String = 'IpxSocket'
SERVICE_TYPE_VALUE_OBJECTIDA: String = 'ObjectId'
SERVICE_TYPE_VALUE_OBJECTIDW: String = 'ObjectId'
SERVICE_TYPE_VALUE_OBJECTID: String = 'ObjectId'
LUP_DEEP: UInt32 = 1
LUP_CONTAINERS: UInt32 = 2
LUP_NOCONTAINERS: UInt32 = 4
LUP_NEAREST: UInt32 = 8
LUP_RETURN_NAME: UInt32 = 16
LUP_RETURN_TYPE: UInt32 = 32
LUP_RETURN_VERSION: UInt32 = 64
LUP_RETURN_COMMENT: UInt32 = 128
LUP_RETURN_ADDR: UInt32 = 256
LUP_RETURN_BLOB: UInt32 = 512
LUP_RETURN_ALIASES: UInt32 = 1024
LUP_RETURN_QUERY_STRING: UInt32 = 2048
LUP_RETURN_ALL: UInt32 = 4080
LUP_RES_SERVICE: UInt32 = 32768
LUP_FLUSHCACHE: UInt32 = 4096
LUP_FLUSHPREVIOUS: UInt32 = 8192
LUP_NON_AUTHORITATIVE: UInt32 = 16384
LUP_SECURE: UInt32 = 32768
LUP_RETURN_PREFERRED_NAMES: UInt32 = 65536
LUP_DNS_ONLY: UInt32 = 131072
LUP_RETURN_RESPONSE_FLAGS: UInt32 = 262144
LUP_ADDRCONFIG: UInt32 = 1048576
LUP_DUAL_ADDR: UInt32 = 2097152
LUP_FILESERVER: UInt32 = 4194304
LUP_DISABLE_IDN_ENCODING: UInt32 = 8388608
LUP_API_ANSI: UInt32 = 16777216
LUP_EXTENDED_QUERYSET: UInt32 = 33554432
LUP_SECURE_WITH_FALLBACK: UInt32 = 67108864
LUP_EXCLUSIVE_CUSTOM_SERVERS: UInt32 = 134217728
LUP_REQUIRE_SECURE: UInt32 = 268435456
LUP_RETURN_TTL: UInt32 = 536870912
LUP_FORCE_CLEAR_TEXT: UInt32 = 1073741824
LUP_RESOLUTION_HANDLE: UInt32 = 2147483648
RESULT_IS_ALIAS: UInt32 = 1
RESULT_IS_ADDED: UInt32 = 16
RESULT_IS_CHANGED: UInt32 = 32
RESULT_IS_DELETED: UInt32 = 64
POLLRDNORM: UInt16 = 256
POLLRDBAND: UInt16 = 512
POLLPRI: UInt16 = 1024
POLLWRNORM: UInt16 = 16
POLLOUT: UInt16 = 16
POLLWRBAND: UInt16 = 32
POLLERR: UInt16 = 1
POLLHUP: UInt16 = 2
POLLNVAL: UInt16 = 4
SOCK_NOTIFY_REGISTER_EVENT_NONE: UInt32 = 0
SOCK_NOTIFY_REGISTER_EVENT_IN: UInt32 = 1
SOCK_NOTIFY_REGISTER_EVENT_OUT: UInt32 = 2
SOCK_NOTIFY_REGISTER_EVENT_HANGUP: UInt32 = 4
SOCK_NOTIFY_EVENT_IN: UInt32 = 1
SOCK_NOTIFY_EVENT_OUT: UInt32 = 2
SOCK_NOTIFY_EVENT_HANGUP: UInt32 = 4
SOCK_NOTIFY_EVENT_ERR: UInt32 = 64
SOCK_NOTIFY_EVENT_REMOVE: UInt32 = 128
SOCK_NOTIFY_OP_NONE: UInt32 = 0
SOCK_NOTIFY_OP_ENABLE: UInt32 = 1
SOCK_NOTIFY_OP_DISABLE: UInt32 = 2
SOCK_NOTIFY_OP_REMOVE: UInt32 = 4
SOCK_NOTIFY_TRIGGER_ONESHOT: UInt32 = 1
SOCK_NOTIFY_TRIGGER_PERSISTENT: UInt32 = 2
SOCK_NOTIFY_TRIGGER_LEVEL: UInt32 = 4
SOCK_NOTIFY_TRIGGER_EDGE: UInt32 = 8
ATMPROTO_AALUSER: UInt32 = 0
ATMPROTO_AAL1: UInt32 = 1
ATMPROTO_AAL2: UInt32 = 2
ATMPROTO_AAL34: UInt32 = 3
ATMPROTO_AAL5: UInt32 = 5
SAP_FIELD_ABSENT: UInt32 = 4294967294
SAP_FIELD_ANY: UInt32 = 4294967295
SAP_FIELD_ANY_AESA_SEL: UInt32 = 4294967290
SAP_FIELD_ANY_AESA_REST: UInt32 = 4294967291
ATM_E164: UInt32 = 1
ATM_NSAP: UInt32 = 2
ATM_AESA: UInt32 = 2
ATM_ADDR_SIZE: UInt32 = 20
BLLI_L2_ISO_1745: UInt32 = 1
BLLI_L2_Q921: UInt32 = 2
BLLI_L2_X25L: UInt32 = 6
BLLI_L2_X25M: UInt32 = 7
BLLI_L2_ELAPB: UInt32 = 8
BLLI_L2_HDLC_ARM: UInt32 = 9
BLLI_L2_HDLC_NRM: UInt32 = 10
BLLI_L2_HDLC_ABM: UInt32 = 11
BLLI_L2_LLC: UInt32 = 12
BLLI_L2_X75: UInt32 = 13
BLLI_L2_Q922: UInt32 = 14
BLLI_L2_USER_SPECIFIED: UInt32 = 16
BLLI_L2_ISO_7776: UInt32 = 17
BLLI_L3_X25: UInt32 = 6
BLLI_L3_ISO_8208: UInt32 = 7
BLLI_L3_X223: UInt32 = 8
BLLI_L3_SIO_8473: UInt32 = 9
BLLI_L3_T70: UInt32 = 10
BLLI_L3_ISO_TR9577: UInt32 = 11
BLLI_L3_USER_SPECIFIED: UInt32 = 16
BLLI_L3_IPI_SNAP: UInt32 = 128
BLLI_L3_IPI_IP: UInt32 = 204
BHLI_ISO: UInt32 = 0
BHLI_UserSpecific: UInt32 = 1
BHLI_HighLayerProfile: UInt32 = 2
BHLI_VendorSpecificAppId: UInt32 = 3
AAL5_MODE_MESSAGE: UInt32 = 1
AAL5_MODE_STREAMING: UInt32 = 2
AAL5_SSCS_NULL: UInt32 = 0
AAL5_SSCS_SSCOP_ASSURED: UInt32 = 1
AAL5_SSCS_SSCOP_NON_ASSURED: UInt32 = 2
AAL5_SSCS_FRAME_RELAY: UInt32 = 4
BCOB_A: UInt32 = 1
BCOB_C: UInt32 = 3
BCOB_X: UInt32 = 16
TT_NOIND: UInt32 = 0
TT_CBR: UInt32 = 4
TT_VBR: UInt32 = 8
TR_NOIND: UInt32 = 0
TR_END_TO_END: UInt32 = 1
TR_NO_END_TO_END: UInt32 = 2
CLIP_NOT: UInt32 = 0
CLIP_SUS: UInt32 = 32
UP_P2P: UInt32 = 0
UP_P2MP: UInt32 = 1
BLLI_L2_MODE_NORMAL: UInt32 = 64
BLLI_L2_MODE_EXT: UInt32 = 128
BLLI_L3_MODE_NORMAL: UInt32 = 64
BLLI_L3_MODE_EXT: UInt32 = 128
BLLI_L3_PACKET_16: UInt32 = 4
BLLI_L3_PACKET_32: UInt32 = 5
BLLI_L3_PACKET_64: UInt32 = 6
BLLI_L3_PACKET_128: UInt32 = 7
BLLI_L3_PACKET_256: UInt32 = 8
BLLI_L3_PACKET_512: UInt32 = 9
BLLI_L3_PACKET_1024: UInt32 = 10
BLLI_L3_PACKET_2048: UInt32 = 11
BLLI_L3_PACKET_4096: UInt32 = 12
PI_ALLOWED: UInt32 = 0
PI_RESTRICTED: UInt32 = 64
PI_NUMBER_NOT_AVAILABLE: UInt32 = 128
SI_USER_NOT_SCREENED: UInt32 = 0
SI_USER_PASSED: UInt32 = 1
SI_USER_FAILED: UInt32 = 2
SI_NETWORK: UInt32 = 3
CAUSE_LOC_USER: UInt32 = 0
CAUSE_LOC_PRIVATE_LOCAL: UInt32 = 1
CAUSE_LOC_PUBLIC_LOCAL: UInt32 = 2
CAUSE_LOC_TRANSIT_NETWORK: UInt32 = 3
CAUSE_LOC_PUBLIC_REMOTE: UInt32 = 4
CAUSE_LOC_PRIVATE_REMOTE: UInt32 = 5
CAUSE_LOC_INTERNATIONAL_NETWORK: UInt32 = 7
CAUSE_LOC_BEYOND_INTERWORKING: UInt32 = 10
CAUSE_UNALLOCATED_NUMBER: UInt32 = 1
CAUSE_NO_ROUTE_TO_TRANSIT_NETWORK: UInt32 = 2
CAUSE_NO_ROUTE_TO_DESTINATION: UInt32 = 3
CAUSE_VPI_VCI_UNACCEPTABLE: UInt32 = 10
CAUSE_NORMAL_CALL_CLEARING: UInt32 = 16
CAUSE_USER_BUSY: UInt32 = 17
CAUSE_NO_USER_RESPONDING: UInt32 = 18
CAUSE_CALL_REJECTED: UInt32 = 21
CAUSE_NUMBER_CHANGED: UInt32 = 22
CAUSE_USER_REJECTS_CLIR: UInt32 = 23
CAUSE_DESTINATION_OUT_OF_ORDER: UInt32 = 27
CAUSE_INVALID_NUMBER_FORMAT: UInt32 = 28
CAUSE_STATUS_ENQUIRY_RESPONSE: UInt32 = 30
CAUSE_NORMAL_UNSPECIFIED: UInt32 = 31
CAUSE_VPI_VCI_UNAVAILABLE: UInt32 = 35
CAUSE_NETWORK_OUT_OF_ORDER: UInt32 = 38
CAUSE_TEMPORARY_FAILURE: UInt32 = 41
CAUSE_ACCESS_INFORMAION_DISCARDED: UInt32 = 43
CAUSE_NO_VPI_VCI_AVAILABLE: UInt32 = 45
CAUSE_RESOURCE_UNAVAILABLE: UInt32 = 47
CAUSE_QOS_UNAVAILABLE: UInt32 = 49
CAUSE_USER_CELL_RATE_UNAVAILABLE: UInt32 = 51
CAUSE_BEARER_CAPABILITY_UNAUTHORIZED: UInt32 = 57
CAUSE_BEARER_CAPABILITY_UNAVAILABLE: UInt32 = 58
CAUSE_OPTION_UNAVAILABLE: UInt32 = 63
CAUSE_BEARER_CAPABILITY_UNIMPLEMENTED: UInt32 = 65
CAUSE_UNSUPPORTED_TRAFFIC_PARAMETERS: UInt32 = 73
CAUSE_INVALID_CALL_REFERENCE: UInt32 = 81
CAUSE_CHANNEL_NONEXISTENT: UInt32 = 82
CAUSE_INCOMPATIBLE_DESTINATION: UInt32 = 88
CAUSE_INVALID_ENDPOINT_REFERENCE: UInt32 = 89
CAUSE_INVALID_TRANSIT_NETWORK_SELECTION: UInt32 = 91
CAUSE_TOO_MANY_PENDING_ADD_PARTY: UInt32 = 92
CAUSE_AAL_PARAMETERS_UNSUPPORTED: UInt32 = 93
CAUSE_MANDATORY_IE_MISSING: UInt32 = 96
CAUSE_UNIMPLEMENTED_MESSAGE_TYPE: UInt32 = 97
CAUSE_UNIMPLEMENTED_IE: UInt32 = 99
CAUSE_INVALID_IE_CONTENTS: UInt32 = 100
CAUSE_INVALID_STATE_FOR_MESSAGE: UInt32 = 101
CAUSE_RECOVERY_ON_TIMEOUT: UInt32 = 102
CAUSE_INCORRECT_MESSAGE_LENGTH: UInt32 = 104
CAUSE_PROTOCOL_ERROR: UInt32 = 111
CAUSE_COND_UNKNOWN: UInt32 = 0
CAUSE_COND_PERMANENT: UInt32 = 1
CAUSE_COND_TRANSIENT: UInt32 = 2
CAUSE_REASON_USER: UInt32 = 0
CAUSE_REASON_IE_MISSING: UInt32 = 4
CAUSE_REASON_IE_INSUFFICIENT: UInt32 = 8
CAUSE_PU_PROVIDER: UInt32 = 0
CAUSE_PU_USER: UInt32 = 8
CAUSE_NA_NORMAL: UInt32 = 0
CAUSE_NA_ABNORMAL: UInt32 = 4
QOS_CLASS0: UInt32 = 0
QOS_CLASS1: UInt32 = 1
QOS_CLASS2: UInt32 = 2
QOS_CLASS3: UInt32 = 3
QOS_CLASS4: UInt32 = 4
TNS_TYPE_NATIONAL: UInt32 = 64
TNS_PLAN_CARRIER_ID_CODE: UInt32 = 1
SIO_GET_NUMBER_OF_ATM_DEVICES: UInt32 = 1343619073
SIO_GET_ATM_ADDRESS: UInt32 = 3491102722
SIO_ASSOCIATE_PVC: UInt32 = 2417360899
SIO_GET_ATM_CONNECTION_ID: UInt32 = 1343619076
WSPDESCRIPTION_LEN: UInt32 = 255
WSS_OPERATION_IN_PROGRESS: Int32 = 259
LSP_SYSTEM: UInt32 = 2147483648
LSP_INSPECTOR: UInt32 = 1
LSP_REDIRECTOR: UInt32 = 2
LSP_PROXY: UInt32 = 4
LSP_FIREWALL: UInt32 = 8
LSP_INBOUND_MODIFY: UInt32 = 16
LSP_OUTBOUND_MODIFY: UInt32 = 32
LSP_CRYPTO_COMPRESS: UInt32 = 64
LSP_LOCAL_CACHE: UInt32 = 128
UDP_NOCHECKSUM: UInt32 = 1
UDP_CHECKSUM_COVERAGE: UInt32 = 20
GAI_STRERROR_BUFFER_SIZE: UInt32 = 1024
IPX_PTYPE: UInt32 = 16384
IPX_FILTERPTYPE: UInt32 = 16385
IPX_STOPFILTERPTYPE: UInt32 = 16387
IPX_DSTYPE: UInt32 = 16386
IPX_EXTENDED_ADDRESS: UInt32 = 16388
IPX_RECVHDR: UInt32 = 16389
IPX_MAXSIZE: UInt32 = 16390
IPX_ADDRESS: UInt32 = 16391
IPX_GETNETINFO: UInt32 = 16392
IPX_GETNETINFO_NORIP: UInt32 = 16393
IPX_SPXGETCONNECTIONSTATUS: UInt32 = 16395
IPX_ADDRESS_NOTIFY: UInt32 = 16396
IPX_MAX_ADAPTER_NUM: UInt32 = 16397
IPX_RERIPNETNUMBER: UInt32 = 16398
IPX_RECEIVE_BROADCAST: UInt32 = 16399
IPX_IMMEDIATESPXACK: UInt32 = 16400
IPPROTO_RM: UInt32 = 113
MAX_MCAST_TTL: UInt32 = 255
RM_OPTIONSBASE: UInt32 = 1000
RM_RATE_WINDOW_SIZE: UInt32 = 1001
RM_SET_MESSAGE_BOUNDARY: UInt32 = 1002
RM_FLUSHCACHE: UInt32 = 1003
RM_SENDER_WINDOW_ADVANCE_METHOD: UInt32 = 1004
RM_SENDER_STATISTICS: UInt32 = 1005
RM_LATEJOIN: UInt32 = 1006
RM_SET_SEND_IF: UInt32 = 1007
RM_ADD_RECEIVE_IF: UInt32 = 1008
RM_DEL_RECEIVE_IF: UInt32 = 1009
RM_SEND_WINDOW_ADV_RATE: UInt32 = 1010
RM_USE_FEC: UInt32 = 1011
RM_SET_MCAST_TTL: UInt32 = 1012
RM_RECEIVER_STATISTICS: UInt32 = 1013
RM_HIGH_SPEED_INTRANET_OPT: UInt32 = 1014
SENDER_DEFAULT_RATE_KBITS_PER_SEC: UInt32 = 56
SENDER_DEFAULT_WINDOW_ADV_PERCENTAGE: UInt32 = 15
MAX_WINDOW_INCREMENT_PERCENTAGE: UInt32 = 25
SENDER_DEFAULT_LATE_JOINER_PERCENTAGE: UInt32 = 0
SENDER_MAX_LATE_JOINER_PERCENTAGE: UInt32 = 75
BITS_PER_BYTE: UInt32 = 8
LOG2_BITS_PER_BYTE: UInt32 = 3
UNIX_PATH_MAX: UInt32 = 108
SIO_AF_UNIX_GETPEERPID: UInt32 = 1476395264
SIO_AF_UNIX_SETBINDPARENTPATH: UInt32 = 2550137089
SIO_AF_UNIX_SETCONNPARENTPATH: UInt32 = 2550137090
ISOPROTO_TP0: UInt32 = 25
ISOPROTO_TP1: UInt32 = 26
ISOPROTO_TP2: UInt32 = 27
ISOPROTO_TP3: UInt32 = 28
ISOPROTO_TP4: UInt32 = 29
ISOPROTO_TP: UInt32 = 29
ISOPROTO_CLTP: UInt32 = 30
ISOPROTO_CLNP: UInt32 = 31
ISOPROTO_X25: UInt32 = 32
ISOPROTO_INACT_NL: UInt32 = 33
ISOPROTO_ESIS: UInt32 = 34
ISOPROTO_INTRAISIS: UInt32 = 35
ISO_MAX_ADDR_LENGTH: UInt32 = 64
ISO_HIERARCHICAL: UInt32 = 0
ISO_NON_HIERARCHICAL: UInt32 = 1
ISO_EXP_DATA_USE: UInt32 = 0
ISO_EXP_DATA_NUSE: UInt32 = 1
NSPROTO_IPX: UInt32 = 1000
NSPROTO_SPX: UInt32 = 1256
NSPROTO_SPXII: UInt32 = 1257
NETBIOS_NAME_LENGTH: UInt32 = 16
NETBIOS_UNIQUE_NAME: UInt32 = 0
NETBIOS_GROUP_NAME: UInt32 = 1
NETBIOS_TYPE_QUICK_UNIQUE: UInt32 = 2
NETBIOS_TYPE_QUICK_GROUP: UInt32 = 3
VNSPROTO_IPC: UInt32 = 1
VNSPROTO_RELIABLE_IPC: UInt32 = 2
VNSPROTO_SPP: UInt32 = 3
_LITTLE_ENDIAN: UInt32 = 1234
_BIG_ENDIAN: UInt32 = 4321
_PDP_ENDIAN: UInt32 = 3412
BYTE_ORDER: UInt32 = 1234
DL_ADDRESS_LENGTH_MAXIMUM: UInt32 = 32
DL_HEADER_LENGTH_MAXIMUM: UInt32 = 64
SNAP_DSAP: UInt32 = 170
SNAP_SSAP: UInt32 = 170
SNAP_CONTROL: UInt32 = 3
SNAP_OUI: UInt32 = 0
ETH_LENGTH_OF_HEADER: UInt32 = 14
ETH_LENGTH_OF_VLAN_HEADER: UInt32 = 4
ETH_LENGTH_OF_SNAP_HEADER: UInt32 = 8
ETHERNET_TYPE_MINIMUM: UInt32 = 1536
ETHERNET_TYPE_IPV4: UInt32 = 2048
ETHERNET_TYPE_ARP: UInt32 = 2054
ETHERNET_TYPE_IPV6: UInt32 = 34525
ETHERNET_TYPE_802_1Q: UInt32 = 33024
ETHERNET_TYPE_802_1AD: UInt32 = 34984
IP_VER_MASK: UInt32 = 240
IPV4_VERSION: UInt32 = 4
MAX_IPV4_PACKET: UInt32 = 65535
MAX_IPV4_HLEN: UInt32 = 60
IPV4_MINIMUM_MTU: UInt32 = 576
IPV4_MIN_MINIMUM_MTU: UInt32 = 352
IPV4_MAX_MINIMUM_MTU: UInt32 = 576
SIZEOF_IP_OPT_ROUTING_HEADER: UInt32 = 3
SIZEOF_IP_OPT_TIMESTAMP_HEADER: UInt32 = 4
SIZEOF_IP_OPT_SECURITY: UInt32 = 11
SIZEOF_IP_OPT_STREAMIDENTIFIER: UInt32 = 4
SIZEOF_IP_OPT_ROUTERALERT: UInt32 = 4
IP4_OFF_MASK: UInt32 = 65311
ICMPV4_INVALID_PREFERENCE_LEVEL: UInt32 = 2147483648
IGMP_QUERY_TYPE: UInt32 = 17
IGMP_VERSION1_REPORT_TYPE: UInt32 = 18
IGMP_VERSION2_REPORT_TYPE: UInt32 = 22
IGMP_LEAVE_GROUP_TYPE: UInt32 = 23
IGMP_VERSION3_REPORT_TYPE: UInt32 = 34
IPV6_VERSION: UInt32 = 96
IPV6_TRAFFIC_CLASS_MASK: UInt32 = 49167
IPV6_FULL_TRAFFIC_CLASS_MASK: UInt32 = 61455
IPV6_ECN_MASK: UInt32 = 12288
IPV6_FLOW_LABEL_MASK: UInt32 = 4294905600
MAX_IPV6_PAYLOAD: UInt32 = 65535
IPV6_ECN_SHIFT: UInt32 = 12
IPV6_MINIMUM_MTU: UInt32 = 1280
IP6F_OFF_MASK: UInt32 = 63743
IP6F_RESERVED_MASK: UInt32 = 1536
IP6F_MORE_FRAG: UInt32 = 256
EXT_LEN_UNIT: UInt32 = 8
IP6OPT_TYPE_SKIP: UInt32 = 0
IP6OPT_TYPE_DISCARD: UInt32 = 64
IP6OPT_TYPE_FORCEICMP: UInt32 = 128
IP6OPT_TYPE_ICMP: UInt32 = 192
IP6OPT_MUTABLE: UInt32 = 32
ICMP6_DST_UNREACH_NOROUTE: UInt32 = 0
ICMP6_DST_UNREACH_ADMIN: UInt32 = 1
ICMP6_DST_UNREACH_BEYONDSCOPE: UInt32 = 2
ICMP6_DST_UNREACH_ADDR: UInt32 = 3
ICMP6_DST_UNREACH_NOPORT: UInt32 = 4
ICMP6_TIME_EXCEED_TRANSIT: UInt32 = 0
ICMP6_TIME_EXCEED_REASSEMBLY: UInt32 = 1
ICMP6_PARAMPROB_HEADER: UInt32 = 0
ICMP6_PARAMPROB_NEXTHEADER: UInt32 = 1
ICMP6_PARAMPROB_OPTION: UInt32 = 2
ICMPV6_ECHO_REQUEST_FLAG_REVERSE: UInt32 = 1
ND_RA_FLAG_MANAGED: UInt32 = 128
ND_RA_FLAG_OTHER: UInt32 = 64
ND_RA_FLAG_HOME_AGENT: UInt32 = 32
ND_RA_FLAG_PREFERENCE: UInt32 = 24
ND_NA_FLAG_ROUTER: UInt32 = 2147483648
ND_NA_FLAG_SOLICITED: UInt32 = 1073741824
ND_NA_FLAG_OVERRIDE: UInt32 = 536870912
ND_OPT_PI_FLAG_ONLINK: UInt32 = 128
ND_OPT_PI_FLAG_AUTO: UInt32 = 64
ND_OPT_PI_FLAG_ROUTER_ADDR: UInt32 = 32
ND_OPT_PI_FLAG_SITE_PREFIX: UInt32 = 16
ND_OPT_PI_FLAG_ROUTE: UInt32 = 1
ND_OPT_RI_FLAG_PREFERENCE: UInt32 = 24
ND_OPT_RDNSS_MIN_LEN: UInt32 = 24
ND_OPT_DNSSL_MIN_LEN: UInt32 = 16
IN6_EMBEDDEDV4_UOCTET_POSITION: UInt32 = 8
IN6_EMBEDDEDV4_BITS_IN_BYTE: UInt32 = 8
TH_FIN: UInt32 = 1
TH_SYN: UInt32 = 2
TH_RST: UInt32 = 4
TH_PSH: UInt32 = 8
TH_ACK: UInt32 = 16
TH_URG: UInt32 = 32
TH_ECE: UInt32 = 64
TH_CWR: UInt32 = 128
TH_OPT_EOL: UInt32 = 0
TH_OPT_NOP: UInt32 = 1
TH_OPT_MSS: UInt32 = 2
TH_OPT_WS: UInt32 = 3
TH_OPT_SACK_PERMITTED: UInt32 = 4
TH_OPT_SACK: UInt32 = 5
TH_OPT_TS: UInt32 = 8
TH_OPT_FASTOPEN: UInt32 = 34
INVALID_SOCKET: win32more.Networking.WinSock.SOCKET = -1
WSA_INFINITE: UInt32 = 4294967295
IOC_INOUT: UInt32 = 3221225472
FIONREAD: Int32 = 1074030207
FIONBIO: Int32 = -2147195266
FIOASYNC: Int32 = -2147195267
SIOCSHIWAT: Int32 = -2147192064
SIOCGHIWAT: Int32 = 1074033409
SIOCSLOWAT: Int32 = -2147192062
SIOCGLOWAT: Int32 = 1074033411
SIOCATMARK: Int32 = 1074033415
POLLIN: UInt16 = 768
LM_HB_Extension: Int32 = 128
LM_HB1_PnP: Int32 = 1
LM_HB1_PDA_Palmtop: Int32 = 2
LM_HB1_Computer: Int32 = 4
LM_HB1_Printer: Int32 = 8
LM_HB1_Modem: Int32 = 16
LM_HB1_Fax: Int32 = 32
LM_HB1_LANAccess: Int32 = 64
LM_HB2_Telephony: Int32 = 1
LM_HB2_FileServer: Int32 = 2
@winfunctype('WS2_32.dll')
def WSCEnumProtocols32(lpiProtocols: POINTER(Int32), lpProtocolBuffer: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpdwBufferLength: POINTER(UInt32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCDeinstallProvider32(lpProviderId: POINTER(Guid), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCInstallProvider64_32(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProtocolInfoList: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), dwNumberOfEntries: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCGetProviderPath32(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProviderDllPathLen: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCUpdateProvider32(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProtocolInfoList: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), dwNumberOfEntries: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCSetProviderInfo32(lpProviderId: POINTER(Guid), InfoType: win32more.Networking.WinSock.WSC_PROVIDER_INFO_TYPE, Info: c_char_p_no, InfoSize: UIntPtr, Flags: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCGetProviderInfo32(lpProviderId: POINTER(Guid), InfoType: win32more.Networking.WinSock.WSC_PROVIDER_INFO_TYPE, Info: c_char_p_no, InfoSize: POINTER(UIntPtr), Flags: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCEnumNameSpaceProviders32(lpdwBufferLength: POINTER(UInt32), lpnspBuffer: POINTER(win32more.Networking.WinSock.WSANAMESPACE_INFOW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCEnumNameSpaceProvidersEx32(lpdwBufferLength: POINTER(UInt32), lpnspBuffer: POINTER(win32more.Networking.WinSock.WSANAMESPACE_INFOEXW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCInstallNameSpace32(lpszIdentifier: win32more.Foundation.PWSTR, lpszPathName: win32more.Foundation.PWSTR, dwNameSpace: UInt32, dwVersion: UInt32, lpProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCInstallNameSpaceEx32(lpszIdentifier: win32more.Foundation.PWSTR, lpszPathName: win32more.Foundation.PWSTR, dwNameSpace: UInt32, dwVersion: UInt32, lpProviderId: POINTER(Guid), lpProviderSpecific: POINTER(win32more.System.Com.BLOB_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCUnInstallNameSpace32(lpProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCEnableNSProvider32(lpProviderId: POINTER(Guid), fEnable: win32more.Foundation.BOOL) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCInstallProviderAndChains64_32(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpszProviderDllPath32: win32more.Foundation.PWSTR, lpszLspName: win32more.Foundation.PWSTR, dwServiceFlags: UInt32, lpProtocolInfoList: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), dwNumberOfEntries: UInt32, lpdwCatalogEntryId: POINTER(UInt32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCWriteProviderOrder32(lpwdCatalogEntryId: POINTER(UInt32), dwNumberOfEntries: UInt32) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCWriteNameSpaceOrder32(lpProviderId: POINTER(Guid), dwNumberOfEntries: UInt32) -> Int32: ...
@winfunctype('WS2_32.dll')
def __WSAFDIsSet(fd: win32more.Networking.WinSock.SOCKET, param1: POINTER(win32more.Networking.WinSock.FD_SET_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def accept(s: win32more.Networking.WinSock.SOCKET, addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head), addrlen: POINTER(Int32)) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype('WS2_32.dll')
def bind(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def closesocket(s: win32more.Networking.WinSock.SOCKET) -> Int32: ...
@winfunctype('WS2_32.dll')
def connect(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def ioctlsocket(s: win32more.Networking.WinSock.SOCKET, cmd: Int32, argp: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def getpeername(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def getsockname(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def getsockopt(s: win32more.Networking.WinSock.SOCKET, level: Int32, optname: Int32, optval: win32more.Foundation.PSTR, optlen: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def htonl(hostlong: UInt32) -> UInt32: ...
@winfunctype('WS2_32.dll')
def htons(hostshort: UInt16) -> UInt16: ...
@winfunctype('WS2_32.dll')
def inet_addr(cp: win32more.Foundation.PSTR) -> UInt32: ...
@winfunctype('WS2_32.dll')
def inet_ntoa(in_: win32more.Networking.WinSock.IN_ADDR) -> win32more.Foundation.PSTR: ...
@winfunctype('WS2_32.dll')
def listen(s: win32more.Networking.WinSock.SOCKET, backlog: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def ntohl(netlong: UInt32) -> UInt32: ...
@winfunctype('WS2_32.dll')
def ntohs(netshort: UInt16) -> UInt16: ...
@winfunctype('WS2_32.dll')
def recv(s: win32more.Networking.WinSock.SOCKET, buf: win32more.Foundation.PSTR, len: Int32, flags: win32more.Networking.WinSock.SEND_RECV_FLAGS) -> Int32: ...
@winfunctype('WS2_32.dll')
def recvfrom(s: win32more.Networking.WinSock.SOCKET, buf: win32more.Foundation.PSTR, len: Int32, flags: Int32, from_: POINTER(win32more.Networking.WinSock.SOCKADDR_head), fromlen: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def select(nfds: Int32, readfds: POINTER(win32more.Networking.WinSock.FD_SET_head), writefds: POINTER(win32more.Networking.WinSock.FD_SET_head), exceptfds: POINTER(win32more.Networking.WinSock.FD_SET_head), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def send(s: win32more.Networking.WinSock.SOCKET, buf: win32more.Foundation.PSTR, len: Int32, flags: win32more.Networking.WinSock.SEND_RECV_FLAGS) -> Int32: ...
@winfunctype('WS2_32.dll')
def sendto(s: win32more.Networking.WinSock.SOCKET, buf: win32more.Foundation.PSTR, len: Int32, flags: Int32, to: POINTER(win32more.Networking.WinSock.SOCKADDR_head), tolen: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def setsockopt(s: win32more.Networking.WinSock.SOCKET, level: Int32, optname: Int32, optval: win32more.Foundation.PSTR, optlen: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def shutdown(s: win32more.Networking.WinSock.SOCKET, how: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def socket(af: Int32, type: Int32, protocol: Int32) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype('WS2_32.dll')
def gethostbyaddr(addr: win32more.Foundation.PSTR, len: Int32, type: Int32) -> POINTER(win32more.Networking.WinSock.HOSTENT_head): ...
@winfunctype('WS2_32.dll')
def gethostbyname(name: win32more.Foundation.PSTR) -> POINTER(win32more.Networking.WinSock.HOSTENT_head): ...
@winfunctype('WS2_32.dll')
def gethostname(name: win32more.Foundation.PSTR, namelen: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def GetHostNameW(name: win32more.Foundation.PWSTR, namelen: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def getservbyport(port: Int32, proto: win32more.Foundation.PSTR) -> POINTER(win32more.Networking.WinSock.SERVENT_head): ...
@winfunctype('WS2_32.dll')
def getservbyname(name: win32more.Foundation.PSTR, proto: win32more.Foundation.PSTR) -> POINTER(win32more.Networking.WinSock.SERVENT_head): ...
@winfunctype('WS2_32.dll')
def getprotobynumber(number: Int32) -> POINTER(win32more.Networking.WinSock.PROTOENT_head): ...
@winfunctype('WS2_32.dll')
def getprotobyname(name: win32more.Foundation.PSTR) -> POINTER(win32more.Networking.WinSock.PROTOENT_head): ...
@winfunctype('WS2_32.dll')
def WSAStartup(wVersionRequested: UInt16, lpWSAData: POINTER(win32more.Networking.WinSock.WSADATA_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSACleanup() -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASetLastError(iError: Int32) -> Void: ...
@winfunctype('WS2_32.dll')
def WSAGetLastError() -> win32more.Networking.WinSock.WSA_ERROR: ...
@winfunctype('WS2_32.dll')
def WSAIsBlocking() -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSAUnhookBlockingHook() -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASetBlockingHook(lpBlockFunc: win32more.Foundation.FARPROC) -> win32more.Foundation.FARPROC: ...
@winfunctype('WS2_32.dll')
def WSACancelBlockingCall() -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAAsyncGetServByName(hWnd: win32more.Foundation.HWND, wMsg: UInt32, name: win32more.Foundation.PSTR, proto: win32more.Foundation.PSTR, buf: win32more.Foundation.PSTR, buflen: Int32) -> win32more.Foundation.HANDLE: ...
@winfunctype('WS2_32.dll')
def WSAAsyncGetServByPort(hWnd: win32more.Foundation.HWND, wMsg: UInt32, port: Int32, proto: win32more.Foundation.PSTR, buf: win32more.Foundation.PSTR, buflen: Int32) -> win32more.Foundation.HANDLE: ...
@winfunctype('WS2_32.dll')
def WSAAsyncGetProtoByName(hWnd: win32more.Foundation.HWND, wMsg: UInt32, name: win32more.Foundation.PSTR, buf: win32more.Foundation.PSTR, buflen: Int32) -> win32more.Foundation.HANDLE: ...
@winfunctype('WS2_32.dll')
def WSAAsyncGetProtoByNumber(hWnd: win32more.Foundation.HWND, wMsg: UInt32, number: Int32, buf: win32more.Foundation.PSTR, buflen: Int32) -> win32more.Foundation.HANDLE: ...
@winfunctype('WS2_32.dll')
def WSAAsyncGetHostByName(hWnd: win32more.Foundation.HWND, wMsg: UInt32, name: win32more.Foundation.PSTR, buf: win32more.Foundation.PSTR, buflen: Int32) -> win32more.Foundation.HANDLE: ...
@winfunctype('WS2_32.dll')
def WSAAsyncGetHostByAddr(hWnd: win32more.Foundation.HWND, wMsg: UInt32, addr: win32more.Foundation.PSTR, len: Int32, type: Int32, buf: win32more.Foundation.PSTR, buflen: Int32) -> win32more.Foundation.HANDLE: ...
@winfunctype('WS2_32.dll')
def WSACancelAsyncRequest(hAsyncTaskHandle: win32more.Foundation.HANDLE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAAsyncSelect(s: win32more.Networking.WinSock.SOCKET, hWnd: win32more.Foundation.HWND, wMsg: UInt32, lEvent: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAAccept(s: win32more.Networking.WinSock.SOCKET, addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head), addrlen: POINTER(Int32), lpfnCondition: win32more.Networking.WinSock.LPCONDITIONPROC, dwCallbackData: UIntPtr) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype('WS2_32.dll')
def WSACloseEvent(hEvent: win32more.Foundation.HANDLE) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSAConnect(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32, lpCallerData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpCalleeData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpSQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpGQOS: POINTER(win32more.Networking.WinSock.QOS_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAConnectByNameW(s: win32more.Networking.WinSock.SOCKET, nodename: win32more.Foundation.PWSTR, servicename: win32more.Foundation.PWSTR, LocalAddressLength: POINTER(UInt32), LocalAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), RemoteAddressLength: POINTER(UInt32), RemoteAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), Reserved: POINTER(win32more.System.IO.OVERLAPPED_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSAConnectByNameA(s: win32more.Networking.WinSock.SOCKET, nodename: win32more.Foundation.PSTR, servicename: win32more.Foundation.PSTR, LocalAddressLength: POINTER(UInt32), LocalAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), RemoteAddressLength: POINTER(UInt32), RemoteAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), Reserved: POINTER(win32more.System.IO.OVERLAPPED_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSAConnectByList(s: win32more.Networking.WinSock.SOCKET, SocketAddress: POINTER(win32more.Networking.WinSock.SOCKET_ADDRESS_LIST_head), LocalAddressLength: POINTER(UInt32), LocalAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), RemoteAddressLength: POINTER(UInt32), RemoteAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), Reserved: POINTER(win32more.System.IO.OVERLAPPED_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSACreateEvent() -> win32more.Foundation.HANDLE: ...
@winfunctype('WS2_32.dll')
def WSADuplicateSocketA(s: win32more.Networking.WinSock.SOCKET, dwProcessId: UInt32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOA_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSADuplicateSocketW(s: win32more.Networking.WinSock.SOCKET, dwProcessId: UInt32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEnumNetworkEvents(s: win32more.Networking.WinSock.SOCKET, hEventObject: win32more.Foundation.HANDLE, lpNetworkEvents: POINTER(win32more.Networking.WinSock.WSANETWORKEVENTS_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEnumProtocolsA(lpiProtocols: POINTER(Int32), lpProtocolBuffer: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOA_head), lpdwBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEnumProtocolsW(lpiProtocols: POINTER(Int32), lpProtocolBuffer: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpdwBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEventSelect(s: win32more.Networking.WinSock.SOCKET, hEventObject: win32more.Foundation.HANDLE, lNetworkEvents: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAGetOverlappedResult(s: win32more.Networking.WinSock.SOCKET, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpcbTransfer: POINTER(UInt32), fWait: win32more.Foundation.BOOL, lpdwFlags: POINTER(UInt32)) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSAGetQOSByName(s: win32more.Networking.WinSock.SOCKET, lpQOSName: POINTER(win32more.Networking.WinSock.WSABUF_head), lpQOS: POINTER(win32more.Networking.WinSock.QOS_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSAHtonl(s: win32more.Networking.WinSock.SOCKET, hostlong: UInt32, lpnetlong: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAHtons(s: win32more.Networking.WinSock.SOCKET, hostshort: UInt16, lpnetshort: POINTER(UInt16)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAIoctl(s: win32more.Networking.WinSock.SOCKET, dwIoControlCode: UInt32, lpvInBuffer: c_void_p, cbInBuffer: UInt32, lpvOutBuffer: c_void_p, cbOutBuffer: UInt32, lpcbBytesReturned: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAJoinLeaf(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32, lpCallerData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpCalleeData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpSQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpGQOS: POINTER(win32more.Networking.WinSock.QOS_head), dwFlags: UInt32) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype('WS2_32.dll')
def WSANtohl(s: win32more.Networking.WinSock.SOCKET, netlong: UInt32, lphostlong: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSANtohs(s: win32more.Networking.WinSock.SOCKET, netshort: UInt16, lphostshort: POINTER(UInt16)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSARecv(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesRecvd: POINTER(UInt32), lpFlags: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSARecvDisconnect(s: win32more.Networking.WinSock.SOCKET, lpInboundDisconnectData: POINTER(win32more.Networking.WinSock.WSABUF_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSARecvFrom(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesRecvd: POINTER(UInt32), lpFlags: POINTER(UInt32), lpFrom: POINTER(win32more.Networking.WinSock.SOCKADDR_head), lpFromlen: POINTER(Int32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAResetEvent(hEvent: win32more.Foundation.HANDLE) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSASend(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesSent: POINTER(UInt32), dwFlags: UInt32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASendMsg(Handle: win32more.Networking.WinSock.SOCKET, lpMsg: POINTER(win32more.Networking.WinSock.WSAMSG_head), dwFlags: UInt32, lpNumberOfBytesSent: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASendDisconnect(s: win32more.Networking.WinSock.SOCKET, lpOutboundDisconnectData: POINTER(win32more.Networking.WinSock.WSABUF_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASendTo(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesSent: POINTER(UInt32), dwFlags: UInt32, lpTo: POINTER(win32more.Networking.WinSock.SOCKADDR_head), iTolen: Int32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASetEvent(hEvent: win32more.Foundation.HANDLE) -> win32more.Foundation.BOOL: ...
@winfunctype('WS2_32.dll')
def WSASocketA(af: Int32, type: Int32, protocol: Int32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOA_head), g: UInt32, dwFlags: UInt32) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype('WS2_32.dll')
def WSASocketW(af: Int32, type: Int32, protocol: Int32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), g: UInt32, dwFlags: UInt32) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype('WS2_32.dll')
def WSAWaitForMultipleEvents(cEvents: UInt32, lphEvents: POINTER(win32more.Foundation.HANDLE), fWaitAll: win32more.Foundation.BOOL, dwTimeout: UInt32, fAlertable: win32more.Foundation.BOOL) -> UInt32: ...
@winfunctype('WS2_32.dll')
def WSAAddressToStringA(lpsaAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), dwAddressLength: UInt32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOA_head), lpszAddressString: win32more.Foundation.PSTR, lpdwAddressStringLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAAddressToStringW(lpsaAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), dwAddressLength: UInt32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpszAddressString: win32more.Foundation.PWSTR, lpdwAddressStringLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAStringToAddressA(AddressString: win32more.Foundation.PSTR, AddressFamily: Int32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOA_head), lpAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), lpAddressLength: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAStringToAddressW(AddressString: win32more.Foundation.PWSTR, AddressFamily: Int32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), lpAddressLength: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSALookupServiceBeginA(lpqsRestrictions: POINTER(win32more.Networking.WinSock.WSAQUERYSETA_head), dwControlFlags: UInt32, lphLookup: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSALookupServiceBeginW(lpqsRestrictions: POINTER(win32more.Networking.WinSock.WSAQUERYSETW_head), dwControlFlags: UInt32, lphLookup: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSALookupServiceNextA(hLookup: win32more.Foundation.HANDLE, dwControlFlags: UInt32, lpdwBufferLength: POINTER(UInt32), lpqsResults: POINTER(win32more.Networking.WinSock.WSAQUERYSETA_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSALookupServiceNextW(hLookup: win32more.Foundation.HANDLE, dwControlFlags: UInt32, lpdwBufferLength: POINTER(UInt32), lpqsResults: POINTER(win32more.Networking.WinSock.WSAQUERYSETW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSANSPIoctl(hLookup: win32more.Foundation.HANDLE, dwControlCode: UInt32, lpvInBuffer: c_void_p, cbInBuffer: UInt32, lpvOutBuffer: c_void_p, cbOutBuffer: UInt32, lpcbBytesReturned: POINTER(UInt32), lpCompletion: POINTER(win32more.Networking.WinSock.WSACOMPLETION_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSALookupServiceEnd(hLookup: win32more.Foundation.HANDLE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAInstallServiceClassA(lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOA_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAInstallServiceClassW(lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSARemoveServiceClass(lpServiceClassId: POINTER(Guid)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAGetServiceClassInfoA(lpProviderId: POINTER(Guid), lpServiceClassId: POINTER(Guid), lpdwBufSize: POINTER(UInt32), lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOA_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAGetServiceClassInfoW(lpProviderId: POINTER(Guid), lpServiceClassId: POINTER(Guid), lpdwBufSize: POINTER(UInt32), lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEnumNameSpaceProvidersA(lpdwBufferLength: POINTER(UInt32), lpnspBuffer: POINTER(win32more.Networking.WinSock.WSANAMESPACE_INFOA_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEnumNameSpaceProvidersW(lpdwBufferLength: POINTER(UInt32), lpnspBuffer: POINTER(win32more.Networking.WinSock.WSANAMESPACE_INFOW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEnumNameSpaceProvidersExA(lpdwBufferLength: POINTER(UInt32), lpnspBuffer: POINTER(win32more.Networking.WinSock.WSANAMESPACE_INFOEXA_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAEnumNameSpaceProvidersExW(lpdwBufferLength: POINTER(UInt32), lpnspBuffer: POINTER(win32more.Networking.WinSock.WSANAMESPACE_INFOEXW_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAGetServiceClassNameByClassIdA(lpServiceClassId: POINTER(Guid), lpszServiceClassName: win32more.Foundation.PSTR, lpdwBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAGetServiceClassNameByClassIdW(lpServiceClassId: POINTER(Guid), lpszServiceClassName: win32more.Foundation.PWSTR, lpdwBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASetServiceA(lpqsRegInfo: POINTER(win32more.Networking.WinSock.WSAQUERYSETA_head), essoperation: win32more.Networking.WinSock.WSAESETSERVICEOP, dwControlFlags: UInt32) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSASetServiceW(lpqsRegInfo: POINTER(win32more.Networking.WinSock.WSAQUERYSETW_head), essoperation: win32more.Networking.WinSock.WSAESETSERVICEOP, dwControlFlags: UInt32) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAProviderConfigChange(lpNotificationHandle: POINTER(win32more.Foundation.HANDLE), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAPoll(fdArray: POINTER(win32more.Networking.WinSock.WSAPOLLFD_head), fds: UInt32, timeout: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def ProcessSocketNotifications(completionPort: win32more.Foundation.HANDLE, registrationCount: UInt32, registrationInfos: POINTER(win32more.Networking.WinSock.SOCK_NOTIFY_REGISTRATION_head), timeoutMs: UInt32, completionCount: UInt32, completionPortEntries: POINTER(win32more.System.IO.OVERLAPPED_ENTRY_head), receivedEntryCount: POINTER(UInt32)) -> UInt32: ...
@winfunctype('ntdll.dll')
def RtlIpv4AddressToStringA(Addr: POINTER(win32more.Networking.WinSock.IN_ADDR_head), S: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@winfunctype('ntdll.dll')
def RtlIpv4AddressToStringExA(Address: POINTER(win32more.Networking.WinSock.IN_ADDR_head), Port: UInt16, AddressString: win32more.Foundation.PSTR, AddressStringLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv4AddressToStringW(Addr: POINTER(win32more.Networking.WinSock.IN_ADDR_head), S: win32more.Foundation.PWSTR) -> win32more.Foundation.PWSTR: ...
@winfunctype('ntdll.dll')
def RtlIpv4AddressToStringExW(Address: POINTER(win32more.Networking.WinSock.IN_ADDR_head), Port: UInt16, AddressString: win32more.Foundation.PWSTR, AddressStringLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv4StringToAddressA(S: win32more.Foundation.PSTR, Strict: win32more.Foundation.BOOLEAN, Terminator: POINTER(win32more.Foundation.PSTR), Addr: POINTER(win32more.Networking.WinSock.IN_ADDR_head)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv4StringToAddressExA(AddressString: win32more.Foundation.PSTR, Strict: win32more.Foundation.BOOLEAN, Address: POINTER(win32more.Networking.WinSock.IN_ADDR_head), Port: POINTER(UInt16)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv4StringToAddressW(S: win32more.Foundation.PWSTR, Strict: win32more.Foundation.BOOLEAN, Terminator: POINTER(win32more.Foundation.PWSTR), Addr: POINTER(win32more.Networking.WinSock.IN_ADDR_head)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv4StringToAddressExW(AddressString: win32more.Foundation.PWSTR, Strict: win32more.Foundation.BOOLEAN, Address: POINTER(win32more.Networking.WinSock.IN_ADDR_head), Port: POINTER(UInt16)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv6AddressToStringA(Addr: POINTER(win32more.Networking.WinSock.IN6_ADDR_head), S: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@winfunctype('ntdll.dll')
def RtlIpv6AddressToStringExA(Address: POINTER(win32more.Networking.WinSock.IN6_ADDR_head), ScopeId: UInt32, Port: UInt16, AddressString: win32more.Foundation.PSTR, AddressStringLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv6AddressToStringW(Addr: POINTER(win32more.Networking.WinSock.IN6_ADDR_head), S: win32more.Foundation.PWSTR) -> win32more.Foundation.PWSTR: ...
@winfunctype('ntdll.dll')
def RtlIpv6AddressToStringExW(Address: POINTER(win32more.Networking.WinSock.IN6_ADDR_head), ScopeId: UInt32, Port: UInt16, AddressString: win32more.Foundation.PWSTR, AddressStringLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv6StringToAddressA(S: win32more.Foundation.PSTR, Terminator: POINTER(win32more.Foundation.PSTR), Addr: POINTER(win32more.Networking.WinSock.IN6_ADDR_head)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv6StringToAddressExA(AddressString: win32more.Foundation.PSTR, Address: POINTER(win32more.Networking.WinSock.IN6_ADDR_head), ScopeId: POINTER(UInt32), Port: POINTER(UInt16)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv6StringToAddressW(S: win32more.Foundation.PWSTR, Terminator: POINTER(win32more.Foundation.PWSTR), Addr: POINTER(win32more.Networking.WinSock.IN6_ADDR_head)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlIpv6StringToAddressExW(AddressString: win32more.Foundation.PWSTR, Address: POINTER(win32more.Networking.WinSock.IN6_ADDR_head), ScopeId: POINTER(UInt32), Port: POINTER(UInt16)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlEthernetAddressToStringA(Addr: POINTER(win32more.Networking.WinSock.DL_EUI48_head), S: win32more.Foundation.PSTR) -> win32more.Foundation.PSTR: ...
@winfunctype('ntdll.dll')
def RtlEthernetAddressToStringW(Addr: POINTER(win32more.Networking.WinSock.DL_EUI48_head), S: win32more.Foundation.PWSTR) -> win32more.Foundation.PWSTR: ...
@winfunctype('ntdll.dll')
def RtlEthernetStringToAddressA(S: win32more.Foundation.PSTR, Terminator: POINTER(win32more.Foundation.PSTR), Addr: POINTER(win32more.Networking.WinSock.DL_EUI48_head)) -> Int32: ...
@winfunctype('ntdll.dll')
def RtlEthernetStringToAddressW(S: win32more.Foundation.PWSTR, Terminator: POINTER(win32more.Foundation.PWSTR), Addr: POINTER(win32more.Networking.WinSock.DL_EUI48_head)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def WSARecvEx(s: win32more.Networking.WinSock.SOCKET, buf: win32more.Foundation.PSTR, len: Int32, flags: POINTER(Int32)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def TransmitFile(hSocket: win32more.Networking.WinSock.SOCKET, hFile: win32more.Foundation.HANDLE, nNumberOfBytesToWrite: UInt32, nNumberOfBytesPerSend: UInt32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpTransmitBuffers: POINTER(win32more.Networking.WinSock.TRANSMIT_FILE_BUFFERS_head), dwReserved: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype('MSWSOCK.dll')
def AcceptEx(sListenSocket: win32more.Networking.WinSock.SOCKET, sAcceptSocket: win32more.Networking.WinSock.SOCKET, lpOutputBuffer: c_void_p, dwReceiveDataLength: UInt32, dwLocalAddressLength: UInt32, dwRemoteAddressLength: UInt32, lpdwBytesReceived: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)) -> win32more.Foundation.BOOL: ...
@winfunctype('MSWSOCK.dll')
def GetAcceptExSockaddrs(lpOutputBuffer: c_void_p, dwReceiveDataLength: UInt32, dwLocalAddressLength: UInt32, dwRemoteAddressLength: UInt32, LocalSockaddr: POINTER(POINTER(win32more.Networking.WinSock.SOCKADDR_head)), LocalSockaddrLength: POINTER(Int32), RemoteSockaddr: POINTER(POINTER(win32more.Networking.WinSock.SOCKADDR_head)), RemoteSockaddrLength: POINTER(Int32)) -> Void: ...
@winfunctype('WS2_32.dll')
def WSCEnumProtocols(lpiProtocols: POINTER(Int32), lpProtocolBuffer: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpdwBufferLength: POINTER(UInt32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCDeinstallProvider(lpProviderId: POINTER(Guid), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCInstallProvider(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProtocolInfoList: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), dwNumberOfEntries: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCGetProviderPath(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProviderDllPathLen: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCUpdateProvider(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProtocolInfoList: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), dwNumberOfEntries: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCSetProviderInfo(lpProviderId: POINTER(Guid), InfoType: win32more.Networking.WinSock.WSC_PROVIDER_INFO_TYPE, Info: c_char_p_no, InfoSize: UIntPtr, Flags: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCGetProviderInfo(lpProviderId: POINTER(Guid), InfoType: win32more.Networking.WinSock.WSC_PROVIDER_INFO_TYPE, Info: c_char_p_no, InfoSize: POINTER(UIntPtr), Flags: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCSetApplicationCategory(Path: win32more.Foundation.PWSTR, PathLength: UInt32, Extra: win32more.Foundation.PWSTR, ExtraLength: UInt32, PermittedLspCategories: UInt32, pPrevPermLspCat: POINTER(UInt32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCGetApplicationCategory(Path: win32more.Foundation.PWSTR, PathLength: UInt32, Extra: win32more.Foundation.PWSTR, ExtraLength: UInt32, pPermittedLspCategories: POINTER(UInt32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WPUCompleteOverlappedRequest(s: win32more.Networking.WinSock.SOCKET, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), dwError: UInt32, cbTransferred: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCInstallNameSpace(lpszIdentifier: win32more.Foundation.PWSTR, lpszPathName: win32more.Foundation.PWSTR, dwNameSpace: UInt32, dwVersion: UInt32, lpProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCUnInstallNameSpace(lpProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCInstallNameSpaceEx(lpszIdentifier: win32more.Foundation.PWSTR, lpszPathName: win32more.Foundation.PWSTR, dwNameSpace: UInt32, dwVersion: UInt32, lpProviderId: POINTER(Guid), lpProviderSpecific: POINTER(win32more.System.Com.BLOB_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCEnableNSProvider(lpProviderId: POINTER(Guid), fEnable: win32more.Foundation.BOOL) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAAdvertiseProvider(puuidProviderId: POINTER(Guid), pNSPv2Routine: POINTER(win32more.Networking.WinSock.NSPV2_ROUTINE_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAUnadvertiseProvider(puuidProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSAProviderCompleteAsyncCall(hAsyncCall: win32more.Foundation.HANDLE, iRetCode: Int32) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def EnumProtocolsA(lpiProtocols: POINTER(Int32), lpProtocolBuffer: c_void_p, lpdwBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def EnumProtocolsW(lpiProtocols: POINTER(Int32), lpProtocolBuffer: c_void_p, lpdwBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetAddressByNameA(dwNameSpace: UInt32, lpServiceType: POINTER(Guid), lpServiceName: win32more.Foundation.PSTR, lpiProtocols: POINTER(Int32), dwResolution: UInt32, lpServiceAsyncInfo: POINTER(win32more.Networking.WinSock.SERVICE_ASYNC_INFO_head), lpCsaddrBuffer: c_void_p, lpdwBufferLength: POINTER(UInt32), lpAliasBuffer: win32more.Foundation.PSTR, lpdwAliasBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetAddressByNameW(dwNameSpace: UInt32, lpServiceType: POINTER(Guid), lpServiceName: win32more.Foundation.PWSTR, lpiProtocols: POINTER(Int32), dwResolution: UInt32, lpServiceAsyncInfo: POINTER(win32more.Networking.WinSock.SERVICE_ASYNC_INFO_head), lpCsaddrBuffer: c_void_p, lpdwBufferLength: POINTER(UInt32), lpAliasBuffer: win32more.Foundation.PWSTR, lpdwAliasBufferLength: POINTER(UInt32)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetTypeByNameA(lpServiceName: win32more.Foundation.PSTR, lpServiceType: POINTER(Guid)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetTypeByNameW(lpServiceName: win32more.Foundation.PWSTR, lpServiceType: POINTER(Guid)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetNameByTypeA(lpServiceType: POINTER(Guid), lpServiceName: win32more.Foundation.PSTR, dwNameLength: UInt32) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetNameByTypeW(lpServiceType: POINTER(Guid), lpServiceName: win32more.Foundation.PWSTR, dwNameLength: UInt32) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def SetServiceA(dwNameSpace: UInt32, dwOperation: win32more.Networking.WinSock.SET_SERVICE_OPERATION, dwFlags: UInt32, lpServiceInfo: POINTER(win32more.Networking.WinSock.SERVICE_INFOA_head), lpServiceAsyncInfo: POINTER(win32more.Networking.WinSock.SERVICE_ASYNC_INFO_head), lpdwStatusFlags: POINTER(UInt32)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def SetServiceW(dwNameSpace: UInt32, dwOperation: win32more.Networking.WinSock.SET_SERVICE_OPERATION, dwFlags: UInt32, lpServiceInfo: POINTER(win32more.Networking.WinSock.SERVICE_INFOW_head), lpServiceAsyncInfo: POINTER(win32more.Networking.WinSock.SERVICE_ASYNC_INFO_head), lpdwStatusFlags: POINTER(UInt32)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetServiceA(dwNameSpace: UInt32, lpGuid: POINTER(Guid), lpServiceName: win32more.Foundation.PSTR, dwProperties: UInt32, lpBuffer: c_void_p, lpdwBufferSize: POINTER(UInt32), lpServiceAsyncInfo: POINTER(win32more.Networking.WinSock.SERVICE_ASYNC_INFO_head)) -> Int32: ...
@winfunctype('MSWSOCK.dll')
def GetServiceW(dwNameSpace: UInt32, lpGuid: POINTER(Guid), lpServiceName: win32more.Foundation.PWSTR, dwProperties: UInt32, lpBuffer: c_void_p, lpdwBufferSize: POINTER(UInt32), lpServiceAsyncInfo: POINTER(win32more.Networking.WinSock.SERVICE_ASYNC_INFO_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def getaddrinfo(pNodeName: win32more.Foundation.PSTR, pServiceName: win32more.Foundation.PSTR, pHints: POINTER(win32more.Networking.WinSock.ADDRINFOA_head), ppResult: POINTER(POINTER(win32more.Networking.WinSock.ADDRINFOA_head))) -> Int32: ...
@winfunctype('WS2_32.dll')
def GetAddrInfoW(pNodeName: win32more.Foundation.PWSTR, pServiceName: win32more.Foundation.PWSTR, pHints: POINTER(win32more.Networking.WinSock.ADDRINFOW_head), ppResult: POINTER(POINTER(win32more.Networking.WinSock.ADDRINFOW_head))) -> Int32: ...
@winfunctype('WS2_32.dll')
def GetAddrInfoExA(pName: win32more.Foundation.PSTR, pServiceName: win32more.Foundation.PSTR, dwNameSpace: UInt32, lpNspId: POINTER(Guid), hints: POINTER(win32more.Networking.WinSock.ADDRINFOEXA_head), ppResult: POINTER(POINTER(win32more.Networking.WinSock.ADDRINFOEXA_head)), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpNameHandle: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype('WS2_32.dll')
def GetAddrInfoExW(pName: win32more.Foundation.PWSTR, pServiceName: win32more.Foundation.PWSTR, dwNameSpace: UInt32, lpNspId: POINTER(Guid), hints: POINTER(win32more.Networking.WinSock.ADDRINFOEXW_head), ppResult: POINTER(POINTER(win32more.Networking.WinSock.ADDRINFOEXW_head)), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpHandle: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype('WS2_32.dll')
def GetAddrInfoExCancel(lpHandle: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype('WS2_32.dll')
def GetAddrInfoExOverlappedResult(lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)) -> Int32: ...
@winfunctype('WS2_32.dll')
def SetAddrInfoExA(pName: win32more.Foundation.PSTR, pServiceName: win32more.Foundation.PSTR, pAddresses: POINTER(win32more.Networking.WinSock.SOCKET_ADDRESS_head), dwAddressCount: UInt32, lpBlob: POINTER(win32more.System.Com.BLOB_head), dwFlags: UInt32, dwNameSpace: UInt32, lpNspId: POINTER(Guid), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpNameHandle: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype('WS2_32.dll')
def SetAddrInfoExW(pName: win32more.Foundation.PWSTR, pServiceName: win32more.Foundation.PWSTR, pAddresses: POINTER(win32more.Networking.WinSock.SOCKET_ADDRESS_head), dwAddressCount: UInt32, lpBlob: POINTER(win32more.System.Com.BLOB_head), dwFlags: UInt32, dwNameSpace: UInt32, lpNspId: POINTER(Guid), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPLOOKUPSERVICE_COMPLETION_ROUTINE, lpNameHandle: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype('WS2_32.dll')
def freeaddrinfo(pAddrInfo: POINTER(win32more.Networking.WinSock.ADDRINFOA_head)) -> Void: ...
@winfunctype('WS2_32.dll')
def FreeAddrInfoW(pAddrInfo: POINTER(win32more.Networking.WinSock.ADDRINFOW_head)) -> Void: ...
@winfunctype('WS2_32.dll')
def FreeAddrInfoEx(pAddrInfoEx: POINTER(win32more.Networking.WinSock.ADDRINFOEXA_head)) -> Void: ...
@winfunctype('WS2_32.dll')
def FreeAddrInfoExW(pAddrInfoEx: POINTER(win32more.Networking.WinSock.ADDRINFOEXW_head)) -> Void: ...
@winfunctype('WS2_32.dll')
def getnameinfo(pSockaddr: POINTER(win32more.Networking.WinSock.SOCKADDR_head), SockaddrLength: Int32, pNodeBuffer: win32more.Foundation.PSTR, NodeBufferSize: UInt32, pServiceBuffer: win32more.Foundation.PSTR, ServiceBufferSize: UInt32, Flags: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def GetNameInfoW(pSockaddr: POINTER(win32more.Networking.WinSock.SOCKADDR_head), SockaddrLength: Int32, pNodeBuffer: win32more.Foundation.PWSTR, NodeBufferSize: UInt32, pServiceBuffer: win32more.Foundation.PWSTR, ServiceBufferSize: UInt32, Flags: Int32) -> Int32: ...
@winfunctype('WS2_32.dll')
def inet_pton(Family: Int32, pszAddrString: win32more.Foundation.PSTR, pAddrBuf: c_void_p) -> Int32: ...
@winfunctype('WS2_32.dll')
def InetPtonW(Family: Int32, pszAddrString: win32more.Foundation.PWSTR, pAddrBuf: c_void_p) -> Int32: ...
@winfunctype('WS2_32.dll')
def inet_ntop(Family: Int32, pAddr: c_void_p, pStringBuf: win32more.Foundation.PSTR, StringBufSize: UIntPtr) -> win32more.Foundation.PSTR: ...
@winfunctype('WS2_32.dll')
def InetNtopW(Family: Int32, pAddr: c_void_p, pStringBuf: win32more.Foundation.PWSTR, StringBufSize: UIntPtr) -> win32more.Foundation.PWSTR: ...
@winfunctype('fwpuclnt.dll')
def WSASetSocketSecurity(Socket: win32more.Networking.WinSock.SOCKET, SecuritySettings: POINTER(win32more.Networking.WinSock.SOCKET_SECURITY_SETTINGS_head), SecuritySettingsLen: UInt32, Overlapped: POINTER(win32more.System.IO.OVERLAPPED_head), CompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('fwpuclnt.dll')
def WSAQuerySocketSecurity(Socket: win32more.Networking.WinSock.SOCKET, SecurityQueryTemplate: POINTER(win32more.Networking.WinSock.SOCKET_SECURITY_QUERY_TEMPLATE_head), SecurityQueryTemplateLen: UInt32, SecurityQueryInfo: POINTER(win32more.Networking.WinSock.SOCKET_SECURITY_QUERY_INFO_head), SecurityQueryInfoLen: POINTER(UInt32), Overlapped: POINTER(win32more.System.IO.OVERLAPPED_head), CompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('fwpuclnt.dll')
def WSASetSocketPeerTargetName(Socket: win32more.Networking.WinSock.SOCKET, PeerTargetName: POINTER(win32more.Networking.WinSock.SOCKET_PEER_TARGET_NAME_head), PeerTargetNameLen: UInt32, Overlapped: POINTER(win32more.System.IO.OVERLAPPED_head), CompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('fwpuclnt.dll')
def WSADeleteSocketPeerTargetName(Socket: win32more.Networking.WinSock.SOCKET, PeerAddr: POINTER(win32more.Networking.WinSock.SOCKADDR_head), PeerAddrLen: UInt32, Overlapped: POINTER(win32more.System.IO.OVERLAPPED_head), CompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype('fwpuclnt.dll')
def WSAImpersonateSocketPeer(Socket: win32more.Networking.WinSock.SOCKET, PeerAddr: POINTER(win32more.Networking.WinSock.SOCKADDR_head), PeerAddrLen: UInt32) -> Int32: ...
@winfunctype('fwpuclnt.dll')
def WSARevertImpersonation() -> Int32: ...
@winfunctype('Windows.Networking.dll')
def SetSocketMediaStreamingMode(value: win32more.Foundation.BOOL) -> win32more.Foundation.HRESULT: ...
@winfunctype('WS2_32.dll')
def WSCWriteProviderOrder(lpwdCatalogEntryId: POINTER(UInt32), dwNumberOfEntries: UInt32) -> Int32: ...
@winfunctype('WS2_32.dll')
def WSCWriteNameSpaceOrder(lpProviderId: POINTER(Guid), dwNumberOfEntries: UInt32) -> Int32: ...
ARP_HARDWARE_TYPE = Int32
ARP_HW_ENET: ARP_HARDWARE_TYPE = 1
ARP_HW_802: ARP_HARDWARE_TYPE = 6
class ARP_HEADER(Structure):
    HardwareAddressSpace: UInt16
    ProtocolAddressSpace: UInt16
    HardwareAddressLength: Byte
    ProtocolAddressLength: Byte
    Opcode: UInt16
    SenderHardwareAddress: Byte * 1
ARP_OPCODE = Int32
ARP_REQUEST: ARP_OPCODE = 1
ARP_RESPONSE: ARP_OPCODE = 2
class ASSOCIATE_NAMERES_CONTEXT_INPUT(Structure):
    TransportSettingId: win32more.Networking.WinSock.TRANSPORT_SETTING_ID
    Handle: UInt64
class ATM_ADDRESS(Structure):
    AddressType: UInt32
    NumofDigits: UInt32
    Addr: Byte * 20
class ATM_BHLI(Structure):
    HighLayerInfoType: UInt32
    HighLayerInfoLength: UInt32
    HighLayerInfo: Byte * 8
class ATM_BLLI(Structure):
    Layer2Protocol: UInt32
    Layer2UserSpecifiedProtocol: UInt32
    Layer3Protocol: UInt32
    Layer3UserSpecifiedProtocol: UInt32
    Layer3IPI: UInt32
    SnapID: Byte * 5
class ATM_BLLI_IE(Structure):
    Layer2Protocol: UInt32
    Layer2Mode: Byte
    Layer2WindowSize: Byte
    Layer2UserSpecifiedProtocol: UInt32
    Layer3Protocol: UInt32
    Layer3Mode: Byte
    Layer3DefaultPacketSize: Byte
    Layer3PacketWindowSize: Byte
    Layer3UserSpecifiedProtocol: UInt32
    Layer3IPI: UInt32
    SnapID: Byte * 5
class ATM_BROADBAND_BEARER_CAPABILITY_IE(Structure):
    BearerClass: Byte
    TrafficType: Byte
    TimingRequirements: Byte
    ClippingSusceptability: Byte
    UserPlaneConnectionConfig: Byte
class ATM_CALLING_PARTY_NUMBER_IE(Structure):
    ATM_Number: win32more.Networking.WinSock.ATM_ADDRESS
    Presentation_Indication: Byte
    Screening_Indicator: Byte
class ATM_CAUSE_IE(Structure):
    Location: Byte
    Cause: Byte
    DiagnosticsLength: Byte
    Diagnostics: Byte * 4
class ATM_CONNECTION_ID(Structure):
    DeviceNumber: UInt32
    VPI: UInt32
    VCI: UInt32
class ATM_PVC_PARAMS(Structure):
    PvcConnectionId: win32more.Networking.WinSock.ATM_CONNECTION_ID
    PvcQos: win32more.Networking.WinSock.QOS
    _pack_ = 4
class ATM_QOS_CLASS_IE(Structure):
    QOSClassForward: Byte
    QOSClassBackward: Byte
class ATM_TD(Structure):
    PeakCellRate_CLP0: UInt32
    PeakCellRate_CLP01: UInt32
    SustainableCellRate_CLP0: UInt32
    SustainableCellRate_CLP01: UInt32
    MaxBurstSize_CLP0: UInt32
    MaxBurstSize_CLP01: UInt32
    Tagging: win32more.Foundation.BOOL
class ATM_TRAFFIC_DESCRIPTOR_IE(Structure):
    Forward: win32more.Networking.WinSock.ATM_TD
    Backward: win32more.Networking.WinSock.ATM_TD
    BestEffort: win32more.Foundation.BOOL
class ATM_TRANSIT_NETWORK_SELECTION_IE(Structure):
    TypeOfNetworkId: Byte
    NetworkIdPlan: Byte
    NetworkIdLength: Byte
    NetworkId: Byte * 1
class CMSGHDR(Structure):
    cmsg_len: UIntPtr
    cmsg_level: Int32
    cmsg_type: Int32
CONTROL_CHANNEL_TRIGGER_STATUS = Int32
CONTROL_CHANNEL_TRIGGER_STATUS_INVALID: CONTROL_CHANNEL_TRIGGER_STATUS = 0
CONTROL_CHANNEL_TRIGGER_STATUS_SOFTWARE_SLOT_ALLOCATED: CONTROL_CHANNEL_TRIGGER_STATUS = 1
CONTROL_CHANNEL_TRIGGER_STATUS_HARDWARE_SLOT_ALLOCATED: CONTROL_CHANNEL_TRIGGER_STATUS = 2
CONTROL_CHANNEL_TRIGGER_STATUS_POLICY_ERROR: CONTROL_CHANNEL_TRIGGER_STATUS = 3
CONTROL_CHANNEL_TRIGGER_STATUS_SYSTEM_ERROR: CONTROL_CHANNEL_TRIGGER_STATUS = 4
CONTROL_CHANNEL_TRIGGER_STATUS_TRANSPORT_DISCONNECTED: CONTROL_CHANNEL_TRIGGER_STATUS = 5
CONTROL_CHANNEL_TRIGGER_STATUS_SERVICE_UNAVAILABLE: CONTROL_CHANNEL_TRIGGER_STATUS = 6
class CSADDR_INFO(Structure):
    LocalAddr: win32more.Networking.WinSock.SOCKET_ADDRESS
    RemoteAddr: win32more.Networking.WinSock.SOCKET_ADDRESS
    iSocketType: Int32
    iProtocol: Int32
class DL_EI48(Union):
    Byte: Byte * 3
class DL_EI64(Union):
    Byte: Byte * 5
class DL_EUI48(Union):
    Byte: Byte * 6
    Anonymous: _Anonymous_e__Struct
    class _Anonymous_e__Struct(Structure):
        Oui: win32more.Networking.WinSock.DL_OUI
        Ei48: win32more.Networking.WinSock.DL_EI48
class DL_EUI64(Union):
    Byte: Byte * 8
    Value: UInt64
    Anonymous: _Anonymous_e__Struct
    class _Anonymous_e__Struct(Structure):
        Oui: win32more.Networking.WinSock.DL_OUI
        Anonymous: _Anonymous_e__Union
        class _Anonymous_e__Union(Union):
            Ei64: win32more.Networking.WinSock.DL_EI64
            Anonymous: _Anonymous_e__Struct
            class _Anonymous_e__Struct(Structure):
                Type: Byte
                Tse: Byte
                Ei48: win32more.Networking.WinSock.DL_EI48
class DL_OUI(Union):
    Byte: Byte * 3
    Anonymous: _Anonymous_e__Struct
    class _Anonymous_e__Struct(Structure):
        _bitfield: Byte
class DL_TEREDO_ADDRESS(Structure):
    Reserved: Byte * 6
    Anonymous: _Anonymous_e__Union
    _pack_ = 1
    class _Anonymous_e__Union(Union):
        Eui64: win32more.Networking.WinSock.DL_EUI64
        Anonymous: _Anonymous_e__Struct
        _pack_ = 1
        class _Anonymous_e__Struct(Structure):
            Flags: UInt16
            MappedPort: UInt16
            MappedAddress: win32more.Networking.WinSock.IN_ADDR
            _pack_ = 1
class DL_TEREDO_ADDRESS_PRV(Structure):
    Reserved: Byte * 6
    Anonymous: _Anonymous_e__Union
    _pack_ = 1
    class _Anonymous_e__Union(Union):
        Eui64: win32more.Networking.WinSock.DL_EUI64
        Anonymous: _Anonymous_e__Struct
        _pack_ = 1
        class _Anonymous_e__Struct(Structure):
            Flags: UInt16
            MappedPort: UInt16
            MappedAddress: win32more.Networking.WinSock.IN_ADDR
            LocalAddress: win32more.Networking.WinSock.IN_ADDR
            InterfaceIndex: UInt32
            LocalPort: UInt16
            DlDestination: win32more.Networking.WinSock.DL_EUI48
            _pack_ = 1
class DL_TUNNEL_ADDRESS(Structure):
    CompartmentId: win32more.System.Kernel.COMPARTMENT_ID
    ScopeId: win32more.Networking.WinSock.SCOPE_ID
    IpAddress: Byte * 1
class ETHERNET_HEADER(Structure):
    Destination: win32more.Networking.WinSock.DL_EUI48
    Source: win32more.Networking.WinSock.DL_EUI48
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        Type: UInt16
        Length: UInt16
eWINDOW_ADVANCE_METHOD = Int32
E_WINDOW_ADVANCE_BY_TIME: eWINDOW_ADVANCE_METHOD = 1
E_WINDOW_USE_AS_DATA_CACHE: eWINDOW_ADVANCE_METHOD = 2
FALLBACK_INDEX = Int32
FALLBACK_INDEX_FallbackIndexTcpFastopen: FALLBACK_INDEX = 0
FALLBACK_INDEX_FallbackIndexMax: FALLBACK_INDEX = 1
class FD_SET(Structure):
    fd_count: UInt32
    fd_array: win32more.Networking.WinSock.SOCKET * 64
class FLOWSPEC(Structure):
    TokenRate: UInt32
    TokenBucketSize: UInt32
    PeakBandwidth: UInt32
    Latency: UInt32
    DelayVariation: UInt32
    ServiceType: UInt32
    MaxSduSize: UInt32
    MinimumPolicedSize: UInt32
class GROUP_FILTER(Structure):
    gf_interface: UInt32
    gf_group: win32more.Networking.WinSock.SOCKADDR_STORAGE
    gf_fmode: win32more.Networking.WinSock.MULTICAST_MODE_TYPE
    gf_numsrc: UInt32
    gf_slist: win32more.Networking.WinSock.SOCKADDR_STORAGE * 1
class GROUP_REQ(Structure):
    gr_interface: UInt32
    gr_group: win32more.Networking.WinSock.SOCKADDR_STORAGE
class GROUP_SOURCE_REQ(Structure):
    gsr_interface: UInt32
    gsr_group: win32more.Networking.WinSock.SOCKADDR_STORAGE
    gsr_source: win32more.Networking.WinSock.SOCKADDR_STORAGE
class HOSTENT(Structure):
    h_name: win32more.Foundation.PSTR
    h_aliases: POINTER(POINTER(SByte))
    h_addrtype: Int16
    h_length: Int16
    h_addr_list: POINTER(POINTER(SByte))
HWSAEVENT = IntPtr
class ICMP_ERROR_INFO(Structure):
    srcaddress: win32more.Networking.WinSock.SOCKADDR_INET
    protocol: win32more.Networking.WinSock.IPPROTO
    type: Byte
    code: Byte
class ICMP_HEADER(Structure):
    Type: Byte
    Code: Byte
    Checksum: UInt16
class ICMP_MESSAGE(Structure):
    Header: win32more.Networking.WinSock.ICMP_HEADER
    Data: _Data_e__Union
    class _Data_e__Union(Union):
        Data32: UInt32 * 1
        Data16: UInt16 * 2
        Data8: Byte * 4
ICMP4_TIME_EXCEED_CODE = Int32
ICMP4_TIME_EXCEED_TRANSIT: ICMP4_TIME_EXCEED_CODE = 0
ICMP4_TIME_EXCEED_REASSEMBLY: ICMP4_TIME_EXCEED_CODE = 1
ICMP4_UNREACH_CODE = Int32
ICMP4_UNREACH_NET: ICMP4_UNREACH_CODE = 0
ICMP4_UNREACH_HOST: ICMP4_UNREACH_CODE = 1
ICMP4_UNREACH_PROTOCOL: ICMP4_UNREACH_CODE = 2
ICMP4_UNREACH_PORT: ICMP4_UNREACH_CODE = 3
ICMP4_UNREACH_FRAG_NEEDED: ICMP4_UNREACH_CODE = 4
ICMP4_UNREACH_SOURCEROUTE_FAILED: ICMP4_UNREACH_CODE = 5
ICMP4_UNREACH_NET_UNKNOWN: ICMP4_UNREACH_CODE = 6
ICMP4_UNREACH_HOST_UNKNOWN: ICMP4_UNREACH_CODE = 7
ICMP4_UNREACH_ISOLATED: ICMP4_UNREACH_CODE = 8
ICMP4_UNREACH_NET_ADMIN: ICMP4_UNREACH_CODE = 9
ICMP4_UNREACH_HOST_ADMIN: ICMP4_UNREACH_CODE = 10
ICMP4_UNREACH_NET_TOS: ICMP4_UNREACH_CODE = 11
ICMP4_UNREACH_HOST_TOS: ICMP4_UNREACH_CODE = 12
ICMP4_UNREACH_ADMIN: ICMP4_UNREACH_CODE = 13
class ICMPV4_ADDRESS_MASK_MESSAGE(Structure):
    Header: win32more.Networking.WinSock.ICMP_MESSAGE
    AddressMask: UInt32
class ICMPV4_ROUTER_ADVERT_ENTRY(Structure):
    RouterAdvertAddr: win32more.Networking.WinSock.IN_ADDR
    PreferenceLevel: Int32
class ICMPV4_ROUTER_ADVERT_HEADER(Structure):
    RaHeader: win32more.Networking.WinSock.ICMP_MESSAGE
class ICMPV4_ROUTER_SOLICIT(Structure):
    RsHeader: win32more.Networking.WinSock.ICMP_MESSAGE
class ICMPV4_TIMESTAMP_MESSAGE(Structure):
    Header: win32more.Networking.WinSock.ICMP_MESSAGE
    OriginateTimestamp: UInt32
    ReceiveTimestamp: UInt32
    TransmitTimestamp: UInt32
class IGMP_HEADER(Structure):
    Anonymous1: _Anonymous1_e__Union
    Anonymous2: _Anonymous2_e__Union
    Checksum: UInt16
    MulticastAddress: win32more.Networking.WinSock.IN_ADDR
    class _Anonymous1_e__Union(Union):
        Anonymous: _Anonymous_e__Struct
        VersionType: Byte
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
    class _Anonymous2_e__Union(Union):
        Reserved: Byte
        MaxRespTime: Byte
        Code: Byte
IGMP_MAX_RESP_CODE_TYPE = Int32
IGMP_MAX_RESP_CODE_TYPE_NORMAL: IGMP_MAX_RESP_CODE_TYPE = 0
IGMP_MAX_RESP_CODE_TYPE_FLOAT: IGMP_MAX_RESP_CODE_TYPE = 1
class IGMPV3_QUERY_HEADER(Structure):
    Type: Byte
    Anonymous1: _Anonymous1_e__Union
    Checksum: UInt16
    MulticastAddress: win32more.Networking.WinSock.IN_ADDR
    _bitfield: Byte
    Anonymous2: _Anonymous2_e__Union
    SourceCount: UInt16
    class _Anonymous1_e__Union(Union):
        MaxRespCode: Byte
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
    class _Anonymous2_e__Union(Union):
        QueriersQueryInterfaceCode: Byte
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
class IGMPV3_REPORT_HEADER(Structure):
    Type: Byte
    Reserved: Byte
    Checksum: UInt16
    Reserved2: UInt16
    RecordCount: UInt16
class IGMPV3_REPORT_RECORD_HEADER(Structure):
    Type: Byte
    AuxillaryDataLength: Byte
    SourceCount: UInt16
    MulticastAddress: win32more.Networking.WinSock.IN_ADDR
class IN_ADDR(Structure):
    S_un: _S_un_e__Union
    class _S_un_e__Union(Union):
        S_un_b: _S_un_b_e__Struct
        S_un_w: _S_un_w_e__Struct
        S_addr: UInt32
        class _S_un_b_e__Struct(Structure):
            s_b1: Byte
            s_b2: Byte
            s_b3: Byte
            s_b4: Byte
        class _S_un_w_e__Struct(Structure):
            s_w1: UInt16
            s_w2: UInt16
class IN_PKTINFO(Structure):
    ipi_addr: win32more.Networking.WinSock.IN_ADDR
    ipi_ifindex: UInt32
class IN_PKTINFO_EX(Structure):
    pkt_info: win32more.Networking.WinSock.IN_PKTINFO
    scope_id: win32more.Networking.WinSock.SCOPE_ID
class IN_RECVERR(Structure):
    protocol: win32more.Networking.WinSock.IPPROTO
    info: UInt32
    type: Byte
    code: Byte
class IN6_ADDR(Structure):
    u: _u_e__Union
    class _u_e__Union(Union):
        Byte: Byte * 16
        Word: UInt16 * 8
class IN6_PKTINFO(Structure):
    ipi6_addr: win32more.Networking.WinSock.IN6_ADDR
    ipi6_ifindex: UInt32
class IN6_PKTINFO_EX(Structure):
    pkt_info: win32more.Networking.WinSock.IN6_PKTINFO
    scope_id: win32more.Networking.WinSock.SCOPE_ID
class INET_PORT_RANGE(Structure):
    StartPort: UInt16
    NumberOfPorts: UInt16
class INET_PORT_RESERVATION_INFORMATION(Structure):
    OwningPid: UInt32
class INET_PORT_RESERVATION_INSTANCE(Structure):
    Reservation: win32more.Networking.WinSock.INET_PORT_RANGE
    Token: win32more.Networking.WinSock.INET_PORT_RESERVATION_TOKEN
class INET_PORT_RESERVATION_TOKEN(Structure):
    Token: UInt64
class INTERFACE_INFO(Structure):
    iiFlags: UInt32
    iiAddress: win32more.Networking.WinSock.sockaddr_gen
    iiBroadcastAddress: win32more.Networking.WinSock.sockaddr_gen
    iiNetmask: win32more.Networking.WinSock.sockaddr_gen
class INTERFACE_INFO_EX(Structure):
    iiFlags: UInt32
    iiAddress: win32more.Networking.WinSock.SOCKET_ADDRESS
    iiBroadcastAddress: win32more.Networking.WinSock.SOCKET_ADDRESS
    iiNetmask: win32more.Networking.WinSock.SOCKET_ADDRESS
class IP_MREQ(Structure):
    imr_multiaddr: win32more.Networking.WinSock.IN_ADDR
    imr_interface: win32more.Networking.WinSock.IN_ADDR
class IP_MREQ_SOURCE(Structure):
    imr_multiaddr: win32more.Networking.WinSock.IN_ADDR
    imr_sourceaddr: win32more.Networking.WinSock.IN_ADDR
    imr_interface: win32more.Networking.WinSock.IN_ADDR
class IP_MSFILTER(Structure):
    imsf_multiaddr: win32more.Networking.WinSock.IN_ADDR
    imsf_interface: win32more.Networking.WinSock.IN_ADDR
    imsf_fmode: win32more.Networking.WinSock.MULTICAST_MODE_TYPE
    imsf_numsrc: UInt32
    imsf_slist: win32more.Networking.WinSock.IN_ADDR * 1
IP_OPTION_TIMESTAMP_FLAGS = Int32
IP_OPTION_TIMESTAMP_ONLY: IP_OPTION_TIMESTAMP_FLAGS = 0
IP_OPTION_TIMESTAMP_ADDRESS: IP_OPTION_TIMESTAMP_FLAGS = 1
IP_OPTION_TIMESTAMP_SPECIFIC_ADDRESS: IP_OPTION_TIMESTAMP_FLAGS = 3
IPPROTO = Int32
IPPROTO_HOPOPTS: IPPROTO = 0
IPPROTO_ICMP: IPPROTO = 1
IPPROTO_IGMP: IPPROTO = 2
IPPROTO_GGP: IPPROTO = 3
IPPROTO_IPV4: IPPROTO = 4
IPPROTO_ST: IPPROTO = 5
IPPROTO_TCP: IPPROTO = 6
IPPROTO_CBT: IPPROTO = 7
IPPROTO_EGP: IPPROTO = 8
IPPROTO_IGP: IPPROTO = 9
IPPROTO_PUP: IPPROTO = 12
IPPROTO_UDP: IPPROTO = 17
IPPROTO_IDP: IPPROTO = 22
IPPROTO_RDP: IPPROTO = 27
IPPROTO_IPV6: IPPROTO = 41
IPPROTO_ROUTING: IPPROTO = 43
IPPROTO_FRAGMENT: IPPROTO = 44
IPPROTO_ESP: IPPROTO = 50
IPPROTO_AH: IPPROTO = 51
IPPROTO_ICMPV6: IPPROTO = 58
IPPROTO_NONE: IPPROTO = 59
IPPROTO_DSTOPTS: IPPROTO = 60
IPPROTO_ND: IPPROTO = 77
IPPROTO_ICLFXBM: IPPROTO = 78
IPPROTO_PIM: IPPROTO = 103
IPPROTO_PGM: IPPROTO = 113
IPPROTO_L2TP: IPPROTO = 115
IPPROTO_SCTP: IPPROTO = 132
IPPROTO_RAW: IPPROTO = 255
IPPROTO_MAX: IPPROTO = 256
IPPROTO_RESERVED_RAW: IPPROTO = 257
IPPROTO_RESERVED_IPSEC: IPPROTO = 258
IPPROTO_RESERVED_IPSECOFFLOAD: IPPROTO = 259
IPPROTO_RESERVED_WNV: IPPROTO = 260
IPPROTO_RESERVED_MAX: IPPROTO = 261
class IPTLS_METADATA(Structure):
    SequenceNumber: UInt64
    _pack_ = 1
class IPV4_HEADER(Structure):
    Anonymous1: _Anonymous1_e__Union
    Anonymous2: _Anonymous2_e__Union
    TotalLength: UInt16
    Identification: UInt16
    Anonymous3: _Anonymous3_e__Union
    TimeToLive: Byte
    Protocol: Byte
    HeaderChecksum: UInt16
    SourceAddress: win32more.Networking.WinSock.IN_ADDR
    DestinationAddress: win32more.Networking.WinSock.IN_ADDR
    class _Anonymous1_e__Union(Union):
        VersionAndHeaderLength: Byte
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
    class _Anonymous2_e__Union(Union):
        TypeOfServiceAndEcnField: Byte
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
    class _Anonymous3_e__Union(Union):
        FlagsAndOffset: UInt16
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: UInt16
class IPV4_OPTION_HEADER(Structure):
    Anonymous: _Anonymous_e__Union
    OptionLength: Byte
    class _Anonymous_e__Union(Union):
        OptionType: Byte
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
IPV4_OPTION_TYPE = Int32
IP_OPT_EOL: IPV4_OPTION_TYPE = 0
IP_OPT_NOP: IPV4_OPTION_TYPE = 1
IP_OPT_SECURITY: IPV4_OPTION_TYPE = 130
IP_OPT_LSRR: IPV4_OPTION_TYPE = 131
IP_OPT_TS: IPV4_OPTION_TYPE = 68
IP_OPT_RR: IPV4_OPTION_TYPE = 7
IP_OPT_SSRR: IPV4_OPTION_TYPE = 137
IP_OPT_SID: IPV4_OPTION_TYPE = 136
IP_OPT_ROUTER_ALERT: IPV4_OPTION_TYPE = 148
IP_OPT_MULTIDEST: IPV4_OPTION_TYPE = 149
class IPV4_ROUTING_HEADER(Structure):
    OptionHeader: win32more.Networking.WinSock.IPV4_OPTION_HEADER
    Pointer: Byte
class IPV4_TIMESTAMP_OPTION(Structure):
    OptionHeader: win32more.Networking.WinSock.IPV4_OPTION_HEADER
    Pointer: Byte
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        FlagsOverflow: Byte
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
class IPV6_EXTENSION_HEADER(Structure):
    NextHeader: Byte
    Length: Byte
class IPV6_FRAGMENT_HEADER(Structure):
    NextHeader: Byte
    Reserved: Byte
    Anonymous: _Anonymous_e__Union
    Id: UInt32
    class _Anonymous_e__Union(Union):
        Anonymous: _Anonymous_e__Struct
        OffsetAndFlags: UInt16
        class _Anonymous_e__Struct(Structure):
            _bitfield: UInt16
class IPV6_HEADER(Structure):
    Anonymous: _Anonymous_e__Union
    PayloadLength: UInt16
    NextHeader: Byte
    HopLimit: Byte
    SourceAddress: win32more.Networking.WinSock.IN6_ADDR
    DestinationAddress: win32more.Networking.WinSock.IN6_ADDR
    class _Anonymous_e__Union(Union):
        VersionClassFlow: UInt32
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: UInt32
class IPV6_MREQ(Structure):
    ipv6mr_multiaddr: win32more.Networking.WinSock.IN6_ADDR
    ipv6mr_interface: UInt32
class IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS(Union):
    Anonymous: _Anonymous_e__Struct
    Value: UInt32
    class _Anonymous_e__Struct(Structure):
        _bitfield: Byte
        Reserved2: Byte * 3
class IPV6_OPTION_HEADER(Structure):
    Type: Byte
    DataLength: Byte
class IPV6_OPTION_JUMBOGRAM(Structure):
    Header: win32more.Networking.WinSock.IPV6_OPTION_HEADER
    JumbogramLength: Byte * 4
class IPV6_OPTION_ROUTER_ALERT(Structure):
    Header: win32more.Networking.WinSock.IPV6_OPTION_HEADER
    Value: Byte * 2
IPV6_OPTION_TYPE = Int32
IP6OPT_PAD1: IPV6_OPTION_TYPE = 0
IP6OPT_PADN: IPV6_OPTION_TYPE = 1
IP6OPT_TUNNEL_LIMIT: IPV6_OPTION_TYPE = 4
IP6OPT_ROUTER_ALERT: IPV6_OPTION_TYPE = 5
IP6OPT_JUMBO: IPV6_OPTION_TYPE = 194
IP6OPT_NSAP_ADDR: IPV6_OPTION_TYPE = 195
class IPV6_ROUTER_ADVERTISEMENT_FLAGS(Union):
    Anonymous: _Anonymous_e__Struct
    Value: Byte
    class _Anonymous_e__Struct(Structure):
        _bitfield: Byte
class IPV6_ROUTING_HEADER(Structure):
    NextHeader: Byte
    Length: Byte
    RoutingType: Byte
    SegmentsLeft: Byte
    Reserved: Byte * 4
class IPX_ADDRESS_DATA(Structure):
    adapternum: Int32
    netnum: Byte * 4
    nodenum: Byte * 6
    wan: win32more.Foundation.BOOLEAN
    status: win32more.Foundation.BOOLEAN
    maxpkt: Int32
    linkspeed: UInt32
class IPX_NETNUM_DATA(Structure):
    netnum: Byte * 4
    hopcount: UInt16
    netdelay: UInt16
    cardnum: Int32
    router: Byte * 6
class IPX_SPXCONNSTATUS_DATA(Structure):
    ConnectionState: Byte
    WatchDogActive: Byte
    LocalConnectionId: UInt16
    RemoteConnectionId: UInt16
    LocalSequenceNumber: UInt16
    LocalAckNumber: UInt16
    LocalAllocNumber: UInt16
    RemoteAckNumber: UInt16
    RemoteAllocNumber: UInt16
    LocalSocket: UInt16
    ImmediateAddress: Byte * 6
    RemoteNetwork: Byte * 4
    RemoteNode: Byte * 6
    RemoteSocket: UInt16
    RetransmissionCount: UInt16
    EstimatedRoundTripDelay: UInt16
    RetransmittedPackets: UInt16
    SuppressedPacket: UInt16
class LINGER(Structure):
    l_onoff: UInt16
    l_linger: UInt16
class LM_IRPARMS(Structure):
    nTXDataBytes: UInt32
    nRXDataBytes: UInt32
    nBaudRate: UInt32
    thresholdTime: UInt32
    discTime: UInt32
    nMSLinkTurn: UInt16
    nTXPackets: Byte
    nRXPackets: Byte
@winfunctype_pointer
def LPBLOCKINGCALLBACK(dwContext: UIntPtr) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPCONDITIONPROC(lpCallerId: POINTER(win32more.Networking.WinSock.WSABUF_head), lpCallerData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpSQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpGQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpCalleeId: POINTER(win32more.Networking.WinSock.WSABUF_head), lpCalleeData: POINTER(win32more.Networking.WinSock.WSABUF_head), g: POINTER(UInt32), dwCallbackData: UIntPtr) -> Int32: ...
@winfunctype_pointer
def LPFN_ACCEPTEX(sListenSocket: win32more.Networking.WinSock.SOCKET, sAcceptSocket: win32more.Networking.WinSock.SOCKET, lpOutputBuffer: c_void_p, dwReceiveDataLength: UInt32, dwLocalAddressLength: UInt32, dwRemoteAddressLength: UInt32, lpdwBytesReceived: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_CONNECTEX(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32, lpSendBuffer: c_void_p, dwSendDataLength: UInt32, lpdwBytesSent: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_DISCONNECTEX(s: win32more.Networking.WinSock.SOCKET, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), dwFlags: UInt32, dwReserved: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_GETACCEPTEXSOCKADDRS(lpOutputBuffer: c_void_p, dwReceiveDataLength: UInt32, dwLocalAddressLength: UInt32, dwRemoteAddressLength: UInt32, LocalSockaddr: POINTER(POINTER(win32more.Networking.WinSock.SOCKADDR_head)), LocalSockaddrLength: POINTER(Int32), RemoteSockaddr: POINTER(POINTER(win32more.Networking.WinSock.SOCKADDR_head)), RemoteSockaddrLength: POINTER(Int32)) -> Void: ...
@winfunctype_pointer
def LPFN_NSPAPI() -> UInt32: ...
@winfunctype_pointer
def LPFN_RIOCLOSECOMPLETIONQUEUE(CQ: POINTER(win32more.Networking.WinSock.RIO_CQ_t_head)) -> Void: ...
@winfunctype_pointer
def LPFN_RIOCREATECOMPLETIONQUEUE(QueueSize: UInt32, NotificationCompletion: POINTER(win32more.Networking.WinSock.RIO_NOTIFICATION_COMPLETION_head)) -> POINTER(win32more.Networking.WinSock.RIO_CQ_t_head): ...
@winfunctype_pointer
def LPFN_RIOCREATEREQUESTQUEUE(Socket: win32more.Networking.WinSock.SOCKET, MaxOutstandingReceive: UInt32, MaxReceiveDataBuffers: UInt32, MaxOutstandingSend: UInt32, MaxSendDataBuffers: UInt32, ReceiveCQ: POINTER(win32more.Networking.WinSock.RIO_CQ_t_head), SendCQ: POINTER(win32more.Networking.WinSock.RIO_CQ_t_head), SocketContext: c_void_p) -> POINTER(win32more.Networking.WinSock.RIO_RQ_t_head): ...
@winfunctype_pointer
def LPFN_RIODEQUEUECOMPLETION(CQ: POINTER(win32more.Networking.WinSock.RIO_CQ_t_head), Array: POINTER(win32more.Networking.WinSock.RIORESULT_head), ArraySize: UInt32) -> UInt32: ...
@winfunctype_pointer
def LPFN_RIODEREGISTERBUFFER(BufferId: POINTER(win32more.Networking.WinSock.RIO_BUFFERID_t_head)) -> Void: ...
@winfunctype_pointer
def LPFN_RIONOTIFY(CQ: POINTER(win32more.Networking.WinSock.RIO_CQ_t_head)) -> Int32: ...
@winfunctype_pointer
def LPFN_RIORECEIVE(SocketQueue: POINTER(win32more.Networking.WinSock.RIO_RQ_t_head), pData: POINTER(win32more.Networking.WinSock.RIO_BUF_head), DataBufferCount: UInt32, Flags: UInt32, RequestContext: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_RIORECEIVEEX(SocketQueue: POINTER(win32more.Networking.WinSock.RIO_RQ_t_head), pData: POINTER(win32more.Networking.WinSock.RIO_BUF_head), DataBufferCount: UInt32, pLocalAddress: POINTER(win32more.Networking.WinSock.RIO_BUF_head), pRemoteAddress: POINTER(win32more.Networking.WinSock.RIO_BUF_head), pControlContext: POINTER(win32more.Networking.WinSock.RIO_BUF_head), pFlags: POINTER(win32more.Networking.WinSock.RIO_BUF_head), Flags: UInt32, RequestContext: c_void_p) -> Int32: ...
@winfunctype_pointer
def LPFN_RIOREGISTERBUFFER(DataBuffer: win32more.Foundation.PSTR, DataLength: UInt32) -> POINTER(win32more.Networking.WinSock.RIO_BUFFERID_t_head): ...
@winfunctype_pointer
def LPFN_RIORESIZECOMPLETIONQUEUE(CQ: POINTER(win32more.Networking.WinSock.RIO_CQ_t_head), QueueSize: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_RIORESIZEREQUESTQUEUE(RQ: POINTER(win32more.Networking.WinSock.RIO_RQ_t_head), MaxOutstandingReceive: UInt32, MaxOutstandingSend: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_RIOSEND(SocketQueue: POINTER(win32more.Networking.WinSock.RIO_RQ_t_head), pData: POINTER(win32more.Networking.WinSock.RIO_BUF_head), DataBufferCount: UInt32, Flags: UInt32, RequestContext: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_RIOSENDEX(SocketQueue: POINTER(win32more.Networking.WinSock.RIO_RQ_t_head), pData: POINTER(win32more.Networking.WinSock.RIO_BUF_head), DataBufferCount: UInt32, pLocalAddress: POINTER(win32more.Networking.WinSock.RIO_BUF_head), pRemoteAddress: POINTER(win32more.Networking.WinSock.RIO_BUF_head), pControlContext: POINTER(win32more.Networking.WinSock.RIO_BUF_head), pFlags: POINTER(win32more.Networking.WinSock.RIO_BUF_head), Flags: UInt32, RequestContext: c_void_p) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_TRANSMITFILE(hSocket: win32more.Networking.WinSock.SOCKET, hFile: win32more.Foundation.HANDLE, nNumberOfBytesToWrite: UInt32, nNumberOfBytesPerSend: UInt32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpTransmitBuffers: POINTER(win32more.Networking.WinSock.TRANSMIT_FILE_BUFFERS_head), dwReserved: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_TRANSMITPACKETS(hSocket: win32more.Networking.WinSock.SOCKET, lpPacketArray: POINTER(win32more.Networking.WinSock.TRANSMIT_PACKETS_ELEMENT_head), nElementCount: UInt32, nSendSize: UInt32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), dwFlags: UInt32) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPFN_WSAPOLL(fdarray: POINTER(win32more.Networking.WinSock.WSAPOLLFD_head), nfds: UInt32, timeout: Int32) -> Int32: ...
@winfunctype_pointer
def LPFN_WSARECVMSG(s: win32more.Networking.WinSock.SOCKET, lpMsg: POINTER(win32more.Networking.WinSock.WSAMSG_head), lpdwNumberOfBytesRecvd: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype_pointer
def LPFN_WSASENDMSG(s: win32more.Networking.WinSock.SOCKET, lpMsg: POINTER(win32more.Networking.WinSock.WSAMSG_head), dwFlags: UInt32, lpNumberOfBytesSent: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE) -> Int32: ...
@winfunctype_pointer
def LPLOOKUPSERVICE_COMPLETION_ROUTINE(dwError: UInt32, dwBytes: UInt32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)) -> Void: ...
@winfunctype_pointer
def LPNSPCLEANUP(lpProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype_pointer
def LPNSPGETSERVICECLASSINFO(lpProviderId: POINTER(Guid), lpdwBufSize: POINTER(UInt32), lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOW_head)) -> Int32: ...
@winfunctype_pointer
def LPNSPINSTALLSERVICECLASS(lpProviderId: POINTER(Guid), lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOW_head)) -> Int32: ...
@winfunctype_pointer
def LPNSPIOCTL(hLookup: win32more.Foundation.HANDLE, dwControlCode: UInt32, lpvInBuffer: c_void_p, cbInBuffer: UInt32, lpvOutBuffer: c_void_p, cbOutBuffer: UInt32, lpcbBytesReturned: POINTER(UInt32), lpCompletion: POINTER(win32more.Networking.WinSock.WSACOMPLETION_head), lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head)) -> Int32: ...
@winfunctype_pointer
def LPNSPLOOKUPSERVICEBEGIN(lpProviderId: POINTER(Guid), lpqsRestrictions: POINTER(win32more.Networking.WinSock.WSAQUERYSETW_head), lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOW_head), dwControlFlags: UInt32, lphLookup: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype_pointer
def LPNSPLOOKUPSERVICEEND(hLookup: win32more.Foundation.HANDLE) -> Int32: ...
@winfunctype_pointer
def LPNSPLOOKUPSERVICENEXT(hLookup: win32more.Foundation.HANDLE, dwControlFlags: UInt32, lpdwBufferLength: POINTER(UInt32), lpqsResults: POINTER(win32more.Networking.WinSock.WSAQUERYSETW_head)) -> Int32: ...
@winfunctype_pointer
def LPNSPREMOVESERVICECLASS(lpProviderId: POINTER(Guid), lpServiceClassId: POINTER(Guid)) -> Int32: ...
@winfunctype_pointer
def LPNSPSETSERVICE(lpProviderId: POINTER(Guid), lpServiceClassInfo: POINTER(win32more.Networking.WinSock.WSASERVICECLASSINFOW_head), lpqsRegInfo: POINTER(win32more.Networking.WinSock.WSAQUERYSETW_head), essOperation: win32more.Networking.WinSock.WSAESETSERVICEOP, dwControlFlags: UInt32) -> Int32: ...
@winfunctype_pointer
def LPNSPSTARTUP(lpProviderId: POINTER(Guid), lpnspRoutines: POINTER(win32more.Networking.WinSock.NSP_ROUTINE_head)) -> Int32: ...
@winfunctype_pointer
def LPNSPV2CLEANUP(lpProviderId: POINTER(Guid), pvClientSessionArg: c_void_p) -> Int32: ...
@winfunctype_pointer
def LPNSPV2CLIENTSESSIONRUNDOWN(lpProviderId: POINTER(Guid), pvClientSessionArg: c_void_p) -> Void: ...
@winfunctype_pointer
def LPNSPV2LOOKUPSERVICEBEGIN(lpProviderId: POINTER(Guid), lpqsRestrictions: POINTER(win32more.Networking.WinSock.WSAQUERYSET2W_head), dwControlFlags: UInt32, lpvClientSessionArg: c_void_p, lphLookup: POINTER(win32more.Foundation.HANDLE)) -> Int32: ...
@winfunctype_pointer
def LPNSPV2LOOKUPSERVICEEND(hLookup: win32more.Foundation.HANDLE) -> Int32: ...
@winfunctype_pointer
def LPNSPV2LOOKUPSERVICENEXTEX(hAsyncCall: win32more.Foundation.HANDLE, hLookup: win32more.Foundation.HANDLE, dwControlFlags: UInt32, lpdwBufferLength: POINTER(UInt32), lpqsResults: POINTER(win32more.Networking.WinSock.WSAQUERYSET2W_head)) -> Void: ...
@winfunctype_pointer
def LPNSPV2SETSERVICEEX(hAsyncCall: win32more.Foundation.HANDLE, lpProviderId: POINTER(Guid), lpqsRegInfo: POINTER(win32more.Networking.WinSock.WSAQUERYSET2W_head), essOperation: win32more.Networking.WinSock.WSAESETSERVICEOP, dwControlFlags: UInt32, lpvClientSessionArg: c_void_p) -> Void: ...
@winfunctype_pointer
def LPNSPV2STARTUP(lpProviderId: POINTER(Guid), ppvClientSessionArg: POINTER(c_void_p)) -> Int32: ...
@winfunctype_pointer
def LPSERVICE_CALLBACK_PROC(lParam: win32more.Foundation.LPARAM, hAsyncTaskHandle: win32more.Foundation.HANDLE) -> Void: ...
@winfunctype_pointer
def LPWPUCLOSEEVENT(hEvent: win32more.Foundation.HANDLE, lpErrno: POINTER(Int32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPWPUCLOSESOCKETHANDLE(s: win32more.Networking.WinSock.SOCKET, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPUCLOSETHREAD(lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPUCOMPLETEOVERLAPPEDREQUEST(s: win32more.Networking.WinSock.SOCKET, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), dwError: UInt32, cbTransferred: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPUCREATEEVENT(lpErrno: POINTER(Int32)) -> win32more.Foundation.HANDLE: ...
@winfunctype_pointer
def LPWPUCREATESOCKETHANDLE(dwCatalogEntryId: UInt32, dwContext: UIntPtr, lpErrno: POINTER(Int32)) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype_pointer
def LPWPUFDISSET(s: win32more.Networking.WinSock.SOCKET, fdset: POINTER(win32more.Networking.WinSock.FD_SET_head)) -> Int32: ...
@winfunctype_pointer
def LPWPUGETPROVIDERPATH(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProviderDllPathLen: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPUMODIFYIFSHANDLE(dwCatalogEntryId: UInt32, ProposedHandle: win32more.Networking.WinSock.SOCKET, lpErrno: POINTER(Int32)) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype_pointer
def LPWPUOPENCURRENTTHREAD(lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPUPOSTMESSAGE(hWnd: win32more.Foundation.HWND, Msg: UInt32, wParam: win32more.Foundation.WPARAM, lParam: win32more.Foundation.LPARAM) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPWPUQUERYBLOCKINGCALLBACK(dwCatalogEntryId: UInt32, lplpfnCallback: POINTER(win32more.Networking.WinSock.LPBLOCKINGCALLBACK), lpdwContext: POINTER(UIntPtr), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPUQUERYSOCKETHANDLECONTEXT(s: win32more.Networking.WinSock.SOCKET, lpContext: POINTER(UIntPtr), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPUQUEUEAPC(lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpfnUserApc: win32more.Networking.WinSock.LPWSAUSERAPC, dwContext: UIntPtr, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWPURESETEVENT(hEvent: win32more.Foundation.HANDLE, lpErrno: POINTER(Int32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPWPUSETEVENT(hEvent: win32more.Foundation.HANDLE, lpErrno: POINTER(Int32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPWSAOVERLAPPED_COMPLETION_ROUTINE(dwError: UInt32, cbTransferred: UInt32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), dwFlags: UInt32) -> Void: ...
@winfunctype_pointer
def LPWSAUSERAPC(dwContext: UIntPtr) -> Void: ...
@winfunctype_pointer
def LPWSCDEINSTALLPROVIDER(lpProviderId: POINTER(Guid), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSCENABLENSPROVIDER(lpProviderId: POINTER(Guid), fEnable: win32more.Foundation.BOOL) -> Int32: ...
@winfunctype_pointer
def LPWSCENUMPROTOCOLS(lpiProtocols: POINTER(Int32), lpProtocolBuffer: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpdwBufferLength: POINTER(UInt32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSCGETPROVIDERPATH(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProviderDllPathLen: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSCINSTALLNAMESPACE(lpszIdentifier: win32more.Foundation.PWSTR, lpszPathName: win32more.Foundation.PWSTR, dwNameSpace: UInt32, dwVersion: UInt32, lpProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype_pointer
def LPWSCINSTALLPROVIDER(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProtocolInfoList: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), dwNumberOfEntries: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSCUNINSTALLNAMESPACE(lpProviderId: POINTER(Guid)) -> Int32: ...
@winfunctype_pointer
def LPWSCUPDATEPROVIDER(lpProviderId: POINTER(Guid), lpszProviderDllPath: win32more.Foundation.PWSTR, lpProtocolInfoList: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), dwNumberOfEntries: UInt32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSCWRITENAMESPACEORDER(lpProviderId: POINTER(Guid), dwNumberOfEntries: UInt32) -> Int32: ...
@winfunctype_pointer
def LPWSCWRITEPROVIDERORDER(lpwdCatalogEntryId: POINTER(UInt32), dwNumberOfEntries: UInt32) -> Int32: ...
@winfunctype_pointer
def LPWSPACCEPT(s: win32more.Networking.WinSock.SOCKET, addr: POINTER(win32more.Networking.WinSock.SOCKADDR_head), addrlen: POINTER(Int32), lpfnCondition: win32more.Networking.WinSock.LPCONDITIONPROC, dwCallbackData: UIntPtr, lpErrno: POINTER(Int32)) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype_pointer
def LPWSPADDRESSTOSTRING(lpsaAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), dwAddressLength: UInt32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpszAddressString: win32more.Foundation.PWSTR, lpdwAddressStringLength: POINTER(UInt32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPASYNCSELECT(s: win32more.Networking.WinSock.SOCKET, hWnd: win32more.Foundation.HWND, wMsg: UInt32, lEvent: Int32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPBIND(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPCANCELBLOCKINGCALL(lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPCLEANUP(lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPCLOSESOCKET(s: win32more.Networking.WinSock.SOCKET, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPCONNECT(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32, lpCallerData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpCalleeData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpSQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpGQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPDUPLICATESOCKET(s: win32more.Networking.WinSock.SOCKET, dwProcessId: UInt32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPENUMNETWORKEVENTS(s: win32more.Networking.WinSock.SOCKET, hEventObject: win32more.Foundation.HANDLE, lpNetworkEvents: POINTER(win32more.Networking.WinSock.WSANETWORKEVENTS_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPEVENTSELECT(s: win32more.Networking.WinSock.SOCKET, hEventObject: win32more.Foundation.HANDLE, lNetworkEvents: Int32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPGETOVERLAPPEDRESULT(s: win32more.Networking.WinSock.SOCKET, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpcbTransfer: POINTER(UInt32), fWait: win32more.Foundation.BOOL, lpdwFlags: POINTER(UInt32), lpErrno: POINTER(Int32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPWSPGETPEERNAME(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPGETQOSBYNAME(s: win32more.Networking.WinSock.SOCKET, lpQOSName: POINTER(win32more.Networking.WinSock.WSABUF_head), lpQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpErrno: POINTER(Int32)) -> win32more.Foundation.BOOL: ...
@winfunctype_pointer
def LPWSPGETSOCKNAME(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPGETSOCKOPT(s: win32more.Networking.WinSock.SOCKET, level: Int32, optname: Int32, optval: win32more.Foundation.PSTR, optlen: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPIOCTL(s: win32more.Networking.WinSock.SOCKET, dwIoControlCode: UInt32, lpvInBuffer: c_void_p, cbInBuffer: UInt32, lpvOutBuffer: c_void_p, cbOutBuffer: UInt32, lpcbBytesReturned: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE, lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPJOINLEAF(s: win32more.Networking.WinSock.SOCKET, name: POINTER(win32more.Networking.WinSock.SOCKADDR_head), namelen: Int32, lpCallerData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpCalleeData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpSQOS: POINTER(win32more.Networking.WinSock.QOS_head), lpGQOS: POINTER(win32more.Networking.WinSock.QOS_head), dwFlags: UInt32, lpErrno: POINTER(Int32)) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype_pointer
def LPWSPLISTEN(s: win32more.Networking.WinSock.SOCKET, backlog: Int32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPRECV(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesRecvd: POINTER(UInt32), lpFlags: POINTER(UInt32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE, lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPRECVDISCONNECT(s: win32more.Networking.WinSock.SOCKET, lpInboundDisconnectData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPRECVFROM(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesRecvd: POINTER(UInt32), lpFlags: POINTER(UInt32), lpFrom: POINTER(win32more.Networking.WinSock.SOCKADDR_head), lpFromlen: POINTER(Int32), lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE, lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPSELECT(nfds: Int32, readfds: POINTER(win32more.Networking.WinSock.FD_SET_head), writefds: POINTER(win32more.Networking.WinSock.FD_SET_head), exceptfds: POINTER(win32more.Networking.WinSock.FD_SET_head), timeout: POINTER(win32more.Networking.WinSock.TIMEVAL_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPSEND(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesSent: POINTER(UInt32), dwFlags: UInt32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE, lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPSENDDISCONNECT(s: win32more.Networking.WinSock.SOCKET, lpOutboundDisconnectData: POINTER(win32more.Networking.WinSock.WSABUF_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPSENDTO(s: win32more.Networking.WinSock.SOCKET, lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head), dwBufferCount: UInt32, lpNumberOfBytesSent: POINTER(UInt32), dwFlags: UInt32, lpTo: POINTER(win32more.Networking.WinSock.SOCKADDR_head), iTolen: Int32, lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head), lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE, lpThreadId: POINTER(win32more.Networking.WinSock.WSATHREADID_head), lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPSETSOCKOPT(s: win32more.Networking.WinSock.SOCKET, level: Int32, optname: Int32, optval: win32more.Foundation.PSTR, optlen: Int32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPSHUTDOWN(s: win32more.Networking.WinSock.SOCKET, how: Int32, lpErrno: POINTER(Int32)) -> Int32: ...
@winfunctype_pointer
def LPWSPSOCKET(af: Int32, type: Int32, protocol: Int32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), g: UInt32, dwFlags: UInt32, lpErrno: POINTER(Int32)) -> win32more.Networking.WinSock.SOCKET: ...
@winfunctype_pointer
def LPWSPSTARTUP(wVersionRequested: UInt16, lpWSPData: POINTER(win32more.Networking.WinSock.WSPDATA_head), lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), UpcallTable: win32more.Networking.WinSock.WSPUPCALLTABLE, lpProcTable: POINTER(win32more.Networking.WinSock.WSPPROC_TABLE_head)) -> Int32: ...
@winfunctype_pointer
def LPWSPSTRINGTOADDRESS(AddressString: win32more.Foundation.PWSTR, AddressFamily: Int32, lpProtocolInfo: POINTER(win32more.Networking.WinSock.WSAPROTOCOL_INFOW_head), lpAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_head), lpAddressLength: POINTER(Int32), lpErrno: POINTER(Int32)) -> Int32: ...
class MLD_HEADER(Structure):
    IcmpHeader: win32more.Networking.WinSock.ICMP_HEADER
    MaxRespTime: UInt16
    Reserved: UInt16
    MulticastAddress: win32more.Networking.WinSock.IN6_ADDR
MLD_MAX_RESP_CODE_TYPE = Int32
MLD_MAX_RESP_CODE_TYPE_NORMAL: MLD_MAX_RESP_CODE_TYPE = 0
MLD_MAX_RESP_CODE_TYPE_FLOAT: MLD_MAX_RESP_CODE_TYPE = 1
class MLDV2_QUERY_HEADER(Structure):
    IcmpHeader: win32more.Networking.WinSock.ICMP_HEADER
    Anonymous1: _Anonymous1_e__Union
    Reserved: UInt16
    MulticastAddress: win32more.Networking.WinSock.IN6_ADDR
    _bitfield: Byte
    Anonymous2: _Anonymous2_e__Union
    SourceCount: UInt16
    class _Anonymous1_e__Union(Union):
        MaxRespCode: UInt16
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: UInt16
    class _Anonymous2_e__Union(Union):
        QueriersQueryInterfaceCode: Byte
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: Byte
class MLDV2_REPORT_HEADER(Structure):
    IcmpHeader: win32more.Networking.WinSock.ICMP_HEADER
    Reserved: UInt16
    RecordCount: UInt16
class MLDV2_REPORT_RECORD_HEADER(Structure):
    Type: Byte
    AuxillaryDataLength: Byte
    SourceCount: UInt16
    MulticastAddress: win32more.Networking.WinSock.IN6_ADDR
MULTICAST_MODE_TYPE = Int32
MCAST_INCLUDE: MULTICAST_MODE_TYPE = 0
MCAST_EXCLUDE: MULTICAST_MODE_TYPE = 1
class NAPI_DOMAIN_DESCRIPTION_BLOB(Structure):
    AuthLevel: UInt32
    cchDomainName: UInt32
    OffsetNextDomainDescription: UInt32
    OffsetThisDomainName: UInt32
class NAPI_PROVIDER_INSTALLATION_BLOB(Structure):
    dwVersion: UInt32
    dwProviderType: UInt32
    fSupportsWildCard: UInt32
    cDomains: UInt32
    OffsetFirstDomain: UInt32
NAPI_PROVIDER_LEVEL = Int32
ProviderLevel_None: NAPI_PROVIDER_LEVEL = 0
ProviderLevel_Secondary: NAPI_PROVIDER_LEVEL = 1
ProviderLevel_Primary: NAPI_PROVIDER_LEVEL = 2
NAPI_PROVIDER_TYPE = Int32
ProviderType_Application: NAPI_PROVIDER_TYPE = 1
ProviderType_Service: NAPI_PROVIDER_TYPE = 2
class ND_NEIGHBOR_ADVERT_HEADER(Structure):
    nd_na_hdr: win32more.Networking.WinSock.ICMP_MESSAGE
    nd_na_target: win32more.Networking.WinSock.IN6_ADDR
class ND_NEIGHBOR_SOLICIT_HEADER(Structure):
    nd_ns_hdr: win32more.Networking.WinSock.ICMP_MESSAGE
    nd_ns_target: win32more.Networking.WinSock.IN6_ADDR
class ND_OPTION_DNSSL(Structure):
    nd_opt_dnssl_type: Byte
    nd_opt_dnssl_len: Byte
    nd_opt_dnssl_reserved: UInt16
    nd_opt_dnssl_lifetime: UInt32
class ND_OPTION_HDR(Structure):
    nd_opt_type: Byte
    nd_opt_len: Byte
class ND_OPTION_MTU(Structure):
    nd_opt_mtu_type: Byte
    nd_opt_mtu_len: Byte
    nd_opt_mtu_reserved: UInt16
    nd_opt_mtu_mtu: UInt32
class ND_OPTION_PREFIX_INFO(Structure):
    nd_opt_pi_type: Byte
    nd_opt_pi_len: Byte
    nd_opt_pi_prefix_len: Byte
    Anonymous1: _Anonymous1_e__Union
    nd_opt_pi_valid_time: UInt32
    nd_opt_pi_preferred_time: UInt32
    Anonymous2: _Anonymous2_e__Union
    nd_opt_pi_prefix: win32more.Networking.WinSock.IN6_ADDR
    class _Anonymous1_e__Union(Union):
        nd_opt_pi_flags_reserved: Byte
        Flags: _Flags_e__Struct
        class _Flags_e__Struct(Structure):
            _bitfield: Byte
    class _Anonymous2_e__Union(Union):
        nd_opt_pi_reserved2: UInt32
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            nd_opt_pi_reserved3: Byte * 3
            nd_opt_pi_site_prefix_len: Byte
class ND_OPTION_RD_HDR(Structure):
    nd_opt_rh_type: Byte
    nd_opt_rh_len: Byte
    nd_opt_rh_reserved1: UInt16
    nd_opt_rh_reserved2: UInt32
class ND_OPTION_RDNSS(Structure):
    nd_opt_rdnss_type: Byte
    nd_opt_rdnss_len: Byte
    nd_opt_rdnss_reserved: UInt16
    nd_opt_rdnss_lifetime: UInt32
class ND_OPTION_ROUTE_INFO(Structure):
    nd_opt_ri_type: Byte
    nd_opt_ri_len: Byte
    nd_opt_ri_prefix_len: Byte
    Anonymous: _Anonymous_e__Union
    nd_opt_ri_route_lifetime: UInt32
    nd_opt_ri_prefix: win32more.Networking.WinSock.IN6_ADDR
    class _Anonymous_e__Union(Union):
        nd_opt_ri_flags_reserved: Byte
        Flags: _Flags_e__Struct
        class _Flags_e__Struct(Structure):
            _bitfield: Byte
ND_OPTION_TYPE = Int32
ND_OPT_SOURCE_LINKADDR: ND_OPTION_TYPE = 1
ND_OPT_TARGET_LINKADDR: ND_OPTION_TYPE = 2
ND_OPT_PREFIX_INFORMATION: ND_OPTION_TYPE = 3
ND_OPT_REDIRECTED_HEADER: ND_OPTION_TYPE = 4
ND_OPT_MTU: ND_OPTION_TYPE = 5
ND_OPT_NBMA_SHORTCUT_LIMIT: ND_OPTION_TYPE = 6
ND_OPT_ADVERTISEMENT_INTERVAL: ND_OPTION_TYPE = 7
ND_OPT_HOME_AGENT_INFORMATION: ND_OPTION_TYPE = 8
ND_OPT_SOURCE_ADDR_LIST: ND_OPTION_TYPE = 9
ND_OPT_TARGET_ADDR_LIST: ND_OPTION_TYPE = 10
ND_OPT_ROUTE_INFO: ND_OPTION_TYPE = 24
ND_OPT_RDNSS: ND_OPTION_TYPE = 25
ND_OPT_DNSSL: ND_OPTION_TYPE = 31
class ND_REDIRECT_HEADER(Structure):
    nd_rd_hdr: win32more.Networking.WinSock.ICMP_MESSAGE
    nd_rd_target: win32more.Networking.WinSock.IN6_ADDR
    nd_rd_dst: win32more.Networking.WinSock.IN6_ADDR
class ND_ROUTER_ADVERT_HEADER(Structure):
    nd_ra_hdr: win32more.Networking.WinSock.ICMP_MESSAGE
    nd_ra_reachable: UInt32
    nd_ra_retransmit: UInt32
class ND_ROUTER_SOLICIT_HEADER(Structure):
    nd_rs_hdr: win32more.Networking.WinSock.ICMP_MESSAGE
class netent(Structure):
    n_name: win32more.Foundation.PSTR
    n_aliases: POINTER(POINTER(SByte))
    n_addrtype: Int16
    n_net: UInt32
class NETRESOURCE2A(Structure):
    dwScope: UInt32
    dwType: UInt32
    dwUsage: UInt32
    dwDisplayType: UInt32
    lpLocalName: win32more.Foundation.PSTR
    lpRemoteName: win32more.Foundation.PSTR
    lpComment: win32more.Foundation.PSTR
    ns_info: win32more.Networking.WinSock.NS_INFOA
    ServiceType: Guid
    dwProtocols: UInt32
    lpiProtocols: POINTER(Int32)
class NETRESOURCE2W(Structure):
    dwScope: UInt32
    dwType: UInt32
    dwUsage: UInt32
    dwDisplayType: UInt32
    lpLocalName: win32more.Foundation.PWSTR
    lpRemoteName: win32more.Foundation.PWSTR
    lpComment: win32more.Foundation.PWSTR
    ns_info: win32more.Networking.WinSock.NS_INFOA
    ServiceType: Guid
    dwProtocols: UInt32
    lpiProtocols: POINTER(Int32)
NL_ADDRESS_TYPE = Int32
NL_ADDRESS_TYPE_NlatUnspecified: NL_ADDRESS_TYPE = 0
NL_ADDRESS_TYPE_NlatUnicast: NL_ADDRESS_TYPE = 1
NL_ADDRESS_TYPE_NlatAnycast: NL_ADDRESS_TYPE = 2
NL_ADDRESS_TYPE_NlatMulticast: NL_ADDRESS_TYPE = 3
NL_ADDRESS_TYPE_NlatBroadcast: NL_ADDRESS_TYPE = 4
NL_ADDRESS_TYPE_NlatInvalid: NL_ADDRESS_TYPE = 5
NL_BANDWIDTH_FLAG = Int32
NL_BANDWIDTH_FLAG_NlbwDisabled: NL_BANDWIDTH_FLAG = 0
NL_BANDWIDTH_FLAG_NlbwEnabled: NL_BANDWIDTH_FLAG = 1
NL_BANDWIDTH_FLAG_NlbwUnchanged: NL_BANDWIDTH_FLAG = -1
class NL_BANDWIDTH_INFORMATION(Structure):
    Bandwidth: UInt64
    Instability: UInt64
    BandwidthPeaked: win32more.Foundation.BOOLEAN
NL_DAD_STATE = Int32
NL_DAD_STATE_NldsInvalid: NL_DAD_STATE = 0
NL_DAD_STATE_NldsTentative: NL_DAD_STATE = 1
NL_DAD_STATE_NldsDuplicate: NL_DAD_STATE = 2
NL_DAD_STATE_NldsDeprecated: NL_DAD_STATE = 3
NL_DAD_STATE_NldsPreferred: NL_DAD_STATE = 4
NL_DAD_STATE_IpDadStateInvalid: NL_DAD_STATE = 0
NL_DAD_STATE_IpDadStateTentative: NL_DAD_STATE = 1
NL_DAD_STATE_IpDadStateDuplicate: NL_DAD_STATE = 2
NL_DAD_STATE_IpDadStateDeprecated: NL_DAD_STATE = 3
NL_DAD_STATE_IpDadStatePreferred: NL_DAD_STATE = 4
NL_INTERFACE_NETWORK_CATEGORY_STATE = Int32
NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincCategoryUnknown: NL_INTERFACE_NETWORK_CATEGORY_STATE = 0
NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincPublic: NL_INTERFACE_NETWORK_CATEGORY_STATE = 1
NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincPrivate: NL_INTERFACE_NETWORK_CATEGORY_STATE = 2
NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincDomainAuthenticated: NL_INTERFACE_NETWORK_CATEGORY_STATE = 3
NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincCategoryStateMax: NL_INTERFACE_NETWORK_CATEGORY_STATE = 4
class NL_INTERFACE_OFFLOAD_ROD(Structure):
    _bitfield: Byte
NL_LINK_LOCAL_ADDRESS_BEHAVIOR = Int32
NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalAlwaysOff: NL_LINK_LOCAL_ADDRESS_BEHAVIOR = 0
NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalDelayed: NL_LINK_LOCAL_ADDRESS_BEHAVIOR = 1
NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalAlwaysOn: NL_LINK_LOCAL_ADDRESS_BEHAVIOR = 2
NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalUnchanged: NL_LINK_LOCAL_ADDRESS_BEHAVIOR = -1
NL_NEIGHBOR_STATE = Int32
NL_NEIGHBOR_STATE_NlnsUnreachable: NL_NEIGHBOR_STATE = 0
NL_NEIGHBOR_STATE_NlnsIncomplete: NL_NEIGHBOR_STATE = 1
NL_NEIGHBOR_STATE_NlnsProbe: NL_NEIGHBOR_STATE = 2
NL_NEIGHBOR_STATE_NlnsDelay: NL_NEIGHBOR_STATE = 3
NL_NEIGHBOR_STATE_NlnsStale: NL_NEIGHBOR_STATE = 4
NL_NEIGHBOR_STATE_NlnsReachable: NL_NEIGHBOR_STATE = 5
NL_NEIGHBOR_STATE_NlnsPermanent: NL_NEIGHBOR_STATE = 6
NL_NEIGHBOR_STATE_NlnsMaximum: NL_NEIGHBOR_STATE = 7
NL_NETWORK_CATEGORY = Int32
NL_NETWORK_CATEGORY_NetworkCategoryPublic: NL_NETWORK_CATEGORY = 0
NL_NETWORK_CATEGORY_NetworkCategoryPrivate: NL_NETWORK_CATEGORY = 1
NL_NETWORK_CATEGORY_NetworkCategoryDomainAuthenticated: NL_NETWORK_CATEGORY = 2
NL_NETWORK_CATEGORY_NetworkCategoryUnchanged: NL_NETWORK_CATEGORY = -1
NL_NETWORK_CATEGORY_NetworkCategoryUnknown: NL_NETWORK_CATEGORY = -1
NL_NETWORK_CONNECTIVITY_COST_HINT = Int32
NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintUnknown: NL_NETWORK_CONNECTIVITY_COST_HINT = 0
NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintUnrestricted: NL_NETWORK_CONNECTIVITY_COST_HINT = 1
NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintFixed: NL_NETWORK_CONNECTIVITY_COST_HINT = 2
NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintVariable: NL_NETWORK_CONNECTIVITY_COST_HINT = 3
class NL_NETWORK_CONNECTIVITY_HINT(Structure):
    ConnectivityLevel: win32more.Networking.WinSock.NL_NETWORK_CONNECTIVITY_LEVEL_HINT
    ConnectivityCost: win32more.Networking.WinSock.NL_NETWORK_CONNECTIVITY_COST_HINT
    ApproachingDataLimit: win32more.Foundation.BOOLEAN
    OverDataLimit: win32more.Foundation.BOOLEAN
    Roaming: win32more.Foundation.BOOLEAN
NL_NETWORK_CONNECTIVITY_LEVEL_HINT = Int32
NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintUnknown: NL_NETWORK_CONNECTIVITY_LEVEL_HINT = 0
NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintNone: NL_NETWORK_CONNECTIVITY_LEVEL_HINT = 1
NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintLocalAccess: NL_NETWORK_CONNECTIVITY_LEVEL_HINT = 2
NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintInternetAccess: NL_NETWORK_CONNECTIVITY_LEVEL_HINT = 3
NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintConstrainedInternetAccess: NL_NETWORK_CONNECTIVITY_LEVEL_HINT = 4
NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintHidden: NL_NETWORK_CONNECTIVITY_LEVEL_HINT = 5
class NL_PATH_BANDWIDTH_ROD(Structure):
    Bandwidth: UInt64
    Instability: UInt64
    BandwidthPeaked: win32more.Foundation.BOOLEAN
NL_PREFIX_ORIGIN = Int32
NL_PREFIX_ORIGIN_IpPrefixOriginOther: NL_PREFIX_ORIGIN = 0
NL_PREFIX_ORIGIN_IpPrefixOriginManual: NL_PREFIX_ORIGIN = 1
NL_PREFIX_ORIGIN_IpPrefixOriginWellKnown: NL_PREFIX_ORIGIN = 2
NL_PREFIX_ORIGIN_IpPrefixOriginDhcp: NL_PREFIX_ORIGIN = 3
NL_PREFIX_ORIGIN_IpPrefixOriginRouterAdvertisement: NL_PREFIX_ORIGIN = 4
NL_PREFIX_ORIGIN_IpPrefixOriginUnchanged: NL_PREFIX_ORIGIN = 16
NL_ROUTE_ORIGIN = Int32
NL_ROUTE_ORIGIN_NlroManual: NL_ROUTE_ORIGIN = 0
NL_ROUTE_ORIGIN_NlroWellKnown: NL_ROUTE_ORIGIN = 1
NL_ROUTE_ORIGIN_NlroDHCP: NL_ROUTE_ORIGIN = 2
NL_ROUTE_ORIGIN_NlroRouterAdvertisement: NL_ROUTE_ORIGIN = 3
NL_ROUTE_ORIGIN_Nlro6to4: NL_ROUTE_ORIGIN = 4
NL_ROUTE_PROTOCOL = Int32
NL_ROUTE_PROTOCOL_RouteProtocolOther: NL_ROUTE_PROTOCOL = 1
NL_ROUTE_PROTOCOL_RouteProtocolLocal: NL_ROUTE_PROTOCOL = 2
NL_ROUTE_PROTOCOL_RouteProtocolNetMgmt: NL_ROUTE_PROTOCOL = 3
NL_ROUTE_PROTOCOL_RouteProtocolIcmp: NL_ROUTE_PROTOCOL = 4
NL_ROUTE_PROTOCOL_RouteProtocolEgp: NL_ROUTE_PROTOCOL = 5
NL_ROUTE_PROTOCOL_RouteProtocolGgp: NL_ROUTE_PROTOCOL = 6
NL_ROUTE_PROTOCOL_RouteProtocolHello: NL_ROUTE_PROTOCOL = 7
NL_ROUTE_PROTOCOL_RouteProtocolRip: NL_ROUTE_PROTOCOL = 8
NL_ROUTE_PROTOCOL_RouteProtocolIsIs: NL_ROUTE_PROTOCOL = 9
NL_ROUTE_PROTOCOL_RouteProtocolEsIs: NL_ROUTE_PROTOCOL = 10
NL_ROUTE_PROTOCOL_RouteProtocolCisco: NL_ROUTE_PROTOCOL = 11
NL_ROUTE_PROTOCOL_RouteProtocolBbn: NL_ROUTE_PROTOCOL = 12
NL_ROUTE_PROTOCOL_RouteProtocolOspf: NL_ROUTE_PROTOCOL = 13
NL_ROUTE_PROTOCOL_RouteProtocolBgp: NL_ROUTE_PROTOCOL = 14
NL_ROUTE_PROTOCOL_RouteProtocolIdpr: NL_ROUTE_PROTOCOL = 15
NL_ROUTE_PROTOCOL_RouteProtocolEigrp: NL_ROUTE_PROTOCOL = 16
NL_ROUTE_PROTOCOL_RouteProtocolDvmrp: NL_ROUTE_PROTOCOL = 17
NL_ROUTE_PROTOCOL_RouteProtocolRpl: NL_ROUTE_PROTOCOL = 18
NL_ROUTE_PROTOCOL_RouteProtocolDhcp: NL_ROUTE_PROTOCOL = 19
NL_ROUTE_PROTOCOL_MIB_IPPROTO_OTHER: NL_ROUTE_PROTOCOL = 1
NL_ROUTE_PROTOCOL_PROTO_IP_OTHER: NL_ROUTE_PROTOCOL = 1
NL_ROUTE_PROTOCOL_MIB_IPPROTO_LOCAL: NL_ROUTE_PROTOCOL = 2
NL_ROUTE_PROTOCOL_PROTO_IP_LOCAL: NL_ROUTE_PROTOCOL = 2
NL_ROUTE_PROTOCOL_MIB_IPPROTO_NETMGMT: NL_ROUTE_PROTOCOL = 3
NL_ROUTE_PROTOCOL_PROTO_IP_NETMGMT: NL_ROUTE_PROTOCOL = 3
NL_ROUTE_PROTOCOL_MIB_IPPROTO_ICMP: NL_ROUTE_PROTOCOL = 4
NL_ROUTE_PROTOCOL_PROTO_IP_ICMP: NL_ROUTE_PROTOCOL = 4
NL_ROUTE_PROTOCOL_MIB_IPPROTO_EGP: NL_ROUTE_PROTOCOL = 5
NL_ROUTE_PROTOCOL_PROTO_IP_EGP: NL_ROUTE_PROTOCOL = 5
NL_ROUTE_PROTOCOL_MIB_IPPROTO_GGP: NL_ROUTE_PROTOCOL = 6
NL_ROUTE_PROTOCOL_PROTO_IP_GGP: NL_ROUTE_PROTOCOL = 6
NL_ROUTE_PROTOCOL_MIB_IPPROTO_HELLO: NL_ROUTE_PROTOCOL = 7
NL_ROUTE_PROTOCOL_PROTO_IP_HELLO: NL_ROUTE_PROTOCOL = 7
NL_ROUTE_PROTOCOL_MIB_IPPROTO_RIP: NL_ROUTE_PROTOCOL = 8
NL_ROUTE_PROTOCOL_PROTO_IP_RIP: NL_ROUTE_PROTOCOL = 8
NL_ROUTE_PROTOCOL_MIB_IPPROTO_IS_IS: NL_ROUTE_PROTOCOL = 9
NL_ROUTE_PROTOCOL_PROTO_IP_IS_IS: NL_ROUTE_PROTOCOL = 9
NL_ROUTE_PROTOCOL_MIB_IPPROTO_ES_IS: NL_ROUTE_PROTOCOL = 10
NL_ROUTE_PROTOCOL_PROTO_IP_ES_IS: NL_ROUTE_PROTOCOL = 10
NL_ROUTE_PROTOCOL_MIB_IPPROTO_CISCO: NL_ROUTE_PROTOCOL = 11
NL_ROUTE_PROTOCOL_PROTO_IP_CISCO: NL_ROUTE_PROTOCOL = 11
NL_ROUTE_PROTOCOL_MIB_IPPROTO_BBN: NL_ROUTE_PROTOCOL = 12
NL_ROUTE_PROTOCOL_PROTO_IP_BBN: NL_ROUTE_PROTOCOL = 12
NL_ROUTE_PROTOCOL_MIB_IPPROTO_OSPF: NL_ROUTE_PROTOCOL = 13
NL_ROUTE_PROTOCOL_PROTO_IP_OSPF: NL_ROUTE_PROTOCOL = 13
NL_ROUTE_PROTOCOL_MIB_IPPROTO_BGP: NL_ROUTE_PROTOCOL = 14
NL_ROUTE_PROTOCOL_PROTO_IP_BGP: NL_ROUTE_PROTOCOL = 14
NL_ROUTE_PROTOCOL_MIB_IPPROTO_IDPR: NL_ROUTE_PROTOCOL = 15
NL_ROUTE_PROTOCOL_PROTO_IP_IDPR: NL_ROUTE_PROTOCOL = 15
NL_ROUTE_PROTOCOL_MIB_IPPROTO_EIGRP: NL_ROUTE_PROTOCOL = 16
NL_ROUTE_PROTOCOL_PROTO_IP_EIGRP: NL_ROUTE_PROTOCOL = 16
NL_ROUTE_PROTOCOL_MIB_IPPROTO_DVMRP: NL_ROUTE_PROTOCOL = 17
NL_ROUTE_PROTOCOL_PROTO_IP_DVMRP: NL_ROUTE_PROTOCOL = 17
NL_ROUTE_PROTOCOL_MIB_IPPROTO_RPL: NL_ROUTE_PROTOCOL = 18
NL_ROUTE_PROTOCOL_PROTO_IP_RPL: NL_ROUTE_PROTOCOL = 18
NL_ROUTE_PROTOCOL_MIB_IPPROTO_DHCP: NL_ROUTE_PROTOCOL = 19
NL_ROUTE_PROTOCOL_PROTO_IP_DHCP: NL_ROUTE_PROTOCOL = 19
NL_ROUTE_PROTOCOL_MIB_IPPROTO_NT_AUTOSTATIC: NL_ROUTE_PROTOCOL = 10002
NL_ROUTE_PROTOCOL_PROTO_IP_NT_AUTOSTATIC: NL_ROUTE_PROTOCOL = 10002
NL_ROUTE_PROTOCOL_MIB_IPPROTO_NT_STATIC: NL_ROUTE_PROTOCOL = 10006
NL_ROUTE_PROTOCOL_PROTO_IP_NT_STATIC: NL_ROUTE_PROTOCOL = 10006
NL_ROUTE_PROTOCOL_MIB_IPPROTO_NT_STATIC_NON_DOD: NL_ROUTE_PROTOCOL = 10007
NL_ROUTE_PROTOCOL_PROTO_IP_NT_STATIC_NON_DOD: NL_ROUTE_PROTOCOL = 10007
NL_ROUTER_DISCOVERY_BEHAVIOR = Int32
NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryDisabled: NL_ROUTER_DISCOVERY_BEHAVIOR = 0
NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryEnabled: NL_ROUTER_DISCOVERY_BEHAVIOR = 1
NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryDhcp: NL_ROUTER_DISCOVERY_BEHAVIOR = 2
NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryUnchanged: NL_ROUTER_DISCOVERY_BEHAVIOR = -1
NL_SUFFIX_ORIGIN = Int32
NL_SUFFIX_ORIGIN_NlsoOther: NL_SUFFIX_ORIGIN = 0
NL_SUFFIX_ORIGIN_NlsoManual: NL_SUFFIX_ORIGIN = 1
NL_SUFFIX_ORIGIN_NlsoWellKnown: NL_SUFFIX_ORIGIN = 2
NL_SUFFIX_ORIGIN_NlsoDhcp: NL_SUFFIX_ORIGIN = 3
NL_SUFFIX_ORIGIN_NlsoLinkLayerAddress: NL_SUFFIX_ORIGIN = 4
NL_SUFFIX_ORIGIN_NlsoRandom: NL_SUFFIX_ORIGIN = 5
NL_SUFFIX_ORIGIN_IpSuffixOriginOther: NL_SUFFIX_ORIGIN = 0
NL_SUFFIX_ORIGIN_IpSuffixOriginManual: NL_SUFFIX_ORIGIN = 1
NL_SUFFIX_ORIGIN_IpSuffixOriginWellKnown: NL_SUFFIX_ORIGIN = 2
NL_SUFFIX_ORIGIN_IpSuffixOriginDhcp: NL_SUFFIX_ORIGIN = 3
NL_SUFFIX_ORIGIN_IpSuffixOriginLinkLayerAddress: NL_SUFFIX_ORIGIN = 4
NL_SUFFIX_ORIGIN_IpSuffixOriginRandom: NL_SUFFIX_ORIGIN = 5
NL_SUFFIX_ORIGIN_IpSuffixOriginUnchanged: NL_SUFFIX_ORIGIN = 16
class NLA_BLOB(Structure):
    header: _header_e__Struct
    data: _data_e__Union
    class _header_e__Struct(Structure):
        type: win32more.Networking.WinSock.NLA_BLOB_DATA_TYPE
        dwSize: UInt32
        nextOffset: UInt32
    class _data_e__Union(Union):
        rawData: win32more.Foundation.CHAR * 1
        interfaceData: _interfaceData_e__Struct
        locationData: _locationData_e__Struct
        connectivity: _connectivity_e__Struct
        ICS: _ICS_e__Struct
        class _interfaceData_e__Struct(Structure):
            dwType: UInt32
            dwSpeed: UInt32
            adapterName: win32more.Foundation.CHAR * 1
        class _locationData_e__Struct(Structure):
            information: win32more.Foundation.CHAR * 1
        class _connectivity_e__Struct(Structure):
            type: win32more.Networking.WinSock.NLA_CONNECTIVITY_TYPE
            internet: win32more.Networking.WinSock.NLA_INTERNET
        class _ICS_e__Struct(Structure):
            remote: _remote_e__Struct
            class _remote_e__Struct(Structure):
                speed: UInt32
                type: UInt32
                state: UInt32
                machineName: Char * 256
                sharedAdapterName: Char * 256
NLA_BLOB_DATA_TYPE = Int32
NLA_RAW_DATA: NLA_BLOB_DATA_TYPE = 0
NLA_INTERFACE: NLA_BLOB_DATA_TYPE = 1
NLA_802_1X_LOCATION: NLA_BLOB_DATA_TYPE = 2
NLA_CONNECTIVITY: NLA_BLOB_DATA_TYPE = 3
NLA_ICS: NLA_BLOB_DATA_TYPE = 4
NLA_CONNECTIVITY_TYPE = Int32
NLA_NETWORK_AD_HOC: NLA_CONNECTIVITY_TYPE = 0
NLA_NETWORK_MANAGED: NLA_CONNECTIVITY_TYPE = 1
NLA_NETWORK_UNMANAGED: NLA_CONNECTIVITY_TYPE = 2
NLA_NETWORK_UNKNOWN: NLA_CONNECTIVITY_TYPE = 3
NLA_INTERNET = Int32
NLA_INTERNET_UNKNOWN: NLA_INTERNET = 0
NLA_INTERNET_NO: NLA_INTERNET = 1
NLA_INTERNET_YES: NLA_INTERNET = 2
class NPI_MODULEID(Structure):
    Length: UInt16
    Type: win32more.Networking.WinSock.NPI_MODULEID_TYPE
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        Guid: Guid
        IfLuid: win32more.Foundation.LUID
NPI_MODULEID_TYPE = Int32
MIT_GUID: NPI_MODULEID_TYPE = 1
MIT_IF_LUID: NPI_MODULEID_TYPE = 2
class NS_INFOA(Structure):
    dwNameSpace: UInt32
    dwNameSpaceFlags: UInt32
    lpNameSpace: win32more.Foundation.PSTR
class NS_INFOW(Structure):
    dwNameSpace: UInt32
    dwNameSpaceFlags: UInt32
    lpNameSpace: win32more.Foundation.PWSTR
class NS_SERVICE_INFOA(Structure):
    dwNameSpace: UInt32
    ServiceInfo: win32more.Networking.WinSock.SERVICE_INFOA
class NS_SERVICE_INFOW(Structure):
    dwNameSpace: UInt32
    ServiceInfo: win32more.Networking.WinSock.SERVICE_INFOW
class NSP_ROUTINE(Structure):
    cbSize: UInt32
    dwMajorVersion: UInt32
    dwMinorVersion: UInt32
    NSPCleanup: win32more.Networking.WinSock.LPNSPCLEANUP
    NSPLookupServiceBegin: win32more.Networking.WinSock.LPNSPLOOKUPSERVICEBEGIN
    NSPLookupServiceNext: win32more.Networking.WinSock.LPNSPLOOKUPSERVICENEXT
    NSPLookupServiceEnd: win32more.Networking.WinSock.LPNSPLOOKUPSERVICEEND
    NSPSetService: win32more.Networking.WinSock.LPNSPSETSERVICE
    NSPInstallServiceClass: win32more.Networking.WinSock.LPNSPINSTALLSERVICECLASS
    NSPRemoveServiceClass: win32more.Networking.WinSock.LPNSPREMOVESERVICECLASS
    NSPGetServiceClassInfo: win32more.Networking.WinSock.LPNSPGETSERVICECLASSINFO
    NSPIoctl: win32more.Networking.WinSock.LPNSPIOCTL
class NSPV2_ROUTINE(Structure):
    cbSize: UInt32
    dwMajorVersion: UInt32
    dwMinorVersion: UInt32
    NSPv2Startup: win32more.Networking.WinSock.LPNSPV2STARTUP
    NSPv2Cleanup: win32more.Networking.WinSock.LPNSPV2CLEANUP
    NSPv2LookupServiceBegin: win32more.Networking.WinSock.LPNSPV2LOOKUPSERVICEBEGIN
    NSPv2LookupServiceNextEx: win32more.Networking.WinSock.LPNSPV2LOOKUPSERVICENEXTEX
    NSPv2LookupServiceEnd: win32more.Networking.WinSock.LPNSPV2LOOKUPSERVICEEND
    NSPv2SetServiceEx: win32more.Networking.WinSock.LPNSPV2SETSERVICEEX
    NSPv2ClientSessionRundown: win32more.Networking.WinSock.LPNSPV2CLIENTSESSIONRUNDOWN
PMTUD_STATE = Int32
IP_PMTUDISC_NOT_SET: PMTUD_STATE = 0
IP_PMTUDISC_DO: PMTUD_STATE = 1
IP_PMTUDISC_DONT: PMTUD_STATE = 2
IP_PMTUDISC_PROBE: PMTUD_STATE = 3
IP_PMTUDISC_MAX: PMTUD_STATE = 4
class PRIORITY_STATUS(Structure):
    Sender: win32more.Networking.WinSock.SOCKET_PRIORITY_HINT
    Receiver: win32more.Networking.WinSock.SOCKET_PRIORITY_HINT
class PROTOCOL_INFOA(Structure):
    dwServiceFlags: UInt32
    iAddressFamily: Int32
    iMaxSockAddr: Int32
    iMinSockAddr: Int32
    iSocketType: Int32
    iProtocol: Int32
    dwMessageSize: UInt32
    lpProtocol: win32more.Foundation.PSTR
class PROTOCOL_INFOW(Structure):
    dwServiceFlags: UInt32
    iAddressFamily: Int32
    iMaxSockAddr: Int32
    iMinSockAddr: Int32
    iSocketType: Int32
    iProtocol: Int32
    dwMessageSize: UInt32
    lpProtocol: win32more.Foundation.PWSTR
class PROTOENT(Structure):
    p_name: win32more.Foundation.PSTR
    p_aliases: POINTER(POINTER(SByte))
    p_proto: Int16
class Q2931_IE(Structure):
    IEType: win32more.Networking.WinSock.Q2931_IE_TYPE
    IELength: UInt32
    IE: Byte * 1
Q2931_IE_TYPE = Int32
IE_AALParameters: Q2931_IE_TYPE = 0
IE_TrafficDescriptor: Q2931_IE_TYPE = 1
IE_BroadbandBearerCapability: Q2931_IE_TYPE = 2
IE_BHLI: Q2931_IE_TYPE = 3
IE_BLLI: Q2931_IE_TYPE = 4
IE_CalledPartyNumber: Q2931_IE_TYPE = 5
IE_CalledPartySubaddress: Q2931_IE_TYPE = 6
IE_CallingPartyNumber: Q2931_IE_TYPE = 7
IE_CallingPartySubaddress: Q2931_IE_TYPE = 8
IE_Cause: Q2931_IE_TYPE = 9
IE_QOSClass: Q2931_IE_TYPE = 10
IE_TransitNetworkSelection: Q2931_IE_TYPE = 11
class QOS(Structure):
    SendingFlowspec: win32more.Networking.WinSock.FLOWSPEC
    ReceivingFlowspec: win32more.Networking.WinSock.FLOWSPEC
    ProviderSpecific: win32more.Networking.WinSock.WSABUF
class RCVALL_IF(Structure):
    Mode: win32more.Networking.WinSock.RCVALL_VALUE
    Interface: UInt32
RCVALL_VALUE = Int32
RCVALL_OFF: RCVALL_VALUE = 0
RCVALL_ON: RCVALL_VALUE = 1
RCVALL_SOCKETLEVELONLY: RCVALL_VALUE = 2
RCVALL_IPLEVEL: RCVALL_VALUE = 3
class REAL_TIME_NOTIFICATION_SETTING_INPUT(Structure):
    TransportSettingId: win32more.Networking.WinSock.TRANSPORT_SETTING_ID
    BrokerEventGuid: Guid
class REAL_TIME_NOTIFICATION_SETTING_INPUT_EX(Structure):
    TransportSettingId: win32more.Networking.WinSock.TRANSPORT_SETTING_ID
    BrokerEventGuid: Guid
    Unmark: win32more.Foundation.BOOLEAN
class REAL_TIME_NOTIFICATION_SETTING_OUTPUT(Structure):
    ChannelStatus: win32more.Networking.WinSock.CONTROL_CHANNEL_TRIGGER_STATUS
RESOURCE_DISPLAY_TYPE = UInt32
RESOURCEDISPLAYTYPE_DOMAIN: RESOURCE_DISPLAY_TYPE = 1
RESOURCEDISPLAYTYPE_FILE: RESOURCE_DISPLAY_TYPE = 4
RESOURCEDISPLAYTYPE_GENERIC: RESOURCE_DISPLAY_TYPE = 0
RESOURCEDISPLAYTYPE_GROUP: RESOURCE_DISPLAY_TYPE = 5
RESOURCEDISPLAYTYPE_SERVER: RESOURCE_DISPLAY_TYPE = 2
RESOURCEDISPLAYTYPE_SHARE: RESOURCE_DISPLAY_TYPE = 3
RESOURCEDISPLAYTYPE_TREE: RESOURCE_DISPLAY_TYPE = 10
class RIO_BUF(Structure):
    BufferId: POINTER(win32more.Networking.WinSock.RIO_BUFFERID_t_head)
    Offset: UInt32
    Length: UInt32
class RIO_BUFFERID_t(Structure):
    pass
class RIO_CMSG_BUFFER(Structure):
    TotalLength: UInt32
class RIO_CQ_t(Structure):
    pass
class RIO_EXTENSION_FUNCTION_TABLE(Structure):
    cbSize: UInt32
    RIOReceive: win32more.Networking.WinSock.LPFN_RIORECEIVE
    RIOReceiveEx: win32more.Networking.WinSock.LPFN_RIORECEIVEEX
    RIOSend: win32more.Networking.WinSock.LPFN_RIOSEND
    RIOSendEx: win32more.Networking.WinSock.LPFN_RIOSENDEX
    RIOCloseCompletionQueue: win32more.Networking.WinSock.LPFN_RIOCLOSECOMPLETIONQUEUE
    RIOCreateCompletionQueue: win32more.Networking.WinSock.LPFN_RIOCREATECOMPLETIONQUEUE
    RIOCreateRequestQueue: win32more.Networking.WinSock.LPFN_RIOCREATEREQUESTQUEUE
    RIODequeueCompletion: win32more.Networking.WinSock.LPFN_RIODEQUEUECOMPLETION
    RIODeregisterBuffer: win32more.Networking.WinSock.LPFN_RIODEREGISTERBUFFER
    RIONotify: win32more.Networking.WinSock.LPFN_RIONOTIFY
    RIORegisterBuffer: win32more.Networking.WinSock.LPFN_RIOREGISTERBUFFER
    RIOResizeCompletionQueue: win32more.Networking.WinSock.LPFN_RIORESIZECOMPLETIONQUEUE
    RIOResizeRequestQueue: win32more.Networking.WinSock.LPFN_RIORESIZEREQUESTQUEUE
class RIO_NOTIFICATION_COMPLETION(Structure):
    Type: win32more.Networking.WinSock.RIO_NOTIFICATION_COMPLETION_TYPE
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        Event: _Event_e__Struct
        Iocp: _Iocp_e__Struct
        class _Event_e__Struct(Structure):
            EventHandle: win32more.Foundation.HANDLE
            NotifyReset: win32more.Foundation.BOOL
        class _Iocp_e__Struct(Structure):
            IocpHandle: win32more.Foundation.HANDLE
            CompletionKey: c_void_p
            Overlapped: c_void_p
RIO_NOTIFICATION_COMPLETION_TYPE = Int32
RIO_EVENT_COMPLETION: RIO_NOTIFICATION_COMPLETION_TYPE = 1
RIO_IOCP_COMPLETION: RIO_NOTIFICATION_COMPLETION_TYPE = 2
class RIO_RQ_t(Structure):
    pass
class RIORESULT(Structure):
    Status: Int32
    BytesTransferred: UInt32
    SocketContext: UInt64
    RequestContext: UInt64
class RM_FEC_INFO(Structure):
    FECBlockSize: UInt16
    FECProActivePackets: UInt16
    FECGroupSize: Byte
    fFECOnDemandParityEnabled: win32more.Foundation.BOOLEAN
class RM_RECEIVER_STATS(Structure):
    NumODataPacketsReceived: UInt64
    NumRDataPacketsReceived: UInt64
    NumDuplicateDataPackets: UInt64
    DataBytesReceived: UInt64
    TotalBytesReceived: UInt64
    RateKBitsPerSecOverall: UInt64
    RateKBitsPerSecLast: UInt64
    TrailingEdgeSeqId: UInt64
    LeadingEdgeSeqId: UInt64
    AverageSequencesInWindow: UInt64
    MinSequencesInWindow: UInt64
    MaxSequencesInWindow: UInt64
    FirstNakSequenceNumber: UInt64
    NumPendingNaks: UInt64
    NumOutstandingNaks: UInt64
    NumDataPacketsBuffered: UInt64
    TotalSelectiveNaksSent: UInt64
    TotalParityNaksSent: UInt64
class RM_SEND_WINDOW(Structure):
    RateKbitsPerSec: UInt32
    WindowSizeInMSecs: UInt32
    WindowSizeInBytes: UInt32
class RM_SENDER_STATS(Structure):
    DataBytesSent: UInt64
    TotalBytesSent: UInt64
    NaksReceived: UInt64
    NaksReceivedTooLate: UInt64
    NumOutstandingNaks: UInt64
    NumNaksAfterRData: UInt64
    RepairPacketsSent: UInt64
    BufferSpaceAvailable: UInt64
    TrailingEdgeSeqId: UInt64
    LeadingEdgeSeqId: UInt64
    RateKBitsPerSecOverall: UInt64
    RateKBitsPerSecLast: UInt64
    TotalODataPacketsSent: UInt64
class RSS_SCALABILITY_INFO(Structure):
    RssEnabled: win32more.Foundation.BOOLEAN
class SCOPE_ID(Structure):
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        Anonymous: _Anonymous_e__Struct
        Value: UInt32
        class _Anonymous_e__Struct(Structure):
            _bitfield: UInt32
SCOPE_LEVEL = Int32
SCOPE_LEVEL_ScopeLevelInterface: SCOPE_LEVEL = 1
SCOPE_LEVEL_ScopeLevelLink: SCOPE_LEVEL = 2
SCOPE_LEVEL_ScopeLevelSubnet: SCOPE_LEVEL = 3
SCOPE_LEVEL_ScopeLevelAdmin: SCOPE_LEVEL = 4
SCOPE_LEVEL_ScopeLevelSite: SCOPE_LEVEL = 5
SCOPE_LEVEL_ScopeLevelOrganization: SCOPE_LEVEL = 8
SCOPE_LEVEL_ScopeLevelGlobal: SCOPE_LEVEL = 14
SCOPE_LEVEL_ScopeLevelCount: SCOPE_LEVEL = 16
SEND_RECV_FLAGS = Int32
MSG_OOB: SEND_RECV_FLAGS = 1
MSG_PEEK: SEND_RECV_FLAGS = 2
MSG_DONTROUTE: SEND_RECV_FLAGS = 4
MSG_WAITALL: SEND_RECV_FLAGS = 8
MSG_PUSH_IMMEDIATE: SEND_RECV_FLAGS = 32
class SERVENT(Structure):
    s_name: win32more.Foundation.PSTR
    s_aliases: POINTER(POINTER(SByte))
    s_proto: win32more.Foundation.PSTR
    s_port: Int16
class SERVICE_ADDRESS(Structure):
    dwAddressType: UInt32
    dwAddressFlags: UInt32
    dwAddressLength: UInt32
    dwPrincipalLength: UInt32
    lpAddress: c_char_p_no
    lpPrincipal: c_char_p_no
class SERVICE_ADDRESSES(Structure):
    dwAddressCount: UInt32
    Addresses: win32more.Networking.WinSock.SERVICE_ADDRESS * 1
class SERVICE_ASYNC_INFO(Structure):
    lpServiceCallbackProc: win32more.Networking.WinSock.LPSERVICE_CALLBACK_PROC
    lParam: win32more.Foundation.LPARAM
    hAsyncTaskHandle: win32more.Foundation.HANDLE
class SERVICE_INFOA(Structure):
    lpServiceType: POINTER(Guid)
    lpServiceName: win32more.Foundation.PSTR
    lpComment: win32more.Foundation.PSTR
    lpLocale: win32more.Foundation.PSTR
    dwDisplayHint: win32more.Networking.WinSock.RESOURCE_DISPLAY_TYPE
    dwVersion: UInt32
    dwTime: UInt32
    lpMachineName: win32more.Foundation.PSTR
    lpServiceAddress: POINTER(win32more.Networking.WinSock.SERVICE_ADDRESSES_head)
    ServiceSpecificInfo: win32more.System.Com.BLOB
class SERVICE_INFOW(Structure):
    lpServiceType: POINTER(Guid)
    lpServiceName: win32more.Foundation.PWSTR
    lpComment: win32more.Foundation.PWSTR
    lpLocale: win32more.Foundation.PWSTR
    dwDisplayHint: win32more.Networking.WinSock.RESOURCE_DISPLAY_TYPE
    dwVersion: UInt32
    dwTime: UInt32
    lpMachineName: win32more.Foundation.PWSTR
    lpServiceAddress: POINTER(win32more.Networking.WinSock.SERVICE_ADDRESSES_head)
    ServiceSpecificInfo: win32more.System.Com.BLOB
class SERVICE_TYPE_INFO(Structure):
    dwTypeNameOffset: UInt32
    dwValueCount: UInt32
    Values: win32more.Networking.WinSock.SERVICE_TYPE_VALUE * 1
class SERVICE_TYPE_INFO_ABSA(Structure):
    lpTypeName: win32more.Foundation.PSTR
    dwValueCount: UInt32
    Values: win32more.Networking.WinSock.SERVICE_TYPE_VALUE_ABSA * 1
class SERVICE_TYPE_INFO_ABSW(Structure):
    lpTypeName: win32more.Foundation.PWSTR
    dwValueCount: UInt32
    Values: win32more.Networking.WinSock.SERVICE_TYPE_VALUE_ABSW * 1
class SERVICE_TYPE_VALUE(Structure):
    dwNameSpace: UInt32
    dwValueType: UInt32
    dwValueSize: UInt32
    dwValueNameOffset: UInt32
    dwValueOffset: UInt32
class SERVICE_TYPE_VALUE_ABSA(Structure):
    dwNameSpace: UInt32
    dwValueType: UInt32
    dwValueSize: UInt32
    lpValueName: win32more.Foundation.PSTR
    lpValue: c_void_p
class SERVICE_TYPE_VALUE_ABSW(Structure):
    dwNameSpace: UInt32
    dwValueType: UInt32
    dwValueSize: UInt32
    lpValueName: win32more.Foundation.PWSTR
    lpValue: c_void_p
SET_SERVICE_OPERATION = UInt32
SERVICE_REGISTER: SET_SERVICE_OPERATION = 1
SERVICE_DEREGISTER: SET_SERVICE_OPERATION = 2
SERVICE_FLUSH: SET_SERVICE_OPERATION = 3
SERVICE_ADD_TYPE: SET_SERVICE_OPERATION = 4
SERVICE_DELETE_TYPE: SET_SERVICE_OPERATION = 5
class SNAP_HEADER(Structure):
    Dsap: Byte
    Ssap: Byte
    Control: Byte
    Oui: Byte * 3
    Type: UInt16
class SOCK_NOTIFY_REGISTRATION(Structure):
    socket: win32more.Networking.WinSock.SOCKET
    completionKey: c_void_p
    eventFilter: UInt16
    operation: Byte
    triggerFlags: Byte
    registrationResult: UInt32
class SOCKADDR(Structure):
    sa_family: win32more.Networking.WinSock.ADDRESS_FAMILY
    sa_data: win32more.Foundation.CHAR * 14
class SOCKADDR_ATM(Structure):
    satm_family: UInt16
    satm_number: win32more.Networking.WinSock.ATM_ADDRESS
    satm_blli: win32more.Networking.WinSock.ATM_BLLI
    satm_bhli: win32more.Networking.WinSock.ATM_BHLI
class SOCKADDR_DL(Structure):
    sdl_family: win32more.Networking.WinSock.ADDRESS_FAMILY
    sdl_data: Byte * 8
    sdl_zero: Byte * 4
class sockaddr_gen(Union):
    Address: win32more.Networking.WinSock.SOCKADDR
    AddressIn: win32more.Networking.WinSock.SOCKADDR_IN
    AddressIn6: win32more.Networking.WinSock.sockaddr_in6_old
class SOCKADDR_IN(Structure):
    sin_family: win32more.Networking.WinSock.ADDRESS_FAMILY
    sin_port: UInt16
    sin_addr: win32more.Networking.WinSock.IN_ADDR
    sin_zero: win32more.Foundation.CHAR * 8
class SOCKADDR_IN6(Structure):
    sin6_family: win32more.Networking.WinSock.ADDRESS_FAMILY
    sin6_port: UInt16
    sin6_flowinfo: UInt32
    sin6_addr: win32more.Networking.WinSock.IN6_ADDR
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        sin6_scope_id: UInt32
        sin6_scope_struct: win32more.Networking.WinSock.SCOPE_ID
class sockaddr_in6_old(Structure):
    sin6_family: Int16
    sin6_port: UInt16
    sin6_flowinfo: UInt32
    sin6_addr: win32more.Networking.WinSock.IN6_ADDR
class SOCKADDR_IN6_PAIR(Structure):
    SourceAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_IN6_head)
    DestinationAddress: POINTER(win32more.Networking.WinSock.SOCKADDR_IN6_head)
class SOCKADDR_IN6_W2KSP1(Structure):
    sin6_family: Int16
    sin6_port: UInt16
    sin6_flowinfo: UInt32
    sin6_addr: win32more.Networking.WinSock.IN6_ADDR
    sin6_scope_id: UInt32
class SOCKADDR_INET(Union):
    Ipv4: win32more.Networking.WinSock.SOCKADDR_IN
    Ipv6: win32more.Networking.WinSock.SOCKADDR_IN6
    si_family: win32more.Networking.WinSock.ADDRESS_FAMILY
class SOCKADDR_IPX(Structure):
    sa_family: Int16
    sa_netnum: win32more.Foundation.CHAR * 4
    sa_nodenum: win32more.Foundation.CHAR * 6
    sa_socket: UInt16
class SOCKADDR_IRDA(Structure):
    irdaAddressFamily: UInt16
    irdaDeviceID: Byte * 4
    irdaServiceName: win32more.Foundation.CHAR * 25
class SOCKADDR_NB(Structure):
    snb_family: Int16
    snb_type: UInt16
    snb_name: win32more.Foundation.CHAR * 16
class SOCKADDR_STORAGE(Structure):
    ss_family: win32more.Networking.WinSock.ADDRESS_FAMILY
    __ss_pad1: win32more.Foundation.CHAR * 6
    __ss_align: Int64
    __ss_pad2: win32more.Foundation.CHAR * 112
class SOCKADDR_STORAGE_XP(Structure):
    ss_family: Int16
    __ss_pad1: win32more.Foundation.CHAR * 6
    __ss_align: Int64
    __ss_pad2: win32more.Foundation.CHAR * 112
class SOCKADDR_TP(Structure):
    tp_family: UInt16
    tp_addr_type: UInt16
    tp_taddr_len: UInt16
    tp_tsel_len: UInt16
    tp_addr: Byte * 64
class SOCKADDR_UN(Structure):
    sun_family: win32more.Networking.WinSock.ADDRESS_FAMILY
    sun_path: win32more.Foundation.CHAR * 108
class SOCKADDR_VNS(Structure):
    sin_family: UInt16
    net_address: Byte * 4
    subnet_addr: Byte * 2
    port: Byte * 2
    hops: Byte
    filler: Byte * 5
SOCKET = UIntPtr
class SOCKET_ADDRESS(Structure):
    lpSockaddr: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    iSockaddrLength: Int32
class SOCKET_ADDRESS_LIST(Structure):
    iAddressCount: Int32
    Address: win32more.Networking.WinSock.SOCKET_ADDRESS * 1
class SOCKET_PEER_TARGET_NAME(Structure):
    SecurityProtocol: win32more.Networking.WinSock.SOCKET_SECURITY_PROTOCOL
    PeerAddress: win32more.Networking.WinSock.SOCKADDR_STORAGE
    PeerTargetNameStringLen: UInt32
    AllStrings: Char * 1
SOCKET_PRIORITY_HINT = Int32
SOCKET_PRIORITY_HINT_SocketPriorityHintVeryLow: SOCKET_PRIORITY_HINT = 0
SOCKET_PRIORITY_HINT_SocketPriorityHintLow: SOCKET_PRIORITY_HINT = 1
SOCKET_PRIORITY_HINT_SocketPriorityHintNormal: SOCKET_PRIORITY_HINT = 2
SOCKET_PRIORITY_HINT_SocketMaximumPriorityHintType: SOCKET_PRIORITY_HINT = 3
class SOCKET_PROCESSOR_AFFINITY(Structure):
    Processor: win32more.System.Kernel.PROCESSOR_NUMBER
    NumaNodeId: UInt16
    Reserved: UInt16
SOCKET_SECURITY_PROTOCOL = Int32
SOCKET_SECURITY_PROTOCOL_DEFAULT: SOCKET_SECURITY_PROTOCOL = 0
SOCKET_SECURITY_PROTOCOL_IPSEC: SOCKET_SECURITY_PROTOCOL = 1
SOCKET_SECURITY_PROTOCOL_IPSEC2: SOCKET_SECURITY_PROTOCOL = 2
SOCKET_SECURITY_PROTOCOL_INVALID: SOCKET_SECURITY_PROTOCOL = 3
class SOCKET_SECURITY_QUERY_INFO(Structure):
    SecurityProtocol: win32more.Networking.WinSock.SOCKET_SECURITY_PROTOCOL
    Flags: UInt32
    PeerApplicationAccessTokenHandle: UInt64
    PeerMachineAccessTokenHandle: UInt64
class SOCKET_SECURITY_QUERY_INFO_IPSEC2(Structure):
    SecurityProtocol: win32more.Networking.WinSock.SOCKET_SECURITY_PROTOCOL
    Flags: UInt32
    PeerApplicationAccessTokenHandle: UInt64
    PeerMachineAccessTokenHandle: UInt64
    MmSaId: UInt64
    QmSaId: UInt64
    NegotiationWinerr: UInt32
    SaLookupContext: Guid
class SOCKET_SECURITY_QUERY_TEMPLATE(Structure):
    SecurityProtocol: win32more.Networking.WinSock.SOCKET_SECURITY_PROTOCOL
    PeerAddress: win32more.Networking.WinSock.SOCKADDR_STORAGE
    PeerTokenAccessMask: UInt32
class SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2(Structure):
    SecurityProtocol: win32more.Networking.WinSock.SOCKET_SECURITY_PROTOCOL
    PeerAddress: win32more.Networking.WinSock.SOCKADDR_STORAGE
    PeerTokenAccessMask: UInt32
    Flags: UInt32
    FieldMask: UInt32
class SOCKET_SECURITY_SETTINGS(Structure):
    SecurityProtocol: win32more.Networking.WinSock.SOCKET_SECURITY_PROTOCOL
    SecurityFlags: UInt32
class SOCKET_SECURITY_SETTINGS_IPSEC(Structure):
    SecurityProtocol: win32more.Networking.WinSock.SOCKET_SECURITY_PROTOCOL
    SecurityFlags: UInt32
    IpsecFlags: UInt32
    AuthipMMPolicyKey: Guid
    AuthipQMPolicyKey: Guid
    Reserved: Guid
    Reserved2: UInt64
    UserNameStringLen: UInt32
    DomainNameStringLen: UInt32
    PasswordStringLen: UInt32
    AllStrings: Char * 1
SOCKET_USAGE_TYPE = Int32
SYSTEM_CRITICAL_SOCKET: SOCKET_USAGE_TYPE = 1
class sockproto(Structure):
    sp_family: UInt16
    sp_protocol: UInt16
class TCP_ACK_FREQUENCY_PARAMETERS(Structure):
    TcpDelayedAckFrequency: Byte
class TCP_HDR(Structure):
    th_sport: UInt16
    th_dport: UInt16
    th_seq: UInt32
    th_ack: UInt32
    _bitfield: Byte
    th_flags: Byte
    th_win: UInt16
    th_sum: UInt16
    th_urp: UInt16
    _pack_ = 1
TCP_ICW_LEVEL = Int32
TCP_ICW_LEVEL_DEFAULT: TCP_ICW_LEVEL = 0
TCP_ICW_LEVEL_HIGH: TCP_ICW_LEVEL = 1
TCP_ICW_LEVEL_VERY_HIGH: TCP_ICW_LEVEL = 2
TCP_ICW_LEVEL_AGGRESSIVE: TCP_ICW_LEVEL = 3
TCP_ICW_LEVEL_EXPERIMENTAL: TCP_ICW_LEVEL = 4
TCP_ICW_LEVEL_COMPAT: TCP_ICW_LEVEL = 254
TCP_ICW_LEVEL_MAX: TCP_ICW_LEVEL = 255
class TCP_ICW_PARAMETERS(Structure):
    Level: win32more.Networking.WinSock.TCP_ICW_LEVEL
class TCP_INFO_v0(Structure):
    State: win32more.Networking.WinSock.TCPSTATE
    Mss: UInt32
    ConnectionTimeMs: UInt64
    TimestampsEnabled: win32more.Foundation.BOOLEAN
    RttUs: UInt32
    MinRttUs: UInt32
    BytesInFlight: UInt32
    Cwnd: UInt32
    SndWnd: UInt32
    RcvWnd: UInt32
    RcvBuf: UInt32
    BytesOut: UInt64
    BytesIn: UInt64
    BytesReordered: UInt32
    BytesRetrans: UInt32
    FastRetrans: UInt32
    DupAcksIn: UInt32
    TimeoutEpisodes: UInt32
    SynRetrans: Byte
class TCP_INFO_v1(Structure):
    State: win32more.Networking.WinSock.TCPSTATE
    Mss: UInt32
    ConnectionTimeMs: UInt64
    TimestampsEnabled: win32more.Foundation.BOOLEAN
    RttUs: UInt32
    MinRttUs: UInt32
    BytesInFlight: UInt32
    Cwnd: UInt32
    SndWnd: UInt32
    RcvWnd: UInt32
    RcvBuf: UInt32
    BytesOut: UInt64
    BytesIn: UInt64
    BytesReordered: UInt32
    BytesRetrans: UInt32
    FastRetrans: UInt32
    DupAcksIn: UInt32
    TimeoutEpisodes: UInt32
    SynRetrans: Byte
    SndLimTransRwin: UInt32
    SndLimTimeRwin: UInt32
    SndLimBytesRwin: UInt64
    SndLimTransCwnd: UInt32
    SndLimTimeCwnd: UInt32
    SndLimBytesCwnd: UInt64
    SndLimTransSnd: UInt32
    SndLimTimeSnd: UInt32
    SndLimBytesSnd: UInt64
class TCP_INITIAL_RTO_PARAMETERS(Structure):
    Rtt: UInt16
    MaxSynRetransmissions: Byte
class tcp_keepalive(Structure):
    onoff: UInt32
    keepalivetime: UInt32
    keepaliveinterval: UInt32
class TCP_OPT_FASTOPEN(Structure):
    Kind: Byte
    Length: Byte
    Cookie: Byte * 1
    _pack_ = 1
class TCP_OPT_MSS(Structure):
    Kind: Byte
    Length: Byte
    Mss: UInt16
    _pack_ = 1
class TCP_OPT_SACK(Structure):
    Kind: Byte
    Length: Byte
    Block: tcp_opt_sack_block * 1
    _pack_ = 1
    class tcp_opt_sack_block(Structure):
        Left: UInt32
        Right: UInt32
        _pack_ = 1
class TCP_OPT_SACK_PERMITTED(Structure):
    Kind: Byte
    Length: Byte
    _pack_ = 1
class TCP_OPT_TS(Structure):
    Kind: Byte
    Length: Byte
    Val: UInt32
    EcR: UInt32
    _pack_ = 1
class TCP_OPT_UNKNOWN(Structure):
    Kind: Byte
    Length: Byte
    _pack_ = 1
class TCP_OPT_WS(Structure):
    Kind: Byte
    Length: Byte
    ShiftCnt: Byte
    _pack_ = 1
TCPSTATE = Int32
TCPSTATE_CLOSED: TCPSTATE = 0
TCPSTATE_LISTEN: TCPSTATE = 1
TCPSTATE_SYN_SENT: TCPSTATE = 2
TCPSTATE_SYN_RCVD: TCPSTATE = 3
TCPSTATE_ESTABLISHED: TCPSTATE = 4
TCPSTATE_FIN_WAIT_1: TCPSTATE = 5
TCPSTATE_FIN_WAIT_2: TCPSTATE = 6
TCPSTATE_CLOSE_WAIT: TCPSTATE = 7
TCPSTATE_CLOSING: TCPSTATE = 8
TCPSTATE_LAST_ACK: TCPSTATE = 9
TCPSTATE_TIME_WAIT: TCPSTATE = 10
TCPSTATE_MAX: TCPSTATE = 11
class TIMESTAMPING_CONFIG(Structure):
    Flags: UInt32
    TxTimestampsBuffered: UInt16
class TIMEVAL(Structure):
    tv_sec: Int32
    tv_usec: Int32
class TRANSMIT_FILE_BUFFERS(Structure):
    Head: c_void_p
    HeadLength: UInt32
    Tail: c_void_p
    TailLength: UInt32
class TRANSMIT_PACKETS_ELEMENT(Structure):
    dwElFlags: UInt32
    cLength: UInt32
    Anonymous: _Anonymous_e__Union
    class _Anonymous_e__Union(Union):
        Anonymous: _Anonymous_e__Struct
        pBuffer: c_void_p
        class _Anonymous_e__Struct(Structure):
            nFileOffset: win32more.Foundation.LARGE_INTEGER
            hFile: win32more.Foundation.HANDLE
class TRANSPORT_SETTING_ID(Structure):
    Guid: Guid
TUNNEL_SUB_TYPE = Int32
TUNNEL_SUB_TYPE_NONE: TUNNEL_SUB_TYPE = 0
TUNNEL_SUB_TYPE_CP: TUNNEL_SUB_TYPE = 1
TUNNEL_SUB_TYPE_IPTLS: TUNNEL_SUB_TYPE = 2
TUNNEL_SUB_TYPE_HA: TUNNEL_SUB_TYPE = 3
class VLAN_TAG(Structure):
    Anonymous: _Anonymous_e__Union
    Type: UInt16
    class _Anonymous_e__Union(Union):
        Tag: UInt16
        Anonymous: _Anonymous_e__Struct
        class _Anonymous_e__Struct(Structure):
            _bitfield: UInt16
class WCE_DEVICELIST(Structure):
    numDevice: UInt32
    Device: win32more.Networking.WinSock.WCE_IRDA_DEVICE_INFO * 1
class WCE_IRDA_DEVICE_INFO(Structure):
    irdaDeviceID: Byte * 4
    irdaDeviceName: win32more.Foundation.CHAR * 22
    Reserved: Byte * 2
class WINDOWS_DEVICELIST(Structure):
    numDevice: UInt32
    Device: win32more.Networking.WinSock.WINDOWS_IRDA_DEVICE_INFO * 1
class WINDOWS_IAS_QUERY(Structure):
    irdaDeviceID: Byte * 4
    irdaClassName: win32more.Foundation.CHAR * 64
    irdaAttribName: win32more.Foundation.CHAR * 256
    irdaAttribType: UInt32
    irdaAttribute: _irdaAttribute_e__Union
    class _irdaAttribute_e__Union(Union):
        irdaAttribInt: Int32
        irdaAttribOctetSeq: _irdaAttribOctetSeq_e__Struct
        irdaAttribUsrStr: _irdaAttribUsrStr_e__Struct
        class _irdaAttribOctetSeq_e__Struct(Structure):
            Len: UInt32
            OctetSeq: Byte * 1024
        class _irdaAttribUsrStr_e__Struct(Structure):
            Len: UInt32
            CharSet: UInt32
            UsrStr: Byte * 256
class WINDOWS_IAS_SET(Structure):
    irdaClassName: win32more.Foundation.CHAR * 64
    irdaAttribName: win32more.Foundation.CHAR * 256
    irdaAttribType: UInt32
    irdaAttribute: _irdaAttribute_e__Union
    class _irdaAttribute_e__Union(Union):
        irdaAttribInt: Int32
        irdaAttribOctetSeq: _irdaAttribOctetSeq_e__Struct
        irdaAttribUsrStr: _irdaAttribUsrStr_e__Struct
        class _irdaAttribOctetSeq_e__Struct(Structure):
            Len: UInt16
            OctetSeq: Byte * 1024
        class _irdaAttribUsrStr_e__Struct(Structure):
            Len: Byte
            CharSet: Byte
            UsrStr: Byte * 256
class WINDOWS_IRDA_DEVICE_INFO(Structure):
    irdaDeviceID: Byte * 4
    irdaDeviceName: win32more.Foundation.CHAR * 22
    irdaDeviceHints1: Byte
    irdaDeviceHints2: Byte
    irdaCharSet: Byte
WSA_COMPATIBILITY_BEHAVIOR_ID = Int32
WSA_COMPATIBILITY_BEHAVIOR_ID_WsaBehaviorAll: WSA_COMPATIBILITY_BEHAVIOR_ID = 0
WSA_COMPATIBILITY_BEHAVIOR_ID_WsaBehaviorReceiveBuffering: WSA_COMPATIBILITY_BEHAVIOR_ID = 1
WSA_COMPATIBILITY_BEHAVIOR_ID_WsaBehaviorAutoTuning: WSA_COMPATIBILITY_BEHAVIOR_ID = 2
class WSA_COMPATIBILITY_MODE(Structure):
    BehaviorId: win32more.Networking.WinSock.WSA_COMPATIBILITY_BEHAVIOR_ID
    TargetOsVersion: UInt32
WSA_ERROR = Int32
WSA_IO_PENDING: WSA_ERROR = 997
WSA_IO_INCOMPLETE: WSA_ERROR = 996
WSA_INVALID_HANDLE: WSA_ERROR = 6
WSA_INVALID_PARAMETER: WSA_ERROR = 87
WSA_NOT_ENOUGH_MEMORY: WSA_ERROR = 8
WSA_OPERATION_ABORTED: WSA_ERROR = 995
WSA_WAIT_EVENT_0: WSA_ERROR = 0
WSA_WAIT_IO_COMPLETION: WSA_ERROR = 192
WSABASEERR: WSA_ERROR = 10000
WSAEINTR: WSA_ERROR = 10004
WSAEBADF: WSA_ERROR = 10009
WSAEACCES: WSA_ERROR = 10013
WSAEFAULT: WSA_ERROR = 10014
WSAEINVAL: WSA_ERROR = 10022
WSAEMFILE: WSA_ERROR = 10024
WSAEWOULDBLOCK: WSA_ERROR = 10035
WSAEINPROGRESS: WSA_ERROR = 10036
WSAEALREADY: WSA_ERROR = 10037
WSAENOTSOCK: WSA_ERROR = 10038
WSAEDESTADDRREQ: WSA_ERROR = 10039
WSAEMSGSIZE: WSA_ERROR = 10040
WSAEPROTOTYPE: WSA_ERROR = 10041
WSAENOPROTOOPT: WSA_ERROR = 10042
WSAEPROTONOSUPPORT: WSA_ERROR = 10043
WSAESOCKTNOSUPPORT: WSA_ERROR = 10044
WSAEOPNOTSUPP: WSA_ERROR = 10045
WSAEPFNOSUPPORT: WSA_ERROR = 10046
WSAEAFNOSUPPORT: WSA_ERROR = 10047
WSAEADDRINUSE: WSA_ERROR = 10048
WSAEADDRNOTAVAIL: WSA_ERROR = 10049
WSAENETDOWN: WSA_ERROR = 10050
WSAENETUNREACH: WSA_ERROR = 10051
WSAENETRESET: WSA_ERROR = 10052
WSAECONNABORTED: WSA_ERROR = 10053
WSAECONNRESET: WSA_ERROR = 10054
WSAENOBUFS: WSA_ERROR = 10055
WSAEISCONN: WSA_ERROR = 10056
WSAENOTCONN: WSA_ERROR = 10057
WSAESHUTDOWN: WSA_ERROR = 10058
WSAETOOMANYREFS: WSA_ERROR = 10059
WSAETIMEDOUT: WSA_ERROR = 10060
WSAECONNREFUSED: WSA_ERROR = 10061
WSAELOOP: WSA_ERROR = 10062
WSAENAMETOOLONG: WSA_ERROR = 10063
WSAEHOSTDOWN: WSA_ERROR = 10064
WSAEHOSTUNREACH: WSA_ERROR = 10065
WSAENOTEMPTY: WSA_ERROR = 10066
WSAEPROCLIM: WSA_ERROR = 10067
WSAEUSERS: WSA_ERROR = 10068
WSAEDQUOT: WSA_ERROR = 10069
WSAESTALE: WSA_ERROR = 10070
WSAEREMOTE: WSA_ERROR = 10071
WSASYSNOTREADY: WSA_ERROR = 10091
WSAVERNOTSUPPORTED: WSA_ERROR = 10092
WSANOTINITIALISED: WSA_ERROR = 10093
WSAEDISCON: WSA_ERROR = 10101
WSAENOMORE: WSA_ERROR = 10102
WSAECANCELLED: WSA_ERROR = 10103
WSAEINVALIDPROCTABLE: WSA_ERROR = 10104
WSAEINVALIDPROVIDER: WSA_ERROR = 10105
WSAEPROVIDERFAILEDINIT: WSA_ERROR = 10106
WSASYSCALLFAILURE: WSA_ERROR = 10107
WSASERVICE_NOT_FOUND: WSA_ERROR = 10108
WSATYPE_NOT_FOUND: WSA_ERROR = 10109
WSA_E_NO_MORE: WSA_ERROR = 10110
WSA_E_CANCELLED: WSA_ERROR = 10111
WSAEREFUSED: WSA_ERROR = 10112
WSAHOST_NOT_FOUND: WSA_ERROR = 11001
WSATRY_AGAIN: WSA_ERROR = 11002
WSANO_RECOVERY: WSA_ERROR = 11003
WSANO_DATA: WSA_ERROR = 11004
WSA_QOS_RECEIVERS: WSA_ERROR = 11005
WSA_QOS_SENDERS: WSA_ERROR = 11006
WSA_QOS_NO_SENDERS: WSA_ERROR = 11007
WSA_QOS_NO_RECEIVERS: WSA_ERROR = 11008
WSA_QOS_REQUEST_CONFIRMED: WSA_ERROR = 11009
WSA_QOS_ADMISSION_FAILURE: WSA_ERROR = 11010
WSA_QOS_POLICY_FAILURE: WSA_ERROR = 11011
WSA_QOS_BAD_STYLE: WSA_ERROR = 11012
WSA_QOS_BAD_OBJECT: WSA_ERROR = 11013
WSA_QOS_TRAFFIC_CTRL_ERROR: WSA_ERROR = 11014
WSA_QOS_GENERIC_ERROR: WSA_ERROR = 11015
WSA_QOS_ESERVICETYPE: WSA_ERROR = 11016
WSA_QOS_EFLOWSPEC: WSA_ERROR = 11017
WSA_QOS_EPROVSPECBUF: WSA_ERROR = 11018
WSA_QOS_EFILTERSTYLE: WSA_ERROR = 11019
WSA_QOS_EFILTERTYPE: WSA_ERROR = 11020
WSA_QOS_EFILTERCOUNT: WSA_ERROR = 11021
WSA_QOS_EOBJLENGTH: WSA_ERROR = 11022
WSA_QOS_EFLOWCOUNT: WSA_ERROR = 11023
WSA_QOS_EUNKOWNPSOBJ: WSA_ERROR = 11024
WSA_QOS_EPOLICYOBJ: WSA_ERROR = 11025
WSA_QOS_EFLOWDESC: WSA_ERROR = 11026
WSA_QOS_EPSFLOWSPEC: WSA_ERROR = 11027
WSA_QOS_EPSFILTERSPEC: WSA_ERROR = 11028
WSA_QOS_ESDMODEOBJ: WSA_ERROR = 11029
WSA_QOS_ESHAPERATEOBJ: WSA_ERROR = 11030
WSA_QOS_RESERVED_PETYPE: WSA_ERROR = 11031
WSA_SECURE_HOST_NOT_FOUND: WSA_ERROR = 11032
WSA_IPSEC_NAME_POLICY_ERROR: WSA_ERROR = 11033
class WSABUF(Structure):
    len: UInt32
    buf: win32more.Foundation.PSTR
class WSACOMPLETION(Structure):
    Type: win32more.Networking.WinSock.WSACOMPLETIONTYPE
    Parameters: _Parameters_e__Union
    class _Parameters_e__Union(Union):
        WindowMessage: _WindowMessage_e__Struct
        Event: _Event_e__Struct
        Apc: _Apc_e__Struct
        Port: _Port_e__Struct
        class _WindowMessage_e__Struct(Structure):
            hWnd: win32more.Foundation.HWND
            uMsg: UInt32
            context: win32more.Foundation.WPARAM
        class _Event_e__Struct(Structure):
            lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)
        class _Apc_e__Struct(Structure):
            lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)
            lpfnCompletionProc: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE
        class _Port_e__Struct(Structure):
            lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)
            hPort: win32more.Foundation.HANDLE
            Key: UIntPtr
WSACOMPLETIONTYPE = Int32
NSP_NOTIFY_IMMEDIATELY: WSACOMPLETIONTYPE = 0
NSP_NOTIFY_HWND: WSACOMPLETIONTYPE = 1
NSP_NOTIFY_EVENT: WSACOMPLETIONTYPE = 2
NSP_NOTIFY_PORT: WSACOMPLETIONTYPE = 3
NSP_NOTIFY_APC: WSACOMPLETIONTYPE = 4
class WSADATA(Structure):
    wVersion: UInt16
    wHighVersion: UInt16
    iMaxSockets: UInt16
    iMaxUdpDg: UInt16
    lpVendorInfo: win32more.Foundation.PSTR
    szDescription: win32more.Foundation.CHAR * 257
    szSystemStatus: win32more.Foundation.CHAR * 129
WSAECOMPARATOR = Int32
COMP_EQUAL: WSAECOMPARATOR = 0
COMP_NOTLESS: WSAECOMPARATOR = 1
WSAESETSERVICEOP = Int32
RNRSERVICE_REGISTER: WSAESETSERVICEOP = 0
RNRSERVICE_DEREGISTER: WSAESETSERVICEOP = 1
RNRSERVICE_DELETE: WSAESETSERVICEOP = 2
class WSAMSG(Structure):
    name: POINTER(win32more.Networking.WinSock.SOCKADDR_head)
    namelen: Int32
    lpBuffers: POINTER(win32more.Networking.WinSock.WSABUF_head)
    dwBufferCount: UInt32
    Control: win32more.Networking.WinSock.WSABUF
    dwFlags: UInt32
class WSANAMESPACE_INFOA(Structure):
    NSProviderId: Guid
    dwNameSpace: UInt32
    fActive: win32more.Foundation.BOOL
    dwVersion: UInt32
    lpszIdentifier: win32more.Foundation.PSTR
class WSANAMESPACE_INFOEXA(Structure):
    NSProviderId: Guid
    dwNameSpace: UInt32
    fActive: win32more.Foundation.BOOL
    dwVersion: UInt32
    lpszIdentifier: win32more.Foundation.PSTR
    ProviderSpecific: win32more.System.Com.BLOB
class WSANAMESPACE_INFOEXW(Structure):
    NSProviderId: Guid
    dwNameSpace: UInt32
    fActive: win32more.Foundation.BOOL
    dwVersion: UInt32
    lpszIdentifier: win32more.Foundation.PWSTR
    ProviderSpecific: win32more.System.Com.BLOB
class WSANAMESPACE_INFOW(Structure):
    NSProviderId: Guid
    dwNameSpace: UInt32
    fActive: win32more.Foundation.BOOL
    dwVersion: UInt32
    lpszIdentifier: win32more.Foundation.PWSTR
class WSANETWORKEVENTS(Structure):
    lNetworkEvents: Int32
    iErrorCode: Int32 * 10
class WSANSCLASSINFOA(Structure):
    lpszName: win32more.Foundation.PSTR
    dwNameSpace: UInt32
    dwValueType: UInt32
    dwValueSize: UInt32
    lpValue: c_void_p
class WSANSCLASSINFOW(Structure):
    lpszName: win32more.Foundation.PWSTR
    dwNameSpace: UInt32
    dwValueType: UInt32
    dwValueSize: UInt32
    lpValue: c_void_p
class WSAPOLLDATA(Structure):
    result: Int32
    fds: UInt32
    timeout: Int32
    fdArray: win32more.Networking.WinSock.WSAPOLLFD * 1
class WSAPOLLFD(Structure):
    fd: win32more.Networking.WinSock.SOCKET
    events: Int16
    revents: Int16
class WSAPROTOCOL_INFOA(Structure):
    dwServiceFlags1: UInt32
    dwServiceFlags2: UInt32
    dwServiceFlags3: UInt32
    dwServiceFlags4: UInt32
    dwProviderFlags: UInt32
    ProviderId: Guid
    dwCatalogEntryId: UInt32
    ProtocolChain: win32more.Networking.WinSock.WSAPROTOCOLCHAIN
    iVersion: Int32
    iAddressFamily: Int32
    iMaxSockAddr: Int32
    iMinSockAddr: Int32
    iSocketType: Int32
    iProtocol: Int32
    iProtocolMaxOffset: Int32
    iNetworkByteOrder: Int32
    iSecurityScheme: Int32
    dwMessageSize: UInt32
    dwProviderReserved: UInt32
    szProtocol: win32more.Foundation.CHAR * 256
class WSAPROTOCOL_INFOW(Structure):
    dwServiceFlags1: UInt32
    dwServiceFlags2: UInt32
    dwServiceFlags3: UInt32
    dwServiceFlags4: UInt32
    dwProviderFlags: UInt32
    ProviderId: Guid
    dwCatalogEntryId: UInt32
    ProtocolChain: win32more.Networking.WinSock.WSAPROTOCOLCHAIN
    iVersion: Int32
    iAddressFamily: Int32
    iMaxSockAddr: Int32
    iMinSockAddr: Int32
    iSocketType: Int32
    iProtocol: Int32
    iProtocolMaxOffset: Int32
    iNetworkByteOrder: Int32
    iSecurityScheme: Int32
    dwMessageSize: UInt32
    dwProviderReserved: UInt32
    szProtocol: Char * 256
class WSAPROTOCOLCHAIN(Structure):
    ChainLen: Int32
    ChainEntries: UInt32 * 7
class WSAQUERYSET2A(Structure):
    dwSize: UInt32
    lpszServiceInstanceName: win32more.Foundation.PSTR
    lpVersion: POINTER(win32more.Networking.WinSock.WSAVERSION_head)
    lpszComment: win32more.Foundation.PSTR
    dwNameSpace: UInt32
    lpNSProviderId: POINTER(Guid)
    lpszContext: win32more.Foundation.PSTR
    dwNumberOfProtocols: UInt32
    lpafpProtocols: POINTER(win32more.Networking.WinSock.AFPROTOCOLS_head)
    lpszQueryString: win32more.Foundation.PSTR
    dwNumberOfCsAddrs: UInt32
    lpcsaBuffer: POINTER(win32more.Networking.WinSock.CSADDR_INFO_head)
    dwOutputFlags: UInt32
    lpBlob: POINTER(win32more.System.Com.BLOB_head)
class WSAQUERYSET2W(Structure):
    dwSize: UInt32
    lpszServiceInstanceName: win32more.Foundation.PWSTR
    lpVersion: POINTER(win32more.Networking.WinSock.WSAVERSION_head)
    lpszComment: win32more.Foundation.PWSTR
    dwNameSpace: UInt32
    lpNSProviderId: POINTER(Guid)
    lpszContext: win32more.Foundation.PWSTR
    dwNumberOfProtocols: UInt32
    lpafpProtocols: POINTER(win32more.Networking.WinSock.AFPROTOCOLS_head)
    lpszQueryString: win32more.Foundation.PWSTR
    dwNumberOfCsAddrs: UInt32
    lpcsaBuffer: POINTER(win32more.Networking.WinSock.CSADDR_INFO_head)
    dwOutputFlags: UInt32
    lpBlob: POINTER(win32more.System.Com.BLOB_head)
class WSAQUERYSETA(Structure):
    dwSize: UInt32
    lpszServiceInstanceName: win32more.Foundation.PSTR
    lpServiceClassId: POINTER(Guid)
    lpVersion: POINTER(win32more.Networking.WinSock.WSAVERSION_head)
    lpszComment: win32more.Foundation.PSTR
    dwNameSpace: UInt32
    lpNSProviderId: POINTER(Guid)
    lpszContext: win32more.Foundation.PSTR
    dwNumberOfProtocols: UInt32
    lpafpProtocols: POINTER(win32more.Networking.WinSock.AFPROTOCOLS_head)
    lpszQueryString: win32more.Foundation.PSTR
    dwNumberOfCsAddrs: UInt32
    lpcsaBuffer: POINTER(win32more.Networking.WinSock.CSADDR_INFO_head)
    dwOutputFlags: UInt32
    lpBlob: POINTER(win32more.System.Com.BLOB_head)
class WSAQUERYSETW(Structure):
    dwSize: UInt32
    lpszServiceInstanceName: win32more.Foundation.PWSTR
    lpServiceClassId: POINTER(Guid)
    lpVersion: POINTER(win32more.Networking.WinSock.WSAVERSION_head)
    lpszComment: win32more.Foundation.PWSTR
    dwNameSpace: UInt32
    lpNSProviderId: POINTER(Guid)
    lpszContext: win32more.Foundation.PWSTR
    dwNumberOfProtocols: UInt32
    lpafpProtocols: POINTER(win32more.Networking.WinSock.AFPROTOCOLS_head)
    lpszQueryString: win32more.Foundation.PWSTR
    dwNumberOfCsAddrs: UInt32
    lpcsaBuffer: POINTER(win32more.Networking.WinSock.CSADDR_INFO_head)
    dwOutputFlags: UInt32
    lpBlob: POINTER(win32more.System.Com.BLOB_head)
class WSASENDMSG(Structure):
    lpMsg: POINTER(win32more.Networking.WinSock.WSAMSG_head)
    dwFlags: UInt32
    lpNumberOfBytesSent: POINTER(UInt32)
    lpOverlapped: POINTER(win32more.System.IO.OVERLAPPED_head)
    lpCompletionRoutine: win32more.Networking.WinSock.LPWSAOVERLAPPED_COMPLETION_ROUTINE
class WSASERVICECLASSINFOA(Structure):
    lpServiceClassId: POINTER(Guid)
    lpszServiceClassName: win32more.Foundation.PSTR
    dwCount: UInt32
    lpClassInfos: POINTER(win32more.Networking.WinSock.WSANSCLASSINFOA_head)
class WSASERVICECLASSINFOW(Structure):
    lpServiceClassId: POINTER(Guid)
    lpszServiceClassName: win32more.Foundation.PWSTR
    dwCount: UInt32
    lpClassInfos: POINTER(win32more.Networking.WinSock.WSANSCLASSINFOW_head)
class WSATHREADID(Structure):
    ThreadHandle: win32more.Foundation.HANDLE
    Reserved: UIntPtr
class WSAVERSION(Structure):
    dwVersion: UInt32
    ecHow: win32more.Networking.WinSock.WSAECOMPARATOR
class WSC_PROVIDER_AUDIT_INFO(Structure):
    RecordSize: UInt32
    Reserved: c_void_p
WSC_PROVIDER_INFO_TYPE = Int32
WSC_PROVIDER_INFO_TYPE_ProviderInfoLspCategories: WSC_PROVIDER_INFO_TYPE = 0
WSC_PROVIDER_INFO_TYPE_ProviderInfoAudit: WSC_PROVIDER_INFO_TYPE = 1
class WSPDATA(Structure):
    wVersion: UInt16
    wHighVersion: UInt16
    szDescription: Char * 256
class WSPPROC_TABLE(Structure):
    lpWSPAccept: win32more.Networking.WinSock.LPWSPACCEPT
    lpWSPAddressToString: win32more.Networking.WinSock.LPWSPADDRESSTOSTRING
    lpWSPAsyncSelect: win32more.Networking.WinSock.LPWSPASYNCSELECT
    lpWSPBind: win32more.Networking.WinSock.LPWSPBIND
    lpWSPCancelBlockingCall: win32more.Networking.WinSock.LPWSPCANCELBLOCKINGCALL
    lpWSPCleanup: win32more.Networking.WinSock.LPWSPCLEANUP
    lpWSPCloseSocket: win32more.Networking.WinSock.LPWSPCLOSESOCKET
    lpWSPConnect: win32more.Networking.WinSock.LPWSPCONNECT
    lpWSPDuplicateSocket: win32more.Networking.WinSock.LPWSPDUPLICATESOCKET
    lpWSPEnumNetworkEvents: win32more.Networking.WinSock.LPWSPENUMNETWORKEVENTS
    lpWSPEventSelect: win32more.Networking.WinSock.LPWSPEVENTSELECT
    lpWSPGetOverlappedResult: win32more.Networking.WinSock.LPWSPGETOVERLAPPEDRESULT
    lpWSPGetPeerName: win32more.Networking.WinSock.LPWSPGETPEERNAME
    lpWSPGetSockName: win32more.Networking.WinSock.LPWSPGETSOCKNAME
    lpWSPGetSockOpt: win32more.Networking.WinSock.LPWSPGETSOCKOPT
    lpWSPGetQOSByName: win32more.Networking.WinSock.LPWSPGETQOSBYNAME
    lpWSPIoctl: win32more.Networking.WinSock.LPWSPIOCTL
    lpWSPJoinLeaf: win32more.Networking.WinSock.LPWSPJOINLEAF
    lpWSPListen: win32more.Networking.WinSock.LPWSPLISTEN
    lpWSPRecv: win32more.Networking.WinSock.LPWSPRECV
    lpWSPRecvDisconnect: win32more.Networking.WinSock.LPWSPRECVDISCONNECT
    lpWSPRecvFrom: win32more.Networking.WinSock.LPWSPRECVFROM
    lpWSPSelect: win32more.Networking.WinSock.LPWSPSELECT
    lpWSPSend: win32more.Networking.WinSock.LPWSPSEND
    lpWSPSendDisconnect: win32more.Networking.WinSock.LPWSPSENDDISCONNECT
    lpWSPSendTo: win32more.Networking.WinSock.LPWSPSENDTO
    lpWSPSetSockOpt: win32more.Networking.WinSock.LPWSPSETSOCKOPT
    lpWSPShutdown: win32more.Networking.WinSock.LPWSPSHUTDOWN
    lpWSPSocket: win32more.Networking.WinSock.LPWSPSOCKET
    lpWSPStringToAddress: win32more.Networking.WinSock.LPWSPSTRINGTOADDRESS
class WSPUPCALLTABLE(Structure):
    lpWPUCloseEvent: win32more.Networking.WinSock.LPWPUCLOSEEVENT
    lpWPUCloseSocketHandle: win32more.Networking.WinSock.LPWPUCLOSESOCKETHANDLE
    lpWPUCreateEvent: win32more.Networking.WinSock.LPWPUCREATEEVENT
    lpWPUCreateSocketHandle: win32more.Networking.WinSock.LPWPUCREATESOCKETHANDLE
    lpWPUFDIsSet: win32more.Networking.WinSock.LPWPUFDISSET
    lpWPUGetProviderPath: win32more.Networking.WinSock.LPWPUGETPROVIDERPATH
    lpWPUModifyIFSHandle: win32more.Networking.WinSock.LPWPUMODIFYIFSHANDLE
    lpWPUPostMessage: win32more.Networking.WinSock.LPWPUPOSTMESSAGE
    lpWPUQueryBlockingCallback: win32more.Networking.WinSock.LPWPUQUERYBLOCKINGCALLBACK
    lpWPUQuerySocketHandleContext: win32more.Networking.WinSock.LPWPUQUERYSOCKETHANDLECONTEXT
    lpWPUQueueApc: win32more.Networking.WinSock.LPWPUQUEUEAPC
    lpWPUResetEvent: win32more.Networking.WinSock.LPWPURESETEVENT
    lpWPUSetEvent: win32more.Networking.WinSock.LPWPUSETEVENT
    lpWPUOpenCurrentThread: win32more.Networking.WinSock.LPWPUOPENCURRENTTHREAD
    lpWPUCloseThread: win32more.Networking.WinSock.LPWPUCLOSETHREAD
make_head(_module, 'AAL_PARAMETERS_IE')
make_head(_module, 'AAL5_PARAMETERS')
make_head(_module, 'AALUSER_PARAMETERS')
make_head(_module, 'ADDRINFO_DNS_SERVER')
make_head(_module, 'ADDRINFOA')
make_head(_module, 'ADDRINFOEX2A')
make_head(_module, 'ADDRINFOEX2W')
make_head(_module, 'ADDRINFOEX3')
make_head(_module, 'ADDRINFOEX4')
make_head(_module, 'ADDRINFOEX5')
make_head(_module, 'ADDRINFOEX6')
make_head(_module, 'ADDRINFOEXA')
make_head(_module, 'ADDRINFOEXW')
make_head(_module, 'ADDRINFOW')
make_head(_module, 'AFPROTOCOLS')
make_head(_module, 'ARP_HEADER')
make_head(_module, 'ASSOCIATE_NAMERES_CONTEXT_INPUT')
make_head(_module, 'ATM_ADDRESS')
make_head(_module, 'ATM_BHLI')
make_head(_module, 'ATM_BLLI')
make_head(_module, 'ATM_BLLI_IE')
make_head(_module, 'ATM_BROADBAND_BEARER_CAPABILITY_IE')
make_head(_module, 'ATM_CALLING_PARTY_NUMBER_IE')
make_head(_module, 'ATM_CAUSE_IE')
make_head(_module, 'ATM_CONNECTION_ID')
make_head(_module, 'ATM_PVC_PARAMS')
make_head(_module, 'ATM_QOS_CLASS_IE')
make_head(_module, 'ATM_TD')
make_head(_module, 'ATM_TRAFFIC_DESCRIPTOR_IE')
make_head(_module, 'ATM_TRANSIT_NETWORK_SELECTION_IE')
make_head(_module, 'CMSGHDR')
make_head(_module, 'CSADDR_INFO')
make_head(_module, 'DL_EI48')
make_head(_module, 'DL_EI64')
make_head(_module, 'DL_EUI48')
make_head(_module, 'DL_EUI64')
make_head(_module, 'DL_OUI')
make_head(_module, 'DL_TEREDO_ADDRESS')
make_head(_module, 'DL_TEREDO_ADDRESS_PRV')
make_head(_module, 'DL_TUNNEL_ADDRESS')
make_head(_module, 'ETHERNET_HEADER')
make_head(_module, 'FD_SET')
make_head(_module, 'FLOWSPEC')
make_head(_module, 'GROUP_FILTER')
make_head(_module, 'GROUP_REQ')
make_head(_module, 'GROUP_SOURCE_REQ')
make_head(_module, 'HOSTENT')
make_head(_module, 'ICMP_ERROR_INFO')
make_head(_module, 'ICMP_HEADER')
make_head(_module, 'ICMP_MESSAGE')
make_head(_module, 'ICMPV4_ADDRESS_MASK_MESSAGE')
make_head(_module, 'ICMPV4_ROUTER_ADVERT_ENTRY')
make_head(_module, 'ICMPV4_ROUTER_ADVERT_HEADER')
make_head(_module, 'ICMPV4_ROUTER_SOLICIT')
make_head(_module, 'ICMPV4_TIMESTAMP_MESSAGE')
make_head(_module, 'IGMP_HEADER')
make_head(_module, 'IGMPV3_QUERY_HEADER')
make_head(_module, 'IGMPV3_REPORT_HEADER')
make_head(_module, 'IGMPV3_REPORT_RECORD_HEADER')
make_head(_module, 'IN_ADDR')
make_head(_module, 'IN_PKTINFO')
make_head(_module, 'IN_PKTINFO_EX')
make_head(_module, 'IN_RECVERR')
make_head(_module, 'IN6_ADDR')
make_head(_module, 'IN6_PKTINFO')
make_head(_module, 'IN6_PKTINFO_EX')
make_head(_module, 'INET_PORT_RANGE')
make_head(_module, 'INET_PORT_RESERVATION_INFORMATION')
make_head(_module, 'INET_PORT_RESERVATION_INSTANCE')
make_head(_module, 'INET_PORT_RESERVATION_TOKEN')
make_head(_module, 'INTERFACE_INFO')
make_head(_module, 'INTERFACE_INFO_EX')
make_head(_module, 'IP_MREQ')
make_head(_module, 'IP_MREQ_SOURCE')
make_head(_module, 'IP_MSFILTER')
make_head(_module, 'IPTLS_METADATA')
make_head(_module, 'IPV4_HEADER')
make_head(_module, 'IPV4_OPTION_HEADER')
make_head(_module, 'IPV4_ROUTING_HEADER')
make_head(_module, 'IPV4_TIMESTAMP_OPTION')
make_head(_module, 'IPV6_EXTENSION_HEADER')
make_head(_module, 'IPV6_FRAGMENT_HEADER')
make_head(_module, 'IPV6_HEADER')
make_head(_module, 'IPV6_MREQ')
make_head(_module, 'IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS')
make_head(_module, 'IPV6_OPTION_HEADER')
make_head(_module, 'IPV6_OPTION_JUMBOGRAM')
make_head(_module, 'IPV6_OPTION_ROUTER_ALERT')
make_head(_module, 'IPV6_ROUTER_ADVERTISEMENT_FLAGS')
make_head(_module, 'IPV6_ROUTING_HEADER')
make_head(_module, 'IPX_ADDRESS_DATA')
make_head(_module, 'IPX_NETNUM_DATA')
make_head(_module, 'IPX_SPXCONNSTATUS_DATA')
make_head(_module, 'LINGER')
make_head(_module, 'LM_IRPARMS')
make_head(_module, 'LPBLOCKINGCALLBACK')
make_head(_module, 'LPCONDITIONPROC')
make_head(_module, 'LPFN_ACCEPTEX')
make_head(_module, 'LPFN_CONNECTEX')
make_head(_module, 'LPFN_DISCONNECTEX')
make_head(_module, 'LPFN_GETACCEPTEXSOCKADDRS')
make_head(_module, 'LPFN_NSPAPI')
make_head(_module, 'LPFN_RIOCLOSECOMPLETIONQUEUE')
make_head(_module, 'LPFN_RIOCREATECOMPLETIONQUEUE')
make_head(_module, 'LPFN_RIOCREATEREQUESTQUEUE')
make_head(_module, 'LPFN_RIODEQUEUECOMPLETION')
make_head(_module, 'LPFN_RIODEREGISTERBUFFER')
make_head(_module, 'LPFN_RIONOTIFY')
make_head(_module, 'LPFN_RIORECEIVE')
make_head(_module, 'LPFN_RIORECEIVEEX')
make_head(_module, 'LPFN_RIOREGISTERBUFFER')
make_head(_module, 'LPFN_RIORESIZECOMPLETIONQUEUE')
make_head(_module, 'LPFN_RIORESIZEREQUESTQUEUE')
make_head(_module, 'LPFN_RIOSEND')
make_head(_module, 'LPFN_RIOSENDEX')
make_head(_module, 'LPFN_TRANSMITFILE')
make_head(_module, 'LPFN_TRANSMITPACKETS')
make_head(_module, 'LPFN_WSAPOLL')
make_head(_module, 'LPFN_WSARECVMSG')
make_head(_module, 'LPFN_WSASENDMSG')
make_head(_module, 'LPLOOKUPSERVICE_COMPLETION_ROUTINE')
make_head(_module, 'LPNSPCLEANUP')
make_head(_module, 'LPNSPGETSERVICECLASSINFO')
make_head(_module, 'LPNSPINSTALLSERVICECLASS')
make_head(_module, 'LPNSPIOCTL')
make_head(_module, 'LPNSPLOOKUPSERVICEBEGIN')
make_head(_module, 'LPNSPLOOKUPSERVICEEND')
make_head(_module, 'LPNSPLOOKUPSERVICENEXT')
make_head(_module, 'LPNSPREMOVESERVICECLASS')
make_head(_module, 'LPNSPSETSERVICE')
make_head(_module, 'LPNSPSTARTUP')
make_head(_module, 'LPNSPV2CLEANUP')
make_head(_module, 'LPNSPV2CLIENTSESSIONRUNDOWN')
make_head(_module, 'LPNSPV2LOOKUPSERVICEBEGIN')
make_head(_module, 'LPNSPV2LOOKUPSERVICEEND')
make_head(_module, 'LPNSPV2LOOKUPSERVICENEXTEX')
make_head(_module, 'LPNSPV2SETSERVICEEX')
make_head(_module, 'LPNSPV2STARTUP')
make_head(_module, 'LPSERVICE_CALLBACK_PROC')
make_head(_module, 'LPWPUCLOSEEVENT')
make_head(_module, 'LPWPUCLOSESOCKETHANDLE')
make_head(_module, 'LPWPUCLOSETHREAD')
make_head(_module, 'LPWPUCOMPLETEOVERLAPPEDREQUEST')
make_head(_module, 'LPWPUCREATEEVENT')
make_head(_module, 'LPWPUCREATESOCKETHANDLE')
make_head(_module, 'LPWPUFDISSET')
make_head(_module, 'LPWPUGETPROVIDERPATH')
make_head(_module, 'LPWPUMODIFYIFSHANDLE')
make_head(_module, 'LPWPUOPENCURRENTTHREAD')
make_head(_module, 'LPWPUPOSTMESSAGE')
make_head(_module, 'LPWPUQUERYBLOCKINGCALLBACK')
make_head(_module, 'LPWPUQUERYSOCKETHANDLECONTEXT')
make_head(_module, 'LPWPUQUEUEAPC')
make_head(_module, 'LPWPURESETEVENT')
make_head(_module, 'LPWPUSETEVENT')
make_head(_module, 'LPWSAOVERLAPPED_COMPLETION_ROUTINE')
make_head(_module, 'LPWSAUSERAPC')
make_head(_module, 'LPWSCDEINSTALLPROVIDER')
make_head(_module, 'LPWSCENABLENSPROVIDER')
make_head(_module, 'LPWSCENUMPROTOCOLS')
make_head(_module, 'LPWSCGETPROVIDERPATH')
make_head(_module, 'LPWSCINSTALLNAMESPACE')
make_head(_module, 'LPWSCINSTALLPROVIDER')
make_head(_module, 'LPWSCUNINSTALLNAMESPACE')
make_head(_module, 'LPWSCUPDATEPROVIDER')
make_head(_module, 'LPWSCWRITENAMESPACEORDER')
make_head(_module, 'LPWSCWRITEPROVIDERORDER')
make_head(_module, 'LPWSPACCEPT')
make_head(_module, 'LPWSPADDRESSTOSTRING')
make_head(_module, 'LPWSPASYNCSELECT')
make_head(_module, 'LPWSPBIND')
make_head(_module, 'LPWSPCANCELBLOCKINGCALL')
make_head(_module, 'LPWSPCLEANUP')
make_head(_module, 'LPWSPCLOSESOCKET')
make_head(_module, 'LPWSPCONNECT')
make_head(_module, 'LPWSPDUPLICATESOCKET')
make_head(_module, 'LPWSPENUMNETWORKEVENTS')
make_head(_module, 'LPWSPEVENTSELECT')
make_head(_module, 'LPWSPGETOVERLAPPEDRESULT')
make_head(_module, 'LPWSPGETPEERNAME')
make_head(_module, 'LPWSPGETQOSBYNAME')
make_head(_module, 'LPWSPGETSOCKNAME')
make_head(_module, 'LPWSPGETSOCKOPT')
make_head(_module, 'LPWSPIOCTL')
make_head(_module, 'LPWSPJOINLEAF')
make_head(_module, 'LPWSPLISTEN')
make_head(_module, 'LPWSPRECV')
make_head(_module, 'LPWSPRECVDISCONNECT')
make_head(_module, 'LPWSPRECVFROM')
make_head(_module, 'LPWSPSELECT')
make_head(_module, 'LPWSPSEND')
make_head(_module, 'LPWSPSENDDISCONNECT')
make_head(_module, 'LPWSPSENDTO')
make_head(_module, 'LPWSPSETSOCKOPT')
make_head(_module, 'LPWSPSHUTDOWN')
make_head(_module, 'LPWSPSOCKET')
make_head(_module, 'LPWSPSTARTUP')
make_head(_module, 'LPWSPSTRINGTOADDRESS')
make_head(_module, 'MLD_HEADER')
make_head(_module, 'MLDV2_QUERY_HEADER')
make_head(_module, 'MLDV2_REPORT_HEADER')
make_head(_module, 'MLDV2_REPORT_RECORD_HEADER')
make_head(_module, 'NAPI_DOMAIN_DESCRIPTION_BLOB')
make_head(_module, 'NAPI_PROVIDER_INSTALLATION_BLOB')
make_head(_module, 'ND_NEIGHBOR_ADVERT_HEADER')
make_head(_module, 'ND_NEIGHBOR_SOLICIT_HEADER')
make_head(_module, 'ND_OPTION_DNSSL')
make_head(_module, 'ND_OPTION_HDR')
make_head(_module, 'ND_OPTION_MTU')
make_head(_module, 'ND_OPTION_PREFIX_INFO')
make_head(_module, 'ND_OPTION_RD_HDR')
make_head(_module, 'ND_OPTION_RDNSS')
make_head(_module, 'ND_OPTION_ROUTE_INFO')
make_head(_module, 'ND_REDIRECT_HEADER')
make_head(_module, 'ND_ROUTER_ADVERT_HEADER')
make_head(_module, 'ND_ROUTER_SOLICIT_HEADER')
make_head(_module, 'netent')
make_head(_module, 'NETRESOURCE2A')
make_head(_module, 'NETRESOURCE2W')
make_head(_module, 'NL_BANDWIDTH_INFORMATION')
make_head(_module, 'NL_INTERFACE_OFFLOAD_ROD')
make_head(_module, 'NL_NETWORK_CONNECTIVITY_HINT')
make_head(_module, 'NL_PATH_BANDWIDTH_ROD')
make_head(_module, 'NLA_BLOB')
make_head(_module, 'NPI_MODULEID')
make_head(_module, 'NS_INFOA')
make_head(_module, 'NS_INFOW')
make_head(_module, 'NS_SERVICE_INFOA')
make_head(_module, 'NS_SERVICE_INFOW')
make_head(_module, 'NSP_ROUTINE')
make_head(_module, 'NSPV2_ROUTINE')
make_head(_module, 'PRIORITY_STATUS')
make_head(_module, 'PROTOCOL_INFOA')
make_head(_module, 'PROTOCOL_INFOW')
make_head(_module, 'PROTOENT')
make_head(_module, 'Q2931_IE')
make_head(_module, 'QOS')
make_head(_module, 'RCVALL_IF')
make_head(_module, 'REAL_TIME_NOTIFICATION_SETTING_INPUT')
make_head(_module, 'REAL_TIME_NOTIFICATION_SETTING_INPUT_EX')
make_head(_module, 'REAL_TIME_NOTIFICATION_SETTING_OUTPUT')
make_head(_module, 'RIO_BUF')
make_head(_module, 'RIO_BUFFERID_t')
make_head(_module, 'RIO_CMSG_BUFFER')
make_head(_module, 'RIO_CQ_t')
make_head(_module, 'RIO_EXTENSION_FUNCTION_TABLE')
make_head(_module, 'RIO_NOTIFICATION_COMPLETION')
make_head(_module, 'RIO_RQ_t')
make_head(_module, 'RIORESULT')
make_head(_module, 'RM_FEC_INFO')
make_head(_module, 'RM_RECEIVER_STATS')
make_head(_module, 'RM_SEND_WINDOW')
make_head(_module, 'RM_SENDER_STATS')
make_head(_module, 'RSS_SCALABILITY_INFO')
make_head(_module, 'SCOPE_ID')
make_head(_module, 'SERVENT')
make_head(_module, 'SERVICE_ADDRESS')
make_head(_module, 'SERVICE_ADDRESSES')
make_head(_module, 'SERVICE_ASYNC_INFO')
make_head(_module, 'SERVICE_INFOA')
make_head(_module, 'SERVICE_INFOW')
make_head(_module, 'SERVICE_TYPE_INFO')
make_head(_module, 'SERVICE_TYPE_INFO_ABSA')
make_head(_module, 'SERVICE_TYPE_INFO_ABSW')
make_head(_module, 'SERVICE_TYPE_VALUE')
make_head(_module, 'SERVICE_TYPE_VALUE_ABSA')
make_head(_module, 'SERVICE_TYPE_VALUE_ABSW')
make_head(_module, 'SNAP_HEADER')
make_head(_module, 'SOCK_NOTIFY_REGISTRATION')
make_head(_module, 'SOCKADDR')
make_head(_module, 'SOCKADDR_ATM')
make_head(_module, 'SOCKADDR_DL')
make_head(_module, 'sockaddr_gen')
make_head(_module, 'SOCKADDR_IN')
make_head(_module, 'SOCKADDR_IN6')
make_head(_module, 'sockaddr_in6_old')
make_head(_module, 'SOCKADDR_IN6_PAIR')
make_head(_module, 'SOCKADDR_IN6_W2KSP1')
make_head(_module, 'SOCKADDR_INET')
make_head(_module, 'SOCKADDR_IPX')
make_head(_module, 'SOCKADDR_IRDA')
make_head(_module, 'SOCKADDR_NB')
make_head(_module, 'SOCKADDR_STORAGE')
make_head(_module, 'SOCKADDR_STORAGE_XP')
make_head(_module, 'SOCKADDR_TP')
make_head(_module, 'SOCKADDR_UN')
make_head(_module, 'SOCKADDR_VNS')
make_head(_module, 'SOCKET_ADDRESS')
make_head(_module, 'SOCKET_ADDRESS_LIST')
make_head(_module, 'SOCKET_PEER_TARGET_NAME')
make_head(_module, 'SOCKET_PROCESSOR_AFFINITY')
make_head(_module, 'SOCKET_SECURITY_QUERY_INFO')
make_head(_module, 'SOCKET_SECURITY_QUERY_INFO_IPSEC2')
make_head(_module, 'SOCKET_SECURITY_QUERY_TEMPLATE')
make_head(_module, 'SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2')
make_head(_module, 'SOCKET_SECURITY_SETTINGS')
make_head(_module, 'SOCKET_SECURITY_SETTINGS_IPSEC')
make_head(_module, 'sockproto')
make_head(_module, 'TCP_ACK_FREQUENCY_PARAMETERS')
make_head(_module, 'TCP_HDR')
make_head(_module, 'TCP_ICW_PARAMETERS')
make_head(_module, 'TCP_INFO_v0')
make_head(_module, 'TCP_INFO_v1')
make_head(_module, 'TCP_INITIAL_RTO_PARAMETERS')
make_head(_module, 'tcp_keepalive')
make_head(_module, 'TCP_OPT_FASTOPEN')
make_head(_module, 'TCP_OPT_MSS')
make_head(_module, 'TCP_OPT_SACK')
make_head(_module, 'TCP_OPT_SACK_PERMITTED')
make_head(_module, 'TCP_OPT_TS')
make_head(_module, 'TCP_OPT_UNKNOWN')
make_head(_module, 'TCP_OPT_WS')
make_head(_module, 'TIMESTAMPING_CONFIG')
make_head(_module, 'TIMEVAL')
make_head(_module, 'TRANSMIT_FILE_BUFFERS')
make_head(_module, 'TRANSMIT_PACKETS_ELEMENT')
make_head(_module, 'TRANSPORT_SETTING_ID')
make_head(_module, 'VLAN_TAG')
make_head(_module, 'WCE_DEVICELIST')
make_head(_module, 'WCE_IRDA_DEVICE_INFO')
make_head(_module, 'WINDOWS_DEVICELIST')
make_head(_module, 'WINDOWS_IAS_QUERY')
make_head(_module, 'WINDOWS_IAS_SET')
make_head(_module, 'WINDOWS_IRDA_DEVICE_INFO')
make_head(_module, 'WSA_COMPATIBILITY_MODE')
make_head(_module, 'WSABUF')
make_head(_module, 'WSACOMPLETION')
make_head(_module, 'WSADATA')
make_head(_module, 'WSAMSG')
make_head(_module, 'WSANAMESPACE_INFOA')
make_head(_module, 'WSANAMESPACE_INFOEXA')
make_head(_module, 'WSANAMESPACE_INFOEXW')
make_head(_module, 'WSANAMESPACE_INFOW')
make_head(_module, 'WSANETWORKEVENTS')
make_head(_module, 'WSANSCLASSINFOA')
make_head(_module, 'WSANSCLASSINFOW')
make_head(_module, 'WSAPOLLDATA')
make_head(_module, 'WSAPOLLFD')
make_head(_module, 'WSAPROTOCOL_INFOA')
make_head(_module, 'WSAPROTOCOL_INFOW')
make_head(_module, 'WSAPROTOCOLCHAIN')
make_head(_module, 'WSAQUERYSET2A')
make_head(_module, 'WSAQUERYSET2W')
make_head(_module, 'WSAQUERYSETA')
make_head(_module, 'WSAQUERYSETW')
make_head(_module, 'WSASENDMSG')
make_head(_module, 'WSASERVICECLASSINFOA')
make_head(_module, 'WSASERVICECLASSINFOW')
make_head(_module, 'WSATHREADID')
make_head(_module, 'WSAVERSION')
make_head(_module, 'WSC_PROVIDER_AUDIT_INFO')
make_head(_module, 'WSPDATA')
make_head(_module, 'WSPPROC_TABLE')
make_head(_module, 'WSPUPCALLTABLE')
__all__ = [
    "AAL5_MODE_MESSAGE",
    "AAL5_MODE_STREAMING",
    "AAL5_PARAMETERS",
    "AAL5_SSCS_FRAME_RELAY",
    "AAL5_SSCS_NULL",
    "AAL5_SSCS_SSCOP_ASSURED",
    "AAL5_SSCS_SSCOP_NON_ASSURED",
    "AALTYPE_5",
    "AALTYPE_USER",
    "AALUSER_PARAMETERS",
    "AAL_PARAMETERS_IE",
    "AAL_TYPE",
    "ADDRESS_FAMILY",
    "ADDRINFOA",
    "ADDRINFOEX2A",
    "ADDRINFOEX2W",
    "ADDRINFOEX3",
    "ADDRINFOEX4",
    "ADDRINFOEX5",
    "ADDRINFOEX6",
    "ADDRINFOEXA",
    "ADDRINFOEXW",
    "ADDRINFOEX_VERSION_2",
    "ADDRINFOEX_VERSION_3",
    "ADDRINFOEX_VERSION_4",
    "ADDRINFOEX_VERSION_5",
    "ADDRINFOEX_VERSION_6",
    "ADDRINFOW",
    "ADDRINFO_DNS_SERVER",
    "AFPROTOCOLS",
    "AF_12844",
    "AF_APPLETALK",
    "AF_ATM",
    "AF_BAN",
    "AF_CCITT",
    "AF_CHAOS",
    "AF_CLUSTER",
    "AF_DATAKIT",
    "AF_DECnet",
    "AF_DLI",
    "AF_ECMA",
    "AF_FIREFOX",
    "AF_HYLINK",
    "AF_HYPERV",
    "AF_ICLFXBM",
    "AF_IMPLINK",
    "AF_INET",
    "AF_INET6",
    "AF_IPX",
    "AF_IRDA",
    "AF_ISO",
    "AF_LAT",
    "AF_LINK",
    "AF_MAX",
    "AF_NETBIOS",
    "AF_NETDES",
    "AF_NS",
    "AF_OSI",
    "AF_PUP",
    "AF_SNA",
    "AF_TCNMESSAGE",
    "AF_TCNPROCESS",
    "AF_UNIX",
    "AF_UNKNOWN1",
    "AF_UNSPEC",
    "AF_VOICEVIEW",
    "AI_ADDRCONFIG",
    "AI_ALL",
    "AI_BYPASS_DNS_CACHE",
    "AI_CANONNAME",
    "AI_DISABLE_IDN_ENCODING",
    "AI_DNS_ONLY",
    "AI_DNS_RESPONSE_HOSTFILE",
    "AI_DNS_RESPONSE_SECURE",
    "AI_DNS_SERVER_TYPE_DOH",
    "AI_DNS_SERVER_TYPE_UDP",
    "AI_DNS_SERVER_UDP_FALLBACK",
    "AI_EXCLUSIVE_CUSTOM_SERVERS",
    "AI_EXTENDED",
    "AI_FILESERVER",
    "AI_FORCE_CLEAR_TEXT",
    "AI_FQDN",
    "AI_NON_AUTHORITATIVE",
    "AI_NUMERICHOST",
    "AI_NUMERICSERV",
    "AI_PASSIVE",
    "AI_REQUIRE_SECURE",
    "AI_RESOLUTION_HANDLE",
    "AI_RETURN_PREFERRED_NAMES",
    "AI_RETURN_RESPONSE_FLAGS",
    "AI_RETURN_TTL",
    "AI_SECURE",
    "AI_SECURE_WITH_FALLBACK",
    "AI_V4MAPPED",
    "ARP_HARDWARE_TYPE",
    "ARP_HEADER",
    "ARP_HW_802",
    "ARP_HW_ENET",
    "ARP_OPCODE",
    "ARP_REQUEST",
    "ARP_RESPONSE",
    "ASSOCIATE_NAMERES_CONTEXT",
    "ASSOCIATE_NAMERES_CONTEXT_INPUT",
    "ATMPROTO_AAL1",
    "ATMPROTO_AAL2",
    "ATMPROTO_AAL34",
    "ATMPROTO_AAL5",
    "ATMPROTO_AALUSER",
    "ATM_ADDRESS",
    "ATM_ADDR_SIZE",
    "ATM_AESA",
    "ATM_BHLI",
    "ATM_BLLI",
    "ATM_BLLI_IE",
    "ATM_BROADBAND_BEARER_CAPABILITY_IE",
    "ATM_CALLING_PARTY_NUMBER_IE",
    "ATM_CAUSE_IE",
    "ATM_CONNECTION_ID",
    "ATM_E164",
    "ATM_NSAP",
    "ATM_PVC_PARAMS",
    "ATM_QOS_CLASS_IE",
    "ATM_TD",
    "ATM_TRAFFIC_DESCRIPTOR_IE",
    "ATM_TRANSIT_NETWORK_SELECTION_IE",
    "AcceptEx",
    "BASE_PROTOCOL",
    "BCOB_A",
    "BCOB_C",
    "BCOB_X",
    "BHLI_HighLayerProfile",
    "BHLI_ISO",
    "BHLI_UserSpecific",
    "BHLI_VendorSpecificAppId",
    "BIGENDIAN",
    "BITS_PER_BYTE",
    "BLLI_L2_ELAPB",
    "BLLI_L2_HDLC_ABM",
    "BLLI_L2_HDLC_ARM",
    "BLLI_L2_HDLC_NRM",
    "BLLI_L2_ISO_1745",
    "BLLI_L2_ISO_7776",
    "BLLI_L2_LLC",
    "BLLI_L2_MODE_EXT",
    "BLLI_L2_MODE_NORMAL",
    "BLLI_L2_Q921",
    "BLLI_L2_Q922",
    "BLLI_L2_USER_SPECIFIED",
    "BLLI_L2_X25L",
    "BLLI_L2_X25M",
    "BLLI_L2_X75",
    "BLLI_L3_IPI_IP",
    "BLLI_L3_IPI_SNAP",
    "BLLI_L3_ISO_8208",
    "BLLI_L3_ISO_TR9577",
    "BLLI_L3_MODE_EXT",
    "BLLI_L3_MODE_NORMAL",
    "BLLI_L3_PACKET_1024",
    "BLLI_L3_PACKET_128",
    "BLLI_L3_PACKET_16",
    "BLLI_L3_PACKET_2048",
    "BLLI_L3_PACKET_256",
    "BLLI_L3_PACKET_32",
    "BLLI_L3_PACKET_4096",
    "BLLI_L3_PACKET_512",
    "BLLI_L3_PACKET_64",
    "BLLI_L3_SIO_8473",
    "BLLI_L3_T70",
    "BLLI_L3_USER_SPECIFIED",
    "BLLI_L3_X223",
    "BLLI_L3_X25",
    "BYTE_ORDER",
    "CAUSE_AAL_PARAMETERS_UNSUPPORTED",
    "CAUSE_ACCESS_INFORMAION_DISCARDED",
    "CAUSE_BEARER_CAPABILITY_UNAUTHORIZED",
    "CAUSE_BEARER_CAPABILITY_UNAVAILABLE",
    "CAUSE_BEARER_CAPABILITY_UNIMPLEMENTED",
    "CAUSE_CALL_REJECTED",
    "CAUSE_CHANNEL_NONEXISTENT",
    "CAUSE_COND_PERMANENT",
    "CAUSE_COND_TRANSIENT",
    "CAUSE_COND_UNKNOWN",
    "CAUSE_DESTINATION_OUT_OF_ORDER",
    "CAUSE_INCOMPATIBLE_DESTINATION",
    "CAUSE_INCORRECT_MESSAGE_LENGTH",
    "CAUSE_INVALID_CALL_REFERENCE",
    "CAUSE_INVALID_ENDPOINT_REFERENCE",
    "CAUSE_INVALID_IE_CONTENTS",
    "CAUSE_INVALID_NUMBER_FORMAT",
    "CAUSE_INVALID_STATE_FOR_MESSAGE",
    "CAUSE_INVALID_TRANSIT_NETWORK_SELECTION",
    "CAUSE_LOC_BEYOND_INTERWORKING",
    "CAUSE_LOC_INTERNATIONAL_NETWORK",
    "CAUSE_LOC_PRIVATE_LOCAL",
    "CAUSE_LOC_PRIVATE_REMOTE",
    "CAUSE_LOC_PUBLIC_LOCAL",
    "CAUSE_LOC_PUBLIC_REMOTE",
    "CAUSE_LOC_TRANSIT_NETWORK",
    "CAUSE_LOC_USER",
    "CAUSE_MANDATORY_IE_MISSING",
    "CAUSE_NA_ABNORMAL",
    "CAUSE_NA_NORMAL",
    "CAUSE_NETWORK_OUT_OF_ORDER",
    "CAUSE_NORMAL_CALL_CLEARING",
    "CAUSE_NORMAL_UNSPECIFIED",
    "CAUSE_NO_ROUTE_TO_DESTINATION",
    "CAUSE_NO_ROUTE_TO_TRANSIT_NETWORK",
    "CAUSE_NO_USER_RESPONDING",
    "CAUSE_NO_VPI_VCI_AVAILABLE",
    "CAUSE_NUMBER_CHANGED",
    "CAUSE_OPTION_UNAVAILABLE",
    "CAUSE_PROTOCOL_ERROR",
    "CAUSE_PU_PROVIDER",
    "CAUSE_PU_USER",
    "CAUSE_QOS_UNAVAILABLE",
    "CAUSE_REASON_IE_INSUFFICIENT",
    "CAUSE_REASON_IE_MISSING",
    "CAUSE_REASON_USER",
    "CAUSE_RECOVERY_ON_TIMEOUT",
    "CAUSE_RESOURCE_UNAVAILABLE",
    "CAUSE_STATUS_ENQUIRY_RESPONSE",
    "CAUSE_TEMPORARY_FAILURE",
    "CAUSE_TOO_MANY_PENDING_ADD_PARTY",
    "CAUSE_UNALLOCATED_NUMBER",
    "CAUSE_UNIMPLEMENTED_IE",
    "CAUSE_UNIMPLEMENTED_MESSAGE_TYPE",
    "CAUSE_UNSUPPORTED_TRAFFIC_PARAMETERS",
    "CAUSE_USER_BUSY",
    "CAUSE_USER_CELL_RATE_UNAVAILABLE",
    "CAUSE_USER_REJECTS_CLIR",
    "CAUSE_VPI_VCI_UNACCEPTABLE",
    "CAUSE_VPI_VCI_UNAVAILABLE",
    "CF_ACCEPT",
    "CF_DEFER",
    "CF_REJECT",
    "CLIP_NOT",
    "CLIP_SUS",
    "CMSGHDR",
    "COMP_EQUAL",
    "COMP_NOTLESS",
    "CONTROL_CHANNEL_TRIGGER_STATUS",
    "CONTROL_CHANNEL_TRIGGER_STATUS_HARDWARE_SLOT_ALLOCATED",
    "CONTROL_CHANNEL_TRIGGER_STATUS_INVALID",
    "CONTROL_CHANNEL_TRIGGER_STATUS_POLICY_ERROR",
    "CONTROL_CHANNEL_TRIGGER_STATUS_SERVICE_UNAVAILABLE",
    "CONTROL_CHANNEL_TRIGGER_STATUS_SOFTWARE_SLOT_ALLOCATED",
    "CONTROL_CHANNEL_TRIGGER_STATUS_SYSTEM_ERROR",
    "CONTROL_CHANNEL_TRIGGER_STATUS_TRANSPORT_DISCONNECTED",
    "CSADDR_INFO",
    "DE_REUSE_SOCKET",
    "DL_ADDRESS_LENGTH_MAXIMUM",
    "DL_EI48",
    "DL_EI64",
    "DL_EUI48",
    "DL_EUI64",
    "DL_HEADER_LENGTH_MAXIMUM",
    "DL_OUI",
    "DL_TEREDO_ADDRESS",
    "DL_TEREDO_ADDRESS_PRV",
    "DL_TUNNEL_ADDRESS",
    "ETHERNET_HEADER",
    "ETHERNET_TYPE_802_1AD",
    "ETHERNET_TYPE_802_1Q",
    "ETHERNET_TYPE_ARP",
    "ETHERNET_TYPE_IPV4",
    "ETHERNET_TYPE_IPV6",
    "ETHERNET_TYPE_MINIMUM",
    "ETH_LENGTH_OF_HEADER",
    "ETH_LENGTH_OF_SNAP_HEADER",
    "ETH_LENGTH_OF_VLAN_HEADER",
    "EXT_LEN_UNIT",
    "E_WINDOW_ADVANCE_BY_TIME",
    "E_WINDOW_USE_AS_DATA_CACHE",
    "EnumProtocolsA",
    "EnumProtocolsW",
    "FALLBACK_INDEX",
    "FALLBACK_INDEX_FallbackIndexMax",
    "FALLBACK_INDEX_FallbackIndexTcpFastopen",
    "FD_ACCEPT",
    "FD_ACCEPT_BIT",
    "FD_ADDRESS_LIST_CHANGE_BIT",
    "FD_CLOSE",
    "FD_CLOSE_BIT",
    "FD_CONNECT",
    "FD_CONNECT_BIT",
    "FD_GROUP_QOS_BIT",
    "FD_MAX_EVENTS",
    "FD_OOB",
    "FD_OOB_BIT",
    "FD_QOS_BIT",
    "FD_READ",
    "FD_READ_BIT",
    "FD_ROUTING_INTERFACE_CHANGE_BIT",
    "FD_SET",
    "FD_SETSIZE",
    "FD_WRITE",
    "FD_WRITE_BIT",
    "FIOASYNC",
    "FIONBIO",
    "FIONREAD",
    "FLOWSPEC",
    "FROM_PROTOCOL_INFO",
    "FreeAddrInfoEx",
    "FreeAddrInfoExW",
    "FreeAddrInfoW",
    "GAI_STRERROR_BUFFER_SIZE",
    "GROUP_FILTER",
    "GROUP_REQ",
    "GROUP_SOURCE_REQ",
    "GetAcceptExSockaddrs",
    "GetAddrInfoExA",
    "GetAddrInfoExCancel",
    "GetAddrInfoExOverlappedResult",
    "GetAddrInfoExW",
    "GetAddrInfoW",
    "GetAddressByNameA",
    "GetAddressByNameW",
    "GetHostNameW",
    "GetNameByTypeA",
    "GetNameByTypeW",
    "GetNameInfoW",
    "GetServiceA",
    "GetServiceW",
    "GetTypeByNameA",
    "GetTypeByNameW",
    "HOSTENT",
    "HWSAEVENT",
    "IAS_ATTRIB_INT",
    "IAS_ATTRIB_NO_ATTRIB",
    "IAS_ATTRIB_NO_CLASS",
    "IAS_ATTRIB_OCTETSEQ",
    "IAS_ATTRIB_STR",
    "IAS_MAX_ATTRIBNAME",
    "IAS_MAX_CLASSNAME",
    "IAS_MAX_OCTET_STRING",
    "IAS_MAX_USER_STRING",
    "ICMP4_TIME_EXCEED_CODE",
    "ICMP4_TIME_EXCEED_REASSEMBLY",
    "ICMP4_TIME_EXCEED_TRANSIT",
    "ICMP4_UNREACH_ADMIN",
    "ICMP4_UNREACH_CODE",
    "ICMP4_UNREACH_FRAG_NEEDED",
    "ICMP4_UNREACH_HOST",
    "ICMP4_UNREACH_HOST_ADMIN",
    "ICMP4_UNREACH_HOST_TOS",
    "ICMP4_UNREACH_HOST_UNKNOWN",
    "ICMP4_UNREACH_ISOLATED",
    "ICMP4_UNREACH_NET",
    "ICMP4_UNREACH_NET_ADMIN",
    "ICMP4_UNREACH_NET_TOS",
    "ICMP4_UNREACH_NET_UNKNOWN",
    "ICMP4_UNREACH_PORT",
    "ICMP4_UNREACH_PROTOCOL",
    "ICMP4_UNREACH_SOURCEROUTE_FAILED",
    "ICMP6_DST_UNREACH_ADDR",
    "ICMP6_DST_UNREACH_ADMIN",
    "ICMP6_DST_UNREACH_BEYONDSCOPE",
    "ICMP6_DST_UNREACH_NOPORT",
    "ICMP6_DST_UNREACH_NOROUTE",
    "ICMP6_PARAMPROB_HEADER",
    "ICMP6_PARAMPROB_NEXTHEADER",
    "ICMP6_PARAMPROB_OPTION",
    "ICMP6_TIME_EXCEED_REASSEMBLY",
    "ICMP6_TIME_EXCEED_TRANSIT",
    "ICMPV4_ADDRESS_MASK_MESSAGE",
    "ICMPV4_INVALID_PREFERENCE_LEVEL",
    "ICMPV4_ROUTER_ADVERT_ENTRY",
    "ICMPV4_ROUTER_ADVERT_HEADER",
    "ICMPV4_ROUTER_SOLICIT",
    "ICMPV4_TIMESTAMP_MESSAGE",
    "ICMPV6_ECHO_REQUEST_FLAG_REVERSE",
    "ICMP_ERROR_INFO",
    "ICMP_HEADER",
    "ICMP_MESSAGE",
    "IE_AALParameters",
    "IE_BHLI",
    "IE_BLLI",
    "IE_BroadbandBearerCapability",
    "IE_CalledPartyNumber",
    "IE_CalledPartySubaddress",
    "IE_CallingPartyNumber",
    "IE_CallingPartySubaddress",
    "IE_Cause",
    "IE_QOSClass",
    "IE_TrafficDescriptor",
    "IE_TransitNetworkSelection",
    "IFF_BROADCAST",
    "IFF_LOOPBACK",
    "IFF_MULTICAST",
    "IFF_POINTTOPOINT",
    "IFF_UP",
    "IGMPV3_QUERY_HEADER",
    "IGMPV3_REPORT_HEADER",
    "IGMPV3_REPORT_RECORD_HEADER",
    "IGMP_HEADER",
    "IGMP_LEAVE_GROUP_TYPE",
    "IGMP_MAX_RESP_CODE_TYPE",
    "IGMP_MAX_RESP_CODE_TYPE_FLOAT",
    "IGMP_MAX_RESP_CODE_TYPE_NORMAL",
    "IGMP_QUERY_TYPE",
    "IGMP_VERSION1_REPORT_TYPE",
    "IGMP_VERSION2_REPORT_TYPE",
    "IGMP_VERSION3_REPORT_TYPE",
    "IMPLINK_HIGHEXPER",
    "IMPLINK_IP",
    "IMPLINK_LOWEXPER",
    "IN4ADDR_LINKLOCALPREFIX_LENGTH",
    "IN4ADDR_LOOPBACK",
    "IN4ADDR_LOOPBACKPREFIX_LENGTH",
    "IN4ADDR_MULTICASTPREFIX_LENGTH",
    "IN6ADDR_6TO4PREFIX_LENGTH",
    "IN6ADDR_LINKLOCALPREFIX_LENGTH",
    "IN6ADDR_MULTICASTPREFIX_LENGTH",
    "IN6ADDR_SOLICITEDNODEMULTICASTPREFIX_LENGTH",
    "IN6ADDR_TEREDOPREFIX_LENGTH",
    "IN6ADDR_V4MAPPEDPREFIX_LENGTH",
    "IN6_ADDR",
    "IN6_EMBEDDEDV4_BITS_IN_BYTE",
    "IN6_EMBEDDEDV4_UOCTET_POSITION",
    "IN6_PKTINFO",
    "IN6_PKTINFO_EX",
    "INADDR_LOOPBACK",
    "INADDR_NONE",
    "INCL_WINSOCK_API_PROTOTYPES",
    "INCL_WINSOCK_API_TYPEDEFS",
    "INET6_ADDRSTRLEN",
    "INET_ADDRSTRLEN",
    "INET_PORT_RANGE",
    "INET_PORT_RESERVATION_INFORMATION",
    "INET_PORT_RESERVATION_INSTANCE",
    "INET_PORT_RESERVATION_TOKEN",
    "INTERFACE_INFO",
    "INTERFACE_INFO_EX",
    "INVALID_SOCKET",
    "IN_ADDR",
    "IN_CLASSA_HOST",
    "IN_CLASSA_MAX",
    "IN_CLASSA_NET",
    "IN_CLASSA_NSHIFT",
    "IN_CLASSB_HOST",
    "IN_CLASSB_MAX",
    "IN_CLASSB_NET",
    "IN_CLASSB_NSHIFT",
    "IN_CLASSC_HOST",
    "IN_CLASSC_NET",
    "IN_CLASSC_NSHIFT",
    "IN_CLASSD_HOST",
    "IN_CLASSD_NET",
    "IN_CLASSD_NSHIFT",
    "IN_PKTINFO",
    "IN_PKTINFO_EX",
    "IN_RECVERR",
    "IOCPARM_MASK",
    "IOC_IN",
    "IOC_INOUT",
    "IOC_OUT",
    "IOC_PROTOCOL",
    "IOC_UNIX",
    "IOC_VENDOR",
    "IOC_VOID",
    "IOC_WS2",
    "IP4_OFF_MASK",
    "IP6F_MORE_FRAG",
    "IP6F_OFF_MASK",
    "IP6F_RESERVED_MASK",
    "IP6OPT_JUMBO",
    "IP6OPT_MUTABLE",
    "IP6OPT_NSAP_ADDR",
    "IP6OPT_PAD1",
    "IP6OPT_PADN",
    "IP6OPT_ROUTER_ALERT",
    "IP6OPT_TUNNEL_LIMIT",
    "IP6OPT_TYPE_DISCARD",
    "IP6OPT_TYPE_FORCEICMP",
    "IP6OPT_TYPE_ICMP",
    "IP6OPT_TYPE_SKIP",
    "IP6T_SO_ORIGINAL_DST",
    "IPPORT_BIFFUDP",
    "IPPORT_CHARGEN",
    "IPPORT_CMDSERVER",
    "IPPORT_DAYTIME",
    "IPPORT_DISCARD",
    "IPPORT_DYNAMIC_MAX",
    "IPPORT_DYNAMIC_MIN",
    "IPPORT_ECHO",
    "IPPORT_EFSSERVER",
    "IPPORT_EPMAP",
    "IPPORT_EXECSERVER",
    "IPPORT_FINGER",
    "IPPORT_FTP",
    "IPPORT_FTP_DATA",
    "IPPORT_HTTPS",
    "IPPORT_IMAP",
    "IPPORT_IMAP3",
    "IPPORT_LDAP",
    "IPPORT_LOGINSERVER",
    "IPPORT_MICROSOFT_DS",
    "IPPORT_MSP",
    "IPPORT_MTP",
    "IPPORT_NAMESERVER",
    "IPPORT_NETBIOS_DGM",
    "IPPORT_NETBIOS_NS",
    "IPPORT_NETBIOS_SSN",
    "IPPORT_NETSTAT",
    "IPPORT_NTP",
    "IPPORT_POP3",
    "IPPORT_QOTD",
    "IPPORT_REGISTERED_MAX",
    "IPPORT_REGISTERED_MIN",
    "IPPORT_RESERVED",
    "IPPORT_RJE",
    "IPPORT_ROUTESERVER",
    "IPPORT_SMTP",
    "IPPORT_SNMP",
    "IPPORT_SNMP_TRAP",
    "IPPORT_SUPDUP",
    "IPPORT_SYSTAT",
    "IPPORT_TCPMUX",
    "IPPORT_TELNET",
    "IPPORT_TFTP",
    "IPPORT_TIMESERVER",
    "IPPORT_TTYLINK",
    "IPPORT_WHOIS",
    "IPPORT_WHOSERVER",
    "IPPROTO",
    "IPPROTO_AH",
    "IPPROTO_CBT",
    "IPPROTO_DSTOPTS",
    "IPPROTO_EGP",
    "IPPROTO_ESP",
    "IPPROTO_FRAGMENT",
    "IPPROTO_GGP",
    "IPPROTO_HOPOPTS",
    "IPPROTO_ICLFXBM",
    "IPPROTO_ICMP",
    "IPPROTO_ICMPV6",
    "IPPROTO_IDP",
    "IPPROTO_IGMP",
    "IPPROTO_IGP",
    "IPPROTO_IP",
    "IPPROTO_IPV4",
    "IPPROTO_IPV6",
    "IPPROTO_L2TP",
    "IPPROTO_MAX",
    "IPPROTO_ND",
    "IPPROTO_NONE",
    "IPPROTO_PGM",
    "IPPROTO_PIM",
    "IPPROTO_PUP",
    "IPPROTO_RAW",
    "IPPROTO_RDP",
    "IPPROTO_RESERVED_IPSEC",
    "IPPROTO_RESERVED_IPSECOFFLOAD",
    "IPPROTO_RESERVED_MAX",
    "IPPROTO_RESERVED_RAW",
    "IPPROTO_RESERVED_WNV",
    "IPPROTO_RM",
    "IPPROTO_ROUTING",
    "IPPROTO_SCTP",
    "IPPROTO_ST",
    "IPPROTO_TCP",
    "IPPROTO_UDP",
    "IPTLS_METADATA",
    "IPV4_HEADER",
    "IPV4_MAX_MINIMUM_MTU",
    "IPV4_MINIMUM_MTU",
    "IPV4_MIN_MINIMUM_MTU",
    "IPV4_OPTION_HEADER",
    "IPV4_OPTION_TYPE",
    "IPV4_ROUTING_HEADER",
    "IPV4_TIMESTAMP_OPTION",
    "IPV4_VERSION",
    "IPV6_ADD_IFLIST",
    "IPV6_ADD_MEMBERSHIP",
    "IPV6_CHECKSUM",
    "IPV6_DEL_IFLIST",
    "IPV6_DONTFRAG",
    "IPV6_DROP_MEMBERSHIP",
    "IPV6_ECN",
    "IPV6_ECN_MASK",
    "IPV6_ECN_SHIFT",
    "IPV6_EXTENSION_HEADER",
    "IPV6_FLOW_LABEL_MASK",
    "IPV6_FRAGMENT_HEADER",
    "IPV6_FULL_TRAFFIC_CLASS_MASK",
    "IPV6_GET_IFLIST",
    "IPV6_HDRINCL",
    "IPV6_HEADER",
    "IPV6_HOPLIMIT",
    "IPV6_HOPOPTS",
    "IPV6_IFLIST",
    "IPV6_JOIN_GROUP",
    "IPV6_LEAVE_GROUP",
    "IPV6_MINIMUM_MTU",
    "IPV6_MREQ",
    "IPV6_MTU",
    "IPV6_MTU_DISCOVER",
    "IPV6_MULTICAST_HOPS",
    "IPV6_MULTICAST_IF",
    "IPV6_MULTICAST_LOOP",
    "IPV6_NEIGHBOR_ADVERTISEMENT_FLAGS",
    "IPV6_NRT_INTERFACE",
    "IPV6_OPTION_HEADER",
    "IPV6_OPTION_JUMBOGRAM",
    "IPV6_OPTION_ROUTER_ALERT",
    "IPV6_OPTION_TYPE",
    "IPV6_PKTINFO",
    "IPV6_PKTINFO_EX",
    "IPV6_PROTECTION_LEVEL",
    "IPV6_RECVDSTADDR",
    "IPV6_RECVECN",
    "IPV6_RECVERR",
    "IPV6_RECVIF",
    "IPV6_RECVRTHDR",
    "IPV6_RECVTCLASS",
    "IPV6_ROUTER_ADVERTISEMENT_FLAGS",
    "IPV6_ROUTING_HEADER",
    "IPV6_RTHDR",
    "IPV6_TCLASS",
    "IPV6_TRAFFIC_CLASS_MASK",
    "IPV6_UNICAST_HOPS",
    "IPV6_UNICAST_IF",
    "IPV6_USER_MTU",
    "IPV6_V6ONLY",
    "IPV6_VERSION",
    "IPV6_WFP_REDIRECT_CONTEXT",
    "IPV6_WFP_REDIRECT_RECORDS",
    "IPX_ADDRESS",
    "IPX_ADDRESS_DATA",
    "IPX_ADDRESS_NOTIFY",
    "IPX_DSTYPE",
    "IPX_EXTENDED_ADDRESS",
    "IPX_FILTERPTYPE",
    "IPX_GETNETINFO",
    "IPX_GETNETINFO_NORIP",
    "IPX_IMMEDIATESPXACK",
    "IPX_MAXSIZE",
    "IPX_MAX_ADAPTER_NUM",
    "IPX_NETNUM_DATA",
    "IPX_PTYPE",
    "IPX_RECEIVE_BROADCAST",
    "IPX_RECVHDR",
    "IPX_RERIPNETNUMBER",
    "IPX_SPXCONNSTATUS_DATA",
    "IPX_SPXGETCONNECTIONSTATUS",
    "IPX_STOPFILTERPTYPE",
    "IP_ADD_IFLIST",
    "IP_ADD_MEMBERSHIP",
    "IP_ADD_SOURCE_MEMBERSHIP",
    "IP_BLOCK_SOURCE",
    "IP_DEFAULT_MULTICAST_LOOP",
    "IP_DEFAULT_MULTICAST_TTL",
    "IP_DEL_IFLIST",
    "IP_DONTFRAGMENT",
    "IP_DROP_MEMBERSHIP",
    "IP_DROP_SOURCE_MEMBERSHIP",
    "IP_ECN",
    "IP_GET_IFLIST",
    "IP_HDRINCL",
    "IP_HOPLIMIT",
    "IP_IFLIST",
    "IP_MAX_MEMBERSHIPS",
    "IP_MREQ",
    "IP_MREQ_SOURCE",
    "IP_MSFILTER",
    "IP_MTU",
    "IP_MTU_DISCOVER",
    "IP_MULTICAST_IF",
    "IP_MULTICAST_LOOP",
    "IP_MULTICAST_TTL",
    "IP_NRT_INTERFACE",
    "IP_OPTIONS",
    "IP_OPTION_TIMESTAMP_ADDRESS",
    "IP_OPTION_TIMESTAMP_FLAGS",
    "IP_OPTION_TIMESTAMP_ONLY",
    "IP_OPTION_TIMESTAMP_SPECIFIC_ADDRESS",
    "IP_OPT_EOL",
    "IP_OPT_LSRR",
    "IP_OPT_MULTIDEST",
    "IP_OPT_NOP",
    "IP_OPT_ROUTER_ALERT",
    "IP_OPT_RR",
    "IP_OPT_SECURITY",
    "IP_OPT_SID",
    "IP_OPT_SSRR",
    "IP_OPT_TS",
    "IP_ORIGINAL_ARRIVAL_IF",
    "IP_PKTINFO",
    "IP_PKTINFO_EX",
    "IP_PMTUDISC_DO",
    "IP_PMTUDISC_DONT",
    "IP_PMTUDISC_MAX",
    "IP_PMTUDISC_NOT_SET",
    "IP_PMTUDISC_PROBE",
    "IP_PROTECTION_LEVEL",
    "IP_RECEIVE_BROADCAST",
    "IP_RECVDSTADDR",
    "IP_RECVECN",
    "IP_RECVERR",
    "IP_RECVIF",
    "IP_RECVRTHDR",
    "IP_RECVTCLASS",
    "IP_RECVTOS",
    "IP_RECVTTL",
    "IP_RTHDR",
    "IP_TCLASS",
    "IP_TOS",
    "IP_TTL",
    "IP_UNBLOCK_SOURCE",
    "IP_UNICAST_IF",
    "IP_UNSPECIFIED_HOP_LIMIT",
    "IP_UNSPECIFIED_TYPE_OF_SERVICE",
    "IP_UNSPECIFIED_USER_MTU",
    "IP_USER_MTU",
    "IP_VER_MASK",
    "IP_WFP_REDIRECT_CONTEXT",
    "IP_WFP_REDIRECT_RECORDS",
    "IRDA_PROTO_SOCK_STREAM",
    "IRLMP_9WIRE_MODE",
    "IRLMP_DISCOVERY_MODE",
    "IRLMP_ENUMDEVICES",
    "IRLMP_EXCLUSIVE_MODE",
    "IRLMP_IAS_QUERY",
    "IRLMP_IAS_SET",
    "IRLMP_IRLPT_MODE",
    "IRLMP_PARAMETERS",
    "IRLMP_SEND_PDU_LEN",
    "IRLMP_SHARP_MODE",
    "IRLMP_TINYTP_MODE",
    "ISOPROTO_CLNP",
    "ISOPROTO_CLTP",
    "ISOPROTO_ESIS",
    "ISOPROTO_INACT_NL",
    "ISOPROTO_INTRAISIS",
    "ISOPROTO_TP",
    "ISOPROTO_TP0",
    "ISOPROTO_TP1",
    "ISOPROTO_TP2",
    "ISOPROTO_TP3",
    "ISOPROTO_TP4",
    "ISOPROTO_X25",
    "ISO_EXP_DATA_NUSE",
    "ISO_EXP_DATA_USE",
    "ISO_HIERARCHICAL",
    "ISO_MAX_ADDR_LENGTH",
    "ISO_NON_HIERARCHICAL",
    "InetNtopW",
    "InetPtonW",
    "JL_BOTH",
    "JL_RECEIVER_ONLY",
    "JL_SENDER_ONLY",
    "LAYERED_PROTOCOL",
    "LINGER",
    "LITTLEENDIAN",
    "LM_BAUD_115200",
    "LM_BAUD_1152K",
    "LM_BAUD_1200",
    "LM_BAUD_16M",
    "LM_BAUD_19200",
    "LM_BAUD_2400",
    "LM_BAUD_38400",
    "LM_BAUD_4M",
    "LM_BAUD_57600",
    "LM_BAUD_576K",
    "LM_BAUD_9600",
    "LM_HB1_Computer",
    "LM_HB1_Fax",
    "LM_HB1_LANAccess",
    "LM_HB1_Modem",
    "LM_HB1_PDA_Palmtop",
    "LM_HB1_PnP",
    "LM_HB1_Printer",
    "LM_HB2_FileServer",
    "LM_HB2_Telephony",
    "LM_HB_Extension",
    "LM_IRPARMS",
    "LOG2_BITS_PER_BYTE",
    "LPBLOCKINGCALLBACK",
    "LPCONDITIONPROC",
    "LPFN_ACCEPTEX",
    "LPFN_CONNECTEX",
    "LPFN_DISCONNECTEX",
    "LPFN_GETACCEPTEXSOCKADDRS",
    "LPFN_NSPAPI",
    "LPFN_RIOCLOSECOMPLETIONQUEUE",
    "LPFN_RIOCREATECOMPLETIONQUEUE",
    "LPFN_RIOCREATEREQUESTQUEUE",
    "LPFN_RIODEQUEUECOMPLETION",
    "LPFN_RIODEREGISTERBUFFER",
    "LPFN_RIONOTIFY",
    "LPFN_RIORECEIVE",
    "LPFN_RIORECEIVEEX",
    "LPFN_RIOREGISTERBUFFER",
    "LPFN_RIORESIZECOMPLETIONQUEUE",
    "LPFN_RIORESIZEREQUESTQUEUE",
    "LPFN_RIOSEND",
    "LPFN_RIOSENDEX",
    "LPFN_TRANSMITFILE",
    "LPFN_TRANSMITPACKETS",
    "LPFN_WSAPOLL",
    "LPFN_WSARECVMSG",
    "LPFN_WSASENDMSG",
    "LPLOOKUPSERVICE_COMPLETION_ROUTINE",
    "LPNSPCLEANUP",
    "LPNSPGETSERVICECLASSINFO",
    "LPNSPINSTALLSERVICECLASS",
    "LPNSPIOCTL",
    "LPNSPLOOKUPSERVICEBEGIN",
    "LPNSPLOOKUPSERVICEEND",
    "LPNSPLOOKUPSERVICENEXT",
    "LPNSPREMOVESERVICECLASS",
    "LPNSPSETSERVICE",
    "LPNSPSTARTUP",
    "LPNSPV2CLEANUP",
    "LPNSPV2CLIENTSESSIONRUNDOWN",
    "LPNSPV2LOOKUPSERVICEBEGIN",
    "LPNSPV2LOOKUPSERVICEEND",
    "LPNSPV2LOOKUPSERVICENEXTEX",
    "LPNSPV2SETSERVICEEX",
    "LPNSPV2STARTUP",
    "LPSERVICE_CALLBACK_PROC",
    "LPWPUCLOSEEVENT",
    "LPWPUCLOSESOCKETHANDLE",
    "LPWPUCLOSETHREAD",
    "LPWPUCOMPLETEOVERLAPPEDREQUEST",
    "LPWPUCREATEEVENT",
    "LPWPUCREATESOCKETHANDLE",
    "LPWPUFDISSET",
    "LPWPUGETPROVIDERPATH",
    "LPWPUMODIFYIFSHANDLE",
    "LPWPUOPENCURRENTTHREAD",
    "LPWPUPOSTMESSAGE",
    "LPWPUQUERYBLOCKINGCALLBACK",
    "LPWPUQUERYSOCKETHANDLECONTEXT",
    "LPWPUQUEUEAPC",
    "LPWPURESETEVENT",
    "LPWPUSETEVENT",
    "LPWSAOVERLAPPED_COMPLETION_ROUTINE",
    "LPWSAUSERAPC",
    "LPWSCDEINSTALLPROVIDER",
    "LPWSCENABLENSPROVIDER",
    "LPWSCENUMPROTOCOLS",
    "LPWSCGETPROVIDERPATH",
    "LPWSCINSTALLNAMESPACE",
    "LPWSCINSTALLPROVIDER",
    "LPWSCUNINSTALLNAMESPACE",
    "LPWSCUPDATEPROVIDER",
    "LPWSCWRITENAMESPACEORDER",
    "LPWSCWRITEPROVIDERORDER",
    "LPWSPACCEPT",
    "LPWSPADDRESSTOSTRING",
    "LPWSPASYNCSELECT",
    "LPWSPBIND",
    "LPWSPCANCELBLOCKINGCALL",
    "LPWSPCLEANUP",
    "LPWSPCLOSESOCKET",
    "LPWSPCONNECT",
    "LPWSPDUPLICATESOCKET",
    "LPWSPENUMNETWORKEVENTS",
    "LPWSPEVENTSELECT",
    "LPWSPGETOVERLAPPEDRESULT",
    "LPWSPGETPEERNAME",
    "LPWSPGETQOSBYNAME",
    "LPWSPGETSOCKNAME",
    "LPWSPGETSOCKOPT",
    "LPWSPIOCTL",
    "LPWSPJOINLEAF",
    "LPWSPLISTEN",
    "LPWSPRECV",
    "LPWSPRECVDISCONNECT",
    "LPWSPRECVFROM",
    "LPWSPSELECT",
    "LPWSPSEND",
    "LPWSPSENDDISCONNECT",
    "LPWSPSENDTO",
    "LPWSPSETSOCKOPT",
    "LPWSPSHUTDOWN",
    "LPWSPSOCKET",
    "LPWSPSTARTUP",
    "LPWSPSTRINGTOADDRESS",
    "LSP_CRYPTO_COMPRESS",
    "LSP_FIREWALL",
    "LSP_INBOUND_MODIFY",
    "LSP_INSPECTOR",
    "LSP_LOCAL_CACHE",
    "LSP_OUTBOUND_MODIFY",
    "LSP_PROXY",
    "LSP_REDIRECTOR",
    "LSP_SYSTEM",
    "LUP_ADDRCONFIG",
    "LUP_API_ANSI",
    "LUP_CONTAINERS",
    "LUP_DEEP",
    "LUP_DISABLE_IDN_ENCODING",
    "LUP_DNS_ONLY",
    "LUP_DUAL_ADDR",
    "LUP_EXCLUSIVE_CUSTOM_SERVERS",
    "LUP_EXTENDED_QUERYSET",
    "LUP_FILESERVER",
    "LUP_FLUSHCACHE",
    "LUP_FLUSHPREVIOUS",
    "LUP_FORCE_CLEAR_TEXT",
    "LUP_NEAREST",
    "LUP_NOCONTAINERS",
    "LUP_NON_AUTHORITATIVE",
    "LUP_REQUIRE_SECURE",
    "LUP_RESOLUTION_HANDLE",
    "LUP_RES_SERVICE",
    "LUP_RETURN_ADDR",
    "LUP_RETURN_ALIASES",
    "LUP_RETURN_ALL",
    "LUP_RETURN_BLOB",
    "LUP_RETURN_COMMENT",
    "LUP_RETURN_NAME",
    "LUP_RETURN_PREFERRED_NAMES",
    "LUP_RETURN_QUERY_STRING",
    "LUP_RETURN_RESPONSE_FLAGS",
    "LUP_RETURN_TTL",
    "LUP_RETURN_TYPE",
    "LUP_RETURN_VERSION",
    "LUP_SECURE",
    "LUP_SECURE_WITH_FALLBACK",
    "LmCharSetASCII",
    "LmCharSetISO_8859_1",
    "LmCharSetISO_8859_2",
    "LmCharSetISO_8859_3",
    "LmCharSetISO_8859_4",
    "LmCharSetISO_8859_5",
    "LmCharSetISO_8859_6",
    "LmCharSetISO_8859_7",
    "LmCharSetISO_8859_8",
    "LmCharSetISO_8859_9",
    "LmCharSetUNICODE",
    "MAXGETHOSTSTRUCT",
    "MAX_IPV4_HLEN",
    "MAX_IPV4_PACKET",
    "MAX_IPV6_PAYLOAD",
    "MAX_MCAST_TTL",
    "MAX_PROTOCOL_CHAIN",
    "MAX_WINDOW_INCREMENT_PERCENTAGE",
    "MCAST_BLOCK_SOURCE",
    "MCAST_EXCLUDE",
    "MCAST_INCLUDE",
    "MCAST_JOIN_GROUP",
    "MCAST_JOIN_SOURCE_GROUP",
    "MCAST_LEAVE_GROUP",
    "MCAST_LEAVE_SOURCE_GROUP",
    "MCAST_UNBLOCK_SOURCE",
    "MIT_GUID",
    "MIT_IF_LUID",
    "MLDV2_QUERY_HEADER",
    "MLDV2_REPORT_HEADER",
    "MLDV2_REPORT_RECORD_HEADER",
    "MLD_HEADER",
    "MLD_MAX_RESP_CODE_TYPE",
    "MLD_MAX_RESP_CODE_TYPE_FLOAT",
    "MLD_MAX_RESP_CODE_TYPE_NORMAL",
    "MSG_BCAST",
    "MSG_CTRUNC",
    "MSG_DONTROUTE",
    "MSG_ERRQUEUE",
    "MSG_INTERRUPT",
    "MSG_MAXIOVLEN",
    "MSG_MCAST",
    "MSG_OOB",
    "MSG_PARTIAL",
    "MSG_PEEK",
    "MSG_PUSH_IMMEDIATE",
    "MSG_TRUNC",
    "MSG_WAITALL",
    "MULTICAST_MODE_TYPE",
    "NAPI_DOMAIN_DESCRIPTION_BLOB",
    "NAPI_PROVIDER_INSTALLATION_BLOB",
    "NAPI_PROVIDER_LEVEL",
    "NAPI_PROVIDER_TYPE",
    "ND_NA_FLAG_OVERRIDE",
    "ND_NA_FLAG_ROUTER",
    "ND_NA_FLAG_SOLICITED",
    "ND_NEIGHBOR_ADVERT_HEADER",
    "ND_NEIGHBOR_SOLICIT_HEADER",
    "ND_OPTION_DNSSL",
    "ND_OPTION_HDR",
    "ND_OPTION_MTU",
    "ND_OPTION_PREFIX_INFO",
    "ND_OPTION_RDNSS",
    "ND_OPTION_RD_HDR",
    "ND_OPTION_ROUTE_INFO",
    "ND_OPTION_TYPE",
    "ND_OPT_ADVERTISEMENT_INTERVAL",
    "ND_OPT_DNSSL",
    "ND_OPT_DNSSL_MIN_LEN",
    "ND_OPT_HOME_AGENT_INFORMATION",
    "ND_OPT_MTU",
    "ND_OPT_NBMA_SHORTCUT_LIMIT",
    "ND_OPT_PI_FLAG_AUTO",
    "ND_OPT_PI_FLAG_ONLINK",
    "ND_OPT_PI_FLAG_ROUTE",
    "ND_OPT_PI_FLAG_ROUTER_ADDR",
    "ND_OPT_PI_FLAG_SITE_PREFIX",
    "ND_OPT_PREFIX_INFORMATION",
    "ND_OPT_RDNSS",
    "ND_OPT_RDNSS_MIN_LEN",
    "ND_OPT_REDIRECTED_HEADER",
    "ND_OPT_RI_FLAG_PREFERENCE",
    "ND_OPT_ROUTE_INFO",
    "ND_OPT_SOURCE_ADDR_LIST",
    "ND_OPT_SOURCE_LINKADDR",
    "ND_OPT_TARGET_ADDR_LIST",
    "ND_OPT_TARGET_LINKADDR",
    "ND_RA_FLAG_HOME_AGENT",
    "ND_RA_FLAG_MANAGED",
    "ND_RA_FLAG_OTHER",
    "ND_RA_FLAG_PREFERENCE",
    "ND_REDIRECT_HEADER",
    "ND_ROUTER_ADVERT_HEADER",
    "ND_ROUTER_SOLICIT_HEADER",
    "NETBIOS_GROUP_NAME",
    "NETBIOS_NAME_LENGTH",
    "NETBIOS_TYPE_QUICK_GROUP",
    "NETBIOS_TYPE_QUICK_UNIQUE",
    "NETBIOS_UNIQUE_NAME",
    "NETRESOURCE2A",
    "NETRESOURCE2W",
    "NI_DGRAM",
    "NI_MAXHOST",
    "NI_MAXSERV",
    "NI_NAMEREQD",
    "NI_NOFQDN",
    "NI_NUMERICHOST",
    "NI_NUMERICSERV",
    "NLA_802_1X_LOCATION",
    "NLA_ALLUSERS_NETWORK",
    "NLA_BLOB",
    "NLA_BLOB_DATA_TYPE",
    "NLA_CONNECTIVITY",
    "NLA_CONNECTIVITY_TYPE",
    "NLA_FRIENDLY_NAME",
    "NLA_ICS",
    "NLA_INTERFACE",
    "NLA_INTERNET",
    "NLA_INTERNET_NO",
    "NLA_INTERNET_UNKNOWN",
    "NLA_INTERNET_YES",
    "NLA_NETWORK_AD_HOC",
    "NLA_NETWORK_MANAGED",
    "NLA_NETWORK_UNKNOWN",
    "NLA_NETWORK_UNMANAGED",
    "NLA_RAW_DATA",
    "NLA_SERVICE_CLASS_GUID",
    "NL_ADDRESS_TYPE",
    "NL_ADDRESS_TYPE_NlatAnycast",
    "NL_ADDRESS_TYPE_NlatBroadcast",
    "NL_ADDRESS_TYPE_NlatInvalid",
    "NL_ADDRESS_TYPE_NlatMulticast",
    "NL_ADDRESS_TYPE_NlatUnicast",
    "NL_ADDRESS_TYPE_NlatUnspecified",
    "NL_BANDWIDTH_FLAG",
    "NL_BANDWIDTH_FLAG_NlbwDisabled",
    "NL_BANDWIDTH_FLAG_NlbwEnabled",
    "NL_BANDWIDTH_FLAG_NlbwUnchanged",
    "NL_BANDWIDTH_INFORMATION",
    "NL_DAD_STATE",
    "NL_DAD_STATE_IpDadStateDeprecated",
    "NL_DAD_STATE_IpDadStateDuplicate",
    "NL_DAD_STATE_IpDadStateInvalid",
    "NL_DAD_STATE_IpDadStatePreferred",
    "NL_DAD_STATE_IpDadStateTentative",
    "NL_DAD_STATE_NldsDeprecated",
    "NL_DAD_STATE_NldsDuplicate",
    "NL_DAD_STATE_NldsInvalid",
    "NL_DAD_STATE_NldsPreferred",
    "NL_DAD_STATE_NldsTentative",
    "NL_INTERFACE_NETWORK_CATEGORY_STATE",
    "NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincCategoryStateMax",
    "NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincCategoryUnknown",
    "NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincDomainAuthenticated",
    "NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincPrivate",
    "NL_INTERFACE_NETWORK_CATEGORY_STATE_NlincPublic",
    "NL_INTERFACE_OFFLOAD_ROD",
    "NL_LINK_LOCAL_ADDRESS_BEHAVIOR",
    "NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalAlwaysOff",
    "NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalAlwaysOn",
    "NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalDelayed",
    "NL_LINK_LOCAL_ADDRESS_BEHAVIOR_LinkLocalUnchanged",
    "NL_NEIGHBOR_STATE",
    "NL_NEIGHBOR_STATE_NlnsDelay",
    "NL_NEIGHBOR_STATE_NlnsIncomplete",
    "NL_NEIGHBOR_STATE_NlnsMaximum",
    "NL_NEIGHBOR_STATE_NlnsPermanent",
    "NL_NEIGHBOR_STATE_NlnsProbe",
    "NL_NEIGHBOR_STATE_NlnsReachable",
    "NL_NEIGHBOR_STATE_NlnsStale",
    "NL_NEIGHBOR_STATE_NlnsUnreachable",
    "NL_NETWORK_CATEGORY",
    "NL_NETWORK_CATEGORY_NetworkCategoryDomainAuthenticated",
    "NL_NETWORK_CATEGORY_NetworkCategoryPrivate",
    "NL_NETWORK_CATEGORY_NetworkCategoryPublic",
    "NL_NETWORK_CATEGORY_NetworkCategoryUnchanged",
    "NL_NETWORK_CATEGORY_NetworkCategoryUnknown",
    "NL_NETWORK_CONNECTIVITY_COST_HINT",
    "NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintFixed",
    "NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintUnknown",
    "NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintUnrestricted",
    "NL_NETWORK_CONNECTIVITY_COST_HINT_NetworkConnectivityCostHintVariable",
    "NL_NETWORK_CONNECTIVITY_HINT",
    "NL_NETWORK_CONNECTIVITY_LEVEL_HINT",
    "NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintConstrainedInternetAccess",
    "NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintHidden",
    "NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintInternetAccess",
    "NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintLocalAccess",
    "NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintNone",
    "NL_NETWORK_CONNECTIVITY_LEVEL_HINT_NetworkConnectivityLevelHintUnknown",
    "NL_PATH_BANDWIDTH_ROD",
    "NL_PREFIX_ORIGIN",
    "NL_PREFIX_ORIGIN_IpPrefixOriginDhcp",
    "NL_PREFIX_ORIGIN_IpPrefixOriginManual",
    "NL_PREFIX_ORIGIN_IpPrefixOriginOther",
    "NL_PREFIX_ORIGIN_IpPrefixOriginRouterAdvertisement",
    "NL_PREFIX_ORIGIN_IpPrefixOriginUnchanged",
    "NL_PREFIX_ORIGIN_IpPrefixOriginWellKnown",
    "NL_ROUTER_DISCOVERY_BEHAVIOR",
    "NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryDhcp",
    "NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryDisabled",
    "NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryEnabled",
    "NL_ROUTER_DISCOVERY_BEHAVIOR_RouterDiscoveryUnchanged",
    "NL_ROUTE_ORIGIN",
    "NL_ROUTE_ORIGIN_Nlro6to4",
    "NL_ROUTE_ORIGIN_NlroDHCP",
    "NL_ROUTE_ORIGIN_NlroManual",
    "NL_ROUTE_ORIGIN_NlroRouterAdvertisement",
    "NL_ROUTE_ORIGIN_NlroWellKnown",
    "NL_ROUTE_PROTOCOL",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_BBN",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_BGP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_CISCO",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_DHCP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_DVMRP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_EGP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_EIGRP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_ES_IS",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_GGP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_HELLO",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_ICMP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_IDPR",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_IS_IS",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_LOCAL",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_NETMGMT",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_NT_AUTOSTATIC",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_NT_STATIC",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_NT_STATIC_NON_DOD",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_OSPF",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_OTHER",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_RIP",
    "NL_ROUTE_PROTOCOL_MIB_IPPROTO_RPL",
    "NL_ROUTE_PROTOCOL_PROTO_IP_BBN",
    "NL_ROUTE_PROTOCOL_PROTO_IP_BGP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_CISCO",
    "NL_ROUTE_PROTOCOL_PROTO_IP_DHCP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_DVMRP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_EGP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_EIGRP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_ES_IS",
    "NL_ROUTE_PROTOCOL_PROTO_IP_GGP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_HELLO",
    "NL_ROUTE_PROTOCOL_PROTO_IP_ICMP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_IDPR",
    "NL_ROUTE_PROTOCOL_PROTO_IP_IS_IS",
    "NL_ROUTE_PROTOCOL_PROTO_IP_LOCAL",
    "NL_ROUTE_PROTOCOL_PROTO_IP_NETMGMT",
    "NL_ROUTE_PROTOCOL_PROTO_IP_NT_AUTOSTATIC",
    "NL_ROUTE_PROTOCOL_PROTO_IP_NT_STATIC",
    "NL_ROUTE_PROTOCOL_PROTO_IP_NT_STATIC_NON_DOD",
    "NL_ROUTE_PROTOCOL_PROTO_IP_OSPF",
    "NL_ROUTE_PROTOCOL_PROTO_IP_OTHER",
    "NL_ROUTE_PROTOCOL_PROTO_IP_RIP",
    "NL_ROUTE_PROTOCOL_PROTO_IP_RPL",
    "NL_ROUTE_PROTOCOL_RouteProtocolBbn",
    "NL_ROUTE_PROTOCOL_RouteProtocolBgp",
    "NL_ROUTE_PROTOCOL_RouteProtocolCisco",
    "NL_ROUTE_PROTOCOL_RouteProtocolDhcp",
    "NL_ROUTE_PROTOCOL_RouteProtocolDvmrp",
    "NL_ROUTE_PROTOCOL_RouteProtocolEgp",
    "NL_ROUTE_PROTOCOL_RouteProtocolEigrp",
    "NL_ROUTE_PROTOCOL_RouteProtocolEsIs",
    "NL_ROUTE_PROTOCOL_RouteProtocolGgp",
    "NL_ROUTE_PROTOCOL_RouteProtocolHello",
    "NL_ROUTE_PROTOCOL_RouteProtocolIcmp",
    "NL_ROUTE_PROTOCOL_RouteProtocolIdpr",
    "NL_ROUTE_PROTOCOL_RouteProtocolIsIs",
    "NL_ROUTE_PROTOCOL_RouteProtocolLocal",
    "NL_ROUTE_PROTOCOL_RouteProtocolNetMgmt",
    "NL_ROUTE_PROTOCOL_RouteProtocolOspf",
    "NL_ROUTE_PROTOCOL_RouteProtocolOther",
    "NL_ROUTE_PROTOCOL_RouteProtocolRip",
    "NL_ROUTE_PROTOCOL_RouteProtocolRpl",
    "NL_SUFFIX_ORIGIN",
    "NL_SUFFIX_ORIGIN_IpSuffixOriginDhcp",
    "NL_SUFFIX_ORIGIN_IpSuffixOriginLinkLayerAddress",
    "NL_SUFFIX_ORIGIN_IpSuffixOriginManual",
    "NL_SUFFIX_ORIGIN_IpSuffixOriginOther",
    "NL_SUFFIX_ORIGIN_IpSuffixOriginRandom",
    "NL_SUFFIX_ORIGIN_IpSuffixOriginUnchanged",
    "NL_SUFFIX_ORIGIN_IpSuffixOriginWellKnown",
    "NL_SUFFIX_ORIGIN_NlsoDhcp",
    "NL_SUFFIX_ORIGIN_NlsoLinkLayerAddress",
    "NL_SUFFIX_ORIGIN_NlsoManual",
    "NL_SUFFIX_ORIGIN_NlsoOther",
    "NL_SUFFIX_ORIGIN_NlsoRandom",
    "NL_SUFFIX_ORIGIN_NlsoWellKnown",
    "NPI_MODULEID",
    "NPI_MODULEID_TYPE",
    "NSPROTO_IPX",
    "NSPROTO_SPX",
    "NSPROTO_SPXII",
    "NSPV2_ROUTINE",
    "NSP_NOTIFY_APC",
    "NSP_NOTIFY_EVENT",
    "NSP_NOTIFY_HWND",
    "NSP_NOTIFY_IMMEDIATELY",
    "NSP_NOTIFY_PORT",
    "NSP_ROUTINE",
    "NSTYPE_DYNAMIC",
    "NSTYPE_ENUMERABLE",
    "NSTYPE_HIERARCHICAL",
    "NSTYPE_WORKGROUP",
    "NS_ALL",
    "NS_DEFAULT",
    "NS_DHCP",
    "NS_DNS",
    "NS_EMAIL",
    "NS_INFOA",
    "NS_INFOW",
    "NS_LOCALNAME",
    "NS_MS",
    "NS_NBP",
    "NS_NDS",
    "NS_NETBT",
    "NS_NETDES",
    "NS_NIS",
    "NS_NISPLUS",
    "NS_NLA",
    "NS_NTDS",
    "NS_PEER_BROWSE",
    "NS_SAP",
    "NS_SERVICE_INFOA",
    "NS_SERVICE_INFOW",
    "NS_SLP",
    "NS_STDA",
    "NS_TCPIP_HOSTS",
    "NS_TCPIP_LOCAL",
    "NS_VNS",
    "NS_WINS",
    "NS_WRQ",
    "NS_X500",
    "PFL_HIDDEN",
    "PFL_MATCHES_PROTOCOL_ZERO",
    "PFL_MULTIPLE_PROTO_ENTRIES",
    "PFL_NETWORKDIRECT_PROVIDER",
    "PFL_RECOMMENDED_PROTO_ENTRY",
    "PF_APPLETALK",
    "PF_ATM",
    "PF_BAN",
    "PF_CCITT",
    "PF_CHAOS",
    "PF_DATAKIT",
    "PF_DECnet",
    "PF_DLI",
    "PF_ECMA",
    "PF_FIREFOX",
    "PF_HYLINK",
    "PF_IMPLINK",
    "PF_IPX",
    "PF_IRDA",
    "PF_ISO",
    "PF_LAT",
    "PF_MAX",
    "PF_NS",
    "PF_OSI",
    "PF_PUP",
    "PF_SNA",
    "PF_UNIX",
    "PF_UNKNOWN1",
    "PF_VOICEVIEW",
    "PI_ALLOWED",
    "PI_NUMBER_NOT_AVAILABLE",
    "PI_RESTRICTED",
    "PMTUD_STATE",
    "POLLERR",
    "POLLHUP",
    "POLLIN",
    "POLLNVAL",
    "POLLOUT",
    "POLLPRI",
    "POLLRDBAND",
    "POLLRDNORM",
    "POLLWRBAND",
    "POLLWRNORM",
    "PRIORITY_STATUS",
    "PROP_ADDRESSES",
    "PROP_ALL",
    "PROP_COMMENT",
    "PROP_DISPLAY_HINT",
    "PROP_LOCALE",
    "PROP_MACHINE",
    "PROP_SD",
    "PROP_START_TIME",
    "PROP_VERSION",
    "PROTECTION_LEVEL_DEFAULT",
    "PROTECTION_LEVEL_EDGERESTRICTED",
    "PROTECTION_LEVEL_RESTRICTED",
    "PROTECTION_LEVEL_UNRESTRICTED",
    "PROTOCOL_INFOA",
    "PROTOCOL_INFOW",
    "PROTOENT",
    "PVD_CONFIG",
    "ProcessSocketNotifications",
    "ProviderLevel_None",
    "ProviderLevel_Primary",
    "ProviderLevel_Secondary",
    "ProviderType_Application",
    "ProviderType_Service",
    "Q2931_IE",
    "Q2931_IE_TYPE",
    "QOS",
    "QOS_CLASS0",
    "QOS_CLASS1",
    "QOS_CLASS2",
    "QOS_CLASS3",
    "QOS_CLASS4",
    "RCVALL_IF",
    "RCVALL_IPLEVEL",
    "RCVALL_OFF",
    "RCVALL_ON",
    "RCVALL_SOCKETLEVELONLY",
    "RCVALL_VALUE",
    "REAL_TIME_NOTIFICATION_CAPABILITY",
    "REAL_TIME_NOTIFICATION_CAPABILITY_EX",
    "REAL_TIME_NOTIFICATION_SETTING_INPUT",
    "REAL_TIME_NOTIFICATION_SETTING_INPUT_EX",
    "REAL_TIME_NOTIFICATION_SETTING_OUTPUT",
    "RESOURCEDISPLAYTYPE_DOMAIN",
    "RESOURCEDISPLAYTYPE_FILE",
    "RESOURCEDISPLAYTYPE_GENERIC",
    "RESOURCEDISPLAYTYPE_GROUP",
    "RESOURCEDISPLAYTYPE_SERVER",
    "RESOURCEDISPLAYTYPE_SHARE",
    "RESOURCEDISPLAYTYPE_TREE",
    "RESOURCE_DISPLAY_TYPE",
    "RESULT_IS_ADDED",
    "RESULT_IS_ALIAS",
    "RESULT_IS_CHANGED",
    "RESULT_IS_DELETED",
    "RES_FIND_MULTIPLE",
    "RES_FLUSH_CACHE",
    "RES_SERVICE",
    "RES_SOFT_SEARCH",
    "RES_UNUSED_1",
    "RIORESULT",
    "RIO_BUF",
    "RIO_BUFFERID_t",
    "RIO_CMSG_BUFFER",
    "RIO_CORRUPT_CQ",
    "RIO_CQ_t",
    "RIO_EVENT_COMPLETION",
    "RIO_EXTENSION_FUNCTION_TABLE",
    "RIO_IOCP_COMPLETION",
    "RIO_MAX_CQ_SIZE",
    "RIO_MSG_COMMIT_ONLY",
    "RIO_MSG_DEFER",
    "RIO_MSG_DONT_NOTIFY",
    "RIO_MSG_WAITALL",
    "RIO_NOTIFICATION_COMPLETION",
    "RIO_NOTIFICATION_COMPLETION_TYPE",
    "RIO_RQ_t",
    "RM_ADD_RECEIVE_IF",
    "RM_DEL_RECEIVE_IF",
    "RM_FEC_INFO",
    "RM_FLUSHCACHE",
    "RM_HIGH_SPEED_INTRANET_OPT",
    "RM_LATEJOIN",
    "RM_OPTIONSBASE",
    "RM_RATE_WINDOW_SIZE",
    "RM_RECEIVER_STATISTICS",
    "RM_RECEIVER_STATS",
    "RM_SENDER_STATISTICS",
    "RM_SENDER_STATS",
    "RM_SENDER_WINDOW_ADVANCE_METHOD",
    "RM_SEND_WINDOW",
    "RM_SEND_WINDOW_ADV_RATE",
    "RM_SET_MCAST_TTL",
    "RM_SET_MESSAGE_BOUNDARY",
    "RM_SET_SEND_IF",
    "RM_USE_FEC",
    "RNRSERVICE_DELETE",
    "RNRSERVICE_DEREGISTER",
    "RNRSERVICE_REGISTER",
    "RSS_SCALABILITY_INFO",
    "RtlEthernetAddressToStringA",
    "RtlEthernetAddressToStringW",
    "RtlEthernetStringToAddressA",
    "RtlEthernetStringToAddressW",
    "RtlIpv4AddressToStringA",
    "RtlIpv4AddressToStringExA",
    "RtlIpv4AddressToStringExW",
    "RtlIpv4AddressToStringW",
    "RtlIpv4StringToAddressA",
    "RtlIpv4StringToAddressExA",
    "RtlIpv4StringToAddressExW",
    "RtlIpv4StringToAddressW",
    "RtlIpv6AddressToStringA",
    "RtlIpv6AddressToStringExA",
    "RtlIpv6AddressToStringExW",
    "RtlIpv6AddressToStringW",
    "RtlIpv6StringToAddressA",
    "RtlIpv6StringToAddressExA",
    "RtlIpv6StringToAddressExW",
    "RtlIpv6StringToAddressW",
    "SAP_FIELD_ABSENT",
    "SAP_FIELD_ANY",
    "SAP_FIELD_ANY_AESA_REST",
    "SAP_FIELD_ANY_AESA_SEL",
    "SCOPE_ID",
    "SCOPE_LEVEL",
    "SCOPE_LEVEL_ScopeLevelAdmin",
    "SCOPE_LEVEL_ScopeLevelCount",
    "SCOPE_LEVEL_ScopeLevelGlobal",
    "SCOPE_LEVEL_ScopeLevelInterface",
    "SCOPE_LEVEL_ScopeLevelLink",
    "SCOPE_LEVEL_ScopeLevelOrganization",
    "SCOPE_LEVEL_ScopeLevelSite",
    "SCOPE_LEVEL_ScopeLevelSubnet",
    "SD_BOTH",
    "SD_RECEIVE",
    "SD_SEND",
    "SECURITY_PROTOCOL_NONE",
    "SENDER_DEFAULT_LATE_JOINER_PERCENTAGE",
    "SENDER_DEFAULT_RATE_KBITS_PER_SEC",
    "SENDER_DEFAULT_WINDOW_ADV_PERCENTAGE",
    "SENDER_MAX_LATE_JOINER_PERCENTAGE",
    "SEND_RECV_FLAGS",
    "SERVENT",
    "SERVICE_ADDRESS",
    "SERVICE_ADDRESSES",
    "SERVICE_ADDRESS_FLAG_RPC_CN",
    "SERVICE_ADDRESS_FLAG_RPC_DG",
    "SERVICE_ADDRESS_FLAG_RPC_NB",
    "SERVICE_ADD_TYPE",
    "SERVICE_ASYNC_INFO",
    "SERVICE_DELETE_TYPE",
    "SERVICE_DEREGISTER",
    "SERVICE_FLAG_DEFER",
    "SERVICE_FLAG_HARD",
    "SERVICE_FLUSH",
    "SERVICE_INFOA",
    "SERVICE_INFOW",
    "SERVICE_LOCAL",
    "SERVICE_MULTIPLE",
    "SERVICE_REGISTER",
    "SERVICE_RESOURCE",
    "SERVICE_SERVICE",
    "SERVICE_TYPE_INFO",
    "SERVICE_TYPE_INFO_ABSA",
    "SERVICE_TYPE_INFO_ABSW",
    "SERVICE_TYPE_VALUE",
    "SERVICE_TYPE_VALUE_ABSA",
    "SERVICE_TYPE_VALUE_ABSW",
    "SERVICE_TYPE_VALUE_CONN",
    "SERVICE_TYPE_VALUE_CONNA",
    "SERVICE_TYPE_VALUE_CONNW",
    "SERVICE_TYPE_VALUE_IPXPORTA",
    "SERVICE_TYPE_VALUE_IPXPORTW",
    "SERVICE_TYPE_VALUE_OBJECTID",
    "SERVICE_TYPE_VALUE_OBJECTIDA",
    "SERVICE_TYPE_VALUE_OBJECTIDW",
    "SERVICE_TYPE_VALUE_SAPID",
    "SERVICE_TYPE_VALUE_SAPIDA",
    "SERVICE_TYPE_VALUE_SAPIDW",
    "SERVICE_TYPE_VALUE_TCPPORT",
    "SERVICE_TYPE_VALUE_TCPPORTA",
    "SERVICE_TYPE_VALUE_TCPPORTW",
    "SERVICE_TYPE_VALUE_UDPPORT",
    "SERVICE_TYPE_VALUE_UDPPORTA",
    "SERVICE_TYPE_VALUE_UDPPORTW",
    "SET_SERVICE_OPERATION",
    "SET_SERVICE_PARTIAL_SUCCESS",
    "SG_CONSTRAINED_GROUP",
    "SG_UNCONSTRAINED_GROUP",
    "SIOCATMARK",
    "SIOCGHIWAT",
    "SIOCGLOWAT",
    "SIOCSHIWAT",
    "SIOCSLOWAT",
    "SIO_ABSORB_RTRALERT",
    "SIO_ACQUIRE_PORT_RESERVATION",
    "SIO_ADDRESS_LIST_CHANGE",
    "SIO_ADDRESS_LIST_QUERY",
    "SIO_ADDRESS_LIST_SORT",
    "SIO_AF_UNIX_GETPEERPID",
    "SIO_AF_UNIX_SETBINDPARENTPATH",
    "SIO_AF_UNIX_SETCONNPARENTPATH",
    "SIO_APPLY_TRANSPORT_SETTING",
    "SIO_ASSOCIATE_HANDLE",
    "SIO_ASSOCIATE_PORT_RESERVATION",
    "SIO_ASSOCIATE_PVC",
    "SIO_BASE_HANDLE",
    "SIO_BSP_HANDLE",
    "SIO_BSP_HANDLE_POLL",
    "SIO_BSP_HANDLE_SELECT",
    "SIO_CPU_AFFINITY",
    "SIO_DELETE_PEER_TARGET_NAME",
    "SIO_ENABLE_CIRCULAR_QUEUEING",
    "SIO_EXT_POLL",
    "SIO_EXT_SELECT",
    "SIO_EXT_SENDMSG",
    "SIO_FIND_ROUTE",
    "SIO_FLUSH",
    "SIO_GET_ATM_ADDRESS",
    "SIO_GET_ATM_CONNECTION_ID",
    "SIO_GET_BROADCAST_ADDRESS",
    "SIO_GET_EXTENSION_FUNCTION_POINTER",
    "SIO_GET_GROUP_QOS",
    "SIO_GET_MULTIPLE_EXTENSION_FUNCTION_POINTER",
    "SIO_GET_NUMBER_OF_ATM_DEVICES",
    "SIO_GET_QOS",
    "SIO_GET_TX_TIMESTAMP",
    "SIO_INDEX_ADD_MCAST",
    "SIO_INDEX_BIND",
    "SIO_INDEX_DEL_MCAST",
    "SIO_INDEX_MCASTIF",
    "SIO_KEEPALIVE_VALS",
    "SIO_LIMIT_BROADCASTS",
    "SIO_LOOPBACK_FAST_PATH",
    "SIO_MULTICAST_SCOPE",
    "SIO_MULTIPOINT_LOOPBACK",
    "SIO_NSP_NOTIFY_CHANGE",
    "SIO_PRIORITY_HINT",
    "SIO_QUERY_RSS_PROCESSOR_INFO",
    "SIO_QUERY_RSS_SCALABILITY_INFO",
    "SIO_QUERY_SECURITY",
    "SIO_QUERY_TARGET_PNP_HANDLE",
    "SIO_QUERY_TRANSPORT_SETTING",
    "SIO_QUERY_WFP_ALE_ENDPOINT_HANDLE",
    "SIO_QUERY_WFP_CONNECTION_REDIRECT_CONTEXT",
    "SIO_QUERY_WFP_CONNECTION_REDIRECT_RECORDS",
    "SIO_RCVALL",
    "SIO_RCVALL_IF",
    "SIO_RCVALL_IGMPMCAST",
    "SIO_RCVALL_MCAST",
    "SIO_RCVALL_MCAST_IF",
    "SIO_RELEASE_PORT_RESERVATION",
    "SIO_RESERVED_1",
    "SIO_RESERVED_2",
    "SIO_ROUTING_INTERFACE_CHANGE",
    "SIO_ROUTING_INTERFACE_QUERY",
    "SIO_SET_COMPATIBILITY_MODE",
    "SIO_SET_GROUP_QOS",
    "SIO_SET_PEER_TARGET_NAME",
    "SIO_SET_PRIORITY_HINT",
    "SIO_SET_QOS",
    "SIO_SET_SECURITY",
    "SIO_SET_WFP_CONNECTION_REDIRECT_RECORDS",
    "SIO_SOCKET_CLOSE_NOTIFY",
    "SIO_SOCKET_USAGE_NOTIFICATION",
    "SIO_TCP_INFO",
    "SIO_TCP_INITIAL_RTO",
    "SIO_TCP_SET_ACK_FREQUENCY",
    "SIO_TCP_SET_ICW",
    "SIO_TIMESTAMPING",
    "SIO_TRANSLATE_HANDLE",
    "SIO_UCAST_IF",
    "SIO_UDP_CONNRESET",
    "SIO_UDP_NETRESET",
    "SIZEOF_IP_OPT_ROUTERALERT",
    "SIZEOF_IP_OPT_ROUTING_HEADER",
    "SIZEOF_IP_OPT_SECURITY",
    "SIZEOF_IP_OPT_STREAMIDENTIFIER",
    "SIZEOF_IP_OPT_TIMESTAMP_HEADER",
    "SI_NETWORK",
    "SI_USER_FAILED",
    "SI_USER_NOT_SCREENED",
    "SI_USER_PASSED",
    "SNAP_CONTROL",
    "SNAP_DSAP",
    "SNAP_HEADER",
    "SNAP_OUI",
    "SNAP_SSAP",
    "SOCKADDR",
    "SOCKADDR_ATM",
    "SOCKADDR_DL",
    "SOCKADDR_IN",
    "SOCKADDR_IN6",
    "SOCKADDR_IN6_PAIR",
    "SOCKADDR_IN6_W2KSP1",
    "SOCKADDR_INET",
    "SOCKADDR_IPX",
    "SOCKADDR_IRDA",
    "SOCKADDR_NB",
    "SOCKADDR_STORAGE",
    "SOCKADDR_STORAGE_XP",
    "SOCKADDR_TP",
    "SOCKADDR_UN",
    "SOCKADDR_VNS",
    "SOCKET",
    "SOCKET_ADDRESS",
    "SOCKET_ADDRESS_LIST",
    "SOCKET_DEFAULT2_QM_POLICY",
    "SOCKET_ERROR",
    "SOCKET_INFO_CONNECTION_ENCRYPTED",
    "SOCKET_INFO_CONNECTION_IMPERSONATED",
    "SOCKET_INFO_CONNECTION_SECURED",
    "SOCKET_PEER_TARGET_NAME",
    "SOCKET_PRIORITY_HINT",
    "SOCKET_PRIORITY_HINT_SocketMaximumPriorityHintType",
    "SOCKET_PRIORITY_HINT_SocketPriorityHintLow",
    "SOCKET_PRIORITY_HINT_SocketPriorityHintNormal",
    "SOCKET_PRIORITY_HINT_SocketPriorityHintVeryLow",
    "SOCKET_PROCESSOR_AFFINITY",
    "SOCKET_QUERY_IPSEC2_ABORT_CONNECTION_ON_FIELD_CHANGE",
    "SOCKET_QUERY_IPSEC2_FIELD_MASK_MM_SA_ID",
    "SOCKET_QUERY_IPSEC2_FIELD_MASK_QM_SA_ID",
    "SOCKET_SECURITY_PROTOCOL",
    "SOCKET_SECURITY_PROTOCOL_DEFAULT",
    "SOCKET_SECURITY_PROTOCOL_INVALID",
    "SOCKET_SECURITY_PROTOCOL_IPSEC",
    "SOCKET_SECURITY_PROTOCOL_IPSEC2",
    "SOCKET_SECURITY_QUERY_INFO",
    "SOCKET_SECURITY_QUERY_INFO_IPSEC2",
    "SOCKET_SECURITY_QUERY_TEMPLATE",
    "SOCKET_SECURITY_QUERY_TEMPLATE_IPSEC2",
    "SOCKET_SECURITY_SETTINGS",
    "SOCKET_SECURITY_SETTINGS_IPSEC",
    "SOCKET_SETTINGS_ALLOW_INSECURE",
    "SOCKET_SETTINGS_GUARANTEE_ENCRYPTION",
    "SOCKET_SETTINGS_IPSEC_ALLOW_FIRST_INBOUND_PKT_UNENCRYPTED",
    "SOCKET_SETTINGS_IPSEC_OPTIONAL_PEER_NAME_VERIFICATION",
    "SOCKET_SETTINGS_IPSEC_PEER_NAME_IS_RAW_FORMAT",
    "SOCKET_SETTINGS_IPSEC_SKIP_FILTER_INSTANTIATION",
    "SOCKET_USAGE_TYPE",
    "SOCK_DGRAM",
    "SOCK_NOTIFY_EVENT_ERR",
    "SOCK_NOTIFY_EVENT_HANGUP",
    "SOCK_NOTIFY_EVENT_IN",
    "SOCK_NOTIFY_EVENT_OUT",
    "SOCK_NOTIFY_EVENT_REMOVE",
    "SOCK_NOTIFY_OP_DISABLE",
    "SOCK_NOTIFY_OP_ENABLE",
    "SOCK_NOTIFY_OP_NONE",
    "SOCK_NOTIFY_OP_REMOVE",
    "SOCK_NOTIFY_REGISTER_EVENT_HANGUP",
    "SOCK_NOTIFY_REGISTER_EVENT_IN",
    "SOCK_NOTIFY_REGISTER_EVENT_NONE",
    "SOCK_NOTIFY_REGISTER_EVENT_OUT",
    "SOCK_NOTIFY_REGISTRATION",
    "SOCK_NOTIFY_TRIGGER_EDGE",
    "SOCK_NOTIFY_TRIGGER_LEVEL",
    "SOCK_NOTIFY_TRIGGER_ONESHOT",
    "SOCK_NOTIFY_TRIGGER_PERSISTENT",
    "SOCK_RAW",
    "SOCK_RDM",
    "SOCK_SEQPACKET",
    "SOCK_STREAM",
    "SOL_IRLMP",
    "SOL_SOCKET",
    "SOMAXCONN",
    "SO_ACCEPTCONN",
    "SO_BROADCAST",
    "SO_BSP_STATE",
    "SO_COMPARTMENT_ID",
    "SO_CONDITIONAL_ACCEPT",
    "SO_CONNDATA",
    "SO_CONNDATALEN",
    "SO_CONNECT_TIME",
    "SO_CONNOPT",
    "SO_CONNOPTLEN",
    "SO_DEBUG",
    "SO_DISCDATA",
    "SO_DISCDATALEN",
    "SO_DISCOPT",
    "SO_DISCOPTLEN",
    "SO_DONTROUTE",
    "SO_ERROR",
    "SO_GROUP_ID",
    "SO_GROUP_PRIORITY",
    "SO_KEEPALIVE",
    "SO_LINGER",
    "SO_MAXDG",
    "SO_MAXPATHDG",
    "SO_MAX_MSG_SIZE",
    "SO_OOBINLINE",
    "SO_OPENTYPE",
    "SO_ORIGINAL_DST",
    "SO_PAUSE_ACCEPT",
    "SO_PORT_SCALABILITY",
    "SO_PROTOCOL_INFO",
    "SO_PROTOCOL_INFOA",
    "SO_PROTOCOL_INFOW",
    "SO_RANDOMIZE_PORT",
    "SO_RCVBUF",
    "SO_RCVLOWAT",
    "SO_RCVTIMEO",
    "SO_REUSEADDR",
    "SO_REUSE_MULTICASTPORT",
    "SO_REUSE_UNICASTPORT",
    "SO_SNDBUF",
    "SO_SNDLOWAT",
    "SO_SNDTIMEO",
    "SO_SYNCHRONOUS_ALERT",
    "SO_SYNCHRONOUS_NONALERT",
    "SO_TIMESTAMP",
    "SO_TIMESTAMP_ID",
    "SO_TYPE",
    "SO_UPDATE_ACCEPT_CONTEXT",
    "SO_UPDATE_CONNECT_CONTEXT",
    "SO_USELOOPBACK",
    "SYSTEM_CRITICAL_SOCKET",
    "SetAddrInfoExA",
    "SetAddrInfoExW",
    "SetServiceA",
    "SetServiceW",
    "SetSocketMediaStreamingMode",
    "TCPSTATE",
    "TCPSTATE_CLOSED",
    "TCPSTATE_CLOSE_WAIT",
    "TCPSTATE_CLOSING",
    "TCPSTATE_ESTABLISHED",
    "TCPSTATE_FIN_WAIT_1",
    "TCPSTATE_FIN_WAIT_2",
    "TCPSTATE_LAST_ACK",
    "TCPSTATE_LISTEN",
    "TCPSTATE_MAX",
    "TCPSTATE_SYN_RCVD",
    "TCPSTATE_SYN_SENT",
    "TCPSTATE_TIME_WAIT",
    "TCP_ACK_FREQUENCY_PARAMETERS",
    "TCP_ATMARK",
    "TCP_BSDURGENT",
    "TCP_CONGESTION_ALGORITHM",
    "TCP_DELAY_FIN_ACK",
    "TCP_EXPEDITED_1122",
    "TCP_FAIL_CONNECT_ON_ICMP_ERROR",
    "TCP_FASTOPEN",
    "TCP_HDR",
    "TCP_ICMP_ERROR_INFO",
    "TCP_ICW_LEVEL",
    "TCP_ICW_LEVEL_AGGRESSIVE",
    "TCP_ICW_LEVEL_COMPAT",
    "TCP_ICW_LEVEL_DEFAULT",
    "TCP_ICW_LEVEL_EXPERIMENTAL",
    "TCP_ICW_LEVEL_HIGH",
    "TCP_ICW_LEVEL_MAX",
    "TCP_ICW_LEVEL_VERY_HIGH",
    "TCP_ICW_PARAMETERS",
    "TCP_INFO_v0",
    "TCP_INFO_v1",
    "TCP_INITIAL_RTO_DEFAULT_MAX_SYN_RETRANSMISSIONS",
    "TCP_INITIAL_RTO_DEFAULT_RTT",
    "TCP_INITIAL_RTO_PARAMETERS",
    "TCP_KEEPALIVE",
    "TCP_KEEPCNT",
    "TCP_KEEPIDLE",
    "TCP_KEEPINTVL",
    "TCP_MAXRT",
    "TCP_MAXRTMS",
    "TCP_MAXSEG",
    "TCP_NODELAY",
    "TCP_NOSYNRETRIES",
    "TCP_NOURG",
    "TCP_OFFLOAD_NOT_PREFERRED",
    "TCP_OFFLOAD_NO_PREFERENCE",
    "TCP_OFFLOAD_PREFERENCE",
    "TCP_OFFLOAD_PREFERRED",
    "TCP_OPT_FASTOPEN",
    "TCP_OPT_MSS",
    "TCP_OPT_SACK",
    "TCP_OPT_SACK_PERMITTED",
    "TCP_OPT_TS",
    "TCP_OPT_UNKNOWN",
    "TCP_OPT_WS",
    "TCP_STDURG",
    "TCP_TIMESTAMPS",
    "TF_DISCONNECT",
    "TF_REUSE_SOCKET",
    "TF_USE_DEFAULT_WORKER",
    "TF_USE_KERNEL_APC",
    "TF_USE_SYSTEM_THREAD",
    "TF_WRITE_BEHIND",
    "TH_ACK",
    "TH_CWR",
    "TH_ECE",
    "TH_FIN",
    "TH_NETDEV",
    "TH_OPT_EOL",
    "TH_OPT_FASTOPEN",
    "TH_OPT_MSS",
    "TH_OPT_NOP",
    "TH_OPT_SACK",
    "TH_OPT_SACK_PERMITTED",
    "TH_OPT_TS",
    "TH_OPT_WS",
    "TH_PSH",
    "TH_RST",
    "TH_SYN",
    "TH_TAPI",
    "TH_URG",
    "TIMESTAMPING_CONFIG",
    "TIMESTAMPING_FLAG_RX",
    "TIMESTAMPING_FLAG_TX",
    "TIMEVAL",
    "TNS_PLAN_CARRIER_ID_CODE",
    "TNS_TYPE_NATIONAL",
    "TP_DISCONNECT",
    "TP_ELEMENT_EOP",
    "TP_ELEMENT_FILE",
    "TP_ELEMENT_MEMORY",
    "TP_REUSE_SOCKET",
    "TP_USE_DEFAULT_WORKER",
    "TP_USE_KERNEL_APC",
    "TP_USE_SYSTEM_THREAD",
    "TRANSMIT_FILE_BUFFERS",
    "TRANSMIT_PACKETS_ELEMENT",
    "TRANSPORT_SETTING_ID",
    "TR_END_TO_END",
    "TR_NOIND",
    "TR_NO_END_TO_END",
    "TT_CBR",
    "TT_NOIND",
    "TT_VBR",
    "TUNNEL_SUB_TYPE",
    "TUNNEL_SUB_TYPE_CP",
    "TUNNEL_SUB_TYPE_HA",
    "TUNNEL_SUB_TYPE_IPTLS",
    "TUNNEL_SUB_TYPE_NONE",
    "TransmitFile",
    "UDP_CHECKSUM_COVERAGE",
    "UDP_COALESCED_INFO",
    "UDP_NOCHECKSUM",
    "UDP_RECV_MAX_COALESCED_SIZE",
    "UDP_SEND_MSG_SIZE",
    "UNIX_PATH_MAX",
    "UP_P2MP",
    "UP_P2P",
    "VLAN_TAG",
    "VNSPROTO_IPC",
    "VNSPROTO_RELIABLE_IPC",
    "VNSPROTO_SPP",
    "WCE_AF_IRDA",
    "WCE_DEVICELIST",
    "WCE_IRDA_DEVICE_INFO",
    "WCE_PF_IRDA",
    "WINDOWS_AF_IRDA",
    "WINDOWS_DEVICELIST",
    "WINDOWS_IAS_QUERY",
    "WINDOWS_IAS_SET",
    "WINDOWS_IRDA_DEVICE_INFO",
    "WINDOWS_PF_IRDA",
    "WPUCompleteOverlappedRequest",
    "WSAAccept",
    "WSAAddressToStringA",
    "WSAAddressToStringW",
    "WSAAdvertiseProvider",
    "WSAAsyncGetHostByAddr",
    "WSAAsyncGetHostByName",
    "WSAAsyncGetProtoByName",
    "WSAAsyncGetProtoByNumber",
    "WSAAsyncGetServByName",
    "WSAAsyncGetServByPort",
    "WSAAsyncSelect",
    "WSABASEERR",
    "WSABUF",
    "WSACOMPLETION",
    "WSACOMPLETIONTYPE",
    "WSACancelAsyncRequest",
    "WSACancelBlockingCall",
    "WSACleanup",
    "WSACloseEvent",
    "WSAConnect",
    "WSAConnectByList",
    "WSAConnectByNameA",
    "WSAConnectByNameW",
    "WSACreateEvent",
    "WSADATA",
    "WSADESCRIPTION_LEN",
    "WSADeleteSocketPeerTargetName",
    "WSADuplicateSocketA",
    "WSADuplicateSocketW",
    "WSAEACCES",
    "WSAEADDRINUSE",
    "WSAEADDRNOTAVAIL",
    "WSAEAFNOSUPPORT",
    "WSAEALREADY",
    "WSAEBADF",
    "WSAECANCELLED",
    "WSAECOMPARATOR",
    "WSAECONNABORTED",
    "WSAECONNREFUSED",
    "WSAECONNRESET",
    "WSAEDESTADDRREQ",
    "WSAEDISCON",
    "WSAEDQUOT",
    "WSAEFAULT",
    "WSAEHOSTDOWN",
    "WSAEHOSTUNREACH",
    "WSAEINPROGRESS",
    "WSAEINTR",
    "WSAEINVAL",
    "WSAEINVALIDPROCTABLE",
    "WSAEINVALIDPROVIDER",
    "WSAEISCONN",
    "WSAELOOP",
    "WSAEMFILE",
    "WSAEMSGSIZE",
    "WSAENAMETOOLONG",
    "WSAENETDOWN",
    "WSAENETRESET",
    "WSAENETUNREACH",
    "WSAENOBUFS",
    "WSAENOMORE",
    "WSAENOPROTOOPT",
    "WSAENOTCONN",
    "WSAENOTEMPTY",
    "WSAENOTSOCK",
    "WSAEOPNOTSUPP",
    "WSAEPFNOSUPPORT",
    "WSAEPROCLIM",
    "WSAEPROTONOSUPPORT",
    "WSAEPROTOTYPE",
    "WSAEPROVIDERFAILEDINIT",
    "WSAEREFUSED",
    "WSAEREMOTE",
    "WSAESETSERVICEOP",
    "WSAESHUTDOWN",
    "WSAESOCKTNOSUPPORT",
    "WSAESTALE",
    "WSAETIMEDOUT",
    "WSAETOOMANYREFS",
    "WSAEUSERS",
    "WSAEWOULDBLOCK",
    "WSAEnumNameSpaceProvidersA",
    "WSAEnumNameSpaceProvidersExA",
    "WSAEnumNameSpaceProvidersExW",
    "WSAEnumNameSpaceProvidersW",
    "WSAEnumNetworkEvents",
    "WSAEnumProtocolsA",
    "WSAEnumProtocolsW",
    "WSAEventSelect",
    "WSAGetLastError",
    "WSAGetOverlappedResult",
    "WSAGetQOSByName",
    "WSAGetServiceClassInfoA",
    "WSAGetServiceClassInfoW",
    "WSAGetServiceClassNameByClassIdA",
    "WSAGetServiceClassNameByClassIdW",
    "WSAHOST_NOT_FOUND",
    "WSAHtonl",
    "WSAHtons",
    "WSAID_ACCEPTEX",
    "WSAID_CONNECTEX",
    "WSAID_DISCONNECTEX",
    "WSAID_GETACCEPTEXSOCKADDRS",
    "WSAID_TRANSMITFILE",
    "WSAID_TRANSMITPACKETS",
    "WSAID_WSAPOLL",
    "WSAID_WSARECVMSG",
    "WSAImpersonateSocketPeer",
    "WSAInstallServiceClassA",
    "WSAInstallServiceClassW",
    "WSAIoctl",
    "WSAIsBlocking",
    "WSAJoinLeaf",
    "WSALookupServiceBeginA",
    "WSALookupServiceBeginW",
    "WSALookupServiceEnd",
    "WSALookupServiceNextA",
    "WSALookupServiceNextW",
    "WSAMSG",
    "WSANAMESPACE_INFOA",
    "WSANAMESPACE_INFOEXA",
    "WSANAMESPACE_INFOEXW",
    "WSANAMESPACE_INFOW",
    "WSANETWORKEVENTS",
    "WSANOTINITIALISED",
    "WSANO_DATA",
    "WSANO_RECOVERY",
    "WSANSCLASSINFOA",
    "WSANSCLASSINFOW",
    "WSANSPIoctl",
    "WSANtohl",
    "WSANtohs",
    "WSAPOLLDATA",
    "WSAPOLLFD",
    "WSAPROTOCOLCHAIN",
    "WSAPROTOCOL_INFOA",
    "WSAPROTOCOL_INFOW",
    "WSAPROTOCOL_LEN",
    "WSAPoll",
    "WSAProviderCompleteAsyncCall",
    "WSAProviderConfigChange",
    "WSAQUERYSET2A",
    "WSAQUERYSET2W",
    "WSAQUERYSETA",
    "WSAQUERYSETW",
    "WSAQuerySocketSecurity",
    "WSARecv",
    "WSARecvDisconnect",
    "WSARecvEx",
    "WSARecvFrom",
    "WSARemoveServiceClass",
    "WSAResetEvent",
    "WSARevertImpersonation",
    "WSASENDMSG",
    "WSASERVICECLASSINFOA",
    "WSASERVICECLASSINFOW",
    "WSASERVICE_NOT_FOUND",
    "WSASYSCALLFAILURE",
    "WSASYSNOTREADY",
    "WSASYS_STATUS_LEN",
    "WSASend",
    "WSASendDisconnect",
    "WSASendMsg",
    "WSASendTo",
    "WSASetBlockingHook",
    "WSASetEvent",
    "WSASetLastError",
    "WSASetServiceA",
    "WSASetServiceW",
    "WSASetSocketPeerTargetName",
    "WSASetSocketSecurity",
    "WSASocketA",
    "WSASocketW",
    "WSAStartup",
    "WSAStringToAddressA",
    "WSAStringToAddressW",
    "WSATHREADID",
    "WSATRY_AGAIN",
    "WSATYPE_NOT_FOUND",
    "WSAUnadvertiseProvider",
    "WSAUnhookBlockingHook",
    "WSAVERNOTSUPPORTED",
    "WSAVERSION",
    "WSAWaitForMultipleEvents",
    "WSA_COMPATIBILITY_BEHAVIOR_ID",
    "WSA_COMPATIBILITY_BEHAVIOR_ID_WsaBehaviorAll",
    "WSA_COMPATIBILITY_BEHAVIOR_ID_WsaBehaviorAutoTuning",
    "WSA_COMPATIBILITY_BEHAVIOR_ID_WsaBehaviorReceiveBuffering",
    "WSA_COMPATIBILITY_MODE",
    "WSA_ERROR",
    "WSA_E_CANCELLED",
    "WSA_E_NO_MORE",
    "WSA_FLAG_ACCESS_SYSTEM_SECURITY",
    "WSA_FLAG_MULTIPOINT_C_LEAF",
    "WSA_FLAG_MULTIPOINT_C_ROOT",
    "WSA_FLAG_MULTIPOINT_D_LEAF",
    "WSA_FLAG_MULTIPOINT_D_ROOT",
    "WSA_FLAG_NO_HANDLE_INHERIT",
    "WSA_FLAG_OVERLAPPED",
    "WSA_FLAG_REGISTERED_IO",
    "WSA_INFINITE",
    "WSA_INVALID_HANDLE",
    "WSA_INVALID_PARAMETER",
    "WSA_IO_INCOMPLETE",
    "WSA_IO_PENDING",
    "WSA_IPSEC_NAME_POLICY_ERROR",
    "WSA_MAXIMUM_WAIT_EVENTS",
    "WSA_NOT_ENOUGH_MEMORY",
    "WSA_OPERATION_ABORTED",
    "WSA_QOS_ADMISSION_FAILURE",
    "WSA_QOS_BAD_OBJECT",
    "WSA_QOS_BAD_STYLE",
    "WSA_QOS_EFILTERCOUNT",
    "WSA_QOS_EFILTERSTYLE",
    "WSA_QOS_EFILTERTYPE",
    "WSA_QOS_EFLOWCOUNT",
    "WSA_QOS_EFLOWDESC",
    "WSA_QOS_EFLOWSPEC",
    "WSA_QOS_EOBJLENGTH",
    "WSA_QOS_EPOLICYOBJ",
    "WSA_QOS_EPROVSPECBUF",
    "WSA_QOS_EPSFILTERSPEC",
    "WSA_QOS_EPSFLOWSPEC",
    "WSA_QOS_ESDMODEOBJ",
    "WSA_QOS_ESERVICETYPE",
    "WSA_QOS_ESHAPERATEOBJ",
    "WSA_QOS_EUNKOWNPSOBJ",
    "WSA_QOS_GENERIC_ERROR",
    "WSA_QOS_NO_RECEIVERS",
    "WSA_QOS_NO_SENDERS",
    "WSA_QOS_POLICY_FAILURE",
    "WSA_QOS_RECEIVERS",
    "WSA_QOS_REQUEST_CONFIRMED",
    "WSA_QOS_RESERVED_PETYPE",
    "WSA_QOS_SENDERS",
    "WSA_QOS_TRAFFIC_CTRL_ERROR",
    "WSA_SECURE_HOST_NOT_FOUND",
    "WSA_WAIT_EVENT_0",
    "WSA_WAIT_FAILED",
    "WSA_WAIT_IO_COMPLETION",
    "WSA_WAIT_TIMEOUT",
    "WSCDeinstallProvider",
    "WSCDeinstallProvider32",
    "WSCEnableNSProvider",
    "WSCEnableNSProvider32",
    "WSCEnumNameSpaceProviders32",
    "WSCEnumNameSpaceProvidersEx32",
    "WSCEnumProtocols",
    "WSCEnumProtocols32",
    "WSCGetApplicationCategory",
    "WSCGetProviderInfo",
    "WSCGetProviderInfo32",
    "WSCGetProviderPath",
    "WSCGetProviderPath32",
    "WSCInstallNameSpace",
    "WSCInstallNameSpace32",
    "WSCInstallNameSpaceEx",
    "WSCInstallNameSpaceEx32",
    "WSCInstallProvider",
    "WSCInstallProvider64_32",
    "WSCInstallProviderAndChains64_32",
    "WSCSetApplicationCategory",
    "WSCSetProviderInfo",
    "WSCSetProviderInfo32",
    "WSCUnInstallNameSpace",
    "WSCUnInstallNameSpace32",
    "WSCUpdateProvider",
    "WSCUpdateProvider32",
    "WSCWriteNameSpaceOrder",
    "WSCWriteNameSpaceOrder32",
    "WSCWriteProviderOrder",
    "WSCWriteProviderOrder32",
    "WSC_PROVIDER_AUDIT_INFO",
    "WSC_PROVIDER_INFO_TYPE",
    "WSC_PROVIDER_INFO_TYPE_ProviderInfoAudit",
    "WSC_PROVIDER_INFO_TYPE_ProviderInfoLspCategories",
    "WSK_SO_BASE",
    "WSPDATA",
    "WSPDESCRIPTION_LEN",
    "WSPPROC_TABLE",
    "WSPUPCALLTABLE",
    "WSS_OPERATION_IN_PROGRESS",
    "XP1_CONNECTIONLESS",
    "XP1_CONNECT_DATA",
    "XP1_DISCONNECT_DATA",
    "XP1_EXPEDITED_DATA",
    "XP1_GRACEFUL_CLOSE",
    "XP1_GUARANTEED_DELIVERY",
    "XP1_GUARANTEED_ORDER",
    "XP1_IFS_HANDLES",
    "XP1_INTERRUPT",
    "XP1_MESSAGE_ORIENTED",
    "XP1_MULTIPOINT_CONTROL_PLANE",
    "XP1_MULTIPOINT_DATA_PLANE",
    "XP1_PARTIAL_MESSAGE",
    "XP1_PSEUDO_STREAM",
    "XP1_QOS_SUPPORTED",
    "XP1_SAN_SUPPORT_SDP",
    "XP1_SUPPORT_BROADCAST",
    "XP1_SUPPORT_MULTIPOINT",
    "XP1_UNI_RECV",
    "XP1_UNI_SEND",
    "XP_BANDWIDTH_ALLOCATION",
    "XP_CONNECTIONLESS",
    "XP_CONNECT_DATA",
    "XP_DISCONNECT_DATA",
    "XP_ENCRYPTS",
    "XP_EXPEDITED_DATA",
    "XP_FRAGMENTATION",
    "XP_GRACEFUL_CLOSE",
    "XP_GUARANTEED_DELIVERY",
    "XP_GUARANTEED_ORDER",
    "XP_MESSAGE_ORIENTED",
    "XP_PSEUDO_STREAM",
    "XP_SUPPORTS_BROADCAST",
    "XP_SUPPORTS_MULTICAST",
    "_BIG_ENDIAN",
    "_LITTLE_ENDIAN",
    "_PDP_ENDIAN",
    "_SS_MAXSIZE",
    "__WSAFDIsSet",
    "accept",
    "bind",
    "closesocket",
    "connect",
    "eWINDOW_ADVANCE_METHOD",
    "freeaddrinfo",
    "getaddrinfo",
    "gethostbyaddr",
    "gethostbyname",
    "gethostname",
    "getnameinfo",
    "getpeername",
    "getprotobyname",
    "getprotobynumber",
    "getservbyname",
    "getservbyport",
    "getsockname",
    "getsockopt",
    "htonl",
    "htons",
    "inet_addr",
    "inet_ntoa",
    "inet_ntop",
    "inet_pton",
    "ioctlsocket",
    "listen",
    "netent",
    "ntohl",
    "ntohs",
    "recv",
    "recvfrom",
    "select",
    "send",
    "sendto",
    "setsockopt",
    "shutdown",
    "sockaddr_gen",
    "sockaddr_in6_old",
    "socket",
    "sockproto",
    "tcp_keepalive",
]
