from ctypes import c_void_p, Structure, Union, POINTER, CFUNCTYPE, WINFUNCTYPE, cdll, windll
from win32more.base import MissingType, c_char_p_no, c_wchar_p_no, Byte, SByte, Char, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Single, Double, String, Boolean, Void, Guid, COMMETHOD, SUCCEEDED, FAILED
import win32more.Foundation
import win32more.Graphics.Gdi
import win32more.Networking.Clustering
import win32more.Security
import win32more.System.Com
import win32more.System.Registry
import win32more.UI.WindowsAndMessaging
import sys
_module = sys.modules[__name__]
def __getattr__(name):
    try:
        f = globals()[f'_define_{name}']
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    setattr(_module, name, f())
    return getattr(_module, name)
def __dir__():
    return __all__
def _define__HCHANGE_head():
    class _HCHANGE(Structure):
        pass
    return _HCHANGE
def _define__HCHANGE():
    _HCHANGE = win32more.Networking.Clustering._HCHANGE_head
    return _HCHANGE
def _define__HCLUSCRYPTPROVIDER_head():
    class _HCLUSCRYPTPROVIDER(Structure):
        pass
    return _HCLUSCRYPTPROVIDER
def _define__HCLUSCRYPTPROVIDER():
    _HCLUSCRYPTPROVIDER = win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head
    return _HCLUSCRYPTPROVIDER
def _define__HCLUSENUM_head():
    class _HCLUSENUM(Structure):
        pass
    return _HCLUSENUM
def _define__HCLUSENUM():
    _HCLUSENUM = win32more.Networking.Clustering._HCLUSENUM_head
    return _HCLUSENUM
def _define__HCLUSENUMEX_head():
    class _HCLUSENUMEX(Structure):
        pass
    return _HCLUSENUMEX
def _define__HCLUSENUMEX():
    _HCLUSENUMEX = win32more.Networking.Clustering._HCLUSENUMEX_head
    return _HCLUSENUMEX
def _define__HCLUSTER_head():
    class _HCLUSTER(Structure):
        pass
    return _HCLUSTER
def _define__HCLUSTER():
    _HCLUSTER = win32more.Networking.Clustering._HCLUSTER_head
    return _HCLUSTER
def _define__HGROUP_head():
    class _HGROUP(Structure):
        pass
    return _HGROUP
def _define__HGROUP():
    _HGROUP = win32more.Networking.Clustering._HGROUP_head
    return _HGROUP
def _define__HGROUPENUM_head():
    class _HGROUPENUM(Structure):
        pass
    return _HGROUPENUM
def _define__HGROUPENUM():
    _HGROUPENUM = win32more.Networking.Clustering._HGROUPENUM_head
    return _HGROUPENUM
def _define__HGROUPENUMEX_head():
    class _HGROUPENUMEX(Structure):
        pass
    return _HGROUPENUMEX
def _define__HGROUPENUMEX():
    _HGROUPENUMEX = win32more.Networking.Clustering._HGROUPENUMEX_head
    return _HGROUPENUMEX
def _define__HGROUPSET_head():
    class _HGROUPSET(Structure):
        pass
    return _HGROUPSET
def _define__HGROUPSET():
    _HGROUPSET = win32more.Networking.Clustering._HGROUPSET_head
    return _HGROUPSET
def _define__HGROUPSETENUM_head():
    class _HGROUPSETENUM(Structure):
        pass
    return _HGROUPSETENUM
def _define__HGROUPSETENUM():
    _HGROUPSETENUM = win32more.Networking.Clustering._HGROUPSETENUM_head
    return _HGROUPSETENUM
def _define__HNETINTERFACE_head():
    class _HNETINTERFACE(Structure):
        pass
    return _HNETINTERFACE
def _define__HNETINTERFACE():
    _HNETINTERFACE = win32more.Networking.Clustering._HNETINTERFACE_head
    return _HNETINTERFACE
def _define__HNETINTERFACEENUM_head():
    class _HNETINTERFACEENUM(Structure):
        pass
    return _HNETINTERFACEENUM
def _define__HNETINTERFACEENUM():
    _HNETINTERFACEENUM = win32more.Networking.Clustering._HNETINTERFACEENUM_head
    return _HNETINTERFACEENUM
def _define__HNETWORK_head():
    class _HNETWORK(Structure):
        pass
    return _HNETWORK
def _define__HNETWORK():
    _HNETWORK = win32more.Networking.Clustering._HNETWORK_head
    return _HNETWORK
def _define__HNETWORKENUM_head():
    class _HNETWORKENUM(Structure):
        pass
    return _HNETWORKENUM
def _define__HNETWORKENUM():
    _HNETWORKENUM = win32more.Networking.Clustering._HNETWORKENUM_head
    return _HNETWORKENUM
def _define__HNODE_head():
    class _HNODE(Structure):
        pass
    return _HNODE
def _define__HNODE():
    _HNODE = win32more.Networking.Clustering._HNODE_head
    return _HNODE
def _define__HNODEENUM_head():
    class _HNODEENUM(Structure):
        pass
    return _HNODEENUM
def _define__HNODEENUM():
    _HNODEENUM = win32more.Networking.Clustering._HNODEENUM_head
    return _HNODEENUM
def _define__HNODEENUMEX_head():
    class _HNODEENUMEX(Structure):
        pass
    return _HNODEENUMEX
def _define__HNODEENUMEX():
    _HNODEENUMEX = win32more.Networking.Clustering._HNODEENUMEX_head
    return _HNODEENUMEX
def _define__HREGBATCH_head():
    class _HREGBATCH(Structure):
        pass
    return _HREGBATCH
def _define__HREGBATCH():
    _HREGBATCH = win32more.Networking.Clustering._HREGBATCH_head
    return _HREGBATCH
def _define__HREGBATCHNOTIFICATION_head():
    class _HREGBATCHNOTIFICATION(Structure):
        pass
    return _HREGBATCHNOTIFICATION
def _define__HREGBATCHNOTIFICATION():
    _HREGBATCHNOTIFICATION = win32more.Networking.Clustering._HREGBATCHNOTIFICATION_head
    return _HREGBATCHNOTIFICATION
def _define__HREGBATCHPORT_head():
    class _HREGBATCHPORT(Structure):
        pass
    return _HREGBATCHPORT
def _define__HREGBATCHPORT():
    _HREGBATCHPORT = win32more.Networking.Clustering._HREGBATCHPORT_head
    return _HREGBATCHPORT
def _define__HREGREADBATCH_head():
    class _HREGREADBATCH(Structure):
        pass
    return _HREGREADBATCH
def _define__HREGREADBATCH():
    _HREGREADBATCH = win32more.Networking.Clustering._HREGREADBATCH_head
    return _HREGREADBATCH
def _define__HREGREADBATCHREPLY_head():
    class _HREGREADBATCHREPLY(Structure):
        pass
    return _HREGREADBATCHREPLY
def _define__HREGREADBATCHREPLY():
    _HREGREADBATCHREPLY = win32more.Networking.Clustering._HREGREADBATCHREPLY_head
    return _HREGREADBATCHREPLY
def _define__HRESENUM_head():
    class _HRESENUM(Structure):
        pass
    return _HRESENUM
def _define__HRESENUM():
    _HRESENUM = win32more.Networking.Clustering._HRESENUM_head
    return _HRESENUM
def _define__HRESENUMEX_head():
    class _HRESENUMEX(Structure):
        pass
    return _HRESENUMEX
def _define__HRESENUMEX():
    _HRESENUMEX = win32more.Networking.Clustering._HRESENUMEX_head
    return _HRESENUMEX
def _define__HRESOURCE_head():
    class _HRESOURCE(Structure):
        pass
    return _HRESOURCE
def _define__HRESOURCE():
    _HRESOURCE = win32more.Networking.Clustering._HRESOURCE_head
    return _HRESOURCE
def _define__HRESTYPEENUM_head():
    class _HRESTYPEENUM(Structure):
        pass
    return _HRESTYPEENUM
def _define__HRESTYPEENUM():
    _HRESTYPEENUM = win32more.Networking.Clustering._HRESTYPEENUM_head
    return _HRESTYPEENUM
CLUSTER_VERSION_FLAG_MIXED_MODE = 1
CLUSTER_VERSION_UNKNOWN = 4294967295
NT4_MAJOR_VERSION = 1
NT4SP4_MAJOR_VERSION = 2
NT5_MAJOR_VERSION = 3
NT51_MAJOR_VERSION = 4
NT6_MAJOR_VERSION = 5
NT7_MAJOR_VERSION = 6
NT8_MAJOR_VERSION = 7
NT9_MAJOR_VERSION = 8
NT10_MAJOR_VERSION = 9
NT11_MAJOR_VERSION = 10
NT12_MAJOR_VERSION = 11
NT13_MAJOR_VERSION = 12
WS2016_TP4_UPGRADE_VERSION = 6
WS2016_TP5_UPGRADE_VERSION = 7
WS2016_RTM_UPGRADE_VERSION = 8
RS3_UPGRADE_VERSION = 1
RS4_UPGRADE_VERSION = 2
RS5_UPGRADE_VERSION = 3
NINETEEN_H1_UPGRADE_VERSION = 1
NINETEEN_H2_UPGRADE_VERSION = 2
MN_UPGRADE_VERSION = 3
FE_UPGRADE_VERSION = 4
CA_UPGRADE_VERSION = 1
HCI_UPGRADE_BIT = 32768
CLUSREG_NAME_MIXED_MODE = 'MixedMode'
CLUSAPI_VERSION_SERVER2008 = 1536
CLUSAPI_VERSION_SERVER2008R2 = 1792
CLUSAPI_VERSION_WINDOWS8 = 1793
CLUSAPI_VERSION_WINDOWSBLUE = 1794
CLUSAPI_VERSION_WINTHRESHOLD = 1795
CLUSAPI_VERSION_RS3 = 2560
CLUSAPI_VERSION = 2560
CREATE_CLUSTER_VERSION = 1536
CREATE_CLUSTER_MAJOR_VERSION_MASK = 4294967040
MAX_CLUSTERNAME_LENGTH = 63
CLUSTER_INSTALLED = 1
CLUSTER_CONFIGURED = 2
CLUSTER_RUNNING = 16
CLUS_HYBRID_QUORUM = 1024
CLUS_NODE_MAJORITY_QUORUM = 0
CLUSCTL_RESOURCE_STATE_CHANGE_REASON_VERSION_1 = 1
CLUSREG_DATABASE_SYNC_WRITE_TO_ALL_NODES = 1
CLUSREG_DATABASE_ISOLATE_READ = 2
CLUSTER_ENUM_ITEM_VERSION_1 = 1
CLUSTER_ENUM_ITEM_VERSION = 1
CLUSTER_CREATE_GROUP_INFO_VERSION_1 = 1
CLUSTER_CREATE_GROUP_INFO_VERSION = 1
GROUPSET_READY_SETTING_DELAY = 1
GROUPSET_READY_SETTING_ONLINE = 2
GROUPSET_READY_SETTING_OS_HEARTBEAT = 3
GROUPSET_READY_SETTING_APPLICATION_READY = 4
CLUS_GRP_MOVE_ALLOWED = 0
CLUS_GRP_MOVE_LOCKED = 1
CLUSAPI_READ_ACCESS = 1
CLUSAPI_CHANGE_ACCESS = 2
CLUSAPI_NO_ACCESS = 4
CLUSTER_SET_ACCESS_TYPE_ALLOWED = 0
CLUSTER_SET_ACCESS_TYPE_DENIED = 1
CLUSTER_DELETE_ACCESS_CONTROL_ENTRY = 2
CLUSGROUPSET_STATUS_GROUPS_PENDING = 1
CLUSGROUPSET_STATUS_GROUPS_ONLINE = 2
CLUSGROUPSET_STATUS_OS_HEARTBEAT = 4
CLUSGROUPSET_STATUS_APPLICATION_READY = 8
CLUSTER_AVAILABILITY_SET_CONFIG_V1 = 1
CLUSTER_GROUP_ENUM_ITEM_VERSION_1 = 1
CLUSTER_GROUP_ENUM_ITEM_VERSION = 1
CLUSTER_RESOURCE_ENUM_ITEM_VERSION_1 = 1
CLUSTER_RESOURCE_ENUM_ITEM_VERSION = 1
CLUSAPI_NODE_PAUSE_REMAIN_ON_PAUSED_NODE_ON_MOVE_ERROR = 1
CLUSAPI_NODE_AVOID_PLACEMENT = 2
CLUSAPI_NODE_PAUSE_RETRY_DRAIN_ON_FAILURE = 4
CLUSGRP_STATUS_LOCKED_MODE = 1
CLUSGRP_STATUS_PREEMPTED = 2
CLUSGRP_STATUS_WAITING_IN_QUEUE_FOR_MOVE = 4
CLUSGRP_STATUS_PHYSICAL_RESOURCES_LACKING = 8
CLUSGRP_STATUS_WAITING_TO_START = 16
CLUSGRP_STATUS_EMBEDDED_FAILURE = 32
CLUSGRP_STATUS_OFFLINE_DUE_TO_ANTIAFFINITY_CONFLICT = 64
CLUSGRP_STATUS_NETWORK_FAILURE = 128
CLUSGRP_STATUS_UNMONITORED = 256
CLUSGRP_STATUS_OS_HEARTBEAT = 512
CLUSGRP_STATUS_APPLICATION_READY = 1024
CLUSGRP_STATUS_OFFLINE_NOT_LOCAL_DISK_OWNER = 2048
CLUSGRP_STATUS_WAITING_FOR_DEPENDENCIES = 4096
CLUSRES_STATUS_LOCKED_MODE = 1
CLUSRES_STATUS_EMBEDDED_FAILURE = 2
CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_CPU = 4
CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_MEMORY = 8
CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_GENERIC_RESOURCES = 16
CLUSRES_STATUS_NETWORK_FAILURE = 32
CLUSRES_STATUS_UNMONITORED = 64
CLUSRES_STATUS_OS_HEARTBEAT = 128
CLUSRES_STATUS_APPLICATION_READY = 256
CLUSRES_STATUS_OFFLINE_NOT_LOCAL_DISK_OWNER = 512
CLUSAPI_GROUP_ONLINE_IGNORE_RESOURCE_STATUS = 1
CLUSAPI_GROUP_ONLINE_SYNCHRONOUS = 2
CLUSAPI_GROUP_ONLINE_BEST_POSSIBLE_NODE = 4
CLUSAPI_GROUP_ONLINE_IGNORE_AFFINITY_RULE = 8
CLUSAPI_GROUP_OFFLINE_IGNORE_RESOURCE_STATUS = 1
CLUSAPI_RESOURCE_ONLINE_IGNORE_RESOURCE_STATUS = 1
CLUSAPI_RESOURCE_ONLINE_DO_NOT_UPDATE_PERSISTENT_STATE = 2
CLUSAPI_RESOURCE_ONLINE_NECESSARY_FOR_QUORUM = 4
CLUSAPI_RESOURCE_ONLINE_BEST_POSSIBLE_NODE = 8
CLUSAPI_RESOURCE_ONLINE_IGNORE_AFFINITY_RULE = 32
CLUSAPI_RESOURCE_OFFLINE_IGNORE_RESOURCE_STATUS = 1
CLUSAPI_RESOURCE_OFFLINE_FORCE_WITH_TERMINATION = 2
CLUSAPI_RESOURCE_OFFLINE_DO_NOT_UPDATE_PERSISTENT_STATE = 4
CLUSAPI_RESOURCE_OFFLINE_REASON_NONE = 0
CLUSAPI_RESOURCE_OFFLINE_REASON_UNKNOWN = 1
CLUSAPI_RESOURCE_OFFLINE_REASON_MOVING = 2
CLUSAPI_RESOURCE_OFFLINE_REASON_USER_REQUESTED = 4
CLUSAPI_RESOURCE_OFFLINE_REASON_BEING_DELETED = 8
CLUSAPI_RESOURCE_OFFLINE_REASON_BEING_RESTARTED = 16
CLUSAPI_RESOURCE_OFFLINE_REASON_PREEMPTED = 32
CLUSAPI_RESOURCE_OFFLINE_REASON_SHUTTING_DOWN = 64
CLUSAPI_GROUP_MOVE_IGNORE_RESOURCE_STATUS = 1
CLUSAPI_GROUP_MOVE_RETURN_TO_SOURCE_NODE_ON_ERROR = 2
CLUSAPI_GROUP_MOVE_QUEUE_ENABLED = 4
CLUSAPI_GROUP_MOVE_HIGH_PRIORITY_START = 8
CLUSAPI_GROUP_MOVE_FAILBACK = 16
CLUSAPI_GROUP_MOVE_IGNORE_AFFINITY_RULE = 32
CLUSAPI_CHANGE_RESOURCE_GROUP_FORCE_MOVE_TO_CSV = 1
CLUSAPI_VALID_CHANGE_RESOURCE_GROUP_FLAGS = 1
GROUP_FAILURE_INFO_VERSION_1 = 1
RESOURCE_FAILURE_INFO_VERSION_1 = 1
CLUS_ACCESS_ANY = 0
CLUS_ACCESS_READ = 1
CLUS_ACCESS_WRITE = 2
CLUS_NO_MODIFY = 0
CLUS_MODIFY = 1
CLUS_NOT_GLOBAL = 0
CLUS_GLOBAL = 1
CLUSCTL_ACCESS_SHIFT = 0
CLUSCTL_FUNCTION_SHIFT = 2
CLCTL_INTERNAL_SHIFT = 20
CLCTL_USER_SHIFT = 21
CLCTL_MODIFY_SHIFT = 22
CLCTL_GLOBAL_SHIFT = 23
CLUSCTL_OBJECT_SHIFT = 24
CLUSCTL_CONTROL_CODE_MASK = 4194303
CLUSCTL_OBJECT_MASK = 255
CLUSCTL_ACCESS_MODE_MASK = 3
CLCTL_CLUSTER_BASE = 0
BitLockerEnabled = 1
BitLockerDecrypted = 4
BitlockerEncrypted = 8
BitLockerDecrypting = 16
BitlockerEncrypting = 32
BitLockerPaused = 64
BitLockerStopped = 128
RedirectedIOReasonUserRequest = 1
RedirectedIOReasonUnsafeFileSystemFilter = 2
RedirectedIOReasonUnsafeVolumeFilter = 4
RedirectedIOReasonFileSystemTiering = 8
RedirectedIOReasonBitLockerInitializing = 16
RedirectedIOReasonReFs = 32
RedirectedIOReasonMax = 9223372036854775808
VolumeRedirectedIOReasonNoDiskConnectivity = 1
VolumeRedirectedIOReasonStorageSpaceNotAttached = 2
VolumeRedirectedIOReasonVolumeReplicationEnabled = 4
VolumeRedirectedIOReasonMax = 9223372036854775808
MAX_OBJECTID = 64
MAX_CO_PASSWORD_LENGTH = 16
GUID_PRESENT = 1
CREATEDC_PRESENT = 2
MAX_CO_PASSWORD_LENGTHEX = 127
MAX_CO_PASSWORD_STORAGEEX = 128
MAX_CREATINGDC_LENGTH = 256
DNS_LENGTH = 64
MAINTENANCE_MODE_V2_SIG = 2881155087
NNLEN = 80
CLUS_RESTYPE_NAME_GENAPP = 'Generic Application'
CLUS_RESTYPE_NAME_GENSVC = 'Generic Service'
CLUS_RESTYPE_NAME_GENSCRIPT = 'Generic Script'
CLUS_RESTYPE_NAME_IPADDR = 'IP Address'
CLUS_RESTYPE_NAME_NETNAME = 'Network Name'
CLUS_RESTYPE_NAME_DNN = 'Distributed Network Name'
CLUS_RESTYPE_NAME_FILESHR = 'File Share'
CLUS_RESTYPE_NAME_PRTSPLR = 'Print Spooler'
CLUS_RESTYPE_NAME_IPV6_NATIVE = 'IPv6 Address'
CLUS_RESTYPE_NAME_IPV6_TUNNEL = 'IPv6 Tunnel Address'
CLUS_RESTYPE_NAME_VSSTASK = 'Volume Shadow Copy Service Task'
CLUS_RESTYPE_NAME_WINS = 'WINS Service'
CLUS_RESTYPE_NAME_DHCP = 'DHCP Service'
CLUS_RESTYPE_NAME_MSMQ = 'Microsoft Message Queue Server'
CLUS_RESTYPE_NAME_NEW_MSMQ = 'MSMQ'
CLUS_RESTYPE_NAME_MSMQ_TRIGGER = 'MSMQTriggers'
CLUS_RESTYPE_NAME_MSDTC = 'Distributed Transaction Coordinator'
CLUS_RESTYPE_NAME_NFS = 'NFS Share'
CLUS_RESTYPE_NAME_NETWORK_FILE_SYSTEM = 'Network File System'
CLUS_RESTYPE_NAME_ISNS = 'Microsoft iSNS'
CLUS_RESTYPE_NAME_HARDDISK = 'Physical Disk'
CLUS_RESTYPE_NAME_PHYS_DISK = 'Physical Disk'
CLUS_RESTYPE_NAME_FSWITNESS = 'File Share Witness'
CLUS_RESTYPE_NAME_FILESERVER = 'File Server'
CLUS_RESTYPE_NAME_SODAFILESERVER = 'Scale Out File Server'
CLUS_RESTYPE_NAME_DFS = 'Distributed File System'
CLUS_RESTYPE_NAME_DFSR = 'DFS Replicated Folder'
CLUS_RESTYPE_NAME_VM = 'Virtual Machine'
CLUS_RESTYPE_NAME_VM_CONFIG = 'Virtual Machine Configuration'
CLUS_RESTYPE_NAME_ISCSITARGET = 'iSCSI Target Server'
CLUS_RESTYPE_NAME_STORAGE_POOL = 'Storage Pool'
CLUS_RESTYPE_NAME_TASKSCHEDULER = 'Task Scheduler'
CLUS_RESTYPE_NAME_VMREPLICA_BROKER = 'Virtual Machine Replication Broker'
CLUS_RESTYPE_NAME_VMREPLICA_COORDINATOR = 'Virtual Machine Replication Coordinator'
CLUS_RESTYPE_NAME_NFS_V2 = 'Network File System'
CLUS_RESTYPE_NAME_NFS_MSNS = 'NFS Multi Server Namespace'
CLUS_RESTYPE_NAME_CAU = 'ClusterAwareUpdatingResource'
CLUS_RESTYPE_NAME_NV_PROVIDER_ADDRESS = 'Provider Address'
CLUS_RESTYPE_NAME_NAT = 'Nat'
CLUS_RESTYPE_NAME_STORAGE_POLICIES = 'Storage Policies'
CLUS_RESTYPE_NAME_STORQOS = 'Storage QoS Policy Manager'
CLUS_RESTYPE_NAME_HEALTH_SERVICE = 'Health Service'
CLUS_RESTYPE_NAME_VM_WMI = 'Virtual Machine Cluster WMI'
CLUS_RESTYPE_NAME_SDDC_MANAGEMENT = 'SDDC Management'
CLUS_RESTYPE_NAME_HCSVM = 'HCS Virtual Machine'
CLUS_RESTYPE_NAME_VIRTUAL_IPV4 = 'Disjoint IPv4 Address'
CLUS_RESTYPE_NAME_VIRTUAL_IPV6 = 'Disjoint IPv6 Address'
CLUS_RESTYPE_NAME_CLOUD_WITNESS = 'Cloud Witness'
CLUS_RESTYPE_NAME_STORAGE_REPLICA = 'Storage Replica'
CLUS_RESTYPE_NAME_CROSS_CLUSTER = 'Cross Cluster Dependency Orchestrator'
CLUS_RESTYPE_NAME_SCALEOUT_MASTER = 'Scaleout Master'
CLUS_RESTYPE_NAME_SCALEOUT_WORKER = 'Scaleout Worker'
CLUS_RESTYPE_NAME_CONTAINER = 'Container'
CLUS_RES_NAME_SCALEOUT_MASTER = 'Scaleout Master'
CLUS_RES_NAME_SCALEOUT_WORKER = 'Scaleout Worker'
CLUSREG_NAME_CLUS_DESC = 'Description'
CLUSREG_NAME_CLUS_SD = 'Security Descriptor'
CLUSREG_NAME_CLUS_DEFAULT_NETWORK_ROLE = 'DefaultNetworkRole'
CLUSREG_NAME_QUORUM_ARBITRATION_TIMEOUT = 'QuorumArbitrationTimeMax'
CLUSTER_HANG_TIMEOUT_KEYNAME = 'ClusSvcHangTimeout'
CLUSTER_HANG_RECOVERY_ACTION_KEYNAME = 'HangRecoveryAction'
CLUSTER_CSA_VSS_STATE = 'BackupInProgress'
CLUSTER_REQUEST_REPLY_TIMEOUT = 'RequestReplyTimeout'
CLUSTER_WITNESS_FAILED_RESTART_INTERVAL = 'WitnessRestartInterval'
CLUSTER_WITNESS_DATABASE_WRITE_TIMEOUT = 'WitnessDatabaseWriteTimeout'
CLUSTER_ADD_EVICT_DELAY = 'AddEvictDelay'
CLUSREG_NAME_FIXQUORUM = 'FixQuorum'
CLUSREG_NAME_PREVENTQUORUM = 'PreventQuorum'
CLUSREG_NAME_IGNORE_PERSISTENT_STATE = 'IgnorePersistentStateOnStartup'
CLUSTER_SHARED_VOLUMES_ROOT = 'SharedVolumesRoot'
ENABLE_CLUSTER_SHARED_VOLUMES = 'EnableSharedVolumes'
CLUSTER_SHARED_VOLUME_VSS_WRITER_OPERATION_TIMEOUT = 'SharedVolumeVssWriterOperationTimeout'
USE_CLIENT_ACCESS_NETWORKS_FOR_CSV = 'UseClientAccessNetworksForSharedVolumes'
CLUSTER_CSV_COMPATIBLE_FILTERS = 'SharedVolumeCompatibleFilters'
CLUSTER_CSV_INCOMPATIBLE_FILTERS = 'SharedVolumeIncompatibleFilters'
CLUSTER_GROUP_WAIT_DELAY = 'ClusterGroupWaitDelay'
MINIMUM_PREEMPTOR_PRIORITY = 'MinimumPreemptorPriority'
MINIMUM_NEVER_PREEMPT_PRIORITY = 'MinimumNeverPreemptPriority'
CLUSTER_ENFORCED_ANTIAFFINITY = 'ClusterEnforcedAntiaffinity'
CLUSREG_NAME_SHUTDOWN_TIMEOUT_MINUTES = 'ShutdownTimeoutInMinutes'
CLUSREG_NAME_CSV_MDS_SD = 'SharedVolumeSecurityDescriptor'
CLUSREG_NAME_FAILOVER_MOVE_MIGRATION_TYPE = 'FailoverMoveMigrationType'
CLUSREG_NAME_CSV_BLOCK_CACHE = 'BlockCacheSize'
CLUSREG_NAME_ROUTE_HISTORY_LENGTH = 'RouteHistoryLength'
CLUSREG_NAME_LAST_RECENT_EVENTS_RESET_TIME = 'RecentEventsResetTime'
CLUSREG_NAME_DRAIN_ON_SHUTDOWN = 'DrainOnShutdown'
CLUSREG_NAME_NETFT_IPSEC_ENABLED = 'NetftIPSecEnabled'
CLUSREG_NAME_WITNESS_DYNAMIC_WEIGHT = 'WitnessDynamicWeight'
CLUSREG_NAME_MESSAGE_BUFFER_LENGTH = 'MessageBufferLength'
CLUSREG_NAME_DATABASE_READ_WRITE_MODE = 'DatabaseReadWriteMode'
CLUSREG_NAME_FUNCTIONAL_LEVEL = 'ClusterFunctionalLevel'
CLUSREG_NAME_UPGRADE_VERSION = 'ClusterUpgradeVersion'
CLUSREG_NAME_RESILIENCY_LEVEL = 'ResiliencyLevel'
CLUSREG_NAME_RESILIENCY_DEFAULT_SECONDS = 'ResiliencyDefaultPeriod'
CLUSREG_NAME_QUARANTINE_THRESHOLD = 'QuarantineThreshold'
CLUSREG_NAME_QUARANTINE_DURATION = 'QuarantineDuration'
CLUSTER_S2D_ENABLED = 'S2DEnabled'
CLUSTER_S2D_BUS_TYPES = 'S2DBusTypes'
CLUSTER_S2D_CACHE_PAGE_SIZE_KBYTES = 'S2DCachePageSizeKBytes'
CLUSTER_S2D_OPTIMIZATIONS = 'S2DOptimizations'
CLUSTER_S2D_IO_LATENCY_THRESHOLD = 'S2DIOLatencyThreshold'
CLUSTER_S2D_CACHE_DESIRED_STATE = 'S2DCacheDesiredState'
CLUSTER_S2D_CACHE_METADATA_RESERVE = 'S2DCacheMetadataReserveBytes'
CLUSTER_S2D_CACHE_FLASH_RESERVE_PERCENT = 'S2DCacheFlashReservePercent'
CLUSTER_S2D_CACHE_BEHAVIOR_FLAGS = 'S2DCacheBehavior'
CLUSTER_NAME_PREFERRED_SITE = 'PreferredSite'
CLUSTER_NAME_AUTO_BALANCER_MODE = 'AutoBalancerMode'
CLUSTER_NAME_AUTO_BALANCER_LEVEL = 'AutoBalancerLevel'
CLUSREG_NAME_GROUP_DEPENDENCY_TIMEOUT = 'GroupDependencyTimeout'
CLUSREG_NAME_PLACEMENT_OPTIONS = 'PlacementOptions'
CLUSREG_NAME_ENABLED_EVENT_LOGS = 'EnabledEventLogs'
CLUSREG_NAME_SAME_SUBNET_DELAY = 'SameSubnetDelay'
CLUSREG_NAME_CROSS_SUBNET_DELAY = 'CrossSubnetDelay'
CLUSREG_NAME_CROSS_SITE_DELAY = 'CrossSiteDelay'
CLUSREG_NAME_SAME_SUBNET_THRESHOLD = 'SameSubnetThreshold'
CLUSREG_NAME_CROSS_SUBNET_THRESHOLD = 'CrossSubnetThreshold'
CLUSREG_NAME_CROSS_SITE_THRESHOLD = 'CrossSiteThreshold'
CLUSREG_NAME_PLUMB_ALL_CROSS_SUBNET_ROUTES = 'PlumbAllCrossSubnetRoutes'
CLUSREG_NAME_NODE_NAME = 'NodeName'
CLUSREG_NAME_NODE_HIGHEST_VERSION = 'NodeHighestVersion'
CLUSREG_NAME_NODE_LOWEST_VERSION = 'NodeLowestVersion'
CLUSREG_NAME_NODE_DESC = 'Description'
CLUSREG_NAME_NODE_MAJOR_VERSION = 'MajorVersion'
CLUSREG_NAME_NODE_MINOR_VERSION = 'MinorVersion'
CLUSREG_NAME_NODE_BUILD_NUMBER = 'BuildNumber'
CLUSREG_NAME_NODE_CSDVERSION = 'CSDVersion'
CLUSREG_NAME_NODE_WEIGHT = 'NodeWeight'
CLUSREG_NAME_NODE_DYNAMIC_WEIGHT = 'DynamicWeight'
CLUSREG_NAME_NODE_IS_PRIMARY = 'IsPrimary'
CLUSREG_NAME_NODE_DRAIN_STATUS = 'NodeDrainStatus'
CLUSREG_NAME_NODE_DRAIN_TARGET = 'NodeDrainTarget'
CLUSREG_NAME_NODE_NEEDS_PQ = 'NeedsPreventQuorum'
CLUSREG_NAME_NODE_FDID = 'FaultDomainId'
CLUSREG_NAME_NODE_STATUS_INFO = 'StatusInformation'
CLUSREG_NAME_NODE_FAULT_DOMAIN = 'FaultDomain'
CLUSREG_NAME_NODE_MODEL = 'Model'
CLUSREG_NAME_NODE_SERIALNUMBER = 'SerialNumber'
CLUSREG_NAME_NODE_MANUFACTURER = 'Manufacturer'
CLUSREG_NAME_GRP_NAME = 'Name'
CLUSREG_NAME_GRP_TYPE = 'GroupType'
CLUSREG_NAME_GRP_DESC = 'Description'
CLUSREG_NAME_GRP_PERSISTENT_STATE = 'PersistentState'
CLUSREG_NAME_GRP_FAILBACK_TYPE = 'AutoFailbackType'
CLUSREG_NAME_GRP_FAILBACK_WIN_START = 'FailbackWindowStart'
CLUSREG_NAME_GRP_FAILBACK_WIN_END = 'FailbackWindowEnd'
CLUSREG_NAME_GRP_FAILOVER_THRESHOLD = 'FailoverThreshold'
CLUSREG_NAME_GRP_FAILOVER_PERIOD = 'FailoverPeriod'
CLUSREG_NAME_GRP_PRIORITY = 'Priority'
CLUSREG_NAME_GRP_DEFAULT_OWNER = 'DefaultOwner'
CLUSREG_NAME_GRP_STATUS_INFORMATION = 'StatusInformation'
CLUSREG_NAME_GRP_ANTI_AFFINITY_CLASS_NAME = 'AntiAffinityClassNames'
CLUSREG_NAME_GRP_START_DELAY = 'GroupStartDelay'
CLUSREG_NAME_GRP_CCF_EPOCH = 'CCFEpoch'
CLUSREG_NAME_GRP_CCF_EPOCH_HIGH = 'CCFEpochHigh'
CLUSREG_NAME_GRP_RESILIENCY_PERIOD = 'ResiliencyPeriod'
CLUSREG_NAME_GRP_PREFERRED_SITE = 'PreferredSite'
CLUSREG_NAME_GRP_COLD_START_SETTING = 'ColdStartSetting'
CLUSREG_NAME_GRP_FAULT_DOMAIN = 'FaultDomain'
CLUSREG_NAME_GRP_UPDATE_DOMAIN = 'UpdateDomain'
CLUSREG_NAME_GRP_PLACEMENT_OPTIONS = 'PlacementOptions'
CLUSREG_NAME_GRP_LOCK_MOVE = 'LockedFromMoving'
CLUSREG_NAME_RES_NAME = 'Name'
CLUSREG_NAME_RES_TYPE = 'Type'
CLUSREG_NAME_RES_DESC = 'Description'
CLUSREG_NAME_RES_SEPARATE_MONITOR = 'SeparateMonitor'
CLUSREG_NAME_RES_PERSISTENT_STATE = 'PersistentState'
CLUSREG_NAME_RES_LOOKS_ALIVE = 'LooksAlivePollInterval'
CLUSREG_NAME_RES_IS_ALIVE = 'IsAlivePollInterval'
CLUSREG_NAME_RES_RESTART_ACTION = 'RestartAction'
CLUSREG_NAME_RES_RESTART_THRESHOLD = 'RestartThreshold'
CLUSREG_NAME_RES_RESTART_PERIOD = 'RestartPeriod'
CLUSREG_NAME_RES_RESTART_DELAY = 'RestartDelay'
CLUSREG_NAME_RES_RETRY_PERIOD_ON_FAILURE = 'RetryPeriodOnFailure'
CLUSREG_NAME_RES_EMBEDDED_FAILURE_ACTION = 'EmbeddedFailureAction'
CLUSREG_NAME_RES_PENDING_TIMEOUT = 'PendingTimeout'
CLUSREG_NAME_RES_DEADLOCK_TIMEOUT = 'DeadlockTimeout'
CLUSREG_NAME_RES_MONITOR_PID = 'MonitorProcessId'
CLUSREG_NAME_RES_STATUS_INFORMATION = 'StatusInformation'
CLUSREG_NAME_RES_LAST_OPERATION_STATUS_CODE = 'LastOperationStatusCode'
CLUSREG_NAME_RES_DATA1 = 'ResourceSpecificData1'
CLUSREG_NAME_RES_DATA2 = 'ResourceSpecificData2'
CLUSREG_NAME_RES_STATUS = 'ResourceSpecificStatus'
CLUSREG_NAME_RESTYPE_NAME = 'Name'
CLUSREG_NAME_RESTYPE_DESC = 'Description'
CLUSREG_NAME_RESTYPE_DLL_NAME = 'DllName'
CLUSREG_NAME_RESTYPE_ADMIN_EXTENSIONS = 'AdminExtensions'
CLUSREG_NAME_RESTYPE_LOOKS_ALIVE = 'LooksAlivePollInterval'
CLUSREG_NAME_RESTYPE_IS_ALIVE = 'IsAlivePollInterval'
CLUSREG_NAME_RESTYPE_PENDING_TIMEOUT = 'PendingTimeout'
CLUSREG_NAME_RESTYPE_DEADLOCK_TIMEOUT = 'DeadlockTimeout'
CLUSREG_NAME_RESTYPE_DUMP_POLICY = 'DumpPolicy'
CLUSREG_NAME_RESTYPE_DUMP_LOG_QUERY = 'DumpLogQuery'
CLUSREG_NAME_RESTYPE_DUMP_SERVICES = 'DumpServices'
CLUSREG_NAME_RESTYPE_ENABLED_EVENT_LOGS = 'EnabledEventLogs'
CLUSREG_NAME_RESTYPE_MAX_MONITORS = 'MaximumMonitors'
CLUSREG_NAME_RESTYPE_WPR_START_AFTER = 'WprStartAfter'
CLUSREG_NAME_RESTYPE_WPR_PROFILES = 'WprProfiles'
CLUSREG_NAME_NET_NAME = 'Name'
CLUSREG_NAME_NET_IPV6_ADDRESSES = 'IPv6Addresses'
CLUSREG_NAME_NET_IPV6_PREFIXLENGTHS = 'IPv6PrefixLengths'
CLUSREG_NAME_NET_IPV4_ADDRESSES = 'IPv4Addresses'
CLUSREG_NAME_NET_IPV4_PREFIXLENGTHS = 'IPv4PrefixLengths'
CLUSREG_NAME_NET_ADDRESS = 'Address'
CLUSREG_NAME_NET_ADDRESS_MASK = 'AddressMask'
CLUSREG_NAME_NET_DESC = 'Description'
CLUSREG_NAME_NET_ROLE = 'Role'
CLUSREG_NAME_NET_SPEED = 'LinkSpeed'
CLUSREG_NAME_NET_RDMA_CAPABLE = 'RdmaCapable'
CLUSREG_NAME_NET_RSS_CAPABLE = 'RssCapable'
CLUSREG_NAME_NET_METRIC = 'Metric'
CLUSREG_NAME_NET_AUTOMETRIC = 'AutoMetric'
CLUSREG_NAME_NETIFACE_NAME = 'Name'
CLUSREG_NAME_NETIFACE_NODE = 'Node'
CLUSREG_NAME_NETIFACE_NETWORK = 'Network'
CLUSREG_NAME_NETIFACE_ADAPTER_NAME = 'Adapter'
CLUSREG_NAME_NETIFACE_ADAPTER_ID = 'AdapterId'
CLUSREG_NAME_NETIFACE_DHCP_ENABLED = 'DhcpEnabled'
CLUSREG_NAME_NETIFACE_IPV6_ADDRESSES = 'IPv6Addresses'
CLUSREG_NAME_NETIFACE_IPV4_ADDRESSES = 'IPv4Addresses'
CLUSREG_NAME_NETIFACE_ADDRESS = 'Address'
CLUSREG_NAME_NETIFACE_DESC = 'Description'
CLUSREG_NAME_GROUPSET_NAME = 'Name'
CLUSREG_NAME_GROUPSET_STARTUP_SETTING = 'StartupSetting'
CLUSREG_NAME_GROUPSET_STARTUP_COUNT = 'StartupCount'
CLUSREG_NAME_GROUPSET_STARTUP_DELAY = 'StartupDelay'
CLUSREG_NAME_GROUPSET_IS_GLOBAL = 'IsGlobal'
CLUSREG_NAME_GROUPSET_STATUS_INFORMATION = 'StatusInformation'
CLUSREG_NAME_GROUPSET_IS_AVAILABILITY_SET = 'IsAvailabilitySet'
CLUSREG_NAME_GROUPSET_UPDATE_DOMAINS = 'UpdateDomains'
CLUSREG_NAME_GROUPSET_FAULT_DOMAINS = 'FaultDomains'
CLUSREG_NAME_GROUPSET_RESERVE_NODE = 'ReserveSpareNode'
CLUSREG_NAME_GROUPSET_AVAILABILITY_SET_INDEX_TO_NODE_MAPPING = 'NodeDomainInfo'
CLUSREG_NAME_AFFINITYRULE_NAME = 'Name'
CLUSREG_NAME_AFFINITYRULE_TYPE = 'RuleType'
CLUSREG_NAME_AFFINITYRULE_GROUPS = 'Groups'
CLUSREG_NAME_AFFINITYRULE_ENABLED = 'Enabled'
CLUSREG_NAME_START_MEMORY = 'StartMemory'
CLUSREG_NAME_VIRTUAL_NUMA_COUNT = 'VirtualNumaCount'
CLUSREG_NAME_DDA_DEVICE_ALLOCATIONS = 'DdaDeviceAllocations'
CLUSREG_NAME_GPUP_DEVICE_ALLOCATIONS = 'GpupDeviceAllocations'
CLUSREG_NAME_PHYSDISK_DISKIDTYPE = 'DiskIdType'
CLUSREG_NAME_PHYSDISK_DISKSIGNATURE = 'DiskSignature'
CLUSREG_NAME_PHYSDISK_DISKIDGUID = 'DiskIdGuid'
CLUSREG_NAME_PHYSDISK_DISKRUNCHKDSK = 'DiskRunChkDsk'
CLUSREG_NAME_PHYSDISK_DISKUNIQUEIDS = 'DiskUniqueIds'
CLUSREG_NAME_PHYSDISK_DISKVOLUMEINFO = 'DiskVolumeInfo'
CLUSREG_NAME_PHYSDISK_DISKARBTYPE = 'DiskArbType'
CLUSREG_NAME_PHYSDISK_DISKARBINTERVAL = 'DiskArbInterval'
CLUSREG_NAME_PHYSDISK_DISKPATH = 'DiskPath'
CLUSREG_NAME_PHYSDISK_DISKRELOAD = 'DiskReload'
CLUSREG_NAME_PHYSDISK_MAINTMODE = 'MaintenanceMode'
CLUSREG_NAME_PHYSDISK_DISKIODELAY = 'MaxIoLatency'
CLUSREG_NAME_PHYSDISK_MIGRATEFIXUP = 'MigrateDriveLetters'
CLUSREG_NAME_PHYSDISK_CSVWRITETHROUGH = 'CsvEnforceWriteThrough'
CLUSREG_NAME_PHYSDISK_CSVBLOCKCACHE = 'EnableBlockCache'
CLUSREG_NAME_PHYSDISK_FASTONLINEARBITRATE = 'FastOnlineArbitrate'
CLUSREG_NAME_PHYSDISK_SPACEIDGUID = 'VirtualDiskId'
CLUSREG_NAME_STORAGESPACE_POOLIDGUID = 'PoolId'
CLUSREG_NAME_PHYSDISK_CSVSNAPSHOTDIFFAREASIZE = 'SnapshotDiffSize'
CLUSREG_NAME_PHYSDISK_CSVSNAPSHOTAGELIMIT = 'SnapshotAgeLimit'
CLUSREG_NAME_PHYSDISK_DISKGUID = 'DiskGuid'
CLUSREG_NAME_PHYSDISK_VOLSNAPACTIVATETIMEOUT = 'VolsnapActivateTimeout'
CLUSREG_NAME_PHYSDISK_DISKRECOVERYACTION = 'DiskRecoveryAction'
CLUSREG_NAME_STORAGESPACE_NAME = 'VirtualDiskName'
CLUSREG_NAME_STORAGESPACE_DESCRIPTION = 'VirtualDiskDescription'
CLUSREG_NAME_STORAGESPACE_HEALTH = 'VirtualDiskHealth'
CLUSREG_NAME_STORAGESPACE_STATE = 'VirtualDiskState'
CLUSREG_NAME_STORAGESPACE_PROVISIONING = 'VirtualDiskProvisioning'
CLUSREG_NAME_STORAGESPACE_RESILIENCYTYPE = 'VirtualDiskResiliencyType'
CLUSREG_NAME_STORAGESPACE_RESILIENCYCOLUMNS = 'VirtualDiskResiliencyColumns'
CLUSREG_NAME_STORAGESPACE_RESILIENCYINTERLEAVE = 'VirtualDiskResiliencyInterleave'
CLUSREG_NAME_GENAPP_COMMAND_LINE = 'CommandLine'
CLUSREG_NAME_GENAPP_CURRENT_DIRECTORY = 'CurrentDirectory'
CLUSREG_NAME_GENAPP_USE_NETWORK_NAME = 'UseNetworkName'
CLUSREG_NAME_GENSCRIPT_SCRIPT_FILEPATH = 'ScriptFilepath'
CLUSREG_NAME_GENSVC_SERVICE_NAME = 'ServiceName'
CLUSREG_NAME_GENSVC_STARTUP_PARAMS = 'StartupParameters'
CLUSREG_NAME_GENSVC_USE_NETWORK_NAME = 'UseNetworkName'
CLUSREG_NAME_IPADDR_NETWORK = 'Network'
CLUSREG_NAME_IPADDR_ADDRESS = 'Address'
CLUSREG_NAME_IPADDR_SUBNET_MASK = 'SubnetMask'
CLUSREG_NAME_IPADDR_ENABLE_NETBIOS = 'EnableNetBIOS'
CLUSREG_NAME_IPADDR_OVERRIDE_ADDRMATCH = 'OverrideAddressMatch'
CLUSREG_NAME_IPADDR_ENABLE_DHCP = 'EnableDhcp'
CLUSREG_NAME_IPADDR_LEASE_OBTAINED_TIME = 'LeaseObtainedTime'
CLUSREG_NAME_IPADDR_LEASE_TERMINATES_TIME = 'LeaseExpiresTime'
CLUSREG_NAME_IPADDR_T1 = 'T1'
CLUSREG_NAME_IPADDR_T2 = 'T2'
CLUSREG_NAME_IPADDR_DHCP_SERVER = 'DhcpServer'
CLUSREG_NAME_IPADDR_DHCP_ADDRESS = 'DhcpAddress'
CLUSREG_NAME_IPADDR_DHCP_SUBNET_MASK = 'DhcpSubnetMask'
CLUSREG_NAME_IPADDR_SHARED_NETNAME = 'SharedNetname'
CLUSREG_NAME_IPADDR_PROBE_PORT = 'ProbePort'
CLUSREG_NAME_IPADDR_PROBE_FAILURE_THRESHOLD = 'ProbeFailureThreshold'
CLUSREG_NAME_IPV6_NATIVE_NETWORK = 'Network'
CLUSREG_NAME_IPV6_NATIVE_ADDRESS = 'Address'
CLUSREG_NAME_IPV6_NATIVE_PREFIX_LENGTH = 'PrefixLength'
CLUSREG_NAME_IPV6_TUNNEL_ADDRESS = 'Address'
CLUSREG_NAME_IPV6_TUNNEL_TUNNELTYPE = 'TunnelType'
CLUSREG_NAME_NETNAME_NAME = 'Name'
CLUSREG_NAME_NETNAME_CREATING_DC = 'CreatingDC'
CLUSREG_NAME_NETNAME_OBJECT_ID = 'ObjectGUID'
CLUSREG_NAME_NETNAME_DNS_NAME = 'DnsName'
CLUSREG_NAME_NETNAME_REMAP_PIPE_NAMES = 'RemapPipeNames'
CLUSREG_NAME_NETNAME_RESOURCE_DATA = 'ResourceData'
CLUSREG_NAME_NETNAME_STATUS_NETBIOS = 'StatusNetBIOS'
CLUSREG_NAME_NETNAME_STATUS_DNS = 'StatusDNS'
CLUSREG_NAME_NETNAME_STATUS_KERBEROS = 'StatusKerberos'
CLUSREG_NAME_NETNAME_VCO_CONTAINER = 'VcoContainer'
CLUSREG_NAME_NETNAME_LAST_DNS_UPDATE = 'LastDNSUpdateTime'
CLUSREG_NAME_NETNAME_CONTAINERGUID = 'CryptoContainerGUID'
CLUSREG_NAME_NETNAME_HOST_TTL = 'HostRecordTTL'
CLUSREG_NAME_NETNAME_PUBLISH_PTR = 'PublishPTRRecords'
CLUSREG_NAME_NETNAME_REMOVEVCO_ONDELETE = 'DeleteVcoOnResCleanup'
CLUSREG_NAME_NETNAME_REGISTER_ALL_IP = 'RegisterAllProvidersIP'
CLUSREG_KEYNAME_OBJECTGUIDS = 'ObjectGUIDs'
CLUSREG_NAME_NETNAME_EXCLUDE_NETWORKS = 'ExcludeNetworks'
CLUSREG_NAME_NETNAME_ALIASES = 'Aliases'
CLUSREG_NAME_NETNAME_IN_USE_NETWORKS = 'InUseNetworks'
CLUSREG_NAME_NETNAME_DNS_SUFFIX = 'DnsSuffix'
CLUSREG_NAME_NETNAME_AD_AWARE = 'ADAware'
CLUSREG_NAME_NETNAME_DNN_DISABLE_CLONES = 'DisableClones'
CLUSREG_NAME_PRTSPOOL_DEFAULT_SPOOL_DIR = 'DefaultSpoolDirectory'
CLUSREG_NAME_PRTSPOOL_TIMEOUT = 'JobCompletionTimeout'
CLUSREG_NAME_FILESHR_SERVER_NAME = 'ServerName'
CLUSREG_NAME_FILESHR_SHARE_NAME = 'ShareName'
CLUSREG_NAME_FILESHR_PATH = 'Path'
CLUSREG_NAME_FILESHR_REMARK = 'Remark'
CLUSREG_NAME_FILESHR_MAX_USERS = 'MaxUsers'
CLUSREG_NAME_FILESHR_SD = 'Security Descriptor'
CLUSREG_NAME_FILESHR_SHARE_SUBDIRS = 'ShareSubDirs'
CLUSREG_NAME_FILESHR_HIDE_SUBDIR_SHARES = 'HideSubDirShares'
CLUSREG_NAME_FILESHR_IS_DFS_ROOT = 'IsDfsRoot'
CLUSREG_NAME_FILESHR_SHARE_FLAGS = 'ShareFlags'
CLUSREG_NAME_FILESHR_CA_TIMEOUT = 'CATimeout'
CLUSREG_NAME_DHCP_DATABASE_PATH = 'DatabasePath'
CLUSREG_NAME_DHCP_BACKUP_PATH = 'BackupPath'
CLUSREG_NAME_LOG_FILE_PATH = 'LogFilePath'
CLUSREG_NAME_WINS_DATABASE_PATH = 'DatabasePath'
CLUSREG_NAME_WINS_BACKUP_PATH = 'BackupPath'
CLUSREG_NAME_VSSTASK_CURRENTDIRECTORY = 'CurrentDirectory'
CLUSREG_NAME_VSSTASK_APPNAME = 'ApplicationName'
CLUSREG_NAME_VSSTASK_APPPARAMS = 'ApplicationParams'
CLUSREG_NAME_VSSTASK_TRIGGERARRAY = 'TriggerArray'
CLUSREG_NAME_FSWITNESS_SHARE_PATH = 'SharePath'
CLUSREG_NAME_FSWITNESS_ARB_DELAY = 'ArbitrationDelay'
CLUSREG_NAME_FSWITNESS_IMPERSONATE_CNO = 'ImpersonateCNO'
CLUSREG_NAME_STORAGESPACE_POOLNAME = 'Name'
CLUSREG_NAME_STORAGESPACE_POOLDESC = 'Description'
CLUSREG_NAME_STORAGESPACE_POOLDRIVEIDS = 'DriveIds'
CLUSREG_NAME_STORAGESPACE_POOLHEALTH = 'Health'
CLUSREG_NAME_STORAGESPACE_POOLSTATE = 'State'
CLUSREG_NAME_STORAGESPACE_POOLTOTALCAPACITY = 'TotalCapacity'
CLUSREG_NAME_STORAGESPACE_POOLCONSUMEDCAPACITY = 'ConsumedCapacity'
CLUSREG_NAME_STORAGESPACE_POOLARBITRATE = 'Arbitrate'
CLUSREG_NAME_STORAGESPACE_POOLREEVALTIMEOUT = 'ReEvaluatePlacementTimeout'
CLUSREG_NAME_STORAGESPACE_POOLQUORUMSHARE = 'PoolQuorumShare'
CLUSREG_NAME_STORAGESPACE_POOLQUORUMUSERACCOUNT = 'PoolQuorumUserAccount'
CLUSREG_NAME_SOFS_SMBASYMMETRYMODE = 'SmbAsymmetryMode'
CLUSREG_NAME_VIP_PREFIX_LENGTH = 'PrefixLength'
CLUSREG_NAME_VIP_ADAPTER_NAME = 'AdapterName'
CLUSREG_NAME_VIP_ADDRESS = 'Address'
CLUSREG_NAME_VIP_VSID = 'VSID'
CLUSREG_NAME_VIP_RDID = 'RDID'
CLUSREG_NAME_CLOUDWITNESS_PRIMARY_TOKEN = 'PrimaryToken'
CLUSREG_NAME_CLOUDWITNESS_PRIMARY_KEY = 'PrimaryKey'
CLUSREG_NAME_CLOUDWITNESS_ACCOUNT_NAME = 'AccountName'
CLUSREG_NAME_CLOUDWITNESS_ENDPOINT_INFO = 'EndpointInfo'
CLUSREG_NAME_CLOUDWITNESS_CONTAINER_NAME = 'ContainerName'
CLOUD_WITNESS_CONTAINER_NAME = 'msft-cloud-witness'
CLUS_NAME_RES_TYPE_SOURCE_RESID = 'SourceResourceId'
CLUS_NAME_RES_TYPE_TARGET_RESID = 'TargetResourceId'
CLUS_NAME_RES_TYPE_SOURCE_VOLUMES = 'SourceVolumes'
CLUS_NAME_RES_TYPE_TARGET_VOLUMES = 'TargetVolumes'
CLUS_NAME_RES_TYPE_DATA_RESID = 'DataResourceId'
CLUS_NAME_RES_TYPE_LOG_RESID = 'LogResourceId'
CLUS_NAME_RES_TYPE_LOG_VOLUME = 'LogVolume'
CLUS_NAME_RES_TYPE_REPLICATION_GROUPID = 'ReplicationGroupId'
CLUS_NAME_RES_TYPE_CLUSTER_GROUPID = 'ClusterGroupId'
CLUS_NAME_RES_TYPE_REPLICATION_GROUP_TYPE = 'ReplicationClusterGroupType'
CLUS_NAME_RES_TYPE_MINIMUM_LOG_SIZE = 'MinimumLogSizeInBytes'
CLUS_NAME_RES_TYPE_UNIT_LOG_SIZE_CHANGE = 'UnitOfLogSizeChangeInBytes'
CLUS_NAME_RES_TYPE_LOG_MULTIPLE = 'LogSizeMultiple'
SR_REPLICATED_PARTITION_DISALLOW_MULTINODE_IO = 1
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_ADD_VOLUME_INFO = 1
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_FILTER_BY_POOL = 2
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_INCLUDE_NON_SHARED_DISKS = 4
STARTUP_ROUTINE = 'Startup'
CLRES_VERSION_V1_00 = 256
STARTUP_EX_ROUTINE = 'StartupEx'
CLRES_VERSION_V2_00 = 512
CLRES_VERSION_V3_00 = 768
CLRES_VERSION_V4_00 = 1024
CLUSCTL_GET_OPERATION_CONTEXT_PARAMS_VERSION_1 = 1
CLUSRES_NAME_GET_OPERATION_CONTEXT_FLAGS = 'Flags'
CLUSRESDLL_STATUS_OFFLINE_BUSY = 1
CLUSRESDLL_STATUS_OFFLINE_SOURCE_THROTTLED = 2
CLUSRESDLL_STATUS_OFFLINE_DESTINATION_THROTTLED = 4
CLUSRESDLL_STATUS_OFFLINE_DESTINATION_REJECTED = 8
CLUSRESDLL_STATUS_INSUFFICIENT_MEMORY = 16
CLUSRESDLL_STATUS_INSUFFICIENT_PROCESSOR = 32
CLUSRESDLL_STATUS_INSUFFICIENT_OTHER_RESOURCES = 64
CLUSRESDLL_STATUS_INVALID_PARAMETERS = 128
CLUSRESDLL_STATUS_NETWORK_NOT_AVAILABLE = 256
CLUSRESDLL_STATUS_DO_NOT_COLLECT_WER_REPORT = 1073741824
CLUSRESDLL_STATUS_DUMP_NOW = 2147483648
CLUS_RESDLL_OPEN_RECOVER_MONITOR_STATE = 1
CLUS_RESDLL_ONLINE_RECOVER_MONITOR_STATE = 1
CLUS_RESDLL_ONLINE_IGNORE_RESOURCE_STATUS = 2
CLUS_RESDLL_ONLINE_RETURN_TO_SOURCE_NODE_ON_ERROR = 4
CLUS_RESDLL_ONLINE_RESTORE_ONLINE_STATE = 8
CLUS_RESDLL_ONLINE_IGNORE_NETWORK_CONNECTIVITY = 16
CLUS_RESDLL_OFFLINE_IGNORE_RESOURCE_STATUS = 1
CLUS_RESDLL_OFFLINE_RETURN_TO_SOURCE_NODE_ON_ERROR = 2
CLUS_RESDLL_OFFLINE_QUEUE_ENABLED = 4
CLUS_RESDLL_OFFLINE_RETURNING_TO_SOURCE_NODE_BECAUSE_OF_ERROR = 8
CLUS_RESDLL_OFFLINE_DUE_TO_EMBEDDED_FAILURE = 16
CLUS_RESDLL_OFFLINE_IGNORE_NETWORK_CONNECTIVITY = 32
CLUS_RESDLL_OFFLINE_DO_NOT_UPDATE_PERSISTENT_STATE = 64
CLUS_RESDLL_OPEN_DONT_DELETE_TEMP_DISK = 2
RESTYPE_MONITOR_SHUTTING_DOWN_NODE_STOP = 1
RESTYPE_MONITOR_SHUTTING_DOWN_CLUSSVC_CRASH = 2
RESUTIL_PROPITEM_READ_ONLY = 1
RESUTIL_PROPITEM_REQUIRED = 2
RESUTIL_PROPITEM_SIGNED = 4
RESUTIL_PROPITEM_IN_MEMORY = 8
LOCKED_MODE_FLAGS_DONT_REMOVE_FROM_MOVE_QUEUE = 1
CLUSTER_HEALTH_FAULT_PROPERTY_NAME = 'ClusterHealth'
CLUSTER_HEALTH_FAULT_ARGS = 7
CLUSTER_HEALTH_FAULT_ID = 0
CLUSTER_HEALTH_FAULT_ERRORTYPE = 1
CLUSTER_HEALTH_FAULT_ERRORCODE = 2
CLUSTER_HEALTH_FAULT_DESCRIPTION = 3
CLUSTER_HEALTH_FAULT_PROVIDER = 4
CLUSTER_HEALTH_FAULT_FLAGS = 5
CLUSTER_HEALTH_FAULT_RESERVED = 6
CLUSTER_HEALTH_FAULT_ID_LABEL = 'Id'
CLUSTER_HEALTH_FAULT_ERRORTYPE_LABEL = 'ErrorType'
CLUSTER_HEALTH_FAULT_ERRORCODE_LABEL = 'ErrorCode'
CLUSTER_HEALTH_FAULT_DESCRIPTION_LABEL = 'Description'
CLUSTER_HEALTH_FAULT_PROVIDER_LABEL = 'Provider'
CLUSTER_HEALTH_FAULT_FLAGS_LABEL = 'Flags'
CLUSTER_HEALTH_FAULT_RESERVED_LABEL = 'Reserved'
CLUS_CREATE_CRYPT_CONTAINER_NOT_FOUND = 1
SET_APPINSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR = 1
def _define_GetNodeClusterState():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(UInt32))(('GetNodeClusterState', windll['CLUSAPI.dll']), ((1, 'lpszNodeName'),(1, 'pdwClusterState'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenCluster():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('OpenCluster', windll['CLUSAPI.dll']), ((1, 'lpszClusterName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))(('OpenClusterEx', windll['CLUSAPI.dll']), ((1, 'lpszClusterName'),(1, 'DesiredAccess'),(1, 'GrantedAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseCluster():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HCLUSTER_head))(('CloseCluster', windll['CLUSAPI.dll']), ((1, 'hCluster'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterName():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('SetClusterName', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNewClusterName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterInformation():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSTERVERSIONINFO_head))(('GetClusterInformation', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszClusterName'),(1, 'lpcchClusterName'),(1, 'lpClusterInfo'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterQuorumResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(UInt32))(('GetClusterQuorumResource', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceName'),(1, 'lpcchResourceName'),(1, 'lpszDeviceName'),(1, 'lpcchDeviceName'),(1, 'lpdwMaxQuorumLogSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterQuorumResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,UInt32)(('SetClusterQuorumResource', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'lpszDeviceName'),(1, 'dwMaxQuoLogSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_BackupClusterDatabase():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('BackupClusterDatabase', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszPathName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RestoreClusterDatabase():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.BOOL,win32more.Foundation.PWSTR)(('RestoreClusterDatabase', windll['CLUSAPI.dll']), ((1, 'lpszPathName'),(1, 'bForce'),(1, 'lpszQuorumDriveLetter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterNetworkPriorityOrder():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32,POINTER(POINTER(win32more.Networking.Clustering._HNETWORK_head)))(('SetClusterNetworkPriorityOrder', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'NetworkCount'),(1, 'NetworkList'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterServiceAccountPassword():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_SET_PASSWORD_STATUS_head),POINTER(UInt32))(('SetClusterServiceAccountPassword', windll['CLUSAPI.dll']), ((1, 'lpszClusterName'),(1, 'lpszNewPassword'),(1, 'dwFlags'),(1, 'lpReturnStatusBuffer'),(1, 'lpcbReturnStatusBufferSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterControl', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'nInBufferSize'),(1, 'lpOutBuffer'),(1, 'nOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterUpgradeFunctionalLevel():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.BOOL,win32more.Networking.Clustering.PCLUSTER_UPGRADE_PROGRESS_CALLBACK,c_void_p)(('ClusterUpgradeFunctionalLevel', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'perform'),(1, 'pfnProgressCallback'),(1, 'pvCallbackArg'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterNotifyPortV2():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.NOTIFY_FILTER_AND_TYPE_head),UInt32,UIntPtr)(('CreateClusterNotifyPortV2', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'hCluster'),(1, 'Filters'),(1, 'dwFilterCount'),(1, 'dwNotifyKey'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RegisterClusterNotifyV2():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),win32more.Networking.Clustering.NOTIFY_FILTER_AND_TYPE,win32more.Foundation.HANDLE,UIntPtr)(('RegisterClusterNotifyV2', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'Filter'),(1, 'hObject'),(1, 'dwNotifyKey'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetNotifyEventHandle():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Foundation.HANDLE))(('GetNotifyEventHandle', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'lphTargetEvent'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNotifyV2():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(UIntPtr),POINTER(win32more.Networking.Clustering.NOTIFY_FILTER_AND_TYPE_head),c_char_p_no,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),UInt32)(('GetClusterNotifyV2', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'lpdwNotifyKey'),(1, 'pFilterAndType'),(1, 'buffer'),(1, 'lpbBufferSize'),(1, 'lpszObjectId'),(1, 'lpcchObjectId'),(1, 'lpszParentId'),(1, 'lpcchParentId'),(1, 'lpszName'),(1, 'lpcchName'),(1, 'lpszType'),(1, 'lpcchType'),(1, 'dwMilliseconds'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterNotifyPort():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32,UIntPtr)(('CreateClusterNotifyPort', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'hCluster'),(1, 'dwFilter'),(1, 'dwNotifyKey'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RegisterClusterNotify():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),UInt32,win32more.Foundation.HANDLE,UIntPtr)(('RegisterClusterNotify', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'dwFilterType'),(1, 'hObject'),(1, 'dwNotifyKey'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNotify():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(UIntPtr),POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),UInt32)(('GetClusterNotify', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'lpdwNotifyKey'),(1, 'lpdwFilterType'),(1, 'lpszName'),(1, 'lpcchName'),(1, 'dwMilliseconds'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterNotifyPort():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HCHANGE_head))(('CloseClusterNotifyPort', windll['CLUSAPI.dll']), ((1, 'hChange'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSENUM_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)(('ClusterOpenEnum', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'dwType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGetEnumCount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUM_head))(('ClusterGetEnumCount', windll['CLUSAPI.dll']), ((1, 'hEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterEnum', windll['CLUSAPI.dll']), ((1, 'hEnum'),(1, 'dwIndex'),(1, 'lpdwType'),(1, 'lpszName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUM_head))(('ClusterCloseEnum', windll['CLUSAPI.dll']), ((1, 'hEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterOpenEnumEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32,c_void_p)(('ClusterOpenEnumEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'dwType'),(1, 'pOptions'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGetEnumCountEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head))(('ClusterGetEnumCountEx', windll['CLUSAPI.dll']), ((1, 'hClusterEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_ENUM_ITEM_head),POINTER(UInt32))(('ClusterEnumEx', windll['CLUSAPI.dll']), ((1, 'hClusterEnum'),(1, 'dwIndex'),(1, 'pItem'),(1, 'cbItem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterCloseEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head))(('ClusterCloseEnumEx', windll['CLUSAPI.dll']), ((1, 'hClusterEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterGroupSet():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('CreateClusterGroupSet', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'groupSetName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterGroupSet():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('OpenClusterGroupSet', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszGroupSetName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterGroupSet():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HGROUPSET_head))(('CloseClusterGroupSet', windll['CLUSAPI.dll']), ((1, 'hGroupSet'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DeleteClusterGroupSet():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head))(('DeleteClusterGroupSet', windll['CLUSAPI.dll']), ((1, 'hGroupSet'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterAddGroupToGroupSet():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUP_head))(('ClusterAddGroupToGroupSet', windll['CLUSAPI.dll']), ((1, 'hGroupSet'),(1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterAddGroupToGroupSetWithDomains():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32,UInt32)(('ClusterAddGroupToGroupSetWithDomains', windll['CLUSAPI.dll']), ((1, 'hGroupSet'),(1, 'hGroup'),(1, 'faultDomain'),(1, 'updateDomain'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRemoveGroupFromGroupSet():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head))(('ClusterRemoveGroupFromGroupSet', windll['CLUSAPI.dll']), ((1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupSetControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterGroupSetControl', windll['CLUSAPI.dll']), ((1, 'hGroupSet'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),(1, 'lpOutBuffer'),(1, 'cbOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterGroupDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUP_head))(('AddClusterGroupDependency', windll['CLUSAPI.dll']), ((1, 'hDependentGroup'),(1, 'hProviderGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetGroupDependencyExpression():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR)(('SetGroupDependencyExpression', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'lpszDependencyExpression'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveClusterGroupDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUP_head))(('RemoveClusterGroupDependency', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'hDependsOn'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterGroupSetDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))(('AddClusterGroupSetDependency', windll['CLUSAPI.dll']), ((1, 'hDependentGroupSet'),(1, 'hProviderGroupSet'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterGroupSetDependencyExpression():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),win32more.Foundation.PWSTR)(('SetClusterGroupSetDependencyExpression', windll['CLUSAPI.dll']), ((1, 'hGroupSet'),(1, 'lpszDependencyExprssion'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveClusterGroupSetDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))(('RemoveClusterGroupSetDependency', windll['CLUSAPI.dll']), ((1, 'hGroupSet'),(1, 'hDependsOn'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterGroupToGroupSetDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))(('AddClusterGroupToGroupSetDependency', windll['CLUSAPI.dll']), ((1, 'hDependentGroup'),(1, 'hProviderGroupSet'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveClusterGroupToGroupSetDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))(('RemoveClusterGroupToGroupSetDependency', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'hDependsOn'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupSetOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPSETENUM_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head))(('ClusterGroupSetOpenEnum', windll['CLUSAPI.dll']), ((1, 'hCluster'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupSetGetEnumCount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSETENUM_head))(('ClusterGroupSetGetEnumCount', windll['CLUSAPI.dll']), ((1, 'hGroupSetEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupSetEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSETENUM_head),UInt32,win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterGroupSetEnum', windll['CLUSAPI.dll']), ((1, 'hGroupSetEnum'),(1, 'dwIndex'),(1, 'lpszName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupSetCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSETENUM_head))(('ClusterGroupSetCloseEnum', windll['CLUSAPI.dll']), ((1, 'hGroupSetEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddCrossClusterGroupSetDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('AddCrossClusterGroupSetDependency', windll['CLUSAPI.dll']), ((1, 'hDependentGroupSet'),(1, 'lpRemoteClusterName'),(1, 'lpRemoteGroupSetName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveCrossClusterGroupSetDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('RemoveCrossClusterGroupSetDependency', windll['CLUSAPI.dll']), ((1, 'hDependentGroupSet'),(1, 'lpRemoteClusterName'),(1, 'lpRemoteGroupSetName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterAvailabilitySet():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering.CLUSTER_AVAILABILITY_SET_CONFIG_head))(('CreateClusterAvailabilitySet', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpAvailabilitySetName'),(1, 'pAvailabilitySetConfig'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeReplacement():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('ClusterNodeReplacement', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeNameCurrent'),(1, 'lpszNodeNameNew'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterCreateAffinityRule():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.CLUS_AFFINITY_RULE_TYPE)(('ClusterCreateAffinityRule', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'ruleName'),(1, 'ruleType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRemoveAffinityRule():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('ClusterRemoveAffinityRule', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'ruleName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterAddGroupToAffinityRule():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HGROUP_head))(('ClusterAddGroupToAffinityRule', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'ruleName'),(1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRemoveGroupFromAffinityRule():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HGROUP_head))(('ClusterRemoveGroupFromAffinityRule', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'ruleName'),(1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterAffinityRuleControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterAffinityRuleControl', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'affinityRuleName'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),(1, 'lpOutBuffer'),(1, 'cbOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterNode():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('OpenClusterNode', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterNodeEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))(('OpenClusterNodeEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeName'),(1, 'dwDesiredAccess'),(1, 'lpdwGrantedAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterNodeById():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)(('OpenClusterNodeById', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'nodeId'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterNode():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HNODE_head))(('CloseClusterNode', windll['CLUSAPI.dll']), ((1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNodeState():
    try:
        return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_NODE_STATE,POINTER(win32more.Networking.Clustering._HNODE_head))(('GetClusterNodeState', windll['CLUSAPI.dll']), ((1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNodeId():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),win32more.Foundation.PWSTR,POINTER(UInt32))(('GetClusterNodeId', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'lpszNodeId'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterFromNode():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNODE_head))(('GetClusterFromNode', windll['CLUSAPI.dll']), ((1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_PauseClusterNode():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))(('PauseClusterNode', windll['CLUSAPI.dll']), ((1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResumeClusterNode():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))(('ResumeClusterNode', windll['CLUSAPI.dll']), ((1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EvictClusterNode():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))(('EvictClusterNode', windll['CLUSAPI.dll']), ((1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetInterfaceOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETINTERFACEENUM_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('ClusterNetInterfaceOpenEnum', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeName'),(1, 'lpszNetworkName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetInterfaceEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETINTERFACEENUM_head),UInt32,win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterNetInterfaceEnum', windll['CLUSAPI.dll']), ((1, 'hNetInterfaceEnum'),(1, 'dwIndex'),(1, 'lpszName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetInterfaceCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETINTERFACEENUM_head))(('ClusterNetInterfaceCloseEnum', windll['CLUSAPI.dll']), ((1, 'hNetInterfaceEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODEENUM_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32)(('ClusterNodeOpenEnum', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'dwType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeOpenEnumEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODEENUMEX_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p)(('ClusterNodeOpenEnumEx', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'dwType'),(1, 'pOptions'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeGetEnumCountEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUMEX_head))(('ClusterNodeGetEnumCountEx', windll['CLUSAPI.dll']), ((1, 'hNodeEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_ENUM_ITEM_head),POINTER(UInt32))(('ClusterNodeEnumEx', windll['CLUSAPI.dll']), ((1, 'hNodeEnum'),(1, 'dwIndex'),(1, 'pItem'),(1, 'cbItem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeCloseEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUMEX_head))(('ClusterNodeCloseEnumEx', windll['CLUSAPI.dll']), ((1, 'hNodeEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeGetEnumCount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUM_head))(('ClusterNodeGetEnumCount', windll['CLUSAPI.dll']), ((1, 'hNodeEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUM_head))(('ClusterNodeCloseEnum', windll['CLUSAPI.dll']), ((1, 'hNodeEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterNodeEnum', windll['CLUSAPI.dll']), ((1, 'hNodeEnum'),(1, 'dwIndex'),(1, 'lpdwType'),(1, 'lpszName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_EvictClusterNodeEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,POINTER(win32more.Foundation.HRESULT))(('EvictClusterNodeEx', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'dwTimeOut'),(1, 'phrCleanupStatus'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterResourceTypeKey():
    try:
        return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32)(('GetClusterResourceTypeKey', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszTypeName'),(1, 'samDesired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterGroup():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('CreateClusterGroup', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszGroupName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterGroup():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('OpenClusterGroup', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszGroupName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterGroupEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))(('OpenClusterGroupEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszGroupName'),(1, 'dwDesiredAccess'),(1, 'lpdwGrantedAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_PauseClusterNodeEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),win32more.Foundation.BOOL,UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))(('PauseClusterNodeEx', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'bDrainNode'),(1, 'dwPauseFlags'),(1, 'hNodeDrainTarget'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResumeClusterNodeEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),win32more.Networking.Clustering.CLUSTER_NODE_RESUME_FAILBACK_TYPE,UInt32)(('ResumeClusterNodeEx', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'eResumeFailbackType'),(1, 'dwResumeFlagsReserved'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterGroupEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering.CLUSTER_CREATE_GROUP_INFO_head))(('CreateClusterGroupEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszGroupName'),(1, 'pGroupInfo'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupOpenEnumEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,win32more.Foundation.PWSTR,UInt32,UInt32)(('ClusterGroupOpenEnumEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszProperties'),(1, 'cbProperties'),(1, 'lpszRoProperties'),(1, 'cbRoProperties'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupGetEnumCountEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head))(('ClusterGroupGetEnumCountEx', windll['CLUSAPI.dll']), ((1, 'hGroupEnumEx'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_GROUP_ENUM_ITEM_head),POINTER(UInt32))(('ClusterGroupEnumEx', windll['CLUSAPI.dll']), ((1, 'hGroupEnumEx'),(1, 'dwIndex'),(1, 'pItem'),(1, 'cbItem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupCloseEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head))(('ClusterGroupCloseEnumEx', windll['CLUSAPI.dll']), ((1, 'hGroupEnumEx'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceOpenEnumEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESENUMEX_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,win32more.Foundation.PWSTR,UInt32,UInt32)(('ClusterResourceOpenEnumEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszProperties'),(1, 'cbProperties'),(1, 'lpszRoProperties'),(1, 'cbRoProperties'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceGetEnumCountEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUMEX_head))(('ClusterResourceGetEnumCountEx', windll['CLUSAPI.dll']), ((1, 'hResourceEnumEx'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_RESOURCE_ENUM_ITEM_head),POINTER(UInt32))(('ClusterResourceEnumEx', windll['CLUSAPI.dll']), ((1, 'hResourceEnumEx'),(1, 'dwIndex'),(1, 'pItem'),(1, 'cbItem'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceCloseEnumEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUMEX_head))(('ClusterResourceCloseEnumEx', windll['CLUSAPI.dll']), ((1, 'hResourceEnumEx'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OnlineClusterGroupEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_char_p_no,UInt32)(('OnlineClusterGroupEx', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'hDestinationNode'),(1, 'dwOnlineFlags'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OfflineClusterGroupEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32,c_char_p_no,UInt32)(('OfflineClusterGroupEx', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'dwOfflineFlags'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OnlineClusterResourceEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32,c_char_p_no,UInt32)(('OnlineClusterResourceEx', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'dwOnlineFlags'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OfflineClusterResourceEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32,c_char_p_no,UInt32)(('OfflineClusterResourceEx', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'dwOfflineFlags'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_MoveClusterGroupEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_char_p_no,UInt32)(('MoveClusterGroupEx', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'hDestinationNode'),(1, 'dwMoveFlags'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CancelClusterGroupOperation():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32)(('CancelClusterGroupOperation', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'dwCancelFlags_RESERVED'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RestartClusterResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32)(('RestartClusterResource', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterGroup():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HGROUP_head))(('CloseClusterGroup', windll['CLUSAPI.dll']), ((1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterFromGroup():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HGROUP_head))(('GetClusterFromGroup', windll['CLUSAPI.dll']), ((1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterGroupState():
    try:
        return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_GROUP_STATE,POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR,POINTER(UInt32))(('GetClusterGroupState', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'lpszNodeName'),(1, 'lpcchNodeName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterGroupName():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR)(('SetClusterGroupName', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'lpszGroupName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterGroupNodeList():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32,POINTER(POINTER(win32more.Networking.Clustering._HNODE_head)))(('SetClusterGroupNodeList', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'NodeCount'),(1, 'NodeList'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OnlineClusterGroup():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head))(('OnlineClusterGroup', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'hDestinationNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_MoveClusterGroup():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head))(('MoveClusterGroup', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'hDestinationNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OfflineClusterGroup():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head))(('OfflineClusterGroup', windll['CLUSAPI.dll']), ((1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DeleteClusterGroup():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head))(('DeleteClusterGroup', windll['CLUSAPI.dll']), ((1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DestroyClusterGroup():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head))(('DestroyClusterGroup', windll['CLUSAPI.dll']), ((1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPENUM_head),POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32)(('ClusterGroupOpenEnum', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'dwType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupGetEnumCount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUM_head))(('ClusterGroupGetEnumCount', windll['CLUSAPI.dll']), ((1, 'hGroupEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterGroupEnum', windll['CLUSAPI.dll']), ((1, 'hGroupEnum'),(1, 'dwIndex'),(1, 'lpdwType'),(1, 'lpszResourceName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUM_head))(('ClusterGroupCloseEnum', windll['CLUSAPI.dll']), ((1, 'hGroupEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterResource():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)(('CreateClusterResource', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'lpszResourceName'),(1, 'lpszResourceType'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterResource():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('OpenClusterResource', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterResourceEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))(('OpenClusterResourceEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceName'),(1, 'dwDesiredAccess'),(1, 'lpdwGrantedAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterResource():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('CloseClusterResource', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterFromResource():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('GetClusterFromResource', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DeleteClusterResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('DeleteClusterResource', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterResourceState():
    try:
        return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('GetClusterResourceState', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'lpszNodeName'),(1, 'lpcchNodeName'),(1, 'lpszGroupName'),(1, 'lpcchGroupName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterResourceName():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR)(('SetClusterResourceName', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'lpszResourceName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FailClusterResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('FailClusterResource', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OnlineClusterResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('OnlineClusterResource', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OfflineClusterResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('OfflineClusterResource', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ChangeClusterResourceGroup():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HGROUP_head))(('ChangeClusterResourceGroup', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hGroup'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ChangeClusterResourceGroupEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HGROUP_head),UInt64)(('ChangeClusterResourceGroupEx', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hGroup'),(1, 'Flags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterResourceNode():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HNODE_head))(('AddClusterResourceNode', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveClusterResourceNode():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HNODE_head))(('RemoveClusterResourceNode', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hNode'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterResourceDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('AddClusterResourceDependency', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hDependsOn'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveClusterResourceDependency():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('RemoveClusterResourceDependency', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hDependsOn'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterResourceDependencyExpression():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR)(('SetClusterResourceDependencyExpression', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'lpszDependencyExpression'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterResourceDependencyExpression():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))(('GetClusterResourceDependencyExpression', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'lpszDependencyExpression'),(1, 'lpcchDependencyExpression'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddResourceToClusterSharedVolumes():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('AddResourceToClusterSharedVolumes', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveResourceFromClusterSharedVolumes():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('RemoveResourceFromClusterSharedVolumes', windll['CLUSAPI.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_IsFileOnClusterSharedVolume():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.BOOL))(('IsFileOnClusterSharedVolume', windll['CLUSAPI.dll']), ((1, 'lpszPathName'),(1, 'pbFileIsOnSharedVolume'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterSharedVolumeSetSnapshotState():
    try:
        return WINFUNCTYPE(UInt32,Guid,win32more.Foundation.PWSTR,win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE)(('ClusterSharedVolumeSetSnapshotState', windll['CLUSAPI.dll']), ((1, 'guidSnapshotSet'),(1, 'lpszVolumeName'),(1, 'state'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CanResourceBeDependent():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('CanResourceBeDependent', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hResourceDependent'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterResourceControl', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),(1, 'lpOutBuffer'),(1, 'cbOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceControlAsUser():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterResourceControlAsUser', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'cbInBufferSize'),(1, 'lpOutBuffer'),(1, 'cbOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceTypeControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterResourceTypeControl', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceTypeName'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'nInBufferSize'),(1, 'lpOutBuffer'),(1, 'nOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceTypeControlAsUser():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterResourceTypeControlAsUser', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceTypeName'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'nInBufferSize'),(1, 'lpOutBuffer'),(1, 'nOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGroupControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterGroupControl', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'nInBufferSize'),(1, 'lpOutBuffer'),(1, 'nOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNodeControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterNodeControl', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'nInBufferSize'),(1, 'lpOutBuffer'),(1, 'nOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterResourceNetworkName():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))(('GetClusterResourceNetworkName', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'lpBuffer'),(1, 'nSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESENUM_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32)(('ClusterResourceOpenEnum', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'dwType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceGetEnumCount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUM_head))(('ClusterResourceGetEnumCount', windll['CLUSAPI.dll']), ((1, 'hResEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterResourceEnum', windll['CLUSAPI.dll']), ((1, 'hResEnum'),(1, 'dwIndex'),(1, 'lpdwType'),(1, 'lpszName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUM_head))(('ClusterResourceCloseEnum', windll['CLUSAPI.dll']), ((1, 'hResEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterResourceType():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32,UInt32)(('CreateClusterResourceType', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceTypeName'),(1, 'lpszDisplayName'),(1, 'lpszResourceTypeDll'),(1, 'dwLooksAlivePollInterval'),(1, 'dwIsAlivePollInterval'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DeleteClusterResourceType():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('DeleteClusterResourceType', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceTypeName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceTypeOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32)(('ClusterResourceTypeOpenEnum', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszResourceTypeName'),(1, 'dwType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceTypeGetEnumCount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head))(('ClusterResourceTypeGetEnumCount', windll['CLUSAPI.dll']), ((1, 'hResTypeEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceTypeEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterResourceTypeEnum', windll['CLUSAPI.dll']), ((1, 'hResTypeEnum'),(1, 'dwIndex'),(1, 'lpdwType'),(1, 'lpszName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterResourceTypeCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head))(('ClusterResourceTypeCloseEnum', windll['CLUSAPI.dll']), ((1, 'hResTypeEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterNetwork():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETWORK_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('OpenClusterNetwork', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNetworkName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterNetworkEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETWORK_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))(('OpenClusterNetworkEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNetworkName'),(1, 'dwDesiredAccess'),(1, 'lpdwGrantedAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterNetwork():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HNETWORK_head))(('CloseClusterNetwork', windll['CLUSAPI.dll']), ((1, 'hNetwork'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterFromNetwork():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNETWORK_head))(('GetClusterFromNetwork', windll['CLUSAPI.dll']), ((1, 'hNetwork'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetworkOpenEnum():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETWORKENUM_head),POINTER(win32more.Networking.Clustering._HNETWORK_head),UInt32)(('ClusterNetworkOpenEnum', windll['CLUSAPI.dll']), ((1, 'hNetwork'),(1, 'dwType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetworkGetEnumCount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORKENUM_head))(('ClusterNetworkGetEnumCount', windll['CLUSAPI.dll']), ((1, 'hNetworkEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetworkEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORKENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterNetworkEnum', windll['CLUSAPI.dll']), ((1, 'hNetworkEnum'),(1, 'dwIndex'),(1, 'lpdwType'),(1, 'lpszName'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetworkCloseEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORKENUM_head))(('ClusterNetworkCloseEnum', windll['CLUSAPI.dll']), ((1, 'hNetworkEnum'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNetworkState():
    try:
        return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_NETWORK_STATE,POINTER(win32more.Networking.Clustering._HNETWORK_head))(('GetClusterNetworkState', windll['CLUSAPI.dll']), ((1, 'hNetwork'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetClusterNetworkName():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORK_head),win32more.Foundation.PWSTR)(('SetClusterNetworkName', windll['CLUSAPI.dll']), ((1, 'hNetwork'),(1, 'lpszName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNetworkId():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORK_head),win32more.Foundation.PWSTR,POINTER(UInt32))(('GetClusterNetworkId', windll['CLUSAPI.dll']), ((1, 'hNetwork'),(1, 'lpszNetworkId'),(1, 'lpcchName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetworkControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORK_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterNetworkControl', windll['CLUSAPI.dll']), ((1, 'hNetwork'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'nInBufferSize'),(1, 'lpOutBuffer'),(1, 'nOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterNetInterface():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)(('OpenClusterNetInterface', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszInterfaceName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterNetInterfaceEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))(('OpenClusterNetInterfaceEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszInterfaceName'),(1, 'dwDesiredAccess'),(1, 'lpdwGrantedAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNetInterface():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(UInt32))(('GetClusterNetInterface', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeName'),(1, 'lpszNetworkName'),(1, 'lpszInterfaceName'),(1, 'lpcchInterfaceName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterNetInterface():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head))(('CloseClusterNetInterface', windll['CLUSAPI.dll']), ((1, 'hNetInterface'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterFromNetInterface():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNETINTERFACE_head))(('GetClusterFromNetInterface', windll['CLUSAPI.dll']), ((1, 'hNetInterface'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNetInterfaceState():
    try:
        return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_NETINTERFACE_STATE,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head))(('GetClusterNetInterfaceState', windll['CLUSAPI.dll']), ((1, 'hNetInterface'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterNetInterfaceControl():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))(('ClusterNetInterfaceControl', windll['CLUSAPI.dll']), ((1, 'hNetInterface'),(1, 'hHostNode'),(1, 'dwControlCode'),(1, 'lpInBuffer'),(1, 'nInBufferSize'),(1, 'lpOutBuffer'),(1, 'nOutBufferSize'),(1, 'lpBytesReturned'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterKey():
    try:
        return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)(('GetClusterKey', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'samDesired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterGroupKey():
    try:
        return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32)(('GetClusterGroupKey', windll['CLUSAPI.dll']), ((1, 'hGroup'),(1, 'samDesired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterResourceKey():
    try:
        return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32)(('GetClusterResourceKey', windll['CLUSAPI.dll']), ((1, 'hResource'),(1, 'samDesired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNodeKey():
    try:
        return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32)(('GetClusterNodeKey', windll['CLUSAPI.dll']), ((1, 'hNode'),(1, 'samDesired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNetworkKey():
    try:
        return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HNETWORK_head),UInt32)(('GetClusterNetworkKey', windll['CLUSAPI.dll']), ((1, 'hNetwork'),(1, 'samDesired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetClusterNetInterfaceKey():
    try:
        return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),UInt32)(('GetClusterNetInterfaceKey', windll['CLUSAPI.dll']), ((1, 'hNetInterface'),(1, 'samDesired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCreateKey():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,UInt32,POINTER(win32more.Security.SECURITY_ATTRIBUTES_head),POINTER(win32more.System.Registry.HKEY),POINTER(UInt32))(('ClusterRegCreateKey', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'lpszSubKey'),(1, 'dwOptions'),(1, 'samDesired'),(1, 'lpSecurityAttributes'),(1, 'phkResult'),(1, 'lpdwDisposition'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegOpenKey():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.System.Registry.HKEY))(('ClusterRegOpenKey', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'lpszSubKey'),(1, 'samDesired'),(1, 'phkResult'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegDeleteKey():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR)(('ClusterRegDeleteKey', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'lpszSubKey'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCloseKey():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY)(('ClusterRegCloseKey', windll['CLUSAPI.dll']), ((1, 'hKey'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegEnumKey():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,UInt32,win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(win32more.Foundation.FILETIME_head))(('ClusterRegEnumKey', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'dwIndex'),(1, 'lpszName'),(1, 'lpcchName'),(1, 'lpftLastWriteTime'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegSetValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,c_char_p_no,UInt32)(('ClusterRegSetValue', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'lpszValueName'),(1, 'dwType'),(1, 'lpData'),(1, 'cbData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegDeleteValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR)(('ClusterRegDeleteValue', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'lpszValueName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegQueryValue():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(UInt32),c_char_p_no,POINTER(UInt32))(('ClusterRegQueryValue', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'lpszValueName'),(1, 'lpdwValueType'),(1, 'lpData'),(1, 'lpcbData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegEnumValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,UInt32,win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(UInt32),c_char_p_no,POINTER(UInt32))(('ClusterRegEnumValue', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'dwIndex'),(1, 'lpszValueName'),(1, 'lpcchValueName'),(1, 'lpdwType'),(1, 'lpData'),(1, 'lpcbData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegQueryInfoKey():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(win32more.Foundation.FILETIME_head))(('ClusterRegQueryInfoKey', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'lpcSubKeys'),(1, 'lpcchMaxSubKeyLen'),(1, 'lpcValues'),(1, 'lpcchMaxValueNameLen'),(1, 'lpcbMaxValueLen'),(1, 'lpcbSecurityDescriptor'),(1, 'lpftLastWriteTime'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegGetKeySecurity():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,UInt32,win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt32))(('ClusterRegGetKeySecurity', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'RequestedInformation'),(1, 'pSecurityDescriptor'),(1, 'lpcbSecurityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegSetKeySecurity():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,UInt32,win32more.Security.PSECURITY_DESCRIPTOR)(('ClusterRegSetKeySecurity', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'SecurityInformation'),(1, 'pSecurityDescriptor'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegSyncDatabase():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)(('ClusterRegSyncDatabase', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'flags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCreateBatch():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(POINTER(win32more.Networking.Clustering._HREGBATCH_head)))(('ClusterRegCreateBatch', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'pHREGBATCH'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegBatchAddCommand():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCH_head),win32more.Networking.Clustering.CLUSTER_REG_COMMAND,win32more.Foundation.PWSTR,UInt32,c_void_p,UInt32)(('ClusterRegBatchAddCommand', windll['CLUSAPI.dll']), ((1, 'hRegBatch'),(1, 'dwCommand'),(1, 'wzName'),(1, 'dwOptions'),(1, 'lpData'),(1, 'cbData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCloseBatch():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCH_head),win32more.Foundation.BOOL,POINTER(Int32))(('ClusterRegCloseBatch', windll['CLUSAPI.dll']), ((1, 'hRegBatch'),(1, 'bCommit'),(1, 'failedCommandNumber'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCloseBatchEx():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCH_head),UInt32,POINTER(Int32))(('ClusterRegCloseBatchEx', windll['CLUSAPI.dll']), ((1, 'hRegBatch'),(1, 'flags'),(1, 'failedCommandNumber'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegBatchReadCommand():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHNOTIFICATION_head),POINTER(win32more.Networking.Clustering.CLUSTER_BATCH_COMMAND_head))(('ClusterRegBatchReadCommand', windll['CLUSAPI.dll']), ((1, 'hBatchNotification'),(1, 'pBatchCommand'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegBatchCloseNotification():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHNOTIFICATION_head))(('ClusterRegBatchCloseNotification', windll['CLUSAPI.dll']), ((1, 'hBatchNotification'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCreateBatchNotifyPort():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(POINTER(win32more.Networking.Clustering._HREGBATCHPORT_head)))(('ClusterRegCreateBatchNotifyPort', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'phBatchNotifyPort'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCloseBatchNotifyPort():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHPORT_head))(('ClusterRegCloseBatchNotifyPort', windll['CLUSAPI.dll']), ((1, 'hBatchNotifyPort'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegGetBatchNotification():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHPORT_head),POINTER(POINTER(win32more.Networking.Clustering._HREGBATCHNOTIFICATION_head)))(('ClusterRegGetBatchNotification', windll['CLUSAPI.dll']), ((1, 'hBatchNotify'),(1, 'phBatchNotification'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCreateReadBatch():
    try:
        return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(POINTER(win32more.Networking.Clustering._HREGREADBATCH_head)))(('ClusterRegCreateReadBatch', windll['CLUSAPI.dll']), ((1, 'hKey'),(1, 'phRegReadBatch'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegReadBatchAddCommand():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCH_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('ClusterRegReadBatchAddCommand', windll['CLUSAPI.dll']), ((1, 'hRegReadBatch'),(1, 'wzSubkeyName'),(1, 'wzValueName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCloseReadBatch():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCH_head),POINTER(POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head)))(('ClusterRegCloseReadBatch', windll['CLUSAPI.dll']), ((1, 'hRegReadBatch'),(1, 'phRegReadBatchReply'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCloseReadBatchEx():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCH_head),UInt32,POINTER(POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head)))(('ClusterRegCloseReadBatchEx', windll['CLUSAPI.dll']), ((1, 'hRegReadBatch'),(1, 'flags'),(1, 'phRegReadBatchReply'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegReadBatchReplyNextCommand():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head),POINTER(win32more.Networking.Clustering.CLUSTER_READ_BATCH_COMMAND_head))(('ClusterRegReadBatchReplyNextCommand', windll['CLUSAPI.dll']), ((1, 'hRegReadBatchReply'),(1, 'pBatchCommand'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterRegCloseReadBatchReply():
    try:
        return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head))(('ClusterRegCloseReadBatchReply', windll['CLUSAPI.dll']), ((1, 'hRegReadBatchReply'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterSetAccountAccess():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,UInt32)(('ClusterSetAccountAccess', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'szAccountSID'),(1, 'dwAccess'),(1, 'dwControlType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateCluster():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CREATE_CLUSTER_CONFIG_head),win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)(('CreateCluster', windll['CLUSAPI.dll']), ((1, 'pConfig'),(1, 'pfnProgressCallback'),(1, 'pvCallbackArg'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CreateClusterNameAccount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CREATE_CLUSTER_NAME_ACCOUNT_head),win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)(('CreateClusterNameAccount', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'pConfig'),(1, 'pfnProgressCallback'),(1, 'pvCallbackArg'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveClusterNameAccount():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.BOOL)(('RemoveClusterNameAccount', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'bDeleteComputerObjects'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DetermineCNOResTypeFromNodelist():
    try:
        return WINFUNCTYPE(UInt32,UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(win32more.Networking.Clustering.CLUSTER_MGMT_POINT_RESTYPE))(('DetermineCNOResTypeFromNodelist', windll['CLUSAPI.dll']), ((1, 'cNodes'),(1, 'ppszNodeNames'),(1, 'pCNOResType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DetermineCNOResTypeFromCluster():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CLUSTER_MGMT_POINT_RESTYPE))(('DetermineCNOResTypeFromCluster', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'pCNOResType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DetermineClusterCloudTypeFromNodelist():
    try:
        return WINFUNCTYPE(UInt32,UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(win32more.Networking.Clustering.CLUSTER_CLOUD_TYPE))(('DetermineClusterCloudTypeFromNodelist', windll['CLUSAPI.dll']), ((1, 'cNodes'),(1, 'ppszNodeNames'),(1, 'pCloudType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DetermineClusterCloudTypeFromCluster():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CLUSTER_CLOUD_TYPE))(('DetermineClusterCloudTypeFromCluster', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'pCloudType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_GetNodeCloudTypeDW():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(UInt32))(('GetNodeCloudTypeDW', windll['CLUSAPI.dll']), ((1, 'ppszNodeName'),(1, 'NodeCloudType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RegisterClusterResourceTypeNotifyV2():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),Int64,win32more.Foundation.PWSTR,UIntPtr)(('RegisterClusterResourceTypeNotifyV2', windll['CLUSAPI.dll']), ((1, 'hChange'),(1, 'hCluster'),(1, 'Flags'),(1, 'resTypeName'),(1, 'dwNotifyKey'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterNode():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)(('AddClusterNode', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeName'),(1, 'pfnProgressCallback'),(1, 'pvCallbackArg'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterStorageNode():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('AddClusterStorageNode', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeName'),(1, 'pfnProgressCallback'),(1, 'pvCallbackArg'),(1, 'lpszClusterStorageNodeDescription'),(1, 'lpszClusterStorageNodeLocation'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_AddClusterNodeEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)(('AddClusterNodeEx', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszNodeName'),(1, 'dwFlags'),(1, 'pfnProgressCallback'),(1, 'pvCallbackArg'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RemoveClusterStorageNode():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,UInt32)(('RemoveClusterStorageNode', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'lpszClusterStorageEnclosureName'),(1, 'dwTimeout'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_DestroyCluster():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p,win32more.Foundation.BOOL)(('DestroyCluster', windll['CLUSAPI.dll']), ((1, 'hCluster'),(1, 'pfnProgressCallback'),(1, 'pvCallbackArg'),(1, 'fdeleteVirtualComputerObjects'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_InitializeClusterHealthFault():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_head))(('InitializeClusterHealthFault', windll['RESUTILS.dll']), ((1, 'clusterHealthFault'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_InitializeClusterHealthFaultArray():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_ARRAY_head))(('InitializeClusterHealthFaultArray', windll['RESUTILS.dll']), ((1, 'clusterHealthFaultArray'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FreeClusterHealthFault():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_head))(('FreeClusterHealthFault', windll['RESUTILS.dll']), ((1, 'clusterHealthFault'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FreeClusterHealthFaultArray():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_ARRAY_head))(('FreeClusterHealthFaultArray', windll['RESUTILS.dll']), ((1, 'clusterHealthFaultArray'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusGetClusterHealthFaults():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_ARRAY_head),UInt32)(('ClusGetClusterHealthFaults', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'objects'),(1, 'flags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusRemoveClusterHealthFault():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32)(('ClusRemoveClusterHealthFault', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'id'),(1, 'flags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusAddClusterHealthFault():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_head),UInt32)(('ClusAddClusterHealthFault', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'failure'),(1, 'param2'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilStartResourceService():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(IntPtr))(('ResUtilStartResourceService', windll['RESUTILS.dll']), ((1, 'pszServiceName'),(1, 'phServiceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilVerifyResourceService():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)(('ResUtilVerifyResourceService', windll['RESUTILS.dll']), ((1, 'pszServiceName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilStopResourceService():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)(('ResUtilStopResourceService', windll['RESUTILS.dll']), ((1, 'pszServiceName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilVerifyService():
    try:
        return WINFUNCTYPE(UInt32,win32more.Security.SC_HANDLE)(('ResUtilVerifyService', windll['RESUTILS.dll']), ((1, 'hServiceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilStopService():
    try:
        return WINFUNCTYPE(UInt32,win32more.Security.SC_HANDLE)(('ResUtilStopService', windll['RESUTILS.dll']), ((1, 'hServiceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilCreateDirectoryTree():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)(('ResUtilCreateDirectoryTree', windll['RESUTILS.dll']), ((1, 'pszPath'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilIsPathValid():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR)(('ResUtilIsPathValid', windll['RESUTILS.dll']), ((1, 'pszPath'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilEnumProperties():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32),POINTER(UInt32))(('ResUtilEnumProperties', windll['RESUTILS.dll']), ((1, 'pPropertyTable'),(1, 'pszOutProperties'),(1, 'cbOutPropertiesSize'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilEnumPrivateProperties():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,POINTER(UInt32),POINTER(UInt32))(('ResUtilEnumPrivateProperties', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszOutProperties'),(1, 'cbOutPropertiesSize'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetProperties():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))(('ResUtilGetProperties', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'pOutPropertyList'),(1, 'cbOutPropertyListSize'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetAllProperties():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))(('ResUtilGetAllProperties', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'pOutPropertyList'),(1, 'cbOutPropertyListSize'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetPrivateProperties():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))(('ResUtilGetPrivateProperties', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pOutPropertyList'),(1, 'cbOutPropertyListSize'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetPropertySize():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),POINTER(UInt32),POINTER(UInt32))(('ResUtilGetPropertySize', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTableItem'),(1, 'pcbOutPropertyListSize'),(1, 'pnPropertyCount'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetProperty():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),POINTER(c_void_p),POINTER(UInt32))(('ResUtilGetProperty', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTableItem'),(1, 'pOutPropertyItem'),(1, 'pcbOutPropertyItemSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilVerifyPropertyTable():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,win32more.Foundation.BOOL,c_void_p,UInt32,c_char_p_no)(('ResUtilVerifyPropertyTable', windll['RESUTILS.dll']), ((1, 'pPropertyTable'),(1, 'Reserved'),(1, 'bAllowUnknownProperties'),(1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),(1, 'pOutParams'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetPropertyTable():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,win32more.Foundation.BOOL,c_void_p,UInt32,c_char_p_no)(('ResUtilSetPropertyTable', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'Reserved'),(1, 'bAllowUnknownProperties'),(1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),(1, 'pOutParams'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetPropertyTableEx():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,win32more.Foundation.BOOL,c_void_p,UInt32,win32more.Foundation.BOOL,c_char_p_no)(('ResUtilSetPropertyTableEx', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'Reserved'),(1, 'bAllowUnknownProperties'),(1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),(1, 'bForceWrite'),(1, 'pOutParams'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetPropertyParameterBlock():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,c_char_p_no,c_void_p,UInt32,c_char_p_no)(('ResUtilSetPropertyParameterBlock', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'Reserved'),(1, 'pInParams'),(1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),(1, 'pOutParams'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetPropertyParameterBlockEx():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,c_char_p_no,c_void_p,UInt32,win32more.Foundation.BOOL,c_char_p_no)(('ResUtilSetPropertyParameterBlockEx', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'Reserved'),(1, 'pInParams'),(1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),(1, 'bForceWrite'),(1, 'pOutParams'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetUnknownProperties():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32)(('ResUtilSetUnknownProperties', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetPropertiesToParameterBlock():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_char_p_no,win32more.Foundation.BOOL,POINTER(win32more.Foundation.PWSTR))(('ResUtilGetPropertiesToParameterBlock', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'pOutParams'),(1, 'bCheckForRequiredProperties'),(1, 'pszNameOfPropInError'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilPropertyListFromParameterBlock():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,POINTER(UInt32),c_char_p_no,POINTER(UInt32),POINTER(UInt32))(('ResUtilPropertyListFromParameterBlock', windll['RESUTILS.dll']), ((1, 'pPropertyTable'),(1, 'pOutPropertyList'),(1, 'pcbOutPropertyListSize'),(1, 'pInParams'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilDupParameterBlock():
    try:
        return WINFUNCTYPE(UInt32,c_char_p_no,c_char_p_no,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head))(('ResUtilDupParameterBlock', windll['RESUTILS.dll']), ((1, 'pOutParams'),(1, 'pInParams'),(1, 'pPropertyTable'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFreeParameterBlock():
    try:
        return WINFUNCTYPE(Void,c_char_p_no,c_char_p_no,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head))(('ResUtilFreeParameterBlock', windll['RESUTILS.dll']), ((1, 'pOutParams'),(1, 'pInParams'),(1, 'pPropertyTable'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilAddUnknownProperties():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))(('ResUtilAddUnknownProperties', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pPropertyTable'),(1, 'pOutPropertyList'),(1, 'pcbOutPropertyListSize'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetPrivatePropertyList():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,c_void_p,UInt32)(('ResUtilSetPrivatePropertyList', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilVerifyPrivatePropertyList():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32)(('ResUtilVerifyPrivatePropertyList', windll['RESUTILS.dll']), ((1, 'pInPropertyList'),(1, 'cbInPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilDupString():
    try:
        return WINFUNCTYPE(win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('ResUtilDupString', windll['RESUTILS.dll']), ((1, 'pszInString'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetBinaryValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilGetBinaryValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'ppbOutValue'),(1, 'pcbOutValueSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetSzValue():
    try:
        return WINFUNCTYPE(win32more.Foundation.PWSTR,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR)(('ResUtilGetSzValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetDwordValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(UInt32),UInt32)(('ResUtilGetDwordValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'pdwOutValue'),(1, 'dwDefaultValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetQwordValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(UInt64),UInt64)(('ResUtilGetQwordValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'pqwOutValue'),(1, 'qwDefaultValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetBinaryValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilSetBinaryValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'pbNewValue'),(1, 'cbNewValueSize'),(1, 'ppbOutValue'),(1, 'pcbOutValueSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetSzValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))(('ResUtilSetSzValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'pszNewValue'),(1, 'ppszOutString'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetExpandSzValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))(('ResUtilSetExpandSzValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'pszNewValue'),(1, 'ppszOutString'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetMultiSzValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(UInt32))(('ResUtilSetMultiSzValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'pszNewValue'),(1, 'cbNewValueSize'),(1, 'ppszOutValue'),(1, 'pcbOutValueSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetDwordValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))(('ResUtilSetDwordValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'dwNewValue'),(1, 'pdwOutValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetQwordValue():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt64,POINTER(UInt64))(('ResUtilSetQwordValue', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'pszValueName'),(1, 'qwNewValue'),(1, 'pqwOutValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetValueEx():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,c_char_p_no,UInt32,UInt32)(('ResUtilSetValueEx', windll['RESUTILS.dll']), ((1, 'hkeyClusterKey'),(1, 'valueName'),(1, 'valueType'),(1, 'valueData'),(1, 'valueSize'),(1, 'flags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetBinaryProperty():
    try:
        return WINFUNCTYPE(UInt32,POINTER(c_char_p_no),POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSPROP_BINARY_head),c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilGetBinaryProperty', windll['RESUTILS.dll']), ((1, 'ppbOutValue'),(1, 'pcbOutValueSize'),(1, 'pValueStruct'),(1, 'pbOldValue'),(1, 'cbOldValueSize'),(1, 'ppPropertyList'),(1, 'pcbPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetSzProperty():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(win32more.Networking.Clustering.CLUSPROP_SZ_head),win32more.Foundation.PWSTR,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilGetSzProperty', windll['RESUTILS.dll']), ((1, 'ppszOutValue'),(1, 'pValueStruct'),(1, 'pszOldValue'),(1, 'ppPropertyList'),(1, 'pcbPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetMultiSzProperty():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSPROP_SZ_head),win32more.Foundation.PWSTR,UInt32,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilGetMultiSzProperty', windll['RESUTILS.dll']), ((1, 'ppszOutValue'),(1, 'pcbOutValueSize'),(1, 'pValueStruct'),(1, 'pszOldValue'),(1, 'cbOldValueSize'),(1, 'ppPropertyList'),(1, 'pcbPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetDwordProperty():
    try:
        return WINFUNCTYPE(UInt32,POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSPROP_DWORD_head),UInt32,UInt32,UInt32,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilGetDwordProperty', windll['RESUTILS.dll']), ((1, 'pdwOutValue'),(1, 'pValueStruct'),(1, 'dwOldValue'),(1, 'dwMinimum'),(1, 'dwMaximum'),(1, 'ppPropertyList'),(1, 'pcbPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetLongProperty():
    try:
        return WINFUNCTYPE(UInt32,POINTER(Int32),POINTER(win32more.Networking.Clustering.CLUSPROP_LONG_head),Int32,Int32,Int32,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilGetLongProperty', windll['RESUTILS.dll']), ((1, 'plOutValue'),(1, 'pValueStruct'),(1, 'lOldValue'),(1, 'lMinimum'),(1, 'lMaximum'),(1, 'ppPropertyList'),(1, 'pcbPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetFileTimeProperty():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Foundation.FILETIME_head),POINTER(win32more.Networking.Clustering.CLUSPROP_FILETIME_head),win32more.Foundation.FILETIME,win32more.Foundation.FILETIME,win32more.Foundation.FILETIME,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilGetFileTimeProperty', windll['RESUTILS.dll']), ((1, 'pftOutValue'),(1, 'pValueStruct'),(1, 'ftOldValue'),(1, 'ftMinimum'),(1, 'ftMaximum'),(1, 'ppPropertyList'),(1, 'pcbPropertyListSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetEnvironmentWithNetName():
    try:
        return WINFUNCTYPE(c_void_p,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('ResUtilGetEnvironmentWithNetName', windll['RESUTILS.dll']), ((1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFreeEnvironment():
    try:
        return WINFUNCTYPE(UInt32,c_void_p)(('ResUtilFreeEnvironment', windll['RESUTILS.dll']), ((1, 'lpEnvironment'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilExpandEnvironmentStrings():
    try:
        return WINFUNCTYPE(win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('ResUtilExpandEnvironmentStrings', windll['RESUTILS.dll']), ((1, 'pszSrc'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetResourceServiceEnvironment():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)(('ResUtilSetResourceServiceEnvironment', windll['RESUTILS.dll']), ((1, 'pszServiceName'),(1, 'hResource'),(1, 'pfnLogEvent'),(1, 'hResourceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilRemoveResourceServiceEnvironment():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)(('ResUtilRemoveResourceServiceEnvironment', windll['RESUTILS.dll']), ((1, 'pszServiceName'),(1, 'pfnLogEvent'),(1, 'hResourceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetResourceServiceStartParameters():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Security.SC_HANDLE,POINTER(IntPtr),win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)(('ResUtilSetResourceServiceStartParameters', windll['RESUTILS.dll']), ((1, 'pszServiceName'),(1, 'schSCMHandle'),(1, 'phService'),(1, 'pfnLogEvent'),(1, 'hResourceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindSzProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))(('ResUtilFindSzProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'pszPropertyValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindExpandSzProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))(('ResUtilFindExpandSzProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'pszPropertyValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindExpandedSzProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))(('ResUtilFindExpandedSzProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'pszPropertyValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindDwordProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(UInt32))(('ResUtilFindDwordProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'pdwPropertyValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindBinaryProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(c_char_p_no),POINTER(UInt32))(('ResUtilFindBinaryProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'pbPropertyValue'),(1, 'pcbPropertyValueSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindMultiSzProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR),POINTER(UInt32))(('ResUtilFindMultiSzProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'pszPropertyValue'),(1, 'pcbPropertyValueSize'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindLongProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(Int32))(('ResUtilFindLongProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'plPropertyValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindULargeIntegerProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(UInt64))(('ResUtilFindULargeIntegerProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'plPropertyValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindFileTimeProperty():
    try:
        return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.FILETIME_head))(('ResUtilFindFileTimeProperty', windll['RESUTILS.dll']), ((1, 'pPropertyList'),(1, 'cbPropertyListSize'),(1, 'pszPropertyName'),(1, 'pftPropertyValue'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusWorkerCreate():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head),win32more.Networking.Clustering.PWORKER_START_ROUTINE,c_void_p)(('ClusWorkerCreate', windll['RESUTILS.dll']), ((1, 'lpWorker'),(1, 'lpStartAddress'),(1, 'lpParameter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusWorkerCheckTerminate():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head))(('ClusWorkerCheckTerminate', windll['RESUTILS.dll']), ((1, 'lpWorker'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusWorkerTerminate():
    try:
        return WINFUNCTYPE(Void,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head))(('ClusWorkerTerminate', windll['RESUTILS.dll']), ((1, 'lpWorker'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusWorkerTerminateEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head),UInt32,win32more.Foundation.BOOL)(('ClusWorkerTerminateEx', windll['RESUTILS.dll']), ((1, 'ClusWorker'),(1, 'TimeoutInMilliseconds'),(1, 'WaitOnly'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusWorkersTerminate():
    try:
        return WINFUNCTYPE(UInt32,POINTER(POINTER(win32more.Networking.Clustering.CLUS_WORKER_head)),UIntPtr,UInt32,win32more.Foundation.BOOL)(('ClusWorkersTerminate', windll['RESUTILS.dll']), ((1, 'ClusWorkers'),(1, 'ClusWorkersCount'),(1, 'TimeoutInMilliseconds'),(1, 'WaitOnly'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilResourcesEqual():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('ResUtilResourcesEqual', windll['RESUTILS.dll']), ((1, 'hSelf'),(1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilResourceTypesEqual():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('ResUtilResourceTypesEqual', windll['RESUTILS.dll']), ((1, 'lpszResourceTypeName'),(1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilIsResourceClassEqual():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))(('ResUtilIsResourceClassEqual', windll['RESUTILS.dll']), ((1, 'prci'),(1, 'hResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilEnumResources():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.LPRESOURCE_CALLBACK,c_void_p)(('ResUtilEnumResources', windll['RESUTILS.dll']), ((1, 'hSelf'),(1, 'lpszResTypeName'),(1, 'pResCallBack'),(1, 'pParameter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilEnumResourcesEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.LPRESOURCE_CALLBACK_EX,c_void_p)(('ResUtilEnumResourcesEx', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'lpszResTypeName'),(1, 'pResCallBack'),(1, 'pParameter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceDependency():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR)(('ResUtilGetResourceDependency', windll['RESUTILS.dll']), ((1, 'hSelf'),(1, 'lpszResourceType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceDependencyByName():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR,win32more.Foundation.BOOL)(('ResUtilGetResourceDependencyByName', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'lpszResourceType'),(1, 'bRecurse'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceDependencyByClass():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,POINTER(win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO_head),win32more.Foundation.BOOL)(('ResUtilGetResourceDependencyByClass', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'prci'),(1, 'bRecurse'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceNameDependency():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)(('ResUtilGetResourceNameDependency', windll['RESUTILS.dll']), ((1, 'lpszResourceName'),(1, 'lpszResourceType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceDependentIPAddressProps():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ResUtilGetResourceDependentIPAddressProps', windll['RESUTILS.dll']), ((1, 'hResource'),(1, 'pszAddress'),(1, 'pcchAddress'),(1, 'pszSubnetMask'),(1, 'pcchSubnetMask'),(1, 'pszNetwork'),(1, 'pcchNetwork'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilFindDependentDiskResourceDriveLetter():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))(('ResUtilFindDependentDiskResourceDriveLetter', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hResource'),(1, 'pszDriveLetter'),(1, 'pcchDriveLetter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilTerminateServiceProcessFromResDll():
    try:
        return WINFUNCTYPE(UInt32,UInt32,win32more.Foundation.BOOL,POINTER(UInt32),win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)(('ResUtilTerminateServiceProcessFromResDll', windll['RESUTILS.dll']), ((1, 'dwServicePid'),(1, 'bOffline'),(1, 'pdwResourceState'),(1, 'pfnLogEvent'),(1, 'hResourceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetPropertyFormats():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))(('ResUtilGetPropertyFormats', windll['RESUTILS.dll']), ((1, 'pPropertyTable'),(1, 'pOutPropertyFormatList'),(1, 'cbPropertyFormatListSize'),(1, 'pcbBytesReturned'),(1, 'pcbRequired'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetCoreClusterResources():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)))(('ResUtilGetCoreClusterResources', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'phClusterNameResource'),(1, 'phClusterIPAddressResource'),(1, 'phClusterQuorumResource'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceName():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))(('ResUtilGetResourceName', windll['RESUTILS.dll']), ((1, 'hResource'),(1, 'pszResourceName'),(1, 'pcchResourceNameInOut'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetClusterRoleState():
    try:
        return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_ROLE_STATE,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Networking.Clustering.CLUSTER_ROLE)(('ResUtilGetClusterRoleState', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'eClusterRole'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterIsPathOnSharedVolume():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR)(('ClusterIsPathOnSharedVolume', windll['RESUTILS.dll']), ((1, 'lpszPathName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGetVolumePathName():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)(('ClusterGetVolumePathName', windll['RESUTILS.dll']), ((1, 'lpszFileName'),(1, 'lpszVolumePathName'),(1, 'cchBufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterGetVolumeNameForVolumeMountPoint():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)(('ClusterGetVolumeNameForVolumeMountPoint', windll['RESUTILS.dll']), ((1, 'lpszVolumeMountPoint'),(1, 'lpszVolumeName'),(1, 'cchBufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterPrepareSharedVolumeForBackup():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))(('ClusterPrepareSharedVolumeForBackup', windll['RESUTILS.dll']), ((1, 'lpszFileName'),(1, 'lpszVolumePathName'),(1, 'lpcchVolumePathName'),(1, 'lpszVolumeName'),(1, 'lpcchVolumeName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterClearBackupStateForSharedVolume():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)(('ClusterClearBackupStateForSharedVolume', windll['RESUTILS.dll']), ((1, 'lpszVolumePathName'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilSetResourceServiceStartParametersEx():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Security.SC_HANDLE,POINTER(IntPtr),UInt32,win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)(('ResUtilSetResourceServiceStartParametersEx', windll['RESUTILS.dll']), ((1, 'pszServiceName'),(1, 'schSCMHandle'),(1, 'phService'),(1, 'dwDesiredAccess'),(1, 'pfnLogEvent'),(1, 'hResourceHandle'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilEnumResourcesEx2():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.LPRESOURCE_CALLBACK_EX,c_void_p,UInt32)(('ResUtilEnumResourcesEx2', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'lpszResTypeName'),(1, 'pResCallBack'),(1, 'pParameter'),(1, 'dwDesiredAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceDependencyEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR,UInt32)(('ResUtilGetResourceDependencyEx', windll['RESUTILS.dll']), ((1, 'hSelf'),(1, 'lpszResourceType'),(1, 'dwDesiredAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceDependencyByNameEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR,win32more.Foundation.BOOL,UInt32)(('ResUtilGetResourceDependencyByNameEx', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'lpszResourceType'),(1, 'bRecurse'),(1, 'dwDesiredAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceDependencyByClassEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,POINTER(win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO_head),win32more.Foundation.BOOL,UInt32)(('ResUtilGetResourceDependencyByClassEx', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'prci'),(1, 'bRecurse'),(1, 'dwDesiredAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetResourceNameDependencyEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)(('ResUtilGetResourceNameDependencyEx', windll['RESUTILS.dll']), ((1, 'lpszResourceName'),(1, 'lpszResourceType'),(1, 'dwDesiredAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetCoreClusterResourcesEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),UInt32)(('ResUtilGetCoreClusterResourcesEx', windll['RESUTILS.dll']), ((1, 'hClusterIn'),(1, 'phClusterNameResourceOut'),(1, 'phClusterQuorumResourceOut'),(1, 'dwDesiredAccess'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterCryptProvider():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),win32more.Foundation.PWSTR,POINTER(SByte),UInt32,UInt32)(('OpenClusterCryptProvider', windll['RESUTILS.dll']), ((1, 'lpszResource'),(1, 'lpszProvider'),(1, 'dwType'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_OpenClusterCryptProviderEx():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(SByte),UInt32,UInt32)(('OpenClusterCryptProviderEx', windll['RESUTILS.dll']), ((1, 'lpszResource'),(1, 'lpszKeyname'),(1, 'lpszProvider'),(1, 'dwType'),(1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_CloseClusterCryptProvider():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head))(('CloseClusterCryptProvider', windll['RESUTILS.dll']), ((1, 'hClusCryptProvider'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterEncrypt():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))(('ClusterEncrypt', windll['RESUTILS.dll']), ((1, 'hClusCryptProvider'),(1, 'pData'),(1, 'cbData'),(1, 'ppData'),(1, 'pcbData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ClusterDecrypt():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))(('ClusterDecrypt', windll['RESUTILS.dll']), ((1, 'hClusCryptProvider'),(1, 'pCryptInput'),(1, 'cbCryptInput'),(1, 'ppCryptOutput'),(1, 'pcbCryptOutput'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_FreeClusterCrypt():
    try:
        return WINFUNCTYPE(UInt32,c_void_p)(('FreeClusterCrypt', windll['RESUTILS.dll']), ((1, 'pCryptInfo'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilVerifyShutdownSafe():
    try:
        return WINFUNCTYPE(UInt32,UInt32,UInt32,POINTER(UInt32))(('ResUtilVerifyShutdownSafe', windll['RESUTILS.dll']), ((1, 'flags'),(1, 'reason'),(1, 'pResult'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilPaxosComparer():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering.PaxosTagCStruct_head),POINTER(win32more.Networking.Clustering.PaxosTagCStruct_head))(('ResUtilPaxosComparer', windll['RESUTILS.dll']), ((1, 'left'),(1, 'right'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilLeftPaxosIsLessThanRight():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering.PaxosTagCStruct_head),POINTER(win32more.Networking.Clustering.PaxosTagCStruct_head))(('ResUtilLeftPaxosIsLessThanRight', windll['RESUTILS.dll']), ((1, 'left'),(1, 'right'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilsDeleteKeyTree():
    try:
        return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.BOOL)(('ResUtilsDeleteKeyTree', windll['RESUTILS.dll']), ((1, 'key'),(1, 'keyName'),(1, 'treatNoKeyAsError'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGroupsEqual():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Foundation.BOOL))(('ResUtilGroupsEqual', windll['RESUTILS.dll']), ((1, 'hSelf'),(1, 'hGroup'),(1, 'pEqual'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilEnumGroups():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Networking.Clustering.LPGROUP_CALLBACK_EX,c_void_p)(('ResUtilEnumGroups', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'pResCallBack'),(1, 'pParameter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilEnumGroupsEx():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Networking.Clustering.CLUSGROUP_TYPE,win32more.Networking.Clustering.LPGROUP_CALLBACK_EX,c_void_p)(('ResUtilEnumGroupsEx', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'hSelf'),(1, 'groupType'),(1, 'pResCallBack'),(1, 'pParameter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilDupGroup():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(POINTER(win32more.Networking.Clustering._HGROUP_head)))(('ResUtilDupGroup', windll['RESUTILS.dll']), ((1, 'group'),(1, 'copy'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetClusterGroupType():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering.CLUSGROUP_TYPE))(('ResUtilGetClusterGroupType', windll['RESUTILS.dll']), ((1, 'hGroup'),(1, 'groupType'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetCoreGroup():
    try:
        return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head))(('ResUtilGetCoreGroup', windll['RESUTILS.dll']), ((1, 'hCluster'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilResourceDepEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32,win32more.Networking.Clustering.LPRESOURCE_CALLBACK_EX,c_void_p)(('ResUtilResourceDepEnum', windll['RESUTILS.dll']), ((1, 'hSelf'),(1, 'enumType'),(1, 'pResCallBack'),(1, 'pParameter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilDupResource():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)))(('ResUtilDupResource', windll['RESUTILS.dll']), ((1, 'group'),(1, 'copy'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilGetClusterId():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(Guid))(('ResUtilGetClusterId', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'guid'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResUtilNodeEnum():
    try:
        return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Networking.Clustering.LPNODE_CALLBACK,c_void_p)(('ResUtilNodeEnum', windll['RESUTILS.dll']), ((1, 'hCluster'),(1, 'pNodeCallBack'),(1, 'pParameter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RegisterAppInstance():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),win32more.Foundation.BOOL)(('RegisterAppInstance', windll['NTLANMAN.dll']), ((1, 'ProcessHandle'),(1, 'AppInstanceId'),(1, 'ChildrenInheritAppInstance'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_RegisterAppInstanceVersion():
    try:
        return WINFUNCTYPE(UInt32,POINTER(Guid),UInt64,UInt64)(('RegisterAppInstanceVersion', windll['NTLANMAN.dll']), ((1, 'AppInstanceId'),(1, 'InstanceVersionHigh'),(1, 'InstanceVersionLow'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_QueryAppInstanceVersion():
    try:
        return WINFUNCTYPE(UInt32,POINTER(Guid),POINTER(UInt64),POINTER(UInt64),POINTER(win32more.Foundation.NTSTATUS))(('QueryAppInstanceVersion', windll['NTLANMAN.dll']), ((1, 'AppInstanceId'),(1, 'InstanceVersionHigh'),(1, 'InstanceVersionLow'),(1, 'VersionStatus'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_ResetAllAppInstanceVersions():
    try:
        return WINFUNCTYPE(UInt32,)(('ResetAllAppInstanceVersions', windll['NTLANMAN.dll']), ())
    except (FileNotFoundError, AttributeError):
        return None
def _define_SetAppInstanceCsvFlags():
    try:
        return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,UInt32)(('SetAppInstanceCsvFlags', windll['NTLANMAN.dll']), ((1, 'ProcessHandle'),(1, 'Mask'),(1, 'Flags'),))
    except (FileNotFoundError, AttributeError):
        return None
CLCTL_CODES = Int32
CLCTL_UNKNOWN = 0
CLCTL_GET_CHARACTERISTICS = 5
CLCTL_GET_FLAGS = 9
CLCTL_GET_CLASS_INFO = 13
CLCTL_GET_REQUIRED_DEPENDENCIES = 17
CLCTL_GET_ARB_TIMEOUT = 21
CLCTL_GET_FAILURE_INFO = 25
CLCTL_GET_NAME = 41
CLCTL_GET_RESOURCE_TYPE = 45
CLCTL_GET_NODE = 49
CLCTL_GET_NETWORK = 53
CLCTL_GET_ID = 57
CLCTL_GET_FQDN = 61
CLCTL_GET_CLUSTER_SERVICE_ACCOUNT_NAME = 65
CLCTL_CHECK_VOTER_EVICT = 69
CLCTL_CHECK_VOTER_DOWN = 73
CLCTL_SHUTDOWN = 77
CLCTL_ENUM_COMMON_PROPERTIES = 81
CLCTL_GET_RO_COMMON_PROPERTIES = 85
CLCTL_GET_COMMON_PROPERTIES = 89
CLCTL_SET_COMMON_PROPERTIES = 4194398
CLCTL_VALIDATE_COMMON_PROPERTIES = 97
CLCTL_GET_COMMON_PROPERTY_FMTS = 101
CLCTL_GET_COMMON_RESOURCE_PROPERTY_FMTS = 105
CLCTL_ENUM_PRIVATE_PROPERTIES = 121
CLCTL_GET_RO_PRIVATE_PROPERTIES = 125
CLCTL_GET_PRIVATE_PROPERTIES = 129
CLCTL_SET_PRIVATE_PROPERTIES = 4194438
CLCTL_VALIDATE_PRIVATE_PROPERTIES = 137
CLCTL_GET_PRIVATE_PROPERTY_FMTS = 141
CLCTL_GET_PRIVATE_RESOURCE_PROPERTY_FMTS = 145
CLCTL_ADD_REGISTRY_CHECKPOINT = 4194466
CLCTL_DELETE_REGISTRY_CHECKPOINT = 4194470
CLCTL_GET_REGISTRY_CHECKPOINTS = 169
CLCTL_ADD_CRYPTO_CHECKPOINT = 4194478
CLCTL_DELETE_CRYPTO_CHECKPOINT = 4194482
CLCTL_GET_CRYPTO_CHECKPOINTS = 181
CLCTL_RESOURCE_UPGRADE_DLL = 4194490
CLCTL_ADD_REGISTRY_CHECKPOINT_64BIT = 4194494
CLCTL_ADD_REGISTRY_CHECKPOINT_32BIT = 4194498
CLCTL_GET_LOADBAL_PROCESS_LIST = 201
CLCTL_SET_ACCOUNT_ACCESS = 4194546
CLCTL_GET_NETWORK_NAME = 361
CLCTL_NETNAME_GET_VIRTUAL_SERVER_TOKEN = 365
CLCTL_NETNAME_REGISTER_DNS_RECORDS = 370
CLCTL_GET_DNS_NAME = 373
CLCTL_NETNAME_SET_PWD_INFO = 378
CLCTL_NETNAME_DELETE_CO = 382
CLCTL_NETNAME_VALIDATE_VCO = 385
CLCTL_NETNAME_RESET_VCO = 389
CLCTL_NETNAME_REPAIR_VCO = 397
CLCTL_STORAGE_GET_DISK_INFO = 401
CLCTL_STORAGE_GET_AVAILABLE_DISKS = 405
CLCTL_STORAGE_IS_PATH_VALID = 409
CLCTL_STORAGE_SYNC_CLUSDISK_DB = 4194718
CLCTL_STORAGE_GET_DISK_NUMBER_INFO = 417
CLCTL_QUERY_DELETE = 441
CLCTL_IPADDRESS_RENEW_LEASE = 4194750
CLCTL_IPADDRESS_RELEASE_LEASE = 4194754
CLCTL_QUERY_MAINTENANCE_MODE = 481
CLCTL_SET_MAINTENANCE_MODE = 4194790
CLCTL_STORAGE_SET_DRIVELETTER = 4194794
CLCTL_STORAGE_GET_DRIVELETTERS = 493
CLCTL_STORAGE_GET_DISK_INFO_EX = 497
CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX = 501
CLCTL_STORAGE_GET_DISK_INFO_EX2 = 505
CLCTL_STORAGE_GET_CLUSPORT_DISK_COUNT = 509
CLCTL_STORAGE_REMAP_DRIVELETTER = 513
CLCTL_STORAGE_GET_DISKID = 517
CLCTL_STORAGE_IS_CLUSTERABLE = 521
CLCTL_STORAGE_REMOVE_VM_OWNERSHIP = 4194830
CLCTL_STORAGE_GET_MOUNTPOINTS = 529
CLCTL_STORAGE_GET_DIRTY = 537
CLCTL_STORAGE_GET_SHARED_VOLUME_INFO = 549
CLCTL_STORAGE_IS_CSV_FILE = 553
CLCTL_STORAGE_GET_RESOURCEID = 557
CLCTL_VALIDATE_PATH = 561
CLCTL_VALIDATE_NETNAME = 565
CLCTL_VALIDATE_DIRECTORY = 569
CLCTL_BATCH_BLOCK_KEY = 574
CLCTL_BATCH_UNBLOCK_KEY = 577
CLCTL_FILESERVER_SHARE_ADD = 4194886
CLCTL_FILESERVER_SHARE_DEL = 4194890
CLCTL_FILESERVER_SHARE_MODIFY = 4194894
CLCTL_FILESERVER_SHARE_REPORT = 593
CLCTL_NETNAME_GET_OU_FOR_VCO = 4194926
CLCTL_ENABLE_SHARED_VOLUME_DIRECTIO = 4194954
CLCTL_DISABLE_SHARED_VOLUME_DIRECTIO = 4194958
CLCTL_GET_SHARED_VOLUME_ID = 657
CLCTL_SET_CSV_MAINTENANCE_MODE = 4194966
CLCTL_SET_SHARED_VOLUME_BACKUP_MODE = 4194970
CLCTL_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES = 669
CLCTL_STORAGE_GET_SHARED_VOLUME_STATES = 4194978
CLCTL_STORAGE_IS_SHARED_VOLUME = 677
CLCTL_GET_CLUSDB_TIMESTAMP = 681
CLCTL_RW_MODIFY_NOOP = 4194990
CLCTL_IS_QUORUM_BLOCKED = 689
CLCTL_POOL_GET_DRIVE_INFO = 693
CLCTL_GET_GUM_LOCK_OWNER = 697
CLCTL_GET_STUCK_NODES = 701
CLCTL_INJECT_GEM_FAULT = 705
CLCTL_INTRODUCE_GEM_REPAIR_DELAY = 709
CLCTL_SEND_DUMMY_GEM_MESSAGES = 713
CLCTL_BLOCK_GEM_SEND_RECV = 717
CLCTL_GET_GEMID_VECTOR = 721
CLCTL_ADD_CRYPTO_CHECKPOINT_EX = 4195030
CLCTL_GROUP_GET_LAST_MOVE_TIME = 729
CLCTL_SET_STORAGE_CONFIGURATION = 4195042
CLCTL_GET_STORAGE_CONFIGURATION = 741
CLCTL_GET_STORAGE_CONFIG_ATTRIBUTES = 745
CLCTL_REMOVE_NODE = 4195054
CLCTL_IS_FEATURE_INSTALLED = 753
CLCTL_IS_S2D_FEATURE_SUPPORTED = 757
CLCTL_STORAGE_GET_PHYSICAL_DISK_INFO = 761
CLCTL_STORAGE_GET_CLUSBFLT_PATHS = 765
CLCTL_STORAGE_GET_CLUSBFLT_PATHINFO = 769
CLCTL_CLEAR_NODE_CONNECTION_INFO = 4195078
CLCTL_SET_DNS_DOMAIN = 4195082
CTCTL_GET_ROUTESTATUS_BASIC = 781
CTCTL_GET_ROUTESTATUS_EXTENDED = 785
CTCTL_GET_FAULT_DOMAIN_STATE = 789
CLCTL_NETNAME_SET_PWD_INFOEX = 794
CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX2_INT = 8161
CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS = 8417
CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN = 4202726
CLCTL_RESOURCE_PREPARE_UPGRADE = 4202730
CLCTL_RESOURCE_UPGRADE_COMPLETED = 4202734
CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY = 8433
CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY = 4202742
CLCTL_REPLICATION_ADD_REPLICATION_GROUP = 8514
CLCTL_REPLICATION_GET_LOG_INFO = 8517
CLCTL_REPLICATION_GET_ELIGIBLE_LOGDISKS = 8521
CLCTL_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS = 8525
CLCTL_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS = 8529
CLCTL_REPLICATION_GET_REPLICATED_DISKS = 8533
CLCTL_REPLICATION_GET_REPLICA_VOLUMES = 8537
CLCTL_REPLICATION_GET_LOG_VOLUME = 8541
CLCTL_REPLICATION_GET_RESOURCE_GROUP = 8545
CLCTL_REPLICATION_GET_REPLICATED_PARTITION_INFO = 8549
CLCTL_GET_STATE_CHANGE_TIME = 11613
CLCTL_SET_CLUSTER_S2D_ENABLED = 4205922
CLCTL_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES = 4205934
CLCTL_GROUPSET_GET_GROUPS = 11633
CLCTL_GROUPSET_GET_PROVIDER_GROUPS = 11637
CLCTL_GROUPSET_GET_PROVIDER_GROUPSETS = 11641
CLCTL_GROUP_GET_PROVIDER_GROUPS = 11645
CLCTL_GROUP_GET_PROVIDER_GROUPSETS = 11649
CLCTL_GROUP_SET_CCF_FROM_MASTER = 4205958
CLCTL_GET_INFRASTRUCTURE_SOFS_BUFFER = 11657
CLCTL_SET_INFRASTRUCTURE_SOFS_BUFFER = 4205966
CLCTL_NOTIFY_INFRASTRUCTURE_SOFS_CHANGED = 4205970
CLCTL_SCALEOUT_COMMAND = 4205974
CLCTL_SCALEOUT_CONTROL = 4205978
CLCTL_SCALEOUT_GET_CLUSTERS = 4205981
CLCTL_RELOAD_AUTOLOGGER_CONFIG = 11730
CLCTL_STORAGE_RENAME_SHARED_VOLUME = 11734
CLCTL_STORAGE_RENAME_SHARED_VOLUME_GUID = 11738
CLCTL_ENUM_AFFINITY_RULE_NAMES = 11741
CLCTL_GET_NODES_IN_FD = 11745
CLCTL_FORCE_DB_FLUSH = 4206054
CLCTL_DELETE = 5242886
CLCTL_INSTALL_NODE = 5242890
CLCTL_EVICT_NODE = 5242894
CLCTL_ADD_DEPENDENCY = 5242898
CLCTL_REMOVE_DEPENDENCY = 5242902
CLCTL_ADD_OWNER = 5242906
CLCTL_REMOVE_OWNER = 5242910
CLCTL_SET_NAME = 5242918
CLCTL_CLUSTER_NAME_CHANGED = 5242922
CLCTL_CLUSTER_VERSION_CHANGED = 5242926
CLCTL_FIXUP_ON_UPGRADE = 5242930
CLCTL_STARTING_PHASE1 = 5242934
CLCTL_STARTING_PHASE2 = 5242938
CLCTL_HOLD_IO = 5242942
CLCTL_RESUME_IO = 5242946
CLCTL_FORCE_QUORUM = 5242950
CLCTL_INITIALIZE = 5242954
CLCTL_STATE_CHANGE_REASON = 5242958
CLCTL_PROVIDER_STATE_CHANGE = 5242962
CLCTL_LEAVING_GROUP = 5242966
CLCTL_JOINING_GROUP = 5242970
CLCTL_FSWITNESS_GET_EPOCH_INFO = 1048669
CLCTL_FSWITNESS_SET_EPOCH_INFO = 5242978
CLCTL_FSWITNESS_RELEASE_LOCK = 5242982
CLCTL_NETNAME_CREDS_NOTIFYCAM = 5242986
CLCTL_NOTIFY_QUORUM_STATUS = 5243006
CLCTL_NOTIFY_MONITOR_SHUTTING_DOWN = 1048705
CLCTL_UNDELETE = 5243014
CLCTL_GET_OPERATION_CONTEXT = 1057001
CLCTL_NOTIFY_OWNER_CHANGE = 5251362
CLCTL_VALIDATE_CHANGE_GROUP = 1057061
CLCTL_CHECK_DRAIN_VETO = 1057069
CLCTL_NOTIFY_DRAIN_COMPLETE = 1057073
def _define_CLRES_CALLBACK_FUNCTION_TABLE_head():
    class CLRES_CALLBACK_FUNCTION_TABLE(Structure):
        pass
    return CLRES_CALLBACK_FUNCTION_TABLE
def _define_CLRES_CALLBACK_FUNCTION_TABLE():
    CLRES_CALLBACK_FUNCTION_TABLE = win32more.Networking.Clustering.CLRES_CALLBACK_FUNCTION_TABLE_head
    CLRES_CALLBACK_FUNCTION_TABLE._fields_ = [
        ('LogEvent', win32more.Networking.Clustering.PLOG_EVENT_ROUTINE),
        ('SetResourceStatusEx', win32more.Networking.Clustering.PSET_RESOURCE_STATUS_ROUTINE_EX),
        ('SetResourceLockedMode', win32more.Networking.Clustering.PSET_RESOURCE_LOCKED_MODE_ROUTINE),
        ('SignalFailure', win32more.Networking.Clustering.PSIGNAL_FAILURE_ROUTINE),
        ('SetResourceInMemoryNodeLocalProperties', win32more.Networking.Clustering.PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE),
        ('EndControlCall', win32more.Networking.Clustering.PEND_CONTROL_CALL),
        ('EndTypeControlCall', win32more.Networking.Clustering.PEND_TYPE_CONTROL_CALL),
        ('ExtendControlCall', win32more.Networking.Clustering.PEXTEND_RES_CONTROL_CALL),
        ('ExtendTypeControlCall', win32more.Networking.Clustering.PEXTEND_RES_TYPE_CONTROL_CALL),
        ('RaiseResTypeNotification', win32more.Networking.Clustering.PRAISE_RES_TYPE_NOTIFICATION),
        ('ChangeResourceProcessForDumps', win32more.Networking.Clustering.PCHANGE_RESOURCE_PROCESS_FOR_DUMPS),
        ('ChangeResTypeProcessForDumps', win32more.Networking.Clustering.PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS),
        ('SetInternalState', win32more.Networking.Clustering.PSET_INTERNAL_STATE),
        ('SetResourceLockedModeEx', win32more.Networking.Clustering.PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE),
        ('RequestDump', win32more.Networking.Clustering.PREQUEST_DUMP_ROUTINE),
    ]
    return CLRES_CALLBACK_FUNCTION_TABLE
def _define_CLRES_FUNCTION_TABLE_head():
    class CLRES_FUNCTION_TABLE(Structure):
        pass
    return CLRES_FUNCTION_TABLE
def _define_CLRES_FUNCTION_TABLE():
    CLRES_FUNCTION_TABLE = win32more.Networking.Clustering.CLRES_FUNCTION_TABLE_head
    class CLRES_FUNCTION_TABLE__Anonymous_e__Union(Union):
        pass
    CLRES_FUNCTION_TABLE__Anonymous_e__Union._fields_ = [
        ('V1Functions', win32more.Networking.Clustering.CLRES_V1_FUNCTIONS),
        ('V2Functions', win32more.Networking.Clustering.CLRES_V2_FUNCTIONS),
        ('V3Functions', win32more.Networking.Clustering.CLRES_V3_FUNCTIONS),
        ('V4Functions', win32more.Networking.Clustering.CLRES_V4_FUNCTIONS),
    ]
    CLRES_FUNCTION_TABLE._anonymous_ = [
        'Anonymous',
    ]
    CLRES_FUNCTION_TABLE._fields_ = [
        ('TableSize', UInt32),
        ('Version', UInt32),
        ('Anonymous', CLRES_FUNCTION_TABLE__Anonymous_e__Union),
    ]
    return CLRES_FUNCTION_TABLE
def _define_CLRES_V1_FUNCTIONS_head():
    class CLRES_V1_FUNCTIONS(Structure):
        pass
    return CLRES_V1_FUNCTIONS
def _define_CLRES_V1_FUNCTIONS():
    CLRES_V1_FUNCTIONS = win32more.Networking.Clustering.CLRES_V1_FUNCTIONS_head
    CLRES_V1_FUNCTIONS._fields_ = [
        ('Open', win32more.Networking.Clustering.POPEN_ROUTINE),
        ('Close', win32more.Networking.Clustering.PCLOSE_ROUTINE),
        ('Online', win32more.Networking.Clustering.PONLINE_ROUTINE),
        ('Offline', win32more.Networking.Clustering.POFFLINE_ROUTINE),
        ('Terminate', win32more.Networking.Clustering.PTERMINATE_ROUTINE),
        ('LooksAlive', win32more.Networking.Clustering.PLOOKS_ALIVE_ROUTINE),
        ('IsAlive', win32more.Networking.Clustering.PIS_ALIVE_ROUTINE),
        ('Arbitrate', win32more.Networking.Clustering.PARBITRATE_ROUTINE),
        ('Release', win32more.Networking.Clustering.PRELEASE_ROUTINE),
        ('ResourceControl', win32more.Networking.Clustering.PRESOURCE_CONTROL_ROUTINE),
        ('ResourceTypeControl', win32more.Networking.Clustering.PRESOURCE_TYPE_CONTROL_ROUTINE),
    ]
    return CLRES_V1_FUNCTIONS
def _define_CLRES_V2_FUNCTIONS_head():
    class CLRES_V2_FUNCTIONS(Structure):
        pass
    return CLRES_V2_FUNCTIONS
def _define_CLRES_V2_FUNCTIONS():
    CLRES_V2_FUNCTIONS = win32more.Networking.Clustering.CLRES_V2_FUNCTIONS_head
    CLRES_V2_FUNCTIONS._fields_ = [
        ('Open', win32more.Networking.Clustering.POPEN_V2_ROUTINE),
        ('Close', win32more.Networking.Clustering.PCLOSE_ROUTINE),
        ('Online', win32more.Networking.Clustering.PONLINE_V2_ROUTINE),
        ('Offline', win32more.Networking.Clustering.POFFLINE_V2_ROUTINE),
        ('Terminate', win32more.Networking.Clustering.PTERMINATE_ROUTINE),
        ('LooksAlive', win32more.Networking.Clustering.PLOOKS_ALIVE_ROUTINE),
        ('IsAlive', win32more.Networking.Clustering.PIS_ALIVE_ROUTINE),
        ('Arbitrate', win32more.Networking.Clustering.PARBITRATE_ROUTINE),
        ('Release', win32more.Networking.Clustering.PRELEASE_ROUTINE),
        ('ResourceControl', win32more.Networking.Clustering.PRESOURCE_CONTROL_ROUTINE),
        ('ResourceTypeControl', win32more.Networking.Clustering.PRESOURCE_TYPE_CONTROL_ROUTINE),
        ('Cancel', win32more.Networking.Clustering.PCANCEL_ROUTINE),
    ]
    return CLRES_V2_FUNCTIONS
def _define_CLRES_V3_FUNCTIONS_head():
    class CLRES_V3_FUNCTIONS(Structure):
        pass
    return CLRES_V3_FUNCTIONS
def _define_CLRES_V3_FUNCTIONS():
    CLRES_V3_FUNCTIONS = win32more.Networking.Clustering.CLRES_V3_FUNCTIONS_head
    CLRES_V3_FUNCTIONS._fields_ = [
        ('Open', win32more.Networking.Clustering.POPEN_V2_ROUTINE),
        ('Close', win32more.Networking.Clustering.PCLOSE_ROUTINE),
        ('Online', win32more.Networking.Clustering.PONLINE_V2_ROUTINE),
        ('Offline', win32more.Networking.Clustering.POFFLINE_V2_ROUTINE),
        ('Terminate', win32more.Networking.Clustering.PTERMINATE_ROUTINE),
        ('LooksAlive', win32more.Networking.Clustering.PLOOKS_ALIVE_ROUTINE),
        ('IsAlive', win32more.Networking.Clustering.PIS_ALIVE_ROUTINE),
        ('Arbitrate', win32more.Networking.Clustering.PARBITRATE_ROUTINE),
        ('Release', win32more.Networking.Clustering.PRELEASE_ROUTINE),
        ('BeginResourceControl', win32more.Networking.Clustering.PBEGIN_RESCALL_ROUTINE),
        ('BeginResourceTypeControl', win32more.Networking.Clustering.PBEGIN_RESTYPECALL_ROUTINE),
        ('Cancel', win32more.Networking.Clustering.PCANCEL_ROUTINE),
    ]
    return CLRES_V3_FUNCTIONS
def _define_CLRES_V4_FUNCTIONS_head():
    class CLRES_V4_FUNCTIONS(Structure):
        pass
    return CLRES_V4_FUNCTIONS
def _define_CLRES_V4_FUNCTIONS():
    CLRES_V4_FUNCTIONS = win32more.Networking.Clustering.CLRES_V4_FUNCTIONS_head
    CLRES_V4_FUNCTIONS._fields_ = [
        ('Open', win32more.Networking.Clustering.POPEN_V2_ROUTINE),
        ('Close', win32more.Networking.Clustering.PCLOSE_ROUTINE),
        ('Online', win32more.Networking.Clustering.PONLINE_V2_ROUTINE),
        ('Offline', win32more.Networking.Clustering.POFFLINE_V2_ROUTINE),
        ('Terminate', win32more.Networking.Clustering.PTERMINATE_ROUTINE),
        ('LooksAlive', win32more.Networking.Clustering.PLOOKS_ALIVE_ROUTINE),
        ('IsAlive', win32more.Networking.Clustering.PIS_ALIVE_ROUTINE),
        ('Arbitrate', win32more.Networking.Clustering.PARBITRATE_ROUTINE),
        ('Release', win32more.Networking.Clustering.PRELEASE_ROUTINE),
        ('BeginResourceControl', win32more.Networking.Clustering.PBEGIN_RESCALL_ROUTINE),
        ('BeginResourceTypeControl', win32more.Networking.Clustering.PBEGIN_RESTYPECALL_ROUTINE),
        ('Cancel', win32more.Networking.Clustering.PCANCEL_ROUTINE),
        ('BeginResourceControlAsUser', win32more.Networking.Clustering.PBEGIN_RESCALL_AS_USER_ROUTINE),
        ('BeginResourceTypeControlAsUser', win32more.Networking.Clustering.PBEGIN_RESTYPECALL_AS_USER_ROUTINE),
    ]
    return CLRES_V4_FUNCTIONS
CLUADMEX_OBJECT_TYPE = Int32
CLUADMEX_OT_NONE = 0
CLUADMEX_OT_CLUSTER = 1
CLUADMEX_OT_NODE = 2
CLUADMEX_OT_GROUP = 3
CLUADMEX_OT_RESOURCE = 4
CLUADMEX_OT_RESOURCETYPE = 5
CLUADMEX_OT_NETWORK = 6
CLUADMEX_OT_NETINTERFACE = 7
CLUS_AFFINITY_RULE_TYPE = Int32
CLUS_AFFINITY_RULE_NONE = 0
CLUS_AFFINITY_RULE_SAME_FAULT_DOMAIN = 1
CLUS_AFFINITY_RULE_SAME_NODE = 2
CLUS_AFFINITY_RULE_DIFFERENT_FAULT_DOMAIN = 3
CLUS_AFFINITY_RULE_DIFFERENT_NODE = 4
CLUS_AFFINITY_RULE_MIN = 0
CLUS_AFFINITY_RULE_MAX = 4
CLUS_CHARACTERISTICS = Int32
CLUS_CHAR_UNKNOWN = 0
CLUS_CHAR_QUORUM = 1
CLUS_CHAR_DELETE_REQUIRES_ALL_NODES = 2
CLUS_CHAR_LOCAL_QUORUM = 4
CLUS_CHAR_LOCAL_QUORUM_DEBUG = 8
CLUS_CHAR_REQUIRES_STATE_CHANGE_REASON = 16
CLUS_CHAR_BROADCAST_DELETE = 32
CLUS_CHAR_SINGLE_CLUSTER_INSTANCE = 64
CLUS_CHAR_SINGLE_GROUP_INSTANCE = 128
CLUS_CHAR_COEXIST_IN_SHARED_VOLUME_GROUP = 256
CLUS_CHAR_PLACEMENT_DATA = 512
CLUS_CHAR_MONITOR_DETACH = 1024
CLUS_CHAR_MONITOR_REATTACH = 2048
CLUS_CHAR_OPERATION_CONTEXT = 4096
CLUS_CHAR_CLONES = 8192
CLUS_CHAR_NOT_PREEMPTABLE = 16384
CLUS_CHAR_NOTIFY_NEW_OWNER = 32768
CLUS_CHAR_SUPPORTS_UNMONITORED_STATE = 65536
CLUS_CHAR_INFRASTRUCTURE = 131072
CLUS_CHAR_VETO_DRAIN = 262144
CLUS_CHAR_DRAIN_LOCAL_OFFLINE = 524288
def _define_CLUS_CHKDSK_INFO_head():
    class CLUS_CHKDSK_INFO(Structure):
        pass
    return CLUS_CHKDSK_INFO
def _define_CLUS_CHKDSK_INFO():
    CLUS_CHKDSK_INFO = win32more.Networking.Clustering.CLUS_CHKDSK_INFO_head
    CLUS_CHKDSK_INFO._fields_ = [
        ('PartitionNumber', UInt32),
        ('ChkdskState', UInt32),
        ('FileIdCount', UInt32),
        ('FileIdList', UInt64 * 1),
    ]
    return CLUS_CHKDSK_INFO
def _define_CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT_head():
    class CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT(Structure):
        pass
    return CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT
def _define_CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT():
    CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT = win32more.Networking.Clustering.CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT_head
    CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT._fields_ = [
        ('FileServerName', Char * 16),
    ]
    return CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT
def _define_CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT_head():
    class CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT(Structure):
        pass
    return CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT
def _define_CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT():
    CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT = win32more.Networking.Clustering.CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT_head
    CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT._fields_ = [
        ('FileServerName', Char * 260),
    ]
    return CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT
def _define_CLUS_CSV_MAINTENANCE_MODE_INFO_head():
    class CLUS_CSV_MAINTENANCE_MODE_INFO(Structure):
        pass
    return CLUS_CSV_MAINTENANCE_MODE_INFO
def _define_CLUS_CSV_MAINTENANCE_MODE_INFO():
    CLUS_CSV_MAINTENANCE_MODE_INFO = win32more.Networking.Clustering.CLUS_CSV_MAINTENANCE_MODE_INFO_head
    CLUS_CSV_MAINTENANCE_MODE_INFO._fields_ = [
        ('InMaintenance', win32more.Foundation.BOOL),
        ('VolumeName', Char * 260),
    ]
    return CLUS_CSV_MAINTENANCE_MODE_INFO
def _define_CLUS_CSV_VOLUME_INFO_head():
    class CLUS_CSV_VOLUME_INFO(Structure):
        pass
    return CLUS_CSV_VOLUME_INFO
def _define_CLUS_CSV_VOLUME_INFO():
    CLUS_CSV_VOLUME_INFO = win32more.Networking.Clustering.CLUS_CSV_VOLUME_INFO_head
    CLUS_CSV_VOLUME_INFO._fields_ = [
        ('VolumeOffset', win32more.Foundation.ULARGE_INTEGER),
        ('PartitionNumber', UInt32),
        ('FaultState', win32more.Networking.Clustering.CLUSTER_CSV_VOLUME_FAULT_STATE),
        ('BackupState', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_BACKUP_STATE),
        ('szVolumeFriendlyName', Char * 260),
        ('szVolumeName', Char * 50),
    ]
    return CLUS_CSV_VOLUME_INFO
def _define_CLUS_CSV_VOLUME_NAME_head():
    class CLUS_CSV_VOLUME_NAME(Structure):
        pass
    return CLUS_CSV_VOLUME_NAME
def _define_CLUS_CSV_VOLUME_NAME():
    CLUS_CSV_VOLUME_NAME = win32more.Networking.Clustering.CLUS_CSV_VOLUME_NAME_head
    CLUS_CSV_VOLUME_NAME._fields_ = [
        ('VolumeOffset', win32more.Foundation.LARGE_INTEGER),
        ('szVolumeName', Char * 260),
        ('szRootPath', Char * 263),
    ]
    return CLUS_CSV_VOLUME_NAME
def _define_CLUS_DISK_NUMBER_INFO_head():
    class CLUS_DISK_NUMBER_INFO(Structure):
        pass
    return CLUS_DISK_NUMBER_INFO
def _define_CLUS_DISK_NUMBER_INFO():
    CLUS_DISK_NUMBER_INFO = win32more.Networking.Clustering.CLUS_DISK_NUMBER_INFO_head
    CLUS_DISK_NUMBER_INFO._fields_ = [
        ('DiskNumber', UInt32),
        ('BytesPerSector', UInt32),
    ]
    return CLUS_DISK_NUMBER_INFO
def _define_CLUS_DNN_LEADER_STATUS_head():
    class CLUS_DNN_LEADER_STATUS(Structure):
        pass
    return CLUS_DNN_LEADER_STATUS
def _define_CLUS_DNN_LEADER_STATUS():
    CLUS_DNN_LEADER_STATUS = win32more.Networking.Clustering.CLUS_DNN_LEADER_STATUS_head
    CLUS_DNN_LEADER_STATUS._fields_ = [
        ('IsOnline', win32more.Foundation.BOOL),
        ('IsFileServerPresent', win32more.Foundation.BOOL),
    ]
    return CLUS_DNN_LEADER_STATUS
def _define_CLUS_DNN_SODAFS_CLONE_STATUS_head():
    class CLUS_DNN_SODAFS_CLONE_STATUS(Structure):
        pass
    return CLUS_DNN_SODAFS_CLONE_STATUS
def _define_CLUS_DNN_SODAFS_CLONE_STATUS():
    CLUS_DNN_SODAFS_CLONE_STATUS = win32more.Networking.Clustering.CLUS_DNN_SODAFS_CLONE_STATUS_head
    CLUS_DNN_SODAFS_CLONE_STATUS._fields_ = [
        ('NodeId', UInt32),
        ('Status', win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE),
    ]
    return CLUS_DNN_SODAFS_CLONE_STATUS
CLUS_FLAGS = Int32
CLUS_FLAG_CORE = 1
def _define_CLUS_FORCE_QUORUM_INFO_head():
    class CLUS_FORCE_QUORUM_INFO(Structure):
        pass
    return CLUS_FORCE_QUORUM_INFO
def _define_CLUS_FORCE_QUORUM_INFO():
    CLUS_FORCE_QUORUM_INFO = win32more.Networking.Clustering.CLUS_FORCE_QUORUM_INFO_head
    CLUS_FORCE_QUORUM_INFO._fields_ = [
        ('dwSize', UInt32),
        ('dwNodeBitMask', UInt32),
        ('dwMaxNumberofNodes', UInt32),
        ('multiszNodeList', Char * 1),
    ]
    return CLUS_FORCE_QUORUM_INFO
def _define_CLUS_FTSET_INFO_head():
    class CLUS_FTSET_INFO(Structure):
        pass
    return CLUS_FTSET_INFO
def _define_CLUS_FTSET_INFO():
    CLUS_FTSET_INFO = win32more.Networking.Clustering.CLUS_FTSET_INFO_head
    CLUS_FTSET_INFO._fields_ = [
        ('dwRootSignature', UInt32),
        ('dwFtType', UInt32),
    ]
    return CLUS_FTSET_INFO
CLUS_GROUP_START_SETTING = Int32
CLUS_GROUP_START_ALWAYS = 0
CLUS_GROUP_DO_NOT_START = 1
CLUS_GROUP_START_ALLOWED = 2
def _define_CLUS_MAINTENANCE_MODE_INFO_head():
    class CLUS_MAINTENANCE_MODE_INFO(Structure):
        pass
    return CLUS_MAINTENANCE_MODE_INFO
def _define_CLUS_MAINTENANCE_MODE_INFO():
    CLUS_MAINTENANCE_MODE_INFO = win32more.Networking.Clustering.CLUS_MAINTENANCE_MODE_INFO_head
    CLUS_MAINTENANCE_MODE_INFO._fields_ = [
        ('InMaintenance', win32more.Foundation.BOOL),
    ]
    return CLUS_MAINTENANCE_MODE_INFO
def _define_CLUS_MAINTENANCE_MODE_INFOEX_head():
    class CLUS_MAINTENANCE_MODE_INFOEX(Structure):
        pass
    return CLUS_MAINTENANCE_MODE_INFOEX
def _define_CLUS_MAINTENANCE_MODE_INFOEX():
    CLUS_MAINTENANCE_MODE_INFOEX = win32more.Networking.Clustering.CLUS_MAINTENANCE_MODE_INFOEX_head
    CLUS_MAINTENANCE_MODE_INFOEX._fields_ = [
        ('InMaintenance', win32more.Foundation.BOOL),
        ('MaintainenceModeType', win32more.Networking.Clustering.MAINTENANCE_MODE_TYPE_ENUM),
        ('InternalState', win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE),
        ('Signature', UInt32),
    ]
    return CLUS_MAINTENANCE_MODE_INFOEX
def _define_CLUS_NETNAME_IP_INFO_ENTRY_head():
    class CLUS_NETNAME_IP_INFO_ENTRY(Structure):
        pass
    return CLUS_NETNAME_IP_INFO_ENTRY
def _define_CLUS_NETNAME_IP_INFO_ENTRY():
    CLUS_NETNAME_IP_INFO_ENTRY = win32more.Networking.Clustering.CLUS_NETNAME_IP_INFO_ENTRY_head
    CLUS_NETNAME_IP_INFO_ENTRY._fields_ = [
        ('NodeId', UInt32),
        ('AddressSize', UInt32),
        ('Address', Byte * 1),
    ]
    return CLUS_NETNAME_IP_INFO_ENTRY
def _define_CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL_head():
    class CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL(Structure):
        pass
    return CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL
def _define_CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL():
    CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL = win32more.Networking.Clustering.CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL_head
    CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL._fields_ = [
        ('szName', Char * 64),
        ('NumEntries', UInt32),
        ('IpInfo', win32more.Networking.Clustering.CLUS_NETNAME_IP_INFO_ENTRY * 1),
    ]
    return CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL
def _define_CLUS_NETNAME_PWD_INFO_head():
    class CLUS_NETNAME_PWD_INFO(Structure):
        pass
    return CLUS_NETNAME_PWD_INFO
def _define_CLUS_NETNAME_PWD_INFO():
    CLUS_NETNAME_PWD_INFO = win32more.Networking.Clustering.CLUS_NETNAME_PWD_INFO_head
    CLUS_NETNAME_PWD_INFO._fields_ = [
        ('Flags', UInt32),
        ('Password', Char * 16),
        ('CreatingDC', Char * 258),
        ('ObjectGuid', Char * 64),
    ]
    return CLUS_NETNAME_PWD_INFO
def _define_CLUS_NETNAME_PWD_INFOEX_head():
    class CLUS_NETNAME_PWD_INFOEX(Structure):
        pass
    return CLUS_NETNAME_PWD_INFOEX
def _define_CLUS_NETNAME_PWD_INFOEX():
    CLUS_NETNAME_PWD_INFOEX = win32more.Networking.Clustering.CLUS_NETNAME_PWD_INFOEX_head
    CLUS_NETNAME_PWD_INFOEX._fields_ = [
        ('Flags', UInt32),
        ('Password', Char * 128),
        ('CreatingDC', Char * 258),
        ('ObjectGuid', Char * 64),
    ]
    return CLUS_NETNAME_PWD_INFOEX
def _define_CLUS_NETNAME_VS_TOKEN_INFO_head():
    class CLUS_NETNAME_VS_TOKEN_INFO(Structure):
        pass
    return CLUS_NETNAME_VS_TOKEN_INFO
def _define_CLUS_NETNAME_VS_TOKEN_INFO():
    CLUS_NETNAME_VS_TOKEN_INFO = win32more.Networking.Clustering.CLUS_NETNAME_VS_TOKEN_INFO_head
    CLUS_NETNAME_VS_TOKEN_INFO._fields_ = [
        ('ProcessID', UInt32),
        ('DesiredAccess', UInt32),
        ('InheritHandle', win32more.Foundation.BOOL),
    ]
    return CLUS_NETNAME_VS_TOKEN_INFO
def _define_CLUS_PARTITION_INFO_head():
    class CLUS_PARTITION_INFO(Structure):
        pass
    return CLUS_PARTITION_INFO
def _define_CLUS_PARTITION_INFO():
    CLUS_PARTITION_INFO = win32more.Networking.Clustering.CLUS_PARTITION_INFO_head
    CLUS_PARTITION_INFO._fields_ = [
        ('dwFlags', UInt32),
        ('szDeviceName', Char * 260),
        ('szVolumeLabel', Char * 260),
        ('dwSerialNumber', UInt32),
        ('rgdwMaximumComponentLength', UInt32),
        ('dwFileSystemFlags', UInt32),
        ('szFileSystem', Char * 32),
    ]
    return CLUS_PARTITION_INFO
def _define_CLUS_PARTITION_INFO_EX_head():
    class CLUS_PARTITION_INFO_EX(Structure):
        pass
    return CLUS_PARTITION_INFO_EX
def _define_CLUS_PARTITION_INFO_EX():
    CLUS_PARTITION_INFO_EX = win32more.Networking.Clustering.CLUS_PARTITION_INFO_EX_head
    CLUS_PARTITION_INFO_EX._fields_ = [
        ('dwFlags', UInt32),
        ('szDeviceName', Char * 260),
        ('szVolumeLabel', Char * 260),
        ('dwSerialNumber', UInt32),
        ('rgdwMaximumComponentLength', UInt32),
        ('dwFileSystemFlags', UInt32),
        ('szFileSystem', Char * 32),
        ('TotalSizeInBytes', win32more.Foundation.ULARGE_INTEGER),
        ('FreeSizeInBytes', win32more.Foundation.ULARGE_INTEGER),
        ('DeviceNumber', UInt32),
        ('PartitionNumber', UInt32),
        ('VolumeGuid', Guid),
    ]
    return CLUS_PARTITION_INFO_EX
def _define_CLUS_PARTITION_INFO_EX2_head():
    class CLUS_PARTITION_INFO_EX2(Structure):
        pass
    return CLUS_PARTITION_INFO_EX2
def _define_CLUS_PARTITION_INFO_EX2():
    CLUS_PARTITION_INFO_EX2 = win32more.Networking.Clustering.CLUS_PARTITION_INFO_EX2_head
    CLUS_PARTITION_INFO_EX2._fields_ = [
        ('GptPartitionId', Guid),
        ('szPartitionName', Char * 260),
        ('EncryptionFlags', UInt32),
    ]
    return CLUS_PARTITION_INFO_EX2
def _define_CLUS_PROVIDER_STATE_CHANGE_INFO_head():
    class CLUS_PROVIDER_STATE_CHANGE_INFO(Structure):
        pass
    return CLUS_PROVIDER_STATE_CHANGE_INFO
def _define_CLUS_PROVIDER_STATE_CHANGE_INFO():
    CLUS_PROVIDER_STATE_CHANGE_INFO = win32more.Networking.Clustering.CLUS_PROVIDER_STATE_CHANGE_INFO_head
    CLUS_PROVIDER_STATE_CHANGE_INFO._fields_ = [
        ('dwSize', UInt32),
        ('resourceState', win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE),
        ('szProviderId', Char * 1),
    ]
    return CLUS_PROVIDER_STATE_CHANGE_INFO
def _define_CLUS_RESOURCE_CLASS_INFO_head():
    class CLUS_RESOURCE_CLASS_INFO(Structure):
        pass
    return CLUS_RESOURCE_CLASS_INFO
def _define_CLUS_RESOURCE_CLASS_INFO():
    CLUS_RESOURCE_CLASS_INFO = win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO_head
    class CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union(Union):
        pass
    class CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    class CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union__Anonymous_e__Struct__Anonymous_e__Union(Union):
        pass
    CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union__Anonymous_e__Struct__Anonymous_e__Union._fields_ = [
        ('dw', UInt32),
        ('rc', win32more.Networking.Clustering.CLUSTER_RESOURCE_CLASS),
    ]
    CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union__Anonymous_e__Struct._anonymous_ = [
        'Anonymous',
    ]
    CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ('Anonymous', CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union__Anonymous_e__Struct__Anonymous_e__Union),
        ('SubClass', UInt32),
    ]
    CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union._fields_ = [
        ('Anonymous', CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union__Anonymous_e__Struct),
        ('li', win32more.Foundation.ULARGE_INTEGER),
    ]
    CLUS_RESOURCE_CLASS_INFO._anonymous_ = [
        'Anonymous',
    ]
    CLUS_RESOURCE_CLASS_INFO._fields_ = [
        ('Anonymous', CLUS_RESOURCE_CLASS_INFO__Anonymous_e__Union),
    ]
    return CLUS_RESOURCE_CLASS_INFO
CLUS_RESSUBCLASS = Int32
CLUS_RESSUBCLASS_SHARED = -2147483648
CLUS_RESSUBCLASS_NETWORK = Int32
CLUS_RESSUBCLASS_NETWORK_INTERNET_PROTOCOL = -2147483648
CLUS_RESSUBCLASS_STORAGE = Int32
CLUS_RESSUBCLASS_STORAGE_SHARED_BUS = -2147483648
CLUS_RESSUBCLASS_STORAGE_DISK = 1073741824
CLUS_RESSUBCLASS_STORAGE_REPLICATION = 268435456
def _define_CLUS_SCSI_ADDRESS_head():
    class CLUS_SCSI_ADDRESS(Structure):
        pass
    return CLUS_SCSI_ADDRESS
def _define_CLUS_SCSI_ADDRESS():
    CLUS_SCSI_ADDRESS = win32more.Networking.Clustering.CLUS_SCSI_ADDRESS_head
    class CLUS_SCSI_ADDRESS__Anonymous_e__Union(Union):
        pass
    class CLUS_SCSI_ADDRESS__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    CLUS_SCSI_ADDRESS__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ('PortNumber', Byte),
        ('PathId', Byte),
        ('TargetId', Byte),
        ('Lun', Byte),
    ]
    CLUS_SCSI_ADDRESS__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    CLUS_SCSI_ADDRESS__Anonymous_e__Union._fields_ = [
        ('Anonymous', CLUS_SCSI_ADDRESS__Anonymous_e__Union__Anonymous_e__Struct),
        ('dw', UInt32),
    ]
    CLUS_SCSI_ADDRESS._anonymous_ = [
        'Anonymous',
    ]
    CLUS_SCSI_ADDRESS._fields_ = [
        ('Anonymous', CLUS_SCSI_ADDRESS__Anonymous_e__Union),
    ]
    return CLUS_SCSI_ADDRESS
def _define_CLUS_SET_MAINTENANCE_MODE_INPUT_head():
    class CLUS_SET_MAINTENANCE_MODE_INPUT(Structure):
        pass
    return CLUS_SET_MAINTENANCE_MODE_INPUT
def _define_CLUS_SET_MAINTENANCE_MODE_INPUT():
    CLUS_SET_MAINTENANCE_MODE_INPUT = win32more.Networking.Clustering.CLUS_SET_MAINTENANCE_MODE_INPUT_head
    CLUS_SET_MAINTENANCE_MODE_INPUT._fields_ = [
        ('InMaintenance', win32more.Foundation.BOOL),
        ('ExtraParameterSize', UInt32),
        ('ExtraParameter', Byte * 1),
    ]
    return CLUS_SET_MAINTENANCE_MODE_INPUT
def _define_CLUS_SHARED_VOLUME_BACKUP_MODE_head():
    class CLUS_SHARED_VOLUME_BACKUP_MODE(Structure):
        pass
    return CLUS_SHARED_VOLUME_BACKUP_MODE
def _define_CLUS_SHARED_VOLUME_BACKUP_MODE():
    CLUS_SHARED_VOLUME_BACKUP_MODE = win32more.Networking.Clustering.CLUS_SHARED_VOLUME_BACKUP_MODE_head
    CLUS_SHARED_VOLUME_BACKUP_MODE._fields_ = [
        ('BackupState', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_BACKUP_STATE),
        ('DelayTimerInSecs', UInt32),
        ('VolumeName', Char * 260),
    ]
    return CLUS_SHARED_VOLUME_BACKUP_MODE
def _define_CLUS_STARTING_PARAMS_head():
    class CLUS_STARTING_PARAMS(Structure):
        pass
    return CLUS_STARTING_PARAMS
def _define_CLUS_STARTING_PARAMS():
    CLUS_STARTING_PARAMS = win32more.Networking.Clustering.CLUS_STARTING_PARAMS_head
    CLUS_STARTING_PARAMS._fields_ = [
        ('dwSize', UInt32),
        ('bForm', win32more.Foundation.BOOL),
        ('bFirst', win32more.Foundation.BOOL),
    ]
    return CLUS_STARTING_PARAMS
def _define_CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS_head():
    class CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS(Structure):
        pass
    return CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS
def _define_CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS():
    CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS = win32more.Networking.Clustering.CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS_head
    CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS._fields_ = [
        ('AvailDrivelettersMask', UInt32),
    ]
    return CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS
def _define_CLUS_STORAGE_REMAP_DRIVELETTER_head():
    class CLUS_STORAGE_REMAP_DRIVELETTER(Structure):
        pass
    return CLUS_STORAGE_REMAP_DRIVELETTER
def _define_CLUS_STORAGE_REMAP_DRIVELETTER():
    CLUS_STORAGE_REMAP_DRIVELETTER = win32more.Networking.Clustering.CLUS_STORAGE_REMAP_DRIVELETTER_head
    CLUS_STORAGE_REMAP_DRIVELETTER._fields_ = [
        ('CurrentDriveLetterMask', UInt32),
        ('TargetDriveLetterMask', UInt32),
    ]
    return CLUS_STORAGE_REMAP_DRIVELETTER
def _define_CLUS_STORAGE_SET_DRIVELETTER_head():
    class CLUS_STORAGE_SET_DRIVELETTER(Structure):
        pass
    return CLUS_STORAGE_SET_DRIVELETTER
def _define_CLUS_STORAGE_SET_DRIVELETTER():
    CLUS_STORAGE_SET_DRIVELETTER = win32more.Networking.Clustering.CLUS_STORAGE_SET_DRIVELETTER_head
    CLUS_STORAGE_SET_DRIVELETTER._fields_ = [
        ('PartitionNumber', UInt32),
        ('DriveLetterMask', UInt32),
    ]
    return CLUS_STORAGE_SET_DRIVELETTER
def _define_CLUS_WORKER_head():
    class CLUS_WORKER(Structure):
        pass
    return CLUS_WORKER
def _define_CLUS_WORKER():
    CLUS_WORKER = win32more.Networking.Clustering.CLUS_WORKER_head
    CLUS_WORKER._fields_ = [
        ('hThread', win32more.Foundation.HANDLE),
        ('Terminate', win32more.Foundation.BOOL),
    ]
    return CLUS_WORKER
ClusApplication = Guid('f2e606e5-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusCryptoKeys = Guid('f2e6072b-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
CLUSCTL_AFFINITYRULE_CODES = Int32
CLUSCTL_AFFINITYRULE_GET_COMMON_PROPERTIES = 150995033
CLUSCTL_AFFINITYRULE_GET_RO_COMMON_PROPERTIES = 150995029
CLUSCTL_AFFINITYRULE_SET_COMMON_PROPERTIES = 155189342
CLUSCTL_AFFINITYRULE_GET_ID = 150995001
CLUSCTL_AFFINITYRULE_GET_GROUPNAMES = 151006577
CLUSCTL_CLUSTER_CODES = Int32
CLUSCTL_CLUSTER_UNKNOWN = 117440512
CLUSCTL_CLUSTER_GET_FQDN = 117440573
CLUSCTL_CLUSTER_SET_STORAGE_CONFIGURATION = 121635554
CLUSCTL_CLUSTER_GET_STORAGE_CONFIGURATION = 117441253
CLUSCTL_CLUSTER_GET_STORAGE_CONFIG_ATTRIBUTES = 117441257
CLUSCTL_CLUSTER_ENUM_COMMON_PROPERTIES = 117440593
CLUSCTL_CLUSTER_GET_RO_COMMON_PROPERTIES = 117440597
CLUSCTL_CLUSTER_GET_COMMON_PROPERTIES = 117440601
CLUSCTL_CLUSTER_SET_COMMON_PROPERTIES = 121634910
CLUSCTL_CLUSTER_VALIDATE_COMMON_PROPERTIES = 117440609
CLUSCTL_CLUSTER_ENUM_PRIVATE_PROPERTIES = 117440633
CLUSCTL_CLUSTER_GET_RO_PRIVATE_PROPERTIES = 117440637
CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTIES = 117440641
CLUSCTL_CLUSTER_SET_PRIVATE_PROPERTIES = 121634950
CLUSCTL_CLUSTER_VALIDATE_PRIVATE_PROPERTIES = 117440649
CLUSCTL_CLUSTER_GET_COMMON_PROPERTY_FMTS = 117440613
CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTY_FMTS = 117440653
CLUSCTL_CLUSTER_CHECK_VOTER_EVICT = 117440581
CLUSCTL_CLUSTER_CHECK_VOTER_DOWN = 117440585
CLUSCTL_CLUSTER_SHUTDOWN = 117440589
CLUSCTL_CLUSTER_BATCH_BLOCK_KEY = 117441086
CLUSCTL_CLUSTER_BATCH_UNBLOCK_KEY = 117441089
CLUSCTL_CLUSTER_GET_SHARED_VOLUME_ID = 117441169
CLUSCTL_CLUSTER_GET_CLUSDB_TIMESTAMP = 117441193
CLUSCTL_CLUSTER_GET_GUM_LOCK_OWNER = 117441209
CLUSCTL_CLUSTER_REMOVE_NODE = 121635566
CLUSCTL_CLUSTER_SET_ACCOUNT_ACCESS = 121635058
CLUSCTL_CLUSTER_CLEAR_NODE_CONNECTION_INFO = 121635590
CLUSCTL_CLUSTER_SET_DNS_DOMAIN = 121635594
CLUSCTL_CLUSTER_SET_CLUSTER_S2D_ENABLED = 121646434
CLUSCTL_CLUSTER_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES = 121646446
CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME = 117452246
CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME_GUID = 117452250
CLUSCTL_CLUSTER_RELOAD_AUTOLOGGER_CONFIG = 117452242
CLUSCTL_CLUSTER_ENUM_AFFINITY_RULE_NAMES = 117452253
CLUSCTL_CLUSTER_GET_NODES_IN_FD = 117452257
CLUSCTL_CLUSTER_FORCE_FLUSH_DB = 121646566
CLUSCTL_CLUSTER_GET_CLMUSR_TOKEN = 117440877
CLUSCTL_GROUP_CODES = Int32
CLUSCTL_GROUP_UNKNOWN = 50331648
CLUSCTL_GROUP_GET_CHARACTERISTICS = 50331653
CLUSCTL_GROUP_GET_FLAGS = 50331657
CLUSCTL_GROUP_GET_NAME = 50331689
CLUSCTL_GROUP_GET_ID = 50331705
CLUSCTL_GROUP_ENUM_COMMON_PROPERTIES = 50331729
CLUSCTL_GROUP_GET_RO_COMMON_PROPERTIES = 50331733
CLUSCTL_GROUP_GET_COMMON_PROPERTIES = 50331737
CLUSCTL_GROUP_SET_COMMON_PROPERTIES = 54526046
CLUSCTL_GROUP_VALIDATE_COMMON_PROPERTIES = 50331745
CLUSCTL_GROUP_ENUM_PRIVATE_PROPERTIES = 50331769
CLUSCTL_GROUP_GET_RO_PRIVATE_PROPERTIES = 50331773
CLUSCTL_GROUP_GET_PRIVATE_PROPERTIES = 50331777
CLUSCTL_GROUP_SET_PRIVATE_PROPERTIES = 54526086
CLUSCTL_GROUP_VALIDATE_PRIVATE_PROPERTIES = 50331785
CLUSCTL_GROUP_QUERY_DELETE = 50332089
CLUSCTL_GROUP_GET_COMMON_PROPERTY_FMTS = 50331749
CLUSCTL_GROUP_GET_PRIVATE_PROPERTY_FMTS = 50331789
CLUSCTL_GROUP_GET_FAILURE_INFO = 50331673
CLUSCTL_GROUP_GET_LAST_MOVE_TIME = 50332377
CLUSCTL_GROUP_SET_CCF_FROM_MASTER = 54537606
def _define_CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT_head():
    class CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT(Structure):
        pass
    return CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT
def _define_CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT():
    CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT = win32more.Networking.Clustering.CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT_head
    CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT._fields_ = [
        ('GetTickCount64', UInt64),
        ('GetSystemTime', win32more.Foundation.SYSTEMTIME),
        ('NodeId', UInt32),
    ]
    return CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT
CLUSCTL_GROUPSET_CODES = Int32
CLUSCTL_GROUPSET_GET_COMMON_PROPERTIES = 134217817
CLUSCTL_GROUPSET_GET_RO_COMMON_PROPERTIES = 134217813
CLUSCTL_GROUPSET_SET_COMMON_PROPERTIES = 138412126
CLUSCTL_GROUPSET_GET_GROUPS = 134229361
CLUSCTL_GROUPSET_GET_PROVIDER_GROUPS = 134229365
CLUSCTL_GROUPSET_GET_PROVIDER_GROUPSETS = 134229369
CLUSCTL_GROUP_GET_PROVIDER_GROUPS = 134229373
CLUSCTL_GROUP_GET_PROVIDER_GROUPSETS = 134229377
CLUSCTL_GROUPSET_GET_ID = 134217785
CLUSCTL_NETINTERFACE_CODES = Int32
CLUSCTL_NETINTERFACE_UNKNOWN = 100663296
CLUSCTL_NETINTERFACE_GET_CHARACTERISTICS = 100663301
CLUSCTL_NETINTERFACE_GET_FLAGS = 100663305
CLUSCTL_NETINTERFACE_GET_NAME = 100663337
CLUSCTL_NETINTERFACE_GET_ID = 100663353
CLUSCTL_NETINTERFACE_GET_NODE = 100663345
CLUSCTL_NETINTERFACE_GET_NETWORK = 100663349
CLUSCTL_NETINTERFACE_ENUM_COMMON_PROPERTIES = 100663377
CLUSCTL_NETINTERFACE_GET_RO_COMMON_PROPERTIES = 100663381
CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTIES = 100663385
CLUSCTL_NETINTERFACE_SET_COMMON_PROPERTIES = 104857694
CLUSCTL_NETINTERFACE_VALIDATE_COMMON_PROPERTIES = 100663393
CLUSCTL_NETINTERFACE_ENUM_PRIVATE_PROPERTIES = 100663417
CLUSCTL_NETINTERFACE_GET_RO_PRIVATE_PROPERTIES = 100663421
CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTIES = 100663425
CLUSCTL_NETINTERFACE_SET_PRIVATE_PROPERTIES = 104857734
CLUSCTL_NETINTERFACE_VALIDATE_PRIVATE_PROPERTIES = 100663433
CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTY_FMTS = 100663397
CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTY_FMTS = 100663437
CLUSCTL_NETWORK_CODES = Int32
CLUSCTL_NETWORK_UNKNOWN = 83886080
CLUSCTL_NETWORK_GET_CHARACTERISTICS = 83886085
CLUSCTL_NETWORK_GET_FLAGS = 83886089
CLUSCTL_NETWORK_GET_NAME = 83886121
CLUSCTL_NETWORK_GET_ID = 83886137
CLUSCTL_NETWORK_ENUM_COMMON_PROPERTIES = 83886161
CLUSCTL_NETWORK_GET_RO_COMMON_PROPERTIES = 83886165
CLUSCTL_NETWORK_GET_COMMON_PROPERTIES = 83886169
CLUSCTL_NETWORK_SET_COMMON_PROPERTIES = 88080478
CLUSCTL_NETWORK_VALIDATE_COMMON_PROPERTIES = 83886177
CLUSCTL_NETWORK_ENUM_PRIVATE_PROPERTIES = 83886201
CLUSCTL_NETWORK_GET_RO_PRIVATE_PROPERTIES = 83886205
CLUSCTL_NETWORK_GET_PRIVATE_PROPERTIES = 83886209
CLUSCTL_NETWORK_SET_PRIVATE_PROPERTIES = 88080518
CLUSCTL_NETWORK_VALIDATE_PRIVATE_PROPERTIES = 83886217
CLUSCTL_NETWORK_GET_COMMON_PROPERTY_FMTS = 83886181
CLUSCTL_NETWORK_GET_PRIVATE_PROPERTY_FMTS = 83886221
CLUSCTL_NODE_CODES = Int32
CLUSCTL_NODE_UNKNOWN = 67108864
CLUSCTL_NODE_GET_CHARACTERISTICS = 67108869
CLUSCTL_NODE_GET_FLAGS = 67108873
CLUSCTL_NODE_GET_NAME = 67108905
CLUSCTL_NODE_GET_ID = 67108921
CLUSCTL_NODE_ENUM_COMMON_PROPERTIES = 67108945
CLUSCTL_NODE_GET_RO_COMMON_PROPERTIES = 67108949
CLUSCTL_NODE_GET_COMMON_PROPERTIES = 67108953
CLUSCTL_NODE_SET_COMMON_PROPERTIES = 71303262
CLUSCTL_NODE_VALIDATE_COMMON_PROPERTIES = 67108961
CLUSCTL_NODE_ENUM_PRIVATE_PROPERTIES = 67108985
CLUSCTL_NODE_GET_RO_PRIVATE_PROPERTIES = 67108989
CLUSCTL_NODE_GET_PRIVATE_PROPERTIES = 67108993
CLUSCTL_NODE_SET_PRIVATE_PROPERTIES = 71303302
CLUSCTL_NODE_VALIDATE_PRIVATE_PROPERTIES = 67109001
CLUSCTL_NODE_GET_COMMON_PROPERTY_FMTS = 67108965
CLUSCTL_NODE_GET_PRIVATE_PROPERTY_FMTS = 67109005
CLUSCTL_NODE_GET_CLUSTER_SERVICE_ACCOUNT_NAME = 67108929
CLUSCTL_NODE_GET_STUCK_NODES = 67109565
CLUSCTL_NODE_INJECT_GEM_FAULT = 67109569
CLUSCTL_NODE_INTRODUCE_GEM_REPAIR_DELAY = 67109573
CLUSCTL_NODE_SEND_DUMMY_GEM_MESSAGES = 67109577
CLUSCTL_NODE_BLOCK_GEM_SEND_RECV = 67109581
CLUSCTL_NODE_GET_GEMID_VECTOR = 67109585
CLUSCTL_RESOURCE_CODES = Int32
CLUSCTL_RESOURCE_UNKNOWN = 16777216
CLUSCTL_RESOURCE_GET_CHARACTERISTICS = 16777221
CLUSCTL_RESOURCE_GET_FLAGS = 16777225
CLUSCTL_RESOURCE_GET_CLASS_INFO = 16777229
CLUSCTL_RESOURCE_GET_REQUIRED_DEPENDENCIES = 16777233
CLUSCTL_RESOURCE_GET_NAME = 16777257
CLUSCTL_RESOURCE_GET_ID = 16777273
CLUSCTL_RESOURCE_GET_RESOURCE_TYPE = 16777261
CLUSCTL_RESOURCE_ENUM_COMMON_PROPERTIES = 16777297
CLUSCTL_RESOURCE_GET_RO_COMMON_PROPERTIES = 16777301
CLUSCTL_RESOURCE_GET_COMMON_PROPERTIES = 16777305
CLUSCTL_RESOURCE_SET_COMMON_PROPERTIES = 20971614
CLUSCTL_RESOURCE_VALIDATE_COMMON_PROPERTIES = 16777313
CLUSCTL_RESOURCE_GET_COMMON_PROPERTY_FMTS = 16777317
CLUSCTL_RESOURCE_ENUM_PRIVATE_PROPERTIES = 16777337
CLUSCTL_RESOURCE_GET_RO_PRIVATE_PROPERTIES = 16777341
CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTIES = 16777345
CLUSCTL_RESOURCE_SET_PRIVATE_PROPERTIES = 20971654
CLUSCTL_RESOURCE_VALIDATE_PRIVATE_PROPERTIES = 16777353
CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTY_FMTS = 16777357
CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT = 20971682
CLUSCTL_RESOURCE_DELETE_REGISTRY_CHECKPOINT = 20971686
CLUSCTL_RESOURCE_GET_REGISTRY_CHECKPOINTS = 16777385
CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT = 20971694
CLUSCTL_RESOURCE_DELETE_CRYPTO_CHECKPOINT = 20971698
CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT_EX = 20972246
CLUSCTL_RESOURCE_GET_CRYPTO_CHECKPOINTS = 16777397
CLUSCTL_RESOURCE_GET_LOADBAL_PROCESS_LIST = 16777417
CLUSCTL_RESOURCE_GET_NETWORK_NAME = 16777577
CLUSCTL_RESOURCE_NETNAME_GET_VIRTUAL_SERVER_TOKEN = 16777581
CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFO = 16777594
CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFOEX = 16778010
CLUSCTL_RESOURCE_NETNAME_DELETE_CO = 16777598
CLUSCTL_RESOURCE_NETNAME_VALIDATE_VCO = 16777601
CLUSCTL_RESOURCE_NETNAME_RESET_VCO = 16777605
CLUSCTL_RESOURCE_NETNAME_REPAIR_VCO = 16777613
CLUSCTL_RESOURCE_NETNAME_REGISTER_DNS_RECORDS = 16777586
CLUSCTL_RESOURCE_GET_DNS_NAME = 16777589
CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO = 16777617
CLUSCTL_RESOURCE_STORAGE_GET_DISK_NUMBER_INFO = 16777633
CLUSCTL_RESOURCE_STORAGE_IS_PATH_VALID = 16777625
CLUSCTL_RESOURCE_QUERY_DELETE = 16777657
CLUSCTL_RESOURCE_UPGRADE_DLL = 20971706
CLUSCTL_RESOURCE_IPADDRESS_RENEW_LEASE = 20971966
CLUSCTL_RESOURCE_IPADDRESS_RELEASE_LEASE = 20971970
CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_64BIT = 20971710
CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_32BIT = 20971714
CLUSCTL_RESOURCE_QUERY_MAINTENANCE_MODE = 16777697
CLUSCTL_RESOURCE_SET_MAINTENANCE_MODE = 20972006
CLUSCTL_RESOURCE_STORAGE_SET_DRIVELETTER = 20972010
CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX = 16777713
CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX2 = 16777721
CLUSCTL_RESOURCE_STORAGE_GET_MOUNTPOINTS = 16777745
CLUSCTL_RESOURCE_STORAGE_GET_DIRTY = 16777753
CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_INFO = 16777765
CLUSCTL_RESOURCE_SET_CSV_MAINTENANCE_MODE = 20972182
CLUSCTL_RESOURCE_ENABLE_SHARED_VOLUME_DIRECTIO = 20972170
CLUSCTL_RESOURCE_DISABLE_SHARED_VOLUME_DIRECTIO = 20972174
CLUSCTL_RESOURCE_SET_SHARED_VOLUME_BACKUP_MODE = 20972186
CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES = 16777885
CLUSCTL_RESOURCE_GET_FAILURE_INFO = 16777241
CLUSCTL_RESOURCE_STORAGE_GET_DISKID = 16777733
CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_STATES = 20972194
CLUSCTL_RESOURCE_STORAGE_IS_SHARED_VOLUME = 16777893
CLUSCTL_RESOURCE_IS_QUORUM_BLOCKED = 16777905
CLUSCTL_RESOURCE_POOL_GET_DRIVE_INFO = 16777909
CLUSCTL_RESOURCE_RLUA_GET_VIRTUAL_SERVER_TOKEN = 16777581
CLUSCTL_RESOURCE_RLUA_SET_PWD_INFO = 16777594
CLUSCTL_RESOURCE_RLUA_SET_PWD_INFOEX = 16778010
CLUSCTL_RESOURCE_DELETE = 22020102
CLUSCTL_RESOURCE_UNDELETE = 22020230
CLUSCTL_RESOURCE_INSTALL_NODE = 22020106
CLUSCTL_RESOURCE_EVICT_NODE = 22020110
CLUSCTL_RESOURCE_ADD_DEPENDENCY = 22020114
CLUSCTL_RESOURCE_REMOVE_DEPENDENCY = 22020118
CLUSCTL_RESOURCE_ADD_OWNER = 22020122
CLUSCTL_RESOURCE_REMOVE_OWNER = 22020126
CLUSCTL_RESOURCE_SET_NAME = 22020134
CLUSCTL_RESOURCE_CLUSTER_NAME_CHANGED = 22020138
CLUSCTL_RESOURCE_CLUSTER_VERSION_CHANGED = 22020142
CLUSCTL_RESOURCE_FORCE_QUORUM = 22020166
CLUSCTL_RESOURCE_INITIALIZE = 22020170
CLUSCTL_RESOURCE_STATE_CHANGE_REASON = 22020174
CLUSCTL_RESOURCE_PROVIDER_STATE_CHANGE = 22020178
CLUSCTL_RESOURCE_LEAVING_GROUP = 22020182
CLUSCTL_RESOURCE_JOINING_GROUP = 22020186
CLUSCTL_RESOURCE_FSWITNESS_GET_EPOCH_INFO = 17825885
CLUSCTL_RESOURCE_FSWITNESS_SET_EPOCH_INFO = 22020194
CLUSCTL_RESOURCE_FSWITNESS_RELEASE_LOCK = 22020198
CLUSCTL_RESOURCE_NETNAME_CREDS_NOTIFYCAM = 22020202
CLUSCTL_RESOURCE_GET_OPERATION_CONTEXT = 17834217
CLUSCTL_RESOURCE_RW_MODIFY_NOOP = 20972206
CLUSCTL_RESOURCE_NOTIFY_QUORUM_STATUS = 22020222
CLUSCTL_RESOURCE_NOTIFY_OWNER_CHANGE = 22028578
CLUSCTL_RESOURCE_VALIDATE_CHANGE_GROUP = 17834277
CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME = 16788950
CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME_GUID = 16788954
CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN = 20979942
CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY = 20979958
CLUSCTL_RESOURCE_PREPARE_UPGRADE = 20979946
CLUSCTL_RESOURCE_UPGRADE_COMPLETED = 20979950
CLUSCTL_RESOURCE_GET_STATE_CHANGE_TIME = 16788829
CLUSCTL_RESOURCE_GET_INFRASTRUCTURE_SOFS_BUFFER = 16788873
CLUSCTL_RESOURCE_SET_INFRASTRUCTURE_SOFS_BUFFER = 20983182
CLUSCTL_RESOURCE_SCALEOUT_COMMAND = 20983190
CLUSCTL_RESOURCE_SCALEOUT_CONTROL = 20983194
CLUSCTL_RESOURCE_SCALEOUT_GET_CLUSTERS = 20983197
CLUSCTL_RESOURCE_CHECK_DRAIN_VETO = 17834285
CLUSCTL_RESOURCE_NOTIFY_DRAIN_COMPLETE = 17834289
CLUSCTL_RESOURCE_GET_NODES_IN_FD = 16788961
def _define_CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT_head():
    class CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT(Structure):
        pass
    return CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT
def _define_CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT():
    CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT = win32more.Networking.Clustering.CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT_head
    CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT._fields_ = [
        ('dwSize', UInt32),
        ('dwVersion', UInt32),
        ('eReason', win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE_CHANGE_REASON),
    ]
    return CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT
CLUSCTL_RESOURCE_TYPE_CODES = Int32
CLUSCTL_RESOURCE_TYPE_UNKNOWN = 33554432
CLUSCTL_RESOURCE_TYPE_GET_CHARACTERISTICS = 33554437
CLUSCTL_RESOURCE_TYPE_GET_FLAGS = 33554441
CLUSCTL_RESOURCE_TYPE_GET_CLASS_INFO = 33554445
CLUSCTL_RESOURCE_TYPE_GET_REQUIRED_DEPENDENCIES = 33554449
CLUSCTL_RESOURCE_TYPE_GET_ARB_TIMEOUT = 33554453
CLUSCTL_RESOURCE_TYPE_ENUM_COMMON_PROPERTIES = 33554513
CLUSCTL_RESOURCE_TYPE_GET_RO_COMMON_PROPERTIES = 33554517
CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTIES = 33554521
CLUSCTL_RESOURCE_TYPE_VALIDATE_COMMON_PROPERTIES = 33554529
CLUSCTL_RESOURCE_TYPE_SET_COMMON_PROPERTIES = 37748830
CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTY_FMTS = 33554533
CLUSCTL_RESOURCE_TYPE_GET_COMMON_RESOURCE_PROPERTY_FMTS = 33554537
CLUSCTL_RESOURCE_TYPE_ENUM_PRIVATE_PROPERTIES = 33554553
CLUSCTL_RESOURCE_TYPE_GET_RO_PRIVATE_PROPERTIES = 33554557
CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTIES = 33554561
CLUSCTL_RESOURCE_TYPE_SET_PRIVATE_PROPERTIES = 37748870
CLUSCTL_RESOURCE_TYPE_VALIDATE_PRIVATE_PROPERTIES = 33554569
CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTY_FMTS = 33554573
CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_RESOURCE_PROPERTY_FMTS = 33554577
CLUSCTL_RESOURCE_TYPE_GET_REGISTRY_CHECKPOINTS = 33554601
CLUSCTL_RESOURCE_TYPE_GET_CRYPTO_CHECKPOINTS = 33554613
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS = 33554837
CLUSCTL_RESOURCE_TYPE_STORAGE_SYNC_CLUSDISK_DB = 37749150
CLUSCTL_RESOURCE_TYPE_NETNAME_VALIDATE_NETNAME = 33554997
CLUSCTL_RESOURCE_TYPE_NETNAME_GET_OU_FOR_VCO = 37749358
CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_PATH = 33554993
CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_DIRECTORY = 33555001
CLUSCTL_RESOURCE_TYPE_GEN_SCRIPT_VALIDATE_PATH = 33554993
CLUSCTL_RESOURCE_TYPE_QUERY_DELETE = 33554873
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DRIVELETTERS = 33554925
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX = 33554933
CLUSCTL_RESOURCE_TYPE_STORAGE_REMAP_DRIVELETTER = 33554945
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DISKID = 33554949
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_RESOURCEID = 33554989
CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CLUSTERABLE = 33554953
CLUSCTL_RESOURCE_TYPE_STORAGE_REMOVE_VM_OWNERSHIP = 37749262
CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CSV_FILE = 16777769
CLUSCTL_RESOURCE_TYPE_WITNESS_VALIDATE_PATH = 33554993
CLUSCTL_RESOURCE_TYPE_INSTALL_NODE = 38797322
CLUSCTL_RESOURCE_TYPE_EVICT_NODE = 38797326
CLUSCTL_RESOURCE_TYPE_CLUSTER_VERSION_CHANGED = 38797358
CLUSCTL_RESOURCE_TYPE_FIXUP_ON_UPGRADE = 38797362
CLUSCTL_RESOURCE_TYPE_STARTING_PHASE1 = 38797366
CLUSCTL_RESOURCE_TYPE_STARTING_PHASE2 = 38797370
CLUSCTL_RESOURCE_TYPE_HOLD_IO = 38797374
CLUSCTL_RESOURCE_TYPE_RESUME_IO = 38797378
CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INT = 33562593
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_LOGDISKS = 33562953
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS = 33562957
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS = 33562961
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_DISKS = 33562965
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICA_VOLUMES = 33562969
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_VOLUME = 33562973
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_RESOURCE_GROUP = 33562977
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_PARTITION_INFO = 33562981
CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_INFO = 33562949
CLUSCTL_RESOURCE_TYPE_REPLICATION_ADD_REPLICATION_GROUP = 33562946
CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS = 33562849
CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY = 33562865
CLUSCTL_RESOURCE_TYPE_PREPARE_UPGRADE = 37757162
CLUSCTL_RESOURCE_TYPE_UPGRADE_COMPLETED = 37757166
CLUSCTL_RESOURCE_TYPE_NOTIFY_MONITOR_SHUTTING_DOWN = 34603137
CLUSCTL_RESOURCE_TYPE_CHECK_DRAIN_VETO = 34611501
CLUSCTL_RESOURCE_TYPE_NOTIFY_DRAIN_COMPLETE = 34611505
def _define_CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT_head():
    class CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT(Structure):
        pass
    return CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT
def _define_CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT():
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT = win32more.Networking.Clustering.CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT_head
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT._fields_ = [
        ('dwFlags', UInt32),
        ('guidPoolFilter', Guid),
    ]
    return CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT
ClusDisk = Guid('f2e60723-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusDisks = Guid('f2e60725-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
CLUSGROUP_TYPE = Int32
CLUSGROUP_TYPE_ClusGroupTypeCoreCluster = 1
CLUSGROUP_TYPE_ClusGroupTypeAvailableStorage = 2
CLUSGROUP_TYPE_ClusGroupTypeTemporary = 3
CLUSGROUP_TYPE_ClusGroupTypeSharedVolume = 4
CLUSGROUP_TYPE_ClusGroupTypeStoragePool = 5
CLUSGROUP_TYPE_ClusGroupTypeFileServer = 100
CLUSGROUP_TYPE_ClusGroupTypePrintServer = 101
CLUSGROUP_TYPE_ClusGroupTypeDhcpServer = 102
CLUSGROUP_TYPE_ClusGroupTypeDtc = 103
CLUSGROUP_TYPE_ClusGroupTypeMsmq = 104
CLUSGROUP_TYPE_ClusGroupTypeWins = 105
CLUSGROUP_TYPE_ClusGroupTypeStandAloneDfs = 106
CLUSGROUP_TYPE_ClusGroupTypeGenericApplication = 107
CLUSGROUP_TYPE_ClusGroupTypeGenericService = 108
CLUSGROUP_TYPE_ClusGroupTypeGenericScript = 109
CLUSGROUP_TYPE_ClusGroupTypeIScsiNameService = 110
CLUSGROUP_TYPE_ClusGroupTypeVirtualMachine = 111
CLUSGROUP_TYPE_ClusGroupTypeTsSessionBroker = 112
CLUSGROUP_TYPE_ClusGroupTypeIScsiTarget = 113
CLUSGROUP_TYPE_ClusGroupTypeScaleoutFileServer = 114
CLUSGROUP_TYPE_ClusGroupTypeVMReplicaBroker = 115
CLUSGROUP_TYPE_ClusGroupTypeTaskScheduler = 116
CLUSGROUP_TYPE_ClusGroupTypeClusterUpdateAgent = 117
CLUSGROUP_TYPE_ClusGroupTypeScaleoutCluster = 118
CLUSGROUP_TYPE_ClusGroupTypeStorageReplica = 119
CLUSGROUP_TYPE_ClusGroupTypeVMReplicaCoordinator = 120
CLUSGROUP_TYPE_ClusGroupTypeCrossClusterOrchestrator = 121
CLUSGROUP_TYPE_ClusGroupTypeInfrastructureFileServer = 122
CLUSGROUP_TYPE_ClusGroupTypeCoreSddc = 123
CLUSGROUP_TYPE_ClusGroupTypeUnknown = 9999
ClusNetInterface = Guid('f2e606ed-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusNetInterfaces = Guid('f2e606ef-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusNetwork = Guid('f2e606f1-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusNetworkNetInterfaces = Guid('f2e606f5-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusNetworks = Guid('f2e606f3-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusNode = Guid('f2e606f7-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusNodeNetInterfaces = Guid('f2e606fb-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusNodes = Guid('f2e606f9-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusPartition = Guid('f2e6071f-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusPartitionEx = Guid('53d51d26-b51b-4a79-b2-c3-50-48-d9-3a-98-fc')
ClusPartitions = Guid('f2e60721-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
def _define_CLUSPROP_BINARY_head():
    class CLUSPROP_BINARY(Structure):
        pass
    return CLUSPROP_BINARY
def _define_CLUSPROP_BINARY():
    CLUSPROP_BINARY = win32more.Networking.Clustering.CLUSPROP_BINARY_head
    CLUSPROP_BINARY._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('rgb', Byte * 1),
    ]
    return CLUSPROP_BINARY
def _define_CLUSPROP_BUFFER_HELPER_head():
    class CLUSPROP_BUFFER_HELPER(Union):
        pass
    return CLUSPROP_BUFFER_HELPER
def _define_CLUSPROP_BUFFER_HELPER():
    CLUSPROP_BUFFER_HELPER = win32more.Networking.Clustering.CLUSPROP_BUFFER_HELPER_head
    CLUSPROP_BUFFER_HELPER._fields_ = [
        ('pb', c_char_p_no),
        ('pw', POINTER(UInt16)),
        ('pdw', POINTER(UInt32)),
        ('pl', POINTER(Int32)),
        ('psz', win32more.Foundation.PWSTR),
        ('pList', POINTER(win32more.Networking.Clustering.CLUSPROP_LIST_head)),
        ('pSyntax', POINTER(win32more.Networking.Clustering.CLUSPROP_SYNTAX_head)),
        ('pName', POINTER(win32more.Networking.Clustering.CLUSPROP_SZ_head)),
        ('pValue', POINTER(win32more.Networking.Clustering.CLUSPROP_VALUE_head)),
        ('pBinaryValue', POINTER(win32more.Networking.Clustering.CLUSPROP_BINARY_head)),
        ('pWordValue', POINTER(win32more.Networking.Clustering.CLUSPROP_WORD_head)),
        ('pDwordValue', POINTER(win32more.Networking.Clustering.CLUSPROP_DWORD_head)),
        ('pLongValue', POINTER(win32more.Networking.Clustering.CLUSPROP_LONG_head)),
        ('pULargeIntegerValue', POINTER(win32more.Networking.Clustering.CLUSPROP_ULARGE_INTEGER_head)),
        ('pLargeIntegerValue', POINTER(win32more.Networking.Clustering.CLUSPROP_LARGE_INTEGER_head)),
        ('pStringValue', POINTER(win32more.Networking.Clustering.CLUSPROP_SZ_head)),
        ('pMultiSzValue', POINTER(win32more.Networking.Clustering.CLUSPROP_SZ_head)),
        ('pSecurityDescriptor', POINTER(win32more.Networking.Clustering.CLUSPROP_SECURITY_DESCRIPTOR_head)),
        ('pResourceClassValue', POINTER(win32more.Networking.Clustering.CLUSPROP_RESOURCE_CLASS_head)),
        ('pResourceClassInfoValue', POINTER(win32more.Networking.Clustering.CLUSPROP_RESOURCE_CLASS_INFO_head)),
        ('pDiskSignatureValue', POINTER(win32more.Networking.Clustering.CLUSPROP_DWORD_head)),
        ('pScsiAddressValue', POINTER(win32more.Networking.Clustering.CLUSPROP_SCSI_ADDRESS_head)),
        ('pDiskNumberValue', POINTER(win32more.Networking.Clustering.CLUSPROP_DWORD_head)),
        ('pPartitionInfoValue', POINTER(win32more.Networking.Clustering.CLUSPROP_PARTITION_INFO_head)),
        ('pRequiredDependencyValue', POINTER(win32more.Networking.Clustering.CLUSPROP_REQUIRED_DEPENDENCY_head)),
        ('pPartitionInfoValueEx', POINTER(win32more.Networking.Clustering.CLUSPROP_PARTITION_INFO_EX_head)),
        ('pPartitionInfoValueEx2', POINTER(win32more.Networking.Clustering.CLUSPROP_PARTITION_INFO_EX2_head)),
        ('pFileTimeValue', POINTER(win32more.Networking.Clustering.CLUSPROP_FILETIME_head)),
    ]
    return CLUSPROP_BUFFER_HELPER
def _define_CLUSPROP_DWORD_head():
    class CLUSPROP_DWORD(Structure):
        pass
    return CLUSPROP_DWORD
def _define_CLUSPROP_DWORD():
    CLUSPROP_DWORD = win32more.Networking.Clustering.CLUSPROP_DWORD_head
    CLUSPROP_DWORD._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('dw', UInt32),
    ]
    return CLUSPROP_DWORD
def _define_CLUSPROP_FILETIME_head():
    class CLUSPROP_FILETIME(Structure):
        pass
    return CLUSPROP_FILETIME
def _define_CLUSPROP_FILETIME():
    CLUSPROP_FILETIME = win32more.Networking.Clustering.CLUSPROP_FILETIME_head
    CLUSPROP_FILETIME._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('ft', win32more.Foundation.FILETIME),
    ]
    return CLUSPROP_FILETIME
def _define_CLUSPROP_FTSET_INFO_head():
    class CLUSPROP_FTSET_INFO(Structure):
        pass
    return CLUSPROP_FTSET_INFO
def _define_CLUSPROP_FTSET_INFO():
    CLUSPROP_FTSET_INFO = win32more.Networking.Clustering.CLUSPROP_FTSET_INFO_head
    CLUSPROP_FTSET_INFO._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('Base2', win32more.Networking.Clustering.CLUS_FTSET_INFO),
    ]
    return CLUSPROP_FTSET_INFO
CLUSPROP_IPADDR_ENABLENETBIOS = Int32
CLUSPROP_IPADDR_ENABLENETBIOS_DISABLED = 0
CLUSPROP_IPADDR_ENABLENETBIOS_ENABLED = 1
CLUSPROP_IPADDR_ENABLENETBIOS_TRACK_NIC = 2
def _define_CLUSPROP_LARGE_INTEGER_head():
    class CLUSPROP_LARGE_INTEGER(Structure):
        pass
    return CLUSPROP_LARGE_INTEGER
def _define_CLUSPROP_LARGE_INTEGER():
    CLUSPROP_LARGE_INTEGER = win32more.Networking.Clustering.CLUSPROP_LARGE_INTEGER_head
    CLUSPROP_LARGE_INTEGER._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('li', win32more.Foundation.LARGE_INTEGER),
    ]
    return CLUSPROP_LARGE_INTEGER
def _define_CLUSPROP_LIST_head():
    class CLUSPROP_LIST(Structure):
        pass
    return CLUSPROP_LIST
def _define_CLUSPROP_LIST():
    CLUSPROP_LIST = win32more.Networking.Clustering.CLUSPROP_LIST_head
    CLUSPROP_LIST._fields_ = [
        ('nPropertyCount', UInt32),
        ('PropertyName', win32more.Networking.Clustering.CLUSPROP_SZ),
    ]
    return CLUSPROP_LIST
def _define_CLUSPROP_LONG_head():
    class CLUSPROP_LONG(Structure):
        pass
    return CLUSPROP_LONG
def _define_CLUSPROP_LONG():
    CLUSPROP_LONG = win32more.Networking.Clustering.CLUSPROP_LONG_head
    CLUSPROP_LONG._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('l', Int32),
    ]
    return CLUSPROP_LONG
def _define_CLUSPROP_PARTITION_INFO_head():
    class CLUSPROP_PARTITION_INFO(Structure):
        pass
    return CLUSPROP_PARTITION_INFO
def _define_CLUSPROP_PARTITION_INFO():
    CLUSPROP_PARTITION_INFO = win32more.Networking.Clustering.CLUSPROP_PARTITION_INFO_head
    CLUSPROP_PARTITION_INFO._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('Base2', win32more.Networking.Clustering.CLUS_PARTITION_INFO),
    ]
    return CLUSPROP_PARTITION_INFO
def _define_CLUSPROP_PARTITION_INFO_EX_head():
    class CLUSPROP_PARTITION_INFO_EX(Structure):
        pass
    return CLUSPROP_PARTITION_INFO_EX
def _define_CLUSPROP_PARTITION_INFO_EX():
    CLUSPROP_PARTITION_INFO_EX = win32more.Networking.Clustering.CLUSPROP_PARTITION_INFO_EX_head
    CLUSPROP_PARTITION_INFO_EX._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('Base2', win32more.Networking.Clustering.CLUS_PARTITION_INFO_EX),
    ]
    return CLUSPROP_PARTITION_INFO_EX
def _define_CLUSPROP_PARTITION_INFO_EX2_head():
    class CLUSPROP_PARTITION_INFO_EX2(Structure):
        pass
    return CLUSPROP_PARTITION_INFO_EX2
def _define_CLUSPROP_PARTITION_INFO_EX2():
    CLUSPROP_PARTITION_INFO_EX2 = win32more.Networking.Clustering.CLUSPROP_PARTITION_INFO_EX2_head
    CLUSPROP_PARTITION_INFO_EX2._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_PARTITION_INFO_EX),
        ('Base2', win32more.Networking.Clustering.CLUS_PARTITION_INFO_EX2),
    ]
    return CLUSPROP_PARTITION_INFO_EX2
CLUSPROP_PIFLAGS = Int32
CLUSPROP_PIFLAG_STICKY = 1
CLUSPROP_PIFLAG_REMOVABLE = 2
CLUSPROP_PIFLAG_USABLE = 4
CLUSPROP_PIFLAG_DEFAULT_QUORUM = 8
CLUSPROP_PIFLAG_USABLE_FOR_CSV = 16
CLUSPROP_PIFLAG_ENCRYPTION_ENABLED = 32
CLUSPROP_PIFLAG_RAW = 64
CLUSPROP_PIFLAG_UNKNOWN = -2147483648
def _define_CLUSPROP_REQUIRED_DEPENDENCY_head():
    class CLUSPROP_REQUIRED_DEPENDENCY(Union):
        pass
    return CLUSPROP_REQUIRED_DEPENDENCY
def _define_CLUSPROP_REQUIRED_DEPENDENCY():
    CLUSPROP_REQUIRED_DEPENDENCY = win32more.Networking.Clustering.CLUSPROP_REQUIRED_DEPENDENCY_head
    CLUSPROP_REQUIRED_DEPENDENCY._fields_ = [
        ('Value', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('ResClass', win32more.Networking.Clustering.CLUSPROP_RESOURCE_CLASS),
        ('ResTypeName', win32more.Networking.Clustering.CLUSPROP_SZ),
    ]
    return CLUSPROP_REQUIRED_DEPENDENCY
def _define_CLUSPROP_RESOURCE_CLASS_head():
    class CLUSPROP_RESOURCE_CLASS(Structure):
        pass
    return CLUSPROP_RESOURCE_CLASS
def _define_CLUSPROP_RESOURCE_CLASS():
    CLUSPROP_RESOURCE_CLASS = win32more.Networking.Clustering.CLUSPROP_RESOURCE_CLASS_head
    CLUSPROP_RESOURCE_CLASS._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('rc', win32more.Networking.Clustering.CLUSTER_RESOURCE_CLASS),
    ]
    return CLUSPROP_RESOURCE_CLASS
def _define_CLUSPROP_RESOURCE_CLASS_INFO_head():
    class CLUSPROP_RESOURCE_CLASS_INFO(Structure):
        pass
    return CLUSPROP_RESOURCE_CLASS_INFO
def _define_CLUSPROP_RESOURCE_CLASS_INFO():
    CLUSPROP_RESOURCE_CLASS_INFO = win32more.Networking.Clustering.CLUSPROP_RESOURCE_CLASS_INFO_head
    CLUSPROP_RESOURCE_CLASS_INFO._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('Base2', win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO),
    ]
    return CLUSPROP_RESOURCE_CLASS_INFO
def _define_CLUSPROP_SCSI_ADDRESS_head():
    class CLUSPROP_SCSI_ADDRESS(Structure):
        pass
    return CLUSPROP_SCSI_ADDRESS
def _define_CLUSPROP_SCSI_ADDRESS():
    CLUSPROP_SCSI_ADDRESS = win32more.Networking.Clustering.CLUSPROP_SCSI_ADDRESS_head
    CLUSPROP_SCSI_ADDRESS._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('Base2', win32more.Networking.Clustering.CLUS_SCSI_ADDRESS),
    ]
    return CLUSPROP_SCSI_ADDRESS
def _define_CLUSPROP_SECURITY_DESCRIPTOR_head():
    class CLUSPROP_SECURITY_DESCRIPTOR(Structure):
        pass
    return CLUSPROP_SECURITY_DESCRIPTOR
def _define_CLUSPROP_SECURITY_DESCRIPTOR():
    CLUSPROP_SECURITY_DESCRIPTOR = win32more.Networking.Clustering.CLUSPROP_SECURITY_DESCRIPTOR_head
    class CLUSPROP_SECURITY_DESCRIPTOR__Anonymous_e__Union(Union):
        pass
    CLUSPROP_SECURITY_DESCRIPTOR__Anonymous_e__Union._fields_ = [
        ('sd', win32more.Security.SECURITY_DESCRIPTOR_RELATIVE),
        ('rgbSecurityDescriptor', Byte * 1),
    ]
    CLUSPROP_SECURITY_DESCRIPTOR._anonymous_ = [
        'Anonymous',
    ]
    CLUSPROP_SECURITY_DESCRIPTOR._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('Anonymous', CLUSPROP_SECURITY_DESCRIPTOR__Anonymous_e__Union),
    ]
    return CLUSPROP_SECURITY_DESCRIPTOR
def _define_CLUSPROP_SYNTAX_head():
    class CLUSPROP_SYNTAX(Union):
        pass
    return CLUSPROP_SYNTAX
def _define_CLUSPROP_SYNTAX():
    CLUSPROP_SYNTAX = win32more.Networking.Clustering.CLUSPROP_SYNTAX_head
    class CLUSPROP_SYNTAX__Anonymous_e__Struct(Structure):
        pass
    CLUSPROP_SYNTAX__Anonymous_e__Struct._fields_ = [
        ('wFormat', UInt16),
        ('wType', UInt16),
    ]
    CLUSPROP_SYNTAX._anonymous_ = [
        'Anonymous',
    ]
    CLUSPROP_SYNTAX._fields_ = [
        ('dw', UInt32),
        ('Anonymous', CLUSPROP_SYNTAX__Anonymous_e__Struct),
    ]
    return CLUSPROP_SYNTAX
def _define_CLUSPROP_SZ_head():
    class CLUSPROP_SZ(Structure):
        pass
    return CLUSPROP_SZ
def _define_CLUSPROP_SZ():
    CLUSPROP_SZ = win32more.Networking.Clustering.CLUSPROP_SZ_head
    CLUSPROP_SZ._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('sz', Char * 1),
    ]
    return CLUSPROP_SZ
def _define_CLUSPROP_ULARGE_INTEGER_head():
    class CLUSPROP_ULARGE_INTEGER(Structure):
        pass
    return CLUSPROP_ULARGE_INTEGER
def _define_CLUSPROP_ULARGE_INTEGER():
    CLUSPROP_ULARGE_INTEGER = win32more.Networking.Clustering.CLUSPROP_ULARGE_INTEGER_head
    CLUSPROP_ULARGE_INTEGER._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('li', win32more.Foundation.ULARGE_INTEGER),
    ]
    return CLUSPROP_ULARGE_INTEGER
def _define_CLUSPROP_VALUE_head():
    class CLUSPROP_VALUE(Structure):
        pass
    return CLUSPROP_VALUE
def _define_CLUSPROP_VALUE():
    CLUSPROP_VALUE = win32more.Networking.Clustering.CLUSPROP_VALUE_head
    CLUSPROP_VALUE._fields_ = [
        ('Syntax', win32more.Networking.Clustering.CLUSPROP_SYNTAX),
        ('cbLength', UInt32),
    ]
    return CLUSPROP_VALUE
def _define_CLUSPROP_WORD_head():
    class CLUSPROP_WORD(Structure):
        pass
    return CLUSPROP_WORD
def _define_CLUSPROP_WORD():
    CLUSPROP_WORD = win32more.Networking.Clustering.CLUSPROP_WORD_head
    CLUSPROP_WORD._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSPROP_VALUE),
        ('w', UInt16),
    ]
    return CLUSPROP_WORD
ClusProperties = Guid('f2e606ff-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusProperty = Guid('f2e606fd-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusPropertyValue = Guid('f2e60719-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusPropertyValueData = Guid('f2e6071d-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusPropertyValues = Guid('f2e6071b-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusRefObject = Guid('f2e60701-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusRegistryKeys = Guid('f2e60729-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResDependencies = Guid('f2e60703-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResDependents = Guid('f2e6072d-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResGroup = Guid('f2e60705-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResGroupPreferredOwnerNodes = Guid('f2e606e7-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResGroupResources = Guid('f2e606e9-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResGroups = Guid('f2e60707-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResource = Guid('f2e60709-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResources = Guid('f2e6070b-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResPossibleOwnerNodes = Guid('f2e6070d-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResType = Guid('f2e6070f-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResTypePossibleOwnerNodes = Guid('f2e60717-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResTypeResources = Guid('f2e60713-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusResTypes = Guid('f2e60711-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
ClusScsiAddress = Guid('f2e60727-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
Cluster = Guid('f2e606e3-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
def _define_CLUSTER_AVAILABILITY_SET_CONFIG_head():
    class CLUSTER_AVAILABILITY_SET_CONFIG(Structure):
        pass
    return CLUSTER_AVAILABILITY_SET_CONFIG
def _define_CLUSTER_AVAILABILITY_SET_CONFIG():
    CLUSTER_AVAILABILITY_SET_CONFIG = win32more.Networking.Clustering.CLUSTER_AVAILABILITY_SET_CONFIG_head
    CLUSTER_AVAILABILITY_SET_CONFIG._fields_ = [
        ('dwVersion', UInt32),
        ('dwUpdateDomains', UInt32),
        ('dwFaultDomains', UInt32),
        ('bReserveSpareNode', win32more.Foundation.BOOL),
    ]
    return CLUSTER_AVAILABILITY_SET_CONFIG
def _define_CLUSTER_BATCH_COMMAND_head():
    class CLUSTER_BATCH_COMMAND(Structure):
        pass
    return CLUSTER_BATCH_COMMAND
def _define_CLUSTER_BATCH_COMMAND():
    CLUSTER_BATCH_COMMAND = win32more.Networking.Clustering.CLUSTER_BATCH_COMMAND_head
    CLUSTER_BATCH_COMMAND._fields_ = [
        ('Command', win32more.Networking.Clustering.CLUSTER_REG_COMMAND),
        ('dwOptions', UInt32),
        ('wzName', win32more.Foundation.PWSTR),
        ('lpData', c_char_p_no),
        ('cbData', UInt32),
    ]
    return CLUSTER_BATCH_COMMAND
CLUSTER_CHANGE = Int32
CLUSTER_CHANGE_NODE_STATE = 1
CLUSTER_CHANGE_NODE_DELETED = 2
CLUSTER_CHANGE_NODE_ADDED = 4
CLUSTER_CHANGE_NODE_PROPERTY = 8
CLUSTER_CHANGE_REGISTRY_NAME = 16
CLUSTER_CHANGE_REGISTRY_ATTRIBUTES = 32
CLUSTER_CHANGE_REGISTRY_VALUE = 64
CLUSTER_CHANGE_REGISTRY_SUBTREE = 128
CLUSTER_CHANGE_RESOURCE_STATE = 256
CLUSTER_CHANGE_RESOURCE_DELETED = 512
CLUSTER_CHANGE_RESOURCE_ADDED = 1024
CLUSTER_CHANGE_RESOURCE_PROPERTY = 2048
CLUSTER_CHANGE_GROUP_STATE = 4096
CLUSTER_CHANGE_GROUP_DELETED = 8192
CLUSTER_CHANGE_GROUP_ADDED = 16384
CLUSTER_CHANGE_GROUP_PROPERTY = 32768
CLUSTER_CHANGE_RESOURCE_TYPE_DELETED = 65536
CLUSTER_CHANGE_RESOURCE_TYPE_ADDED = 131072
CLUSTER_CHANGE_RESOURCE_TYPE_PROPERTY = 262144
CLUSTER_CHANGE_CLUSTER_RECONNECT = 524288
CLUSTER_CHANGE_NETWORK_STATE = 1048576
CLUSTER_CHANGE_NETWORK_DELETED = 2097152
CLUSTER_CHANGE_NETWORK_ADDED = 4194304
CLUSTER_CHANGE_NETWORK_PROPERTY = 8388608
CLUSTER_CHANGE_NETINTERFACE_STATE = 16777216
CLUSTER_CHANGE_NETINTERFACE_DELETED = 33554432
CLUSTER_CHANGE_NETINTERFACE_ADDED = 67108864
CLUSTER_CHANGE_NETINTERFACE_PROPERTY = 134217728
CLUSTER_CHANGE_QUORUM_STATE = 268435456
CLUSTER_CHANGE_CLUSTER_STATE = 536870912
CLUSTER_CHANGE_CLUSTER_PROPERTY = 1073741824
CLUSTER_CHANGE_HANDLE_CLOSE = -2147483648
CLUSTER_CHANGE_ALL = -1
CLUSTER_CHANGE_CLUSTER_V2 = Int32
CLUSTER_CHANGE_CLUSTER_RECONNECT_V2 = 1
CLUSTER_CHANGE_CLUSTER_STATE_V2 = 2
CLUSTER_CHANGE_CLUSTER_GROUP_ADDED_V2 = 4
CLUSTER_CHANGE_CLUSTER_HANDLE_CLOSE_V2 = 8
CLUSTER_CHANGE_CLUSTER_NETWORK_ADDED_V2 = 16
CLUSTER_CHANGE_CLUSTER_NODE_ADDED_V2 = 32
CLUSTER_CHANGE_CLUSTER_RESOURCE_TYPE_ADDED_V2 = 64
CLUSTER_CHANGE_CLUSTER_COMMON_PROPERTY_V2 = 128
CLUSTER_CHANGE_CLUSTER_PRIVATE_PROPERTY_V2 = 256
CLUSTER_CHANGE_CLUSTER_LOST_NOTIFICATIONS_V2 = 512
CLUSTER_CHANGE_CLUSTER_RENAME_V2 = 1024
CLUSTER_CHANGE_CLUSTER_MEMBERSHIP_V2 = 2048
CLUSTER_CHANGE_CLUSTER_UPGRADED_V2 = 4096
CLUSTER_CHANGE_CLUSTER_ALL_V2 = 8191
CLUSTER_CHANGE_GROUP_V2 = Int32
CLUSTER_CHANGE_GROUP_DELETED_V2 = 1
CLUSTER_CHANGE_GROUP_COMMON_PROPERTY_V2 = 2
CLUSTER_CHANGE_GROUP_PRIVATE_PROPERTY_V2 = 4
CLUSTER_CHANGE_GROUP_STATE_V2 = 8
CLUSTER_CHANGE_GROUP_OWNER_NODE_V2 = 16
CLUSTER_CHANGE_GROUP_PREFERRED_OWNERS_V2 = 32
CLUSTER_CHANGE_GROUP_RESOURCE_ADDED_V2 = 64
CLUSTER_CHANGE_GROUP_RESOURCE_GAINED_V2 = 128
CLUSTER_CHANGE_GROUP_RESOURCE_LOST_V2 = 256
CLUSTER_CHANGE_GROUP_HANDLE_CLOSE_V2 = 512
CLUSTER_CHANGE_GROUP_ALL_V2 = 1023
CLUSTER_CHANGE_GROUPSET_V2 = Int32
CLUSTER_CHANGE_GROUPSET_DELETED_v2 = 1
CLUSTER_CHANGE_GROUPSET_COMMON_PROPERTY_V2 = 2
CLUSTER_CHANGE_GROUPSET_PRIVATE_PROPERTY_V2 = 4
CLUSTER_CHANGE_GROUPSET_STATE_V2 = 8
CLUSTER_CHANGE_GROUPSET_GROUP_ADDED = 16
CLUSTER_CHANGE_GROUPSET_GROUP_REMOVED = 32
CLUSTER_CHANGE_GROUPSET_DEPENDENCIES_V2 = 64
CLUSTER_CHANGE_GROUPSET_DEPENDENTS_V2 = 128
CLUSTER_CHANGE_GROUPSET_HANDLE_CLOSE_v2 = 256
CLUSTER_CHANGE_GROUPSET_ALL_V2 = 511
CLUSTER_CHANGE_NETINTERFACE_V2 = Int32
CLUSTER_CHANGE_NETINTERFACE_DELETED_V2 = 1
CLUSTER_CHANGE_NETINTERFACE_COMMON_PROPERTY_V2 = 2
CLUSTER_CHANGE_NETINTERFACE_PRIVATE_PROPERTY_V2 = 4
CLUSTER_CHANGE_NETINTERFACE_STATE_V2 = 8
CLUSTER_CHANGE_NETINTERFACE_HANDLE_CLOSE_V2 = 16
CLUSTER_CHANGE_NETINTERFACE_ALL_V2 = 31
CLUSTER_CHANGE_NETWORK_V2 = Int32
CLUSTER_CHANGE_NETWORK_DELETED_V2 = 1
CLUSTER_CHANGE_NETWORK_COMMON_PROPERTY_V2 = 2
CLUSTER_CHANGE_NETWORK_PRIVATE_PROPERTY_V2 = 4
CLUSTER_CHANGE_NETWORK_STATE_V2 = 8
CLUSTER_CHANGE_NETWORK_HANDLE_CLOSE_V2 = 16
CLUSTER_CHANGE_NETWORK_ALL_V2 = 31
CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2 = Int32
CLUSTER_CHANGE_UPGRADE_NODE_PREPARE = 1
CLUSTER_CHANGE_UPGRADE_NODE_COMMIT = 2
CLUSTER_CHANGE_UPGRADE_NODE_POSTCOMMIT = 4
CLUSTER_CHANGE_UPGRADE_ALL = 7
CLUSTER_CHANGE_NODE_V2 = Int32
CLUSTER_CHANGE_NODE_NETINTERFACE_ADDED_V2 = 1
CLUSTER_CHANGE_NODE_DELETED_V2 = 2
CLUSTER_CHANGE_NODE_COMMON_PROPERTY_V2 = 4
CLUSTER_CHANGE_NODE_PRIVATE_PROPERTY_V2 = 8
CLUSTER_CHANGE_NODE_STATE_V2 = 16
CLUSTER_CHANGE_NODE_GROUP_GAINED_V2 = 32
CLUSTER_CHANGE_NODE_GROUP_LOST_V2 = 64
CLUSTER_CHANGE_NODE_HANDLE_CLOSE_V2 = 128
CLUSTER_CHANGE_NODE_ALL_V2 = 255
CLUSTER_CHANGE_QUORUM_V2 = Int32
CLUSTER_CHANGE_QUORUM_STATE_V2 = 1
CLUSTER_CHANGE_QUORUM_ALL_V2 = 1
CLUSTER_CHANGE_REGISTRY_V2 = Int32
CLUSTER_CHANGE_REGISTRY_ATTRIBUTES_V2 = 1
CLUSTER_CHANGE_REGISTRY_NAME_V2 = 2
CLUSTER_CHANGE_REGISTRY_SUBTREE_V2 = 4
CLUSTER_CHANGE_REGISTRY_VALUE_V2 = 8
CLUSTER_CHANGE_REGISTRY_HANDLE_CLOSE_V2 = 16
CLUSTER_CHANGE_REGISTRY_ALL_V2 = 31
CLUSTER_CHANGE_RESOURCE_TYPE_V2 = Int32
CLUSTER_CHANGE_RESOURCE_TYPE_DELETED_V2 = 1
CLUSTER_CHANGE_RESOURCE_TYPE_COMMON_PROPERTY_V2 = 2
CLUSTER_CHANGE_RESOURCE_TYPE_PRIVATE_PROPERTY_V2 = 4
CLUSTER_CHANGE_RESOURCE_TYPE_POSSIBLE_OWNERS_V2 = 8
CLUSTER_CHANGE_RESOURCE_TYPE_DLL_UPGRADED_V2 = 16
CLUSTER_RESOURCE_TYPE_SPECIFIC_V2 = 32
CLUSTER_CHANGE_RESOURCE_TYPE_ALL_V2 = 63
CLUSTER_CHANGE_RESOURCE_V2 = Int32
CLUSTER_CHANGE_RESOURCE_COMMON_PROPERTY_V2 = 1
CLUSTER_CHANGE_RESOURCE_PRIVATE_PROPERTY_V2 = 2
CLUSTER_CHANGE_RESOURCE_STATE_V2 = 4
CLUSTER_CHANGE_RESOURCE_OWNER_GROUP_V2 = 8
CLUSTER_CHANGE_RESOURCE_DEPENDENCIES_V2 = 16
CLUSTER_CHANGE_RESOURCE_DEPENDENTS_V2 = 32
CLUSTER_CHANGE_RESOURCE_POSSIBLE_OWNERS_V2 = 64
CLUSTER_CHANGE_RESOURCE_DELETED_V2 = 128
CLUSTER_CHANGE_RESOURCE_DLL_UPGRADED_V2 = 256
CLUSTER_CHANGE_RESOURCE_HANDLE_CLOSE_V2 = 512
CLUSTER_CHANGE_RESOURCE_TERMINAL_STATE_V2 = 1024
CLUSTER_CHANGE_RESOURCE_ALL_V2 = 2047
CLUSTER_CHANGE_SHARED_VOLUME_V2 = Int32
CLUSTER_CHANGE_SHARED_VOLUME_STATE_V2 = 1
CLUSTER_CHANGE_SHARED_VOLUME_ADDED_V2 = 2
CLUSTER_CHANGE_SHARED_VOLUME_REMOVED_V2 = 4
CLUSTER_CHANGE_SHARED_VOLUME_ALL_V2 = 7
CLUSTER_CHANGE_SPACEPORT_V2 = Int32
CLUSTER_CHANGE_SPACEPORT_CUSTOM_PNP_V2 = 1
CLUSTER_CLOUD_TYPE = Int32
CLUSTER_CLOUD_TYPE_NONE = 0
CLUSTER_CLOUD_TYPE_AZURE = 1
CLUSTER_CLOUD_TYPE_MIXED = 128
CLUSTER_CLOUD_TYPE_UNKNOWN = -1
CLUSTER_CONTROL_OBJECT = Int32
CLUS_OBJECT_INVALID = 0
CLUS_OBJECT_RESOURCE = 1
CLUS_OBJECT_RESOURCE_TYPE = 2
CLUS_OBJECT_GROUP = 3
CLUS_OBJECT_NODE = 4
CLUS_OBJECT_NETWORK = 5
CLUS_OBJECT_NETINTERFACE = 6
CLUS_OBJECT_CLUSTER = 7
CLUS_OBJECT_GROUPSET = 8
CLUS_OBJECT_AFFINITYRULE = 9
CLUS_OBJECT_USER = 128
def _define_CLUSTER_CREATE_GROUP_INFO_head():
    class CLUSTER_CREATE_GROUP_INFO(Structure):
        pass
    return CLUSTER_CREATE_GROUP_INFO
def _define_CLUSTER_CREATE_GROUP_INFO():
    CLUSTER_CREATE_GROUP_INFO = win32more.Networking.Clustering.CLUSTER_CREATE_GROUP_INFO_head
    CLUSTER_CREATE_GROUP_INFO._fields_ = [
        ('dwVersion', UInt32),
        ('groupType', win32more.Networking.Clustering.CLUSGROUP_TYPE),
    ]
    return CLUSTER_CREATE_GROUP_INFO
CLUSTER_CSV_VOLUME_FAULT_STATE = Int32
CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateNoFaults = 0
CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateNoDirectIO = 1
CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateNoAccess = 2
CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateInMaintenance = 4
CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateDismounted = 8
CLUSTER_ENUM = Int32
CLUSTER_ENUM_NODE = 1
CLUSTER_ENUM_RESTYPE = 2
CLUSTER_ENUM_RESOURCE = 4
CLUSTER_ENUM_GROUP = 8
CLUSTER_ENUM_NETWORK = 16
CLUSTER_ENUM_NETINTERFACE = 32
CLUSTER_ENUM_SHARED_VOLUME_GROUP = 536870912
CLUSTER_ENUM_SHARED_VOLUME_RESOURCE = 1073741824
CLUSTER_ENUM_INTERNAL_NETWORK = -2147483648
CLUSTER_ENUM_ALL = 63
def _define_CLUSTER_ENUM_ITEM_head():
    class CLUSTER_ENUM_ITEM(Structure):
        pass
    return CLUSTER_ENUM_ITEM
def _define_CLUSTER_ENUM_ITEM():
    CLUSTER_ENUM_ITEM = win32more.Networking.Clustering.CLUSTER_ENUM_ITEM_head
    CLUSTER_ENUM_ITEM._fields_ = [
        ('dwVersion', UInt32),
        ('dwType', UInt32),
        ('cbId', UInt32),
        ('lpszId', win32more.Foundation.PWSTR),
        ('cbName', UInt32),
        ('lpszName', win32more.Foundation.PWSTR),
    ]
    return CLUSTER_ENUM_ITEM
CLUSTER_GROUP_AUTOFAILBACK_TYPE = Int32
CLUSTER_GROUP_AUTOFAILBACK_TYPE_ClusterGroupPreventFailback = 0
CLUSTER_GROUP_AUTOFAILBACK_TYPE_ClusterGroupAllowFailback = 1
CLUSTER_GROUP_AUTOFAILBACK_TYPE_ClusterGroupFailbackTypeCount = 2
CLUSTER_GROUP_ENUM = Int32
CLUSTER_GROUP_ENUM_CONTAINS = 1
CLUSTER_GROUP_ENUM_NODES = 2
CLUSTER_GROUP_ENUM_ALL = 3
def _define_CLUSTER_GROUP_ENUM_ITEM_head():
    class CLUSTER_GROUP_ENUM_ITEM(Structure):
        pass
    return CLUSTER_GROUP_ENUM_ITEM
def _define_CLUSTER_GROUP_ENUM_ITEM():
    CLUSTER_GROUP_ENUM_ITEM = win32more.Networking.Clustering.CLUSTER_GROUP_ENUM_ITEM_head
    CLUSTER_GROUP_ENUM_ITEM._fields_ = [
        ('dwVersion', UInt32),
        ('cbId', UInt32),
        ('lpszId', win32more.Foundation.PWSTR),
        ('cbName', UInt32),
        ('lpszName', win32more.Foundation.PWSTR),
        ('state', win32more.Networking.Clustering.CLUSTER_GROUP_STATE),
        ('cbOwnerNode', UInt32),
        ('lpszOwnerNode', win32more.Foundation.PWSTR),
        ('dwFlags', UInt32),
        ('cbProperties', UInt32),
        ('pProperties', c_void_p),
        ('cbRoProperties', UInt32),
        ('pRoProperties', c_void_p),
    ]
    return CLUSTER_GROUP_ENUM_ITEM
CLUSTER_GROUP_PRIORITY = Int32
CLUSTER_GROUP_PRIORITY_PriorityDisabled = 0
CLUSTER_GROUP_PRIORITY_PriorityLow = 1000
CLUSTER_GROUP_PRIORITY_PriorityMedium = 2000
CLUSTER_GROUP_PRIORITY_PriorityHigh = 3000
CLUSTER_GROUP_STATE = Int32
CLUSTER_GROUP_STATE_ClusterGroupStateUnknown = -1
CLUSTER_GROUP_STATE_ClusterGroupOnline = 0
CLUSTER_GROUP_STATE_ClusterGroupOffline = 1
CLUSTER_GROUP_STATE_ClusterGroupFailed = 2
CLUSTER_GROUP_STATE_ClusterGroupPartialOnline = 3
CLUSTER_GROUP_STATE_ClusterGroupPending = 4
def _define_CLUSTER_HEALTH_FAULT_head():
    class CLUSTER_HEALTH_FAULT(Structure):
        pass
    return CLUSTER_HEALTH_FAULT
def _define_CLUSTER_HEALTH_FAULT():
    CLUSTER_HEALTH_FAULT = win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_head
    CLUSTER_HEALTH_FAULT._fields_ = [
        ('Id', win32more.Foundation.PWSTR),
        ('ErrorType', UInt32),
        ('ErrorCode', UInt32),
        ('Description', win32more.Foundation.PWSTR),
        ('Provider', win32more.Foundation.PWSTR),
        ('Flags', UInt32),
        ('Reserved', UInt32),
    ]
    return CLUSTER_HEALTH_FAULT
def _define_CLUSTER_HEALTH_FAULT_ARRAY_head():
    class CLUSTER_HEALTH_FAULT_ARRAY(Structure):
        pass
    return CLUSTER_HEALTH_FAULT_ARRAY
def _define_CLUSTER_HEALTH_FAULT_ARRAY():
    CLUSTER_HEALTH_FAULT_ARRAY = win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_ARRAY_head
    CLUSTER_HEALTH_FAULT_ARRAY._fields_ = [
        ('numFaults', UInt32),
        ('faults', POINTER(win32more.Networking.Clustering.CLUSTER_HEALTH_FAULT_head)),
    ]
    return CLUSTER_HEALTH_FAULT_ARRAY
def _define_CLUSTER_IP_ENTRY_head():
    class CLUSTER_IP_ENTRY(Structure):
        pass
    return CLUSTER_IP_ENTRY
def _define_CLUSTER_IP_ENTRY():
    CLUSTER_IP_ENTRY = win32more.Networking.Clustering.CLUSTER_IP_ENTRY_head
    CLUSTER_IP_ENTRY._fields_ = [
        ('lpszIpAddress', win32more.Foundation.PWSTR),
        ('dwPrefixLength', UInt32),
    ]
    return CLUSTER_IP_ENTRY
def _define_CLUSTER_MEMBERSHIP_INFO_head():
    class CLUSTER_MEMBERSHIP_INFO(Structure):
        pass
    return CLUSTER_MEMBERSHIP_INFO
def _define_CLUSTER_MEMBERSHIP_INFO():
    CLUSTER_MEMBERSHIP_INFO = win32more.Networking.Clustering.CLUSTER_MEMBERSHIP_INFO_head
    CLUSTER_MEMBERSHIP_INFO._fields_ = [
        ('HasQuorum', win32more.Foundation.BOOL),
        ('UpnodesSize', UInt32),
        ('Upnodes', Byte * 1),
    ]
    return CLUSTER_MEMBERSHIP_INFO
CLUSTER_MGMT_POINT_RESTYPE = Int32
CLUSTER_MGMT_POINT_RESTYPE_AUTO = 0
CLUSTER_MGMT_POINT_RESTYPE_SNN = 1
CLUSTER_MGMT_POINT_RESTYPE_DNN = 2
CLUSTER_MGMT_POINT_TYPE = Int32
CLUSTER_MGMT_POINT_TYPE_NONE = 0
CLUSTER_MGMT_POINT_TYPE_CNO = 1
CLUSTER_MGMT_POINT_TYPE_DNS_ONLY = 2
CLUSTER_MGMT_POINT_TYPE_CNO_ONLY = 3
CLUSTER_NETINTERFACE_STATE = Int32
CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceStateUnknown = -1
CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceUnavailable = 0
CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceFailed = 1
CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceUnreachable = 2
CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceUp = 3
CLUSTER_NETWORK_ENUM = Int32
CLUSTER_NETWORK_ENUM_NETINTERFACES = 1
CLUSTER_NETWORK_ENUM_ALL = 1
CLUSTER_NETWORK_ROLE = Int32
CLUSTER_NETWORK_ROLE_ClusterNetworkRoleNone = 0
CLUSTER_NETWORK_ROLE_ClusterNetworkRoleInternalUse = 1
CLUSTER_NETWORK_ROLE_ClusterNetworkRoleClientAccess = 2
CLUSTER_NETWORK_ROLE_ClusterNetworkRoleInternalAndClient = 3
CLUSTER_NETWORK_STATE = Int32
CLUSTER_NETWORK_STATE_ClusterNetworkStateUnknown = -1
CLUSTER_NETWORK_STATE_ClusterNetworkUnavailable = 0
CLUSTER_NETWORK_STATE_ClusterNetworkDown = 1
CLUSTER_NETWORK_STATE_ClusterNetworkPartitioned = 2
CLUSTER_NETWORK_STATE_ClusterNetworkUp = 3
CLUSTER_NODE_DRAIN_STATUS = Int32
CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusNotInitiated = 0
CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusInProgress = 1
CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusCompleted = 2
CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusFailed = 3
CLUSTER_NODE_DRAIN_STATUS_ClusterNodeDrainStatusCount = 4
CLUSTER_NODE_ENUM = Int32
CLUSTER_NODE_ENUM_NETINTERFACES = 1
CLUSTER_NODE_ENUM_GROUPS = 2
CLUSTER_NODE_ENUM_PREFERRED_GROUPS = 4
CLUSTER_NODE_ENUM_ALL = 3
CLUSTER_NODE_RESUME_FAILBACK_TYPE = Int32
CLUSTER_NODE_RESUME_FAILBACK_TYPE_DoNotFailbackGroups = 0
CLUSTER_NODE_RESUME_FAILBACK_TYPE_FailbackGroupsImmediately = 1
CLUSTER_NODE_RESUME_FAILBACK_TYPE_FailbackGroupsPerPolicy = 2
CLUSTER_NODE_RESUME_FAILBACK_TYPE_ClusterNodeResumeFailbackTypeCount = 3
CLUSTER_NODE_STATE = Int32
CLUSTER_NODE_STATE_ClusterNodeStateUnknown = -1
CLUSTER_NODE_STATE_ClusterNodeUp = 0
CLUSTER_NODE_STATE_ClusterNodeDown = 1
CLUSTER_NODE_STATE_ClusterNodePaused = 2
CLUSTER_NODE_STATE_ClusterNodeJoining = 3
CLUSTER_NODE_STATUS = Int32
CLUSTER_NODE_STATUS_NodeStatusNormal = 0
CLUSTER_NODE_STATUS_NodeStatusIsolated = 1
CLUSTER_NODE_STATUS_NodeStatusQuarantined = 2
CLUSTER_NODE_STATUS_NodeStatusDrainInProgress = 4
CLUSTER_NODE_STATUS_NodeStatusDrainCompleted = 8
CLUSTER_NODE_STATUS_NodeStatusDrainFailed = 16
CLUSTER_NODE_STATUS_NodeStatusAvoidPlacement = 32
CLUSTER_NODE_STATUS_NodeStatusMax = 51
CLUSTER_NOTIFICATIONS_VERSION = Int32
CLUSTER_NOTIFICATIONS_V1 = 1
CLUSTER_NOTIFICATIONS_V2 = 2
CLUSTER_OBJECT_TYPE = Int32
CLUSTER_OBJECT_TYPE_NONE = 0
CLUSTER_OBJECT_TYPE_CLUSTER = 1
CLUSTER_OBJECT_TYPE_GROUP = 2
CLUSTER_OBJECT_TYPE_RESOURCE = 3
CLUSTER_OBJECT_TYPE_RESOURCE_TYPE = 4
CLUSTER_OBJECT_TYPE_NETWORK_INTERFACE = 5
CLUSTER_OBJECT_TYPE_NETWORK = 6
CLUSTER_OBJECT_TYPE_NODE = 7
CLUSTER_OBJECT_TYPE_REGISTRY = 8
CLUSTER_OBJECT_TYPE_QUORUM = 9
CLUSTER_OBJECT_TYPE_SHARED_VOLUME = 10
CLUSTER_OBJECT_TYPE_GROUPSET = 13
CLUSTER_OBJECT_TYPE_AFFINITYRULE = 16
CLUSTER_PROPERTY_FORMAT = Int32
CLUSPROP_FORMAT_UNKNOWN = 0
CLUSPROP_FORMAT_BINARY = 1
CLUSPROP_FORMAT_DWORD = 2
CLUSPROP_FORMAT_SZ = 3
CLUSPROP_FORMAT_EXPAND_SZ = 4
CLUSPROP_FORMAT_MULTI_SZ = 5
CLUSPROP_FORMAT_ULARGE_INTEGER = 6
CLUSPROP_FORMAT_LONG = 7
CLUSPROP_FORMAT_EXPANDED_SZ = 8
CLUSPROP_FORMAT_SECURITY_DESCRIPTOR = 9
CLUSPROP_FORMAT_LARGE_INTEGER = 10
CLUSPROP_FORMAT_WORD = 11
CLUSPROP_FORMAT_FILETIME = 12
CLUSPROP_FORMAT_VALUE_LIST = 13
CLUSPROP_FORMAT_PROPERTY_LIST = 14
CLUSPROP_FORMAT_USER = 32768
CLUSTER_PROPERTY_SYNTAX = UInt32
CLUSPROP_SYNTAX_ENDMARK = 0
CLUSPROP_SYNTAX_NAME = 262147
CLUSPROP_SYNTAX_RESCLASS = 131074
CLUSPROP_SYNTAX_LIST_VALUE_SZ = 65539
CLUSPROP_SYNTAX_LIST_VALUE_EXPAND_SZ = 65540
CLUSPROP_SYNTAX_LIST_VALUE_DWORD = 65538
CLUSPROP_SYNTAX_LIST_VALUE_BINARY = 65537
CLUSPROP_SYNTAX_LIST_VALUE_MULTI_SZ = 65541
CLUSPROP_SYNTAX_LIST_VALUE_LONG = 65543
CLUSPROP_SYNTAX_LIST_VALUE_EXPANDED_SZ = 65544
CLUSPROP_SYNTAX_LIST_VALUE_SECURITY_DESCRIPTOR = 65545
CLUSPROP_SYNTAX_LIST_VALUE_LARGE_INTEGER = 65546
CLUSPROP_SYNTAX_LIST_VALUE_ULARGE_INTEGER = 65542
CLUSPROP_SYNTAX_LIST_VALUE_WORD = 65547
CLUSPROP_SYNTAX_LIST_VALUE_PROPERTY_LIST = 65550
CLUSPROP_SYNTAX_LIST_VALUE_FILETIME = 65548
CLUSPROP_SYNTAX_DISK_SIGNATURE = 327682
CLUSPROP_SYNTAX_SCSI_ADDRESS = 393218
CLUSPROP_SYNTAX_DISK_NUMBER = 458754
CLUSPROP_SYNTAX_PARTITION_INFO = 524289
CLUSPROP_SYNTAX_FTSET_INFO = 589825
CLUSPROP_SYNTAX_DISK_SERIALNUMBER = 655363
CLUSPROP_SYNTAX_DISK_GUID = 720899
CLUSPROP_SYNTAX_DISK_SIZE = 786438
CLUSPROP_SYNTAX_PARTITION_INFO_EX = 851969
CLUSPROP_SYNTAX_PARTITION_INFO_EX2 = 917505
CLUSPROP_SYNTAX_STORAGE_DEVICE_ID_DESCRIPTOR = 983041
CLUSTER_PROPERTY_TYPE = Int32
CLUSPROP_TYPE_UNKNOWN = -1
CLUSPROP_TYPE_ENDMARK = 0
CLUSPROP_TYPE_LIST_VALUE = 1
CLUSPROP_TYPE_RESCLASS = 2
CLUSPROP_TYPE_RESERVED1 = 3
CLUSPROP_TYPE_NAME = 4
CLUSPROP_TYPE_SIGNATURE = 5
CLUSPROP_TYPE_SCSI_ADDRESS = 6
CLUSPROP_TYPE_DISK_NUMBER = 7
CLUSPROP_TYPE_PARTITION_INFO = 8
CLUSPROP_TYPE_FTSET_INFO = 9
CLUSPROP_TYPE_DISK_SERIALNUMBER = 10
CLUSPROP_TYPE_DISK_GUID = 11
CLUSPROP_TYPE_DISK_SIZE = 12
CLUSPROP_TYPE_PARTITION_INFO_EX = 13
CLUSPROP_TYPE_PARTITION_INFO_EX2 = 14
CLUSPROP_TYPE_STORAGE_DEVICE_ID_DESCRIPTOR = 15
CLUSPROP_TYPE_USER = 32768
CLUSTER_QUORUM_TYPE = Int32
CLUSTER_QUORUM_TYPE_OperationalQuorum = 0
CLUSTER_QUORUM_TYPE_ModifyQuorum = 1
CLUSTER_QUORUM_VALUE = Int32
CLUSTER_QUORUM_MAINTAINED = 0
CLUSTER_QUORUM_LOST = 1
def _define_CLUSTER_READ_BATCH_COMMAND_head():
    class CLUSTER_READ_BATCH_COMMAND(Structure):
        pass
    return CLUSTER_READ_BATCH_COMMAND
def _define_CLUSTER_READ_BATCH_COMMAND():
    CLUSTER_READ_BATCH_COMMAND = win32more.Networking.Clustering.CLUSTER_READ_BATCH_COMMAND_head
    CLUSTER_READ_BATCH_COMMAND._fields_ = [
        ('Command', win32more.Networking.Clustering.CLUSTER_REG_COMMAND),
        ('dwOptions', UInt32),
        ('wzSubkeyName', win32more.Foundation.PWSTR),
        ('wzValueName', win32more.Foundation.PWSTR),
        ('lpData', c_char_p_no),
        ('cbData', UInt32),
    ]
    return CLUSTER_READ_BATCH_COMMAND
CLUSTER_REG_COMMAND = Int32
CLUSREG_COMMAND_NONE = 0
CLUSREG_SET_VALUE = 1
CLUSREG_CREATE_KEY = 2
CLUSREG_DELETE_KEY = 3
CLUSREG_DELETE_VALUE = 4
CLUSREG_SET_KEY_SECURITY = 5
CLUSREG_VALUE_DELETED = 6
CLUSREG_READ_KEY = 7
CLUSREG_READ_VALUE = 8
CLUSREG_READ_ERROR = 9
CLUSREG_CONTROL_COMMAND = 10
CLUSREG_CONDITION_EXISTS = 11
CLUSREG_CONDITION_NOT_EXISTS = 12
CLUSREG_CONDITION_IS_EQUAL = 13
CLUSREG_CONDITION_IS_NOT_EQUAL = 14
CLUSREG_CONDITION_IS_GREATER_THAN = 15
CLUSREG_CONDITION_IS_LESS_THAN = 16
CLUSREG_CONDITION_KEY_EXISTS = 17
CLUSREG_CONDITION_KEY_NOT_EXISTS = 18
CLUSREG_LAST_COMMAND = 19
CLUSTER_RESOURCE_APPLICATION_STATE = Int32
CLUSTER_RESOURCE_APPLICATION_STATE_ClusterResourceApplicationStateUnknown = 1
CLUSTER_RESOURCE_APPLICATION_STATE_ClusterResourceApplicationOSHeartBeat = 2
CLUSTER_RESOURCE_APPLICATION_STATE_ClusterResourceApplicationReady = 3
CLUSTER_RESOURCE_CLASS = Int32
CLUS_RESCLASS_UNKNOWN = 0
CLUS_RESCLASS_STORAGE = 1
CLUS_RESCLASS_NETWORK = 2
CLUS_RESCLASS_USER = 32768
CLUSTER_RESOURCE_CREATE_FLAGS = Int32
CLUSTER_RESOURCE_DEFAULT_MONITOR = 0
CLUSTER_RESOURCE_SEPARATE_MONITOR = 1
CLUSTER_RESOURCE_VALID_FLAGS = 1
CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION = Int32
CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION_ClusterResourceEmbeddedFailureActionNone = 0
CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION_ClusterResourceEmbeddedFailureActionLogOnly = 1
CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION_ClusterResourceEmbeddedFailureActionRecover = 2
CLUSTER_RESOURCE_ENUM = Int32
CLUSTER_RESOURCE_ENUM_DEPENDS = 1
CLUSTER_RESOURCE_ENUM_PROVIDES = 2
CLUSTER_RESOURCE_ENUM_NODES = 4
CLUSTER_RESOURCE_ENUM_ALL = 7
def _define_CLUSTER_RESOURCE_ENUM_ITEM_head():
    class CLUSTER_RESOURCE_ENUM_ITEM(Structure):
        pass
    return CLUSTER_RESOURCE_ENUM_ITEM
def _define_CLUSTER_RESOURCE_ENUM_ITEM():
    CLUSTER_RESOURCE_ENUM_ITEM = win32more.Networking.Clustering.CLUSTER_RESOURCE_ENUM_ITEM_head
    CLUSTER_RESOURCE_ENUM_ITEM._fields_ = [
        ('dwVersion', UInt32),
        ('cbId', UInt32),
        ('lpszId', win32more.Foundation.PWSTR),
        ('cbName', UInt32),
        ('lpszName', win32more.Foundation.PWSTR),
        ('cbOwnerGroupName', UInt32),
        ('lpszOwnerGroupName', win32more.Foundation.PWSTR),
        ('cbOwnerGroupId', UInt32),
        ('lpszOwnerGroupId', win32more.Foundation.PWSTR),
        ('cbProperties', UInt32),
        ('pProperties', c_void_p),
        ('cbRoProperties', UInt32),
        ('pRoProperties', c_void_p),
    ]
    return CLUSTER_RESOURCE_ENUM_ITEM
CLUSTER_RESOURCE_RESTART_ACTION = Int32
CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceDontRestart = 0
CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceRestartNoNotify = 1
CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceRestartNotify = 2
CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceRestartActionCount = 3
CLUSTER_RESOURCE_STATE = Int32
CLUSTER_RESOURCE_STATE_ClusterResourceStateUnknown = -1
CLUSTER_RESOURCE_STATE_ClusterResourceInherited = 0
CLUSTER_RESOURCE_STATE_ClusterResourceInitializing = 1
CLUSTER_RESOURCE_STATE_ClusterResourceOnline = 2
CLUSTER_RESOURCE_STATE_ClusterResourceOffline = 3
CLUSTER_RESOURCE_STATE_ClusterResourceFailed = 4
CLUSTER_RESOURCE_STATE_ClusterResourcePending = 128
CLUSTER_RESOURCE_STATE_ClusterResourceOnlinePending = 129
CLUSTER_RESOURCE_STATE_ClusterResourceOfflinePending = 130
CLUSTER_RESOURCE_STATE_CHANGE_REASON = Int32
CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonUnknown = 0
CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonMove = 1
CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonFailover = 2
CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonFailedMove = 3
CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonShutdown = 4
CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonRundown = 5
CLUSTER_RESOURCE_TYPE_ENUM = Int32
CLUSTER_RESOURCE_TYPE_ENUM_NODES = 1
CLUSTER_RESOURCE_TYPE_ENUM_RESOURCES = 2
CLUSTER_RESOURCE_TYPE_ENUM_ALL = 3
CLUSTER_ROLE = Int32
CLUSTER_ROLE_ClusterRoleDHCP = 0
CLUSTER_ROLE_ClusterRoleDTC = 1
CLUSTER_ROLE_ClusterRoleFileServer = 2
CLUSTER_ROLE_ClusterRoleGenericApplication = 3
CLUSTER_ROLE_ClusterRoleGenericScript = 4
CLUSTER_ROLE_ClusterRoleGenericService = 5
CLUSTER_ROLE_ClusterRoleISCSINameServer = 6
CLUSTER_ROLE_ClusterRoleMSMQ = 7
CLUSTER_ROLE_ClusterRoleNFS = 8
CLUSTER_ROLE_ClusterRolePrintServer = 9
CLUSTER_ROLE_ClusterRoleStandAloneNamespaceServer = 10
CLUSTER_ROLE_ClusterRoleVolumeShadowCopyServiceTask = 11
CLUSTER_ROLE_ClusterRoleWINS = 12
CLUSTER_ROLE_ClusterRoleTaskScheduler = 13
CLUSTER_ROLE_ClusterRoleNetworkFileSystem = 14
CLUSTER_ROLE_ClusterRoleDFSReplicatedFolder = 15
CLUSTER_ROLE_ClusterRoleDistributedFileSystem = 16
CLUSTER_ROLE_ClusterRoleDistributedNetworkName = 17
CLUSTER_ROLE_ClusterRoleFileShare = 18
CLUSTER_ROLE_ClusterRoleFileShareWitness = 19
CLUSTER_ROLE_ClusterRoleHardDisk = 20
CLUSTER_ROLE_ClusterRoleIPAddress = 21
CLUSTER_ROLE_ClusterRoleIPV6Address = 22
CLUSTER_ROLE_ClusterRoleIPV6TunnelAddress = 23
CLUSTER_ROLE_ClusterRoleISCSITargetServer = 24
CLUSTER_ROLE_ClusterRoleNetworkName = 25
CLUSTER_ROLE_ClusterRolePhysicalDisk = 26
CLUSTER_ROLE_ClusterRoleSODAFileServer = 27
CLUSTER_ROLE_ClusterRoleStoragePool = 28
CLUSTER_ROLE_ClusterRoleVirtualMachine = 29
CLUSTER_ROLE_ClusterRoleVirtualMachineConfiguration = 30
CLUSTER_ROLE_ClusterRoleVirtualMachineReplicaBroker = 31
CLUSTER_ROLE_STATE = Int32
CLUSTER_ROLE_STATE_ClusterRoleUnknown = -1
CLUSTER_ROLE_STATE_ClusterRoleClustered = 0
CLUSTER_ROLE_STATE_ClusterRoleUnclustered = 1
def _define_CLUSTER_SET_PASSWORD_STATUS_head():
    class CLUSTER_SET_PASSWORD_STATUS(Structure):
        pass
    return CLUSTER_SET_PASSWORD_STATUS
def _define_CLUSTER_SET_PASSWORD_STATUS():
    CLUSTER_SET_PASSWORD_STATUS = win32more.Networking.Clustering.CLUSTER_SET_PASSWORD_STATUS_head
    CLUSTER_SET_PASSWORD_STATUS._fields_ = [
        ('NodeId', UInt32),
        ('SetAttempted', win32more.Foundation.BOOLEAN),
        ('ReturnStatus', UInt32),
    ]
    return CLUSTER_SET_PASSWORD_STATUS
CLUSTER_SETUP_PHASE = Int32
CLUSTER_SETUP_PHASE_ClusterSetupPhaseInitialize = 1
CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateNodeState = 100
CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateNetft = 102
CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateClusDisk = 103
CLUSTER_SETUP_PHASE_ClusterSetupPhaseConfigureClusSvc = 104
CLUSTER_SETUP_PHASE_ClusterSetupPhaseStartingClusSvc = 105
CLUSTER_SETUP_PHASE_ClusterSetupPhaseQueryClusterNameAccount = 106
CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateClusterNameAccount = 107
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateClusterAccount = 108
CLUSTER_SETUP_PHASE_ClusterSetupPhaseConfigureClusterAccount = 109
CLUSTER_SETUP_PHASE_ClusterSetupPhaseFormingCluster = 200
CLUSTER_SETUP_PHASE_ClusterSetupPhaseAddClusterProperties = 201
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateResourceTypes = 202
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateGroups = 203
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateIPAddressResources = 204
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateNetworkName = 205
CLUSTER_SETUP_PHASE_ClusterSetupPhaseClusterGroupOnline = 206
CLUSTER_SETUP_PHASE_ClusterSetupPhaseGettingCurrentMembership = 300
CLUSTER_SETUP_PHASE_ClusterSetupPhaseAddNodeToCluster = 301
CLUSTER_SETUP_PHASE_ClusterSetupPhaseNodeUp = 302
CLUSTER_SETUP_PHASE_ClusterSetupPhaseMoveGroup = 400
CLUSTER_SETUP_PHASE_ClusterSetupPhaseDeleteGroup = 401
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCleanupCOs = 402
CLUSTER_SETUP_PHASE_ClusterSetupPhaseOfflineGroup = 403
CLUSTER_SETUP_PHASE_ClusterSetupPhaseEvictNode = 404
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCleanupNode = 405
CLUSTER_SETUP_PHASE_ClusterSetupPhaseCoreGroupCleanup = 406
CLUSTER_SETUP_PHASE_ClusterSetupPhaseFailureCleanup = 999
CLUSTER_SETUP_PHASE_SEVERITY = Int32
CLUSTER_SETUP_PHASE_SEVERITY_ClusterSetupPhaseInformational = 1
CLUSTER_SETUP_PHASE_SEVERITY_ClusterSetupPhaseWarning = 2
CLUSTER_SETUP_PHASE_SEVERITY_ClusterSetupPhaseFatal = 3
CLUSTER_SETUP_PHASE_TYPE = Int32
CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseStart = 1
CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseContinue = 2
CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseEnd = 3
CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseReport = 4
CLUSTER_SHARED_VOLUME_BACKUP_STATE = Int32
CLUSTER_SHARED_VOLUME_BACKUP_STATE_VolumeBackupNone = 0
CLUSTER_SHARED_VOLUME_BACKUP_STATE_VolumeBackupInProgress = 1
def _define_CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT_head():
    class CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT(Structure):
        pass
    return CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT
def _define_CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT():
    CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT = win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT_head
    CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME),
        ('Base2', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME),
    ]
    return CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT_head():
    class CLUSTER_SHARED_VOLUME_RENAME_INPUT(Structure):
        pass
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT():
    CLUSTER_SHARED_VOLUME_RENAME_INPUT = win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_head
    CLUSTER_SHARED_VOLUME_RENAME_INPUT._fields_ = [
        ('Base', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME),
        ('Base2', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME),
    ]
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME_head():
    class CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME(Structure):
        pass
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME():
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME = win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME_head
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME._fields_ = [
        ('NewVolumeName', Char * 260),
        ('NewVolumeGuid', Char * 50),
    ]
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME_head():
    class CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME(Structure):
        pass
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME():
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME = win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME_head
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME._fields_ = [
        ('NewVolumeName', Char * 260),
    ]
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME
CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE = Int32
CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeNone = 0
CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeOffset = 1
CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeId = 2
CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeName = 3
CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeGuid = 4
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME_head():
    class CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME(Structure):
        pass
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME
def _define_CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME():
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME = win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME_head
    class CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME__Anonymous_e__Union(Union):
        pass
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME__Anonymous_e__Union._fields_ = [
        ('VolumeOffset', UInt64),
        ('VolumeId', Char * 260),
        ('VolumeName', Char * 260),
        ('VolumeGuid', Char * 50),
    ]
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME._anonymous_ = [
        'Anonymous',
    ]
    CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME._fields_ = [
        ('InputType', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE),
        ('Anonymous', CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME__Anonymous_e__Union),
    ]
    return CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME
CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE = Int32
CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumeSnapshotStateUnknown = 0
CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumePrepareForHWSnapshot = 1
CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumeHWSnapshotCompleted = 2
CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumePrepareForFreeze = 3
CLUSTER_SHARED_VOLUME_STATE = Int32
CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateUnavailable = 0
CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStatePaused = 1
CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateActive = 2
CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateActiveRedirected = 3
CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateActiveVolumeRedirected = 4
def _define_CLUSTER_SHARED_VOLUME_STATE_INFO_head():
    class CLUSTER_SHARED_VOLUME_STATE_INFO(Structure):
        pass
    return CLUSTER_SHARED_VOLUME_STATE_INFO
def _define_CLUSTER_SHARED_VOLUME_STATE_INFO():
    CLUSTER_SHARED_VOLUME_STATE_INFO = win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_STATE_INFO_head
    CLUSTER_SHARED_VOLUME_STATE_INFO._fields_ = [
        ('szVolumeName', Char * 260),
        ('szNodeName', Char * 260),
        ('VolumeState', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_STATE),
    ]
    return CLUSTER_SHARED_VOLUME_STATE_INFO
def _define_CLUSTER_SHARED_VOLUME_STATE_INFO_EX_head():
    class CLUSTER_SHARED_VOLUME_STATE_INFO_EX(Structure):
        pass
    return CLUSTER_SHARED_VOLUME_STATE_INFO_EX
def _define_CLUSTER_SHARED_VOLUME_STATE_INFO_EX():
    CLUSTER_SHARED_VOLUME_STATE_INFO_EX = win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_STATE_INFO_EX_head
    CLUSTER_SHARED_VOLUME_STATE_INFO_EX._fields_ = [
        ('szVolumeName', Char * 260),
        ('szNodeName', Char * 260),
        ('VolumeState', win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_STATE),
        ('szVolumeFriendlyName', Char * 260),
        ('RedirectedIOReason', UInt64),
        ('VolumeRedirectedIOReason', UInt64),
    ]
    return CLUSTER_SHARED_VOLUME_STATE_INFO_EX
CLUSTER_STORAGENODE_STATE = Int32
CLUSTER_STORAGENODE_STATE_ClusterStorageNodeStateUnknown = 0
CLUSTER_STORAGENODE_STATE_ClusterStorageNodeUp = 1
CLUSTER_STORAGENODE_STATE_ClusterStorageNodeDown = 2
CLUSTER_STORAGENODE_STATE_ClusterStorageNodePaused = 3
CLUSTER_STORAGENODE_STATE_ClusterStorageNodeStarting = 4
CLUSTER_STORAGENODE_STATE_ClusterStorageNodeStopping = 5
CLUSTER_UPGRADE_PHASE = Int32
CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseInitialize = 1
CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseValidatingUpgrade = 2
CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseUpgradingComponents = 3
CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseInstallingNewComponents = 4
CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseUpgradeComplete = 5
def _define_CLUSTER_VALIDATE_CSV_FILENAME_head():
    class CLUSTER_VALIDATE_CSV_FILENAME(Structure):
        pass
    return CLUSTER_VALIDATE_CSV_FILENAME
def _define_CLUSTER_VALIDATE_CSV_FILENAME():
    CLUSTER_VALIDATE_CSV_FILENAME = win32more.Networking.Clustering.CLUSTER_VALIDATE_CSV_FILENAME_head
    CLUSTER_VALIDATE_CSV_FILENAME._fields_ = [
        ('szFileName', Char * 1),
    ]
    return CLUSTER_VALIDATE_CSV_FILENAME
def _define_CLUSTER_VALIDATE_DIRECTORY_head():
    class CLUSTER_VALIDATE_DIRECTORY(Structure):
        pass
    return CLUSTER_VALIDATE_DIRECTORY
def _define_CLUSTER_VALIDATE_DIRECTORY():
    CLUSTER_VALIDATE_DIRECTORY = win32more.Networking.Clustering.CLUSTER_VALIDATE_DIRECTORY_head
    CLUSTER_VALIDATE_DIRECTORY._fields_ = [
        ('szPath', Char * 1),
    ]
    return CLUSTER_VALIDATE_DIRECTORY
def _define_CLUSTER_VALIDATE_NETNAME_head():
    class CLUSTER_VALIDATE_NETNAME(Structure):
        pass
    return CLUSTER_VALIDATE_NETNAME
def _define_CLUSTER_VALIDATE_NETNAME():
    CLUSTER_VALIDATE_NETNAME = win32more.Networking.Clustering.CLUSTER_VALIDATE_NETNAME_head
    CLUSTER_VALIDATE_NETNAME._fields_ = [
        ('szNetworkName', Char * 1),
    ]
    return CLUSTER_VALIDATE_NETNAME
def _define_CLUSTER_VALIDATE_PATH_head():
    class CLUSTER_VALIDATE_PATH(Structure):
        pass
    return CLUSTER_VALIDATE_PATH
def _define_CLUSTER_VALIDATE_PATH():
    CLUSTER_VALIDATE_PATH = win32more.Networking.Clustering.CLUSTER_VALIDATE_PATH_head
    CLUSTER_VALIDATE_PATH._fields_ = [
        ('szPath', Char * 1),
    ]
    return CLUSTER_VALIDATE_PATH
ClusterNames = Guid('f2e606eb-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
CLUSTERSET_OBJECT_TYPE = Int32
CLUSTERSET_OBJECT_TYPE_NONE = 0
CLUSTERSET_OBJECT_TYPE_MEMBER = 1
CLUSTERSET_OBJECT_TYPE_WORKLOAD = 2
CLUSTERSET_OBJECT_TYPE_DATABASE = 3
def _define_CLUSTERVERSIONINFO_head():
    class CLUSTERVERSIONINFO(Structure):
        pass
    return CLUSTERVERSIONINFO
def _define_CLUSTERVERSIONINFO():
    CLUSTERVERSIONINFO = win32more.Networking.Clustering.CLUSTERVERSIONINFO_head
    CLUSTERVERSIONINFO._fields_ = [
        ('dwVersionInfoSize', UInt32),
        ('MajorVersion', UInt16),
        ('MinorVersion', UInt16),
        ('BuildNumber', UInt16),
        ('szVendorId', Char * 64),
        ('szCSDVersion', Char * 64),
        ('dwClusterHighestVersion', UInt32),
        ('dwClusterLowestVersion', UInt32),
        ('dwFlags', UInt32),
        ('dwReserved', UInt32),
    ]
    return CLUSTERVERSIONINFO
def _define_CLUSTERVERSIONINFO_NT4_head():
    class CLUSTERVERSIONINFO_NT4(Structure):
        pass
    return CLUSTERVERSIONINFO_NT4
def _define_CLUSTERVERSIONINFO_NT4():
    CLUSTERVERSIONINFO_NT4 = win32more.Networking.Clustering.CLUSTERVERSIONINFO_NT4_head
    CLUSTERVERSIONINFO_NT4._fields_ = [
        ('dwVersionInfoSize', UInt32),
        ('MajorVersion', UInt16),
        ('MinorVersion', UInt16),
        ('BuildNumber', UInt16),
        ('szVendorId', Char * 64),
        ('szCSDVersion', Char * 64),
    ]
    return CLUSTERVERSIONINFO_NT4
ClusVersion = Guid('f2e60715-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
def _define_CREATE_CLUSTER_CONFIG_head():
    class CREATE_CLUSTER_CONFIG(Structure):
        pass
    return CREATE_CLUSTER_CONFIG
def _define_CREATE_CLUSTER_CONFIG():
    CREATE_CLUSTER_CONFIG = win32more.Networking.Clustering.CREATE_CLUSTER_CONFIG_head
    CREATE_CLUSTER_CONFIG._fields_ = [
        ('dwVersion', UInt32),
        ('lpszClusterName', win32more.Foundation.PWSTR),
        ('cNodes', UInt32),
        ('ppszNodeNames', POINTER(win32more.Foundation.PWSTR)),
        ('cIpEntries', UInt32),
        ('pIpEntries', POINTER(win32more.Networking.Clustering.CLUSTER_IP_ENTRY_head)),
        ('fEmptyCluster', win32more.Foundation.BOOLEAN),
        ('managementPointType', win32more.Networking.Clustering.CLUSTER_MGMT_POINT_TYPE),
        ('managementPointResType', win32more.Networking.Clustering.CLUSTER_MGMT_POINT_RESTYPE),
    ]
    return CREATE_CLUSTER_CONFIG
def _define_CREATE_CLUSTER_NAME_ACCOUNT_head():
    class CREATE_CLUSTER_NAME_ACCOUNT(Structure):
        pass
    return CREATE_CLUSTER_NAME_ACCOUNT
def _define_CREATE_CLUSTER_NAME_ACCOUNT():
    CREATE_CLUSTER_NAME_ACCOUNT = win32more.Networking.Clustering.CREATE_CLUSTER_NAME_ACCOUNT_head
    CREATE_CLUSTER_NAME_ACCOUNT._fields_ = [
        ('dwVersion', UInt32),
        ('lpszClusterName', win32more.Foundation.PWSTR),
        ('dwFlags', UInt32),
        ('pszUserName', win32more.Foundation.PWSTR),
        ('pszPassword', win32more.Foundation.PWSTR),
        ('pszDomain', win32more.Foundation.PWSTR),
        ('managementPointType', win32more.Networking.Clustering.CLUSTER_MGMT_POINT_TYPE),
        ('managementPointResType', win32more.Networking.Clustering.CLUSTER_MGMT_POINT_RESTYPE),
        ('bUpgradeVCOs', win32more.Foundation.BOOLEAN),
    ]
    return CREATE_CLUSTER_NAME_ACCOUNT
DomainNames = Guid('f2e606e1-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
FAILURE_TYPE = Int32
FAILURE_TYPE_GENERAL = 0
FAILURE_TYPE_EMBEDDED = 1
FAILURE_TYPE_NETWORK_LOSS = 2
def _define_FILESHARE_CHANGE_head():
    class FILESHARE_CHANGE(Structure):
        pass
    return FILESHARE_CHANGE
def _define_FILESHARE_CHANGE():
    FILESHARE_CHANGE = win32more.Networking.Clustering.FILESHARE_CHANGE_head
    FILESHARE_CHANGE._fields_ = [
        ('Change', win32more.Networking.Clustering.FILESHARE_CHANGE_ENUM),
        ('ShareName', Char * 84),
    ]
    return FILESHARE_CHANGE
FILESHARE_CHANGE_ENUM = Int32
FILESHARE_CHANGE_NONE = 0
FILESHARE_CHANGE_ADD = 1
FILESHARE_CHANGE_DEL = 2
FILESHARE_CHANGE_MODIFY = 3
def _define_FILESHARE_CHANGE_LIST_head():
    class FILESHARE_CHANGE_LIST(Structure):
        pass
    return FILESHARE_CHANGE_LIST
def _define_FILESHARE_CHANGE_LIST():
    FILESHARE_CHANGE_LIST = win32more.Networking.Clustering.FILESHARE_CHANGE_LIST_head
    FILESHARE_CHANGE_LIST._fields_ = [
        ('NumEntries', UInt32),
        ('ChangeEntry', win32more.Networking.Clustering.FILESHARE_CHANGE * 1),
    ]
    return FILESHARE_CHANGE_LIST
def _define_GET_OPERATION_CONTEXT_PARAMS_head():
    class GET_OPERATION_CONTEXT_PARAMS(Structure):
        pass
    return GET_OPERATION_CONTEXT_PARAMS
def _define_GET_OPERATION_CONTEXT_PARAMS():
    GET_OPERATION_CONTEXT_PARAMS = win32more.Networking.Clustering.GET_OPERATION_CONTEXT_PARAMS_head
    GET_OPERATION_CONTEXT_PARAMS._fields_ = [
        ('Size', UInt32),
        ('Version', UInt32),
        ('Type', win32more.Networking.Clustering.RESDLL_CONTEXT_OPERATION_TYPE),
        ('Priority', UInt32),
    ]
    return GET_OPERATION_CONTEXT_PARAMS
def _define_GROUP_FAILURE_INFO_head():
    class GROUP_FAILURE_INFO(Structure):
        pass
    return GROUP_FAILURE_INFO
def _define_GROUP_FAILURE_INFO():
    GROUP_FAILURE_INFO = win32more.Networking.Clustering.GROUP_FAILURE_INFO_head
    GROUP_FAILURE_INFO._fields_ = [
        ('dwFailoverAttemptsRemaining', UInt32),
        ('dwFailoverPeriodRemaining', UInt32),
    ]
    return GROUP_FAILURE_INFO
def _define_GROUP_FAILURE_INFO_BUFFER_head():
    class GROUP_FAILURE_INFO_BUFFER(Structure):
        pass
    return GROUP_FAILURE_INFO_BUFFER
def _define_GROUP_FAILURE_INFO_BUFFER():
    GROUP_FAILURE_INFO_BUFFER = win32more.Networking.Clustering.GROUP_FAILURE_INFO_BUFFER_head
    GROUP_FAILURE_INFO_BUFFER._fields_ = [
        ('dwVersion', UInt32),
        ('Info', win32more.Networking.Clustering.GROUP_FAILURE_INFO),
    ]
    return GROUP_FAILURE_INFO_BUFFER
GRP_PLACEMENT_OPTIONS = Int32
GRP_PLACEMENT_OPTIONS_MIN_VALUE = 0
GRP_PLACEMENT_OPTIONS_DEFAULT = 0
GRP_PLACEMENT_OPTIONS_DISABLE_AUTOBALANCING = 1
GRP_PLACEMENT_OPTIONS_ALL = 1
def _define_IGetClusterDataInfo_head():
    class IGetClusterDataInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede51-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterDataInfo
def _define_IGetClusterDataInfo():
    IGetClusterDataInfo = win32more.Networking.Clustering.IGetClusterDataInfo_head
    IGetClusterDataInfo.GetClusterName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,POINTER(Int32))(3, 'GetClusterName', ((1, 'lpszName'),(1, 'pcchName'),)))
    IGetClusterDataInfo.GetClusterHandle = COMMETHOD(WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),)(4, 'GetClusterHandle', ()))
    IGetClusterDataInfo.GetObjectCount = COMMETHOD(WINFUNCTYPE(Int32,)(5, 'GetObjectCount', ()))
    win32more.System.Com.IUnknown
    return IGetClusterDataInfo
def _define_IGetClusterGroupInfo_head():
    class IGetClusterGroupInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede54-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterGroupInfo
def _define_IGetClusterGroupInfo():
    IGetClusterGroupInfo = win32more.Networking.Clustering.IGetClusterGroupInfo_head
    IGetClusterGroupInfo.GetGroupHandle = COMMETHOD(WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),Int32)(3, 'GetGroupHandle', ((1, 'lObjIndex'),)))
    win32more.System.Com.IUnknown
    return IGetClusterGroupInfo
def _define_IGetClusterNetInterfaceInfo_head():
    class IGetClusterNetInterfaceInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede57-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterNetInterfaceInfo
def _define_IGetClusterNetInterfaceInfo():
    IGetClusterNetInterfaceInfo = win32more.Networking.Clustering.IGetClusterNetInterfaceInfo_head
    IGetClusterNetInterfaceInfo.GetNetInterfaceHandle = COMMETHOD(WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),Int32)(3, 'GetNetInterfaceHandle', ((1, 'lObjIndex'),)))
    win32more.System.Com.IUnknown
    return IGetClusterNetInterfaceInfo
def _define_IGetClusterNetworkInfo_head():
    class IGetClusterNetworkInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede56-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterNetworkInfo
def _define_IGetClusterNetworkInfo():
    IGetClusterNetworkInfo = win32more.Networking.Clustering.IGetClusterNetworkInfo_head
    IGetClusterNetworkInfo.GetNetworkHandle = COMMETHOD(WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETWORK_head),Int32)(3, 'GetNetworkHandle', ((1, 'lObjIndex'),)))
    win32more.System.Com.IUnknown
    return IGetClusterNetworkInfo
def _define_IGetClusterNodeInfo_head():
    class IGetClusterNodeInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede53-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterNodeInfo
def _define_IGetClusterNodeInfo():
    IGetClusterNodeInfo = win32more.Networking.Clustering.IGetClusterNodeInfo_head
    IGetClusterNodeInfo.GetNodeHandle = COMMETHOD(WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),Int32)(3, 'GetNodeHandle', ((1, 'lObjIndex'),)))
    win32more.System.Com.IUnknown
    return IGetClusterNodeInfo
def _define_IGetClusterObjectInfo_head():
    class IGetClusterObjectInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede52-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterObjectInfo
def _define_IGetClusterObjectInfo():
    IGetClusterObjectInfo = win32more.Networking.Clustering.IGetClusterObjectInfo_head
    IGetClusterObjectInfo.GetObjectName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.Foundation.BSTR,POINTER(Int32))(3, 'GetObjectName', ((1, 'lObjIndex'),(1, 'lpszName'),(1, 'pcchName'),)))
    IGetClusterObjectInfo.GetObjectType = COMMETHOD(WINFUNCTYPE(win32more.Networking.Clustering.CLUADMEX_OBJECT_TYPE,Int32)(4, 'GetObjectType', ((1, 'lObjIndex'),)))
    win32more.System.Com.IUnknown
    return IGetClusterObjectInfo
def _define_IGetClusterResourceInfo_head():
    class IGetClusterResourceInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede55-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterResourceInfo
def _define_IGetClusterResourceInfo():
    IGetClusterResourceInfo = win32more.Networking.Clustering.IGetClusterResourceInfo_head
    IGetClusterResourceInfo.GetResourceHandle = COMMETHOD(WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),Int32)(3, 'GetResourceHandle', ((1, 'lObjIndex'),)))
    IGetClusterResourceInfo.GetResourceTypeName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,win32more.Foundation.BSTR,POINTER(Int32))(4, 'GetResourceTypeName', ((1, 'lObjIndex'),(1, 'lpszResTypeName'),(1, 'pcchResTypeName'),)))
    IGetClusterResourceInfo.GetResourceNetworkName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.BOOL,Int32,win32more.Foundation.BSTR,POINTER(UInt32))(5, 'GetResourceNetworkName', ((1, 'lObjIndex'),(1, 'lpszNetName'),(1, 'pcchNetName'),)))
    win32more.System.Com.IUnknown
    return IGetClusterResourceInfo
def _define_IGetClusterUIInfo_head():
    class IGetClusterUIInfo(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede50-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IGetClusterUIInfo
def _define_IGetClusterUIInfo():
    IGetClusterUIInfo = win32more.Networking.Clustering.IGetClusterUIInfo_head
    IGetClusterUIInfo.GetClusterName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,POINTER(Int32))(3, 'GetClusterName', ((1, 'lpszName'),(1, 'pcchName'),)))
    IGetClusterUIInfo.GetLocale = COMMETHOD(WINFUNCTYPE(UInt32,)(4, 'GetLocale', ()))
    IGetClusterUIInfo.GetFont = COMMETHOD(WINFUNCTYPE(win32more.Graphics.Gdi.HFONT,)(5, 'GetFont', ()))
    IGetClusterUIInfo.GetIcon = COMMETHOD(WINFUNCTYPE(win32more.UI.WindowsAndMessaging.HICON,)(6, 'GetIcon', ()))
    win32more.System.Com.IUnknown
    return IGetClusterUIInfo
def _define_ISClusApplication_head():
    class ISClusApplication(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606e6-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusApplication
def _define_ISClusApplication():
    ISClusApplication = win32more.Networking.Clustering.ISClusApplication_head
    ISClusApplication.get_DomainNames = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISDomainNames_head))(7, 'get_DomainNames', ((1, 'ppDomains'),)))
    ISClusApplication.get_ClusterNames = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,POINTER(win32more.Networking.Clustering.ISClusterNames_head))(8, 'get_ClusterNames', ((1, 'bstrDomainName'),(1, 'ppClusters'),)))
    ISClusApplication.OpenCluster = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,POINTER(win32more.Networking.Clustering.ISCluster_head))(9, 'OpenCluster', ((1, 'bstrClusterName'),(1, 'pCluster'),)))
    win32more.System.Com.IDispatch
    return ISClusApplication
def _define_ISClusCryptoKeys_head():
    class ISClusCryptoKeys(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6072c-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusCryptoKeys
def _define_ISClusCryptoKeys():
    ISClusCryptoKeys = win32more.Networking.Clustering.ISClusCryptoKeys_head
    ISClusCryptoKeys.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusCryptoKeys.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusCryptoKeys.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusCryptoKeys.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Foundation.BSTR))(10, 'get_Item', ((1, 'varIndex'),(1, 'pbstrCyrptoKey'),)))
    ISClusCryptoKeys.AddItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(11, 'AddItem', ((1, 'bstrCryptoKey'),)))
    ISClusCryptoKeys.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'RemoveItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusCryptoKeys
def _define_ISClusDisk_head():
    class ISClusDisk(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60724-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusDisk
def _define_ISClusDisk():
    ISClusDisk = win32more.Networking.Clustering.ISClusDisk_head
    ISClusDisk.get_Signature = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Signature', ((1, 'plSignature'),)))
    ISClusDisk.get_ScsiAddress = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusScsiAddress_head))(8, 'get_ScsiAddress', ((1, 'ppScsiAddress'),)))
    ISClusDisk.get_DiskNumber = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(9, 'get_DiskNumber', ((1, 'plDiskNumber'),)))
    ISClusDisk.get_Partitions = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusPartitions_head))(10, 'get_Partitions', ((1, 'ppPartitions'),)))
    win32more.System.Com.IDispatch
    return ISClusDisk
def _define_ISClusDisks_head():
    class ISClusDisks(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60726-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusDisks
def _define_ISClusDisks():
    ISClusDisks = win32more.Networking.Clustering.ISClusDisks_head
    ISClusDisks.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusDisks.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusDisks.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusDisk_head))(9, 'get_Item', ((1, 'varIndex'),(1, 'ppDisk'),)))
    win32more.System.Com.IDispatch
    return ISClusDisks
def _define_ISClusNetInterface_head():
    class ISClusNetInterface(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606ee-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNetInterface
def _define_ISClusNetInterface():
    ISClusNetInterface = win32more.Networking.Clustering.ISClusNetInterface_head
    ISClusNetInterface.get_CommonProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(7, 'get_CommonProperties', ((1, 'ppProperties'),)))
    ISClusNetInterface.get_PrivateProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(8, 'get_PrivateProperties', ((1, 'ppProperties'),)))
    ISClusNetInterface.get_CommonROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(9, 'get_CommonROProperties', ((1, 'ppProperties'),)))
    ISClusNetInterface.get_PrivateROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(10, 'get_PrivateROProperties', ((1, 'ppProperties'),)))
    ISClusNetInterface.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(11, 'get_Name', ((1, 'pbstrName'),)))
    ISClusNetInterface.get_Handle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr))(12, 'get_Handle', ((1, 'phandle'),)))
    ISClusNetInterface.get_State = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_NETINTERFACE_STATE))(13, 'get_State', ((1, 'dwState'),)))
    ISClusNetInterface.get_Cluster = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISCluster_head))(14, 'get_Cluster', ((1, 'ppCluster'),)))
    win32more.System.Com.IDispatch
    return ISClusNetInterface
def _define_ISClusNetInterfaces_head():
    class ISClusNetInterfaces(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606f0-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNetInterfaces
def _define_ISClusNetInterfaces():
    ISClusNetInterfaces = win32more.Networking.Clustering.ISClusNetInterfaces_head
    ISClusNetInterfaces.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusNetInterfaces.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusNetInterfaces.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusNetInterfaces.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNetInterface_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusNetInterface'),)))
    win32more.System.Com.IDispatch
    return ISClusNetInterfaces
def _define_ISClusNetwork_head():
    class ISClusNetwork(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606f2-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNetwork
def _define_ISClusNetwork():
    ISClusNetwork = win32more.Networking.Clustering.ISClusNetwork_head
    ISClusNetwork.get_CommonProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(7, 'get_CommonProperties', ((1, 'ppProperties'),)))
    ISClusNetwork.get_PrivateProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(8, 'get_PrivateProperties', ((1, 'ppProperties'),)))
    ISClusNetwork.get_CommonROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(9, 'get_CommonROProperties', ((1, 'ppProperties'),)))
    ISClusNetwork.get_PrivateROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(10, 'get_PrivateROProperties', ((1, 'ppProperties'),)))
    ISClusNetwork.get_Handle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr))(11, 'get_Handle', ((1, 'phandle'),)))
    ISClusNetwork.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(12, 'get_Name', ((1, 'pbstrName'),)))
    ISClusNetwork.put_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(13, 'put_Name', ((1, 'bstrNetworkName'),)))
    ISClusNetwork.get_NetworkID = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(14, 'get_NetworkID', ((1, 'pbstrNetworkID'),)))
    ISClusNetwork.get_State = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_NETWORK_STATE))(15, 'get_State', ((1, 'dwState'),)))
    ISClusNetwork.get_NetInterfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusNetworkNetInterfaces_head))(16, 'get_NetInterfaces', ((1, 'ppClusNetInterfaces'),)))
    ISClusNetwork.get_Cluster = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISCluster_head))(17, 'get_Cluster', ((1, 'ppCluster'),)))
    win32more.System.Com.IDispatch
    return ISClusNetwork
def _define_ISClusNetworkNetInterfaces_head():
    class ISClusNetworkNetInterfaces(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606f6-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNetworkNetInterfaces
def _define_ISClusNetworkNetInterfaces():
    ISClusNetworkNetInterfaces = win32more.Networking.Clustering.ISClusNetworkNetInterfaces_head
    ISClusNetworkNetInterfaces.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusNetworkNetInterfaces.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusNetworkNetInterfaces.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusNetworkNetInterfaces.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNetInterface_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusNetInterface'),)))
    win32more.System.Com.IDispatch
    return ISClusNetworkNetInterfaces
def _define_ISClusNetworks_head():
    class ISClusNetworks(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606f4-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNetworks
def _define_ISClusNetworks():
    ISClusNetworks = win32more.Networking.Clustering.ISClusNetworks_head
    ISClusNetworks.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusNetworks.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusNetworks.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusNetworks.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNetwork_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusNetwork'),)))
    win32more.System.Com.IDispatch
    return ISClusNetworks
def _define_ISClusNode_head():
    class ISClusNode(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606f8-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNode
def _define_ISClusNode():
    ISClusNode = win32more.Networking.Clustering.ISClusNode_head
    ISClusNode.get_CommonProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(7, 'get_CommonProperties', ((1, 'ppProperties'),)))
    ISClusNode.get_PrivateProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(8, 'get_PrivateProperties', ((1, 'ppProperties'),)))
    ISClusNode.get_CommonROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(9, 'get_CommonROProperties', ((1, 'ppProperties'),)))
    ISClusNode.get_PrivateROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(10, 'get_PrivateROProperties', ((1, 'ppProperties'),)))
    ISClusNode.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(11, 'get_Name', ((1, 'pbstrName'),)))
    ISClusNode.get_Handle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr))(12, 'get_Handle', ((1, 'phandle'),)))
    ISClusNode.get_NodeID = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(13, 'get_NodeID', ((1, 'pbstrNodeID'),)))
    ISClusNode.get_State = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_NODE_STATE))(14, 'get_State', ((1, 'dwState'),)))
    ISClusNode.Pause = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(15, 'Pause', ()))
    ISClusNode.Resume = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(16, 'Resume', ()))
    ISClusNode.Evict = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(17, 'Evict', ()))
    ISClusNode.get_ResourceGroups = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResGroups_head))(18, 'get_ResourceGroups', ((1, 'ppResourceGroups'),)))
    ISClusNode.get_Cluster = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISCluster_head))(19, 'get_Cluster', ((1, 'ppCluster'),)))
    ISClusNode.get_NetInterfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusNodeNetInterfaces_head))(20, 'get_NetInterfaces', ((1, 'ppClusNetInterfaces'),)))
    win32more.System.Com.IDispatch
    return ISClusNode
def _define_ISClusNodeNetInterfaces_head():
    class ISClusNodeNetInterfaces(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606fc-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNodeNetInterfaces
def _define_ISClusNodeNetInterfaces():
    ISClusNodeNetInterfaces = win32more.Networking.Clustering.ISClusNodeNetInterfaces_head
    ISClusNodeNetInterfaces.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusNodeNetInterfaces.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusNodeNetInterfaces.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusNodeNetInterfaces.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNetInterface_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusNetInterface'),)))
    win32more.System.Com.IDispatch
    return ISClusNodeNetInterfaces
def _define_ISClusNodes_head():
    class ISClusNodes(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606fa-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusNodes
def _define_ISClusNodes():
    ISClusNodes = win32more.Networking.Clustering.ISClusNodes_head
    ISClusNodes.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusNodes.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusNodes.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusNodes.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNode_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppNode'),)))
    win32more.System.Com.IDispatch
    return ISClusNodes
def _define_ISClusPartition_head():
    class ISClusPartition(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60720-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusPartition
def _define_ISClusPartition():
    ISClusPartition = win32more.Networking.Clustering.ISClusPartition_head
    ISClusPartition.get_Flags = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Flags', ((1, 'plFlags'),)))
    ISClusPartition.get_DeviceName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(8, 'get_DeviceName', ((1, 'pbstrDeviceName'),)))
    ISClusPartition.get_VolumeLabel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(9, 'get_VolumeLabel', ((1, 'pbstrVolumeLabel'),)))
    ISClusPartition.get_SerialNumber = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(10, 'get_SerialNumber', ((1, 'plSerialNumber'),)))
    ISClusPartition.get_MaximumComponentLength = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(11, 'get_MaximumComponentLength', ((1, 'plMaximumComponentLength'),)))
    ISClusPartition.get_FileSystemFlags = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(12, 'get_FileSystemFlags', ((1, 'plFileSystemFlags'),)))
    ISClusPartition.get_FileSystem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(13, 'get_FileSystem', ((1, 'pbstrFileSystem'),)))
    win32more.System.Com.IDispatch
    return ISClusPartition
def _define_ISClusPartitionEx_head():
    class ISClusPartitionEx(win32more.Networking.Clustering.ISClusPartition_head):
        Guid = Guid('8802d4fe-b32e-4ad1-9d-bd-64-f1-8e-11-66-ce')
    return ISClusPartitionEx
def _define_ISClusPartitionEx():
    ISClusPartitionEx = win32more.Networking.Clustering.ISClusPartitionEx_head
    ISClusPartitionEx.get_TotalSize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(14, 'get_TotalSize', ((1, 'plTotalSize'),)))
    ISClusPartitionEx.get_FreeSpace = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(15, 'get_FreeSpace', ((1, 'plFreeSpace'),)))
    ISClusPartitionEx.get_DeviceNumber = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(16, 'get_DeviceNumber', ((1, 'plDeviceNumber'),)))
    ISClusPartitionEx.get_PartitionNumber = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(17, 'get_PartitionNumber', ((1, 'plPartitionNumber'),)))
    ISClusPartitionEx.get_VolumeGuid = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(18, 'get_VolumeGuid', ((1, 'pbstrVolumeGuid'),)))
    win32more.Networking.Clustering.ISClusPartition
    return ISClusPartitionEx
def _define_ISClusPartitions_head():
    class ISClusPartitions(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60722-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusPartitions
def _define_ISClusPartitions():
    ISClusPartitions = win32more.Networking.Clustering.ISClusPartitions_head
    ISClusPartitions.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusPartitions.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusPartitions.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusPartition_head))(9, 'get_Item', ((1, 'varIndex'),(1, 'ppPartition'),)))
    win32more.System.Com.IDispatch
    return ISClusPartitions
def _define_ISClusProperties_head():
    class ISClusProperties(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60700-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusProperties
def _define_ISClusProperties():
    ISClusProperties = win32more.Networking.Clustering.ISClusProperties_head
    ISClusProperties.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusProperties.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusProperties.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusProperties.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusProperty_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusProperty'),)))
    ISClusProperties.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusProperty_head))(11, 'CreateItem', ((1, 'bstrName'),(1, 'varValue'),(1, 'pProperty'),)))
    ISClusProperties.UseDefaultValue = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'UseDefaultValue', ((1, 'varIndex'),)))
    ISClusProperties.SaveChanges = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(13, 'SaveChanges', ((1, 'pvarStatusCode'),)))
    ISClusProperties.get_ReadOnly = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(14, 'get_ReadOnly', ((1, 'pvarReadOnly'),)))
    ISClusProperties.get_Private = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(15, 'get_Private', ((1, 'pvarPrivate'),)))
    ISClusProperties.get_Common = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(16, 'get_Common', ((1, 'pvarCommon'),)))
    ISClusProperties.get_Modified = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(17, 'get_Modified', ((1, 'pvarModified'),)))
    win32more.System.Com.IDispatch
    return ISClusProperties
def _define_ISClusProperty_head():
    class ISClusProperty(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606fe-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusProperty
def _define_ISClusProperty():
    ISClusProperty = win32more.Networking.Clustering.ISClusProperty_head
    ISClusProperty.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(7, 'get_Name', ((1, 'pbstrName'),)))
    ISClusProperty.get_Length = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(8, 'get_Length', ((1, 'pLength'),)))
    ISClusProperty.get_ValueCount = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(9, 'get_ValueCount', ((1, 'pCount'),)))
    ISClusProperty.get_Values = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusPropertyValues_head))(10, 'get_Values', ((1, 'ppClusterPropertyValues'),)))
    ISClusProperty.get_Value = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(11, 'get_Value', ((1, 'pvarValue'),)))
    ISClusProperty.put_Value = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'put_Value', ((1, 'varValue'),)))
    ISClusProperty.get_Type = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_PROPERTY_TYPE))(13, 'get_Type', ((1, 'pType'),)))
    ISClusProperty.put_Type = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.CLUSTER_PROPERTY_TYPE)(14, 'put_Type', ((1, 'Type'),)))
    ISClusProperty.get_Format = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_PROPERTY_FORMAT))(15, 'get_Format', ((1, 'pFormat'),)))
    ISClusProperty.put_Format = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.CLUSTER_PROPERTY_FORMAT)(16, 'put_Format', ((1, 'Format'),)))
    ISClusProperty.get_ReadOnly = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(17, 'get_ReadOnly', ((1, 'pvarReadOnly'),)))
    ISClusProperty.get_Private = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(18, 'get_Private', ((1, 'pvarPrivate'),)))
    ISClusProperty.get_Common = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(19, 'get_Common', ((1, 'pvarCommon'),)))
    ISClusProperty.get_Modified = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(20, 'get_Modified', ((1, 'pvarModified'),)))
    ISClusProperty.UseDefaultValue = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(21, 'UseDefaultValue', ()))
    win32more.System.Com.IDispatch
    return ISClusProperty
def _define_ISClusPropertyValue_head():
    class ISClusPropertyValue(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6071a-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusPropertyValue
def _define_ISClusPropertyValue():
    ISClusPropertyValue = win32more.Networking.Clustering.ISClusPropertyValue_head
    ISClusPropertyValue.get_Value = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(7, 'get_Value', ((1, 'pvarValue'),)))
    ISClusPropertyValue.put_Value = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(8, 'put_Value', ((1, 'varValue'),)))
    ISClusPropertyValue.get_Type = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_PROPERTY_TYPE))(9, 'get_Type', ((1, 'pType'),)))
    ISClusPropertyValue.put_Type = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.CLUSTER_PROPERTY_TYPE)(10, 'put_Type', ((1, 'Type'),)))
    ISClusPropertyValue.get_Format = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_PROPERTY_FORMAT))(11, 'get_Format', ((1, 'pFormat'),)))
    ISClusPropertyValue.put_Format = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.CLUSTER_PROPERTY_FORMAT)(12, 'put_Format', ((1, 'Format'),)))
    ISClusPropertyValue.get_Length = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(13, 'get_Length', ((1, 'pLength'),)))
    ISClusPropertyValue.get_DataCount = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(14, 'get_DataCount', ((1, 'pCount'),)))
    ISClusPropertyValue.get_Data = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusPropertyValueData_head))(15, 'get_Data', ((1, 'ppClusterPropertyValueData'),)))
    win32more.System.Com.IDispatch
    return ISClusPropertyValue
def _define_ISClusPropertyValueData_head():
    class ISClusPropertyValueData(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6071e-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusPropertyValueData
def _define_ISClusPropertyValueData():
    ISClusPropertyValueData = win32more.Networking.Clustering.ISClusPropertyValueData_head
    ISClusPropertyValueData.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusPropertyValueData.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusPropertyValueData.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.System.Com.VARIANT_head))(9, 'get_Item', ((1, 'varIndex'),(1, 'pvarValue'),)))
    ISClusPropertyValueData.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.System.Com.VARIANT_head))(10, 'CreateItem', ((1, 'varValue'),(1, 'pvarData'),)))
    ISClusPropertyValueData.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(11, 'RemoveItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusPropertyValueData
def _define_ISClusPropertyValues_head():
    class ISClusPropertyValues(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6071c-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusPropertyValues
def _define_ISClusPropertyValues():
    ISClusPropertyValues = win32more.Networking.Clustering.ISClusPropertyValues_head
    ISClusPropertyValues.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusPropertyValues.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusPropertyValues.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusPropertyValue_head))(9, 'get_Item', ((1, 'varIndex'),(1, 'ppPropertyValue'),)))
    ISClusPropertyValues.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusPropertyValue_head))(10, 'CreateItem', ((1, 'bstrName'),(1, 'varValue'),(1, 'ppPropertyValue'),)))
    ISClusPropertyValues.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(11, 'RemoveItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusPropertyValues
def _define_ISClusRefObject_head():
    class ISClusRefObject(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60702-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusRefObject
def _define_ISClusRefObject():
    ISClusRefObject = win32more.Networking.Clustering.ISClusRefObject_head
    ISClusRefObject.get_Handle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr))(7, 'get_Handle', ((1, 'phandle'),)))
    win32more.System.Com.IDispatch
    return ISClusRefObject
def _define_ISClusRegistryKeys_head():
    class ISClusRegistryKeys(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6072a-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusRegistryKeys
def _define_ISClusRegistryKeys():
    ISClusRegistryKeys = win32more.Networking.Clustering.ISClusRegistryKeys_head
    ISClusRegistryKeys.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusRegistryKeys.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusRegistryKeys.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusRegistryKeys.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Foundation.BSTR))(10, 'get_Item', ((1, 'varIndex'),(1, 'pbstrRegistryKey'),)))
    ISClusRegistryKeys.AddItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(11, 'AddItem', ((1, 'bstrRegistryKey'),)))
    ISClusRegistryKeys.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'RemoveItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusRegistryKeys
def _define_ISClusResDependencies_head():
    class ISClusResDependencies(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60704-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResDependencies
def _define_ISClusResDependencies():
    ISClusResDependencies = win32more.Networking.Clustering.ISClusResDependencies_head
    ISClusResDependencies.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResDependencies.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResDependencies.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResDependencies.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusResource_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusResource'),)))
    ISClusResDependencies.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.Foundation.BSTR,win32more.Networking.Clustering.CLUSTER_RESOURCE_CREATE_FLAGS,POINTER(win32more.Networking.Clustering.ISClusResource_head))(11, 'CreateItem', ((1, 'bstrResourceName'),(1, 'bstrResourceType'),(1, 'dwFlags'),(1, 'ppClusterResource'),)))
    ISClusResDependencies.DeleteItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'DeleteItem', ((1, 'varIndex'),)))
    ISClusResDependencies.AddItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusResource_head)(13, 'AddItem', ((1, 'pResource'),)))
    ISClusResDependencies.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(14, 'RemoveItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusResDependencies
def _define_ISClusResDependents_head():
    class ISClusResDependents(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6072e-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResDependents
def _define_ISClusResDependents():
    ISClusResDependents = win32more.Networking.Clustering.ISClusResDependents_head
    ISClusResDependents.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResDependents.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResDependents.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResDependents.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusResource_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusResource'),)))
    ISClusResDependents.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.Foundation.BSTR,win32more.Networking.Clustering.CLUSTER_RESOURCE_CREATE_FLAGS,POINTER(win32more.Networking.Clustering.ISClusResource_head))(11, 'CreateItem', ((1, 'bstrResourceName'),(1, 'bstrResourceType'),(1, 'dwFlags'),(1, 'ppClusterResource'),)))
    ISClusResDependents.DeleteItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'DeleteItem', ((1, 'varIndex'),)))
    ISClusResDependents.AddItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusResource_head)(13, 'AddItem', ((1, 'pResource'),)))
    ISClusResDependents.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(14, 'RemoveItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusResDependents
def _define_ISClusResGroup_head():
    class ISClusResGroup(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60706-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResGroup
def _define_ISClusResGroup():
    ISClusResGroup = win32more.Networking.Clustering.ISClusResGroup_head
    ISClusResGroup.get_CommonProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(7, 'get_CommonProperties', ((1, 'ppProperties'),)))
    ISClusResGroup.get_PrivateProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(8, 'get_PrivateProperties', ((1, 'ppProperties'),)))
    ISClusResGroup.get_CommonROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(9, 'get_CommonROProperties', ((1, 'ppProperties'),)))
    ISClusResGroup.get_PrivateROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(10, 'get_PrivateROProperties', ((1, 'ppProperties'),)))
    ISClusResGroup.get_Handle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr))(11, 'get_Handle', ((1, 'phandle'),)))
    ISClusResGroup.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(12, 'get_Name', ((1, 'pbstrName'),)))
    ISClusResGroup.put_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(13, 'put_Name', ((1, 'bstrGroupName'),)))
    ISClusResGroup.get_State = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_GROUP_STATE))(14, 'get_State', ((1, 'dwState'),)))
    ISClusResGroup.get_OwnerNode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusNode_head))(15, 'get_OwnerNode', ((1, 'ppOwnerNode'),)))
    ISClusResGroup.get_Resources = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResGroupResources_head))(16, 'get_Resources', ((1, 'ppClusterGroupResources'),)))
    ISClusResGroup.get_PreferredOwnerNodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResGroupPreferredOwnerNodes_head))(17, 'get_PreferredOwnerNodes', ((1, 'ppOwnerNodes'),)))
    ISClusResGroup.Delete = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(18, 'Delete', ()))
    ISClusResGroup.Online = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,win32more.System.Com.VARIANT,POINTER(win32more.System.Com.VARIANT_head))(19, 'Online', ((1, 'varTimeout'),(1, 'varNode'),(1, 'pvarPending'),)))
    ISClusResGroup.Move = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,win32more.System.Com.VARIANT,POINTER(win32more.System.Com.VARIANT_head))(20, 'Move', ((1, 'varTimeout'),(1, 'varNode'),(1, 'pvarPending'),)))
    ISClusResGroup.Offline = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.System.Com.VARIANT_head))(21, 'Offline', ((1, 'varTimeout'),(1, 'pvarPending'),)))
    ISClusResGroup.get_Cluster = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISCluster_head))(22, 'get_Cluster', ((1, 'ppCluster'),)))
    win32more.System.Com.IDispatch
    return ISClusResGroup
def _define_ISClusResGroupPreferredOwnerNodes_head():
    class ISClusResGroupPreferredOwnerNodes(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606e8-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResGroupPreferredOwnerNodes
def _define_ISClusResGroupPreferredOwnerNodes():
    ISClusResGroupPreferredOwnerNodes = win32more.Networking.Clustering.ISClusResGroupPreferredOwnerNodes_head
    ISClusResGroupPreferredOwnerNodes.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResGroupPreferredOwnerNodes.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResGroupPreferredOwnerNodes.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResGroupPreferredOwnerNodes.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNode_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppNode'),)))
    ISClusResGroupPreferredOwnerNodes.InsertItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusNode_head,Int32)(11, 'InsertItem', ((1, 'pNode'),(1, 'nPosition'),)))
    ISClusResGroupPreferredOwnerNodes.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'RemoveItem', ((1, 'varIndex'),)))
    ISClusResGroupPreferredOwnerNodes.get_Modified = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(13, 'get_Modified', ((1, 'pvarModified'),)))
    ISClusResGroupPreferredOwnerNodes.SaveChanges = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(14, 'SaveChanges', ()))
    ISClusResGroupPreferredOwnerNodes.AddItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusNode_head)(15, 'AddItem', ((1, 'pNode'),)))
    win32more.System.Com.IDispatch
    return ISClusResGroupPreferredOwnerNodes
def _define_ISClusResGroupResources_head():
    class ISClusResGroupResources(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606ea-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResGroupResources
def _define_ISClusResGroupResources():
    ISClusResGroupResources = win32more.Networking.Clustering.ISClusResGroupResources_head
    ISClusResGroupResources.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResGroupResources.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResGroupResources.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResGroupResources.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusResource_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusResource'),)))
    ISClusResGroupResources.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.Foundation.BSTR,win32more.Networking.Clustering.CLUSTER_RESOURCE_CREATE_FLAGS,POINTER(win32more.Networking.Clustering.ISClusResource_head))(11, 'CreateItem', ((1, 'bstrResourceName'),(1, 'bstrResourceType'),(1, 'dwFlags'),(1, 'ppClusterResource'),)))
    ISClusResGroupResources.DeleteItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'DeleteItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusResGroupResources
def _define_ISClusResGroups_head():
    class ISClusResGroups(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60708-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResGroups
def _define_ISClusResGroups():
    ISClusResGroups = win32more.Networking.Clustering.ISClusResGroups_head
    ISClusResGroups.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResGroups.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResGroups.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResGroups.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusResGroup_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusResGroup'),)))
    ISClusResGroups.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,POINTER(win32more.Networking.Clustering.ISClusResGroup_head))(11, 'CreateItem', ((1, 'bstrResourceGroupName'),(1, 'ppResourceGroup'),)))
    ISClusResGroups.DeleteItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'DeleteItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusResGroups
def _define_ISClusResource_head():
    class ISClusResource(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6070a-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResource
def _define_ISClusResource():
    ISClusResource = win32more.Networking.Clustering.ISClusResource_head
    ISClusResource.get_CommonProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(7, 'get_CommonProperties', ((1, 'ppProperties'),)))
    ISClusResource.get_PrivateProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(8, 'get_PrivateProperties', ((1, 'ppProperties'),)))
    ISClusResource.get_CommonROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(9, 'get_CommonROProperties', ((1, 'ppProperties'),)))
    ISClusResource.get_PrivateROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(10, 'get_PrivateROProperties', ((1, 'ppProperties'),)))
    ISClusResource.get_Handle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr))(11, 'get_Handle', ((1, 'phandle'),)))
    ISClusResource.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(12, 'get_Name', ((1, 'pbstrName'),)))
    ISClusResource.put_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(13, 'put_Name', ((1, 'bstrResourceName'),)))
    ISClusResource.get_State = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE))(14, 'get_State', ((1, 'dwState'),)))
    ISClusResource.get_CoreFlag = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUS_FLAGS))(15, 'get_CoreFlag', ((1, 'dwCoreFlag'),)))
    ISClusResource.BecomeQuorumResource = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,Int32)(16, 'BecomeQuorumResource', ((1, 'bstrDevicePath'),(1, 'lMaxLogSize'),)))
    ISClusResource.Delete = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(17, 'Delete', ()))
    ISClusResource.Fail = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(18, 'Fail', ()))
    ISClusResource.Online = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,POINTER(win32more.System.Com.VARIANT_head))(19, 'Online', ((1, 'nTimeout'),(1, 'pvarPending'),)))
    ISClusResource.Offline = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32,POINTER(win32more.System.Com.VARIANT_head))(20, 'Offline', ((1, 'nTimeout'),(1, 'pvarPending'),)))
    ISClusResource.ChangeResourceGroup = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusResGroup_head)(21, 'ChangeResourceGroup', ((1, 'pResourceGroup'),)))
    ISClusResource.AddResourceNode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusNode_head)(22, 'AddResourceNode', ((1, 'pNode'),)))
    ISClusResource.RemoveResourceNode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusNode_head)(23, 'RemoveResourceNode', ((1, 'pNode'),)))
    ISClusResource.CanResourceBeDependent = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusResource_head,POINTER(win32more.System.Com.VARIANT_head))(24, 'CanResourceBeDependent', ((1, 'pResource'),(1, 'pvarDependent'),)))
    ISClusResource.get_PossibleOwnerNodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResPossibleOwnerNodes_head))(25, 'get_PossibleOwnerNodes', ((1, 'ppOwnerNodes'),)))
    ISClusResource.get_Dependencies = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResDependencies_head))(26, 'get_Dependencies', ((1, 'ppResDependencies'),)))
    ISClusResource.get_Dependents = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResDependents_head))(27, 'get_Dependents', ((1, 'ppResDependents'),)))
    ISClusResource.get_Group = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResGroup_head))(28, 'get_Group', ((1, 'ppResGroup'),)))
    ISClusResource.get_OwnerNode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusNode_head))(29, 'get_OwnerNode', ((1, 'ppOwnerNode'),)))
    ISClusResource.get_Cluster = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISCluster_head))(30, 'get_Cluster', ((1, 'ppCluster'),)))
    ISClusResource.get_ClassInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.CLUSTER_RESOURCE_CLASS))(31, 'get_ClassInfo', ((1, 'prcClassInfo'),)))
    ISClusResource.get_Disk = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusDisk_head))(32, 'get_Disk', ((1, 'ppDisk'),)))
    ISClusResource.get_RegistryKeys = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusRegistryKeys_head))(33, 'get_RegistryKeys', ((1, 'ppRegistryKeys'),)))
    ISClusResource.get_CryptoKeys = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusCryptoKeys_head))(34, 'get_CryptoKeys', ((1, 'ppCryptoKeys'),)))
    ISClusResource.get_TypeName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(35, 'get_TypeName', ((1, 'pbstrTypeName'),)))
    ISClusResource.get_Type = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResType_head))(36, 'get_Type', ((1, 'ppResourceType'),)))
    ISClusResource.get_MaintenanceMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BOOL))(37, 'get_MaintenanceMode', ((1, 'pbMaintenanceMode'),)))
    ISClusResource.put_MaintenanceMode = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BOOL)(38, 'put_MaintenanceMode', ((1, 'bMaintenanceMode'),)))
    win32more.System.Com.IDispatch
    return ISClusResource
def _define_ISClusResources_head():
    class ISClusResources(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6070c-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResources
def _define_ISClusResources():
    ISClusResources = win32more.Networking.Clustering.ISClusResources_head
    ISClusResources.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResources.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResources.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResources.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusResource_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusResource'),)))
    ISClusResources.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.Foundation.BSTR,win32more.Foundation.BSTR,win32more.Networking.Clustering.CLUSTER_RESOURCE_CREATE_FLAGS,POINTER(win32more.Networking.Clustering.ISClusResource_head))(11, 'CreateItem', ((1, 'bstrResourceName'),(1, 'bstrResourceType'),(1, 'bstrGroupName'),(1, 'dwFlags'),(1, 'ppClusterResource'),)))
    ISClusResources.DeleteItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'DeleteItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusResources
def _define_ISClusResPossibleOwnerNodes_head():
    class ISClusResPossibleOwnerNodes(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e6070e-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResPossibleOwnerNodes
def _define_ISClusResPossibleOwnerNodes():
    ISClusResPossibleOwnerNodes = win32more.Networking.Clustering.ISClusResPossibleOwnerNodes_head
    ISClusResPossibleOwnerNodes.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResPossibleOwnerNodes.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResPossibleOwnerNodes.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResPossibleOwnerNodes.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNode_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppNode'),)))
    ISClusResPossibleOwnerNodes.AddItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusNode_head)(11, 'AddItem', ((1, 'pNode'),)))
    ISClusResPossibleOwnerNodes.RemoveItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'RemoveItem', ((1, 'varIndex'),)))
    ISClusResPossibleOwnerNodes.get_Modified = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(13, 'get_Modified', ((1, 'pvarModified'),)))
    win32more.System.Com.IDispatch
    return ISClusResPossibleOwnerNodes
def _define_ISClusResType_head():
    class ISClusResType(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60710-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResType
def _define_ISClusResType():
    ISClusResType = win32more.Networking.Clustering.ISClusResType_head
    ISClusResType.get_CommonProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(7, 'get_CommonProperties', ((1, 'ppProperties'),)))
    ISClusResType.get_PrivateProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(8, 'get_PrivateProperties', ((1, 'ppProperties'),)))
    ISClusResType.get_CommonROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(9, 'get_CommonROProperties', ((1, 'ppProperties'),)))
    ISClusResType.get_PrivateROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(10, 'get_PrivateROProperties', ((1, 'ppProperties'),)))
    ISClusResType.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(11, 'get_Name', ((1, 'pbstrName'),)))
    ISClusResType.Delete = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(12, 'Delete', ()))
    ISClusResType.get_Cluster = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISCluster_head))(13, 'get_Cluster', ((1, 'ppCluster'),)))
    ISClusResType.get_Resources = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResTypeResources_head))(14, 'get_Resources', ((1, 'ppClusterResTypeResources'),)))
    ISClusResType.get_PossibleOwnerNodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResTypePossibleOwnerNodes_head))(15, 'get_PossibleOwnerNodes', ((1, 'ppOwnerNodes'),)))
    ISClusResType.get_AvailableDisks = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusDisks_head))(16, 'get_AvailableDisks', ((1, 'ppAvailableDisks'),)))
    win32more.System.Com.IDispatch
    return ISClusResType
def _define_ISClusResTypePossibleOwnerNodes_head():
    class ISClusResTypePossibleOwnerNodes(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60718-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResTypePossibleOwnerNodes
def _define_ISClusResTypePossibleOwnerNodes():
    ISClusResTypePossibleOwnerNodes = win32more.Networking.Clustering.ISClusResTypePossibleOwnerNodes_head
    ISClusResTypePossibleOwnerNodes.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResTypePossibleOwnerNodes.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResTypePossibleOwnerNodes.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResTypePossibleOwnerNodes.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusNode_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppNode'),)))
    win32more.System.Com.IDispatch
    return ISClusResTypePossibleOwnerNodes
def _define_ISClusResTypeResources_head():
    class ISClusResTypeResources(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60714-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResTypeResources
def _define_ISClusResTypeResources():
    ISClusResTypeResources = win32more.Networking.Clustering.ISClusResTypeResources_head
    ISClusResTypeResources.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResTypeResources.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResTypeResources.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResTypeResources.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusResource_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusResource'),)))
    ISClusResTypeResources.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.Foundation.BSTR,win32more.Networking.Clustering.CLUSTER_RESOURCE_CREATE_FLAGS,POINTER(win32more.Networking.Clustering.ISClusResource_head))(11, 'CreateItem', ((1, 'bstrResourceName'),(1, 'bstrGroupName'),(1, 'dwFlags'),(1, 'ppClusterResource'),)))
    ISClusResTypeResources.DeleteItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'DeleteItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusResTypeResources
def _define_ISClusResTypes_head():
    class ISClusResTypes(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60712-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusResTypes
def _define_ISClusResTypes():
    ISClusResTypes = win32more.Networking.Clustering.ISClusResTypes_head
    ISClusResTypes.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusResTypes.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusResTypes.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusResTypes.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Networking.Clustering.ISClusResType_head))(10, 'get_Item', ((1, 'varIndex'),(1, 'ppClusResType'),)))
    ISClusResTypes.CreateItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.Foundation.BSTR,win32more.Foundation.BSTR,Int32,Int32,POINTER(win32more.Networking.Clustering.ISClusResType_head))(11, 'CreateItem', ((1, 'bstrResourceTypeName'),(1, 'bstrDisplayName'),(1, 'bstrResourceTypeDll'),(1, 'dwLooksAlivePollInterval'),(1, 'dwIsAlivePollInterval'),(1, 'ppResourceType'),)))
    ISClusResTypes.DeleteItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT)(12, 'DeleteItem', ((1, 'varIndex'),)))
    win32more.System.Com.IDispatch
    return ISClusResTypes
def _define_ISClusScsiAddress_head():
    class ISClusScsiAddress(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60728-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusScsiAddress
def _define_ISClusScsiAddress():
    ISClusScsiAddress = win32more.Networking.Clustering.ISClusScsiAddress_head
    ISClusScsiAddress.get_PortNumber = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(7, 'get_PortNumber', ((1, 'pvarPortNumber'),)))
    ISClusScsiAddress.get_PathId = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(8, 'get_PathId', ((1, 'pvarPathId'),)))
    ISClusScsiAddress.get_TargetId = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(9, 'get_TargetId', ((1, 'pvarTargetId'),)))
    ISClusScsiAddress.get_Lun = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(10, 'get_Lun', ((1, 'pvarLun'),)))
    win32more.System.Com.IDispatch
    return ISClusScsiAddress
def _define_ISCluster_head():
    class ISCluster(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606e4-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISCluster
def _define_ISCluster():
    ISCluster = win32more.Networking.Clustering.ISCluster_head
    ISCluster.get_CommonProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(7, 'get_CommonProperties', ((1, 'ppProperties'),)))
    ISCluster.get_PrivateProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(8, 'get_PrivateProperties', ((1, 'ppProperties'),)))
    ISCluster.get_CommonROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(9, 'get_CommonROProperties', ((1, 'ppProperties'),)))
    ISCluster.get_PrivateROProperties = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusProperties_head))(10, 'get_PrivateROProperties', ((1, 'ppProperties'),)))
    ISCluster.get_Handle = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UIntPtr))(11, 'get_Handle', ((1, 'phandle'),)))
    ISCluster.Open = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(12, 'Open', ((1, 'bstrClusterName'),)))
    ISCluster.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(13, 'get_Name', ((1, 'pbstrName'),)))
    ISCluster.put_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(14, 'put_Name', ((1, 'bstrClusterName'),)))
    ISCluster.get_Version = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusVersion_head))(15, 'get_Version', ((1, 'ppClusVersion'),)))
    ISCluster.put_QuorumResource = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Networking.Clustering.ISClusResource_head)(16, 'put_QuorumResource', ((1, 'pClusterResource'),)))
    ISCluster.get_QuorumResource = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResource_head))(17, 'get_QuorumResource', ((1, 'pClusterResource'),)))
    ISCluster.get_QuorumLogSize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(18, 'get_QuorumLogSize', ((1, 'pnLogSize'),)))
    ISCluster.put_QuorumLogSize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,Int32)(19, 'put_QuorumLogSize', ((1, 'nLogSize'),)))
    ISCluster.get_QuorumPath = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(20, 'get_QuorumPath', ((1, 'ppPath'),)))
    ISCluster.put_QuorumPath = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR)(21, 'put_QuorumPath', ((1, 'pPath'),)))
    ISCluster.get_Nodes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusNodes_head))(22, 'get_Nodes', ((1, 'ppNodes'),)))
    ISCluster.get_ResourceGroups = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResGroups_head))(23, 'get_ResourceGroups', ((1, 'ppClusterResourceGroups'),)))
    ISCluster.get_Resources = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResources_head))(24, 'get_Resources', ((1, 'ppClusterResources'),)))
    ISCluster.get_ResourceTypes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusResTypes_head))(25, 'get_ResourceTypes', ((1, 'ppResourceTypes'),)))
    ISCluster.get_Networks = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusNetworks_head))(26, 'get_Networks', ((1, 'ppNetworks'),)))
    ISCluster.get_NetInterfaces = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Networking.Clustering.ISClusNetInterfaces_head))(27, 'get_NetInterfaces', ((1, 'ppNetInterfaces'),)))
    win32more.System.Com.IDispatch
    return ISCluster
def _define_ISClusterNames_head():
    class ISClusterNames(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606ec-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusterNames
def _define_ISClusterNames():
    ISClusterNames = win32more.Networking.Clustering.ISClusterNames_head
    ISClusterNames.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISClusterNames.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISClusterNames.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISClusterNames.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Foundation.BSTR))(10, 'get_Item', ((1, 'varIndex'),(1, 'pbstrClusterName'),)))
    ISClusterNames.get_DomainName = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(11, 'get_DomainName', ((1, 'pbstrDomainName'),)))
    win32more.System.Com.IDispatch
    return ISClusterNames
def _define_ISClusVersion_head():
    class ISClusVersion(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e60716-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISClusVersion
def _define_ISClusVersion():
    ISClusVersion = win32more.Networking.Clustering.ISClusVersion_head
    ISClusVersion.get_Name = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(7, 'get_Name', ((1, 'pbstrClusterName'),)))
    ISClusVersion.get_MajorVersion = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(8, 'get_MajorVersion', ((1, 'pnMajorVersion'),)))
    ISClusVersion.get_MinorVersion = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(9, 'get_MinorVersion', ((1, 'pnMinorVersion'),)))
    ISClusVersion.get_BuildNumber = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int16))(10, 'get_BuildNumber', ((1, 'pnBuildNumber'),)))
    ISClusVersion.get_VendorId = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(11, 'get_VendorId', ((1, 'pbstrVendorId'),)))
    ISClusVersion.get_CSDVersion = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Foundation.BSTR))(12, 'get_CSDVersion', ((1, 'pbstrCSDVersion'),)))
    ISClusVersion.get_ClusterHighestVersion = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(13, 'get_ClusterHighestVersion', ((1, 'pnClusterHighestVersion'),)))
    ISClusVersion.get_ClusterLowestVersion = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(14, 'get_ClusterLowestVersion', ((1, 'pnClusterLowestVersion'),)))
    ISClusVersion.get_Flags = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(15, 'get_Flags', ((1, 'pnFlags'),)))
    ISClusVersion.get_MixedVersion = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.VARIANT_head))(16, 'get_MixedVersion', ((1, 'pvarMixedVersion'),)))
    win32more.System.Com.IDispatch
    return ISClusVersion
def _define_ISDomainNames_head():
    class ISDomainNames(win32more.System.Com.IDispatch_head):
        Guid = Guid('f2e606e2-2631-11d1-89-f1-00-a0-c9-0d-06-1e')
    return ISDomainNames
def _define_ISDomainNames():
    ISDomainNames = win32more.Networking.Clustering.ISDomainNames_head
    ISDomainNames.get_Count = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(7, 'get_Count', ((1, 'plCount'),)))
    ISDomainNames.get__NewEnum = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Com.IUnknown_head))(8, 'get__NewEnum', ((1, 'retval'),)))
    ISDomainNames.Refresh = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,)(9, 'Refresh', ()))
    ISDomainNames.get_Item = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.VARIANT,POINTER(win32more.Foundation.BSTR))(10, 'get_Item', ((1, 'varIndex'),(1, 'pbstrDomainName'),)))
    win32more.System.Com.IDispatch
    return ISDomainNames
def _define_IWCContextMenuCallback_head():
    class IWCContextMenuCallback(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede64-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWCContextMenuCallback
def _define_IWCContextMenuCallback():
    IWCContextMenuCallback = win32more.Networking.Clustering.IWCContextMenuCallback_head
    IWCContextMenuCallback.AddExtensionMenuItem = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.BSTR,win32more.Foundation.BSTR,UInt32,UInt32,UInt32)(3, 'AddExtensionMenuItem', ((1, 'lpszName'),(1, 'lpszStatusBarText'),(1, 'nCommandID'),(1, 'nSubmenuCommandID'),(1, 'uFlags'),)))
    win32more.System.Com.IUnknown
    return IWCContextMenuCallback
def _define_IWCPropertySheetCallback_head():
    class IWCPropertySheetCallback(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede60-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWCPropertySheetCallback
def _define_IWCPropertySheetCallback():
    IWCPropertySheetCallback = win32more.Networking.Clustering.IWCPropertySheetCallback_head
    IWCPropertySheetCallback.AddPropertySheetPage = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(3, 'AddPropertySheetPage', ((1, 'hpage'),)))
    win32more.System.Com.IUnknown
    return IWCPropertySheetCallback
def _define_IWCWizard97Callback_head():
    class IWCWizard97Callback(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede67-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWCWizard97Callback
def _define_IWCWizard97Callback():
    IWCWizard97Callback = win32more.Networking.Clustering.IWCWizard97Callback_head
    IWCWizard97Callback.AddWizard97Page = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(3, 'AddWizard97Page', ((1, 'hpage'),)))
    IWCWizard97Callback.EnableNext = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),win32more.Foundation.BOOL)(4, 'EnableNext', ((1, 'hpage'),(1, 'bEnable'),)))
    win32more.System.Com.IUnknown
    return IWCWizard97Callback
def _define_IWCWizardCallback_head():
    class IWCWizardCallback(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede62-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWCWizardCallback
def _define_IWCWizardCallback():
    IWCWizardCallback = win32more.Networking.Clustering.IWCWizardCallback_head
    IWCWizardCallback.AddWizardPage = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32))(3, 'AddWizardPage', ((1, 'hpage'),)))
    IWCWizardCallback.EnableNext = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Int32),win32more.Foundation.BOOL)(4, 'EnableNext', ((1, 'hpage'),(1, 'bEnable'),)))
    win32more.System.Com.IUnknown
    return IWCWizardCallback
def _define_IWEExtendContextMenu_head():
    class IWEExtendContextMenu(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede65-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWEExtendContextMenu
def _define_IWEExtendContextMenu():
    IWEExtendContextMenu = win32more.Networking.Clustering.IWEExtendContextMenu_head
    IWEExtendContextMenu.AddContextMenuItems = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.IUnknown_head,win32more.Networking.Clustering.IWCContextMenuCallback_head)(3, 'AddContextMenuItems', ((1, 'piData'),(1, 'piCallback'),)))
    win32more.System.Com.IUnknown
    return IWEExtendContextMenu
def _define_IWEExtendPropertySheet_head():
    class IWEExtendPropertySheet(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede61-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWEExtendPropertySheet
def _define_IWEExtendPropertySheet():
    IWEExtendPropertySheet = win32more.Networking.Clustering.IWEExtendPropertySheet_head
    IWEExtendPropertySheet.CreatePropertySheetPages = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.IUnknown_head,win32more.Networking.Clustering.IWCPropertySheetCallback_head)(3, 'CreatePropertySheetPages', ((1, 'piData'),(1, 'piCallback'),)))
    win32more.System.Com.IUnknown
    return IWEExtendPropertySheet
def _define_IWEExtendWizard_head():
    class IWEExtendWizard(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede63-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWEExtendWizard
def _define_IWEExtendWizard():
    IWEExtendWizard = win32more.Networking.Clustering.IWEExtendWizard_head
    IWEExtendWizard.CreateWizardPages = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.IUnknown_head,win32more.Networking.Clustering.IWCWizardCallback_head)(3, 'CreateWizardPages', ((1, 'piData'),(1, 'piCallback'),)))
    win32more.System.Com.IUnknown
    return IWEExtendWizard
def _define_IWEExtendWizard97_head():
    class IWEExtendWizard97(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede68-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWEExtendWizard97
def _define_IWEExtendWizard97():
    IWEExtendWizard97 = win32more.Networking.Clustering.IWEExtendWizard97_head
    IWEExtendWizard97.CreateWizard97Pages = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.System.Com.IUnknown_head,win32more.Networking.Clustering.IWCWizard97Callback_head)(3, 'CreateWizard97Pages', ((1, 'piData'),(1, 'piCallback'),)))
    win32more.System.Com.IUnknown
    return IWEExtendWizard97
def _define_IWEInvokeCommand_head():
    class IWEInvokeCommand(win32more.System.Com.IUnknown_head):
        Guid = Guid('97dede66-fc6b-11cf-b5-f5-00-a0-c9-0a-b5-05')
    return IWEInvokeCommand
def _define_IWEInvokeCommand():
    IWEInvokeCommand = win32more.Networking.Clustering.IWEInvokeCommand_head
    IWEInvokeCommand.InvokeCommand = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.System.Com.IUnknown_head)(3, 'InvokeCommand', ((1, 'nCommandID'),(1, 'piData'),)))
    win32more.System.Com.IUnknown
    return IWEInvokeCommand
LOG_LEVEL = Int32
LOG_INFORMATION = 0
LOG_WARNING = 1
LOG_ERROR = 2
LOG_SEVERE = 3
def _define_LPGROUP_CALLBACK_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUP_head),c_void_p)
def _define_LPNODE_CALLBACK():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNODE_head),win32more.Networking.Clustering.CLUSTER_NODE_STATE,c_void_p)
def _define_LPRESOURCE_CALLBACK():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),c_void_p)
def _define_LPRESOURCE_CALLBACK_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),c_void_p)
MAINTENANCE_MODE_TYPE_ENUM = Int32
MAINTENANCE_MODE_TYPE_ENUM_MaintenanceModeTypeDisableIsAliveCheck = 1
MAINTENANCE_MODE_TYPE_ENUM_MaintenanceModeTypeOfflineResource = 2
MAINTENANCE_MODE_TYPE_ENUM_MaintenanceModeTypeUnclusterResource = 3
def _define_MONITOR_STATE_head():
    class MONITOR_STATE(Structure):
        pass
    return MONITOR_STATE
def _define_MONITOR_STATE():
    MONITOR_STATE = win32more.Networking.Clustering.MONITOR_STATE_head
    MONITOR_STATE._fields_ = [
        ('LastUpdate', win32more.Foundation.LARGE_INTEGER),
        ('State', win32more.Networking.Clustering.RESOURCE_MONITOR_STATE),
        ('ActiveResource', win32more.Foundation.HANDLE),
        ('ResmonStop', win32more.Foundation.BOOL),
    ]
    return MONITOR_STATE
NODE_CLUSTER_STATE = Int32
NODE_CLUSTER_STATE_ClusterStateNotInstalled = 0
NODE_CLUSTER_STATE_ClusterStateNotConfigured = 1
NODE_CLUSTER_STATE_ClusterStateNotRunning = 3
NODE_CLUSTER_STATE_ClusterStateRunning = 19
def _define_NodeUtilizationInfoElement_head():
    class NodeUtilizationInfoElement(Structure):
        pass
    return NodeUtilizationInfoElement
def _define_NodeUtilizationInfoElement():
    NodeUtilizationInfoElement = win32more.Networking.Clustering.NodeUtilizationInfoElement_head
    NodeUtilizationInfoElement._fields_ = [
        ('Id', UInt64),
        ('AvailableMemory', UInt64),
        ('AvailableMemoryAfterReclamation', UInt64),
    ]
    return NodeUtilizationInfoElement
def _define_NOTIFY_FILTER_AND_TYPE_head():
    class NOTIFY_FILTER_AND_TYPE(Structure):
        pass
    return NOTIFY_FILTER_AND_TYPE
def _define_NOTIFY_FILTER_AND_TYPE():
    NOTIFY_FILTER_AND_TYPE = win32more.Networking.Clustering.NOTIFY_FILTER_AND_TYPE_head
    NOTIFY_FILTER_AND_TYPE._fields_ = [
        ('dwObjectType', UInt32),
        ('FilterFlags', Int64),
    ]
    return NOTIFY_FILTER_AND_TYPE
def _define_PARBITRATE_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,win32more.Networking.Clustering.PQUORUM_RESOURCE_LOST)
def _define_PaxosTagCStruct_head():
    class PaxosTagCStruct(Structure):
        pass
    return PaxosTagCStruct
def _define_PaxosTagCStruct():
    PaxosTagCStruct = win32more.Networking.Clustering.PaxosTagCStruct_head
    PaxosTagCStruct._fields_ = [
        ('__padding__PaxosTagVtable', UInt64),
        ('__padding__NextEpochVtable', UInt64),
        ('__padding__NextEpoch_DateTimeVtable', UInt64),
        ('NextEpoch_DateTime_ticks', UInt64),
        ('NextEpoch_Value', Int32),
        ('__padding__BoundryNextEpoch', UInt32),
        ('__padding__EpochVtable', UInt64),
        ('__padding__Epoch_DateTimeVtable', UInt64),
        ('Epoch_DateTime_ticks', UInt64),
        ('Epoch_Value', Int32),
        ('__padding__BoundryEpoch', UInt32),
        ('Sequence', Int32),
        ('__padding__BoundrySequence', UInt32),
    ]
    return PaxosTagCStruct
def _define_PBEGIN_RESCALL_AS_USER_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,win32more.Foundation.HANDLE,UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32),Int64,POINTER(win32more.Foundation.BOOL))
def _define_PBEGIN_RESCALL_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32),Int64,POINTER(win32more.Foundation.BOOL))
def _define_PBEGIN_RESTYPECALL_AS_USER_ROUTINE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.HANDLE,UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32),Int64,POINTER(win32more.Foundation.BOOL))
def _define_PBEGIN_RESTYPECALL_ROUTINE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32),Int64,POINTER(win32more.Foundation.BOOL))
def _define_PCANCEL_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32)
def _define_PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32,win32more.Foundation.BOOL)
def _define_PCHANGE_RESOURCE_PROCESS_FOR_DUMPS():
    return WINFUNCTYPE(UInt32,IntPtr,win32more.Foundation.PWSTR,UInt32,win32more.Foundation.BOOL)
def _define_PCLOSE_CLUSTER_CRYPT_PROVIDER():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head))
def _define_PCLOSE_ROUTINE():
    return WINFUNCTYPE(Void,c_void_p)
def _define_PCLUSAPI_ADD_CLUSTER_GROUP_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_ADD_CLUSTER_GROUP_GROUPSET_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))
def _define_PCLUSAPI_ADD_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))
def _define_PCLUSAPI_ADD_CLUSTER_NODE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)
def _define_PCLUSAPI_ADD_CLUSTER_NODE_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)
def _define_PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_ADD_CROSS_CLUSTER_GROUPSET_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)
def _define_PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_BACKUP_CLUSTER_DATABASE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HGROUP_head),UInt64)
def _define_PCLUSAPI_CLOSE_CLUSTER():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HCLUSTER_head))
def _define_PCLUSAPI_CLOSE_CLUSTER_GROUP():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_CLOSE_CLUSTER_GROUP_GROUPSET():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HGROUPSET_head))
def _define_PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head))
def _define_PCLUSAPI_CLOSE_CLUSTER_NETWORK():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HNETWORK_head))
def _define_PCLUSAPI_CLOSE_CLUSTER_NODE():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HCHANGE_head))
def _define_PCLUSAPI_CLOSE_CLUSTER_RESOURCE():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_CLUS_WORKER_CREATE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head),win32more.Networking.Clustering.PWORKER_START_ROUTINE,c_void_p)
def _define_PCLUSAPI_CLUS_WORKER_TERMINATE():
    return WINFUNCTYPE(Void,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head))
def _define_PCLUSAPI_CLUSTER_ADD_GROUP_TO_AFFINITY_RULE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_CLUSTER_ADD_GROUP_TO_GROUP_GROUPSET():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_CLUSTER_AFFINITY_RULE_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_CLOSE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUM_head))
def _define_PCLUSAPI_CLUSTER_CLOSE_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head))
def _define_PCLUSAPI_CLUSTER_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_CREATE_AFFINITY_RULE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.CLUS_AFFINITY_RULE_TYPE)
def _define_PCLUSAPI_CLUSTER_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_ENUM_ITEM_head),POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_GET_ENUM_COUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUM_head))
def _define_PCLUSAPI_CLUSTER_GET_ENUM_COUNT_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head))
def _define_PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUM_head))
def _define_PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head))
def _define_PCLUSAPI_CLUSTER_GROUP_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_GROUP_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_GROUP_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_GROUP_ENUM_ITEM_head),POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUM_head))
def _define_PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head))
def _define_PCLUSAPI_CLUSTER_GROUP_GROUPSET_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPENUM_head),POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32)
def _define_PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPENUMEX_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,win32more.Foundation.PWSTR,UInt32,UInt32)
def _define_PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORKENUM_head))
def _define_PCLUSAPI_CLUSTER_NETWORK_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORK_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_NETWORK_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORKENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORKENUM_head))
def _define_PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETWORKENUM_head),POINTER(win32more.Networking.Clustering._HNETWORK_head),UInt32)
def _define_PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUM_head))
def _define_PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUMEX_head))
def _define_PCLUSAPI_CLUSTER_NODE_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_NODE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_NODE_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_ENUM_ITEM_head),POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUM_head))
def _define_PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODEENUMEX_head))
def _define_PCLUSAPI_CLUSTER_NODE_OPEN_ENUM():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODEENUM_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32)
def _define_PCLUSAPI_CLUSTER_NODE_OPEN_ENUM_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODEENUMEX_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p)
def _define_PCLUSAPI_CLUSTER_OPEN_ENUM():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSENUM_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)
def _define_PCLUSAPI_CLUSTER_OPEN_ENUM_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSENUMEX_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32,c_void_p)
def _define_PCLUSAPI_CLUSTER_REG_CLOSE_KEY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY)
def _define_PCLUSAPI_CLUSTER_REG_CREATE_BATCH():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(POINTER(win32more.Networking.Clustering._HREGBATCH_head)))
def _define_PCLUSAPI_CLUSTER_REG_CREATE_KEY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,UInt32,POINTER(win32more.Security.SECURITY_ATTRIBUTES_head),POINTER(win32more.System.Registry.HKEY),POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_REG_DELETE_KEY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR)
def _define_PCLUSAPI_CLUSTER_REG_DELETE_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR)
def _define_PCLUSAPI_CLUSTER_REG_ENUM_KEY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,UInt32,win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(win32more.Foundation.FILETIME_head))
def _define_PCLUSAPI_CLUSTER_REG_ENUM_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,UInt32,win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(UInt32),c_char_p_no,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,UInt32,win32more.Security.PSECURITY_DESCRIPTOR,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_REG_OPEN_KEY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.System.Registry.HKEY))
def _define_PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(UInt32),POINTER(win32more.Foundation.FILETIME_head))
def _define_PCLUSAPI_CLUSTER_REG_QUERY_VALUE():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(UInt32),c_char_p_no,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,UInt32,win32more.Security.PSECURITY_DESCRIPTOR)
def _define_PCLUSAPI_CLUSTER_REG_SET_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,c_char_p_no,UInt32)
def _define_PCLUSAPI_CLUSTER_REG_SYNC_DATABASE():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)
def _define_PCLUSAPI_CLUSTER_REMOVE_AFFINITY_RULE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_AFFINITY_RULE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_GROUP_GROUPSET():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUM_head))
def _define_PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUMEX_head))
def _define_PCLUSAPI_CLUSTER_RESOURCE_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_RESOURCE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_RESOURCE_ENUM_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUMEX_head),UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_RESOURCE_ENUM_ITEM_head),POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUM_head))
def _define_PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESENUMEX_head))
def _define_PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESENUM_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32)
def _define_PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESENUMEX_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,win32more.Foundation.PWSTR,UInt32,UInt32)
def _define_PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head))
def _define_PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head),UInt32,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head))
def _define_PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESTYPEENUM_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32)
def _define_PCLUSAPI_CLUSTER_UPGRADE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.BOOL,win32more.Networking.Clustering.PCLUSTER_UPGRADE_PROGRESS_CALLBACK,c_void_p)
def _define_PCLUSAPI_CREATE_CLUSTER():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CREATE_CLUSTER_CONFIG_head),win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)
def _define_PCLUSAPI_CREATE_CLUSTER_AVAILABILITY_SET():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering.CLUSTER_AVAILABILITY_SET_CONFIG_head))
def _define_PCLUSAPI_CREATE_CLUSTER_CNOLESS():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CREATE_CLUSTER_CONFIG_head),win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)
def _define_PCLUSAPI_CREATE_CLUSTER_GROUP():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_CREATE_CLUSTER_GROUP_GROUPSET():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_CREATE_CLUSTER_GROUPEX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering.CLUSTER_CREATE_GROUP_INFO_head))
def _define_PCLUSAPI_CREATE_CLUSTER_NAME_ACCOUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.CREATE_CLUSTER_NAME_ACCOUNT_head),win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p)
def _define_PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32,UIntPtr)
def _define_PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT_V2():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering.NOTIFY_FILTER_AND_TYPE_head),UInt32,UIntPtr)
def _define_PCLUSAPI_CREATE_CLUSTER_RESOURCE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)
def _define_PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32,UInt32)
def _define_PCLUSAPI_DELETE_CLUSTER_GROUP():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_DELETE_CLUSTER_GROUP_GROUPSET():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head))
def _define_PCLUSAPI_DELETE_CLUSTER_RESOURCE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_DESTROY_CLUSTER():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Networking.Clustering.PCLUSTER_SETUP_PROGRESS_CALLBACK,c_void_p,win32more.Foundation.BOOL)
def _define_PCLUSAPI_DESTROY_CLUSTER_GROUP():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_EVICT_CLUSTER_NODE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_EVICT_CLUSTER_NODE_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32,POINTER(win32more.Foundation.HRESULT))
def _define_PCLUSAPI_FAIL_CLUSTER_RESOURCE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_GET_CLUSTER_FROM_GROUP():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_GET_CLUSTER_FROM_GROUP_GROUPSET():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))
def _define_PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNETINTERFACE_head))
def _define_PCLUSAPI_GET_CLUSTER_FROM_NETWORK():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNETWORK_head))
def _define_PCLUSAPI_GET_CLUSTER_FROM_NODE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_GET_CLUSTER_FROM_RESOURCE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_GET_CLUSTER_GROUP_KEY():
    return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_GROUP_STATE():
    return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_GROUP_STATE,POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_INFORMATION():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSTERVERSIONINFO_head))
def _define_PCLUSAPI_GET_CLUSTER_KEY():
    return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_NET_INTERFACE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY():
    return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE():
    return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_NETINTERFACE_STATE,POINTER(win32more.Networking.Clustering._HNETINTERFACE_head))
def _define_PCLUSAPI_GET_CLUSTER_NETWORK_ID():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORK_head),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_NETWORK_KEY():
    return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HNETWORK_head),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_NETWORK_STATE():
    return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_NETWORK_STATE,POINTER(win32more.Networking.Clustering._HNETWORK_head))
def _define_PCLUSAPI_GET_CLUSTER_NODE_ID():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_NODE_KEY():
    return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HNODE_head),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_NODE_STATE():
    return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_NODE_STATE,POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_GET_CLUSTER_NOTIFY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(UIntPtr),POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_NOTIFY_V2():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(UIntPtr),POINTER(win32more.Networking.Clustering.NOTIFY_FILTER_AND_TYPE_head),c_char_p_no,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_RESOURCE_KEY():
    return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32)
def _define_PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_RESOURCE_STATE():
    return WINFUNCTYPE(win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY():
    return WINFUNCTYPE(win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32)
def _define_PCLUSAPI_GET_NODE_CLUSTER_STATE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSAPI_GET_NOTIFY_EVENT_HANDLE_V2():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),POINTER(win32more.Foundation.HANDLE))
def _define_PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.BOOL))
def _define_PCLUSAPI_MOVE_CLUSTER_GROUP():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_OFFLINE_CLUSTER_GROUP():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_OFFLINE_CLUSTER_RESOURCE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_ONLINE_CLUSTER_GROUP():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_ONLINE_CLUSTER_RESOURCE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_OPEN_CLUSTER():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_OPEN_CLUSTER_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_OPEN_CLUSTER_GROUP():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_OPEN_CLUSTER_GROUP_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_OPEN_CLUSTER_GROUP_GROUPSET():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_OPEN_CLUSTER_NETINTERFACE_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETINTERFACE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_OPEN_CLUSTER_NETWORK():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETWORK_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_OPEN_CLUSTER_NETWORK_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNETWORK_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_OPEN_CLUSTER_NODE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_OPEN_CLUSTER_NODE_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_OPEN_CLUSTER_RESOURCE():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_OPEN_CLUSTER_RESOURCE_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))
def _define_PCLUSAPI_OPEN_NODE_BY_ID():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HNODE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32)
def _define_PCLUSAPI_PAUSE_CLUSTER_NODE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_PAUSE_CLUSTER_NODE_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),win32more.Foundation.BOOL,UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_REGISTER_CLUSTER_NOTIFY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),UInt32,win32more.Foundation.HANDLE,UIntPtr)
def _define_PCLUSAPI_REGISTER_CLUSTER_NOTIFY_V2():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCHANGE_head),win32more.Networking.Clustering.NOTIFY_FILTER_AND_TYPE,win32more.Foundation.HANDLE,UIntPtr)
def _define_PCLUSAPI_REMOVE_CLUSTER_GROUP_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUP_head))
def _define_PCLUSAPI_REMOVE_CLUSTER_GROUP_GROUPSET_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))
def _define_PCLUSAPI_REMOVE_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),POINTER(win32more.Networking.Clustering._HGROUPSET_head))
def _define_PCLUSAPI_REMOVE_CLUSTER_NAME_ACCOUNT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head))
def _define_PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_REMOVE_CROSS_CLUSTER_GROUPSET_DEPENDENCY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)
def _define_PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PCLUSAPI_RESTART_CLUSTER_RESOURCE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),UInt32)
def _define_PCLUSAPI_RESTORE_CLUSTER_DATABASE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.BOOL,win32more.Foundation.PWSTR)
def _define_PCLUSAPI_RESUME_CLUSTER_NODE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head))
def _define_PCLUSAPI_RESUME_CLUSTER_NODE_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNODE_head),win32more.Networking.Clustering.CLUSTER_NODE_RESUME_FAILBACK_TYPE,UInt32)
def _define_PCLUSAPI_SET_CLUSTER_GROUP_GROUPSET_DEPENDENCY_EXPRESSION():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUPSET_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_SET_CLUSTER_GROUP_NAME():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),UInt32,POINTER(POINTER(win32more.Networking.Clustering._HNODE_head)))
def _define_PCLUSAPI_SET_CLUSTER_NETWORK_NAME():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HNETWORK_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),UInt32,POINTER(POINTER(win32more.Networking.Clustering._HNETWORK_head)))
def _define_PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,UInt32)
def _define_PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_SET_CLUSTER_RESOURCE_NAME():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.Networking.Clustering.CLUSTER_SET_PASSWORD_STATUS_head),POINTER(UInt32))
def _define_PCLUSAPI_SET_GROUP_DEPENDENCY_EXPRESSION():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HGROUP_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_SetClusterName():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR)
def _define_PCLUSAPI_SHARED_VOLUME_SET_SNAPSHOT_STATE():
    return WINFUNCTYPE(UInt32,Guid,win32more.Foundation.PWSTR,win32more.Networking.Clustering.CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE)
def _define_PCLUSAPIClusWorkerCheckTerminate():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head))
def _define_PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)
def _define_PCLUSTER_DECRYPT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PCLUSTER_ENCRYPT():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)
def _define_PCLUSTER_GET_VOLUME_PATH_NAME():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)
def _define_PCLUSTER_IS_PATH_ON_SHARED_VOLUME():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR)
def _define_PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PCLUSTER_REG_BATCH_ADD_COMMAND():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCH_head),win32more.Networking.Clustering.CLUSTER_REG_COMMAND,win32more.Foundation.PWSTR,UInt32,c_void_p,UInt32)
def _define_PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHNOTIFICATION_head))
def _define_PCLUSTER_REG_BATCH_READ_COMMAND():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHNOTIFICATION_head),POINTER(win32more.Networking.Clustering.CLUSTER_BATCH_COMMAND_head))
def _define_PCLUSTER_REG_CLOSE_BATCH():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCH_head),win32more.Foundation.BOOL,POINTER(Int32))
def _define_PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHPORT_head))
def _define_PCLUSTER_REG_CLOSE_READ_BATCH():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCH_head),POINTER(POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head)))
def _define_PCLUSTER_REG_CLOSE_READ_BATCH_EX():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCH_head),UInt32,POINTER(POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head)))
def _define_PCLUSTER_REG_CLOSE_READ_BATCH_REPLY():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head))
def _define_PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(POINTER(win32more.Networking.Clustering._HREGBATCHPORT_head)))
def _define_PCLUSTER_REG_CREATE_READ_BATCH():
    return WINFUNCTYPE(Int32,win32more.System.Registry.HKEY,POINTER(POINTER(win32more.Networking.Clustering._HREGREADBATCH_head)))
def _define_PCLUSTER_REG_GET_BATCH_NOTIFICATION():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGBATCHPORT_head),POINTER(POINTER(win32more.Networking.Clustering._HREGBATCHNOTIFICATION_head)))
def _define_PCLUSTER_REG_READ_BATCH_ADD_COMMAND():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCH_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)
def _define_PCLUSTER_REG_READ_BATCH_REPLY_NEXT_COMMAND():
    return WINFUNCTYPE(Int32,POINTER(win32more.Networking.Clustering._HREGREADBATCHREPLY_head),POINTER(win32more.Networking.Clustering.CLUSTER_READ_BATCH_COMMAND_head))
def _define_PCLUSTER_SET_ACCOUNT_ACCESS():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.PWSTR,UInt32,UInt32)
def _define_PCLUSTER_SETUP_PROGRESS_CALLBACK():
    return WINFUNCTYPE(win32more.Foundation.BOOL,c_void_p,win32more.Networking.Clustering.CLUSTER_SETUP_PHASE,win32more.Networking.Clustering.CLUSTER_SETUP_PHASE_TYPE,win32more.Networking.Clustering.CLUSTER_SETUP_PHASE_SEVERITY,UInt32,win32more.Foundation.PWSTR,UInt32)
def _define_PCLUSTER_UPGRADE_PROGRESS_CALLBACK():
    return WINFUNCTYPE(win32more.Foundation.BOOL,c_void_p,win32more.Networking.Clustering.CLUSTER_UPGRADE_PHASE)
def _define_PEND_CONTROL_CALL():
    return WINFUNCTYPE(UInt32,Int64,UInt32)
def _define_PEND_TYPE_CONTROL_CALL():
    return WINFUNCTYPE(UInt32,Int64,UInt32)
def _define_PEXTEND_RES_CONTROL_CALL():
    return WINFUNCTYPE(UInt32,Int64,UInt32)
def _define_PEXTEND_RES_TYPE_CONTROL_CALL():
    return WINFUNCTYPE(UInt32,Int64,UInt32)
def _define_PFREE_CLUSTER_CRYPT():
    return WINFUNCTYPE(UInt32,c_void_p)
def _define_PIS_ALIVE_ROUTINE():
    return WINFUNCTYPE(win32more.Foundation.BOOL,c_void_p)
PLACEMENT_OPTIONS = Int32
PLACEMENT_OPTIONS_MIN_VALUE = 0
PLACEMENT_OPTIONS_DEFAULT_PLACEMENT_OPTIONS = 0
PLACEMENT_OPTIONS_DISABLE_CSV_VM_DEPENDENCY = 1
PLACEMENT_OPTIONS_CONSIDER_OFFLINE_VMS = 2
PLACEMENT_OPTIONS_DONT_USE_MEMORY = 4
PLACEMENT_OPTIONS_DONT_USE_CPU = 8
PLACEMENT_OPTIONS_DONT_USE_LOCAL_TEMP_DISK = 16
PLACEMENT_OPTIONS_DONT_RESUME_VMS_WITH_EXISTING_TEMP_DISK = 32
PLACEMENT_OPTIONS_SAVE_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE = 64
PLACEMENT_OPTIONS_DONT_RESUME_AVAILABILTY_SET_VMS_WITH_EXISTING_TEMP_DISK = 128
PLACEMENT_OPTIONS_SAVE_AVAILABILTY_SET_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE = 256
PLACEMENT_OPTIONS_AVAILABILITY_SET_DOMAIN_AFFINITY = 512
PLACEMENT_OPTIONS_ALL = 1023
def _define_PLOG_EVENT_ROUTINE():
    return CFUNCTYPE(Void,IntPtr,win32more.Networking.Clustering.LOG_LEVEL,win32more.Foundation.PWSTR)
def _define_PLOOKS_ALIVE_ROUTINE():
    return WINFUNCTYPE(win32more.Foundation.BOOL,c_void_p)
def _define_POFFLINE_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p)
def _define_POFFLINE_V2_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,win32more.Foundation.PWSTR,UInt32,c_char_p_no,UInt32,UInt32)
def _define_PONLINE_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Foundation.HANDLE))
def _define_PONLINE_V2_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,POINTER(win32more.Foundation.HANDLE),UInt32,c_char_p_no,UInt32,UInt32)
def _define_POPEN_CLUSTER_CRYPT_PROVIDER():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),win32more.Foundation.PWSTR,POINTER(SByte),UInt32,UInt32)
def _define_POPEN_CLUSTER_CRYPT_PROVIDEREX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HCLUSCRYPTPROVIDER_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(SByte),UInt32,UInt32)
def _define_POPEN_ROUTINE():
    return WINFUNCTYPE(c_void_p,win32more.Foundation.PWSTR,win32more.System.Registry.HKEY,IntPtr)
def _define_POPEN_V2_ROUTINE():
    return WINFUNCTYPE(c_void_p,win32more.Foundation.PWSTR,win32more.System.Registry.HKEY,IntPtr,UInt32)
def _define_POST_UPGRADE_VERSION_INFO_head():
    class POST_UPGRADE_VERSION_INFO(Structure):
        pass
    return POST_UPGRADE_VERSION_INFO
def _define_POST_UPGRADE_VERSION_INFO():
    POST_UPGRADE_VERSION_INFO = win32more.Networking.Clustering.POST_UPGRADE_VERSION_INFO_head
    POST_UPGRADE_VERSION_INFO._fields_ = [
        ('newMajorVersion', UInt32),
        ('newUpgradeVersion', UInt32),
        ('oldMajorVersion', UInt32),
        ('oldUpgradeVersion', UInt32),
        ('reserved', UInt32),
    ]
    return POST_UPGRADE_VERSION_INFO
def _define_PQUERY_APPINSTANCE_VERSION():
    return WINFUNCTYPE(UInt32,POINTER(Guid),POINTER(UInt64),POINTER(UInt64),POINTER(win32more.Foundation.NTSTATUS))
def _define_PQUORUM_RESOURCE_LOST():
    return WINFUNCTYPE(Void,IntPtr)
def _define_PRAISE_RES_TYPE_NOTIFICATION():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,c_char_p_no,UInt32)
def _define_PREGISTER_APPINSTANCE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,POINTER(Guid),win32more.Foundation.BOOL)
def _define_PREGISTER_APPINSTANCE_VERSION():
    return WINFUNCTYPE(UInt32,POINTER(Guid),UInt64,UInt64)
def _define_PRELEASE_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p)
def _define_PREQUEST_DUMP_ROUTINE():
    return WINFUNCTYPE(UInt32,IntPtr,win32more.Foundation.BOOL,UInt32)
def _define_PRES_UTIL_VERIFY_SHUTDOWN_SAFE():
    return WINFUNCTYPE(UInt32,UInt32,UInt32,POINTER(UInt32))
def _define_PRESET_ALL_APPINSTANCE_VERSIONS():
    return WINFUNCTYPE(UInt32,)
def _define_PRESOURCE_CONTROL_ROUTINE():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PRESOURCE_TYPE_CONTROL_ROUTINE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,UInt32,c_void_p,UInt32,c_void_p,UInt32,POINTER(UInt32))
def _define_PRESUTIL_ADD_UNKNOWN_PROPERTIES():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_CREATE_DIRECTORY_TREE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)
def _define_PRESUTIL_DUP_PARAMETER_BLOCK():
    return WINFUNCTYPE(UInt32,c_char_p_no,c_char_p_no,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head))
def _define_PRESUTIL_DUP_STRING():
    return WINFUNCTYPE(win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)
def _define_PRESUTIL_ENUM_PRIVATE_PROPERTIES():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_ENUM_PROPERTIES():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),win32more.Foundation.PWSTR,UInt32,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_ENUM_RESOURCES():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.LPRESOURCE_CALLBACK,c_void_p)
def _define_PRESUTIL_ENUM_RESOURCES_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.LPRESOURCE_CALLBACK_EX,c_void_p)
def _define_PRESUTIL_ENUM_RESOURCES_EX2():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Networking.Clustering.LPRESOURCE_CALLBACK_EX,c_void_p,UInt32)
def _define_PRESUTIL_EXPAND_ENVIRONMENT_STRINGS():
    return WINFUNCTYPE(win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)
def _define_PRESUTIL_FIND_BINARY_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PRESUTIL_FIND_DWORD_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PRESUTIL_FIND_EXPAND_SZ_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))
def _define_PRESUTIL_FIND_EXPANDED_SZ_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))
def _define_PRESUTIL_FIND_FILETIME_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.FILETIME_head))
def _define_PRESUTIL_FIND_LONG_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(Int32))
def _define_PRESUTIL_FIND_MULTI_SZ_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR),POINTER(UInt32))
def _define_PRESUTIL_FIND_SZ_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))
def _define_PRESUTIL_FIND_ULARGEINTEGER_PROPERTY():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32,win32more.Foundation.PWSTR,POINTER(UInt64))
def _define_PRESUTIL_FREE_ENVIRONMENT():
    return WINFUNCTYPE(UInt32,c_void_p)
def _define_PRESUTIL_FREE_PARAMETER_BLOCK():
    return WINFUNCTYPE(Void,c_char_p_no,c_char_p_no,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head))
def _define_PRESUTIL_GET_ALL_PROPERTIES():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_GET_BINARY_PROPERTY():
    return WINFUNCTYPE(UInt32,POINTER(c_char_p_no),POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSPROP_BINARY_head),c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_GET_BINARY_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_GET_CORE_CLUSTER_RESOURCES():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)))
def _define_PRESUTIL_GET_CORE_CLUSTER_RESOURCES_EX():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HCLUSTER_head),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),POINTER(POINTER(win32more.Networking.Clustering._HRESOURCE_head)),UInt32)
def _define_PRESUTIL_GET_DWORD_PROPERTY():
    return WINFUNCTYPE(UInt32,POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSPROP_DWORD_head),UInt32,UInt32,UInt32,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_GET_DWORD_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(UInt32),UInt32)
def _define_PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME():
    return WINFUNCTYPE(c_void_p,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PRESUTIL_GET_EXPAND_SZ_VALUE():
    return WINFUNCTYPE(win32more.Foundation.PWSTR,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.BOOL)
def _define_PRESUTIL_GET_FILETIME_PROPERTY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Foundation.FILETIME_head),POINTER(win32more.Networking.Clustering.CLUSPROP_FILETIME_head),win32more.Foundation.FILETIME,win32more.Foundation.FILETIME,win32more.Foundation.FILETIME,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_GET_LONG_PROPERTY():
    return WINFUNCTYPE(UInt32,POINTER(Int32),POINTER(win32more.Networking.Clustering.CLUSPROP_LONG_head),Int32,Int32,Int32,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_GET_MULTI_SZ_PROPERTY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(UInt32),POINTER(win32more.Networking.Clustering.CLUSPROP_SZ_head),win32more.Foundation.PWSTR,UInt32,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_GET_PRIVATE_PROPERTIES():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_GET_PROPERTIES():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_char_p_no,win32more.Foundation.BOOL,POINTER(win32more.Foundation.PWSTR))
def _define_PRESUTIL_GET_PROPERTY():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),POINTER(c_void_p),POINTER(UInt32))
def _define_PRESUTIL_GET_PROPERTY_FORMATS():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_GET_PROPERTY_SIZE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_GET_QWORD_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,POINTER(UInt64),UInt64)
def _define_PRESUTIL_GET_RESOURCE_DEPENDENCY():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR)
def _define_PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,POINTER(win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO_head),win32more.Foundation.BOOL)
def _define_PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,POINTER(win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO_head),win32more.Foundation.BOOL,UInt32)
def _define_PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR,win32more.Foundation.BOOL)
def _define_PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HCLUSTER_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR,win32more.Foundation.BOOL,UInt32)
def _define_PRESUTIL_GET_RESOURCE_DEPENDENCY_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.HANDLE,win32more.Foundation.PWSTR,UInt32)
def _define_PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PRESUTIL_GET_RESOURCE_NAME():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,POINTER(UInt32))
def _define_PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR)
def _define_PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY_EX():
    return WINFUNCTYPE(POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32)
def _define_PRESUTIL_GET_SZ_PROPERTY():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(win32more.Networking.Clustering.CLUSPROP_SZ_head),win32more.Foundation.PWSTR,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_GET_SZ_VALUE():
    return WINFUNCTYPE(win32more.Foundation.PWSTR,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR)
def _define_PRESUTIL_IS_PATH_VALID():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR)
def _define_PRESUTIL_IS_RESOURCE_CLASS_EQUAL():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering.CLUS_RESOURCE_CLASS_INFO_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,POINTER(UInt32),c_char_p_no,POINTER(UInt32),POINTER(UInt32))
def _define_PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)
def _define_PRESUTIL_RESOURCE_TYPES_EQUAL():
    return WINFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PRESUTIL_RESOURCES_EQUAL():
    return WINFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Networking.Clustering._HRESOURCE_head),POINTER(win32more.Networking.Clustering._HRESOURCE_head))
def _define_PRESUTIL_SET_BINARY_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,c_char_p_no,UInt32,POINTER(c_char_p_no),POINTER(UInt32))
def _define_PRESUTIL_SET_DWORD_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt32,POINTER(UInt32))
def _define_PRESUTIL_SET_EXPAND_SZ_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))
def _define_PRESUTIL_SET_MULTI_SZ_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.Foundation.PWSTR),POINTER(UInt32))
def _define_PRESUTIL_SET_PRIVATE_PROPERTY_LIST():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,c_void_p,UInt32)
def _define_PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,c_char_p_no,c_void_p,UInt32,c_char_p_no)
def _define_PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,c_char_p_no,c_void_p,UInt32,win32more.Foundation.BOOL,c_char_p_no)
def _define_PRESUTIL_SET_PROPERTY_TABLE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,win32more.Foundation.BOOL,c_void_p,UInt32,c_char_p_no)
def _define_PRESUTIL_SET_PROPERTY_TABLE_EX():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,win32more.Foundation.BOOL,c_void_p,UInt32,win32more.Foundation.BOOL,c_char_p_no)
def _define_PRESUTIL_SET_QWORD_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,UInt64,POINTER(UInt64))
def _define_PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(win32more.Networking.Clustering._HRESOURCE_head),win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)
def _define_PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Security.SC_HANDLE,POINTER(IntPtr),win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)
def _define_PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS_EX():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,win32more.Security.SC_HANDLE,POINTER(IntPtr),UInt32,win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)
def _define_PRESUTIL_SET_SZ_VALUE():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,win32more.Foundation.PWSTR,win32more.Foundation.PWSTR,POINTER(win32more.Foundation.PWSTR))
def _define_PRESUTIL_SET_UNKNOWN_PROPERTIES():
    return WINFUNCTYPE(UInt32,win32more.System.Registry.HKEY,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,UInt32)
def _define_PRESUTIL_START_RESOURCE_SERVICE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,POINTER(IntPtr))
def _define_PRESUTIL_STOP_RESOURCE_SERVICE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)
def _define_PRESUTIL_STOP_SERVICE():
    return WINFUNCTYPE(UInt32,win32more.Security.SC_HANDLE)
def _define_PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL():
    return WINFUNCTYPE(UInt32,UInt32,win32more.Foundation.BOOL,POINTER(UInt32),win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,IntPtr)
def _define_PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST():
    return WINFUNCTYPE(UInt32,c_void_p,UInt32)
def _define_PRESUTIL_VERIFY_PROPERTY_TABLE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head),c_void_p,win32more.Foundation.BOOL,c_void_p,UInt32,c_char_p_no)
def _define_PRESUTIL_VERIFY_RESOURCE_SERVICE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR)
def _define_PRESUTIL_VERIFY_SERVICE():
    return WINFUNCTYPE(UInt32,win32more.Security.SC_HANDLE)
def _define_PSET_INTERNAL_STATE():
    return WINFUNCTYPE(UInt32,IntPtr,win32more.Networking.Clustering.CLUSTER_RESOURCE_APPLICATION_STATE,win32more.Foundation.BOOL)
def _define_PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE():
    return WINFUNCTYPE(UInt32,IntPtr,c_char_p_no,UInt32)
def _define_PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE():
    return WINFUNCTYPE(UInt32,IntPtr,win32more.Foundation.BOOL,UInt32,UInt32)
def _define_PSET_RESOURCE_LOCKED_MODE_ROUTINE():
    return WINFUNCTYPE(UInt32,IntPtr,win32more.Foundation.BOOL,UInt32)
def _define_PSET_RESOURCE_STATUS_ROUTINE():
    return WINFUNCTYPE(UInt32,IntPtr,POINTER(win32more.Networking.Clustering.RESOURCE_STATUS_head))
def _define_PSET_RESOURCE_STATUS_ROUTINE_EX():
    return WINFUNCTYPE(UInt32,IntPtr,POINTER(win32more.Networking.Clustering.RESOURCE_STATUS_EX_head))
def _define_PSIGNAL_FAILURE_ROUTINE():
    return WINFUNCTYPE(UInt32,IntPtr,win32more.Networking.Clustering.FAILURE_TYPE,UInt32)
def _define_PSTARTUP_EX_ROUTINE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,UInt32,UInt32,POINTER(win32more.Networking.Clustering.CLRES_CALLBACK_FUNCTION_TABLE_head),POINTER(POINTER(win32more.Networking.Clustering.CLRES_FUNCTION_TABLE_head)))
def _define_PSTARTUP_ROUTINE():
    return WINFUNCTYPE(UInt32,win32more.Foundation.PWSTR,UInt32,UInt32,win32more.Networking.Clustering.PSET_RESOURCE_STATUS_ROUTINE,win32more.Networking.Clustering.PLOG_EVENT_ROUTINE,POINTER(POINTER(win32more.Networking.Clustering.CLRES_FUNCTION_TABLE_head)))
def _define_PTERMINATE_ROUTINE():
    return WINFUNCTYPE(Void,c_void_p)
def _define_PWORKER_START_ROUTINE():
    return WINFUNCTYPE(UInt32,POINTER(win32more.Networking.Clustering.CLUS_WORKER_head),c_void_p)
RESDLL_CONTEXT_OPERATION_TYPE = Int32
RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeFailback = 0
RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeDrain = 1
RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeDrainFailure = 2
RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeEmbeddedFailure = 3
RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypePreemption = 4
RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeNetworkDisconnect = 5
RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeNetworkDisconnectMoveRetry = 6
RESOURCE_EXIT_STATE = Int32
RESOURCE_EXIT_STATE_ResourceExitStateContinue = 0
RESOURCE_EXIT_STATE_ResourceExitStateTerminate = 1
RESOURCE_EXIT_STATE_ResourceExitStateMax = 2
def _define_RESOURCE_FAILURE_INFO_head():
    class RESOURCE_FAILURE_INFO(Structure):
        pass
    return RESOURCE_FAILURE_INFO
def _define_RESOURCE_FAILURE_INFO():
    RESOURCE_FAILURE_INFO = win32more.Networking.Clustering.RESOURCE_FAILURE_INFO_head
    RESOURCE_FAILURE_INFO._fields_ = [
        ('dwRestartAttemptsRemaining', UInt32),
        ('dwRestartPeriodRemaining', UInt32),
    ]
    return RESOURCE_FAILURE_INFO
def _define_RESOURCE_FAILURE_INFO_BUFFER_head():
    class RESOURCE_FAILURE_INFO_BUFFER(Structure):
        pass
    return RESOURCE_FAILURE_INFO_BUFFER
def _define_RESOURCE_FAILURE_INFO_BUFFER():
    RESOURCE_FAILURE_INFO_BUFFER = win32more.Networking.Clustering.RESOURCE_FAILURE_INFO_BUFFER_head
    RESOURCE_FAILURE_INFO_BUFFER._fields_ = [
        ('dwVersion', UInt32),
        ('Info', win32more.Networking.Clustering.RESOURCE_FAILURE_INFO),
    ]
    return RESOURCE_FAILURE_INFO_BUFFER
RESOURCE_MONITOR_STATE = Int32
RESOURCE_MONITOR_STATE_RmonInitializing = 0
RESOURCE_MONITOR_STATE_RmonIdle = 1
RESOURCE_MONITOR_STATE_RmonStartingResource = 2
RESOURCE_MONITOR_STATE_RmonInitializingResource = 3
RESOURCE_MONITOR_STATE_RmonOnlineResource = 4
RESOURCE_MONITOR_STATE_RmonOfflineResource = 5
RESOURCE_MONITOR_STATE_RmonShutdownResource = 6
RESOURCE_MONITOR_STATE_RmonDeletingResource = 7
RESOURCE_MONITOR_STATE_RmonIsAlivePoll = 8
RESOURCE_MONITOR_STATE_RmonLooksAlivePoll = 9
RESOURCE_MONITOR_STATE_RmonArbitrateResource = 10
RESOURCE_MONITOR_STATE_RmonReleaseResource = 11
RESOURCE_MONITOR_STATE_RmonResourceControl = 12
RESOURCE_MONITOR_STATE_RmonResourceTypeControl = 13
RESOURCE_MONITOR_STATE_RmonTerminateResource = 14
RESOURCE_MONITOR_STATE_RmonDeadlocked = 15
def _define_RESOURCE_STATUS_head():
    class RESOURCE_STATUS(Structure):
        pass
    return RESOURCE_STATUS
def _define_RESOURCE_STATUS():
    RESOURCE_STATUS = win32more.Networking.Clustering.RESOURCE_STATUS_head
    RESOURCE_STATUS._fields_ = [
        ('ResourceState', win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE),
        ('CheckPoint', UInt32),
        ('WaitHint', UInt32),
        ('EventHandle', win32more.Foundation.HANDLE),
    ]
    return RESOURCE_STATUS
def _define_RESOURCE_STATUS_EX_head():
    class RESOURCE_STATUS_EX(Structure):
        pass
    return RESOURCE_STATUS_EX
def _define_RESOURCE_STATUS_EX():
    RESOURCE_STATUS_EX = win32more.Networking.Clustering.RESOURCE_STATUS_EX_head
    RESOURCE_STATUS_EX._fields_ = [
        ('ResourceState', win32more.Networking.Clustering.CLUSTER_RESOURCE_STATE),
        ('CheckPoint', UInt32),
        ('EventHandle', win32more.Foundation.HANDLE),
        ('ApplicationSpecificErrorCode', UInt32),
        ('Flags', UInt32),
        ('WaitHint', UInt32),
    ]
    return RESOURCE_STATUS_EX
def _define_RESOURCE_TERMINAL_FAILURE_INFO_BUFFER_head():
    class RESOURCE_TERMINAL_FAILURE_INFO_BUFFER(Structure):
        pass
    return RESOURCE_TERMINAL_FAILURE_INFO_BUFFER
def _define_RESOURCE_TERMINAL_FAILURE_INFO_BUFFER():
    RESOURCE_TERMINAL_FAILURE_INFO_BUFFER = win32more.Networking.Clustering.RESOURCE_TERMINAL_FAILURE_INFO_BUFFER_head
    RESOURCE_TERMINAL_FAILURE_INFO_BUFFER._fields_ = [
        ('isTerminalFailure', win32more.Foundation.BOOL),
        ('restartPeriodRemaining', UInt32),
    ]
    return RESOURCE_TERMINAL_FAILURE_INFO_BUFFER
def _define_ResourceUtilizationInfoElement_head():
    class ResourceUtilizationInfoElement(Structure):
        pass
    return ResourceUtilizationInfoElement
def _define_ResourceUtilizationInfoElement():
    ResourceUtilizationInfoElement = win32more.Networking.Clustering.ResourceUtilizationInfoElement_head
    ResourceUtilizationInfoElement._fields_ = [
        ('PhysicalNumaId', UInt64),
        ('CurrentMemory', UInt64),
    ]
    return ResourceUtilizationInfoElement
def _define_RESUTIL_FILETIME_DATA_head():
    class RESUTIL_FILETIME_DATA(Structure):
        pass
    return RESUTIL_FILETIME_DATA
def _define_RESUTIL_FILETIME_DATA():
    RESUTIL_FILETIME_DATA = win32more.Networking.Clustering.RESUTIL_FILETIME_DATA_head
    RESUTIL_FILETIME_DATA._fields_ = [
        ('Default', win32more.Foundation.FILETIME),
        ('Minimum', win32more.Foundation.FILETIME),
        ('Maximum', win32more.Foundation.FILETIME),
    ]
    return RESUTIL_FILETIME_DATA
def _define_RESUTIL_LARGEINT_DATA_head():
    class RESUTIL_LARGEINT_DATA(Structure):
        pass
    return RESUTIL_LARGEINT_DATA
def _define_RESUTIL_LARGEINT_DATA():
    RESUTIL_LARGEINT_DATA = win32more.Networking.Clustering.RESUTIL_LARGEINT_DATA_head
    RESUTIL_LARGEINT_DATA._fields_ = [
        ('Default', win32more.Foundation.LARGE_INTEGER),
        ('Minimum', win32more.Foundation.LARGE_INTEGER),
        ('Maximum', win32more.Foundation.LARGE_INTEGER),
    ]
    return RESUTIL_LARGEINT_DATA
def _define_RESUTIL_PROPERTY_ITEM_head():
    class RESUTIL_PROPERTY_ITEM(Structure):
        pass
    return RESUTIL_PROPERTY_ITEM
def _define_RESUTIL_PROPERTY_ITEM():
    RESUTIL_PROPERTY_ITEM = win32more.Networking.Clustering.RESUTIL_PROPERTY_ITEM_head
    class RESUTIL_PROPERTY_ITEM__Anonymous_e__Union(Union):
        pass
    RESUTIL_PROPERTY_ITEM__Anonymous_e__Union._fields_ = [
        ('DefaultPtr', UIntPtr),
        ('Default', UInt32),
        ('lpDefault', c_void_p),
        ('LargeIntData', POINTER(win32more.Networking.Clustering.RESUTIL_LARGEINT_DATA_head)),
        ('ULargeIntData', POINTER(win32more.Networking.Clustering.RESUTIL_ULARGEINT_DATA_head)),
        ('FileTimeData', POINTER(win32more.Networking.Clustering.RESUTIL_FILETIME_DATA_head)),
    ]
    RESUTIL_PROPERTY_ITEM._anonymous_ = [
        'Anonymous',
    ]
    RESUTIL_PROPERTY_ITEM._fields_ = [
        ('Name', win32more.Foundation.PWSTR),
        ('KeyName', win32more.Foundation.PWSTR),
        ('Format', UInt32),
        ('Anonymous', RESUTIL_PROPERTY_ITEM__Anonymous_e__Union),
        ('Minimum', UInt32),
        ('Maximum', UInt32),
        ('Flags', UInt32),
        ('Offset', UInt32),
    ]
    return RESUTIL_PROPERTY_ITEM
def _define_RESUTIL_ULARGEINT_DATA_head():
    class RESUTIL_ULARGEINT_DATA(Structure):
        pass
    return RESUTIL_ULARGEINT_DATA
def _define_RESUTIL_ULARGEINT_DATA():
    RESUTIL_ULARGEINT_DATA = win32more.Networking.Clustering.RESUTIL_ULARGEINT_DATA_head
    RESUTIL_ULARGEINT_DATA._fields_ = [
        ('Default', win32more.Foundation.ULARGE_INTEGER),
        ('Minimum', win32more.Foundation.ULARGE_INTEGER),
        ('Maximum', win32more.Foundation.ULARGE_INTEGER),
    ]
    return RESUTIL_ULARGEINT_DATA
def _define_SET_APP_INSTANCE_CSV_FLAGS():
    return WINFUNCTYPE(UInt32,win32more.Foundation.HANDLE,UInt32,UInt32)
SR_DISK_REPLICATION_ELIGIBLE = Int32
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleNone = 0
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleYes = 1
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleOffline = 2
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleNotGpt = 3
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligiblePartitionLayoutMismatch = 4
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleInsufficientFreeSpace = 5
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleNotInSameSite = 6
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleInSameSite = 7
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleFileSystemNotSupported = 8
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleAlreadyInReplication = 9
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleSameAsSpecifiedDisk = 10
SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleOther = 9999
SR_REPLICATED_DISK_TYPE = Int32
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeNone = 0
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeSource = 1
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeLogSource = 2
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeDestination = 3
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeLogDestination = 4
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeNotInParthership = 5
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeLogNotInParthership = 6
SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeOther = 7
def _define_SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_head():
    class SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP(Structure):
        pass
    return SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP
def _define_SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP():
    SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP = win32more.Networking.Clustering.SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_head
    SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP._fields_ = [
        ('ReplicationGroupName', Char * 260),
        ('Description', Char * 260),
        ('LogPath', Char * 260),
        ('MaxLogSizeInBytes', UInt64),
        ('LogType', UInt16),
        ('ReplicationMode', UInt32),
        ('MinimumPartnersInSync', UInt32),
        ('EnableWriteConsistency', win32more.Foundation.BOOLEAN),
        ('EnableEncryption', win32more.Foundation.BOOLEAN),
        ('CertificateThumbprint', Char * 260),
        ('VolumeNameCount', UInt32),
        ('VolumeNames', Char * 260),
    ]
    return SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP
def _define_SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT_head():
    class SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT(Structure):
        pass
    return SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT
def _define_SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT():
    SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT = win32more.Networking.Clustering.SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT_head
    SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT._fields_ = [
        ('Result', UInt32),
        ('ErrorString', Char * 260),
    ]
    return SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT
def _define_SR_RESOURCE_TYPE_DISK_INFO_head():
    class SR_RESOURCE_TYPE_DISK_INFO(Structure):
        pass
    return SR_RESOURCE_TYPE_DISK_INFO
def _define_SR_RESOURCE_TYPE_DISK_INFO():
    SR_RESOURCE_TYPE_DISK_INFO = win32more.Networking.Clustering.SR_RESOURCE_TYPE_DISK_INFO_head
    SR_RESOURCE_TYPE_DISK_INFO._fields_ = [
        ('Reason', win32more.Networking.Clustering.SR_DISK_REPLICATION_ELIGIBLE),
        ('DiskGuid', Guid),
    ]
    return SR_RESOURCE_TYPE_DISK_INFO
def _define_SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT_head():
    class SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT(Structure):
        pass
    return SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT
def _define_SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT():
    SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT = win32more.Networking.Clustering.SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT_head
    SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT._fields_ = [
        ('Count', UInt16),
        ('DiskInfo', win32more.Networking.Clustering.SR_RESOURCE_TYPE_DISK_INFO * 1),
    ]
    return SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT
def _define_SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS_head():
    class SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS(Structure):
        pass
    return SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS
def _define_SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS():
    SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS = win32more.Networking.Clustering.SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS_head
    SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS._fields_ = [
        ('DataDiskGuid', Guid),
        ('IncludeOfflineDisks', win32more.Foundation.BOOLEAN),
    ]
    return SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS
def _define_SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS_head():
    class SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS(Structure):
        pass
    return SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS
def _define_SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS():
    SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS = win32more.Networking.Clustering.SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS_head
    SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS._fields_ = [
        ('DataDiskGuid', Guid),
        ('IncludeAvailableStoargeDisks', win32more.Foundation.BOOLEAN),
    ]
    return SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS
def _define_SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS_head():
    class SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS(Structure):
        pass
    return SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS
def _define_SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS():
    SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS = win32more.Networking.Clustering.SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS_head
    SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS._fields_ = [
        ('SourceDataDiskGuid', Guid),
        ('TargetReplicationGroupGuid', Guid),
        ('SkipConnectivityCheck', win32more.Foundation.BOOLEAN),
        ('IncludeOfflineDisks', win32more.Foundation.BOOLEAN),
    ]
    return SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS
def _define_SR_RESOURCE_TYPE_REPLICATED_DISK_head():
    class SR_RESOURCE_TYPE_REPLICATED_DISK(Structure):
        pass
    return SR_RESOURCE_TYPE_REPLICATED_DISK
def _define_SR_RESOURCE_TYPE_REPLICATED_DISK():
    SR_RESOURCE_TYPE_REPLICATED_DISK = win32more.Networking.Clustering.SR_RESOURCE_TYPE_REPLICATED_DISK_head
    SR_RESOURCE_TYPE_REPLICATED_DISK._fields_ = [
        ('Type', win32more.Networking.Clustering.SR_REPLICATED_DISK_TYPE),
        ('ClusterDiskResourceGuid', Guid),
        ('ReplicationGroupId', Guid),
        ('ReplicationGroupName', Char * 260),
    ]
    return SR_RESOURCE_TYPE_REPLICATED_DISK
def _define_SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT_head():
    class SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT(Structure):
        pass
    return SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT
def _define_SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT():
    SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT = win32more.Networking.Clustering.SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT_head
    SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT._fields_ = [
        ('Count', UInt16),
        ('ReplicatedDisks', win32more.Networking.Clustering.SR_RESOURCE_TYPE_REPLICATED_DISK * 1),
    ]
    return SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT
def _define_SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY_head():
    class SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY(Structure):
        pass
    return SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY
def _define_SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY():
    SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY = win32more.Networking.Clustering.SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY_head
    SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY._fields_ = [
        ('Count', UInt32),
        ('PartitionArray', win32more.Networking.Clustering.SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO * 1),
    ]
    return SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY
def _define_SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO_head():
    class SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO(Structure):
        pass
    return SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO
def _define_SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO():
    SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO = win32more.Networking.Clustering.SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO_head
    SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO._fields_ = [
        ('PartitionOffset', UInt64),
        ('Capabilities', UInt32),
    ]
    return SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO
VM_RESDLL_CONTEXT = Int32
VM_RESDLL_CONTEXT_VmResdllContextTurnOff = 0
VM_RESDLL_CONTEXT_VmResdllContextSave = 1
VM_RESDLL_CONTEXT_VmResdllContextShutdown = 2
VM_RESDLL_CONTEXT_VmResdllContextShutdownForce = 3
VM_RESDLL_CONTEXT_VmResdllContextLiveMigration = 4
def _define_WitnessTagHelper_head():
    class WitnessTagHelper(Structure):
        pass
    return WitnessTagHelper
def _define_WitnessTagHelper():
    WitnessTagHelper = win32more.Networking.Clustering.WitnessTagHelper_head
    WitnessTagHelper._fields_ = [
        ('Version', Int32),
        ('paxosToValidate', win32more.Networking.Clustering.PaxosTagCStruct),
    ]
    return WitnessTagHelper
def _define_WitnessTagUpdateHelper_head():
    class WitnessTagUpdateHelper(Structure):
        pass
    return WitnessTagUpdateHelper
def _define_WitnessTagUpdateHelper():
    WitnessTagUpdateHelper = win32more.Networking.Clustering.WitnessTagUpdateHelper_head
    WitnessTagUpdateHelper._fields_ = [
        ('Version', Int32),
        ('paxosToSet', win32more.Networking.Clustering.PaxosTagCStruct),
        ('paxosToValidate', win32more.Networking.Clustering.PaxosTagCStruct),
    ]
    return WitnessTagUpdateHelper
__all__ = [
    "AddClusterGroupDependency",
    "AddClusterGroupSetDependency",
    "AddClusterGroupToGroupSetDependency",
    "AddClusterNode",
    "AddClusterNodeEx",
    "AddClusterResourceDependency",
    "AddClusterResourceNode",
    "AddClusterStorageNode",
    "AddCrossClusterGroupSetDependency",
    "AddResourceToClusterSharedVolumes",
    "BackupClusterDatabase",
    "BitLockerDecrypted",
    "BitLockerDecrypting",
    "BitLockerEnabled",
    "BitLockerPaused",
    "BitLockerStopped",
    "BitlockerEncrypted",
    "BitlockerEncrypting",
    "CA_UPGRADE_VERSION",
    "CLCTL_ADD_CRYPTO_CHECKPOINT",
    "CLCTL_ADD_CRYPTO_CHECKPOINT_EX",
    "CLCTL_ADD_DEPENDENCY",
    "CLCTL_ADD_OWNER",
    "CLCTL_ADD_REGISTRY_CHECKPOINT",
    "CLCTL_ADD_REGISTRY_CHECKPOINT_32BIT",
    "CLCTL_ADD_REGISTRY_CHECKPOINT_64BIT",
    "CLCTL_BATCH_BLOCK_KEY",
    "CLCTL_BATCH_UNBLOCK_KEY",
    "CLCTL_BLOCK_GEM_SEND_RECV",
    "CLCTL_CHECK_DRAIN_VETO",
    "CLCTL_CHECK_VOTER_DOWN",
    "CLCTL_CHECK_VOTER_EVICT",
    "CLCTL_CLEAR_NODE_CONNECTION_INFO",
    "CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS",
    "CLCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY",
    "CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY",
    "CLCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN",
    "CLCTL_CLUSTER_BASE",
    "CLCTL_CLUSTER_NAME_CHANGED",
    "CLCTL_CLUSTER_VERSION_CHANGED",
    "CLCTL_CODES",
    "CLCTL_DELETE",
    "CLCTL_DELETE_CRYPTO_CHECKPOINT",
    "CLCTL_DELETE_REGISTRY_CHECKPOINT",
    "CLCTL_DISABLE_SHARED_VOLUME_DIRECTIO",
    "CLCTL_ENABLE_SHARED_VOLUME_DIRECTIO",
    "CLCTL_ENUM_AFFINITY_RULE_NAMES",
    "CLCTL_ENUM_COMMON_PROPERTIES",
    "CLCTL_ENUM_PRIVATE_PROPERTIES",
    "CLCTL_EVICT_NODE",
    "CLCTL_FILESERVER_SHARE_ADD",
    "CLCTL_FILESERVER_SHARE_DEL",
    "CLCTL_FILESERVER_SHARE_MODIFY",
    "CLCTL_FILESERVER_SHARE_REPORT",
    "CLCTL_FIXUP_ON_UPGRADE",
    "CLCTL_FORCE_DB_FLUSH",
    "CLCTL_FORCE_QUORUM",
    "CLCTL_FSWITNESS_GET_EPOCH_INFO",
    "CLCTL_FSWITNESS_RELEASE_LOCK",
    "CLCTL_FSWITNESS_SET_EPOCH_INFO",
    "CLCTL_GET_ARB_TIMEOUT",
    "CLCTL_GET_CHARACTERISTICS",
    "CLCTL_GET_CLASS_INFO",
    "CLCTL_GET_CLUSDB_TIMESTAMP",
    "CLCTL_GET_CLUSTER_SERVICE_ACCOUNT_NAME",
    "CLCTL_GET_COMMON_PROPERTIES",
    "CLCTL_GET_COMMON_PROPERTY_FMTS",
    "CLCTL_GET_COMMON_RESOURCE_PROPERTY_FMTS",
    "CLCTL_GET_CRYPTO_CHECKPOINTS",
    "CLCTL_GET_DNS_NAME",
    "CLCTL_GET_FAILURE_INFO",
    "CLCTL_GET_FLAGS",
    "CLCTL_GET_FQDN",
    "CLCTL_GET_GEMID_VECTOR",
    "CLCTL_GET_GUM_LOCK_OWNER",
    "CLCTL_GET_ID",
    "CLCTL_GET_INFRASTRUCTURE_SOFS_BUFFER",
    "CLCTL_GET_LOADBAL_PROCESS_LIST",
    "CLCTL_GET_NAME",
    "CLCTL_GET_NETWORK",
    "CLCTL_GET_NETWORK_NAME",
    "CLCTL_GET_NODE",
    "CLCTL_GET_NODES_IN_FD",
    "CLCTL_GET_OPERATION_CONTEXT",
    "CLCTL_GET_PRIVATE_PROPERTIES",
    "CLCTL_GET_PRIVATE_PROPERTY_FMTS",
    "CLCTL_GET_PRIVATE_RESOURCE_PROPERTY_FMTS",
    "CLCTL_GET_REGISTRY_CHECKPOINTS",
    "CLCTL_GET_REQUIRED_DEPENDENCIES",
    "CLCTL_GET_RESOURCE_TYPE",
    "CLCTL_GET_RO_COMMON_PROPERTIES",
    "CLCTL_GET_RO_PRIVATE_PROPERTIES",
    "CLCTL_GET_SHARED_VOLUME_ID",
    "CLCTL_GET_STATE_CHANGE_TIME",
    "CLCTL_GET_STORAGE_CONFIGURATION",
    "CLCTL_GET_STORAGE_CONFIG_ATTRIBUTES",
    "CLCTL_GET_STUCK_NODES",
    "CLCTL_GLOBAL_SHIFT",
    "CLCTL_GROUPSET_GET_GROUPS",
    "CLCTL_GROUPSET_GET_PROVIDER_GROUPS",
    "CLCTL_GROUPSET_GET_PROVIDER_GROUPSETS",
    "CLCTL_GROUP_GET_LAST_MOVE_TIME",
    "CLCTL_GROUP_GET_PROVIDER_GROUPS",
    "CLCTL_GROUP_GET_PROVIDER_GROUPSETS",
    "CLCTL_GROUP_SET_CCF_FROM_MASTER",
    "CLCTL_HOLD_IO",
    "CLCTL_INITIALIZE",
    "CLCTL_INJECT_GEM_FAULT",
    "CLCTL_INSTALL_NODE",
    "CLCTL_INTERNAL_SHIFT",
    "CLCTL_INTRODUCE_GEM_REPAIR_DELAY",
    "CLCTL_IPADDRESS_RELEASE_LEASE",
    "CLCTL_IPADDRESS_RENEW_LEASE",
    "CLCTL_IS_FEATURE_INSTALLED",
    "CLCTL_IS_QUORUM_BLOCKED",
    "CLCTL_IS_S2D_FEATURE_SUPPORTED",
    "CLCTL_JOINING_GROUP",
    "CLCTL_LEAVING_GROUP",
    "CLCTL_MODIFY_SHIFT",
    "CLCTL_NETNAME_CREDS_NOTIFYCAM",
    "CLCTL_NETNAME_DELETE_CO",
    "CLCTL_NETNAME_GET_OU_FOR_VCO",
    "CLCTL_NETNAME_GET_VIRTUAL_SERVER_TOKEN",
    "CLCTL_NETNAME_REGISTER_DNS_RECORDS",
    "CLCTL_NETNAME_REPAIR_VCO",
    "CLCTL_NETNAME_RESET_VCO",
    "CLCTL_NETNAME_SET_PWD_INFO",
    "CLCTL_NETNAME_SET_PWD_INFOEX",
    "CLCTL_NETNAME_VALIDATE_VCO",
    "CLCTL_NOTIFY_DRAIN_COMPLETE",
    "CLCTL_NOTIFY_INFRASTRUCTURE_SOFS_CHANGED",
    "CLCTL_NOTIFY_MONITOR_SHUTTING_DOWN",
    "CLCTL_NOTIFY_OWNER_CHANGE",
    "CLCTL_NOTIFY_QUORUM_STATUS",
    "CLCTL_POOL_GET_DRIVE_INFO",
    "CLCTL_PROVIDER_STATE_CHANGE",
    "CLCTL_QUERY_DELETE",
    "CLCTL_QUERY_MAINTENANCE_MODE",
    "CLCTL_RELOAD_AUTOLOGGER_CONFIG",
    "CLCTL_REMOVE_DEPENDENCY",
    "CLCTL_REMOVE_NODE",
    "CLCTL_REMOVE_OWNER",
    "CLCTL_REPLICATION_ADD_REPLICATION_GROUP",
    "CLCTL_REPLICATION_GET_ELIGIBLE_LOGDISKS",
    "CLCTL_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS",
    "CLCTL_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS",
    "CLCTL_REPLICATION_GET_LOG_INFO",
    "CLCTL_REPLICATION_GET_LOG_VOLUME",
    "CLCTL_REPLICATION_GET_REPLICATED_DISKS",
    "CLCTL_REPLICATION_GET_REPLICATED_PARTITION_INFO",
    "CLCTL_REPLICATION_GET_REPLICA_VOLUMES",
    "CLCTL_REPLICATION_GET_RESOURCE_GROUP",
    "CLCTL_RESOURCE_PREPARE_UPGRADE",
    "CLCTL_RESOURCE_UPGRADE_COMPLETED",
    "CLCTL_RESOURCE_UPGRADE_DLL",
    "CLCTL_RESUME_IO",
    "CLCTL_RW_MODIFY_NOOP",
    "CLCTL_SCALEOUT_COMMAND",
    "CLCTL_SCALEOUT_CONTROL",
    "CLCTL_SCALEOUT_GET_CLUSTERS",
    "CLCTL_SEND_DUMMY_GEM_MESSAGES",
    "CLCTL_SET_ACCOUNT_ACCESS",
    "CLCTL_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES",
    "CLCTL_SET_CLUSTER_S2D_ENABLED",
    "CLCTL_SET_COMMON_PROPERTIES",
    "CLCTL_SET_CSV_MAINTENANCE_MODE",
    "CLCTL_SET_DNS_DOMAIN",
    "CLCTL_SET_INFRASTRUCTURE_SOFS_BUFFER",
    "CLCTL_SET_MAINTENANCE_MODE",
    "CLCTL_SET_NAME",
    "CLCTL_SET_PRIVATE_PROPERTIES",
    "CLCTL_SET_SHARED_VOLUME_BACKUP_MODE",
    "CLCTL_SET_STORAGE_CONFIGURATION",
    "CLCTL_SHUTDOWN",
    "CLCTL_STARTING_PHASE1",
    "CLCTL_STARTING_PHASE2",
    "CLCTL_STATE_CHANGE_REASON",
    "CLCTL_STORAGE_GET_AVAILABLE_DISKS",
    "CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX",
    "CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX2_INT",
    "CLCTL_STORAGE_GET_CLUSBFLT_PATHINFO",
    "CLCTL_STORAGE_GET_CLUSBFLT_PATHS",
    "CLCTL_STORAGE_GET_CLUSPORT_DISK_COUNT",
    "CLCTL_STORAGE_GET_DIRTY",
    "CLCTL_STORAGE_GET_DISKID",
    "CLCTL_STORAGE_GET_DISK_INFO",
    "CLCTL_STORAGE_GET_DISK_INFO_EX",
    "CLCTL_STORAGE_GET_DISK_INFO_EX2",
    "CLCTL_STORAGE_GET_DISK_NUMBER_INFO",
    "CLCTL_STORAGE_GET_DRIVELETTERS",
    "CLCTL_STORAGE_GET_MOUNTPOINTS",
    "CLCTL_STORAGE_GET_PHYSICAL_DISK_INFO",
    "CLCTL_STORAGE_GET_RESOURCEID",
    "CLCTL_STORAGE_GET_SHARED_VOLUME_INFO",
    "CLCTL_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES",
    "CLCTL_STORAGE_GET_SHARED_VOLUME_STATES",
    "CLCTL_STORAGE_IS_CLUSTERABLE",
    "CLCTL_STORAGE_IS_CSV_FILE",
    "CLCTL_STORAGE_IS_PATH_VALID",
    "CLCTL_STORAGE_IS_SHARED_VOLUME",
    "CLCTL_STORAGE_REMAP_DRIVELETTER",
    "CLCTL_STORAGE_REMOVE_VM_OWNERSHIP",
    "CLCTL_STORAGE_RENAME_SHARED_VOLUME",
    "CLCTL_STORAGE_RENAME_SHARED_VOLUME_GUID",
    "CLCTL_STORAGE_SET_DRIVELETTER",
    "CLCTL_STORAGE_SYNC_CLUSDISK_DB",
    "CLCTL_UNDELETE",
    "CLCTL_UNKNOWN",
    "CLCTL_USER_SHIFT",
    "CLCTL_VALIDATE_CHANGE_GROUP",
    "CLCTL_VALIDATE_COMMON_PROPERTIES",
    "CLCTL_VALIDATE_DIRECTORY",
    "CLCTL_VALIDATE_NETNAME",
    "CLCTL_VALIDATE_PATH",
    "CLCTL_VALIDATE_PRIVATE_PROPERTIES",
    "CLOUD_WITNESS_CONTAINER_NAME",
    "CLRES_CALLBACK_FUNCTION_TABLE",
    "CLRES_FUNCTION_TABLE",
    "CLRES_V1_FUNCTIONS",
    "CLRES_V2_FUNCTIONS",
    "CLRES_V3_FUNCTIONS",
    "CLRES_V4_FUNCTIONS",
    "CLRES_VERSION_V1_00",
    "CLRES_VERSION_V2_00",
    "CLRES_VERSION_V3_00",
    "CLRES_VERSION_V4_00",
    "CLUADMEX_OBJECT_TYPE",
    "CLUADMEX_OT_CLUSTER",
    "CLUADMEX_OT_GROUP",
    "CLUADMEX_OT_NETINTERFACE",
    "CLUADMEX_OT_NETWORK",
    "CLUADMEX_OT_NODE",
    "CLUADMEX_OT_NONE",
    "CLUADMEX_OT_RESOURCE",
    "CLUADMEX_OT_RESOURCETYPE",
    "CLUSAPI_CHANGE_ACCESS",
    "CLUSAPI_CHANGE_RESOURCE_GROUP_FORCE_MOVE_TO_CSV",
    "CLUSAPI_GROUP_MOVE_FAILBACK",
    "CLUSAPI_GROUP_MOVE_HIGH_PRIORITY_START",
    "CLUSAPI_GROUP_MOVE_IGNORE_AFFINITY_RULE",
    "CLUSAPI_GROUP_MOVE_IGNORE_RESOURCE_STATUS",
    "CLUSAPI_GROUP_MOVE_QUEUE_ENABLED",
    "CLUSAPI_GROUP_MOVE_RETURN_TO_SOURCE_NODE_ON_ERROR",
    "CLUSAPI_GROUP_OFFLINE_IGNORE_RESOURCE_STATUS",
    "CLUSAPI_GROUP_ONLINE_BEST_POSSIBLE_NODE",
    "CLUSAPI_GROUP_ONLINE_IGNORE_AFFINITY_RULE",
    "CLUSAPI_GROUP_ONLINE_IGNORE_RESOURCE_STATUS",
    "CLUSAPI_GROUP_ONLINE_SYNCHRONOUS",
    "CLUSAPI_NODE_AVOID_PLACEMENT",
    "CLUSAPI_NODE_PAUSE_REMAIN_ON_PAUSED_NODE_ON_MOVE_ERROR",
    "CLUSAPI_NODE_PAUSE_RETRY_DRAIN_ON_FAILURE",
    "CLUSAPI_NO_ACCESS",
    "CLUSAPI_READ_ACCESS",
    "CLUSAPI_RESOURCE_OFFLINE_DO_NOT_UPDATE_PERSISTENT_STATE",
    "CLUSAPI_RESOURCE_OFFLINE_FORCE_WITH_TERMINATION",
    "CLUSAPI_RESOURCE_OFFLINE_IGNORE_RESOURCE_STATUS",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_BEING_DELETED",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_BEING_RESTARTED",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_MOVING",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_NONE",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_PREEMPTED",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_SHUTTING_DOWN",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_UNKNOWN",
    "CLUSAPI_RESOURCE_OFFLINE_REASON_USER_REQUESTED",
    "CLUSAPI_RESOURCE_ONLINE_BEST_POSSIBLE_NODE",
    "CLUSAPI_RESOURCE_ONLINE_DO_NOT_UPDATE_PERSISTENT_STATE",
    "CLUSAPI_RESOURCE_ONLINE_IGNORE_AFFINITY_RULE",
    "CLUSAPI_RESOURCE_ONLINE_IGNORE_RESOURCE_STATUS",
    "CLUSAPI_RESOURCE_ONLINE_NECESSARY_FOR_QUORUM",
    "CLUSAPI_VALID_CHANGE_RESOURCE_GROUP_FLAGS",
    "CLUSAPI_VERSION",
    "CLUSAPI_VERSION_RS3",
    "CLUSAPI_VERSION_SERVER2008",
    "CLUSAPI_VERSION_SERVER2008R2",
    "CLUSAPI_VERSION_WINDOWS8",
    "CLUSAPI_VERSION_WINDOWSBLUE",
    "CLUSAPI_VERSION_WINTHRESHOLD",
    "CLUSCTL_ACCESS_MODE_MASK",
    "CLUSCTL_ACCESS_SHIFT",
    "CLUSCTL_AFFINITYRULE_CODES",
    "CLUSCTL_AFFINITYRULE_GET_COMMON_PROPERTIES",
    "CLUSCTL_AFFINITYRULE_GET_GROUPNAMES",
    "CLUSCTL_AFFINITYRULE_GET_ID",
    "CLUSCTL_AFFINITYRULE_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_AFFINITYRULE_SET_COMMON_PROPERTIES",
    "CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS",
    "CLUSCTL_CLOUD_WITNESS_RESOURCE_TYPE_VALIDATE_CREDENTIALS_WITH_KEY",
    "CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_KEY",
    "CLUSCTL_CLOUD_WITNESS_RESOURCE_UPDATE_TOKEN",
    "CLUSCTL_CLUSTER_BATCH_BLOCK_KEY",
    "CLUSCTL_CLUSTER_BATCH_UNBLOCK_KEY",
    "CLUSCTL_CLUSTER_CHECK_VOTER_DOWN",
    "CLUSCTL_CLUSTER_CHECK_VOTER_EVICT",
    "CLUSCTL_CLUSTER_CLEAR_NODE_CONNECTION_INFO",
    "CLUSCTL_CLUSTER_CODES",
    "CLUSCTL_CLUSTER_ENUM_AFFINITY_RULE_NAMES",
    "CLUSCTL_CLUSTER_ENUM_COMMON_PROPERTIES",
    "CLUSCTL_CLUSTER_ENUM_PRIVATE_PROPERTIES",
    "CLUSCTL_CLUSTER_FORCE_FLUSH_DB",
    "CLUSCTL_CLUSTER_GET_CLMUSR_TOKEN",
    "CLUSCTL_CLUSTER_GET_CLUSDB_TIMESTAMP",
    "CLUSCTL_CLUSTER_GET_COMMON_PROPERTIES",
    "CLUSCTL_CLUSTER_GET_COMMON_PROPERTY_FMTS",
    "CLUSCTL_CLUSTER_GET_FQDN",
    "CLUSCTL_CLUSTER_GET_GUM_LOCK_OWNER",
    "CLUSCTL_CLUSTER_GET_NODES_IN_FD",
    "CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTIES",
    "CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTY_FMTS",
    "CLUSCTL_CLUSTER_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_CLUSTER_GET_RO_PRIVATE_PROPERTIES",
    "CLUSCTL_CLUSTER_GET_SHARED_VOLUME_ID",
    "CLUSCTL_CLUSTER_GET_STORAGE_CONFIGURATION",
    "CLUSCTL_CLUSTER_GET_STORAGE_CONFIG_ATTRIBUTES",
    "CLUSCTL_CLUSTER_RELOAD_AUTOLOGGER_CONFIG",
    "CLUSCTL_CLUSTER_REMOVE_NODE",
    "CLUSCTL_CLUSTER_SET_ACCOUNT_ACCESS",
    "CLUSCTL_CLUSTER_SET_CLUSTER_S2D_CACHE_METADATA_RESERVE_BYTES",
    "CLUSCTL_CLUSTER_SET_CLUSTER_S2D_ENABLED",
    "CLUSCTL_CLUSTER_SET_COMMON_PROPERTIES",
    "CLUSCTL_CLUSTER_SET_DNS_DOMAIN",
    "CLUSCTL_CLUSTER_SET_PRIVATE_PROPERTIES",
    "CLUSCTL_CLUSTER_SET_STORAGE_CONFIGURATION",
    "CLUSCTL_CLUSTER_SHUTDOWN",
    "CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME",
    "CLUSCTL_CLUSTER_STORAGE_RENAME_SHARED_VOLUME_GUID",
    "CLUSCTL_CLUSTER_UNKNOWN",
    "CLUSCTL_CLUSTER_VALIDATE_COMMON_PROPERTIES",
    "CLUSCTL_CLUSTER_VALIDATE_PRIVATE_PROPERTIES",
    "CLUSCTL_CONTROL_CODE_MASK",
    "CLUSCTL_FUNCTION_SHIFT",
    "CLUSCTL_GET_OPERATION_CONTEXT_PARAMS_VERSION_1",
    "CLUSCTL_GROUPSET_CODES",
    "CLUSCTL_GROUPSET_GET_COMMON_PROPERTIES",
    "CLUSCTL_GROUPSET_GET_GROUPS",
    "CLUSCTL_GROUPSET_GET_ID",
    "CLUSCTL_GROUPSET_GET_PROVIDER_GROUPS",
    "CLUSCTL_GROUPSET_GET_PROVIDER_GROUPSETS",
    "CLUSCTL_GROUPSET_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_GROUPSET_SET_COMMON_PROPERTIES",
    "CLUSCTL_GROUP_CODES",
    "CLUSCTL_GROUP_ENUM_COMMON_PROPERTIES",
    "CLUSCTL_GROUP_ENUM_PRIVATE_PROPERTIES",
    "CLUSCTL_GROUP_GET_CHARACTERISTICS",
    "CLUSCTL_GROUP_GET_COMMON_PROPERTIES",
    "CLUSCTL_GROUP_GET_COMMON_PROPERTY_FMTS",
    "CLUSCTL_GROUP_GET_FAILURE_INFO",
    "CLUSCTL_GROUP_GET_FLAGS",
    "CLUSCTL_GROUP_GET_ID",
    "CLUSCTL_GROUP_GET_LAST_MOVE_TIME",
    "CLUSCTL_GROUP_GET_LAST_MOVE_TIME_OUTPUT",
    "CLUSCTL_GROUP_GET_NAME",
    "CLUSCTL_GROUP_GET_PRIVATE_PROPERTIES",
    "CLUSCTL_GROUP_GET_PRIVATE_PROPERTY_FMTS",
    "CLUSCTL_GROUP_GET_PROVIDER_GROUPS",
    "CLUSCTL_GROUP_GET_PROVIDER_GROUPSETS",
    "CLUSCTL_GROUP_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_GROUP_GET_RO_PRIVATE_PROPERTIES",
    "CLUSCTL_GROUP_QUERY_DELETE",
    "CLUSCTL_GROUP_SET_CCF_FROM_MASTER",
    "CLUSCTL_GROUP_SET_COMMON_PROPERTIES",
    "CLUSCTL_GROUP_SET_PRIVATE_PROPERTIES",
    "CLUSCTL_GROUP_UNKNOWN",
    "CLUSCTL_GROUP_VALIDATE_COMMON_PROPERTIES",
    "CLUSCTL_GROUP_VALIDATE_PRIVATE_PROPERTIES",
    "CLUSCTL_NETINTERFACE_CODES",
    "CLUSCTL_NETINTERFACE_ENUM_COMMON_PROPERTIES",
    "CLUSCTL_NETINTERFACE_ENUM_PRIVATE_PROPERTIES",
    "CLUSCTL_NETINTERFACE_GET_CHARACTERISTICS",
    "CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTIES",
    "CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTY_FMTS",
    "CLUSCTL_NETINTERFACE_GET_FLAGS",
    "CLUSCTL_NETINTERFACE_GET_ID",
    "CLUSCTL_NETINTERFACE_GET_NAME",
    "CLUSCTL_NETINTERFACE_GET_NETWORK",
    "CLUSCTL_NETINTERFACE_GET_NODE",
    "CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTIES",
    "CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTY_FMTS",
    "CLUSCTL_NETINTERFACE_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_NETINTERFACE_GET_RO_PRIVATE_PROPERTIES",
    "CLUSCTL_NETINTERFACE_SET_COMMON_PROPERTIES",
    "CLUSCTL_NETINTERFACE_SET_PRIVATE_PROPERTIES",
    "CLUSCTL_NETINTERFACE_UNKNOWN",
    "CLUSCTL_NETINTERFACE_VALIDATE_COMMON_PROPERTIES",
    "CLUSCTL_NETINTERFACE_VALIDATE_PRIVATE_PROPERTIES",
    "CLUSCTL_NETWORK_CODES",
    "CLUSCTL_NETWORK_ENUM_COMMON_PROPERTIES",
    "CLUSCTL_NETWORK_ENUM_PRIVATE_PROPERTIES",
    "CLUSCTL_NETWORK_GET_CHARACTERISTICS",
    "CLUSCTL_NETWORK_GET_COMMON_PROPERTIES",
    "CLUSCTL_NETWORK_GET_COMMON_PROPERTY_FMTS",
    "CLUSCTL_NETWORK_GET_FLAGS",
    "CLUSCTL_NETWORK_GET_ID",
    "CLUSCTL_NETWORK_GET_NAME",
    "CLUSCTL_NETWORK_GET_PRIVATE_PROPERTIES",
    "CLUSCTL_NETWORK_GET_PRIVATE_PROPERTY_FMTS",
    "CLUSCTL_NETWORK_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_NETWORK_GET_RO_PRIVATE_PROPERTIES",
    "CLUSCTL_NETWORK_SET_COMMON_PROPERTIES",
    "CLUSCTL_NETWORK_SET_PRIVATE_PROPERTIES",
    "CLUSCTL_NETWORK_UNKNOWN",
    "CLUSCTL_NETWORK_VALIDATE_COMMON_PROPERTIES",
    "CLUSCTL_NETWORK_VALIDATE_PRIVATE_PROPERTIES",
    "CLUSCTL_NODE_BLOCK_GEM_SEND_RECV",
    "CLUSCTL_NODE_CODES",
    "CLUSCTL_NODE_ENUM_COMMON_PROPERTIES",
    "CLUSCTL_NODE_ENUM_PRIVATE_PROPERTIES",
    "CLUSCTL_NODE_GET_CHARACTERISTICS",
    "CLUSCTL_NODE_GET_CLUSTER_SERVICE_ACCOUNT_NAME",
    "CLUSCTL_NODE_GET_COMMON_PROPERTIES",
    "CLUSCTL_NODE_GET_COMMON_PROPERTY_FMTS",
    "CLUSCTL_NODE_GET_FLAGS",
    "CLUSCTL_NODE_GET_GEMID_VECTOR",
    "CLUSCTL_NODE_GET_ID",
    "CLUSCTL_NODE_GET_NAME",
    "CLUSCTL_NODE_GET_PRIVATE_PROPERTIES",
    "CLUSCTL_NODE_GET_PRIVATE_PROPERTY_FMTS",
    "CLUSCTL_NODE_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_NODE_GET_RO_PRIVATE_PROPERTIES",
    "CLUSCTL_NODE_GET_STUCK_NODES",
    "CLUSCTL_NODE_INJECT_GEM_FAULT",
    "CLUSCTL_NODE_INTRODUCE_GEM_REPAIR_DELAY",
    "CLUSCTL_NODE_SEND_DUMMY_GEM_MESSAGES",
    "CLUSCTL_NODE_SET_COMMON_PROPERTIES",
    "CLUSCTL_NODE_SET_PRIVATE_PROPERTIES",
    "CLUSCTL_NODE_UNKNOWN",
    "CLUSCTL_NODE_VALIDATE_COMMON_PROPERTIES",
    "CLUSCTL_NODE_VALIDATE_PRIVATE_PROPERTIES",
    "CLUSCTL_OBJECT_MASK",
    "CLUSCTL_OBJECT_SHIFT",
    "CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT",
    "CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT_EX",
    "CLUSCTL_RESOURCE_ADD_DEPENDENCY",
    "CLUSCTL_RESOURCE_ADD_OWNER",
    "CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT",
    "CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_32BIT",
    "CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_64BIT",
    "CLUSCTL_RESOURCE_CHECK_DRAIN_VETO",
    "CLUSCTL_RESOURCE_CLUSTER_NAME_CHANGED",
    "CLUSCTL_RESOURCE_CLUSTER_VERSION_CHANGED",
    "CLUSCTL_RESOURCE_CODES",
    "CLUSCTL_RESOURCE_DELETE",
    "CLUSCTL_RESOURCE_DELETE_CRYPTO_CHECKPOINT",
    "CLUSCTL_RESOURCE_DELETE_REGISTRY_CHECKPOINT",
    "CLUSCTL_RESOURCE_DISABLE_SHARED_VOLUME_DIRECTIO",
    "CLUSCTL_RESOURCE_ENABLE_SHARED_VOLUME_DIRECTIO",
    "CLUSCTL_RESOURCE_ENUM_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_ENUM_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_EVICT_NODE",
    "CLUSCTL_RESOURCE_FORCE_QUORUM",
    "CLUSCTL_RESOURCE_FSWITNESS_GET_EPOCH_INFO",
    "CLUSCTL_RESOURCE_FSWITNESS_RELEASE_LOCK",
    "CLUSCTL_RESOURCE_FSWITNESS_SET_EPOCH_INFO",
    "CLUSCTL_RESOURCE_GET_CHARACTERISTICS",
    "CLUSCTL_RESOURCE_GET_CLASS_INFO",
    "CLUSCTL_RESOURCE_GET_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_GET_COMMON_PROPERTY_FMTS",
    "CLUSCTL_RESOURCE_GET_CRYPTO_CHECKPOINTS",
    "CLUSCTL_RESOURCE_GET_DNS_NAME",
    "CLUSCTL_RESOURCE_GET_FAILURE_INFO",
    "CLUSCTL_RESOURCE_GET_FLAGS",
    "CLUSCTL_RESOURCE_GET_ID",
    "CLUSCTL_RESOURCE_GET_INFRASTRUCTURE_SOFS_BUFFER",
    "CLUSCTL_RESOURCE_GET_LOADBAL_PROCESS_LIST",
    "CLUSCTL_RESOURCE_GET_NAME",
    "CLUSCTL_RESOURCE_GET_NETWORK_NAME",
    "CLUSCTL_RESOURCE_GET_NODES_IN_FD",
    "CLUSCTL_RESOURCE_GET_OPERATION_CONTEXT",
    "CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTY_FMTS",
    "CLUSCTL_RESOURCE_GET_REGISTRY_CHECKPOINTS",
    "CLUSCTL_RESOURCE_GET_REQUIRED_DEPENDENCIES",
    "CLUSCTL_RESOURCE_GET_RESOURCE_TYPE",
    "CLUSCTL_RESOURCE_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_GET_RO_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_GET_STATE_CHANGE_TIME",
    "CLUSCTL_RESOURCE_INITIALIZE",
    "CLUSCTL_RESOURCE_INSTALL_NODE",
    "CLUSCTL_RESOURCE_IPADDRESS_RELEASE_LEASE",
    "CLUSCTL_RESOURCE_IPADDRESS_RENEW_LEASE",
    "CLUSCTL_RESOURCE_IS_QUORUM_BLOCKED",
    "CLUSCTL_RESOURCE_JOINING_GROUP",
    "CLUSCTL_RESOURCE_LEAVING_GROUP",
    "CLUSCTL_RESOURCE_NETNAME_CREDS_NOTIFYCAM",
    "CLUSCTL_RESOURCE_NETNAME_DELETE_CO",
    "CLUSCTL_RESOURCE_NETNAME_GET_VIRTUAL_SERVER_TOKEN",
    "CLUSCTL_RESOURCE_NETNAME_REGISTER_DNS_RECORDS",
    "CLUSCTL_RESOURCE_NETNAME_REPAIR_VCO",
    "CLUSCTL_RESOURCE_NETNAME_RESET_VCO",
    "CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFO",
    "CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFOEX",
    "CLUSCTL_RESOURCE_NETNAME_VALIDATE_VCO",
    "CLUSCTL_RESOURCE_NOTIFY_DRAIN_COMPLETE",
    "CLUSCTL_RESOURCE_NOTIFY_OWNER_CHANGE",
    "CLUSCTL_RESOURCE_NOTIFY_QUORUM_STATUS",
    "CLUSCTL_RESOURCE_POOL_GET_DRIVE_INFO",
    "CLUSCTL_RESOURCE_PREPARE_UPGRADE",
    "CLUSCTL_RESOURCE_PROVIDER_STATE_CHANGE",
    "CLUSCTL_RESOURCE_QUERY_DELETE",
    "CLUSCTL_RESOURCE_QUERY_MAINTENANCE_MODE",
    "CLUSCTL_RESOURCE_REMOVE_DEPENDENCY",
    "CLUSCTL_RESOURCE_REMOVE_OWNER",
    "CLUSCTL_RESOURCE_RLUA_GET_VIRTUAL_SERVER_TOKEN",
    "CLUSCTL_RESOURCE_RLUA_SET_PWD_INFO",
    "CLUSCTL_RESOURCE_RLUA_SET_PWD_INFOEX",
    "CLUSCTL_RESOURCE_RW_MODIFY_NOOP",
    "CLUSCTL_RESOURCE_SCALEOUT_COMMAND",
    "CLUSCTL_RESOURCE_SCALEOUT_CONTROL",
    "CLUSCTL_RESOURCE_SCALEOUT_GET_CLUSTERS",
    "CLUSCTL_RESOURCE_SET_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_SET_CSV_MAINTENANCE_MODE",
    "CLUSCTL_RESOURCE_SET_INFRASTRUCTURE_SOFS_BUFFER",
    "CLUSCTL_RESOURCE_SET_MAINTENANCE_MODE",
    "CLUSCTL_RESOURCE_SET_NAME",
    "CLUSCTL_RESOURCE_SET_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_SET_SHARED_VOLUME_BACKUP_MODE",
    "CLUSCTL_RESOURCE_STATE_CHANGE_REASON",
    "CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT",
    "CLUSCTL_RESOURCE_STATE_CHANGE_REASON_VERSION_1",
    "CLUSCTL_RESOURCE_STORAGE_GET_DIRTY",
    "CLUSCTL_RESOURCE_STORAGE_GET_DISKID",
    "CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO",
    "CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX",
    "CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX2",
    "CLUSCTL_RESOURCE_STORAGE_GET_DISK_NUMBER_INFO",
    "CLUSCTL_RESOURCE_STORAGE_GET_MOUNTPOINTS",
    "CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_INFO",
    "CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_PARTITION_NAMES",
    "CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_STATES",
    "CLUSCTL_RESOURCE_STORAGE_IS_PATH_VALID",
    "CLUSCTL_RESOURCE_STORAGE_IS_SHARED_VOLUME",
    "CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME",
    "CLUSCTL_RESOURCE_STORAGE_RENAME_SHARED_VOLUME_GUID",
    "CLUSCTL_RESOURCE_STORAGE_SET_DRIVELETTER",
    "CLUSCTL_RESOURCE_TYPE_CHECK_DRAIN_VETO",
    "CLUSCTL_RESOURCE_TYPE_CLUSTER_VERSION_CHANGED",
    "CLUSCTL_RESOURCE_TYPE_CODES",
    "CLUSCTL_RESOURCE_TYPE_ENUM_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_ENUM_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_EVICT_NODE",
    "CLUSCTL_RESOURCE_TYPE_FIXUP_ON_UPGRADE",
    "CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_DIRECTORY",
    "CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_PATH",
    "CLUSCTL_RESOURCE_TYPE_GEN_SCRIPT_VALIDATE_PATH",
    "CLUSCTL_RESOURCE_TYPE_GET_ARB_TIMEOUT",
    "CLUSCTL_RESOURCE_TYPE_GET_CHARACTERISTICS",
    "CLUSCTL_RESOURCE_TYPE_GET_CLASS_INFO",
    "CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTY_FMTS",
    "CLUSCTL_RESOURCE_TYPE_GET_COMMON_RESOURCE_PROPERTY_FMTS",
    "CLUSCTL_RESOURCE_TYPE_GET_CRYPTO_CHECKPOINTS",
    "CLUSCTL_RESOURCE_TYPE_GET_FLAGS",
    "CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTY_FMTS",
    "CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_RESOURCE_PROPERTY_FMTS",
    "CLUSCTL_RESOURCE_TYPE_GET_REGISTRY_CHECKPOINTS",
    "CLUSCTL_RESOURCE_TYPE_GET_REQUIRED_DEPENDENCIES",
    "CLUSCTL_RESOURCE_TYPE_GET_RO_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_GET_RO_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_HOLD_IO",
    "CLUSCTL_RESOURCE_TYPE_INSTALL_NODE",
    "CLUSCTL_RESOURCE_TYPE_NETNAME_GET_OU_FOR_VCO",
    "CLUSCTL_RESOURCE_TYPE_NETNAME_VALIDATE_NETNAME",
    "CLUSCTL_RESOURCE_TYPE_NOTIFY_DRAIN_COMPLETE",
    "CLUSCTL_RESOURCE_TYPE_NOTIFY_MONITOR_SHUTTING_DOWN",
    "CLUSCTL_RESOURCE_TYPE_PREPARE_UPGRADE",
    "CLUSCTL_RESOURCE_TYPE_QUERY_DELETE",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_ADD_REPLICATION_GROUP",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_LOGDISKS",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_SOURCE_DATADISKS",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_ELIGIBLE_TARGET_DATADISKS",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_INFO",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_LOG_VOLUME",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_DISKS",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICATED_PARTITION_INFO",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_REPLICA_VOLUMES",
    "CLUSCTL_RESOURCE_TYPE_REPLICATION_GET_RESOURCE_GROUP",
    "CLUSCTL_RESOURCE_TYPE_RESUME_IO",
    "CLUSCTL_RESOURCE_TYPE_SET_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_SET_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_STARTING_PHASE1",
    "CLUSCTL_RESOURCE_TYPE_STARTING_PHASE2",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_ADD_VOLUME_INFO",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_FILTER_BY_POOL",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_FLAG_INCLUDE_NON_SHARED_DISKS",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INPUT",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX2_INT",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DISKID",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DRIVELETTERS",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_GET_RESOURCEID",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CLUSTERABLE",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CSV_FILE",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_REMAP_DRIVELETTER",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_REMOVE_VM_OWNERSHIP",
    "CLUSCTL_RESOURCE_TYPE_STORAGE_SYNC_CLUSDISK_DB",
    "CLUSCTL_RESOURCE_TYPE_UNKNOWN",
    "CLUSCTL_RESOURCE_TYPE_UPGRADE_COMPLETED",
    "CLUSCTL_RESOURCE_TYPE_VALIDATE_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_VALIDATE_PRIVATE_PROPERTIES",
    "CLUSCTL_RESOURCE_TYPE_WITNESS_VALIDATE_PATH",
    "CLUSCTL_RESOURCE_UNDELETE",
    "CLUSCTL_RESOURCE_UNKNOWN",
    "CLUSCTL_RESOURCE_UPGRADE_COMPLETED",
    "CLUSCTL_RESOURCE_UPGRADE_DLL",
    "CLUSCTL_RESOURCE_VALIDATE_CHANGE_GROUP",
    "CLUSCTL_RESOURCE_VALIDATE_COMMON_PROPERTIES",
    "CLUSCTL_RESOURCE_VALIDATE_PRIVATE_PROPERTIES",
    "CLUSGROUPSET_STATUS_APPLICATION_READY",
    "CLUSGROUPSET_STATUS_GROUPS_ONLINE",
    "CLUSGROUPSET_STATUS_GROUPS_PENDING",
    "CLUSGROUPSET_STATUS_OS_HEARTBEAT",
    "CLUSGROUP_TYPE",
    "CLUSGROUP_TYPE_ClusGroupTypeAvailableStorage",
    "CLUSGROUP_TYPE_ClusGroupTypeClusterUpdateAgent",
    "CLUSGROUP_TYPE_ClusGroupTypeCoreCluster",
    "CLUSGROUP_TYPE_ClusGroupTypeCoreSddc",
    "CLUSGROUP_TYPE_ClusGroupTypeCrossClusterOrchestrator",
    "CLUSGROUP_TYPE_ClusGroupTypeDhcpServer",
    "CLUSGROUP_TYPE_ClusGroupTypeDtc",
    "CLUSGROUP_TYPE_ClusGroupTypeFileServer",
    "CLUSGROUP_TYPE_ClusGroupTypeGenericApplication",
    "CLUSGROUP_TYPE_ClusGroupTypeGenericScript",
    "CLUSGROUP_TYPE_ClusGroupTypeGenericService",
    "CLUSGROUP_TYPE_ClusGroupTypeIScsiNameService",
    "CLUSGROUP_TYPE_ClusGroupTypeIScsiTarget",
    "CLUSGROUP_TYPE_ClusGroupTypeInfrastructureFileServer",
    "CLUSGROUP_TYPE_ClusGroupTypeMsmq",
    "CLUSGROUP_TYPE_ClusGroupTypePrintServer",
    "CLUSGROUP_TYPE_ClusGroupTypeScaleoutCluster",
    "CLUSGROUP_TYPE_ClusGroupTypeScaleoutFileServer",
    "CLUSGROUP_TYPE_ClusGroupTypeSharedVolume",
    "CLUSGROUP_TYPE_ClusGroupTypeStandAloneDfs",
    "CLUSGROUP_TYPE_ClusGroupTypeStoragePool",
    "CLUSGROUP_TYPE_ClusGroupTypeStorageReplica",
    "CLUSGROUP_TYPE_ClusGroupTypeTaskScheduler",
    "CLUSGROUP_TYPE_ClusGroupTypeTemporary",
    "CLUSGROUP_TYPE_ClusGroupTypeTsSessionBroker",
    "CLUSGROUP_TYPE_ClusGroupTypeUnknown",
    "CLUSGROUP_TYPE_ClusGroupTypeVMReplicaBroker",
    "CLUSGROUP_TYPE_ClusGroupTypeVMReplicaCoordinator",
    "CLUSGROUP_TYPE_ClusGroupTypeVirtualMachine",
    "CLUSGROUP_TYPE_ClusGroupTypeWins",
    "CLUSGRP_STATUS_APPLICATION_READY",
    "CLUSGRP_STATUS_EMBEDDED_FAILURE",
    "CLUSGRP_STATUS_LOCKED_MODE",
    "CLUSGRP_STATUS_NETWORK_FAILURE",
    "CLUSGRP_STATUS_OFFLINE_DUE_TO_ANTIAFFINITY_CONFLICT",
    "CLUSGRP_STATUS_OFFLINE_NOT_LOCAL_DISK_OWNER",
    "CLUSGRP_STATUS_OS_HEARTBEAT",
    "CLUSGRP_STATUS_PHYSICAL_RESOURCES_LACKING",
    "CLUSGRP_STATUS_PREEMPTED",
    "CLUSGRP_STATUS_UNMONITORED",
    "CLUSGRP_STATUS_WAITING_FOR_DEPENDENCIES",
    "CLUSGRP_STATUS_WAITING_IN_QUEUE_FOR_MOVE",
    "CLUSGRP_STATUS_WAITING_TO_START",
    "CLUSPROP_BINARY",
    "CLUSPROP_BUFFER_HELPER",
    "CLUSPROP_DWORD",
    "CLUSPROP_FILETIME",
    "CLUSPROP_FORMAT_BINARY",
    "CLUSPROP_FORMAT_DWORD",
    "CLUSPROP_FORMAT_EXPANDED_SZ",
    "CLUSPROP_FORMAT_EXPAND_SZ",
    "CLUSPROP_FORMAT_FILETIME",
    "CLUSPROP_FORMAT_LARGE_INTEGER",
    "CLUSPROP_FORMAT_LONG",
    "CLUSPROP_FORMAT_MULTI_SZ",
    "CLUSPROP_FORMAT_PROPERTY_LIST",
    "CLUSPROP_FORMAT_SECURITY_DESCRIPTOR",
    "CLUSPROP_FORMAT_SZ",
    "CLUSPROP_FORMAT_ULARGE_INTEGER",
    "CLUSPROP_FORMAT_UNKNOWN",
    "CLUSPROP_FORMAT_USER",
    "CLUSPROP_FORMAT_VALUE_LIST",
    "CLUSPROP_FORMAT_WORD",
    "CLUSPROP_FTSET_INFO",
    "CLUSPROP_IPADDR_ENABLENETBIOS",
    "CLUSPROP_IPADDR_ENABLENETBIOS_DISABLED",
    "CLUSPROP_IPADDR_ENABLENETBIOS_ENABLED",
    "CLUSPROP_IPADDR_ENABLENETBIOS_TRACK_NIC",
    "CLUSPROP_LARGE_INTEGER",
    "CLUSPROP_LIST",
    "CLUSPROP_LONG",
    "CLUSPROP_PARTITION_INFO",
    "CLUSPROP_PARTITION_INFO_EX",
    "CLUSPROP_PARTITION_INFO_EX2",
    "CLUSPROP_PIFLAGS",
    "CLUSPROP_PIFLAG_DEFAULT_QUORUM",
    "CLUSPROP_PIFLAG_ENCRYPTION_ENABLED",
    "CLUSPROP_PIFLAG_RAW",
    "CLUSPROP_PIFLAG_REMOVABLE",
    "CLUSPROP_PIFLAG_STICKY",
    "CLUSPROP_PIFLAG_UNKNOWN",
    "CLUSPROP_PIFLAG_USABLE",
    "CLUSPROP_PIFLAG_USABLE_FOR_CSV",
    "CLUSPROP_REQUIRED_DEPENDENCY",
    "CLUSPROP_RESOURCE_CLASS",
    "CLUSPROP_RESOURCE_CLASS_INFO",
    "CLUSPROP_SCSI_ADDRESS",
    "CLUSPROP_SECURITY_DESCRIPTOR",
    "CLUSPROP_SYNTAX",
    "CLUSPROP_SYNTAX_DISK_GUID",
    "CLUSPROP_SYNTAX_DISK_NUMBER",
    "CLUSPROP_SYNTAX_DISK_SERIALNUMBER",
    "CLUSPROP_SYNTAX_DISK_SIGNATURE",
    "CLUSPROP_SYNTAX_DISK_SIZE",
    "CLUSPROP_SYNTAX_ENDMARK",
    "CLUSPROP_SYNTAX_FTSET_INFO",
    "CLUSPROP_SYNTAX_LIST_VALUE_BINARY",
    "CLUSPROP_SYNTAX_LIST_VALUE_DWORD",
    "CLUSPROP_SYNTAX_LIST_VALUE_EXPANDED_SZ",
    "CLUSPROP_SYNTAX_LIST_VALUE_EXPAND_SZ",
    "CLUSPROP_SYNTAX_LIST_VALUE_FILETIME",
    "CLUSPROP_SYNTAX_LIST_VALUE_LARGE_INTEGER",
    "CLUSPROP_SYNTAX_LIST_VALUE_LONG",
    "CLUSPROP_SYNTAX_LIST_VALUE_MULTI_SZ",
    "CLUSPROP_SYNTAX_LIST_VALUE_PROPERTY_LIST",
    "CLUSPROP_SYNTAX_LIST_VALUE_SECURITY_DESCRIPTOR",
    "CLUSPROP_SYNTAX_LIST_VALUE_SZ",
    "CLUSPROP_SYNTAX_LIST_VALUE_ULARGE_INTEGER",
    "CLUSPROP_SYNTAX_LIST_VALUE_WORD",
    "CLUSPROP_SYNTAX_NAME",
    "CLUSPROP_SYNTAX_PARTITION_INFO",
    "CLUSPROP_SYNTAX_PARTITION_INFO_EX",
    "CLUSPROP_SYNTAX_PARTITION_INFO_EX2",
    "CLUSPROP_SYNTAX_RESCLASS",
    "CLUSPROP_SYNTAX_SCSI_ADDRESS",
    "CLUSPROP_SYNTAX_STORAGE_DEVICE_ID_DESCRIPTOR",
    "CLUSPROP_SZ",
    "CLUSPROP_TYPE_DISK_GUID",
    "CLUSPROP_TYPE_DISK_NUMBER",
    "CLUSPROP_TYPE_DISK_SERIALNUMBER",
    "CLUSPROP_TYPE_DISK_SIZE",
    "CLUSPROP_TYPE_ENDMARK",
    "CLUSPROP_TYPE_FTSET_INFO",
    "CLUSPROP_TYPE_LIST_VALUE",
    "CLUSPROP_TYPE_NAME",
    "CLUSPROP_TYPE_PARTITION_INFO",
    "CLUSPROP_TYPE_PARTITION_INFO_EX",
    "CLUSPROP_TYPE_PARTITION_INFO_EX2",
    "CLUSPROP_TYPE_RESCLASS",
    "CLUSPROP_TYPE_RESERVED1",
    "CLUSPROP_TYPE_SCSI_ADDRESS",
    "CLUSPROP_TYPE_SIGNATURE",
    "CLUSPROP_TYPE_STORAGE_DEVICE_ID_DESCRIPTOR",
    "CLUSPROP_TYPE_UNKNOWN",
    "CLUSPROP_TYPE_USER",
    "CLUSPROP_ULARGE_INTEGER",
    "CLUSPROP_VALUE",
    "CLUSPROP_WORD",
    "CLUSREG_COMMAND_NONE",
    "CLUSREG_CONDITION_EXISTS",
    "CLUSREG_CONDITION_IS_EQUAL",
    "CLUSREG_CONDITION_IS_GREATER_THAN",
    "CLUSREG_CONDITION_IS_LESS_THAN",
    "CLUSREG_CONDITION_IS_NOT_EQUAL",
    "CLUSREG_CONDITION_KEY_EXISTS",
    "CLUSREG_CONDITION_KEY_NOT_EXISTS",
    "CLUSREG_CONDITION_NOT_EXISTS",
    "CLUSREG_CONTROL_COMMAND",
    "CLUSREG_CREATE_KEY",
    "CLUSREG_DATABASE_ISOLATE_READ",
    "CLUSREG_DATABASE_SYNC_WRITE_TO_ALL_NODES",
    "CLUSREG_DELETE_KEY",
    "CLUSREG_DELETE_VALUE",
    "CLUSREG_KEYNAME_OBJECTGUIDS",
    "CLUSREG_LAST_COMMAND",
    "CLUSREG_NAME_AFFINITYRULE_ENABLED",
    "CLUSREG_NAME_AFFINITYRULE_GROUPS",
    "CLUSREG_NAME_AFFINITYRULE_NAME",
    "CLUSREG_NAME_AFFINITYRULE_TYPE",
    "CLUSREG_NAME_CLOUDWITNESS_ACCOUNT_NAME",
    "CLUSREG_NAME_CLOUDWITNESS_CONTAINER_NAME",
    "CLUSREG_NAME_CLOUDWITNESS_ENDPOINT_INFO",
    "CLUSREG_NAME_CLOUDWITNESS_PRIMARY_KEY",
    "CLUSREG_NAME_CLOUDWITNESS_PRIMARY_TOKEN",
    "CLUSREG_NAME_CLUS_DEFAULT_NETWORK_ROLE",
    "CLUSREG_NAME_CLUS_DESC",
    "CLUSREG_NAME_CLUS_SD",
    "CLUSREG_NAME_CROSS_SITE_DELAY",
    "CLUSREG_NAME_CROSS_SITE_THRESHOLD",
    "CLUSREG_NAME_CROSS_SUBNET_DELAY",
    "CLUSREG_NAME_CROSS_SUBNET_THRESHOLD",
    "CLUSREG_NAME_CSV_BLOCK_CACHE",
    "CLUSREG_NAME_CSV_MDS_SD",
    "CLUSREG_NAME_DATABASE_READ_WRITE_MODE",
    "CLUSREG_NAME_DDA_DEVICE_ALLOCATIONS",
    "CLUSREG_NAME_DHCP_BACKUP_PATH",
    "CLUSREG_NAME_DHCP_DATABASE_PATH",
    "CLUSREG_NAME_DRAIN_ON_SHUTDOWN",
    "CLUSREG_NAME_ENABLED_EVENT_LOGS",
    "CLUSREG_NAME_FAILOVER_MOVE_MIGRATION_TYPE",
    "CLUSREG_NAME_FILESHR_CA_TIMEOUT",
    "CLUSREG_NAME_FILESHR_HIDE_SUBDIR_SHARES",
    "CLUSREG_NAME_FILESHR_IS_DFS_ROOT",
    "CLUSREG_NAME_FILESHR_MAX_USERS",
    "CLUSREG_NAME_FILESHR_PATH",
    "CLUSREG_NAME_FILESHR_REMARK",
    "CLUSREG_NAME_FILESHR_SD",
    "CLUSREG_NAME_FILESHR_SERVER_NAME",
    "CLUSREG_NAME_FILESHR_SHARE_FLAGS",
    "CLUSREG_NAME_FILESHR_SHARE_NAME",
    "CLUSREG_NAME_FILESHR_SHARE_SUBDIRS",
    "CLUSREG_NAME_FIXQUORUM",
    "CLUSREG_NAME_FSWITNESS_ARB_DELAY",
    "CLUSREG_NAME_FSWITNESS_IMPERSONATE_CNO",
    "CLUSREG_NAME_FSWITNESS_SHARE_PATH",
    "CLUSREG_NAME_FUNCTIONAL_LEVEL",
    "CLUSREG_NAME_GENAPP_COMMAND_LINE",
    "CLUSREG_NAME_GENAPP_CURRENT_DIRECTORY",
    "CLUSREG_NAME_GENAPP_USE_NETWORK_NAME",
    "CLUSREG_NAME_GENSCRIPT_SCRIPT_FILEPATH",
    "CLUSREG_NAME_GENSVC_SERVICE_NAME",
    "CLUSREG_NAME_GENSVC_STARTUP_PARAMS",
    "CLUSREG_NAME_GENSVC_USE_NETWORK_NAME",
    "CLUSREG_NAME_GPUP_DEVICE_ALLOCATIONS",
    "CLUSREG_NAME_GROUPSET_AVAILABILITY_SET_INDEX_TO_NODE_MAPPING",
    "CLUSREG_NAME_GROUPSET_FAULT_DOMAINS",
    "CLUSREG_NAME_GROUPSET_IS_AVAILABILITY_SET",
    "CLUSREG_NAME_GROUPSET_IS_GLOBAL",
    "CLUSREG_NAME_GROUPSET_NAME",
    "CLUSREG_NAME_GROUPSET_RESERVE_NODE",
    "CLUSREG_NAME_GROUPSET_STARTUP_COUNT",
    "CLUSREG_NAME_GROUPSET_STARTUP_DELAY",
    "CLUSREG_NAME_GROUPSET_STARTUP_SETTING",
    "CLUSREG_NAME_GROUPSET_STATUS_INFORMATION",
    "CLUSREG_NAME_GROUPSET_UPDATE_DOMAINS",
    "CLUSREG_NAME_GROUP_DEPENDENCY_TIMEOUT",
    "CLUSREG_NAME_GRP_ANTI_AFFINITY_CLASS_NAME",
    "CLUSREG_NAME_GRP_CCF_EPOCH",
    "CLUSREG_NAME_GRP_CCF_EPOCH_HIGH",
    "CLUSREG_NAME_GRP_COLD_START_SETTING",
    "CLUSREG_NAME_GRP_DEFAULT_OWNER",
    "CLUSREG_NAME_GRP_DESC",
    "CLUSREG_NAME_GRP_FAILBACK_TYPE",
    "CLUSREG_NAME_GRP_FAILBACK_WIN_END",
    "CLUSREG_NAME_GRP_FAILBACK_WIN_START",
    "CLUSREG_NAME_GRP_FAILOVER_PERIOD",
    "CLUSREG_NAME_GRP_FAILOVER_THRESHOLD",
    "CLUSREG_NAME_GRP_FAULT_DOMAIN",
    "CLUSREG_NAME_GRP_LOCK_MOVE",
    "CLUSREG_NAME_GRP_NAME",
    "CLUSREG_NAME_GRP_PERSISTENT_STATE",
    "CLUSREG_NAME_GRP_PLACEMENT_OPTIONS",
    "CLUSREG_NAME_GRP_PREFERRED_SITE",
    "CLUSREG_NAME_GRP_PRIORITY",
    "CLUSREG_NAME_GRP_RESILIENCY_PERIOD",
    "CLUSREG_NAME_GRP_START_DELAY",
    "CLUSREG_NAME_GRP_STATUS_INFORMATION",
    "CLUSREG_NAME_GRP_TYPE",
    "CLUSREG_NAME_GRP_UPDATE_DOMAIN",
    "CLUSREG_NAME_IGNORE_PERSISTENT_STATE",
    "CLUSREG_NAME_IPADDR_ADDRESS",
    "CLUSREG_NAME_IPADDR_DHCP_ADDRESS",
    "CLUSREG_NAME_IPADDR_DHCP_SERVER",
    "CLUSREG_NAME_IPADDR_DHCP_SUBNET_MASK",
    "CLUSREG_NAME_IPADDR_ENABLE_DHCP",
    "CLUSREG_NAME_IPADDR_ENABLE_NETBIOS",
    "CLUSREG_NAME_IPADDR_LEASE_OBTAINED_TIME",
    "CLUSREG_NAME_IPADDR_LEASE_TERMINATES_TIME",
    "CLUSREG_NAME_IPADDR_NETWORK",
    "CLUSREG_NAME_IPADDR_OVERRIDE_ADDRMATCH",
    "CLUSREG_NAME_IPADDR_PROBE_FAILURE_THRESHOLD",
    "CLUSREG_NAME_IPADDR_PROBE_PORT",
    "CLUSREG_NAME_IPADDR_SHARED_NETNAME",
    "CLUSREG_NAME_IPADDR_SUBNET_MASK",
    "CLUSREG_NAME_IPADDR_T1",
    "CLUSREG_NAME_IPADDR_T2",
    "CLUSREG_NAME_IPV6_NATIVE_ADDRESS",
    "CLUSREG_NAME_IPV6_NATIVE_NETWORK",
    "CLUSREG_NAME_IPV6_NATIVE_PREFIX_LENGTH",
    "CLUSREG_NAME_IPV6_TUNNEL_ADDRESS",
    "CLUSREG_NAME_IPV6_TUNNEL_TUNNELTYPE",
    "CLUSREG_NAME_LAST_RECENT_EVENTS_RESET_TIME",
    "CLUSREG_NAME_LOG_FILE_PATH",
    "CLUSREG_NAME_MESSAGE_BUFFER_LENGTH",
    "CLUSREG_NAME_MIXED_MODE",
    "CLUSREG_NAME_NETFT_IPSEC_ENABLED",
    "CLUSREG_NAME_NETIFACE_ADAPTER_ID",
    "CLUSREG_NAME_NETIFACE_ADAPTER_NAME",
    "CLUSREG_NAME_NETIFACE_ADDRESS",
    "CLUSREG_NAME_NETIFACE_DESC",
    "CLUSREG_NAME_NETIFACE_DHCP_ENABLED",
    "CLUSREG_NAME_NETIFACE_IPV4_ADDRESSES",
    "CLUSREG_NAME_NETIFACE_IPV6_ADDRESSES",
    "CLUSREG_NAME_NETIFACE_NAME",
    "CLUSREG_NAME_NETIFACE_NETWORK",
    "CLUSREG_NAME_NETIFACE_NODE",
    "CLUSREG_NAME_NETNAME_AD_AWARE",
    "CLUSREG_NAME_NETNAME_ALIASES",
    "CLUSREG_NAME_NETNAME_CONTAINERGUID",
    "CLUSREG_NAME_NETNAME_CREATING_DC",
    "CLUSREG_NAME_NETNAME_DNN_DISABLE_CLONES",
    "CLUSREG_NAME_NETNAME_DNS_NAME",
    "CLUSREG_NAME_NETNAME_DNS_SUFFIX",
    "CLUSREG_NAME_NETNAME_EXCLUDE_NETWORKS",
    "CLUSREG_NAME_NETNAME_HOST_TTL",
    "CLUSREG_NAME_NETNAME_IN_USE_NETWORKS",
    "CLUSREG_NAME_NETNAME_LAST_DNS_UPDATE",
    "CLUSREG_NAME_NETNAME_NAME",
    "CLUSREG_NAME_NETNAME_OBJECT_ID",
    "CLUSREG_NAME_NETNAME_PUBLISH_PTR",
    "CLUSREG_NAME_NETNAME_REGISTER_ALL_IP",
    "CLUSREG_NAME_NETNAME_REMAP_PIPE_NAMES",
    "CLUSREG_NAME_NETNAME_REMOVEVCO_ONDELETE",
    "CLUSREG_NAME_NETNAME_RESOURCE_DATA",
    "CLUSREG_NAME_NETNAME_STATUS_DNS",
    "CLUSREG_NAME_NETNAME_STATUS_KERBEROS",
    "CLUSREG_NAME_NETNAME_STATUS_NETBIOS",
    "CLUSREG_NAME_NETNAME_VCO_CONTAINER",
    "CLUSREG_NAME_NET_ADDRESS",
    "CLUSREG_NAME_NET_ADDRESS_MASK",
    "CLUSREG_NAME_NET_AUTOMETRIC",
    "CLUSREG_NAME_NET_DESC",
    "CLUSREG_NAME_NET_IPV4_ADDRESSES",
    "CLUSREG_NAME_NET_IPV4_PREFIXLENGTHS",
    "CLUSREG_NAME_NET_IPV6_ADDRESSES",
    "CLUSREG_NAME_NET_IPV6_PREFIXLENGTHS",
    "CLUSREG_NAME_NET_METRIC",
    "CLUSREG_NAME_NET_NAME",
    "CLUSREG_NAME_NET_RDMA_CAPABLE",
    "CLUSREG_NAME_NET_ROLE",
    "CLUSREG_NAME_NET_RSS_CAPABLE",
    "CLUSREG_NAME_NET_SPEED",
    "CLUSREG_NAME_NODE_BUILD_NUMBER",
    "CLUSREG_NAME_NODE_CSDVERSION",
    "CLUSREG_NAME_NODE_DESC",
    "CLUSREG_NAME_NODE_DRAIN_STATUS",
    "CLUSREG_NAME_NODE_DRAIN_TARGET",
    "CLUSREG_NAME_NODE_DYNAMIC_WEIGHT",
    "CLUSREG_NAME_NODE_FAULT_DOMAIN",
    "CLUSREG_NAME_NODE_FDID",
    "CLUSREG_NAME_NODE_HIGHEST_VERSION",
    "CLUSREG_NAME_NODE_IS_PRIMARY",
    "CLUSREG_NAME_NODE_LOWEST_VERSION",
    "CLUSREG_NAME_NODE_MAJOR_VERSION",
    "CLUSREG_NAME_NODE_MANUFACTURER",
    "CLUSREG_NAME_NODE_MINOR_VERSION",
    "CLUSREG_NAME_NODE_MODEL",
    "CLUSREG_NAME_NODE_NAME",
    "CLUSREG_NAME_NODE_NEEDS_PQ",
    "CLUSREG_NAME_NODE_SERIALNUMBER",
    "CLUSREG_NAME_NODE_STATUS_INFO",
    "CLUSREG_NAME_NODE_WEIGHT",
    "CLUSREG_NAME_PHYSDISK_CSVBLOCKCACHE",
    "CLUSREG_NAME_PHYSDISK_CSVSNAPSHOTAGELIMIT",
    "CLUSREG_NAME_PHYSDISK_CSVSNAPSHOTDIFFAREASIZE",
    "CLUSREG_NAME_PHYSDISK_CSVWRITETHROUGH",
    "CLUSREG_NAME_PHYSDISK_DISKARBINTERVAL",
    "CLUSREG_NAME_PHYSDISK_DISKARBTYPE",
    "CLUSREG_NAME_PHYSDISK_DISKGUID",
    "CLUSREG_NAME_PHYSDISK_DISKIDGUID",
    "CLUSREG_NAME_PHYSDISK_DISKIDTYPE",
    "CLUSREG_NAME_PHYSDISK_DISKIODELAY",
    "CLUSREG_NAME_PHYSDISK_DISKPATH",
    "CLUSREG_NAME_PHYSDISK_DISKRECOVERYACTION",
    "CLUSREG_NAME_PHYSDISK_DISKRELOAD",
    "CLUSREG_NAME_PHYSDISK_DISKRUNCHKDSK",
    "CLUSREG_NAME_PHYSDISK_DISKSIGNATURE",
    "CLUSREG_NAME_PHYSDISK_DISKUNIQUEIDS",
    "CLUSREG_NAME_PHYSDISK_DISKVOLUMEINFO",
    "CLUSREG_NAME_PHYSDISK_FASTONLINEARBITRATE",
    "CLUSREG_NAME_PHYSDISK_MAINTMODE",
    "CLUSREG_NAME_PHYSDISK_MIGRATEFIXUP",
    "CLUSREG_NAME_PHYSDISK_SPACEIDGUID",
    "CLUSREG_NAME_PHYSDISK_VOLSNAPACTIVATETIMEOUT",
    "CLUSREG_NAME_PLACEMENT_OPTIONS",
    "CLUSREG_NAME_PLUMB_ALL_CROSS_SUBNET_ROUTES",
    "CLUSREG_NAME_PREVENTQUORUM",
    "CLUSREG_NAME_PRTSPOOL_DEFAULT_SPOOL_DIR",
    "CLUSREG_NAME_PRTSPOOL_TIMEOUT",
    "CLUSREG_NAME_QUARANTINE_DURATION",
    "CLUSREG_NAME_QUARANTINE_THRESHOLD",
    "CLUSREG_NAME_QUORUM_ARBITRATION_TIMEOUT",
    "CLUSREG_NAME_RESILIENCY_DEFAULT_SECONDS",
    "CLUSREG_NAME_RESILIENCY_LEVEL",
    "CLUSREG_NAME_RESTYPE_ADMIN_EXTENSIONS",
    "CLUSREG_NAME_RESTYPE_DEADLOCK_TIMEOUT",
    "CLUSREG_NAME_RESTYPE_DESC",
    "CLUSREG_NAME_RESTYPE_DLL_NAME",
    "CLUSREG_NAME_RESTYPE_DUMP_LOG_QUERY",
    "CLUSREG_NAME_RESTYPE_DUMP_POLICY",
    "CLUSREG_NAME_RESTYPE_DUMP_SERVICES",
    "CLUSREG_NAME_RESTYPE_ENABLED_EVENT_LOGS",
    "CLUSREG_NAME_RESTYPE_IS_ALIVE",
    "CLUSREG_NAME_RESTYPE_LOOKS_ALIVE",
    "CLUSREG_NAME_RESTYPE_MAX_MONITORS",
    "CLUSREG_NAME_RESTYPE_NAME",
    "CLUSREG_NAME_RESTYPE_PENDING_TIMEOUT",
    "CLUSREG_NAME_RESTYPE_WPR_PROFILES",
    "CLUSREG_NAME_RESTYPE_WPR_START_AFTER",
    "CLUSREG_NAME_RES_DATA1",
    "CLUSREG_NAME_RES_DATA2",
    "CLUSREG_NAME_RES_DEADLOCK_TIMEOUT",
    "CLUSREG_NAME_RES_DESC",
    "CLUSREG_NAME_RES_EMBEDDED_FAILURE_ACTION",
    "CLUSREG_NAME_RES_IS_ALIVE",
    "CLUSREG_NAME_RES_LAST_OPERATION_STATUS_CODE",
    "CLUSREG_NAME_RES_LOOKS_ALIVE",
    "CLUSREG_NAME_RES_MONITOR_PID",
    "CLUSREG_NAME_RES_NAME",
    "CLUSREG_NAME_RES_PENDING_TIMEOUT",
    "CLUSREG_NAME_RES_PERSISTENT_STATE",
    "CLUSREG_NAME_RES_RESTART_ACTION",
    "CLUSREG_NAME_RES_RESTART_DELAY",
    "CLUSREG_NAME_RES_RESTART_PERIOD",
    "CLUSREG_NAME_RES_RESTART_THRESHOLD",
    "CLUSREG_NAME_RES_RETRY_PERIOD_ON_FAILURE",
    "CLUSREG_NAME_RES_SEPARATE_MONITOR",
    "CLUSREG_NAME_RES_STATUS",
    "CLUSREG_NAME_RES_STATUS_INFORMATION",
    "CLUSREG_NAME_RES_TYPE",
    "CLUSREG_NAME_ROUTE_HISTORY_LENGTH",
    "CLUSREG_NAME_SAME_SUBNET_DELAY",
    "CLUSREG_NAME_SAME_SUBNET_THRESHOLD",
    "CLUSREG_NAME_SHUTDOWN_TIMEOUT_MINUTES",
    "CLUSREG_NAME_SOFS_SMBASYMMETRYMODE",
    "CLUSREG_NAME_START_MEMORY",
    "CLUSREG_NAME_STORAGESPACE_DESCRIPTION",
    "CLUSREG_NAME_STORAGESPACE_HEALTH",
    "CLUSREG_NAME_STORAGESPACE_NAME",
    "CLUSREG_NAME_STORAGESPACE_POOLARBITRATE",
    "CLUSREG_NAME_STORAGESPACE_POOLCONSUMEDCAPACITY",
    "CLUSREG_NAME_STORAGESPACE_POOLDESC",
    "CLUSREG_NAME_STORAGESPACE_POOLDRIVEIDS",
    "CLUSREG_NAME_STORAGESPACE_POOLHEALTH",
    "CLUSREG_NAME_STORAGESPACE_POOLIDGUID",
    "CLUSREG_NAME_STORAGESPACE_POOLNAME",
    "CLUSREG_NAME_STORAGESPACE_POOLQUORUMSHARE",
    "CLUSREG_NAME_STORAGESPACE_POOLQUORUMUSERACCOUNT",
    "CLUSREG_NAME_STORAGESPACE_POOLREEVALTIMEOUT",
    "CLUSREG_NAME_STORAGESPACE_POOLSTATE",
    "CLUSREG_NAME_STORAGESPACE_POOLTOTALCAPACITY",
    "CLUSREG_NAME_STORAGESPACE_PROVISIONING",
    "CLUSREG_NAME_STORAGESPACE_RESILIENCYCOLUMNS",
    "CLUSREG_NAME_STORAGESPACE_RESILIENCYINTERLEAVE",
    "CLUSREG_NAME_STORAGESPACE_RESILIENCYTYPE",
    "CLUSREG_NAME_STORAGESPACE_STATE",
    "CLUSREG_NAME_UPGRADE_VERSION",
    "CLUSREG_NAME_VIP_ADAPTER_NAME",
    "CLUSREG_NAME_VIP_ADDRESS",
    "CLUSREG_NAME_VIP_PREFIX_LENGTH",
    "CLUSREG_NAME_VIP_RDID",
    "CLUSREG_NAME_VIP_VSID",
    "CLUSREG_NAME_VIRTUAL_NUMA_COUNT",
    "CLUSREG_NAME_VSSTASK_APPNAME",
    "CLUSREG_NAME_VSSTASK_APPPARAMS",
    "CLUSREG_NAME_VSSTASK_CURRENTDIRECTORY",
    "CLUSREG_NAME_VSSTASK_TRIGGERARRAY",
    "CLUSREG_NAME_WINS_BACKUP_PATH",
    "CLUSREG_NAME_WINS_DATABASE_PATH",
    "CLUSREG_NAME_WITNESS_DYNAMIC_WEIGHT",
    "CLUSREG_READ_ERROR",
    "CLUSREG_READ_KEY",
    "CLUSREG_READ_VALUE",
    "CLUSREG_SET_KEY_SECURITY",
    "CLUSREG_SET_VALUE",
    "CLUSREG_VALUE_DELETED",
    "CLUSRESDLL_STATUS_DO_NOT_COLLECT_WER_REPORT",
    "CLUSRESDLL_STATUS_DUMP_NOW",
    "CLUSRESDLL_STATUS_INSUFFICIENT_MEMORY",
    "CLUSRESDLL_STATUS_INSUFFICIENT_OTHER_RESOURCES",
    "CLUSRESDLL_STATUS_INSUFFICIENT_PROCESSOR",
    "CLUSRESDLL_STATUS_INVALID_PARAMETERS",
    "CLUSRESDLL_STATUS_NETWORK_NOT_AVAILABLE",
    "CLUSRESDLL_STATUS_OFFLINE_BUSY",
    "CLUSRESDLL_STATUS_OFFLINE_DESTINATION_REJECTED",
    "CLUSRESDLL_STATUS_OFFLINE_DESTINATION_THROTTLED",
    "CLUSRESDLL_STATUS_OFFLINE_SOURCE_THROTTLED",
    "CLUSRES_NAME_GET_OPERATION_CONTEXT_FLAGS",
    "CLUSRES_STATUS_APPLICATION_READY",
    "CLUSRES_STATUS_EMBEDDED_FAILURE",
    "CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_CPU",
    "CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_GENERIC_RESOURCES",
    "CLUSRES_STATUS_FAILED_DUE_TO_INSUFFICIENT_MEMORY",
    "CLUSRES_STATUS_LOCKED_MODE",
    "CLUSRES_STATUS_NETWORK_FAILURE",
    "CLUSRES_STATUS_OFFLINE_NOT_LOCAL_DISK_OWNER",
    "CLUSRES_STATUS_OS_HEARTBEAT",
    "CLUSRES_STATUS_UNMONITORED",
    "CLUSTERSET_OBJECT_TYPE",
    "CLUSTERSET_OBJECT_TYPE_DATABASE",
    "CLUSTERSET_OBJECT_TYPE_MEMBER",
    "CLUSTERSET_OBJECT_TYPE_NONE",
    "CLUSTERSET_OBJECT_TYPE_WORKLOAD",
    "CLUSTERVERSIONINFO",
    "CLUSTERVERSIONINFO_NT4",
    "CLUSTER_ADD_EVICT_DELAY",
    "CLUSTER_AVAILABILITY_SET_CONFIG",
    "CLUSTER_AVAILABILITY_SET_CONFIG_V1",
    "CLUSTER_BATCH_COMMAND",
    "CLUSTER_CHANGE",
    "CLUSTER_CHANGE_ALL",
    "CLUSTER_CHANGE_CLUSTER_ALL_V2",
    "CLUSTER_CHANGE_CLUSTER_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_CLUSTER_GROUP_ADDED_V2",
    "CLUSTER_CHANGE_CLUSTER_HANDLE_CLOSE_V2",
    "CLUSTER_CHANGE_CLUSTER_LOST_NOTIFICATIONS_V2",
    "CLUSTER_CHANGE_CLUSTER_MEMBERSHIP_V2",
    "CLUSTER_CHANGE_CLUSTER_NETWORK_ADDED_V2",
    "CLUSTER_CHANGE_CLUSTER_NODE_ADDED_V2",
    "CLUSTER_CHANGE_CLUSTER_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_CLUSTER_PROPERTY",
    "CLUSTER_CHANGE_CLUSTER_RECONNECT",
    "CLUSTER_CHANGE_CLUSTER_RECONNECT_V2",
    "CLUSTER_CHANGE_CLUSTER_RENAME_V2",
    "CLUSTER_CHANGE_CLUSTER_RESOURCE_TYPE_ADDED_V2",
    "CLUSTER_CHANGE_CLUSTER_STATE",
    "CLUSTER_CHANGE_CLUSTER_STATE_V2",
    "CLUSTER_CHANGE_CLUSTER_UPGRADED_V2",
    "CLUSTER_CHANGE_CLUSTER_V2",
    "CLUSTER_CHANGE_GROUPSET_ALL_V2",
    "CLUSTER_CHANGE_GROUPSET_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_GROUPSET_DELETED_v2",
    "CLUSTER_CHANGE_GROUPSET_DEPENDENCIES_V2",
    "CLUSTER_CHANGE_GROUPSET_DEPENDENTS_V2",
    "CLUSTER_CHANGE_GROUPSET_GROUP_ADDED",
    "CLUSTER_CHANGE_GROUPSET_GROUP_REMOVED",
    "CLUSTER_CHANGE_GROUPSET_HANDLE_CLOSE_v2",
    "CLUSTER_CHANGE_GROUPSET_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_GROUPSET_STATE_V2",
    "CLUSTER_CHANGE_GROUPSET_V2",
    "CLUSTER_CHANGE_GROUP_ADDED",
    "CLUSTER_CHANGE_GROUP_ALL_V2",
    "CLUSTER_CHANGE_GROUP_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_GROUP_DELETED",
    "CLUSTER_CHANGE_GROUP_DELETED_V2",
    "CLUSTER_CHANGE_GROUP_HANDLE_CLOSE_V2",
    "CLUSTER_CHANGE_GROUP_OWNER_NODE_V2",
    "CLUSTER_CHANGE_GROUP_PREFERRED_OWNERS_V2",
    "CLUSTER_CHANGE_GROUP_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_GROUP_PROPERTY",
    "CLUSTER_CHANGE_GROUP_RESOURCE_ADDED_V2",
    "CLUSTER_CHANGE_GROUP_RESOURCE_GAINED_V2",
    "CLUSTER_CHANGE_GROUP_RESOURCE_LOST_V2",
    "CLUSTER_CHANGE_GROUP_STATE",
    "CLUSTER_CHANGE_GROUP_STATE_V2",
    "CLUSTER_CHANGE_GROUP_V2",
    "CLUSTER_CHANGE_HANDLE_CLOSE",
    "CLUSTER_CHANGE_NETINTERFACE_ADDED",
    "CLUSTER_CHANGE_NETINTERFACE_ALL_V2",
    "CLUSTER_CHANGE_NETINTERFACE_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_NETINTERFACE_DELETED",
    "CLUSTER_CHANGE_NETINTERFACE_DELETED_V2",
    "CLUSTER_CHANGE_NETINTERFACE_HANDLE_CLOSE_V2",
    "CLUSTER_CHANGE_NETINTERFACE_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_NETINTERFACE_PROPERTY",
    "CLUSTER_CHANGE_NETINTERFACE_STATE",
    "CLUSTER_CHANGE_NETINTERFACE_STATE_V2",
    "CLUSTER_CHANGE_NETINTERFACE_V2",
    "CLUSTER_CHANGE_NETWORK_ADDED",
    "CLUSTER_CHANGE_NETWORK_ALL_V2",
    "CLUSTER_CHANGE_NETWORK_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_NETWORK_DELETED",
    "CLUSTER_CHANGE_NETWORK_DELETED_V2",
    "CLUSTER_CHANGE_NETWORK_HANDLE_CLOSE_V2",
    "CLUSTER_CHANGE_NETWORK_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_NETWORK_PROPERTY",
    "CLUSTER_CHANGE_NETWORK_STATE",
    "CLUSTER_CHANGE_NETWORK_STATE_V2",
    "CLUSTER_CHANGE_NETWORK_V2",
    "CLUSTER_CHANGE_NODE_ADDED",
    "CLUSTER_CHANGE_NODE_ALL_V2",
    "CLUSTER_CHANGE_NODE_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_NODE_DELETED",
    "CLUSTER_CHANGE_NODE_DELETED_V2",
    "CLUSTER_CHANGE_NODE_GROUP_GAINED_V2",
    "CLUSTER_CHANGE_NODE_GROUP_LOST_V2",
    "CLUSTER_CHANGE_NODE_HANDLE_CLOSE_V2",
    "CLUSTER_CHANGE_NODE_NETINTERFACE_ADDED_V2",
    "CLUSTER_CHANGE_NODE_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_NODE_PROPERTY",
    "CLUSTER_CHANGE_NODE_STATE",
    "CLUSTER_CHANGE_NODE_STATE_V2",
    "CLUSTER_CHANGE_NODE_UPGRADE_PHASE_V2",
    "CLUSTER_CHANGE_NODE_V2",
    "CLUSTER_CHANGE_QUORUM_ALL_V2",
    "CLUSTER_CHANGE_QUORUM_STATE",
    "CLUSTER_CHANGE_QUORUM_STATE_V2",
    "CLUSTER_CHANGE_QUORUM_V2",
    "CLUSTER_CHANGE_REGISTRY_ALL_V2",
    "CLUSTER_CHANGE_REGISTRY_ATTRIBUTES",
    "CLUSTER_CHANGE_REGISTRY_ATTRIBUTES_V2",
    "CLUSTER_CHANGE_REGISTRY_HANDLE_CLOSE_V2",
    "CLUSTER_CHANGE_REGISTRY_NAME",
    "CLUSTER_CHANGE_REGISTRY_NAME_V2",
    "CLUSTER_CHANGE_REGISTRY_SUBTREE",
    "CLUSTER_CHANGE_REGISTRY_SUBTREE_V2",
    "CLUSTER_CHANGE_REGISTRY_V2",
    "CLUSTER_CHANGE_REGISTRY_VALUE",
    "CLUSTER_CHANGE_REGISTRY_VALUE_V2",
    "CLUSTER_CHANGE_RESOURCE_ADDED",
    "CLUSTER_CHANGE_RESOURCE_ALL_V2",
    "CLUSTER_CHANGE_RESOURCE_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_RESOURCE_DELETED",
    "CLUSTER_CHANGE_RESOURCE_DELETED_V2",
    "CLUSTER_CHANGE_RESOURCE_DEPENDENCIES_V2",
    "CLUSTER_CHANGE_RESOURCE_DEPENDENTS_V2",
    "CLUSTER_CHANGE_RESOURCE_DLL_UPGRADED_V2",
    "CLUSTER_CHANGE_RESOURCE_HANDLE_CLOSE_V2",
    "CLUSTER_CHANGE_RESOURCE_OWNER_GROUP_V2",
    "CLUSTER_CHANGE_RESOURCE_POSSIBLE_OWNERS_V2",
    "CLUSTER_CHANGE_RESOURCE_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_RESOURCE_PROPERTY",
    "CLUSTER_CHANGE_RESOURCE_STATE",
    "CLUSTER_CHANGE_RESOURCE_STATE_V2",
    "CLUSTER_CHANGE_RESOURCE_TERMINAL_STATE_V2",
    "CLUSTER_CHANGE_RESOURCE_TYPE_ADDED",
    "CLUSTER_CHANGE_RESOURCE_TYPE_ALL_V2",
    "CLUSTER_CHANGE_RESOURCE_TYPE_COMMON_PROPERTY_V2",
    "CLUSTER_CHANGE_RESOURCE_TYPE_DELETED",
    "CLUSTER_CHANGE_RESOURCE_TYPE_DELETED_V2",
    "CLUSTER_CHANGE_RESOURCE_TYPE_DLL_UPGRADED_V2",
    "CLUSTER_CHANGE_RESOURCE_TYPE_POSSIBLE_OWNERS_V2",
    "CLUSTER_CHANGE_RESOURCE_TYPE_PRIVATE_PROPERTY_V2",
    "CLUSTER_CHANGE_RESOURCE_TYPE_PROPERTY",
    "CLUSTER_CHANGE_RESOURCE_TYPE_V2",
    "CLUSTER_CHANGE_RESOURCE_V2",
    "CLUSTER_CHANGE_SHARED_VOLUME_ADDED_V2",
    "CLUSTER_CHANGE_SHARED_VOLUME_ALL_V2",
    "CLUSTER_CHANGE_SHARED_VOLUME_REMOVED_V2",
    "CLUSTER_CHANGE_SHARED_VOLUME_STATE_V2",
    "CLUSTER_CHANGE_SHARED_VOLUME_V2",
    "CLUSTER_CHANGE_SPACEPORT_CUSTOM_PNP_V2",
    "CLUSTER_CHANGE_SPACEPORT_V2",
    "CLUSTER_CHANGE_UPGRADE_ALL",
    "CLUSTER_CHANGE_UPGRADE_NODE_COMMIT",
    "CLUSTER_CHANGE_UPGRADE_NODE_POSTCOMMIT",
    "CLUSTER_CHANGE_UPGRADE_NODE_PREPARE",
    "CLUSTER_CLOUD_TYPE",
    "CLUSTER_CLOUD_TYPE_AZURE",
    "CLUSTER_CLOUD_TYPE_MIXED",
    "CLUSTER_CLOUD_TYPE_NONE",
    "CLUSTER_CLOUD_TYPE_UNKNOWN",
    "CLUSTER_CONFIGURED",
    "CLUSTER_CONTROL_OBJECT",
    "CLUSTER_CREATE_GROUP_INFO",
    "CLUSTER_CREATE_GROUP_INFO_VERSION",
    "CLUSTER_CREATE_GROUP_INFO_VERSION_1",
    "CLUSTER_CSA_VSS_STATE",
    "CLUSTER_CSV_COMPATIBLE_FILTERS",
    "CLUSTER_CSV_INCOMPATIBLE_FILTERS",
    "CLUSTER_CSV_VOLUME_FAULT_STATE",
    "CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateDismounted",
    "CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateInMaintenance",
    "CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateNoAccess",
    "CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateNoDirectIO",
    "CLUSTER_CSV_VOLUME_FAULT_STATE_VolumeStateNoFaults",
    "CLUSTER_DELETE_ACCESS_CONTROL_ENTRY",
    "CLUSTER_ENFORCED_ANTIAFFINITY",
    "CLUSTER_ENUM",
    "CLUSTER_ENUM_ALL",
    "CLUSTER_ENUM_GROUP",
    "CLUSTER_ENUM_INTERNAL_NETWORK",
    "CLUSTER_ENUM_ITEM",
    "CLUSTER_ENUM_ITEM_VERSION",
    "CLUSTER_ENUM_ITEM_VERSION_1",
    "CLUSTER_ENUM_NETINTERFACE",
    "CLUSTER_ENUM_NETWORK",
    "CLUSTER_ENUM_NODE",
    "CLUSTER_ENUM_RESOURCE",
    "CLUSTER_ENUM_RESTYPE",
    "CLUSTER_ENUM_SHARED_VOLUME_GROUP",
    "CLUSTER_ENUM_SHARED_VOLUME_RESOURCE",
    "CLUSTER_GROUP_AUTOFAILBACK_TYPE",
    "CLUSTER_GROUP_AUTOFAILBACK_TYPE_ClusterGroupAllowFailback",
    "CLUSTER_GROUP_AUTOFAILBACK_TYPE_ClusterGroupFailbackTypeCount",
    "CLUSTER_GROUP_AUTOFAILBACK_TYPE_ClusterGroupPreventFailback",
    "CLUSTER_GROUP_ENUM",
    "CLUSTER_GROUP_ENUM_ALL",
    "CLUSTER_GROUP_ENUM_CONTAINS",
    "CLUSTER_GROUP_ENUM_ITEM",
    "CLUSTER_GROUP_ENUM_ITEM_VERSION",
    "CLUSTER_GROUP_ENUM_ITEM_VERSION_1",
    "CLUSTER_GROUP_ENUM_NODES",
    "CLUSTER_GROUP_PRIORITY",
    "CLUSTER_GROUP_PRIORITY_PriorityDisabled",
    "CLUSTER_GROUP_PRIORITY_PriorityHigh",
    "CLUSTER_GROUP_PRIORITY_PriorityLow",
    "CLUSTER_GROUP_PRIORITY_PriorityMedium",
    "CLUSTER_GROUP_STATE",
    "CLUSTER_GROUP_STATE_ClusterGroupFailed",
    "CLUSTER_GROUP_STATE_ClusterGroupOffline",
    "CLUSTER_GROUP_STATE_ClusterGroupOnline",
    "CLUSTER_GROUP_STATE_ClusterGroupPartialOnline",
    "CLUSTER_GROUP_STATE_ClusterGroupPending",
    "CLUSTER_GROUP_STATE_ClusterGroupStateUnknown",
    "CLUSTER_GROUP_WAIT_DELAY",
    "CLUSTER_HANG_RECOVERY_ACTION_KEYNAME",
    "CLUSTER_HANG_TIMEOUT_KEYNAME",
    "CLUSTER_HEALTH_FAULT",
    "CLUSTER_HEALTH_FAULT_ARGS",
    "CLUSTER_HEALTH_FAULT_ARRAY",
    "CLUSTER_HEALTH_FAULT_DESCRIPTION",
    "CLUSTER_HEALTH_FAULT_DESCRIPTION_LABEL",
    "CLUSTER_HEALTH_FAULT_ERRORCODE",
    "CLUSTER_HEALTH_FAULT_ERRORCODE_LABEL",
    "CLUSTER_HEALTH_FAULT_ERRORTYPE",
    "CLUSTER_HEALTH_FAULT_ERRORTYPE_LABEL",
    "CLUSTER_HEALTH_FAULT_FLAGS",
    "CLUSTER_HEALTH_FAULT_FLAGS_LABEL",
    "CLUSTER_HEALTH_FAULT_ID",
    "CLUSTER_HEALTH_FAULT_ID_LABEL",
    "CLUSTER_HEALTH_FAULT_PROPERTY_NAME",
    "CLUSTER_HEALTH_FAULT_PROVIDER",
    "CLUSTER_HEALTH_FAULT_PROVIDER_LABEL",
    "CLUSTER_HEALTH_FAULT_RESERVED",
    "CLUSTER_HEALTH_FAULT_RESERVED_LABEL",
    "CLUSTER_INSTALLED",
    "CLUSTER_IP_ENTRY",
    "CLUSTER_MEMBERSHIP_INFO",
    "CLUSTER_MGMT_POINT_RESTYPE",
    "CLUSTER_MGMT_POINT_RESTYPE_AUTO",
    "CLUSTER_MGMT_POINT_RESTYPE_DNN",
    "CLUSTER_MGMT_POINT_RESTYPE_SNN",
    "CLUSTER_MGMT_POINT_TYPE",
    "CLUSTER_MGMT_POINT_TYPE_CNO",
    "CLUSTER_MGMT_POINT_TYPE_CNO_ONLY",
    "CLUSTER_MGMT_POINT_TYPE_DNS_ONLY",
    "CLUSTER_MGMT_POINT_TYPE_NONE",
    "CLUSTER_NAME_AUTO_BALANCER_LEVEL",
    "CLUSTER_NAME_AUTO_BALANCER_MODE",
    "CLUSTER_NAME_PREFERRED_SITE",
    "CLUSTER_NETINTERFACE_STATE",
    "CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceFailed",
    "CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceStateUnknown",
    "CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceUnavailable",
    "CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceUnreachable",
    "CLUSTER_NETINTERFACE_STATE_ClusterNetInterfaceUp",
    "CLUSTER_NETWORK_ENUM",
    "CLUSTER_NETWORK_ENUM_ALL",
    "CLUSTER_NETWORK_ENUM_NETINTERFACES",
    "CLUSTER_NETWORK_ROLE",
    "CLUSTER_NETWORK_ROLE_ClusterNetworkRoleClientAccess",
    "CLUSTER_NETWORK_ROLE_ClusterNetworkRoleInternalAndClient",
    "CLUSTER_NETWORK_ROLE_ClusterNetworkRoleInternalUse",
    "CLUSTER_NETWORK_ROLE_ClusterNetworkRoleNone",
    "CLUSTER_NETWORK_STATE",
    "CLUSTER_NETWORK_STATE_ClusterNetworkDown",
    "CLUSTER_NETWORK_STATE_ClusterNetworkPartitioned",
    "CLUSTER_NETWORK_STATE_ClusterNetworkStateUnknown",
    "CLUSTER_NETWORK_STATE_ClusterNetworkUnavailable",
    "CLUSTER_NETWORK_STATE_ClusterNetworkUp",
    "CLUSTER_NODE_DRAIN_STATUS",
    "CLUSTER_NODE_DRAIN_STATUS_ClusterNodeDrainStatusCount",
    "CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusCompleted",
    "CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusFailed",
    "CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusInProgress",
    "CLUSTER_NODE_DRAIN_STATUS_NodeDrainStatusNotInitiated",
    "CLUSTER_NODE_ENUM",
    "CLUSTER_NODE_ENUM_ALL",
    "CLUSTER_NODE_ENUM_GROUPS",
    "CLUSTER_NODE_ENUM_NETINTERFACES",
    "CLUSTER_NODE_ENUM_PREFERRED_GROUPS",
    "CLUSTER_NODE_RESUME_FAILBACK_TYPE",
    "CLUSTER_NODE_RESUME_FAILBACK_TYPE_ClusterNodeResumeFailbackTypeCount",
    "CLUSTER_NODE_RESUME_FAILBACK_TYPE_DoNotFailbackGroups",
    "CLUSTER_NODE_RESUME_FAILBACK_TYPE_FailbackGroupsImmediately",
    "CLUSTER_NODE_RESUME_FAILBACK_TYPE_FailbackGroupsPerPolicy",
    "CLUSTER_NODE_STATE",
    "CLUSTER_NODE_STATE_ClusterNodeDown",
    "CLUSTER_NODE_STATE_ClusterNodeJoining",
    "CLUSTER_NODE_STATE_ClusterNodePaused",
    "CLUSTER_NODE_STATE_ClusterNodeStateUnknown",
    "CLUSTER_NODE_STATE_ClusterNodeUp",
    "CLUSTER_NODE_STATUS",
    "CLUSTER_NODE_STATUS_NodeStatusAvoidPlacement",
    "CLUSTER_NODE_STATUS_NodeStatusDrainCompleted",
    "CLUSTER_NODE_STATUS_NodeStatusDrainFailed",
    "CLUSTER_NODE_STATUS_NodeStatusDrainInProgress",
    "CLUSTER_NODE_STATUS_NodeStatusIsolated",
    "CLUSTER_NODE_STATUS_NodeStatusMax",
    "CLUSTER_NODE_STATUS_NodeStatusNormal",
    "CLUSTER_NODE_STATUS_NodeStatusQuarantined",
    "CLUSTER_NOTIFICATIONS_V1",
    "CLUSTER_NOTIFICATIONS_V2",
    "CLUSTER_NOTIFICATIONS_VERSION",
    "CLUSTER_OBJECT_TYPE",
    "CLUSTER_OBJECT_TYPE_AFFINITYRULE",
    "CLUSTER_OBJECT_TYPE_CLUSTER",
    "CLUSTER_OBJECT_TYPE_GROUP",
    "CLUSTER_OBJECT_TYPE_GROUPSET",
    "CLUSTER_OBJECT_TYPE_NETWORK",
    "CLUSTER_OBJECT_TYPE_NETWORK_INTERFACE",
    "CLUSTER_OBJECT_TYPE_NODE",
    "CLUSTER_OBJECT_TYPE_NONE",
    "CLUSTER_OBJECT_TYPE_QUORUM",
    "CLUSTER_OBJECT_TYPE_REGISTRY",
    "CLUSTER_OBJECT_TYPE_RESOURCE",
    "CLUSTER_OBJECT_TYPE_RESOURCE_TYPE",
    "CLUSTER_OBJECT_TYPE_SHARED_VOLUME",
    "CLUSTER_PROPERTY_FORMAT",
    "CLUSTER_PROPERTY_SYNTAX",
    "CLUSTER_PROPERTY_TYPE",
    "CLUSTER_QUORUM_LOST",
    "CLUSTER_QUORUM_MAINTAINED",
    "CLUSTER_QUORUM_TYPE",
    "CLUSTER_QUORUM_TYPE_ModifyQuorum",
    "CLUSTER_QUORUM_TYPE_OperationalQuorum",
    "CLUSTER_QUORUM_VALUE",
    "CLUSTER_READ_BATCH_COMMAND",
    "CLUSTER_REG_COMMAND",
    "CLUSTER_REQUEST_REPLY_TIMEOUT",
    "CLUSTER_RESOURCE_APPLICATION_STATE",
    "CLUSTER_RESOURCE_APPLICATION_STATE_ClusterResourceApplicationOSHeartBeat",
    "CLUSTER_RESOURCE_APPLICATION_STATE_ClusterResourceApplicationReady",
    "CLUSTER_RESOURCE_APPLICATION_STATE_ClusterResourceApplicationStateUnknown",
    "CLUSTER_RESOURCE_CLASS",
    "CLUSTER_RESOURCE_CREATE_FLAGS",
    "CLUSTER_RESOURCE_DEFAULT_MONITOR",
    "CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION",
    "CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION_ClusterResourceEmbeddedFailureActionLogOnly",
    "CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION_ClusterResourceEmbeddedFailureActionNone",
    "CLUSTER_RESOURCE_EMBEDDED_FAILURE_ACTION_ClusterResourceEmbeddedFailureActionRecover",
    "CLUSTER_RESOURCE_ENUM",
    "CLUSTER_RESOURCE_ENUM_ALL",
    "CLUSTER_RESOURCE_ENUM_DEPENDS",
    "CLUSTER_RESOURCE_ENUM_ITEM",
    "CLUSTER_RESOURCE_ENUM_ITEM_VERSION",
    "CLUSTER_RESOURCE_ENUM_ITEM_VERSION_1",
    "CLUSTER_RESOURCE_ENUM_NODES",
    "CLUSTER_RESOURCE_ENUM_PROVIDES",
    "CLUSTER_RESOURCE_RESTART_ACTION",
    "CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceDontRestart",
    "CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceRestartActionCount",
    "CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceRestartNoNotify",
    "CLUSTER_RESOURCE_RESTART_ACTION_ClusterResourceRestartNotify",
    "CLUSTER_RESOURCE_SEPARATE_MONITOR",
    "CLUSTER_RESOURCE_STATE",
    "CLUSTER_RESOURCE_STATE_CHANGE_REASON",
    "CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonFailedMove",
    "CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonFailover",
    "CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonMove",
    "CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonRundown",
    "CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonShutdown",
    "CLUSTER_RESOURCE_STATE_CHANGE_REASON_eResourceStateChangeReasonUnknown",
    "CLUSTER_RESOURCE_STATE_ClusterResourceFailed",
    "CLUSTER_RESOURCE_STATE_ClusterResourceInherited",
    "CLUSTER_RESOURCE_STATE_ClusterResourceInitializing",
    "CLUSTER_RESOURCE_STATE_ClusterResourceOffline",
    "CLUSTER_RESOURCE_STATE_ClusterResourceOfflinePending",
    "CLUSTER_RESOURCE_STATE_ClusterResourceOnline",
    "CLUSTER_RESOURCE_STATE_ClusterResourceOnlinePending",
    "CLUSTER_RESOURCE_STATE_ClusterResourcePending",
    "CLUSTER_RESOURCE_STATE_ClusterResourceStateUnknown",
    "CLUSTER_RESOURCE_TYPE_ENUM",
    "CLUSTER_RESOURCE_TYPE_ENUM_ALL",
    "CLUSTER_RESOURCE_TYPE_ENUM_NODES",
    "CLUSTER_RESOURCE_TYPE_ENUM_RESOURCES",
    "CLUSTER_RESOURCE_TYPE_SPECIFIC_V2",
    "CLUSTER_RESOURCE_VALID_FLAGS",
    "CLUSTER_ROLE",
    "CLUSTER_ROLE_ClusterRoleDFSReplicatedFolder",
    "CLUSTER_ROLE_ClusterRoleDHCP",
    "CLUSTER_ROLE_ClusterRoleDTC",
    "CLUSTER_ROLE_ClusterRoleDistributedFileSystem",
    "CLUSTER_ROLE_ClusterRoleDistributedNetworkName",
    "CLUSTER_ROLE_ClusterRoleFileServer",
    "CLUSTER_ROLE_ClusterRoleFileShare",
    "CLUSTER_ROLE_ClusterRoleFileShareWitness",
    "CLUSTER_ROLE_ClusterRoleGenericApplication",
    "CLUSTER_ROLE_ClusterRoleGenericScript",
    "CLUSTER_ROLE_ClusterRoleGenericService",
    "CLUSTER_ROLE_ClusterRoleHardDisk",
    "CLUSTER_ROLE_ClusterRoleIPAddress",
    "CLUSTER_ROLE_ClusterRoleIPV6Address",
    "CLUSTER_ROLE_ClusterRoleIPV6TunnelAddress",
    "CLUSTER_ROLE_ClusterRoleISCSINameServer",
    "CLUSTER_ROLE_ClusterRoleISCSITargetServer",
    "CLUSTER_ROLE_ClusterRoleMSMQ",
    "CLUSTER_ROLE_ClusterRoleNFS",
    "CLUSTER_ROLE_ClusterRoleNetworkFileSystem",
    "CLUSTER_ROLE_ClusterRoleNetworkName",
    "CLUSTER_ROLE_ClusterRolePhysicalDisk",
    "CLUSTER_ROLE_ClusterRolePrintServer",
    "CLUSTER_ROLE_ClusterRoleSODAFileServer",
    "CLUSTER_ROLE_ClusterRoleStandAloneNamespaceServer",
    "CLUSTER_ROLE_ClusterRoleStoragePool",
    "CLUSTER_ROLE_ClusterRoleTaskScheduler",
    "CLUSTER_ROLE_ClusterRoleVirtualMachine",
    "CLUSTER_ROLE_ClusterRoleVirtualMachineConfiguration",
    "CLUSTER_ROLE_ClusterRoleVirtualMachineReplicaBroker",
    "CLUSTER_ROLE_ClusterRoleVolumeShadowCopyServiceTask",
    "CLUSTER_ROLE_ClusterRoleWINS",
    "CLUSTER_ROLE_STATE",
    "CLUSTER_ROLE_STATE_ClusterRoleClustered",
    "CLUSTER_ROLE_STATE_ClusterRoleUnclustered",
    "CLUSTER_ROLE_STATE_ClusterRoleUnknown",
    "CLUSTER_RUNNING",
    "CLUSTER_S2D_BUS_TYPES",
    "CLUSTER_S2D_CACHE_BEHAVIOR_FLAGS",
    "CLUSTER_S2D_CACHE_DESIRED_STATE",
    "CLUSTER_S2D_CACHE_FLASH_RESERVE_PERCENT",
    "CLUSTER_S2D_CACHE_METADATA_RESERVE",
    "CLUSTER_S2D_CACHE_PAGE_SIZE_KBYTES",
    "CLUSTER_S2D_ENABLED",
    "CLUSTER_S2D_IO_LATENCY_THRESHOLD",
    "CLUSTER_S2D_OPTIMIZATIONS",
    "CLUSTER_SETUP_PHASE",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseAddClusterProperties",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseAddNodeToCluster",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCleanupCOs",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCleanupNode",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseClusterGroupOnline",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseConfigureClusSvc",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseConfigureClusterAccount",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCoreGroupCleanup",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateClusterAccount",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateGroups",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateIPAddressResources",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateNetworkName",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseCreateResourceTypes",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseDeleteGroup",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseEvictNode",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseFailureCleanup",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseFormingCluster",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseGettingCurrentMembership",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseInitialize",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseMoveGroup",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseNodeUp",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseOfflineGroup",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseQueryClusterNameAccount",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseStartingClusSvc",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateClusDisk",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateClusterNameAccount",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateNetft",
    "CLUSTER_SETUP_PHASE_ClusterSetupPhaseValidateNodeState",
    "CLUSTER_SETUP_PHASE_SEVERITY",
    "CLUSTER_SETUP_PHASE_SEVERITY_ClusterSetupPhaseFatal",
    "CLUSTER_SETUP_PHASE_SEVERITY_ClusterSetupPhaseInformational",
    "CLUSTER_SETUP_PHASE_SEVERITY_ClusterSetupPhaseWarning",
    "CLUSTER_SETUP_PHASE_TYPE",
    "CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseContinue",
    "CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseEnd",
    "CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseReport",
    "CLUSTER_SETUP_PHASE_TYPE_ClusterSetupPhaseStart",
    "CLUSTER_SET_ACCESS_TYPE_ALLOWED",
    "CLUSTER_SET_ACCESS_TYPE_DENIED",
    "CLUSTER_SET_PASSWORD_STATUS",
    "CLUSTER_SHARED_VOLUMES_ROOT",
    "CLUSTER_SHARED_VOLUME_BACKUP_STATE",
    "CLUSTER_SHARED_VOLUME_BACKUP_STATE_VolumeBackupInProgress",
    "CLUSTER_SHARED_VOLUME_BACKUP_STATE_VolumeBackupNone",
    "CLUSTER_SHARED_VOLUME_RENAME_GUID_INPUT",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_GUID_NAME",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_NAME",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeNone",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeGuid",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeId",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeName",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_TYPE_ClusterSharedVolumeRenameInputTypeVolumeOffset",
    "CLUSTER_SHARED_VOLUME_RENAME_INPUT_VOLUME",
    "CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE",
    "CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumeHWSnapshotCompleted",
    "CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumePrepareForFreeze",
    "CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumePrepareForHWSnapshot",
    "CLUSTER_SHARED_VOLUME_SNAPSHOT_STATE_ClusterSharedVolumeSnapshotStateUnknown",
    "CLUSTER_SHARED_VOLUME_STATE",
    "CLUSTER_SHARED_VOLUME_STATE_INFO",
    "CLUSTER_SHARED_VOLUME_STATE_INFO_EX",
    "CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateActive",
    "CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateActiveRedirected",
    "CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateActiveVolumeRedirected",
    "CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStatePaused",
    "CLUSTER_SHARED_VOLUME_STATE_SharedVolumeStateUnavailable",
    "CLUSTER_SHARED_VOLUME_VSS_WRITER_OPERATION_TIMEOUT",
    "CLUSTER_STORAGENODE_STATE",
    "CLUSTER_STORAGENODE_STATE_ClusterStorageNodeDown",
    "CLUSTER_STORAGENODE_STATE_ClusterStorageNodePaused",
    "CLUSTER_STORAGENODE_STATE_ClusterStorageNodeStarting",
    "CLUSTER_STORAGENODE_STATE_ClusterStorageNodeStateUnknown",
    "CLUSTER_STORAGENODE_STATE_ClusterStorageNodeStopping",
    "CLUSTER_STORAGENODE_STATE_ClusterStorageNodeUp",
    "CLUSTER_UPGRADE_PHASE",
    "CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseInitialize",
    "CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseInstallingNewComponents",
    "CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseUpgradeComplete",
    "CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseUpgradingComponents",
    "CLUSTER_UPGRADE_PHASE_ClusterUpgradePhaseValidatingUpgrade",
    "CLUSTER_VALIDATE_CSV_FILENAME",
    "CLUSTER_VALIDATE_DIRECTORY",
    "CLUSTER_VALIDATE_NETNAME",
    "CLUSTER_VALIDATE_PATH",
    "CLUSTER_VERSION_FLAG_MIXED_MODE",
    "CLUSTER_VERSION_UNKNOWN",
    "CLUSTER_WITNESS_DATABASE_WRITE_TIMEOUT",
    "CLUSTER_WITNESS_FAILED_RESTART_INTERVAL",
    "CLUS_ACCESS_ANY",
    "CLUS_ACCESS_READ",
    "CLUS_ACCESS_WRITE",
    "CLUS_AFFINITY_RULE_DIFFERENT_FAULT_DOMAIN",
    "CLUS_AFFINITY_RULE_DIFFERENT_NODE",
    "CLUS_AFFINITY_RULE_MAX",
    "CLUS_AFFINITY_RULE_MIN",
    "CLUS_AFFINITY_RULE_NONE",
    "CLUS_AFFINITY_RULE_SAME_FAULT_DOMAIN",
    "CLUS_AFFINITY_RULE_SAME_NODE",
    "CLUS_AFFINITY_RULE_TYPE",
    "CLUS_CHARACTERISTICS",
    "CLUS_CHAR_BROADCAST_DELETE",
    "CLUS_CHAR_CLONES",
    "CLUS_CHAR_COEXIST_IN_SHARED_VOLUME_GROUP",
    "CLUS_CHAR_DELETE_REQUIRES_ALL_NODES",
    "CLUS_CHAR_DRAIN_LOCAL_OFFLINE",
    "CLUS_CHAR_INFRASTRUCTURE",
    "CLUS_CHAR_LOCAL_QUORUM",
    "CLUS_CHAR_LOCAL_QUORUM_DEBUG",
    "CLUS_CHAR_MONITOR_DETACH",
    "CLUS_CHAR_MONITOR_REATTACH",
    "CLUS_CHAR_NOTIFY_NEW_OWNER",
    "CLUS_CHAR_NOT_PREEMPTABLE",
    "CLUS_CHAR_OPERATION_CONTEXT",
    "CLUS_CHAR_PLACEMENT_DATA",
    "CLUS_CHAR_QUORUM",
    "CLUS_CHAR_REQUIRES_STATE_CHANGE_REASON",
    "CLUS_CHAR_SINGLE_CLUSTER_INSTANCE",
    "CLUS_CHAR_SINGLE_GROUP_INSTANCE",
    "CLUS_CHAR_SUPPORTS_UNMONITORED_STATE",
    "CLUS_CHAR_UNKNOWN",
    "CLUS_CHAR_VETO_DRAIN",
    "CLUS_CHKDSK_INFO",
    "CLUS_CREATE_CRYPT_CONTAINER_NOT_FOUND",
    "CLUS_CREATE_INFRASTRUCTURE_FILESERVER_INPUT",
    "CLUS_CREATE_INFRASTRUCTURE_FILESERVER_OUTPUT",
    "CLUS_CSV_MAINTENANCE_MODE_INFO",
    "CLUS_CSV_VOLUME_INFO",
    "CLUS_CSV_VOLUME_NAME",
    "CLUS_DISK_NUMBER_INFO",
    "CLUS_DNN_LEADER_STATUS",
    "CLUS_DNN_SODAFS_CLONE_STATUS",
    "CLUS_FLAGS",
    "CLUS_FLAG_CORE",
    "CLUS_FORCE_QUORUM_INFO",
    "CLUS_FTSET_INFO",
    "CLUS_GLOBAL",
    "CLUS_GROUP_DO_NOT_START",
    "CLUS_GROUP_START_ALLOWED",
    "CLUS_GROUP_START_ALWAYS",
    "CLUS_GROUP_START_SETTING",
    "CLUS_GRP_MOVE_ALLOWED",
    "CLUS_GRP_MOVE_LOCKED",
    "CLUS_HYBRID_QUORUM",
    "CLUS_MAINTENANCE_MODE_INFO",
    "CLUS_MAINTENANCE_MODE_INFOEX",
    "CLUS_MODIFY",
    "CLUS_NAME_RES_TYPE_CLUSTER_GROUPID",
    "CLUS_NAME_RES_TYPE_DATA_RESID",
    "CLUS_NAME_RES_TYPE_LOG_MULTIPLE",
    "CLUS_NAME_RES_TYPE_LOG_RESID",
    "CLUS_NAME_RES_TYPE_LOG_VOLUME",
    "CLUS_NAME_RES_TYPE_MINIMUM_LOG_SIZE",
    "CLUS_NAME_RES_TYPE_REPLICATION_GROUPID",
    "CLUS_NAME_RES_TYPE_REPLICATION_GROUP_TYPE",
    "CLUS_NAME_RES_TYPE_SOURCE_RESID",
    "CLUS_NAME_RES_TYPE_SOURCE_VOLUMES",
    "CLUS_NAME_RES_TYPE_TARGET_RESID",
    "CLUS_NAME_RES_TYPE_TARGET_VOLUMES",
    "CLUS_NAME_RES_TYPE_UNIT_LOG_SIZE_CHANGE",
    "CLUS_NETNAME_IP_INFO_ENTRY",
    "CLUS_NETNAME_IP_INFO_FOR_MULTICHANNEL",
    "CLUS_NETNAME_PWD_INFO",
    "CLUS_NETNAME_PWD_INFOEX",
    "CLUS_NETNAME_VS_TOKEN_INFO",
    "CLUS_NODE_MAJORITY_QUORUM",
    "CLUS_NOT_GLOBAL",
    "CLUS_NO_MODIFY",
    "CLUS_OBJECT_AFFINITYRULE",
    "CLUS_OBJECT_CLUSTER",
    "CLUS_OBJECT_GROUP",
    "CLUS_OBJECT_GROUPSET",
    "CLUS_OBJECT_INVALID",
    "CLUS_OBJECT_NETINTERFACE",
    "CLUS_OBJECT_NETWORK",
    "CLUS_OBJECT_NODE",
    "CLUS_OBJECT_RESOURCE",
    "CLUS_OBJECT_RESOURCE_TYPE",
    "CLUS_OBJECT_USER",
    "CLUS_PARTITION_INFO",
    "CLUS_PARTITION_INFO_EX",
    "CLUS_PARTITION_INFO_EX2",
    "CLUS_PROVIDER_STATE_CHANGE_INFO",
    "CLUS_RESCLASS_NETWORK",
    "CLUS_RESCLASS_STORAGE",
    "CLUS_RESCLASS_UNKNOWN",
    "CLUS_RESCLASS_USER",
    "CLUS_RESDLL_OFFLINE_DO_NOT_UPDATE_PERSISTENT_STATE",
    "CLUS_RESDLL_OFFLINE_DUE_TO_EMBEDDED_FAILURE",
    "CLUS_RESDLL_OFFLINE_IGNORE_NETWORK_CONNECTIVITY",
    "CLUS_RESDLL_OFFLINE_IGNORE_RESOURCE_STATUS",
    "CLUS_RESDLL_OFFLINE_QUEUE_ENABLED",
    "CLUS_RESDLL_OFFLINE_RETURNING_TO_SOURCE_NODE_BECAUSE_OF_ERROR",
    "CLUS_RESDLL_OFFLINE_RETURN_TO_SOURCE_NODE_ON_ERROR",
    "CLUS_RESDLL_ONLINE_IGNORE_NETWORK_CONNECTIVITY",
    "CLUS_RESDLL_ONLINE_IGNORE_RESOURCE_STATUS",
    "CLUS_RESDLL_ONLINE_RECOVER_MONITOR_STATE",
    "CLUS_RESDLL_ONLINE_RESTORE_ONLINE_STATE",
    "CLUS_RESDLL_ONLINE_RETURN_TO_SOURCE_NODE_ON_ERROR",
    "CLUS_RESDLL_OPEN_DONT_DELETE_TEMP_DISK",
    "CLUS_RESDLL_OPEN_RECOVER_MONITOR_STATE",
    "CLUS_RESOURCE_CLASS_INFO",
    "CLUS_RESSUBCLASS",
    "CLUS_RESSUBCLASS_NETWORK",
    "CLUS_RESSUBCLASS_NETWORK_INTERNET_PROTOCOL",
    "CLUS_RESSUBCLASS_SHARED",
    "CLUS_RESSUBCLASS_STORAGE",
    "CLUS_RESSUBCLASS_STORAGE_DISK",
    "CLUS_RESSUBCLASS_STORAGE_REPLICATION",
    "CLUS_RESSUBCLASS_STORAGE_SHARED_BUS",
    "CLUS_RESTYPE_NAME_CAU",
    "CLUS_RESTYPE_NAME_CLOUD_WITNESS",
    "CLUS_RESTYPE_NAME_CONTAINER",
    "CLUS_RESTYPE_NAME_CROSS_CLUSTER",
    "CLUS_RESTYPE_NAME_DFS",
    "CLUS_RESTYPE_NAME_DFSR",
    "CLUS_RESTYPE_NAME_DHCP",
    "CLUS_RESTYPE_NAME_DNN",
    "CLUS_RESTYPE_NAME_FILESERVER",
    "CLUS_RESTYPE_NAME_FILESHR",
    "CLUS_RESTYPE_NAME_FSWITNESS",
    "CLUS_RESTYPE_NAME_GENAPP",
    "CLUS_RESTYPE_NAME_GENSCRIPT",
    "CLUS_RESTYPE_NAME_GENSVC",
    "CLUS_RESTYPE_NAME_HARDDISK",
    "CLUS_RESTYPE_NAME_HCSVM",
    "CLUS_RESTYPE_NAME_HEALTH_SERVICE",
    "CLUS_RESTYPE_NAME_IPADDR",
    "CLUS_RESTYPE_NAME_IPV6_NATIVE",
    "CLUS_RESTYPE_NAME_IPV6_TUNNEL",
    "CLUS_RESTYPE_NAME_ISCSITARGET",
    "CLUS_RESTYPE_NAME_ISNS",
    "CLUS_RESTYPE_NAME_MSDTC",
    "CLUS_RESTYPE_NAME_MSMQ",
    "CLUS_RESTYPE_NAME_MSMQ_TRIGGER",
    "CLUS_RESTYPE_NAME_NAT",
    "CLUS_RESTYPE_NAME_NETNAME",
    "CLUS_RESTYPE_NAME_NETWORK_FILE_SYSTEM",
    "CLUS_RESTYPE_NAME_NEW_MSMQ",
    "CLUS_RESTYPE_NAME_NFS",
    "CLUS_RESTYPE_NAME_NFS_MSNS",
    "CLUS_RESTYPE_NAME_NFS_V2",
    "CLUS_RESTYPE_NAME_NV_PROVIDER_ADDRESS",
    "CLUS_RESTYPE_NAME_PHYS_DISK",
    "CLUS_RESTYPE_NAME_PRTSPLR",
    "CLUS_RESTYPE_NAME_SCALEOUT_MASTER",
    "CLUS_RESTYPE_NAME_SCALEOUT_WORKER",
    "CLUS_RESTYPE_NAME_SDDC_MANAGEMENT",
    "CLUS_RESTYPE_NAME_SODAFILESERVER",
    "CLUS_RESTYPE_NAME_STORAGE_POLICIES",
    "CLUS_RESTYPE_NAME_STORAGE_POOL",
    "CLUS_RESTYPE_NAME_STORAGE_REPLICA",
    "CLUS_RESTYPE_NAME_STORQOS",
    "CLUS_RESTYPE_NAME_TASKSCHEDULER",
    "CLUS_RESTYPE_NAME_VIRTUAL_IPV4",
    "CLUS_RESTYPE_NAME_VIRTUAL_IPV6",
    "CLUS_RESTYPE_NAME_VM",
    "CLUS_RESTYPE_NAME_VMREPLICA_BROKER",
    "CLUS_RESTYPE_NAME_VMREPLICA_COORDINATOR",
    "CLUS_RESTYPE_NAME_VM_CONFIG",
    "CLUS_RESTYPE_NAME_VM_WMI",
    "CLUS_RESTYPE_NAME_VSSTASK",
    "CLUS_RESTYPE_NAME_WINS",
    "CLUS_RES_NAME_SCALEOUT_MASTER",
    "CLUS_RES_NAME_SCALEOUT_WORKER",
    "CLUS_SCSI_ADDRESS",
    "CLUS_SET_MAINTENANCE_MODE_INPUT",
    "CLUS_SHARED_VOLUME_BACKUP_MODE",
    "CLUS_STARTING_PARAMS",
    "CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS",
    "CLUS_STORAGE_REMAP_DRIVELETTER",
    "CLUS_STORAGE_SET_DRIVELETTER",
    "CLUS_WORKER",
    "CREATEDC_PRESENT",
    "CREATE_CLUSTER_CONFIG",
    "CREATE_CLUSTER_MAJOR_VERSION_MASK",
    "CREATE_CLUSTER_NAME_ACCOUNT",
    "CREATE_CLUSTER_VERSION",
    "CTCTL_GET_FAULT_DOMAIN_STATE",
    "CTCTL_GET_ROUTESTATUS_BASIC",
    "CTCTL_GET_ROUTESTATUS_EXTENDED",
    "CanResourceBeDependent",
    "CancelClusterGroupOperation",
    "ChangeClusterResourceGroup",
    "ChangeClusterResourceGroupEx",
    "CloseCluster",
    "CloseClusterCryptProvider",
    "CloseClusterGroup",
    "CloseClusterGroupSet",
    "CloseClusterNetInterface",
    "CloseClusterNetwork",
    "CloseClusterNode",
    "CloseClusterNotifyPort",
    "CloseClusterResource",
    "ClusAddClusterHealthFault",
    "ClusApplication",
    "ClusCryptoKeys",
    "ClusDisk",
    "ClusDisks",
    "ClusGetClusterHealthFaults",
    "ClusNetInterface",
    "ClusNetInterfaces",
    "ClusNetwork",
    "ClusNetworkNetInterfaces",
    "ClusNetworks",
    "ClusNode",
    "ClusNodeNetInterfaces",
    "ClusNodes",
    "ClusPartition",
    "ClusPartitionEx",
    "ClusPartitions",
    "ClusProperties",
    "ClusProperty",
    "ClusPropertyValue",
    "ClusPropertyValueData",
    "ClusPropertyValues",
    "ClusRefObject",
    "ClusRegistryKeys",
    "ClusRemoveClusterHealthFault",
    "ClusResDependencies",
    "ClusResDependents",
    "ClusResGroup",
    "ClusResGroupPreferredOwnerNodes",
    "ClusResGroupResources",
    "ClusResGroups",
    "ClusResPossibleOwnerNodes",
    "ClusResType",
    "ClusResTypePossibleOwnerNodes",
    "ClusResTypeResources",
    "ClusResTypes",
    "ClusResource",
    "ClusResources",
    "ClusScsiAddress",
    "ClusVersion",
    "ClusWorkerCheckTerminate",
    "ClusWorkerCreate",
    "ClusWorkerTerminate",
    "ClusWorkerTerminateEx",
    "ClusWorkersTerminate",
    "Cluster",
    "ClusterAddGroupToAffinityRule",
    "ClusterAddGroupToGroupSet",
    "ClusterAddGroupToGroupSetWithDomains",
    "ClusterAffinityRuleControl",
    "ClusterClearBackupStateForSharedVolume",
    "ClusterCloseEnum",
    "ClusterCloseEnumEx",
    "ClusterControl",
    "ClusterCreateAffinityRule",
    "ClusterDecrypt",
    "ClusterEncrypt",
    "ClusterEnum",
    "ClusterEnumEx",
    "ClusterGetEnumCount",
    "ClusterGetEnumCountEx",
    "ClusterGetVolumeNameForVolumeMountPoint",
    "ClusterGetVolumePathName",
    "ClusterGroupCloseEnum",
    "ClusterGroupCloseEnumEx",
    "ClusterGroupControl",
    "ClusterGroupEnum",
    "ClusterGroupEnumEx",
    "ClusterGroupGetEnumCount",
    "ClusterGroupGetEnumCountEx",
    "ClusterGroupOpenEnum",
    "ClusterGroupOpenEnumEx",
    "ClusterGroupSetCloseEnum",
    "ClusterGroupSetControl",
    "ClusterGroupSetEnum",
    "ClusterGroupSetGetEnumCount",
    "ClusterGroupSetOpenEnum",
    "ClusterIsPathOnSharedVolume",
    "ClusterNames",
    "ClusterNetInterfaceCloseEnum",
    "ClusterNetInterfaceControl",
    "ClusterNetInterfaceEnum",
    "ClusterNetInterfaceOpenEnum",
    "ClusterNetworkCloseEnum",
    "ClusterNetworkControl",
    "ClusterNetworkEnum",
    "ClusterNetworkGetEnumCount",
    "ClusterNetworkOpenEnum",
    "ClusterNodeCloseEnum",
    "ClusterNodeCloseEnumEx",
    "ClusterNodeControl",
    "ClusterNodeEnum",
    "ClusterNodeEnumEx",
    "ClusterNodeGetEnumCount",
    "ClusterNodeGetEnumCountEx",
    "ClusterNodeOpenEnum",
    "ClusterNodeOpenEnumEx",
    "ClusterNodeReplacement",
    "ClusterOpenEnum",
    "ClusterOpenEnumEx",
    "ClusterPrepareSharedVolumeForBackup",
    "ClusterRegBatchAddCommand",
    "ClusterRegBatchCloseNotification",
    "ClusterRegBatchReadCommand",
    "ClusterRegCloseBatch",
    "ClusterRegCloseBatchEx",
    "ClusterRegCloseBatchNotifyPort",
    "ClusterRegCloseKey",
    "ClusterRegCloseReadBatch",
    "ClusterRegCloseReadBatchEx",
    "ClusterRegCloseReadBatchReply",
    "ClusterRegCreateBatch",
    "ClusterRegCreateBatchNotifyPort",
    "ClusterRegCreateKey",
    "ClusterRegCreateReadBatch",
    "ClusterRegDeleteKey",
    "ClusterRegDeleteValue",
    "ClusterRegEnumKey",
    "ClusterRegEnumValue",
    "ClusterRegGetBatchNotification",
    "ClusterRegGetKeySecurity",
    "ClusterRegOpenKey",
    "ClusterRegQueryInfoKey",
    "ClusterRegQueryValue",
    "ClusterRegReadBatchAddCommand",
    "ClusterRegReadBatchReplyNextCommand",
    "ClusterRegSetKeySecurity",
    "ClusterRegSetValue",
    "ClusterRegSyncDatabase",
    "ClusterRemoveAffinityRule",
    "ClusterRemoveGroupFromAffinityRule",
    "ClusterRemoveGroupFromGroupSet",
    "ClusterResourceCloseEnum",
    "ClusterResourceCloseEnumEx",
    "ClusterResourceControl",
    "ClusterResourceControlAsUser",
    "ClusterResourceEnum",
    "ClusterResourceEnumEx",
    "ClusterResourceGetEnumCount",
    "ClusterResourceGetEnumCountEx",
    "ClusterResourceOpenEnum",
    "ClusterResourceOpenEnumEx",
    "ClusterResourceTypeCloseEnum",
    "ClusterResourceTypeControl",
    "ClusterResourceTypeControlAsUser",
    "ClusterResourceTypeEnum",
    "ClusterResourceTypeGetEnumCount",
    "ClusterResourceTypeOpenEnum",
    "ClusterSetAccountAccess",
    "ClusterSharedVolumeSetSnapshotState",
    "ClusterUpgradeFunctionalLevel",
    "CreateCluster",
    "CreateClusterAvailabilitySet",
    "CreateClusterGroup",
    "CreateClusterGroupEx",
    "CreateClusterGroupSet",
    "CreateClusterNameAccount",
    "CreateClusterNotifyPort",
    "CreateClusterNotifyPortV2",
    "CreateClusterResource",
    "CreateClusterResourceType",
    "DNS_LENGTH",
    "DeleteClusterGroup",
    "DeleteClusterGroupSet",
    "DeleteClusterResource",
    "DeleteClusterResourceType",
    "DestroyCluster",
    "DestroyClusterGroup",
    "DetermineCNOResTypeFromCluster",
    "DetermineCNOResTypeFromNodelist",
    "DetermineClusterCloudTypeFromCluster",
    "DetermineClusterCloudTypeFromNodelist",
    "DomainNames",
    "ENABLE_CLUSTER_SHARED_VOLUMES",
    "EvictClusterNode",
    "EvictClusterNodeEx",
    "FAILURE_TYPE",
    "FAILURE_TYPE_EMBEDDED",
    "FAILURE_TYPE_GENERAL",
    "FAILURE_TYPE_NETWORK_LOSS",
    "FE_UPGRADE_VERSION",
    "FILESHARE_CHANGE",
    "FILESHARE_CHANGE_ADD",
    "FILESHARE_CHANGE_DEL",
    "FILESHARE_CHANGE_ENUM",
    "FILESHARE_CHANGE_LIST",
    "FILESHARE_CHANGE_MODIFY",
    "FILESHARE_CHANGE_NONE",
    "FailClusterResource",
    "FreeClusterCrypt",
    "FreeClusterHealthFault",
    "FreeClusterHealthFaultArray",
    "GET_OPERATION_CONTEXT_PARAMS",
    "GROUPSET_READY_SETTING_APPLICATION_READY",
    "GROUPSET_READY_SETTING_DELAY",
    "GROUPSET_READY_SETTING_ONLINE",
    "GROUPSET_READY_SETTING_OS_HEARTBEAT",
    "GROUP_FAILURE_INFO",
    "GROUP_FAILURE_INFO_BUFFER",
    "GROUP_FAILURE_INFO_VERSION_1",
    "GRP_PLACEMENT_OPTIONS",
    "GRP_PLACEMENT_OPTIONS_ALL",
    "GRP_PLACEMENT_OPTIONS_DEFAULT",
    "GRP_PLACEMENT_OPTIONS_DISABLE_AUTOBALANCING",
    "GRP_PLACEMENT_OPTIONS_MIN_VALUE",
    "GUID_PRESENT",
    "GetClusterFromGroup",
    "GetClusterFromNetInterface",
    "GetClusterFromNetwork",
    "GetClusterFromNode",
    "GetClusterFromResource",
    "GetClusterGroupKey",
    "GetClusterGroupState",
    "GetClusterInformation",
    "GetClusterKey",
    "GetClusterNetInterface",
    "GetClusterNetInterfaceKey",
    "GetClusterNetInterfaceState",
    "GetClusterNetworkId",
    "GetClusterNetworkKey",
    "GetClusterNetworkState",
    "GetClusterNodeId",
    "GetClusterNodeKey",
    "GetClusterNodeState",
    "GetClusterNotify",
    "GetClusterNotifyV2",
    "GetClusterQuorumResource",
    "GetClusterResourceDependencyExpression",
    "GetClusterResourceKey",
    "GetClusterResourceNetworkName",
    "GetClusterResourceState",
    "GetClusterResourceTypeKey",
    "GetNodeCloudTypeDW",
    "GetNodeClusterState",
    "GetNotifyEventHandle",
    "HCI_UPGRADE_BIT",
    "IGetClusterDataInfo",
    "IGetClusterGroupInfo",
    "IGetClusterNetInterfaceInfo",
    "IGetClusterNetworkInfo",
    "IGetClusterNodeInfo",
    "IGetClusterObjectInfo",
    "IGetClusterResourceInfo",
    "IGetClusterUIInfo",
    "ISClusApplication",
    "ISClusCryptoKeys",
    "ISClusDisk",
    "ISClusDisks",
    "ISClusNetInterface",
    "ISClusNetInterfaces",
    "ISClusNetwork",
    "ISClusNetworkNetInterfaces",
    "ISClusNetworks",
    "ISClusNode",
    "ISClusNodeNetInterfaces",
    "ISClusNodes",
    "ISClusPartition",
    "ISClusPartitionEx",
    "ISClusPartitions",
    "ISClusProperties",
    "ISClusProperty",
    "ISClusPropertyValue",
    "ISClusPropertyValueData",
    "ISClusPropertyValues",
    "ISClusRefObject",
    "ISClusRegistryKeys",
    "ISClusResDependencies",
    "ISClusResDependents",
    "ISClusResGroup",
    "ISClusResGroupPreferredOwnerNodes",
    "ISClusResGroupResources",
    "ISClusResGroups",
    "ISClusResPossibleOwnerNodes",
    "ISClusResType",
    "ISClusResTypePossibleOwnerNodes",
    "ISClusResTypeResources",
    "ISClusResTypes",
    "ISClusResource",
    "ISClusResources",
    "ISClusScsiAddress",
    "ISClusVersion",
    "ISCluster",
    "ISClusterNames",
    "ISDomainNames",
    "IWCContextMenuCallback",
    "IWCPropertySheetCallback",
    "IWCWizard97Callback",
    "IWCWizardCallback",
    "IWEExtendContextMenu",
    "IWEExtendPropertySheet",
    "IWEExtendWizard",
    "IWEExtendWizard97",
    "IWEInvokeCommand",
    "InitializeClusterHealthFault",
    "InitializeClusterHealthFaultArray",
    "IsFileOnClusterSharedVolume",
    "LOCKED_MODE_FLAGS_DONT_REMOVE_FROM_MOVE_QUEUE",
    "LOG_ERROR",
    "LOG_INFORMATION",
    "LOG_LEVEL",
    "LOG_SEVERE",
    "LOG_WARNING",
    "LPGROUP_CALLBACK_EX",
    "LPNODE_CALLBACK",
    "LPRESOURCE_CALLBACK",
    "LPRESOURCE_CALLBACK_EX",
    "MAINTENANCE_MODE_TYPE_ENUM",
    "MAINTENANCE_MODE_TYPE_ENUM_MaintenanceModeTypeDisableIsAliveCheck",
    "MAINTENANCE_MODE_TYPE_ENUM_MaintenanceModeTypeOfflineResource",
    "MAINTENANCE_MODE_TYPE_ENUM_MaintenanceModeTypeUnclusterResource",
    "MAINTENANCE_MODE_V2_SIG",
    "MAX_CLUSTERNAME_LENGTH",
    "MAX_CO_PASSWORD_LENGTH",
    "MAX_CO_PASSWORD_LENGTHEX",
    "MAX_CO_PASSWORD_STORAGEEX",
    "MAX_CREATINGDC_LENGTH",
    "MAX_OBJECTID",
    "MINIMUM_NEVER_PREEMPT_PRIORITY",
    "MINIMUM_PREEMPTOR_PRIORITY",
    "MN_UPGRADE_VERSION",
    "MONITOR_STATE",
    "MoveClusterGroup",
    "MoveClusterGroupEx",
    "NINETEEN_H1_UPGRADE_VERSION",
    "NINETEEN_H2_UPGRADE_VERSION",
    "NNLEN",
    "NODE_CLUSTER_STATE",
    "NODE_CLUSTER_STATE_ClusterStateNotConfigured",
    "NODE_CLUSTER_STATE_ClusterStateNotInstalled",
    "NODE_CLUSTER_STATE_ClusterStateNotRunning",
    "NODE_CLUSTER_STATE_ClusterStateRunning",
    "NOTIFY_FILTER_AND_TYPE",
    "NT10_MAJOR_VERSION",
    "NT11_MAJOR_VERSION",
    "NT12_MAJOR_VERSION",
    "NT13_MAJOR_VERSION",
    "NT4SP4_MAJOR_VERSION",
    "NT4_MAJOR_VERSION",
    "NT51_MAJOR_VERSION",
    "NT5_MAJOR_VERSION",
    "NT6_MAJOR_VERSION",
    "NT7_MAJOR_VERSION",
    "NT8_MAJOR_VERSION",
    "NT9_MAJOR_VERSION",
    "NodeUtilizationInfoElement",
    "OfflineClusterGroup",
    "OfflineClusterGroupEx",
    "OfflineClusterResource",
    "OfflineClusterResourceEx",
    "OnlineClusterGroup",
    "OnlineClusterGroupEx",
    "OnlineClusterResource",
    "OnlineClusterResourceEx",
    "OpenCluster",
    "OpenClusterCryptProvider",
    "OpenClusterCryptProviderEx",
    "OpenClusterEx",
    "OpenClusterGroup",
    "OpenClusterGroupEx",
    "OpenClusterGroupSet",
    "OpenClusterNetInterface",
    "OpenClusterNetInterfaceEx",
    "OpenClusterNetwork",
    "OpenClusterNetworkEx",
    "OpenClusterNode",
    "OpenClusterNodeById",
    "OpenClusterNodeEx",
    "OpenClusterResource",
    "OpenClusterResourceEx",
    "PARBITRATE_ROUTINE",
    "PBEGIN_RESCALL_AS_USER_ROUTINE",
    "PBEGIN_RESCALL_ROUTINE",
    "PBEGIN_RESTYPECALL_AS_USER_ROUTINE",
    "PBEGIN_RESTYPECALL_ROUTINE",
    "PCANCEL_ROUTINE",
    "PCHANGE_RESOURCE_PROCESS_FOR_DUMPS",
    "PCHANGE_RES_TYPE_PROCESS_FOR_DUMPS",
    "PCLOSE_CLUSTER_CRYPT_PROVIDER",
    "PCLOSE_ROUTINE",
    "PCLUSAPIClusWorkerCheckTerminate",
    "PCLUSAPI_ADD_CLUSTER_GROUP_DEPENDENCY",
    "PCLUSAPI_ADD_CLUSTER_GROUP_GROUPSET_DEPENDENCY",
    "PCLUSAPI_ADD_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY",
    "PCLUSAPI_ADD_CLUSTER_NODE",
    "PCLUSAPI_ADD_CLUSTER_NODE_EX",
    "PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY",
    "PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE",
    "PCLUSAPI_ADD_CROSS_CLUSTER_GROUPSET_DEPENDENCY",
    "PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES",
    "PCLUSAPI_BACKUP_CLUSTER_DATABASE",
    "PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT",
    "PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP",
    "PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP_EX",
    "PCLUSAPI_CLOSE_CLUSTER",
    "PCLUSAPI_CLOSE_CLUSTER_GROUP",
    "PCLUSAPI_CLOSE_CLUSTER_GROUP_GROUPSET",
    "PCLUSAPI_CLOSE_CLUSTER_NETWORK",
    "PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE",
    "PCLUSAPI_CLOSE_CLUSTER_NODE",
    "PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT",
    "PCLUSAPI_CLOSE_CLUSTER_RESOURCE",
    "PCLUSAPI_CLUSTER_ADD_GROUP_TO_AFFINITY_RULE",
    "PCLUSAPI_CLUSTER_ADD_GROUP_TO_GROUP_GROUPSET",
    "PCLUSAPI_CLUSTER_AFFINITY_RULE_CONTROL",
    "PCLUSAPI_CLUSTER_CLOSE_ENUM",
    "PCLUSAPI_CLUSTER_CLOSE_ENUM_EX",
    "PCLUSAPI_CLUSTER_CONTROL",
    "PCLUSAPI_CLUSTER_CREATE_AFFINITY_RULE",
    "PCLUSAPI_CLUSTER_ENUM",
    "PCLUSAPI_CLUSTER_ENUM_EX",
    "PCLUSAPI_CLUSTER_GET_ENUM_COUNT",
    "PCLUSAPI_CLUSTER_GET_ENUM_COUNT_EX",
    "PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM",
    "PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM_EX",
    "PCLUSAPI_CLUSTER_GROUP_CONTROL",
    "PCLUSAPI_CLUSTER_GROUP_ENUM",
    "PCLUSAPI_CLUSTER_GROUP_ENUM_EX",
    "PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT",
    "PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT_EX",
    "PCLUSAPI_CLUSTER_GROUP_GROUPSET_CONTROL",
    "PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM",
    "PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM_EX",
    "PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM",
    "PCLUSAPI_CLUSTER_NETWORK_CONTROL",
    "PCLUSAPI_CLUSTER_NETWORK_ENUM",
    "PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT",
    "PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM",
    "PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL",
    "PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM",
    "PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM_EX",
    "PCLUSAPI_CLUSTER_NODE_CONTROL",
    "PCLUSAPI_CLUSTER_NODE_ENUM",
    "PCLUSAPI_CLUSTER_NODE_ENUM_EX",
    "PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT",
    "PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT_EX",
    "PCLUSAPI_CLUSTER_NODE_OPEN_ENUM",
    "PCLUSAPI_CLUSTER_NODE_OPEN_ENUM_EX",
    "PCLUSAPI_CLUSTER_OPEN_ENUM",
    "PCLUSAPI_CLUSTER_OPEN_ENUM_EX",
    "PCLUSAPI_CLUSTER_REG_CLOSE_KEY",
    "PCLUSAPI_CLUSTER_REG_CREATE_BATCH",
    "PCLUSAPI_CLUSTER_REG_CREATE_KEY",
    "PCLUSAPI_CLUSTER_REG_DELETE_KEY",
    "PCLUSAPI_CLUSTER_REG_DELETE_VALUE",
    "PCLUSAPI_CLUSTER_REG_ENUM_KEY",
    "PCLUSAPI_CLUSTER_REG_ENUM_VALUE",
    "PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY",
    "PCLUSAPI_CLUSTER_REG_OPEN_KEY",
    "PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY",
    "PCLUSAPI_CLUSTER_REG_QUERY_VALUE",
    "PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY",
    "PCLUSAPI_CLUSTER_REG_SET_VALUE",
    "PCLUSAPI_CLUSTER_REG_SYNC_DATABASE",
    "PCLUSAPI_CLUSTER_REMOVE_AFFINITY_RULE",
    "PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_AFFINITY_RULE",
    "PCLUSAPI_CLUSTER_REMOVE_GROUP_FROM_GROUP_GROUPSET",
    "PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM",
    "PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM_EX",
    "PCLUSAPI_CLUSTER_RESOURCE_CONTROL",
    "PCLUSAPI_CLUSTER_RESOURCE_ENUM",
    "PCLUSAPI_CLUSTER_RESOURCE_ENUM_EX",
    "PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT",
    "PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT_EX",
    "PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM",
    "PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM_EX",
    "PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM",
    "PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL",
    "PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM",
    "PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT",
    "PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM",
    "PCLUSAPI_CLUSTER_UPGRADE",
    "PCLUSAPI_CLUS_WORKER_CREATE",
    "PCLUSAPI_CLUS_WORKER_TERMINATE",
    "PCLUSAPI_CREATE_CLUSTER",
    "PCLUSAPI_CREATE_CLUSTER_AVAILABILITY_SET",
    "PCLUSAPI_CREATE_CLUSTER_CNOLESS",
    "PCLUSAPI_CREATE_CLUSTER_GROUP",
    "PCLUSAPI_CREATE_CLUSTER_GROUPEX",
    "PCLUSAPI_CREATE_CLUSTER_GROUP_GROUPSET",
    "PCLUSAPI_CREATE_CLUSTER_NAME_ACCOUNT",
    "PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT",
    "PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT_V2",
    "PCLUSAPI_CREATE_CLUSTER_RESOURCE",
    "PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE",
    "PCLUSAPI_DELETE_CLUSTER_GROUP",
    "PCLUSAPI_DELETE_CLUSTER_GROUP_GROUPSET",
    "PCLUSAPI_DELETE_CLUSTER_RESOURCE",
    "PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE",
    "PCLUSAPI_DESTROY_CLUSTER",
    "PCLUSAPI_DESTROY_CLUSTER_GROUP",
    "PCLUSAPI_EVICT_CLUSTER_NODE",
    "PCLUSAPI_EVICT_CLUSTER_NODE_EX",
    "PCLUSAPI_FAIL_CLUSTER_RESOURCE",
    "PCLUSAPI_GET_CLUSTER_FROM_GROUP",
    "PCLUSAPI_GET_CLUSTER_FROM_GROUP_GROUPSET",
    "PCLUSAPI_GET_CLUSTER_FROM_NETWORK",
    "PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE",
    "PCLUSAPI_GET_CLUSTER_FROM_NODE",
    "PCLUSAPI_GET_CLUSTER_FROM_RESOURCE",
    "PCLUSAPI_GET_CLUSTER_GROUP_KEY",
    "PCLUSAPI_GET_CLUSTER_GROUP_STATE",
    "PCLUSAPI_GET_CLUSTER_INFORMATION",
    "PCLUSAPI_GET_CLUSTER_KEY",
    "PCLUSAPI_GET_CLUSTER_NETWORK_ID",
    "PCLUSAPI_GET_CLUSTER_NETWORK_KEY",
    "PCLUSAPI_GET_CLUSTER_NETWORK_STATE",
    "PCLUSAPI_GET_CLUSTER_NET_INTERFACE",
    "PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY",
    "PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE",
    "PCLUSAPI_GET_CLUSTER_NODE_ID",
    "PCLUSAPI_GET_CLUSTER_NODE_KEY",
    "PCLUSAPI_GET_CLUSTER_NODE_STATE",
    "PCLUSAPI_GET_CLUSTER_NOTIFY",
    "PCLUSAPI_GET_CLUSTER_NOTIFY_V2",
    "PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE",
    "PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION",
    "PCLUSAPI_GET_CLUSTER_RESOURCE_KEY",
    "PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME",
    "PCLUSAPI_GET_CLUSTER_RESOURCE_STATE",
    "PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY",
    "PCLUSAPI_GET_NODE_CLUSTER_STATE",
    "PCLUSAPI_GET_NOTIFY_EVENT_HANDLE_V2",
    "PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME",
    "PCLUSAPI_MOVE_CLUSTER_GROUP",
    "PCLUSAPI_OFFLINE_CLUSTER_GROUP",
    "PCLUSAPI_OFFLINE_CLUSTER_RESOURCE",
    "PCLUSAPI_ONLINE_CLUSTER_GROUP",
    "PCLUSAPI_ONLINE_CLUSTER_RESOURCE",
    "PCLUSAPI_OPEN_CLUSTER",
    "PCLUSAPI_OPEN_CLUSTER_EX",
    "PCLUSAPI_OPEN_CLUSTER_GROUP",
    "PCLUSAPI_OPEN_CLUSTER_GROUP_EX",
    "PCLUSAPI_OPEN_CLUSTER_GROUP_GROUPSET",
    "PCLUSAPI_OPEN_CLUSTER_NETINTERFACE_EX",
    "PCLUSAPI_OPEN_CLUSTER_NETWORK",
    "PCLUSAPI_OPEN_CLUSTER_NETWORK_EX",
    "PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE",
    "PCLUSAPI_OPEN_CLUSTER_NODE",
    "PCLUSAPI_OPEN_CLUSTER_NODE_EX",
    "PCLUSAPI_OPEN_CLUSTER_RESOURCE",
    "PCLUSAPI_OPEN_CLUSTER_RESOURCE_EX",
    "PCLUSAPI_OPEN_NODE_BY_ID",
    "PCLUSAPI_PAUSE_CLUSTER_NODE",
    "PCLUSAPI_PAUSE_CLUSTER_NODE_EX",
    "PCLUSAPI_REGISTER_CLUSTER_NOTIFY",
    "PCLUSAPI_REGISTER_CLUSTER_NOTIFY_V2",
    "PCLUSAPI_REMOVE_CLUSTER_GROUP_DEPENDENCY",
    "PCLUSAPI_REMOVE_CLUSTER_GROUP_GROUPSET_DEPENDENCY",
    "PCLUSAPI_REMOVE_CLUSTER_GROUP_TO_GROUP_GROUPSET_DEPENDENCY",
    "PCLUSAPI_REMOVE_CLUSTER_NAME_ACCOUNT",
    "PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY",
    "PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE",
    "PCLUSAPI_REMOVE_CROSS_CLUSTER_GROUPSET_DEPENDENCY",
    "PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES",
    "PCLUSAPI_RESTART_CLUSTER_RESOURCE",
    "PCLUSAPI_RESTORE_CLUSTER_DATABASE",
    "PCLUSAPI_RESUME_CLUSTER_NODE",
    "PCLUSAPI_RESUME_CLUSTER_NODE_EX",
    "PCLUSAPI_SET_CLUSTER_GROUP_GROUPSET_DEPENDENCY_EXPRESSION",
    "PCLUSAPI_SET_CLUSTER_GROUP_NAME",
    "PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST",
    "PCLUSAPI_SET_CLUSTER_NETWORK_NAME",
    "PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER",
    "PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE",
    "PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION",
    "PCLUSAPI_SET_CLUSTER_RESOURCE_NAME",
    "PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD",
    "PCLUSAPI_SET_GROUP_DEPENDENCY_EXPRESSION",
    "PCLUSAPI_SHARED_VOLUME_SET_SNAPSHOT_STATE",
    "PCLUSAPI_SetClusterName",
    "PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME",
    "PCLUSTER_DECRYPT",
    "PCLUSTER_ENCRYPT",
    "PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT",
    "PCLUSTER_GET_VOLUME_PATH_NAME",
    "PCLUSTER_IS_PATH_ON_SHARED_VOLUME",
    "PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP",
    "PCLUSTER_REG_BATCH_ADD_COMMAND",
    "PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION",
    "PCLUSTER_REG_BATCH_READ_COMMAND",
    "PCLUSTER_REG_CLOSE_BATCH",
    "PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT",
    "PCLUSTER_REG_CLOSE_READ_BATCH",
    "PCLUSTER_REG_CLOSE_READ_BATCH_EX",
    "PCLUSTER_REG_CLOSE_READ_BATCH_REPLY",
    "PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT",
    "PCLUSTER_REG_CREATE_READ_BATCH",
    "PCLUSTER_REG_GET_BATCH_NOTIFICATION",
    "PCLUSTER_REG_READ_BATCH_ADD_COMMAND",
    "PCLUSTER_REG_READ_BATCH_REPLY_NEXT_COMMAND",
    "PCLUSTER_SETUP_PROGRESS_CALLBACK",
    "PCLUSTER_SET_ACCOUNT_ACCESS",
    "PCLUSTER_UPGRADE_PROGRESS_CALLBACK",
    "PEND_CONTROL_CALL",
    "PEND_TYPE_CONTROL_CALL",
    "PEXTEND_RES_CONTROL_CALL",
    "PEXTEND_RES_TYPE_CONTROL_CALL",
    "PFREE_CLUSTER_CRYPT",
    "PIS_ALIVE_ROUTINE",
    "PLACEMENT_OPTIONS",
    "PLACEMENT_OPTIONS_ALL",
    "PLACEMENT_OPTIONS_AVAILABILITY_SET_DOMAIN_AFFINITY",
    "PLACEMENT_OPTIONS_CONSIDER_OFFLINE_VMS",
    "PLACEMENT_OPTIONS_DEFAULT_PLACEMENT_OPTIONS",
    "PLACEMENT_OPTIONS_DISABLE_CSV_VM_DEPENDENCY",
    "PLACEMENT_OPTIONS_DONT_RESUME_AVAILABILTY_SET_VMS_WITH_EXISTING_TEMP_DISK",
    "PLACEMENT_OPTIONS_DONT_RESUME_VMS_WITH_EXISTING_TEMP_DISK",
    "PLACEMENT_OPTIONS_DONT_USE_CPU",
    "PLACEMENT_OPTIONS_DONT_USE_LOCAL_TEMP_DISK",
    "PLACEMENT_OPTIONS_DONT_USE_MEMORY",
    "PLACEMENT_OPTIONS_MIN_VALUE",
    "PLACEMENT_OPTIONS_SAVE_AVAILABILTY_SET_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE",
    "PLACEMENT_OPTIONS_SAVE_VMS_WITH_LOCAL_DISK_ON_DRAIN_OVERWRITE",
    "PLOG_EVENT_ROUTINE",
    "PLOOKS_ALIVE_ROUTINE",
    "POFFLINE_ROUTINE",
    "POFFLINE_V2_ROUTINE",
    "PONLINE_ROUTINE",
    "PONLINE_V2_ROUTINE",
    "POPEN_CLUSTER_CRYPT_PROVIDER",
    "POPEN_CLUSTER_CRYPT_PROVIDEREX",
    "POPEN_ROUTINE",
    "POPEN_V2_ROUTINE",
    "POST_UPGRADE_VERSION_INFO",
    "PQUERY_APPINSTANCE_VERSION",
    "PQUORUM_RESOURCE_LOST",
    "PRAISE_RES_TYPE_NOTIFICATION",
    "PREGISTER_APPINSTANCE",
    "PREGISTER_APPINSTANCE_VERSION",
    "PRELEASE_ROUTINE",
    "PREQUEST_DUMP_ROUTINE",
    "PRESET_ALL_APPINSTANCE_VERSIONS",
    "PRESOURCE_CONTROL_ROUTINE",
    "PRESOURCE_TYPE_CONTROL_ROUTINE",
    "PRESUTIL_ADD_UNKNOWN_PROPERTIES",
    "PRESUTIL_CREATE_DIRECTORY_TREE",
    "PRESUTIL_DUP_PARAMETER_BLOCK",
    "PRESUTIL_DUP_STRING",
    "PRESUTIL_ENUM_PRIVATE_PROPERTIES",
    "PRESUTIL_ENUM_PROPERTIES",
    "PRESUTIL_ENUM_RESOURCES",
    "PRESUTIL_ENUM_RESOURCES_EX",
    "PRESUTIL_ENUM_RESOURCES_EX2",
    "PRESUTIL_EXPAND_ENVIRONMENT_STRINGS",
    "PRESUTIL_FIND_BINARY_PROPERTY",
    "PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER",
    "PRESUTIL_FIND_DWORD_PROPERTY",
    "PRESUTIL_FIND_EXPANDED_SZ_PROPERTY",
    "PRESUTIL_FIND_EXPAND_SZ_PROPERTY",
    "PRESUTIL_FIND_FILETIME_PROPERTY",
    "PRESUTIL_FIND_LONG_PROPERTY",
    "PRESUTIL_FIND_MULTI_SZ_PROPERTY",
    "PRESUTIL_FIND_SZ_PROPERTY",
    "PRESUTIL_FIND_ULARGEINTEGER_PROPERTY",
    "PRESUTIL_FREE_ENVIRONMENT",
    "PRESUTIL_FREE_PARAMETER_BLOCK",
    "PRESUTIL_GET_ALL_PROPERTIES",
    "PRESUTIL_GET_BINARY_PROPERTY",
    "PRESUTIL_GET_BINARY_VALUE",
    "PRESUTIL_GET_CORE_CLUSTER_RESOURCES",
    "PRESUTIL_GET_CORE_CLUSTER_RESOURCES_EX",
    "PRESUTIL_GET_DWORD_PROPERTY",
    "PRESUTIL_GET_DWORD_VALUE",
    "PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME",
    "PRESUTIL_GET_EXPAND_SZ_VALUE",
    "PRESUTIL_GET_FILETIME_PROPERTY",
    "PRESUTIL_GET_LONG_PROPERTY",
    "PRESUTIL_GET_MULTI_SZ_PROPERTY",
    "PRESUTIL_GET_PRIVATE_PROPERTIES",
    "PRESUTIL_GET_PROPERTIES",
    "PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK",
    "PRESUTIL_GET_PROPERTY",
    "PRESUTIL_GET_PROPERTY_FORMATS",
    "PRESUTIL_GET_PROPERTY_SIZE",
    "PRESUTIL_GET_QWORD_VALUE",
    "PRESUTIL_GET_RESOURCE_DEPENDENCY",
    "PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS",
    "PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS_EX",
    "PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME",
    "PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME_EX",
    "PRESUTIL_GET_RESOURCE_DEPENDENCY_EX",
    "PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS",
    "PRESUTIL_GET_RESOURCE_NAME",
    "PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY",
    "PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY_EX",
    "PRESUTIL_GET_SZ_PROPERTY",
    "PRESUTIL_GET_SZ_VALUE",
    "PRESUTIL_IS_PATH_VALID",
    "PRESUTIL_IS_RESOURCE_CLASS_EQUAL",
    "PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK",
    "PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT",
    "PRESUTIL_RESOURCES_EQUAL",
    "PRESUTIL_RESOURCE_TYPES_EQUAL",
    "PRESUTIL_SET_BINARY_VALUE",
    "PRESUTIL_SET_DWORD_VALUE",
    "PRESUTIL_SET_EXPAND_SZ_VALUE",
    "PRESUTIL_SET_MULTI_SZ_VALUE",
    "PRESUTIL_SET_PRIVATE_PROPERTY_LIST",
    "PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK",
    "PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX",
    "PRESUTIL_SET_PROPERTY_TABLE",
    "PRESUTIL_SET_PROPERTY_TABLE_EX",
    "PRESUTIL_SET_QWORD_VALUE",
    "PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT",
    "PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS",
    "PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS_EX",
    "PRESUTIL_SET_SZ_VALUE",
    "PRESUTIL_SET_UNKNOWN_PROPERTIES",
    "PRESUTIL_START_RESOURCE_SERVICE",
    "PRESUTIL_STOP_RESOURCE_SERVICE",
    "PRESUTIL_STOP_SERVICE",
    "PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL",
    "PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST",
    "PRESUTIL_VERIFY_PROPERTY_TABLE",
    "PRESUTIL_VERIFY_RESOURCE_SERVICE",
    "PRESUTIL_VERIFY_SERVICE",
    "PRES_UTIL_VERIFY_SHUTDOWN_SAFE",
    "PSET_INTERNAL_STATE",
    "PSET_RESOURCE_INMEMORY_NODELOCAL_PROPERTIES_ROUTINE",
    "PSET_RESOURCE_LOCKED_MODE_EX_ROUTINE",
    "PSET_RESOURCE_LOCKED_MODE_ROUTINE",
    "PSET_RESOURCE_STATUS_ROUTINE",
    "PSET_RESOURCE_STATUS_ROUTINE_EX",
    "PSIGNAL_FAILURE_ROUTINE",
    "PSTARTUP_EX_ROUTINE",
    "PSTARTUP_ROUTINE",
    "PTERMINATE_ROUTINE",
    "PWORKER_START_ROUTINE",
    "PauseClusterNode",
    "PauseClusterNodeEx",
    "PaxosTagCStruct",
    "QueryAppInstanceVersion",
    "RESDLL_CONTEXT_OPERATION_TYPE",
    "RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeDrain",
    "RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeDrainFailure",
    "RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeEmbeddedFailure",
    "RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeFailback",
    "RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeNetworkDisconnect",
    "RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypeNetworkDisconnectMoveRetry",
    "RESDLL_CONTEXT_OPERATION_TYPE_ResdllContextOperationTypePreemption",
    "RESOURCE_EXIT_STATE",
    "RESOURCE_EXIT_STATE_ResourceExitStateContinue",
    "RESOURCE_EXIT_STATE_ResourceExitStateMax",
    "RESOURCE_EXIT_STATE_ResourceExitStateTerminate",
    "RESOURCE_FAILURE_INFO",
    "RESOURCE_FAILURE_INFO_BUFFER",
    "RESOURCE_FAILURE_INFO_VERSION_1",
    "RESOURCE_MONITOR_STATE",
    "RESOURCE_MONITOR_STATE_RmonArbitrateResource",
    "RESOURCE_MONITOR_STATE_RmonDeadlocked",
    "RESOURCE_MONITOR_STATE_RmonDeletingResource",
    "RESOURCE_MONITOR_STATE_RmonIdle",
    "RESOURCE_MONITOR_STATE_RmonInitializing",
    "RESOURCE_MONITOR_STATE_RmonInitializingResource",
    "RESOURCE_MONITOR_STATE_RmonIsAlivePoll",
    "RESOURCE_MONITOR_STATE_RmonLooksAlivePoll",
    "RESOURCE_MONITOR_STATE_RmonOfflineResource",
    "RESOURCE_MONITOR_STATE_RmonOnlineResource",
    "RESOURCE_MONITOR_STATE_RmonReleaseResource",
    "RESOURCE_MONITOR_STATE_RmonResourceControl",
    "RESOURCE_MONITOR_STATE_RmonResourceTypeControl",
    "RESOURCE_MONITOR_STATE_RmonShutdownResource",
    "RESOURCE_MONITOR_STATE_RmonStartingResource",
    "RESOURCE_MONITOR_STATE_RmonTerminateResource",
    "RESOURCE_STATUS",
    "RESOURCE_STATUS_EX",
    "RESOURCE_TERMINAL_FAILURE_INFO_BUFFER",
    "RESTYPE_MONITOR_SHUTTING_DOWN_CLUSSVC_CRASH",
    "RESTYPE_MONITOR_SHUTTING_DOWN_NODE_STOP",
    "RESUTIL_FILETIME_DATA",
    "RESUTIL_LARGEINT_DATA",
    "RESUTIL_PROPERTY_ITEM",
    "RESUTIL_PROPITEM_IN_MEMORY",
    "RESUTIL_PROPITEM_READ_ONLY",
    "RESUTIL_PROPITEM_REQUIRED",
    "RESUTIL_PROPITEM_SIGNED",
    "RESUTIL_ULARGEINT_DATA",
    "RS3_UPGRADE_VERSION",
    "RS4_UPGRADE_VERSION",
    "RS5_UPGRADE_VERSION",
    "RedirectedIOReasonBitLockerInitializing",
    "RedirectedIOReasonFileSystemTiering",
    "RedirectedIOReasonMax",
    "RedirectedIOReasonReFs",
    "RedirectedIOReasonUnsafeFileSystemFilter",
    "RedirectedIOReasonUnsafeVolumeFilter",
    "RedirectedIOReasonUserRequest",
    "RegisterAppInstance",
    "RegisterAppInstanceVersion",
    "RegisterClusterNotify",
    "RegisterClusterNotifyV2",
    "RegisterClusterResourceTypeNotifyV2",
    "RemoveClusterGroupDependency",
    "RemoveClusterGroupSetDependency",
    "RemoveClusterGroupToGroupSetDependency",
    "RemoveClusterNameAccount",
    "RemoveClusterResourceDependency",
    "RemoveClusterResourceNode",
    "RemoveClusterStorageNode",
    "RemoveCrossClusterGroupSetDependency",
    "RemoveResourceFromClusterSharedVolumes",
    "ResUtilAddUnknownProperties",
    "ResUtilCreateDirectoryTree",
    "ResUtilDupGroup",
    "ResUtilDupParameterBlock",
    "ResUtilDupResource",
    "ResUtilDupString",
    "ResUtilEnumGroups",
    "ResUtilEnumGroupsEx",
    "ResUtilEnumPrivateProperties",
    "ResUtilEnumProperties",
    "ResUtilEnumResources",
    "ResUtilEnumResourcesEx",
    "ResUtilEnumResourcesEx2",
    "ResUtilExpandEnvironmentStrings",
    "ResUtilFindBinaryProperty",
    "ResUtilFindDependentDiskResourceDriveLetter",
    "ResUtilFindDwordProperty",
    "ResUtilFindExpandSzProperty",
    "ResUtilFindExpandedSzProperty",
    "ResUtilFindFileTimeProperty",
    "ResUtilFindLongProperty",
    "ResUtilFindMultiSzProperty",
    "ResUtilFindSzProperty",
    "ResUtilFindULargeIntegerProperty",
    "ResUtilFreeEnvironment",
    "ResUtilFreeParameterBlock",
    "ResUtilGetAllProperties",
    "ResUtilGetBinaryProperty",
    "ResUtilGetBinaryValue",
    "ResUtilGetClusterGroupType",
    "ResUtilGetClusterId",
    "ResUtilGetClusterRoleState",
    "ResUtilGetCoreClusterResources",
    "ResUtilGetCoreClusterResourcesEx",
    "ResUtilGetCoreGroup",
    "ResUtilGetDwordProperty",
    "ResUtilGetDwordValue",
    "ResUtilGetEnvironmentWithNetName",
    "ResUtilGetFileTimeProperty",
    "ResUtilGetLongProperty",
    "ResUtilGetMultiSzProperty",
    "ResUtilGetPrivateProperties",
    "ResUtilGetProperties",
    "ResUtilGetPropertiesToParameterBlock",
    "ResUtilGetProperty",
    "ResUtilGetPropertyFormats",
    "ResUtilGetPropertySize",
    "ResUtilGetQwordValue",
    "ResUtilGetResourceDependency",
    "ResUtilGetResourceDependencyByClass",
    "ResUtilGetResourceDependencyByClassEx",
    "ResUtilGetResourceDependencyByName",
    "ResUtilGetResourceDependencyByNameEx",
    "ResUtilGetResourceDependencyEx",
    "ResUtilGetResourceDependentIPAddressProps",
    "ResUtilGetResourceName",
    "ResUtilGetResourceNameDependency",
    "ResUtilGetResourceNameDependencyEx",
    "ResUtilGetSzProperty",
    "ResUtilGetSzValue",
    "ResUtilGroupsEqual",
    "ResUtilIsPathValid",
    "ResUtilIsResourceClassEqual",
    "ResUtilLeftPaxosIsLessThanRight",
    "ResUtilNodeEnum",
    "ResUtilPaxosComparer",
    "ResUtilPropertyListFromParameterBlock",
    "ResUtilRemoveResourceServiceEnvironment",
    "ResUtilResourceDepEnum",
    "ResUtilResourceTypesEqual",
    "ResUtilResourcesEqual",
    "ResUtilSetBinaryValue",
    "ResUtilSetDwordValue",
    "ResUtilSetExpandSzValue",
    "ResUtilSetMultiSzValue",
    "ResUtilSetPrivatePropertyList",
    "ResUtilSetPropertyParameterBlock",
    "ResUtilSetPropertyParameterBlockEx",
    "ResUtilSetPropertyTable",
    "ResUtilSetPropertyTableEx",
    "ResUtilSetQwordValue",
    "ResUtilSetResourceServiceEnvironment",
    "ResUtilSetResourceServiceStartParameters",
    "ResUtilSetResourceServiceStartParametersEx",
    "ResUtilSetSzValue",
    "ResUtilSetUnknownProperties",
    "ResUtilSetValueEx",
    "ResUtilStartResourceService",
    "ResUtilStopResourceService",
    "ResUtilStopService",
    "ResUtilTerminateServiceProcessFromResDll",
    "ResUtilVerifyPrivatePropertyList",
    "ResUtilVerifyPropertyTable",
    "ResUtilVerifyResourceService",
    "ResUtilVerifyService",
    "ResUtilVerifyShutdownSafe",
    "ResUtilsDeleteKeyTree",
    "ResetAllAppInstanceVersions",
    "ResourceUtilizationInfoElement",
    "RestartClusterResource",
    "RestoreClusterDatabase",
    "ResumeClusterNode",
    "ResumeClusterNodeEx",
    "SET_APPINSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR",
    "SET_APP_INSTANCE_CSV_FLAGS",
    "SR_DISK_REPLICATION_ELIGIBLE",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleAlreadyInReplication",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleFileSystemNotSupported",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleInSameSite",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleInsufficientFreeSpace",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleNone",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleNotGpt",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleNotInSameSite",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleOffline",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleOther",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligiblePartitionLayoutMismatch",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleSameAsSpecifiedDisk",
    "SR_DISK_REPLICATION_ELIGIBLE_SrDiskReplicationEligibleYes",
    "SR_REPLICATED_DISK_TYPE",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeDestination",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeLogDestination",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeLogNotInParthership",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeLogSource",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeNone",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeNotInParthership",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeOther",
    "SR_REPLICATED_DISK_TYPE_SrReplicatedDiskTypeSource",
    "SR_REPLICATED_PARTITION_DISALLOW_MULTINODE_IO",
    "SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP",
    "SR_RESOURCE_TYPE_ADD_REPLICATION_GROUP_RESULT",
    "SR_RESOURCE_TYPE_DISK_INFO",
    "SR_RESOURCE_TYPE_ELIGIBLE_DISKS_RESULT",
    "SR_RESOURCE_TYPE_QUERY_ELIGIBLE_LOGDISKS",
    "SR_RESOURCE_TYPE_QUERY_ELIGIBLE_SOURCE_DATADISKS",
    "SR_RESOURCE_TYPE_QUERY_ELIGIBLE_TARGET_DATADISKS",
    "SR_RESOURCE_TYPE_REPLICATED_DISK",
    "SR_RESOURCE_TYPE_REPLICATED_DISKS_RESULT",
    "SR_RESOURCE_TYPE_REPLICATED_PARTITION_ARRAY",
    "SR_RESOURCE_TYPE_REPLICATED_PARTITION_INFO",
    "STARTUP_EX_ROUTINE",
    "STARTUP_ROUTINE",
    "SetAppInstanceCsvFlags",
    "SetClusterGroupName",
    "SetClusterGroupNodeList",
    "SetClusterGroupSetDependencyExpression",
    "SetClusterName",
    "SetClusterNetworkName",
    "SetClusterNetworkPriorityOrder",
    "SetClusterQuorumResource",
    "SetClusterResourceDependencyExpression",
    "SetClusterResourceName",
    "SetClusterServiceAccountPassword",
    "SetGroupDependencyExpression",
    "USE_CLIENT_ACCESS_NETWORKS_FOR_CSV",
    "VM_RESDLL_CONTEXT",
    "VM_RESDLL_CONTEXT_VmResdllContextLiveMigration",
    "VM_RESDLL_CONTEXT_VmResdllContextSave",
    "VM_RESDLL_CONTEXT_VmResdllContextShutdown",
    "VM_RESDLL_CONTEXT_VmResdllContextShutdownForce",
    "VM_RESDLL_CONTEXT_VmResdllContextTurnOff",
    "VolumeRedirectedIOReasonMax",
    "VolumeRedirectedIOReasonNoDiskConnectivity",
    "VolumeRedirectedIOReasonStorageSpaceNotAttached",
    "VolumeRedirectedIOReasonVolumeReplicationEnabled",
    "WS2016_RTM_UPGRADE_VERSION",
    "WS2016_TP4_UPGRADE_VERSION",
    "WS2016_TP5_UPGRADE_VERSION",
    "WitnessTagHelper",
    "WitnessTagUpdateHelper",
    "_HCHANGE",
    "_HCLUSCRYPTPROVIDER",
    "_HCLUSENUM",
    "_HCLUSENUMEX",
    "_HCLUSTER",
    "_HGROUP",
    "_HGROUPENUM",
    "_HGROUPENUMEX",
    "_HGROUPSET",
    "_HGROUPSETENUM",
    "_HNETINTERFACE",
    "_HNETINTERFACEENUM",
    "_HNETWORK",
    "_HNETWORKENUM",
    "_HNODE",
    "_HNODEENUM",
    "_HNODEENUMEX",
    "_HREGBATCH",
    "_HREGBATCHNOTIFICATION",
    "_HREGBATCHPORT",
    "_HREGREADBATCH",
    "_HREGREADBATCHREPLY",
    "_HRESENUM",
    "_HRESENUMEX",
    "_HRESOURCE",
    "_HRESTYPEENUM",
]
