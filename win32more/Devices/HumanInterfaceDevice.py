from win32more import *
import win32more.Devices.HumanInterfaceDevice
import win32more.Foundation
import win32more.System.Com
import win32more.System.Registry
import win32more.UI.Shell.PropertiesSystem

def __getattr__(name):
    module = globals()
    try:
        f = module[f"_define_{name}"]
    except KeyError:
        raise AttributeError(f"module '{__name__}' has no attribute '{name}'") from None
    module[name] = f()
    return module[name]
def __dir__():
    return __all__
DIRECTINPUT_VERSION = 2048
JOY_HW_NONE = 0
JOY_HW_CUSTOM = 1
JOY_HW_2A_2B_GENERIC = 2
JOY_HW_2A_4B_GENERIC = 3
JOY_HW_2B_GAMEPAD = 4
JOY_HW_2B_FLIGHTYOKE = 5
JOY_HW_2B_FLIGHTYOKETHROTTLE = 6
JOY_HW_3A_2B_GENERIC = 7
JOY_HW_3A_4B_GENERIC = 8
JOY_HW_4B_GAMEPAD = 9
JOY_HW_4B_FLIGHTYOKE = 10
JOY_HW_4B_FLIGHTYOKETHROTTLE = 11
JOY_HW_TWO_2A_2B_WITH_Y = 12
JOY_HW_LASTENTRY = 13
JOY_ISCAL_XY = 1
JOY_ISCAL_Z = 2
JOY_ISCAL_R = 4
JOY_ISCAL_U = 8
JOY_ISCAL_V = 16
JOY_ISCAL_POV = 32
JOY_POV_NUMDIRS = 4
JOY_POVVAL_FORWARD = 0
JOY_POVVAL_BACKWARD = 1
JOY_POVVAL_LEFT = 2
JOY_POVVAL_RIGHT = 3
JOY_HWS_HASZ = 1
JOY_HWS_HASPOV = 2
JOY_HWS_POVISBUTTONCOMBOS = 4
JOY_HWS_POVISPOLL = 8
JOY_HWS_ISYOKE = 16
JOY_HWS_ISGAMEPAD = 32
JOY_HWS_ISCARCTRL = 64
JOY_HWS_XISJ1Y = 128
JOY_HWS_XISJ2X = 256
JOY_HWS_XISJ2Y = 512
JOY_HWS_YISJ1X = 1024
JOY_HWS_YISJ2X = 2048
JOY_HWS_YISJ2Y = 4096
JOY_HWS_ZISJ1X = 8192
JOY_HWS_ZISJ1Y = 16384
JOY_HWS_ZISJ2X = 32768
JOY_HWS_POVISJ1X = 65536
JOY_HWS_POVISJ1Y = 131072
JOY_HWS_POVISJ2X = 262144
JOY_HWS_HASR = 524288
JOY_HWS_RISJ1X = 1048576
JOY_HWS_RISJ1Y = 2097152
JOY_HWS_RISJ2Y = 4194304
JOY_HWS_HASU = 8388608
JOY_HWS_HASV = 16777216
JOY_US_HASRUDDER = 1
JOY_US_PRESENT = 2
JOY_US_ISOEM = 4
JOY_US_RESERVED = -2147483648
JOYTYPE_ZEROGAMEENUMOEMDATA = 1
JOYTYPE_NOAUTODETECTGAMEPORT = 2
JOYTYPE_NOHIDDIRECT = 4
JOYTYPE_ANALOGCOMPAT = 8
JOYTYPE_DEFAULTPROPSHEET = -2147483648
JOYTYPE_DEVICEHIDE = 65536
JOYTYPE_MOUSEHIDE = 131072
JOYTYPE_KEYBHIDE = 262144
JOYTYPE_GAMEHIDE = 524288
JOYTYPE_HIDEACTIVE = 1048576
JOYTYPE_INFOMASK = 14680064
JOYTYPE_INFODEFAULT = 0
JOYTYPE_INFOYYPEDALS = 2097152
JOYTYPE_INFOZYPEDALS = 4194304
JOYTYPE_INFOYRPEDALS = 6291456
JOYTYPE_INFOZRPEDALS = 8388608
JOYTYPE_INFOZISSLIDER = 2097152
JOYTYPE_INFOZISZ = 4194304
JOYTYPE_ENABLEINPUTREPORT = 16777216
MAX_JOYSTRING = 256
MAX_JOYSTICKOEMVXDNAME = 260
DITC_REGHWSETTINGS = 1
DITC_CLSIDCONFIG = 2
DITC_DISPLAYNAME = 4
DITC_CALLOUT = 8
DITC_HARDWAREID = 16
DITC_FLAGS1 = 32
DITC_FLAGS2 = 64
DITC_MAPFILE = 128
DIJC_GUIDINSTANCE = 1
DIJC_REGHWCONFIGTYPE = 2
DIJC_GAIN = 4
DIJC_CALLOUT = 8
DIJC_WDMGAMEPORT = 16
DIJU_USERVALUES = 1
DIJU_GLOBALDRIVER = 2
DIJU_GAMEPORTEMULATOR = 4
GUID_KeyboardClass = '4d36e96b-e325-11ce-bfc1-08002be10318'
GUID_MediaClass = '4d36e96c-e325-11ce-bfc1-08002be10318'
GUID_MouseClass = '4d36e96f-e325-11ce-bfc1-08002be10318'
GUID_HIDClass = '745a17a0-74d3-11d0-b6fe-00a0c90f57da'
DIMSGWP_NEWAPPSTART = 1
DIMSGWP_DX8APPSTART = 2
DIMSGWP_DX8MAPPERAPPSTART = 3
DIAPPIDFLAG_NOTIME = 1
DIAPPIDFLAG_NOSIZE = 2
DIERR_NOMOREITEMS = -2147024637
DIERR_DRIVERFIRST = -2147220736
DIERR_DRIVERLAST = -2147220481
DIERR_INVALIDCLASSINSTALLER = -2147220480
DIERR_CANCELLED = -2147220479
DIERR_BADINF = -2147220478
DIDIFT_DELETE = 16777216
GUID_DEVINTERFACE_HID = '4d1e55b2-f16f-11cf-88cb-001111000030'
GUID_HID_INTERFACE_NOTIFY = '2c4e2e88-25e6-4c33-882f-3d82e6073681'
GUID_HID_INTERFACE_HIDPARSE = 'f5c315a5-69ac-4bc2-9279-d0b64576f44b'
DEVPKEY_DeviceInterface_HID_UsagePage = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=2)
DEVPKEY_DeviceInterface_HID_UsageId = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=3)
DEVPKEY_DeviceInterface_HID_IsReadOnly = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=4)
DEVPKEY_DeviceInterface_HID_VendorId = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=5)
DEVPKEY_DeviceInterface_HID_ProductId = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=6)
DEVPKEY_DeviceInterface_HID_VersionNumber = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=7)
DEVPKEY_DeviceInterface_HID_BackgroundAccess = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=8)
DEVPKEY_DeviceInterface_HID_WakeScreenOnInputCapable = PROPERTYKEY(Fmtid='cbf38310-4a17-4310-a1eb-247f0b67593b', Pid=9)
HID_REVISION = 1
HID_USAGE_PAGE_UNDEFINED = 0
HID_USAGE_PAGE_GENERIC = 1
HID_USAGE_PAGE_SIMULATION = 2
HID_USAGE_PAGE_VR = 3
HID_USAGE_PAGE_SPORT = 4
HID_USAGE_PAGE_GAME = 5
HID_USAGE_PAGE_GENERIC_DEVICE = 6
HID_USAGE_PAGE_KEYBOARD = 7
HID_USAGE_PAGE_LED = 8
HID_USAGE_PAGE_BUTTON = 9
HID_USAGE_PAGE_ORDINAL = 10
HID_USAGE_PAGE_TELEPHONY = 11
HID_USAGE_PAGE_CONSUMER = 12
HID_USAGE_PAGE_DIGITIZER = 13
HID_USAGE_PAGE_HAPTICS = 14
HID_USAGE_PAGE_PID = 15
HID_USAGE_PAGE_UNICODE = 16
HID_USAGE_PAGE_ALPHANUMERIC = 20
HID_USAGE_PAGE_SENSOR = 32
HID_USAGE_PAGE_LIGHTING_ILLUMINATION = 89
HID_USAGE_PAGE_BARCODE_SCANNER = 140
HID_USAGE_PAGE_WEIGHING_DEVICE = 141
HID_USAGE_PAGE_MAGNETIC_STRIPE_READER = 142
HID_USAGE_PAGE_CAMERA_CONTROL = 144
HID_USAGE_PAGE_ARCADE = 145
HID_USAGE_PAGE_MICROSOFT_BLUETOOTH_HANDSFREE = 65523
HID_USAGE_PAGE_VENDOR_DEFINED_BEGIN = 65280
HID_USAGE_PAGE_VENDOR_DEFINED_END = 65535
HID_USAGE_GENERIC_POINTER = 1
HID_USAGE_GENERIC_MOUSE = 2
HID_USAGE_GENERIC_JOYSTICK = 4
HID_USAGE_GENERIC_GAMEPAD = 5
HID_USAGE_GENERIC_KEYBOARD = 6
HID_USAGE_GENERIC_KEYPAD = 7
HID_USAGE_GENERIC_MULTI_AXIS_CONTROLLER = 8
HID_USAGE_GENERIC_TABLET_PC_SYSTEM_CTL = 9
HID_USAGE_GENERIC_PORTABLE_DEVICE_CONTROL = 13
HID_USAGE_GENERIC_INTERACTIVE_CONTROL = 14
HID_USAGE_GENERIC_COUNTED_BUFFER = 58
HID_USAGE_GENERIC_SYSTEM_CTL = 128
HID_USAGE_GENERIC_X = 48
HID_USAGE_GENERIC_Y = 49
HID_USAGE_GENERIC_Z = 50
HID_USAGE_GENERIC_RX = 51
HID_USAGE_GENERIC_RY = 52
HID_USAGE_GENERIC_RZ = 53
HID_USAGE_GENERIC_SLIDER = 54
HID_USAGE_GENERIC_DIAL = 55
HID_USAGE_GENERIC_WHEEL = 56
HID_USAGE_GENERIC_HATSWITCH = 57
HID_USAGE_GENERIC_BYTE_COUNT = 59
HID_USAGE_GENERIC_MOTION_WAKEUP = 60
HID_USAGE_GENERIC_START = 61
HID_USAGE_GENERIC_SELECT = 62
HID_USAGE_GENERIC_VX = 64
HID_USAGE_GENERIC_VY = 65
HID_USAGE_GENERIC_VZ = 66
HID_USAGE_GENERIC_VBRX = 67
HID_USAGE_GENERIC_VBRY = 68
HID_USAGE_GENERIC_VBRZ = 69
HID_USAGE_GENERIC_VNO = 70
HID_USAGE_GENERIC_FEATURE_NOTIFICATION = 71
HID_USAGE_GENERIC_RESOLUTION_MULTIPLIER = 72
HID_USAGE_GENERIC_SYSCTL_POWER = 129
HID_USAGE_GENERIC_SYSCTL_SLEEP = 130
HID_USAGE_GENERIC_SYSCTL_WAKE = 131
HID_USAGE_GENERIC_SYSCTL_CONTEXT_MENU = 132
HID_USAGE_GENERIC_SYSCTL_MAIN_MENU = 133
HID_USAGE_GENERIC_SYSCTL_APP_MENU = 134
HID_USAGE_GENERIC_SYSCTL_HELP_MENU = 135
HID_USAGE_GENERIC_SYSCTL_MENU_EXIT = 136
HID_USAGE_GENERIC_SYSCTL_MENU_SELECT = 137
HID_USAGE_GENERIC_SYSCTL_MENU_RIGHT = 138
HID_USAGE_GENERIC_SYSCTL_MENU_LEFT = 139
HID_USAGE_GENERIC_SYSCTL_MENU_UP = 140
HID_USAGE_GENERIC_SYSCTL_MENU_DOWN = 141
HID_USAGE_GENERIC_SYSCTL_COLD_RESTART = 142
HID_USAGE_GENERIC_SYSCTL_WARM_RESTART = 143
HID_USAGE_GENERIC_DPAD_UP = 144
HID_USAGE_GENERIC_DPAD_DOWN = 145
HID_USAGE_GENERIC_DPAD_RIGHT = 146
HID_USAGE_GENERIC_DPAD_LEFT = 147
HID_USAGE_GENERIC_SYSCTL_FN = 151
HID_USAGE_GENERIC_SYSCTL_FN_LOCK = 152
HID_USAGE_GENERIC_SYSCTL_FN_LOCK_INDICATOR = 153
HID_USAGE_GENERIC_SYSCTL_DISMISS_NOTIFICATION = 154
HID_USAGE_GENERIC_SYSCTL_DOCK = 160
HID_USAGE_GENERIC_SYSCTL_UNDOCK = 161
HID_USAGE_GENERIC_SYSCTL_SETUP = 162
HID_USAGE_GENERIC_SYSCTL_SYS_BREAK = 163
HID_USAGE_GENERIC_SYSCTL_SYS_DBG_BREAK = 164
HID_USAGE_GENERIC_SYSCTL_APP_BREAK = 165
HID_USAGE_GENERIC_SYSCTL_APP_DBG_BREAK = 166
HID_USAGE_GENERIC_SYSCTL_MUTE = 167
HID_USAGE_GENERIC_SYSCTL_HIBERNATE = 168
HID_USAGE_GENERIC_SYSCTL_DISP_INVERT = 176
HID_USAGE_GENERIC_SYSCTL_DISP_INTERNAL = 177
HID_USAGE_GENERIC_SYSCTL_DISP_EXTERNAL = 178
HID_USAGE_GENERIC_SYSCTL_DISP_BOTH = 179
HID_USAGE_GENERIC_SYSCTL_DISP_DUAL = 180
HID_USAGE_GENERIC_SYSCTL_DISP_TOGGLE = 181
HID_USAGE_GENERIC_SYSCTL_DISP_SWAP = 182
HID_USAGE_GENERIC_SYSCTL_DISP_AUTOSCALE = 183
HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_BUTTON = 201
HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_SLIDER_SWITCH = 202
HID_USAGE_GENERIC_CONTROL_ENABLE = 203
HID_USAGE_SIMULATION_FLIGHT_SIMULATION_DEVICE = 1
HID_USAGE_SIMULATION_AUTOMOBILE_SIMULATION_DEVICE = 2
HID_USAGE_SIMULATION_TANK_SIMULATION_DEVICE = 3
HID_USAGE_SIMULATION_SPACESHIP_SIMULATION_DEVICE = 4
HID_USAGE_SIMULATION_SUBMARINE_SIMULATION_DEVICE = 5
HID_USAGE_SIMULATION_SAILING_SIMULATION_DEVICE = 6
HID_USAGE_SIMULATION_MOTORCYCLE_SIMULATION_DEVICE = 7
HID_USAGE_SIMULATION_SPORTS_SIMULATION_DEVICE = 8
HID_USAGE_SIMULATION_AIRPLANE_SIMULATION_DEVICE = 9
HID_USAGE_SIMULATION_HELICOPTER_SIMULATION_DEVICE = 10
HID_USAGE_SIMULATION_MAGIC_CARPET_SIMULATION_DEVICE = 11
HID_USAGE_SIMULATION_BICYCLE_SIMULATION_DEVICE = 12
HID_USAGE_SIMULATION_FLIGHT_CONTROL_STICK = 32
HID_USAGE_SIMULATION_FLIGHT_STICK = 33
HID_USAGE_SIMULATION_CYCLIC_CONTROL = 34
HID_USAGE_SIMULATION_CYCLIC_TRIM = 35
HID_USAGE_SIMULATION_FLIGHT_YOKE = 36
HID_USAGE_SIMULATION_TRACK_CONTROL = 37
HID_USAGE_SIMULATION_AILERON = 176
HID_USAGE_SIMULATION_AILERON_TRIM = 177
HID_USAGE_SIMULATION_ANTI_TORQUE_CONTROL = 178
HID_USAGE_SIMULATION_AUTOPIOLOT_ENABLE = 179
HID_USAGE_SIMULATION_CHAFF_RELEASE = 180
HID_USAGE_SIMULATION_COLLECTIVE_CONTROL = 181
HID_USAGE_SIMULATION_DIVE_BRAKE = 182
HID_USAGE_SIMULATION_ELECTRONIC_COUNTERMEASURES = 183
HID_USAGE_SIMULATION_ELEVATOR = 184
HID_USAGE_SIMULATION_ELEVATOR_TRIM = 185
HID_USAGE_SIMULATION_RUDDER = 186
HID_USAGE_SIMULATION_THROTTLE = 187
HID_USAGE_SIMULATION_FLIGHT_COMMUNICATIONS = 188
HID_USAGE_SIMULATION_FLARE_RELEASE = 189
HID_USAGE_SIMULATION_LANDING_GEAR = 190
HID_USAGE_SIMULATION_TOE_BRAKE = 191
HID_USAGE_SIMULATION_TRIGGER = 192
HID_USAGE_SIMULATION_WEAPONS_ARM = 193
HID_USAGE_SIMULATION_WEAPONS_SELECT = 194
HID_USAGE_SIMULATION_WING_FLAPS = 195
HID_USAGE_SIMULATION_ACCELLERATOR = 196
HID_USAGE_SIMULATION_BRAKE = 197
HID_USAGE_SIMULATION_CLUTCH = 198
HID_USAGE_SIMULATION_SHIFTER = 199
HID_USAGE_SIMULATION_STEERING = 200
HID_USAGE_SIMULATION_TURRET_DIRECTION = 201
HID_USAGE_SIMULATION_BARREL_ELEVATION = 202
HID_USAGE_SIMULATION_DIVE_PLANE = 203
HID_USAGE_SIMULATION_BALLAST = 204
HID_USAGE_SIMULATION_BICYCLE_CRANK = 205
HID_USAGE_SIMULATION_HANDLE_BARS = 206
HID_USAGE_SIMULATION_FRONT_BRAKE = 207
HID_USAGE_SIMULATION_REAR_BRAKE = 208
HID_USAGE_VR_BELT = 1
HID_USAGE_VR_BODY_SUIT = 2
HID_USAGE_VR_FLEXOR = 3
HID_USAGE_VR_GLOVE = 4
HID_USAGE_VR_HEAD_TRACKER = 5
HID_USAGE_VR_HEAD_MOUNTED_DISPLAY = 6
HID_USAGE_VR_HAND_TRACKER = 7
HID_USAGE_VR_OCULOMETER = 8
HID_USAGE_VR_VEST = 9
HID_USAGE_VR_ANIMATRONIC_DEVICE = 10
HID_USAGE_VR_STEREO_ENABLE = 32
HID_USAGE_VR_DISPLAY_ENABLE = 33
HID_USAGE_SPORT_BASEBALL_BAT = 1
HID_USAGE_SPORT_GOLF_CLUB = 2
HID_USAGE_SPORT_ROWING_MACHINE = 3
HID_USAGE_SPORT_TREADMILL = 4
HID_USAGE_SPORT_STICK_TYPE = 56
HID_USAGE_SPORT_OAR = 48
HID_USAGE_SPORT_SLOPE = 49
HID_USAGE_SPORT_RATE = 50
HID_USAGE_SPORT_STICK_SPEED = 51
HID_USAGE_SPORT_STICK_FACE_ANGLE = 52
HID_USAGE_SPORT_HEEL_TOE = 53
HID_USAGE_SPORT_FOLLOW_THROUGH = 54
HID_USAGE_SPORT_TEMPO = 55
HID_USAGE_SPORT_HEIGHT = 57
HID_USAGE_SPORT_PUTTER = 80
HID_USAGE_SPORT_1_IRON = 81
HID_USAGE_SPORT_2_IRON = 82
HID_USAGE_SPORT_3_IRON = 83
HID_USAGE_SPORT_4_IRON = 84
HID_USAGE_SPORT_5_IRON = 85
HID_USAGE_SPORT_6_IRON = 86
HID_USAGE_SPORT_7_IRON = 87
HID_USAGE_SPORT_8_IRON = 88
HID_USAGE_SPORT_9_IRON = 89
HID_USAGE_SPORT_10_IRON = 90
HID_USAGE_SPORT_11_IRON = 91
HID_USAGE_SPORT_SAND_WEDGE = 92
HID_USAGE_SPORT_LOFT_WEDGE = 93
HID_USAGE_SPORT_POWER_WEDGE = 94
HID_USAGE_SPORT_1_WOOD = 95
HID_USAGE_SPORT_3_WOOD = 96
HID_USAGE_SPORT_5_WOOD = 97
HID_USAGE_SPORT_7_WOOD = 98
HID_USAGE_SPORT_9_WOOD = 99
HID_USAGE_GAME_3D_GAME_CONTROLLER = 1
HID_USAGE_GAME_PINBALL_DEVICE = 2
HID_USAGE_GAME_GUN_DEVICE = 3
HID_USAGE_GAME_POINT_OF_VIEW = 32
HID_USAGE_GAME_GUN_SELECTOR = 50
HID_USAGE_GAME_GAMEPAD_FIRE_JUMP = 55
HID_USAGE_GAME_GAMEPAD_TRIGGER = 57
HID_USAGE_GAME_TURN_RIGHT_LEFT = 33
HID_USAGE_GAME_PITCH_FORWARD_BACK = 34
HID_USAGE_GAME_ROLL_RIGHT_LEFT = 35
HID_USAGE_GAME_MOVE_RIGHT_LEFT = 36
HID_USAGE_GAME_MOVE_FORWARD_BACK = 37
HID_USAGE_GAME_MOVE_UP_DOWN = 38
HID_USAGE_GAME_LEAN_RIGHT_LEFT = 39
HID_USAGE_GAME_LEAN_FORWARD_BACK = 40
HID_USAGE_GAME_POV_HEIGHT = 41
HID_USAGE_GAME_FLIPPER = 42
HID_USAGE_GAME_SECONDARY_FLIPPER = 43
HID_USAGE_GAME_BUMP = 44
HID_USAGE_GAME_NEW_GAME = 45
HID_USAGE_GAME_SHOOT_BALL = 46
HID_USAGE_GAME_PLAYER = 47
HID_USAGE_GAME_GUN_BOLT = 48
HID_USAGE_GAME_GUN_CLIP = 49
HID_USAGE_GAME_GUN_SINGLE_SHOT = 51
HID_USAGE_GAME_GUN_BURST = 52
HID_USAGE_GAME_GUN_AUTOMATIC = 53
HID_USAGE_GAME_GUN_SAFETY = 54
HID_USAGE_GENERIC_DEVICE_BATTERY_STRENGTH = 32
HID_USAGE_GENERIC_DEVICE_WIRELESS_CHANNEL = 33
HID_USAGE_GENERIC_DEVICE_WIRELESS_ID = 34
HID_USAGE_GENERIC_DEVICE_DISCOVER_WIRELESS_CONTROL = 35
HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ENTERED = 36
HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ERASED = 37
HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CLEARED = 38
HID_USAGE_KEYBOARD_NOEVENT = 0
HID_USAGE_KEYBOARD_ROLLOVER = 1
HID_USAGE_KEYBOARD_POSTFAIL = 2
HID_USAGE_KEYBOARD_UNDEFINED = 3
HID_USAGE_KEYBOARD_aA = 4
HID_USAGE_KEYBOARD_zZ = 29
HID_USAGE_KEYBOARD_ONE = 30
HID_USAGE_KEYBOARD_ZERO = 39
HID_USAGE_KEYBOARD_LCTRL = 224
HID_USAGE_KEYBOARD_LSHFT = 225
HID_USAGE_KEYBOARD_LALT = 226
HID_USAGE_KEYBOARD_LGUI = 227
HID_USAGE_KEYBOARD_RCTRL = 228
HID_USAGE_KEYBOARD_RSHFT = 229
HID_USAGE_KEYBOARD_RALT = 230
HID_USAGE_KEYBOARD_RGUI = 231
HID_USAGE_KEYBOARD_SCROLL_LOCK = 71
HID_USAGE_KEYBOARD_NUM_LOCK = 83
HID_USAGE_KEYBOARD_CAPS_LOCK = 57
HID_USAGE_KEYBOARD_F1 = 58
HID_USAGE_KEYBOARD_F2 = 59
HID_USAGE_KEYBOARD_F3 = 60
HID_USAGE_KEYBOARD_F4 = 61
HID_USAGE_KEYBOARD_F5 = 62
HID_USAGE_KEYBOARD_F6 = 63
HID_USAGE_KEYBOARD_F7 = 64
HID_USAGE_KEYBOARD_F8 = 65
HID_USAGE_KEYBOARD_F9 = 66
HID_USAGE_KEYBOARD_F10 = 67
HID_USAGE_KEYBOARD_F11 = 68
HID_USAGE_KEYBOARD_F12 = 69
HID_USAGE_KEYBOARD_F13 = 104
HID_USAGE_KEYBOARD_F14 = 105
HID_USAGE_KEYBOARD_F15 = 106
HID_USAGE_KEYBOARD_F16 = 107
HID_USAGE_KEYBOARD_F17 = 108
HID_USAGE_KEYBOARD_F18 = 109
HID_USAGE_KEYBOARD_F19 = 110
HID_USAGE_KEYBOARD_F20 = 111
HID_USAGE_KEYBOARD_F21 = 112
HID_USAGE_KEYBOARD_F22 = 113
HID_USAGE_KEYBOARD_F23 = 114
HID_USAGE_KEYBOARD_F24 = 115
HID_USAGE_KEYBOARD_RETURN = 40
HID_USAGE_KEYBOARD_ESCAPE = 41
HID_USAGE_KEYBOARD_DELETE = 42
HID_USAGE_KEYBOARD_PRINT_SCREEN = 70
HID_USAGE_KEYBOARD_DELETE_FORWARD = 76
HID_USAGE_LED_NUM_LOCK = 1
HID_USAGE_LED_CAPS_LOCK = 2
HID_USAGE_LED_SCROLL_LOCK = 3
HID_USAGE_LED_COMPOSE = 4
HID_USAGE_LED_KANA = 5
HID_USAGE_LED_POWER = 6
HID_USAGE_LED_SHIFT = 7
HID_USAGE_LED_DO_NOT_DISTURB = 8
HID_USAGE_LED_MUTE = 9
HID_USAGE_LED_TONE_ENABLE = 10
HID_USAGE_LED_HIGH_CUT_FILTER = 11
HID_USAGE_LED_LOW_CUT_FILTER = 12
HID_USAGE_LED_EQUALIZER_ENABLE = 13
HID_USAGE_LED_SOUND_FIELD_ON = 14
HID_USAGE_LED_SURROUND_FIELD_ON = 15
HID_USAGE_LED_REPEAT = 16
HID_USAGE_LED_STEREO = 17
HID_USAGE_LED_SAMPLING_RATE_DETECT = 18
HID_USAGE_LED_SPINNING = 19
HID_USAGE_LED_CAV = 20
HID_USAGE_LED_CLV = 21
HID_USAGE_LED_RECORDING_FORMAT_DET = 22
HID_USAGE_LED_OFF_HOOK = 23
HID_USAGE_LED_RING = 24
HID_USAGE_LED_MESSAGE_WAITING = 25
HID_USAGE_LED_DATA_MODE = 26
HID_USAGE_LED_BATTERY_OPERATION = 27
HID_USAGE_LED_BATTERY_OK = 28
HID_USAGE_LED_BATTERY_LOW = 29
HID_USAGE_LED_SPEAKER = 30
HID_USAGE_LED_HEAD_SET = 31
HID_USAGE_LED_HOLD = 32
HID_USAGE_LED_MICROPHONE = 33
HID_USAGE_LED_COVERAGE = 34
HID_USAGE_LED_NIGHT_MODE = 35
HID_USAGE_LED_SEND_CALLS = 36
HID_USAGE_LED_CALL_PICKUP = 37
HID_USAGE_LED_CONFERENCE = 38
HID_USAGE_LED_STAND_BY = 39
HID_USAGE_LED_CAMERA_ON = 40
HID_USAGE_LED_CAMERA_OFF = 41
HID_USAGE_LED_ON_LINE = 42
HID_USAGE_LED_OFF_LINE = 43
HID_USAGE_LED_BUSY = 44
HID_USAGE_LED_READY = 45
HID_USAGE_LED_PAPER_OUT = 46
HID_USAGE_LED_PAPER_JAM = 47
HID_USAGE_LED_REMOTE = 48
HID_USAGE_LED_FORWARD = 49
HID_USAGE_LED_REVERSE = 50
HID_USAGE_LED_STOP = 51
HID_USAGE_LED_REWIND = 52
HID_USAGE_LED_FAST_FORWARD = 53
HID_USAGE_LED_PLAY = 54
HID_USAGE_LED_PAUSE = 55
HID_USAGE_LED_RECORD = 56
HID_USAGE_LED_ERROR = 57
HID_USAGE_LED_SELECTED_INDICATOR = 58
HID_USAGE_LED_IN_USE_INDICATOR = 59
HID_USAGE_LED_MULTI_MODE_INDICATOR = 60
HID_USAGE_LED_INDICATOR_ON = 61
HID_USAGE_LED_INDICATOR_FLASH = 62
HID_USAGE_LED_INDICATOR_SLOW_BLINK = 63
HID_USAGE_LED_INDICATOR_FAST_BLINK = 64
HID_USAGE_LED_INDICATOR_OFF = 65
HID_USAGE_LED_FLASH_ON_TIME = 66
HID_USAGE_LED_SLOW_BLINK_ON_TIME = 67
HID_USAGE_LED_SLOW_BLINK_OFF_TIME = 68
HID_USAGE_LED_FAST_BLINK_ON_TIME = 69
HID_USAGE_LED_FAST_BLINK_OFF_TIME = 70
HID_USAGE_LED_INDICATOR_COLOR = 71
HID_USAGE_LED_RED = 72
HID_USAGE_LED_GREEN = 73
HID_USAGE_LED_AMBER = 74
HID_USAGE_LED_GENERIC_INDICATOR = 75
HID_USAGE_LED_SYSTEM_SUSPEND = 76
HID_USAGE_LED_EXTERNAL_POWER = 77
HID_USAGE_TELEPHONY_PHONE = 1
HID_USAGE_TELEPHONY_ANSWERING_MACHINE = 2
HID_USAGE_TELEPHONY_MESSAGE_CONTROLS = 3
HID_USAGE_TELEPHONY_HANDSET = 4
HID_USAGE_TELEPHONY_HEADSET = 5
HID_USAGE_TELEPHONY_KEYPAD = 6
HID_USAGE_TELEPHONY_PROGRAMMABLE_BUTTON = 7
HID_USAGE_TELEPHONY_REDIAL = 36
HID_USAGE_TELEPHONY_TRANSFER = 37
HID_USAGE_TELEPHONY_DROP = 38
HID_USAGE_TELEPHONY_LINE = 42
HID_USAGE_TELEPHONY_RING_ENABLE = 45
HID_USAGE_TELEPHONY_SEND = 49
HID_USAGE_TELEPHONY_KEYPAD_0 = 176
HID_USAGE_TELEPHONY_KEYPAD_D = 191
HID_USAGE_TELEPHONY_HOST_AVAILABLE = 241
HID_USAGE_CONSUMERCTRL = 1
HID_USAGE_CONSUMER_CHANNEL_INCREMENT = 156
HID_USAGE_CONSUMER_CHANNEL_DECREMENT = 157
HID_USAGE_CONSUMER_PLAY = 176
HID_USAGE_CONSUMER_PAUSE = 177
HID_USAGE_CONSUMER_RECORD = 178
HID_USAGE_CONSUMER_FAST_FORWARD = 179
HID_USAGE_CONSUMER_REWIND = 180
HID_USAGE_CONSUMER_SCAN_NEXT_TRACK = 181
HID_USAGE_CONSUMER_SCAN_PREV_TRACK = 182
HID_USAGE_CONSUMER_STOP = 183
HID_USAGE_CONSUMER_PLAY_PAUSE = 205
HID_USAGE_CONSUMER_GAMEDVR_OPEN_GAMEBAR = 208
HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_RECORD = 209
HID_USAGE_CONSUMER_GAMEDVR_RECORD_CLIP = 210
HID_USAGE_CONSUMER_GAMEDVR_SCREENSHOT = 211
HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_INDICATOR = 212
HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_MICROPHONE = 213
HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_CAMERA = 214
HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_BROADCAST = 215
HID_USAGE_CONSUMER_VOLUME = 224
HID_USAGE_CONSUMER_BALANCE = 225
HID_USAGE_CONSUMER_MUTE = 226
HID_USAGE_CONSUMER_BASS = 227
HID_USAGE_CONSUMER_TREBLE = 228
HID_USAGE_CONSUMER_BASS_BOOST = 229
HID_USAGE_CONSUMER_SURROUND_MODE = 230
HID_USAGE_CONSUMER_LOUDNESS = 231
HID_USAGE_CONSUMER_MPX = 232
HID_USAGE_CONSUMER_VOLUME_INCREMENT = 233
HID_USAGE_CONSUMER_VOLUME_DECREMENT = 234
HID_USAGE_CONSUMER_BASS_INCREMENT = 338
HID_USAGE_CONSUMER_BASS_DECREMENT = 339
HID_USAGE_CONSUMER_TREBLE_INCREMENT = 340
HID_USAGE_CONSUMER_TREBLE_DECREMENT = 341
HID_USAGE_CONSUMER_AL_CONFIGURATION = 387
HID_USAGE_CONSUMER_AL_EMAIL = 394
HID_USAGE_CONSUMER_AL_CALCULATOR = 402
HID_USAGE_CONSUMER_AL_BROWSER = 404
HID_USAGE_CONSUMER_AL_SEARCH = 454
HID_USAGE_CONSUMER_AC_SEARCH = 545
HID_USAGE_CONSUMER_AC_GOTO = 546
HID_USAGE_CONSUMER_AC_HOME = 547
HID_USAGE_CONSUMER_AC_BACK = 548
HID_USAGE_CONSUMER_AC_FORWARD = 549
HID_USAGE_CONSUMER_AC_STOP = 550
HID_USAGE_CONSUMER_AC_REFRESH = 551
HID_USAGE_CONSUMER_AC_PREVIOUS = 552
HID_USAGE_CONSUMER_AC_NEXT = 553
HID_USAGE_CONSUMER_AC_BOOKMARKS = 554
HID_USAGE_CONSUMER_AC_PAN = 568
HID_USAGE_CONSUMER_EXTENDED_KEYBOARD_ATTRIBUTES_COLLECTION = 704
HID_USAGE_CONSUMER_KEYBOARD_FORM_FACTOR = 705
HID_USAGE_CONSUMER_KEYBOARD_KEY_TYPE = 706
HID_USAGE_CONSUMER_KEYBOARD_PHYSICAL_LAYOUT = 707
HID_USAGE_CONSUMER_VENDOR_SPECIFIC_KEYBOARD_PHYSICAL_LAYOUT = 708
HID_USAGE_CONSUMER_KEYBOARD_IETF_LANGUAGE_TAG_INDEX = 709
HID_USAGE_CONSUMER_IMPLEMENTED_KEYBOARD_INPUT_ASSIST_CONTROLS = 710
HID_USAGE_DIGITIZER_DIGITIZER = 1
HID_USAGE_DIGITIZER_PEN = 2
HID_USAGE_DIGITIZER_LIGHT_PEN = 3
HID_USAGE_DIGITIZER_TOUCH_SCREEN = 4
HID_USAGE_DIGITIZER_TOUCH_PAD = 5
HID_USAGE_DIGITIZER_WHITE_BOARD = 6
HID_USAGE_DIGITIZER_COORD_MEASURING = 7
HID_USAGE_DIGITIZER_3D_DIGITIZER = 8
HID_USAGE_DIGITIZER_STEREO_PLOTTER = 9
HID_USAGE_DIGITIZER_ARTICULATED_ARM = 10
HID_USAGE_DIGITIZER_ARMATURE = 11
HID_USAGE_DIGITIZER_MULTI_POINT = 12
HID_USAGE_DIGITIZER_FREE_SPACE_WAND = 13
HID_USAGE_DIGITIZER_HEAT_MAP = 15
HID_USAGE_DIGITIZER_STYLUS = 32
HID_USAGE_DIGITIZER_PUCK = 33
HID_USAGE_DIGITIZER_FINGER = 34
HID_USAGE_DIGITIZER_TABLET_FUNC_KEYS = 57
HID_USAGE_DIGITIZER_PROG_CHANGE_KEYS = 58
HID_USAGE_DIGITIZER_TIP_PRESSURE = 48
HID_USAGE_DIGITIZER_BARREL_PRESSURE = 49
HID_USAGE_DIGITIZER_IN_RANGE = 50
HID_USAGE_DIGITIZER_TOUCH = 51
HID_USAGE_DIGITIZER_UNTOUCH = 52
HID_USAGE_DIGITIZER_TAP = 53
HID_USAGE_DIGITIZER_QUALITY = 54
HID_USAGE_DIGITIZER_DATA_VALID = 55
HID_USAGE_DIGITIZER_TRANSDUCER_INDEX = 56
HID_USAGE_DIGITIZER_BATTERY_STRENGTH = 59
HID_USAGE_DIGITIZER_INVERT = 60
HID_USAGE_DIGITIZER_X_TILT = 61
HID_USAGE_DIGITIZER_Y_TILT = 62
HID_USAGE_DIGITIZER_AZIMUTH = 63
HID_USAGE_DIGITIZER_ALTITUDE = 64
HID_USAGE_DIGITIZER_TWIST = 65
HID_USAGE_DIGITIZER_TIP_SWITCH = 66
HID_USAGE_DIGITIZER_SECONDARY_TIP_SWITCH = 67
HID_USAGE_DIGITIZER_BARREL_SWITCH = 68
HID_USAGE_DIGITIZER_ERASER = 69
HID_USAGE_DIGITIZER_TABLET_PICK = 70
HID_USAGE_DIGITIZER_TRANSDUCER_SERIAL = 91
HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VENDOR_ID = 106
HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VERSION = 107
HID_USAGE_DIGITIZER_HEAT_MAP_FRAME_DATA = 108
HID_USAGE_DIGITIZER_TRANSDUCER_VENDOR = 145
HID_USAGE_DIGITIZER_TRANSDUCER_PRODUCT = 146
HID_USAGE_DIGITIZER_TRANSDUCER_CONNECTED = 162
HID_USAGE_HAPTICS_SIMPLE_CONTROLLER = 1
HID_USAGE_HAPTICS_WAVEFORM_LIST = 16
HID_USAGE_HAPTICS_DURATION_LIST = 17
HID_USAGE_HAPTICS_AUTO_TRIGGER = 32
HID_USAGE_HAPTICS_MANUAL_TRIGGER = 33
HID_USAGE_HAPTICS_AUTO_ASSOCIATED_CONTROL = 34
HID_USAGE_HAPTICS_INTENSITY = 35
HID_USAGE_HAPTICS_REPEAT_COUNT = 36
HID_USAGE_HAPTICS_RETRIGGER_PERIOD = 37
HID_USAGE_HAPTICS_WAVEFORM_VENDOR_PAGE = 38
HID_USAGE_HAPTICS_WAVEFORM_VENDOR_ID = 39
HID_USAGE_HAPTICS_WAVEFORM_CUTOFF_TIME = 40
HID_USAGE_HAPTICS_WAVEFORM_BEGIN = 4096
HID_USAGE_HAPTICS_WAVEFORM_STOP = 4097
HID_USAGE_HAPTICS_WAVEFORM_NULL = 4098
HID_USAGE_HAPTICS_WAVEFORM_CLICK = 4099
HID_USAGE_HAPTICS_WAVEFORM_BUZZ = 4100
HID_USAGE_HAPTICS_WAVEFORM_RUMBLE = 4101
HID_USAGE_HAPTICS_WAVEFORM_PRESS = 4102
HID_USAGE_HAPTICS_WAVEFORM_RELEASE = 4103
HID_USAGE_HAPTICS_WAVEFORM_END = 8191
HID_USAGE_HAPTICS_WAVEFORM_VENDOR_BEGIN = 8192
HID_USAGE_HAPTICS_WAVEFORM_VENDOR_END = 12287
HID_USAGE_ALPHANUMERIC_ALPHANUMERIC_DISPLAY = 1
HID_USAGE_ALPHANUMERIC_BITMAPPED_DISPLAY = 2
HID_USAGE_ALPHANUMERIC_DISPLAY_ATTRIBUTES_REPORT = 32
HID_USAGE_ALPHANUMERIC_DISPLAY_CONTROL_REPORT = 36
HID_USAGE_ALPHANUMERIC_CHARACTER_REPORT = 43
HID_USAGE_ALPHANUMERIC_DISPLAY_STATUS = 45
HID_USAGE_ALPHANUMERIC_CURSOR_POSITION_REPORT = 50
HID_USAGE_ALPHANUMERIC_FONT_REPORT = 59
HID_USAGE_ALPHANUMERIC_FONT_DATA = 60
HID_USAGE_ALPHANUMERIC_CHARACTER_ATTRIBUTE = 72
HID_USAGE_ALPHANUMERIC_PALETTE_REPORT = 133
HID_USAGE_ALPHANUMERIC_PALETTE_DATA = 136
HID_USAGE_ALPHANUMERIC_BLIT_REPORT = 138
HID_USAGE_ALPHANUMERIC_BLIT_DATA = 143
HID_USAGE_ALPHANUMERIC_SOFT_BUTTON = 144
HID_USAGE_ALPHANUMERIC_ASCII_CHARACTER_SET = 33
HID_USAGE_ALPHANUMERIC_DATA_READ_BACK = 34
HID_USAGE_ALPHANUMERIC_FONT_READ_BACK = 35
HID_USAGE_ALPHANUMERIC_CLEAR_DISPLAY = 37
HID_USAGE_ALPHANUMERIC_DISPLAY_ENABLE = 38
HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_DELAY = 39
HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_ENABLE = 40
HID_USAGE_ALPHANUMERIC_VERTICAL_SCROLL = 41
HID_USAGE_ALPHANUMERIC_HORIZONTAL_SCROLL = 42
HID_USAGE_ALPHANUMERIC_DISPLAY_DATA = 44
HID_USAGE_ALPHANUMERIC_STATUS_NOT_READY = 46
HID_USAGE_ALPHANUMERIC_STATUS_READY = 47
HID_USAGE_ALPHANUMERIC_ERR_NOT_A_LOADABLE_CHARACTER = 48
HID_USAGE_ALPHANUMERIC_ERR_FONT_DATA_CANNOT_BE_READ = 49
HID_USAGE_ALPHANUMERIC_ROW = 51
HID_USAGE_ALPHANUMERIC_COLUMN = 52
HID_USAGE_ALPHANUMERIC_ROWS = 53
HID_USAGE_ALPHANUMERIC_COLUMNS = 54
HID_USAGE_ALPHANUMERIC_CURSOR_PIXEL_POSITIONING = 55
HID_USAGE_ALPHANUMERIC_CURSOR_MODE = 56
HID_USAGE_ALPHANUMERIC_CURSOR_ENABLE = 57
HID_USAGE_ALPHANUMERIC_CURSOR_BLINK = 58
HID_USAGE_ALPHANUMERIC_CHAR_WIDTH = 61
HID_USAGE_ALPHANUMERIC_CHAR_HEIGHT = 62
HID_USAGE_ALPHANUMERIC_CHAR_SPACING_HORIZONTAL = 63
HID_USAGE_ALPHANUMERIC_CHAR_SPACING_VERTICAL = 64
HID_USAGE_ALPHANUMERIC_UNICODE_CHAR_SET = 65
HID_USAGE_ALPHANUMERIC_FONT_7_SEGMENT = 66
HID_USAGE_ALPHANUMERIC_7_SEGMENT_DIRECT_MAP = 67
HID_USAGE_ALPHANUMERIC_FONT_14_SEGMENT = 68
HID_USAGE_ALPHANUMERIC_14_SEGMENT_DIRECT_MAP = 69
HID_USAGE_ALPHANUMERIC_DISPLAY_BRIGHTNESS = 70
HID_USAGE_ALPHANUMERIC_DISPLAY_CONTRAST = 71
HID_USAGE_ALPHANUMERIC_ATTRIBUTE_READBACK = 73
HID_USAGE_ALPHANUMERIC_ATTRIBUTE_DATA = 74
HID_USAGE_ALPHANUMERIC_CHAR_ATTR_ENHANCE = 75
HID_USAGE_ALPHANUMERIC_CHAR_ATTR_UNDERLINE = 76
HID_USAGE_ALPHANUMERIC_CHAR_ATTR_BLINK = 77
HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_X = 128
HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_Y = 129
HID_USAGE_ALPHANUMERIC_BIT_DEPTH_FORMAT = 131
HID_USAGE_ALPHANUMERIC_DISPLAY_ORIENTATION = 132
HID_USAGE_ALPHANUMERIC_PALETTE_DATA_SIZE = 134
HID_USAGE_ALPHANUMERIC_PALETTE_DATA_OFFSET = 135
HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X1 = 139
HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y1 = 140
HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X2 = 141
HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y2 = 142
HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_ID = 145
HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_SIDE = 146
HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET1 = 147
HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET2 = 148
HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_REPORT = 149
HID_USAGE_LAMPARRAY = 1
HID_USAGE_LAMPARRAY_ATTRBIUTES_REPORT = 2
HID_USAGE_LAMPARRAY_LAMP_COUNT = 3
HID_USAGE_LAMPARRAY_BOUNDING_BOX_WIDTH_IN_MICROMETERS = 4
HID_USAGE_LAMPARRAY_BOUNDING_BOX_HEIGHT_IN_MICROMETERS = 5
HID_USAGE_LAMPARRAY_BOUNDING_BOX_DEPTH_IN_MICROMETERS = 6
HID_USAGE_LAMPARRAY_KIND = 7
HID_USAGE_LAMPARRAY_MIN_UPDATE_INTERVAL_IN_MICROSECONDS = 8
HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_REQUEST_REPORT = 32
HID_USAGE_LAMPARRAY_LAMP_ID = 33
HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_RESPONSE_REPORT = 34
HID_USAGE_LAMPARRAY_POSITION_X_IN_MICROMETERS = 35
HID_USAGE_LAMPARRAY_POSITION_Y_IN_MICROMETERS = 36
HID_USAGE_LAMPARRAY_POSITION_Z_IN_MICROMETERS = 37
HID_USAGE_LAMPARRAY_LAMP_PURPOSES = 38
HID_USAGE_LAMPARRAY_UPDATE_LATENCY_IN_MICROSECONDS = 39
HID_USAGE_LAMPARRAY_RED_LEVEL_COUNT = 40
HID_USAGE_LAMPARRAY_GREEN_LEVEL_COUNT = 41
HID_USAGE_LAMPARRAY_BLUE_LEVEL_COUNT = 42
HID_USAGE_LAMPARRAY_INTENSITY_LEVEL_COUNT = 43
HID_USAGE_LAMPARRAY_IS_PROGRAMMABLE = 44
HID_USAGE_LAMPARRAY_INPUT_BINDING = 45
HID_USAGE_LAMPARRAY_LAMP_MULTI_UPDATE_REPORT = 80
HID_USAGE_LAMPARRAY_LAMP_RED_UPDATE_CHANNEL = 81
HID_USAGE_LAMPARRAY_LAMP_GREEN_UPDATE_CHANNEL = 82
HID_USAGE_LAMPARRAY_LAMP_BLUE_UPDATE_CHANNEL = 83
HID_USAGE_LAMPARRAY_LAMP_INTENSITY_UPDATE_CHANNEL = 84
HID_USAGE_LAMPARRAY_LAMP_UPDATE_FLAGS = 85
HID_USAGE_LAMPARRAY_LAMP_RANGE_UPDATE_REPORT = 96
HID_USAGE_LAMPARRAY_LAMP_ID_START = 97
HID_USAGE_LAMPARRAY_LAMP_ID_END = 98
HID_USAGE_LAMPARRAY_CONTROL_REPORT = 112
HID_USAGE_LAMPARRAY_AUTONOMOUS_MODE = 113
HID_USAGE_CAMERA_AUTO_FOCUS = 32
HID_USAGE_CAMERA_SHUTTER = 33
HID_USAGE_MS_BTH_HF_DIALNUMBER = 33
HID_USAGE_MS_BTH_HF_DIALMEMORY = 34
IOCTL_KEYBOARD_QUERY_ATTRIBUTES = 720896
IOCTL_KEYBOARD_SET_TYPEMATIC = 720900
IOCTL_KEYBOARD_SET_INDICATORS = 720904
IOCTL_KEYBOARD_QUERY_TYPEMATIC = 720928
IOCTL_KEYBOARD_QUERY_INDICATORS = 720960
IOCTL_KEYBOARD_QUERY_INDICATOR_TRANSLATION = 721024
IOCTL_KEYBOARD_INSERT_DATA = 721152
IOCTL_KEYBOARD_QUERY_EXTENDED_ATTRIBUTES = 721408
IOCTL_KEYBOARD_QUERY_IME_STATUS = 724992
IOCTL_KEYBOARD_SET_IME_STATUS = 724996
GUID_DEVINTERFACE_KEYBOARD = '884b96c3-56ef-11d1-bc8c-00a0c91405dd'
KEYBOARD_OVERRUN_MAKE_CODE = 255
KEY_MAKE = 0
KEY_BREAK = 1
KEY_E0 = 2
KEY_E1 = 4
KEY_TERMSRV_SET_LED = 8
KEY_TERMSRV_SHADOW = 16
KEY_TERMSRV_VKPACKET = 32
KEY_RIM_VKEY = 64
KEY_FROM_KEYBOARD_OVERRIDER = 128
KEY_UNICODE_SEQUENCE_ITEM = 256
KEY_UNICODE_SEQUENCE_END = 512
KEYBOARD_EXTENDED_ATTRIBUTES_STRUCT_VERSION_1 = 1
KEYBOARD_LED_INJECTED = 32768
KEYBOARD_SHADOW = 16384
KEYBOARD_KANA_LOCK_ON = 8
KEYBOARD_CAPS_LOCK_ON = 4
KEYBOARD_NUM_LOCK_ON = 2
KEYBOARD_SCROLL_LOCK_ON = 1
KEYBOARD_ERROR_VALUE_BASE = 10000
IOCTL_MOUSE_QUERY_ATTRIBUTES = 983040
IOCTL_MOUSE_INSERT_DATA = 983044
GUID_DEVINTERFACE_MOUSE = '378de44c-56ef-11d1-bc8c-00a0c91405dd'
MOUSE_LEFT_BUTTON_DOWN = 1
MOUSE_LEFT_BUTTON_UP = 2
MOUSE_RIGHT_BUTTON_DOWN = 4
MOUSE_RIGHT_BUTTON_UP = 8
MOUSE_MIDDLE_BUTTON_DOWN = 16
MOUSE_MIDDLE_BUTTON_UP = 32
MOUSE_BUTTON_1_DOWN = 1
MOUSE_BUTTON_1_UP = 2
MOUSE_BUTTON_2_DOWN = 4
MOUSE_BUTTON_2_UP = 8
MOUSE_BUTTON_3_DOWN = 16
MOUSE_BUTTON_3_UP = 32
MOUSE_BUTTON_4_DOWN = 64
MOUSE_BUTTON_4_UP = 128
MOUSE_BUTTON_5_DOWN = 256
MOUSE_BUTTON_5_UP = 512
MOUSE_WHEEL = 1024
MOUSE_HWHEEL = 2048
MOUSE_MOVE_RELATIVE = 0
MOUSE_MOVE_ABSOLUTE = 1
MOUSE_VIRTUAL_DESKTOP = 2
MOUSE_ATTRIBUTES_CHANGED = 4
MOUSE_MOVE_NOCOALESCE = 8
MOUSE_TERMSRV_SRC_SHADOW = 256
MOUSE_INPORT_HARDWARE = 1
MOUSE_I8042_HARDWARE = 2
MOUSE_SERIAL_HARDWARE = 4
BALLPOINT_I8042_HARDWARE = 8
BALLPOINT_SERIAL_HARDWARE = 16
WHEELMOUSE_I8042_HARDWARE = 32
WHEELMOUSE_SERIAL_HARDWARE = 64
MOUSE_HID_HARDWARE = 128
WHEELMOUSE_HID_HARDWARE = 256
HORIZONTAL_WHEEL_PRESENT = 32768
MOUSE_ERROR_VALUE_BASE = 20000
DIRECTINPUT_HEADER_VERSION = 2048
CLSID_DirectInput = '25e609e0-b259-11cf-bfc7-444553540000'
CLSID_DirectInputDevice = '25e609e1-b259-11cf-bfc7-444553540000'
CLSID_DirectInput8 = '25e609e4-b259-11cf-bfc7-444553540000'
CLSID_DirectInputDevice8 = '25e609e5-b259-11cf-bfc7-444553540000'
GUID_XAxis = 'a36d02e0-c9f3-11cf-bfc7-444553540000'
GUID_YAxis = 'a36d02e1-c9f3-11cf-bfc7-444553540000'
GUID_ZAxis = 'a36d02e2-c9f3-11cf-bfc7-444553540000'
GUID_RxAxis = 'a36d02f4-c9f3-11cf-bfc7-444553540000'
GUID_RyAxis = 'a36d02f5-c9f3-11cf-bfc7-444553540000'
GUID_RzAxis = 'a36d02e3-c9f3-11cf-bfc7-444553540000'
GUID_Slider = 'a36d02e4-c9f3-11cf-bfc7-444553540000'
GUID_Button = 'a36d02f0-c9f3-11cf-bfc7-444553540000'
GUID_Key = '55728220-d33c-11cf-bfc7-444553540000'
GUID_POV = 'a36d02f2-c9f3-11cf-bfc7-444553540000'
GUID_Unknown = 'a36d02f3-c9f3-11cf-bfc7-444553540000'
GUID_SysMouse = '6f1d2b60-d5a0-11cf-bfc7-444553540000'
GUID_SysKeyboard = '6f1d2b61-d5a0-11cf-bfc7-444553540000'
GUID_Joystick = '6f1d2b70-d5a0-11cf-bfc7-444553540000'
GUID_SysMouseEm = '6f1d2b80-d5a0-11cf-bfc7-444553540000'
GUID_SysMouseEm2 = '6f1d2b81-d5a0-11cf-bfc7-444553540000'
GUID_SysKeyboardEm = '6f1d2b82-d5a0-11cf-bfc7-444553540000'
GUID_SysKeyboardEm2 = '6f1d2b83-d5a0-11cf-bfc7-444553540000'
GUID_ConstantForce = '13541c20-8e33-11d0-9ad0-00a0c9a06e35'
GUID_RampForce = '13541c21-8e33-11d0-9ad0-00a0c9a06e35'
GUID_Square = '13541c22-8e33-11d0-9ad0-00a0c9a06e35'
GUID_Sine = '13541c23-8e33-11d0-9ad0-00a0c9a06e35'
GUID_Triangle = '13541c24-8e33-11d0-9ad0-00a0c9a06e35'
GUID_SawtoothUp = '13541c25-8e33-11d0-9ad0-00a0c9a06e35'
GUID_SawtoothDown = '13541c26-8e33-11d0-9ad0-00a0c9a06e35'
GUID_Spring = '13541c27-8e33-11d0-9ad0-00a0c9a06e35'
GUID_Damper = '13541c28-8e33-11d0-9ad0-00a0c9a06e35'
GUID_Inertia = '13541c29-8e33-11d0-9ad0-00a0c9a06e35'
GUID_Friction = '13541c2a-8e33-11d0-9ad0-00a0c9a06e35'
GUID_CustomForce = '13541c2b-8e33-11d0-9ad0-00a0c9a06e35'
DIEFT_ALL = 0
DIEFT_CONSTANTFORCE = 1
DIEFT_RAMPFORCE = 2
DIEFT_PERIODIC = 3
DIEFT_CONDITION = 4
DIEFT_CUSTOMFORCE = 5
DIEFT_HARDWARE = 255
DIEFT_FFATTACK = 512
DIEFT_FFFADE = 1024
DIEFT_SATURATION = 2048
DIEFT_POSNEGCOEFFICIENTS = 4096
DIEFT_POSNEGSATURATION = 8192
DIEFT_DEADBAND = 16384
DIEFT_STARTDELAY = 32768
DI_DEGREES = 100
DI_FFNOMINALMAX = 10000
DI_SECONDS = 1000000
DIEFF_OBJECTIDS = 1
DIEFF_OBJECTOFFSETS = 2
DIEFF_CARTESIAN = 16
DIEFF_POLAR = 32
DIEFF_SPHERICAL = 64
DIEP_DURATION = 1
DIEP_SAMPLEPERIOD = 2
DIEP_GAIN = 4
DIEP_TRIGGERBUTTON = 8
DIEP_TRIGGERREPEATINTERVAL = 16
DIEP_AXES = 32
DIEP_DIRECTION = 64
DIEP_ENVELOPE = 128
DIEP_TYPESPECIFICPARAMS = 256
DIEP_STARTDELAY = 512
DIEP_ALLPARAMS_DX5 = 511
DIEP_ALLPARAMS = 1023
DIEP_START = 536870912
DIEP_NORESTART = 1073741824
DIEP_NODOWNLOAD = 2147483648
DIEB_NOTRIGGER = 4294967295
DIES_SOLO = 1
DIES_NODOWNLOAD = 2147483648
DIEGES_PLAYING = 1
DIEGES_EMULATED = 2
DIDEVTYPE_DEVICE = 1
DIDEVTYPE_MOUSE = 2
DIDEVTYPE_KEYBOARD = 3
DIDEVTYPE_JOYSTICK = 4
DI8DEVCLASS_ALL = 0
DI8DEVCLASS_DEVICE = 1
DI8DEVCLASS_POINTER = 2
DI8DEVCLASS_KEYBOARD = 3
DI8DEVCLASS_GAMECTRL = 4
DI8DEVTYPE_DEVICE = 17
DI8DEVTYPE_MOUSE = 18
DI8DEVTYPE_KEYBOARD = 19
DI8DEVTYPE_JOYSTICK = 20
DI8DEVTYPE_GAMEPAD = 21
DI8DEVTYPE_DRIVING = 22
DI8DEVTYPE_FLIGHT = 23
DI8DEVTYPE_1STPERSON = 24
DI8DEVTYPE_DEVICECTRL = 25
DI8DEVTYPE_SCREENPOINTER = 26
DI8DEVTYPE_REMOTE = 27
DI8DEVTYPE_SUPPLEMENTAL = 28
DIDEVTYPE_HID = 65536
DIDEVTYPEMOUSE_UNKNOWN = 1
DIDEVTYPEMOUSE_TRADITIONAL = 2
DIDEVTYPEMOUSE_FINGERSTICK = 3
DIDEVTYPEMOUSE_TOUCHPAD = 4
DIDEVTYPEMOUSE_TRACKBALL = 5
DIDEVTYPEKEYBOARD_UNKNOWN = 0
DIDEVTYPEKEYBOARD_PCXT = 1
DIDEVTYPEKEYBOARD_OLIVETTI = 2
DIDEVTYPEKEYBOARD_PCAT = 3
DIDEVTYPEKEYBOARD_PCENH = 4
DIDEVTYPEKEYBOARD_NOKIA1050 = 5
DIDEVTYPEKEYBOARD_NOKIA9140 = 6
DIDEVTYPEKEYBOARD_NEC98 = 7
DIDEVTYPEKEYBOARD_NEC98LAPTOP = 8
DIDEVTYPEKEYBOARD_NEC98106 = 9
DIDEVTYPEKEYBOARD_JAPAN106 = 10
DIDEVTYPEKEYBOARD_JAPANAX = 11
DIDEVTYPEKEYBOARD_J3100 = 12
DIDEVTYPEJOYSTICK_UNKNOWN = 1
DIDEVTYPEJOYSTICK_TRADITIONAL = 2
DIDEVTYPEJOYSTICK_FLIGHTSTICK = 3
DIDEVTYPEJOYSTICK_GAMEPAD = 4
DIDEVTYPEJOYSTICK_RUDDER = 5
DIDEVTYPEJOYSTICK_WHEEL = 6
DIDEVTYPEJOYSTICK_HEADTRACKER = 7
DI8DEVTYPEMOUSE_UNKNOWN = 1
DI8DEVTYPEMOUSE_TRADITIONAL = 2
DI8DEVTYPEMOUSE_FINGERSTICK = 3
DI8DEVTYPEMOUSE_TOUCHPAD = 4
DI8DEVTYPEMOUSE_TRACKBALL = 5
DI8DEVTYPEMOUSE_ABSOLUTE = 6
DI8DEVTYPEKEYBOARD_UNKNOWN = 0
DI8DEVTYPEKEYBOARD_PCXT = 1
DI8DEVTYPEKEYBOARD_OLIVETTI = 2
DI8DEVTYPEKEYBOARD_PCAT = 3
DI8DEVTYPEKEYBOARD_PCENH = 4
DI8DEVTYPEKEYBOARD_NOKIA1050 = 5
DI8DEVTYPEKEYBOARD_NOKIA9140 = 6
DI8DEVTYPEKEYBOARD_NEC98 = 7
DI8DEVTYPEKEYBOARD_NEC98LAPTOP = 8
DI8DEVTYPEKEYBOARD_NEC98106 = 9
DI8DEVTYPEKEYBOARD_JAPAN106 = 10
DI8DEVTYPEKEYBOARD_JAPANAX = 11
DI8DEVTYPEKEYBOARD_J3100 = 12
DI8DEVTYPE_LIMITEDGAMESUBTYPE = 1
DI8DEVTYPEJOYSTICK_LIMITED = 1
DI8DEVTYPEJOYSTICK_STANDARD = 2
DI8DEVTYPEGAMEPAD_LIMITED = 1
DI8DEVTYPEGAMEPAD_STANDARD = 2
DI8DEVTYPEGAMEPAD_TILT = 3
DI8DEVTYPEDRIVING_LIMITED = 1
DI8DEVTYPEDRIVING_COMBINEDPEDALS = 2
DI8DEVTYPEDRIVING_DUALPEDALS = 3
DI8DEVTYPEDRIVING_THREEPEDALS = 4
DI8DEVTYPEDRIVING_HANDHELD = 5
DI8DEVTYPEFLIGHT_LIMITED = 1
DI8DEVTYPEFLIGHT_STICK = 2
DI8DEVTYPEFLIGHT_YOKE = 3
DI8DEVTYPEFLIGHT_RC = 4
DI8DEVTYPE1STPERSON_LIMITED = 1
DI8DEVTYPE1STPERSON_UNKNOWN = 2
DI8DEVTYPE1STPERSON_SIXDOF = 3
DI8DEVTYPE1STPERSON_SHOOTER = 4
DI8DEVTYPESCREENPTR_UNKNOWN = 2
DI8DEVTYPESCREENPTR_LIGHTGUN = 3
DI8DEVTYPESCREENPTR_LIGHTPEN = 4
DI8DEVTYPESCREENPTR_TOUCH = 5
DI8DEVTYPEREMOTE_UNKNOWN = 2
DI8DEVTYPEDEVICECTRL_UNKNOWN = 2
DI8DEVTYPEDEVICECTRL_COMMSSELECTION = 3
DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED = 4
DI8DEVTYPESUPPLEMENTAL_UNKNOWN = 2
DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER = 3
DI8DEVTYPESUPPLEMENTAL_HEADTRACKER = 4
DI8DEVTYPESUPPLEMENTAL_HANDTRACKER = 5
DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE = 6
DI8DEVTYPESUPPLEMENTAL_SHIFTER = 7
DI8DEVTYPESUPPLEMENTAL_THROTTLE = 8
DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE = 9
DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS = 10
DI8DEVTYPESUPPLEMENTAL_DUALPEDALS = 11
DI8DEVTYPESUPPLEMENTAL_THREEPEDALS = 12
DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS = 13
DIDC_ATTACHED = 1
DIDC_POLLEDDEVICE = 2
DIDC_EMULATED = 4
DIDC_POLLEDDATAFORMAT = 8
DIDC_FORCEFEEDBACK = 256
DIDC_FFATTACK = 512
DIDC_FFFADE = 1024
DIDC_SATURATION = 2048
DIDC_POSNEGCOEFFICIENTS = 4096
DIDC_POSNEGSATURATION = 8192
DIDC_DEADBAND = 16384
DIDC_STARTDELAY = 32768
DIDC_ALIAS = 65536
DIDC_PHANTOM = 131072
DIDC_HIDDEN = 262144
DIDFT_ALL = 0
DIDFT_RELAXIS = 1
DIDFT_ABSAXIS = 2
DIDFT_AXIS = 3
DIDFT_PSHBUTTON = 4
DIDFT_TGLBUTTON = 8
DIDFT_BUTTON = 12
DIDFT_POV = 16
DIDFT_COLLECTION = 64
DIDFT_NODATA = 128
DIDFT_ANYINSTANCE = 16776960
DIDFT_INSTANCEMASK = 16776960
DIDFT_FFACTUATOR = 16777216
DIDFT_FFEFFECTTRIGGER = 33554432
DIDFT_OUTPUT = 268435456
DIDFT_VENDORDEFINED = 67108864
DIDFT_ALIAS = 134217728
DIDFT_NOCOLLECTION = 16776960
DIDF_ABSAXIS = 1
DIDF_RELAXIS = 2
DIA_FORCEFEEDBACK = 1
DIA_APPMAPPED = 2
DIA_APPNOMAP = 4
DIA_NORANGE = 8
DIA_APPFIXED = 16
DIAH_UNMAPPED = 0
DIAH_USERCONFIG = 1
DIAH_APPREQUESTED = 2
DIAH_HWAPP = 4
DIAH_HWDEFAULT = 8
DIAH_DEFAULT = 32
DIAH_ERROR = 2147483648
DIAFTS_NEWDEVICELOW = 4294967295
DIAFTS_NEWDEVICEHIGH = 4294967295
DIAFTS_UNUSEDDEVICELOW = 0
DIAFTS_UNUSEDDEVICEHIGH = 0
DIDBAM_DEFAULT = 0
DIDBAM_PRESERVE = 1
DIDBAM_INITIALIZE = 2
DIDBAM_HWDEFAULTS = 4
DIDSAM_DEFAULT = 0
DIDSAM_NOUSER = 1
DIDSAM_FORCESAVE = 2
DICD_DEFAULT = 0
DICD_EDIT = 1
DIDIFT_CONFIGURATION = 1
DIDIFT_OVERLAY = 2
DIDAL_CENTERED = 0
DIDAL_LEFTALIGNED = 1
DIDAL_RIGHTALIGNED = 2
DIDAL_MIDDLE = 0
DIDAL_TOPALIGNED = 4
DIDAL_BOTTOMALIGNED = 8
DIDOI_FFACTUATOR = 1
DIDOI_FFEFFECTTRIGGER = 2
DIDOI_POLLED = 32768
DIDOI_ASPECTPOSITION = 256
DIDOI_ASPECTVELOCITY = 512
DIDOI_ASPECTACCEL = 768
DIDOI_ASPECTFORCE = 1024
DIDOI_ASPECTMASK = 3840
DIDOI_GUIDISUSAGE = 65536
DIPH_DEVICE = 0
DIPH_BYOFFSET = 1
DIPH_BYID = 2
DIPH_BYUSAGE = 3
MAXCPOINTSNUM = 8
DIPROPAXISMODE_ABS = 0
DIPROPAXISMODE_REL = 1
DIPROPAUTOCENTER_OFF = 0
DIPROPAUTOCENTER_ON = 1
DIPROPCALIBRATIONMODE_COOKED = 0
DIPROPCALIBRATIONMODE_RAW = 1
DIGDD_PEEK = 1
DISCL_EXCLUSIVE = 1
DISCL_NONEXCLUSIVE = 2
DISCL_FOREGROUND = 4
DISCL_BACKGROUND = 8
DISCL_NOWINKEY = 16
DISFFC_RESET = 1
DISFFC_STOPALL = 2
DISFFC_PAUSE = 4
DISFFC_CONTINUE = 8
DISFFC_SETACTUATORSON = 16
DISFFC_SETACTUATORSOFF = 32
DIGFFS_EMPTY = 1
DIGFFS_STOPPED = 2
DIGFFS_PAUSED = 4
DIGFFS_ACTUATORSON = 16
DIGFFS_ACTUATORSOFF = 32
DIGFFS_POWERON = 64
DIGFFS_POWEROFF = 128
DIGFFS_SAFETYSWITCHON = 256
DIGFFS_SAFETYSWITCHOFF = 512
DIGFFS_USERFFSWITCHON = 1024
DIGFFS_USERFFSWITCHOFF = 2048
DIGFFS_DEVICELOST = 2147483648
DISDD_CONTINUE = 1
DIFEF_DEFAULT = 0
DIFEF_INCLUDENONSTANDARD = 1
DIFEF_MODIFYIFNEEDED = 16
DIK_ESCAPE = 1
DIK_1 = 2
DIK_2 = 3
DIK_3 = 4
DIK_4 = 5
DIK_5 = 6
DIK_6 = 7
DIK_7 = 8
DIK_8 = 9
DIK_9 = 10
DIK_0 = 11
DIK_MINUS = 12
DIK_EQUALS = 13
DIK_BACK = 14
DIK_TAB = 15
DIK_Q = 16
DIK_W = 17
DIK_E = 18
DIK_R = 19
DIK_T = 20
DIK_Y = 21
DIK_U = 22
DIK_I = 23
DIK_O = 24
DIK_P = 25
DIK_LBRACKET = 26
DIK_RBRACKET = 27
DIK_RETURN = 28
DIK_LCONTROL = 29
DIK_A = 30
DIK_S = 31
DIK_D = 32
DIK_F = 33
DIK_G = 34
DIK_H = 35
DIK_J = 36
DIK_K = 37
DIK_L = 38
DIK_SEMICOLON = 39
DIK_APOSTROPHE = 40
DIK_GRAVE = 41
DIK_LSHIFT = 42
DIK_BACKSLASH = 43
DIK_Z = 44
DIK_X = 45
DIK_C = 46
DIK_V = 47
DIK_B = 48
DIK_N = 49
DIK_M = 50
DIK_COMMA = 51
DIK_PERIOD = 52
DIK_SLASH = 53
DIK_RSHIFT = 54
DIK_MULTIPLY = 55
DIK_LMENU = 56
DIK_SPACE = 57
DIK_CAPITAL = 58
DIK_F1 = 59
DIK_F2 = 60
DIK_F3 = 61
DIK_F4 = 62
DIK_F5 = 63
DIK_F6 = 64
DIK_F7 = 65
DIK_F8 = 66
DIK_F9 = 67
DIK_F10 = 68
DIK_NUMLOCK = 69
DIK_SCROLL = 70
DIK_NUMPAD7 = 71
DIK_NUMPAD8 = 72
DIK_NUMPAD9 = 73
DIK_SUBTRACT = 74
DIK_NUMPAD4 = 75
DIK_NUMPAD5 = 76
DIK_NUMPAD6 = 77
DIK_ADD = 78
DIK_NUMPAD1 = 79
DIK_NUMPAD2 = 80
DIK_NUMPAD3 = 81
DIK_NUMPAD0 = 82
DIK_DECIMAL = 83
DIK_OEM_102 = 86
DIK_F11 = 87
DIK_F12 = 88
DIK_F13 = 100
DIK_F14 = 101
DIK_F15 = 102
DIK_KANA = 112
DIK_ABNT_C1 = 115
DIK_CONVERT = 121
DIK_NOCONVERT = 123
DIK_YEN = 125
DIK_ABNT_C2 = 126
DIK_NUMPADEQUALS = 141
DIK_PREVTRACK = 144
DIK_AT = 145
DIK_COLON = 146
DIK_UNDERLINE = 147
DIK_KANJI = 148
DIK_STOP = 149
DIK_AX = 150
DIK_UNLABELED = 151
DIK_NEXTTRACK = 153
DIK_NUMPADENTER = 156
DIK_RCONTROL = 157
DIK_MUTE = 160
DIK_CALCULATOR = 161
DIK_PLAYPAUSE = 162
DIK_MEDIASTOP = 164
DIK_VOLUMEDOWN = 174
DIK_VOLUMEUP = 176
DIK_WEBHOME = 178
DIK_NUMPADCOMMA = 179
DIK_DIVIDE = 181
DIK_SYSRQ = 183
DIK_RMENU = 184
DIK_PAUSE = 197
DIK_HOME = 199
DIK_UP = 200
DIK_PRIOR = 201
DIK_LEFT = 203
DIK_RIGHT = 205
DIK_END = 207
DIK_DOWN = 208
DIK_NEXT = 209
DIK_INSERT = 210
DIK_DELETE = 211
DIK_LWIN = 219
DIK_RWIN = 220
DIK_APPS = 221
DIK_POWER = 222
DIK_SLEEP = 223
DIK_WAKE = 227
DIK_WEBSEARCH = 229
DIK_WEBFAVORITES = 230
DIK_WEBREFRESH = 231
DIK_WEBSTOP = 232
DIK_WEBFORWARD = 233
DIK_WEBBACK = 234
DIK_MYCOMPUTER = 235
DIK_MAIL = 236
DIK_MEDIASELECT = 237
DIK_BACKSPACE = 14
DIK_NUMPADSTAR = 55
DIK_LALT = 56
DIK_CAPSLOCK = 58
DIK_NUMPADMINUS = 74
DIK_NUMPADPLUS = 78
DIK_NUMPADPERIOD = 83
DIK_NUMPADSLASH = 181
DIK_RALT = 184
DIK_UPARROW = 200
DIK_PGUP = 201
DIK_LEFTARROW = 203
DIK_RIGHTARROW = 205
DIK_DOWNARROW = 208
DIK_PGDN = 209
DIK_CIRCUMFLEX = 144
DIENUM_STOP = 0
DIENUM_CONTINUE = 1
DIEDFL_ALLDEVICES = 0
DIEDFL_ATTACHEDONLY = 1
DIEDFL_FORCEFEEDBACK = 256
DIEDFL_INCLUDEALIASES = 65536
DIEDFL_INCLUDEPHANTOMS = 131072
DIEDFL_INCLUDEHIDDEN = 262144
DIEDBS_MAPPEDPRI1 = 1
DIEDBS_MAPPEDPRI2 = 2
DIEDBS_RECENTDEVICE = 16
DIEDBS_NEWDEVICE = 32
DIEDBSFL_ATTACHEDONLY = 0
DIEDBSFL_THISUSER = 16
DIEDBSFL_FORCEFEEDBACK = 256
DIEDBSFL_AVAILABLEDEVICES = 4096
DIEDBSFL_MULTIMICEKEYBOARDS = 8192
DIEDBSFL_NONGAMINGDEVICES = 16384
DIEDBSFL_VALID = 28944
DI_OK = 0
DI_NOTATTACHED = 1
DI_BUFFEROVERFLOW = 1
DI_PROPNOEFFECT = 1
DI_NOEFFECT = 1
DI_POLLEDDEVICE = 2
DI_DOWNLOADSKIPPED = 3
DI_EFFECTRESTARTED = 4
DI_TRUNCATED = 8
DI_SETTINGSNOTSAVED = 11
DI_TRUNCATEDANDRESTARTED = 12
DI_WRITEPROTECT = 19
DIERR_OLDDIRECTINPUTVERSION = -2147023746
DIERR_BETADIRECTINPUTVERSION = -2147023743
DIERR_BADDRIVERVER = -2147024777
DIERR_DEVICENOTREG = -2147221164
DIERR_NOTFOUND = -2147024894
DIERR_OBJECTNOTFOUND = -2147024894
DIERR_INVALIDPARAM = -2147024809
DIERR_NOINTERFACE = -2147467262
DIERR_GENERIC = -2147467259
DIERR_OUTOFMEMORY = -2147024882
DIERR_UNSUPPORTED = -2147467263
DIERR_NOTINITIALIZED = -2147024875
DIERR_ALREADYINITIALIZED = -2147023649
DIERR_NOAGGREGATION = -2147221232
DIERR_OTHERAPPHASPRIO = -2147024891
DIERR_INPUTLOST = -2147024866
DIERR_ACQUIRED = -2147024726
DIERR_NOTACQUIRED = -2147024884
DIERR_READONLY = -2147024891
DIERR_HANDLEEXISTS = -2147024891
DIERR_INSUFFICIENTPRIVS = -2147220992
DIERR_DEVICEFULL = -2147220991
DIERR_MOREDATA = -2147220990
DIERR_NOTDOWNLOADED = -2147220989
DIERR_HASEFFECTS = -2147220988
DIERR_NOTEXCLUSIVEACQUIRED = -2147220987
DIERR_INCOMPLETEEFFECT = -2147220986
DIERR_NOTBUFFERED = -2147220985
DIERR_EFFECTPLAYING = -2147220984
DIERR_UNPLUGGED = -2147220983
DIERR_REPORTFULL = -2147220982
DIERR_MAPFILEFAIL = -2147220981
DIKEYBOARD_ESCAPE = 2164261889
DIKEYBOARD_1 = 2164261890
DIKEYBOARD_2 = 2164261891
DIKEYBOARD_3 = 2164261892
DIKEYBOARD_4 = 2164261893
DIKEYBOARD_5 = 2164261894
DIKEYBOARD_6 = 2164261895
DIKEYBOARD_7 = 2164261896
DIKEYBOARD_8 = 2164261897
DIKEYBOARD_9 = 2164261898
DIKEYBOARD_0 = 2164261899
DIKEYBOARD_MINUS = 2164261900
DIKEYBOARD_EQUALS = 2164261901
DIKEYBOARD_BACK = 2164261902
DIKEYBOARD_TAB = 2164261903
DIKEYBOARD_Q = 2164261904
DIKEYBOARD_W = 2164261905
DIKEYBOARD_E = 2164261906
DIKEYBOARD_R = 2164261907
DIKEYBOARD_T = 2164261908
DIKEYBOARD_Y = 2164261909
DIKEYBOARD_U = 2164261910
DIKEYBOARD_I = 2164261911
DIKEYBOARD_O = 2164261912
DIKEYBOARD_P = 2164261913
DIKEYBOARD_LBRACKET = 2164261914
DIKEYBOARD_RBRACKET = 2164261915
DIKEYBOARD_RETURN = 2164261916
DIKEYBOARD_LCONTROL = 2164261917
DIKEYBOARD_A = 2164261918
DIKEYBOARD_S = 2164261919
DIKEYBOARD_D = 2164261920
DIKEYBOARD_F = 2164261921
DIKEYBOARD_G = 2164261922
DIKEYBOARD_H = 2164261923
DIKEYBOARD_J = 2164261924
DIKEYBOARD_K = 2164261925
DIKEYBOARD_L = 2164261926
DIKEYBOARD_SEMICOLON = 2164261927
DIKEYBOARD_APOSTROPHE = 2164261928
DIKEYBOARD_GRAVE = 2164261929
DIKEYBOARD_LSHIFT = 2164261930
DIKEYBOARD_BACKSLASH = 2164261931
DIKEYBOARD_Z = 2164261932
DIKEYBOARD_X = 2164261933
DIKEYBOARD_C = 2164261934
DIKEYBOARD_V = 2164261935
DIKEYBOARD_B = 2164261936
DIKEYBOARD_N = 2164261937
DIKEYBOARD_M = 2164261938
DIKEYBOARD_COMMA = 2164261939
DIKEYBOARD_PERIOD = 2164261940
DIKEYBOARD_SLASH = 2164261941
DIKEYBOARD_RSHIFT = 2164261942
DIKEYBOARD_MULTIPLY = 2164261943
DIKEYBOARD_LMENU = 2164261944
DIKEYBOARD_SPACE = 2164261945
DIKEYBOARD_CAPITAL = 2164261946
DIKEYBOARD_F1 = 2164261947
DIKEYBOARD_F2 = 2164261948
DIKEYBOARD_F3 = 2164261949
DIKEYBOARD_F4 = 2164261950
DIKEYBOARD_F5 = 2164261951
DIKEYBOARD_F6 = 2164261952
DIKEYBOARD_F7 = 2164261953
DIKEYBOARD_F8 = 2164261954
DIKEYBOARD_F9 = 2164261955
DIKEYBOARD_F10 = 2164261956
DIKEYBOARD_NUMLOCK = 2164261957
DIKEYBOARD_SCROLL = 2164261958
DIKEYBOARD_NUMPAD7 = 2164261959
DIKEYBOARD_NUMPAD8 = 2164261960
DIKEYBOARD_NUMPAD9 = 2164261961
DIKEYBOARD_SUBTRACT = 2164261962
DIKEYBOARD_NUMPAD4 = 2164261963
DIKEYBOARD_NUMPAD5 = 2164261964
DIKEYBOARD_NUMPAD6 = 2164261965
DIKEYBOARD_ADD = 2164261966
DIKEYBOARD_NUMPAD1 = 2164261967
DIKEYBOARD_NUMPAD2 = 2164261968
DIKEYBOARD_NUMPAD3 = 2164261969
DIKEYBOARD_NUMPAD0 = 2164261970
DIKEYBOARD_DECIMAL = 2164261971
DIKEYBOARD_OEM_102 = 2164261974
DIKEYBOARD_F11 = 2164261975
DIKEYBOARD_F12 = 2164261976
DIKEYBOARD_F13 = 2164261988
DIKEYBOARD_F14 = 2164261989
DIKEYBOARD_F15 = 2164261990
DIKEYBOARD_KANA = 2164262000
DIKEYBOARD_ABNT_C1 = 2164262003
DIKEYBOARD_CONVERT = 2164262009
DIKEYBOARD_NOCONVERT = 2164262011
DIKEYBOARD_YEN = 2164262013
DIKEYBOARD_ABNT_C2 = 2164262014
DIKEYBOARD_NUMPADEQUALS = 2164262029
DIKEYBOARD_PREVTRACK = 2164262032
DIKEYBOARD_AT = 2164262033
DIKEYBOARD_COLON = 2164262034
DIKEYBOARD_UNDERLINE = 2164262035
DIKEYBOARD_KANJI = 2164262036
DIKEYBOARD_STOP = 2164262037
DIKEYBOARD_AX = 2164262038
DIKEYBOARD_UNLABELED = 2164262039
DIKEYBOARD_NEXTTRACK = 2164262041
DIKEYBOARD_NUMPADENTER = 2164262044
DIKEYBOARD_RCONTROL = 2164262045
DIKEYBOARD_MUTE = 2164262048
DIKEYBOARD_CALCULATOR = 2164262049
DIKEYBOARD_PLAYPAUSE = 2164262050
DIKEYBOARD_MEDIASTOP = 2164262052
DIKEYBOARD_VOLUMEDOWN = 2164262062
DIKEYBOARD_VOLUMEUP = 2164262064
DIKEYBOARD_WEBHOME = 2164262066
DIKEYBOARD_NUMPADCOMMA = 2164262067
DIKEYBOARD_DIVIDE = 2164262069
DIKEYBOARD_SYSRQ = 2164262071
DIKEYBOARD_RMENU = 2164262072
DIKEYBOARD_PAUSE = 2164262085
DIKEYBOARD_HOME = 2164262087
DIKEYBOARD_UP = 2164262088
DIKEYBOARD_PRIOR = 2164262089
DIKEYBOARD_LEFT = 2164262091
DIKEYBOARD_RIGHT = 2164262093
DIKEYBOARD_END = 2164262095
DIKEYBOARD_DOWN = 2164262096
DIKEYBOARD_NEXT = 2164262097
DIKEYBOARD_INSERT = 2164262098
DIKEYBOARD_DELETE = 2164262099
DIKEYBOARD_LWIN = 2164262107
DIKEYBOARD_RWIN = 2164262108
DIKEYBOARD_APPS = 2164262109
DIKEYBOARD_POWER = 2164262110
DIKEYBOARD_SLEEP = 2164262111
DIKEYBOARD_WAKE = 2164262115
DIKEYBOARD_WEBSEARCH = 2164262117
DIKEYBOARD_WEBFAVORITES = 2164262118
DIKEYBOARD_WEBREFRESH = 2164262119
DIKEYBOARD_WEBSTOP = 2164262120
DIKEYBOARD_WEBFORWARD = 2164262121
DIKEYBOARD_WEBBACK = 2164262122
DIKEYBOARD_MYCOMPUTER = 2164262123
DIKEYBOARD_MAIL = 2164262124
DIKEYBOARD_MEDIASELECT = 2164262125
DIVOICE_CHANNEL1 = 2197816321
DIVOICE_CHANNEL2 = 2197816322
DIVOICE_CHANNEL3 = 2197816323
DIVOICE_CHANNEL4 = 2197816324
DIVOICE_CHANNEL5 = 2197816325
DIVOICE_CHANNEL6 = 2197816326
DIVOICE_CHANNEL7 = 2197816327
DIVOICE_CHANNEL8 = 2197816328
DIVOICE_TEAM = 2197816329
DIVOICE_ALL = 2197816330
DIVOICE_RECORDMUTE = 2197816331
DIVOICE_PLAYBACKMUTE = 2197816332
DIVOICE_TRANSMIT = 2197816333
DIVOICE_VOICECOMMAND = 2197816336
DIVIRTUAL_DRIVING_RACE = 16777216
DIAXIS_DRIVINGR_STEER = 16812545
DIAXIS_DRIVINGR_ACCELERATE = 17011202
DIAXIS_DRIVINGR_BRAKE = 17043971
DIBUTTON_DRIVINGR_SHIFTUP = 16780289
DIBUTTON_DRIVINGR_SHIFTDOWN = 16780290
DIBUTTON_DRIVINGR_VIEW = 16784387
DIBUTTON_DRIVINGR_MENU = 16778493
DIAXIS_DRIVINGR_ACCEL_AND_BRAKE = 16861700
DIHATSWITCH_DRIVINGR_GLANCE = 16795137
DIBUTTON_DRIVINGR_BRAKE = 16796676
DIBUTTON_DRIVINGR_DASHBOARD = 16794629
DIBUTTON_DRIVINGR_AIDS = 16794630
DIBUTTON_DRIVINGR_MAP = 16794631
DIBUTTON_DRIVINGR_BOOST = 16794632
DIBUTTON_DRIVINGR_PIT = 16794633
DIBUTTON_DRIVINGR_ACCELERATE_LINK = 17028320
DIBUTTON_DRIVINGR_STEER_LEFT_LINK = 16829668
DIBUTTON_DRIVINGR_STEER_RIGHT_LINK = 16829676
DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK = 17286372
DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK = 17286380
DIBUTTON_DRIVINGR_DEVICE = 16794878
DIBUTTON_DRIVINGR_PAUSE = 16794876
DIVIRTUAL_DRIVING_COMBAT = 33554432
DIAXIS_DRIVINGC_STEER = 33589761
DIAXIS_DRIVINGC_ACCELERATE = 33788418
DIAXIS_DRIVINGC_BRAKE = 33821187
DIBUTTON_DRIVINGC_FIRE = 33557505
DIBUTTON_DRIVINGC_WEAPONS = 33557506
DIBUTTON_DRIVINGC_TARGET = 33557507
DIBUTTON_DRIVINGC_MENU = 33555709
DIAXIS_DRIVINGC_ACCEL_AND_BRAKE = 33638916
DIHATSWITCH_DRIVINGC_GLANCE = 33572353
DIBUTTON_DRIVINGC_SHIFTUP = 33573892
DIBUTTON_DRIVINGC_SHIFTDOWN = 33573893
DIBUTTON_DRIVINGC_DASHBOARD = 33571846
DIBUTTON_DRIVINGC_AIDS = 33571847
DIBUTTON_DRIVINGC_BRAKE = 33573896
DIBUTTON_DRIVINGC_FIRESECONDARY = 33573897
DIBUTTON_DRIVINGC_ACCELERATE_LINK = 33805536
DIBUTTON_DRIVINGC_STEER_LEFT_LINK = 33606884
DIBUTTON_DRIVINGC_STEER_RIGHT_LINK = 33606892
DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK = 34063588
DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK = 34063596
DIBUTTON_DRIVINGC_DEVICE = 33572094
DIBUTTON_DRIVINGC_PAUSE = 33572092
DIVIRTUAL_DRIVING_TANK = 50331648
DIAXIS_DRIVINGT_STEER = 50366977
DIAXIS_DRIVINGT_BARREL = 50397698
DIAXIS_DRIVINGT_ACCELERATE = 50565635
DIAXIS_DRIVINGT_ROTATE = 50463236
DIBUTTON_DRIVINGT_FIRE = 50334721
DIBUTTON_DRIVINGT_WEAPONS = 50334722
DIBUTTON_DRIVINGT_TARGET = 50334723
DIBUTTON_DRIVINGT_MENU = 50332925
DIHATSWITCH_DRIVINGT_GLANCE = 50349569
DIAXIS_DRIVINGT_BRAKE = 50614789
DIAXIS_DRIVINGT_ACCEL_AND_BRAKE = 50416134
DIBUTTON_DRIVINGT_VIEW = 50355204
DIBUTTON_DRIVINGT_DASHBOARD = 50355205
DIBUTTON_DRIVINGT_BRAKE = 50351110
DIBUTTON_DRIVINGT_FIRESECONDARY = 50351111
DIBUTTON_DRIVINGT_ACCELERATE_LINK = 50582752
DIBUTTON_DRIVINGT_STEER_LEFT_LINK = 50384100
DIBUTTON_DRIVINGT_STEER_RIGHT_LINK = 50384108
DIBUTTON_DRIVINGT_BARREL_UP_LINK = 50414816
DIBUTTON_DRIVINGT_BARREL_DOWN_LINK = 50414824
DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK = 50480356
DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK = 50480364
DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK = 50840804
DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK = 50840812
DIBUTTON_DRIVINGT_DEVICE = 50349310
DIBUTTON_DRIVINGT_PAUSE = 50349308
DIVIRTUAL_FLYING_CIVILIAN = 67108864
DIAXIS_FLYINGC_BANK = 67144193
DIAXIS_FLYINGC_PITCH = 67176962
DIAXIS_FLYINGC_THROTTLE = 67342851
DIBUTTON_FLYINGC_VIEW = 67118081
DIBUTTON_FLYINGC_DISPLAY = 67118082
DIBUTTON_FLYINGC_GEAR = 67120131
DIBUTTON_FLYINGC_MENU = 67110141
DIHATSWITCH_FLYINGC_GLANCE = 67126785
DIAXIS_FLYINGC_BRAKE = 67398148
DIAXIS_FLYINGC_RUDDER = 67260933
DIAXIS_FLYINGC_FLAPS = 67459590
DIBUTTON_FLYINGC_FLAPSUP = 67134468
DIBUTTON_FLYINGC_FLAPSDOWN = 67134469
DIBUTTON_FLYINGC_BRAKE_LINK = 67398880
DIBUTTON_FLYINGC_FASTER_LINK = 67359968
DIBUTTON_FLYINGC_SLOWER_LINK = 67359976
DIBUTTON_FLYINGC_GLANCE_LEFT_LINK = 67618020
DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK = 67618028
DIBUTTON_FLYINGC_GLANCE_UP_LINK = 67618016
DIBUTTON_FLYINGC_GLANCE_DOWN_LINK = 67618024
DIBUTTON_FLYINGC_DEVICE = 67126526
DIBUTTON_FLYINGC_PAUSE = 67126524
DIVIRTUAL_FLYING_MILITARY = 83886080
DIAXIS_FLYINGM_BANK = 83921409
DIAXIS_FLYINGM_PITCH = 83954178
DIAXIS_FLYINGM_THROTTLE = 84120067
DIBUTTON_FLYINGM_FIRE = 83889153
DIBUTTON_FLYINGM_WEAPONS = 83889154
DIBUTTON_FLYINGM_TARGET = 83889155
DIBUTTON_FLYINGM_MENU = 83887357
DIHATSWITCH_FLYINGM_GLANCE = 83904001
DIBUTTON_FLYINGM_COUNTER = 83909636
DIAXIS_FLYINGM_RUDDER = 84036100
DIAXIS_FLYINGM_BRAKE = 84173317
DIBUTTON_FLYINGM_VIEW = 83911685
DIBUTTON_FLYINGM_DISPLAY = 83911686
DIAXIS_FLYINGM_FLAPS = 84234758
DIBUTTON_FLYINGM_FLAPSUP = 83907591
DIBUTTON_FLYINGM_FLAPSDOWN = 83907592
DIBUTTON_FLYINGM_FIRESECONDARY = 83905545
DIBUTTON_FLYINGM_GEAR = 83911690
DIBUTTON_FLYINGM_BRAKE_LINK = 84174048
DIBUTTON_FLYINGM_FASTER_LINK = 84137184
DIBUTTON_FLYINGM_SLOWER_LINK = 84137192
DIBUTTON_FLYINGM_GLANCE_LEFT_LINK = 84395236
DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK = 84395244
DIBUTTON_FLYINGM_GLANCE_UP_LINK = 84395232
DIBUTTON_FLYINGM_GLANCE_DOWN_LINK = 84395240
DIBUTTON_FLYINGM_DEVICE = 83903742
DIBUTTON_FLYINGM_PAUSE = 83903740
DIVIRTUAL_FLYING_HELICOPTER = 100663296
DIAXIS_FLYINGH_BANK = 100698625
DIAXIS_FLYINGH_PITCH = 100731394
DIAXIS_FLYINGH_COLLECTIVE = 100764163
DIBUTTON_FLYINGH_FIRE = 100668417
DIBUTTON_FLYINGH_WEAPONS = 100668418
DIBUTTON_FLYINGH_TARGET = 100668419
DIBUTTON_FLYINGH_MENU = 100664573
DIHATSWITCH_FLYINGH_GLANCE = 100681217
DIAXIS_FLYINGH_TORQUE = 100817412
DIAXIS_FLYINGH_THROTTLE = 100915717
DIBUTTON_FLYINGH_COUNTER = 100684804
DIBUTTON_FLYINGH_VIEW = 100688901
DIBUTTON_FLYINGH_GEAR = 100688902
DIBUTTON_FLYINGH_FIRESECONDARY = 100682759
DIBUTTON_FLYINGH_FASTER_LINK = 100916448
DIBUTTON_FLYINGH_SLOWER_LINK = 100916456
DIBUTTON_FLYINGH_GLANCE_LEFT_LINK = 101172452
DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK = 101172460
DIBUTTON_FLYINGH_GLANCE_UP_LINK = 101172448
DIBUTTON_FLYINGH_GLANCE_DOWN_LINK = 101172456
DIBUTTON_FLYINGH_DEVICE = 100680958
DIBUTTON_FLYINGH_PAUSE = 100680956
DIVIRTUAL_SPACESIM = 117440512
DIAXIS_SPACESIM_LATERAL = 117473793
DIAXIS_SPACESIM_MOVE = 117506562
DIAXIS_SPACESIM_THROTTLE = 117670403
DIBUTTON_SPACESIM_FIRE = 117441537
DIBUTTON_SPACESIM_WEAPONS = 117441538
DIBUTTON_SPACESIM_TARGET = 117441539
DIBUTTON_SPACESIM_MENU = 117441789
DIHATSWITCH_SPACESIM_GLANCE = 117458433
DIAXIS_SPACESIM_CLIMB = 117555716
DIAXIS_SPACESIM_ROTATE = 117588485
DIBUTTON_SPACESIM_VIEW = 117457924
DIBUTTON_SPACESIM_DISPLAY = 117457925
DIBUTTON_SPACESIM_RAISE = 117457926
DIBUTTON_SPACESIM_LOWER = 117457927
DIBUTTON_SPACESIM_GEAR = 117457928
DIBUTTON_SPACESIM_FIRESECONDARY = 117457929
DIBUTTON_SPACESIM_LEFT_LINK = 117490916
DIBUTTON_SPACESIM_RIGHT_LINK = 117490924
DIBUTTON_SPACESIM_FORWARD_LINK = 117523680
DIBUTTON_SPACESIM_BACKWARD_LINK = 117523688
DIBUTTON_SPACESIM_FASTER_LINK = 117687520
DIBUTTON_SPACESIM_SLOWER_LINK = 117687528
DIBUTTON_SPACESIM_TURN_LEFT_LINK = 117589220
DIBUTTON_SPACESIM_TURN_RIGHT_LINK = 117589228
DIBUTTON_SPACESIM_GLANCE_LEFT_LINK = 117949668
DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK = 117949676
DIBUTTON_SPACESIM_GLANCE_UP_LINK = 117949664
DIBUTTON_SPACESIM_GLANCE_DOWN_LINK = 117949672
DIBUTTON_SPACESIM_DEVICE = 117458174
DIBUTTON_SPACESIM_PAUSE = 117458172
DIVIRTUAL_FIGHTING_HAND2HAND = 134217728
DIAXIS_FIGHTINGH_LATERAL = 134251009
DIAXIS_FIGHTINGH_MOVE = 134283778
DIBUTTON_FIGHTINGH_PUNCH = 134218753
DIBUTTON_FIGHTINGH_KICK = 134218754
DIBUTTON_FIGHTINGH_BLOCK = 134218755
DIBUTTON_FIGHTINGH_CROUCH = 134218756
DIBUTTON_FIGHTINGH_JUMP = 134218757
DIBUTTON_FIGHTINGH_SPECIAL1 = 134218758
DIBUTTON_FIGHTINGH_SPECIAL2 = 134218759
DIBUTTON_FIGHTINGH_MENU = 134219005
DIBUTTON_FIGHTINGH_SELECT = 134235144
DIHATSWITCH_FIGHTINGH_SLIDE = 134235649
DIBUTTON_FIGHTINGH_DISPLAY = 134235145
DIAXIS_FIGHTINGH_ROTATE = 134365699
DIBUTTON_FIGHTINGH_DODGE = 134235146
DIBUTTON_FIGHTINGH_LEFT_LINK = 134268132
DIBUTTON_FIGHTINGH_RIGHT_LINK = 134268140
DIBUTTON_FIGHTINGH_FORWARD_LINK = 134300896
DIBUTTON_FIGHTINGH_BACKWARD_LINK = 134300904
DIBUTTON_FIGHTINGH_DEVICE = 134235390
DIBUTTON_FIGHTINGH_PAUSE = 134235388
DIVIRTUAL_FIGHTING_FPS = 150994944
DIAXIS_FPS_ROTATE = 151028225
DIAXIS_FPS_MOVE = 151060994
DIBUTTON_FPS_FIRE = 150995969
DIBUTTON_FPS_WEAPONS = 150995970
DIBUTTON_FPS_APPLY = 150995971
DIBUTTON_FPS_SELECT = 150995972
DIBUTTON_FPS_CROUCH = 150995973
DIBUTTON_FPS_JUMP = 150995974
DIAXIS_FPS_LOOKUPDOWN = 151093763
DIBUTTON_FPS_STRAFE = 150995975
DIBUTTON_FPS_MENU = 150996221
DIHATSWITCH_FPS_GLANCE = 151012865
DIBUTTON_FPS_DISPLAY = 151012360
DIAXIS_FPS_SIDESTEP = 151142916
DIBUTTON_FPS_DODGE = 151012361
DIBUTTON_FPS_GLANCEL = 151012362
DIBUTTON_FPS_GLANCER = 151012363
DIBUTTON_FPS_FIRESECONDARY = 151012364
DIBUTTON_FPS_ROTATE_LEFT_LINK = 151045348
DIBUTTON_FPS_ROTATE_RIGHT_LINK = 151045356
DIBUTTON_FPS_FORWARD_LINK = 151078112
DIBUTTON_FPS_BACKWARD_LINK = 151078120
DIBUTTON_FPS_GLANCE_UP_LINK = 151110880
DIBUTTON_FPS_GLANCE_DOWN_LINK = 151110888
DIBUTTON_FPS_STEP_LEFT_LINK = 151143652
DIBUTTON_FPS_STEP_RIGHT_LINK = 151143660
DIBUTTON_FPS_DEVICE = 151012606
DIBUTTON_FPS_PAUSE = 151012604
DIVIRTUAL_FIGHTING_THIRDPERSON = 167772160
DIAXIS_TPS_TURN = 167903745
DIAXIS_TPS_MOVE = 167838210
DIBUTTON_TPS_RUN = 167773185
DIBUTTON_TPS_ACTION = 167773186
DIBUTTON_TPS_SELECT = 167773187
DIBUTTON_TPS_USE = 167773188
DIBUTTON_TPS_JUMP = 167773189
DIBUTTON_TPS_MENU = 167773437
DIHATSWITCH_TPS_GLANCE = 167790081
DIBUTTON_TPS_VIEW = 167789574
DIBUTTON_TPS_STEPLEFT = 167789575
DIBUTTON_TPS_STEPRIGHT = 167789576
DIAXIS_TPS_STEP = 167821827
DIBUTTON_TPS_DODGE = 167789577
DIBUTTON_TPS_INVENTORY = 167789578
DIBUTTON_TPS_TURN_LEFT_LINK = 167920868
DIBUTTON_TPS_TURN_RIGHT_LINK = 167920876
DIBUTTON_TPS_FORWARD_LINK = 167855328
DIBUTTON_TPS_BACKWARD_LINK = 167855336
DIBUTTON_TPS_GLANCE_UP_LINK = 168281312
DIBUTTON_TPS_GLANCE_DOWN_LINK = 168281320
DIBUTTON_TPS_GLANCE_LEFT_LINK = 168281316
DIBUTTON_TPS_GLANCE_RIGHT_LINK = 168281324
DIBUTTON_TPS_DEVICE = 167789822
DIBUTTON_TPS_PAUSE = 167789820
DIVIRTUAL_STRATEGY_ROLEPLAYING = 184549376
DIAXIS_STRATEGYR_LATERAL = 184582657
DIAXIS_STRATEGYR_MOVE = 184615426
DIBUTTON_STRATEGYR_GET = 184550401
DIBUTTON_STRATEGYR_APPLY = 184550402
DIBUTTON_STRATEGYR_SELECT = 184550403
DIBUTTON_STRATEGYR_ATTACK = 184550404
DIBUTTON_STRATEGYR_CAST = 184550405
DIBUTTON_STRATEGYR_CROUCH = 184550406
DIBUTTON_STRATEGYR_JUMP = 184550407
DIBUTTON_STRATEGYR_MENU = 184550653
DIHATSWITCH_STRATEGYR_GLANCE = 184567297
DIBUTTON_STRATEGYR_MAP = 184566792
DIBUTTON_STRATEGYR_DISPLAY = 184566793
DIAXIS_STRATEGYR_ROTATE = 184697347
DIBUTTON_STRATEGYR_LEFT_LINK = 184599780
DIBUTTON_STRATEGYR_RIGHT_LINK = 184599788
DIBUTTON_STRATEGYR_FORWARD_LINK = 184632544
DIBUTTON_STRATEGYR_BACK_LINK = 184632552
DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK = 184698084
DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK = 184698092
DIBUTTON_STRATEGYR_DEVICE = 184567038
DIBUTTON_STRATEGYR_PAUSE = 184567036
DIVIRTUAL_STRATEGY_TURN = 201326592
DIAXIS_STRATEGYT_LATERAL = 201359873
DIAXIS_STRATEGYT_MOVE = 201392642
DIBUTTON_STRATEGYT_SELECT = 201327617
DIBUTTON_STRATEGYT_INSTRUCT = 201327618
DIBUTTON_STRATEGYT_APPLY = 201327619
DIBUTTON_STRATEGYT_TEAM = 201327620
DIBUTTON_STRATEGYT_TURN = 201327621
DIBUTTON_STRATEGYT_MENU = 201327869
DIBUTTON_STRATEGYT_ZOOM = 201344006
DIBUTTON_STRATEGYT_MAP = 201344007
DIBUTTON_STRATEGYT_DISPLAY = 201344008
DIBUTTON_STRATEGYT_LEFT_LINK = 201376996
DIBUTTON_STRATEGYT_RIGHT_LINK = 201377004
DIBUTTON_STRATEGYT_FORWARD_LINK = 201409760
DIBUTTON_STRATEGYT_BACK_LINK = 201409768
DIBUTTON_STRATEGYT_DEVICE = 201344254
DIBUTTON_STRATEGYT_PAUSE = 201344252
DIVIRTUAL_SPORTS_HUNTING = 218103808
DIAXIS_HUNTING_LATERAL = 218137089
DIAXIS_HUNTING_MOVE = 218169858
DIBUTTON_HUNTING_FIRE = 218104833
DIBUTTON_HUNTING_AIM = 218104834
DIBUTTON_HUNTING_WEAPON = 218104835
DIBUTTON_HUNTING_BINOCULAR = 218104836
DIBUTTON_HUNTING_CALL = 218104837
DIBUTTON_HUNTING_MAP = 218104838
DIBUTTON_HUNTING_SPECIAL = 218104839
DIBUTTON_HUNTING_MENU = 218105085
DIHATSWITCH_HUNTING_GLANCE = 218121729
DIBUTTON_HUNTING_DISPLAY = 218121224
DIAXIS_HUNTING_ROTATE = 218251779
DIBUTTON_HUNTING_CROUCH = 218121225
DIBUTTON_HUNTING_JUMP = 218121226
DIBUTTON_HUNTING_FIRESECONDARY = 218121227
DIBUTTON_HUNTING_LEFT_LINK = 218154212
DIBUTTON_HUNTING_RIGHT_LINK = 218154220
DIBUTTON_HUNTING_FORWARD_LINK = 218186976
DIBUTTON_HUNTING_BACK_LINK = 218186984
DIBUTTON_HUNTING_ROTATE_LEFT_LINK = 218252516
DIBUTTON_HUNTING_ROTATE_RIGHT_LINK = 218252524
DIBUTTON_HUNTING_DEVICE = 218121470
DIBUTTON_HUNTING_PAUSE = 218121468
DIVIRTUAL_SPORTS_FISHING = 234881024
DIAXIS_FISHING_LATERAL = 234914305
DIAXIS_FISHING_MOVE = 234947074
DIBUTTON_FISHING_CAST = 234882049
DIBUTTON_FISHING_TYPE = 234882050
DIBUTTON_FISHING_BINOCULAR = 234882051
DIBUTTON_FISHING_BAIT = 234882052
DIBUTTON_FISHING_MAP = 234882053
DIBUTTON_FISHING_MENU = 234882301
DIHATSWITCH_FISHING_GLANCE = 234898945
DIBUTTON_FISHING_DISPLAY = 234898438
DIAXIS_FISHING_ROTATE = 235028995
DIBUTTON_FISHING_CROUCH = 234898439
DIBUTTON_FISHING_JUMP = 234898440
DIBUTTON_FISHING_LEFT_LINK = 234931428
DIBUTTON_FISHING_RIGHT_LINK = 234931436
DIBUTTON_FISHING_FORWARD_LINK = 234964192
DIBUTTON_FISHING_BACK_LINK = 234964200
DIBUTTON_FISHING_ROTATE_LEFT_LINK = 235029732
DIBUTTON_FISHING_ROTATE_RIGHT_LINK = 235029740
DIBUTTON_FISHING_DEVICE = 234898686
DIBUTTON_FISHING_PAUSE = 234898684
DIVIRTUAL_SPORTS_BASEBALL_BAT = 251658240
DIAXIS_BASEBALLB_LATERAL = 251691521
DIAXIS_BASEBALLB_MOVE = 251724290
DIBUTTON_BASEBALLB_SELECT = 251659265
DIBUTTON_BASEBALLB_NORMAL = 251659266
DIBUTTON_BASEBALLB_POWER = 251659267
DIBUTTON_BASEBALLB_BUNT = 251659268
DIBUTTON_BASEBALLB_STEAL = 251659269
DIBUTTON_BASEBALLB_BURST = 251659270
DIBUTTON_BASEBALLB_SLIDE = 251659271
DIBUTTON_BASEBALLB_CONTACT = 251659272
DIBUTTON_BASEBALLB_MENU = 251659517
DIBUTTON_BASEBALLB_NOSTEAL = 251675657
DIBUTTON_BASEBALLB_BOX = 251675658
DIBUTTON_BASEBALLB_LEFT_LINK = 251708644
DIBUTTON_BASEBALLB_RIGHT_LINK = 251708652
DIBUTTON_BASEBALLB_FORWARD_LINK = 251741408
DIBUTTON_BASEBALLB_BACK_LINK = 251741416
DIBUTTON_BASEBALLB_DEVICE = 251675902
DIBUTTON_BASEBALLB_PAUSE = 251675900
DIVIRTUAL_SPORTS_BASEBALL_PITCH = 268435456
DIAXIS_BASEBALLP_LATERAL = 268468737
DIAXIS_BASEBALLP_MOVE = 268501506
DIBUTTON_BASEBALLP_SELECT = 268436481
DIBUTTON_BASEBALLP_PITCH = 268436482
DIBUTTON_BASEBALLP_BASE = 268436483
DIBUTTON_BASEBALLP_THROW = 268436484
DIBUTTON_BASEBALLP_FAKE = 268436485
DIBUTTON_BASEBALLP_MENU = 268436733
DIBUTTON_BASEBALLP_WALK = 268452870
DIBUTTON_BASEBALLP_LOOK = 268452871
DIBUTTON_BASEBALLP_LEFT_LINK = 268485860
DIBUTTON_BASEBALLP_RIGHT_LINK = 268485868
DIBUTTON_BASEBALLP_FORWARD_LINK = 268518624
DIBUTTON_BASEBALLP_BACK_LINK = 268518632
DIBUTTON_BASEBALLP_DEVICE = 268453118
DIBUTTON_BASEBALLP_PAUSE = 268453116
DIVIRTUAL_SPORTS_BASEBALL_FIELD = 285212672
DIAXIS_BASEBALLF_LATERAL = 285245953
DIAXIS_BASEBALLF_MOVE = 285278722
DIBUTTON_BASEBALLF_NEAREST = 285213697
DIBUTTON_BASEBALLF_THROW1 = 285213698
DIBUTTON_BASEBALLF_THROW2 = 285213699
DIBUTTON_BASEBALLF_BURST = 285213700
DIBUTTON_BASEBALLF_JUMP = 285213701
DIBUTTON_BASEBALLF_DIVE = 285213702
DIBUTTON_BASEBALLF_MENU = 285213949
DIBUTTON_BASEBALLF_SHIFTIN = 285230087
DIBUTTON_BASEBALLF_SHIFTOUT = 285230088
DIBUTTON_BASEBALLF_AIM_LEFT_LINK = 285263076
DIBUTTON_BASEBALLF_AIM_RIGHT_LINK = 285263084
DIBUTTON_BASEBALLF_FORWARD_LINK = 285295840
DIBUTTON_BASEBALLF_BACK_LINK = 285295848
DIBUTTON_BASEBALLF_DEVICE = 285230334
DIBUTTON_BASEBALLF_PAUSE = 285230332
DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE = 301989888
DIAXIS_BBALLO_LATERAL = 302023169
DIAXIS_BBALLO_MOVE = 302055938
DIBUTTON_BBALLO_SHOOT = 301990913
DIBUTTON_BBALLO_DUNK = 301990914
DIBUTTON_BBALLO_PASS = 301990915
DIBUTTON_BBALLO_FAKE = 301990916
DIBUTTON_BBALLO_SPECIAL = 301990917
DIBUTTON_BBALLO_PLAYER = 301990918
DIBUTTON_BBALLO_BURST = 301990919
DIBUTTON_BBALLO_CALL = 301990920
DIBUTTON_BBALLO_MENU = 301991165
DIHATSWITCH_BBALLO_GLANCE = 302007809
DIBUTTON_BBALLO_SCREEN = 302007305
DIBUTTON_BBALLO_PLAY = 302007306
DIBUTTON_BBALLO_JAB = 302007307
DIBUTTON_BBALLO_POST = 302007308
DIBUTTON_BBALLO_TIMEOUT = 302007309
DIBUTTON_BBALLO_SUBSTITUTE = 302007310
DIBUTTON_BBALLO_LEFT_LINK = 302040292
DIBUTTON_BBALLO_RIGHT_LINK = 302040300
DIBUTTON_BBALLO_FORWARD_LINK = 302073056
DIBUTTON_BBALLO_BACK_LINK = 302073064
DIBUTTON_BBALLO_DEVICE = 302007550
DIBUTTON_BBALLO_PAUSE = 302007548
DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE = 318767104
DIAXIS_BBALLD_LATERAL = 318800385
DIAXIS_BBALLD_MOVE = 318833154
DIBUTTON_BBALLD_JUMP = 318768129
DIBUTTON_BBALLD_STEAL = 318768130
DIBUTTON_BBALLD_FAKE = 318768131
DIBUTTON_BBALLD_SPECIAL = 318768132
DIBUTTON_BBALLD_PLAYER = 318768133
DIBUTTON_BBALLD_BURST = 318768134
DIBUTTON_BBALLD_PLAY = 318768135
DIBUTTON_BBALLD_MENU = 318768381
DIHATSWITCH_BBALLD_GLANCE = 318785025
DIBUTTON_BBALLD_TIMEOUT = 318784520
DIBUTTON_BBALLD_SUBSTITUTE = 318784521
DIBUTTON_BBALLD_LEFT_LINK = 318817508
DIBUTTON_BBALLD_RIGHT_LINK = 318817516
DIBUTTON_BBALLD_FORWARD_LINK = 318850272
DIBUTTON_BBALLD_BACK_LINK = 318850280
DIBUTTON_BBALLD_DEVICE = 318784766
DIBUTTON_BBALLD_PAUSE = 318784764
DIVIRTUAL_SPORTS_FOOTBALL_FIELD = 335544320
DIBUTTON_FOOTBALLP_PLAY = 335545345
DIBUTTON_FOOTBALLP_SELECT = 335545346
DIBUTTON_FOOTBALLP_HELP = 335545347
DIBUTTON_FOOTBALLP_MENU = 335545597
DIBUTTON_FOOTBALLP_DEVICE = 335561982
DIBUTTON_FOOTBALLP_PAUSE = 335561980
DIVIRTUAL_SPORTS_FOOTBALL_QBCK = 352321536
DIAXIS_FOOTBALLQ_LATERAL = 352354817
DIAXIS_FOOTBALLQ_MOVE = 352387586
DIBUTTON_FOOTBALLQ_SELECT = 352322561
DIBUTTON_FOOTBALLQ_SNAP = 352322562
DIBUTTON_FOOTBALLQ_JUMP = 352322563
DIBUTTON_FOOTBALLQ_SLIDE = 352322564
DIBUTTON_FOOTBALLQ_PASS = 352322565
DIBUTTON_FOOTBALLQ_FAKE = 352322566
DIBUTTON_FOOTBALLQ_MENU = 352322813
DIBUTTON_FOOTBALLQ_FAKESNAP = 352338951
DIBUTTON_FOOTBALLQ_MOTION = 352338952
DIBUTTON_FOOTBALLQ_AUDIBLE = 352338953
DIBUTTON_FOOTBALLQ_LEFT_LINK = 352371940
DIBUTTON_FOOTBALLQ_RIGHT_LINK = 352371948
DIBUTTON_FOOTBALLQ_FORWARD_LINK = 352404704
DIBUTTON_FOOTBALLQ_BACK_LINK = 352404712
DIBUTTON_FOOTBALLQ_DEVICE = 352339198
DIBUTTON_FOOTBALLQ_PAUSE = 352339196
DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE = 369098752
DIAXIS_FOOTBALLO_LATERAL = 369132033
DIAXIS_FOOTBALLO_MOVE = 369164802
DIBUTTON_FOOTBALLO_JUMP = 369099777
DIBUTTON_FOOTBALLO_LEFTARM = 369099778
DIBUTTON_FOOTBALLO_RIGHTARM = 369099779
DIBUTTON_FOOTBALLO_THROW = 369099780
DIBUTTON_FOOTBALLO_SPIN = 369099781
DIBUTTON_FOOTBALLO_MENU = 369100029
DIBUTTON_FOOTBALLO_JUKE = 369116166
DIBUTTON_FOOTBALLO_SHOULDER = 369116167
DIBUTTON_FOOTBALLO_TURBO = 369116168
DIBUTTON_FOOTBALLO_DIVE = 369116169
DIBUTTON_FOOTBALLO_ZOOM = 369116170
DIBUTTON_FOOTBALLO_SUBSTITUTE = 369116171
DIBUTTON_FOOTBALLO_LEFT_LINK = 369149156
DIBUTTON_FOOTBALLO_RIGHT_LINK = 369149164
DIBUTTON_FOOTBALLO_FORWARD_LINK = 369181920
DIBUTTON_FOOTBALLO_BACK_LINK = 369181928
DIBUTTON_FOOTBALLO_DEVICE = 369116414
DIBUTTON_FOOTBALLO_PAUSE = 369116412
DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE = 385875968
DIAXIS_FOOTBALLD_LATERAL = 385909249
DIAXIS_FOOTBALLD_MOVE = 385942018
DIBUTTON_FOOTBALLD_PLAY = 385876993
DIBUTTON_FOOTBALLD_SELECT = 385876994
DIBUTTON_FOOTBALLD_JUMP = 385876995
DIBUTTON_FOOTBALLD_TACKLE = 385876996
DIBUTTON_FOOTBALLD_FAKE = 385876997
DIBUTTON_FOOTBALLD_SUPERTACKLE = 385876998
DIBUTTON_FOOTBALLD_MENU = 385877245
DIBUTTON_FOOTBALLD_SPIN = 385893383
DIBUTTON_FOOTBALLD_SWIM = 385893384
DIBUTTON_FOOTBALLD_BULLRUSH = 385893385
DIBUTTON_FOOTBALLD_RIP = 385893386
DIBUTTON_FOOTBALLD_AUDIBLE = 385893387
DIBUTTON_FOOTBALLD_ZOOM = 385893388
DIBUTTON_FOOTBALLD_SUBSTITUTE = 385893389
DIBUTTON_FOOTBALLD_LEFT_LINK = 385926372
DIBUTTON_FOOTBALLD_RIGHT_LINK = 385926380
DIBUTTON_FOOTBALLD_FORWARD_LINK = 385959136
DIBUTTON_FOOTBALLD_BACK_LINK = 385959144
DIBUTTON_FOOTBALLD_DEVICE = 385893630
DIBUTTON_FOOTBALLD_PAUSE = 385893628
DIVIRTUAL_SPORTS_GOLF = 402653184
DIAXIS_GOLF_LATERAL = 402686465
DIAXIS_GOLF_MOVE = 402719234
DIBUTTON_GOLF_SWING = 402654209
DIBUTTON_GOLF_SELECT = 402654210
DIBUTTON_GOLF_UP = 402654211
DIBUTTON_GOLF_DOWN = 402654212
DIBUTTON_GOLF_TERRAIN = 402654213
DIBUTTON_GOLF_FLYBY = 402654214
DIBUTTON_GOLF_MENU = 402654461
DIHATSWITCH_GOLF_SCROLL = 402671105
DIBUTTON_GOLF_ZOOM = 402670599
DIBUTTON_GOLF_TIMEOUT = 402670600
DIBUTTON_GOLF_SUBSTITUTE = 402670601
DIBUTTON_GOLF_LEFT_LINK = 402703588
DIBUTTON_GOLF_RIGHT_LINK = 402703596
DIBUTTON_GOLF_FORWARD_LINK = 402736352
DIBUTTON_GOLF_BACK_LINK = 402736360
DIBUTTON_GOLF_DEVICE = 402670846
DIBUTTON_GOLF_PAUSE = 402670844
DIVIRTUAL_SPORTS_HOCKEY_OFFENSE = 419430400
DIAXIS_HOCKEYO_LATERAL = 419463681
DIAXIS_HOCKEYO_MOVE = 419496450
DIBUTTON_HOCKEYO_SHOOT = 419431425
DIBUTTON_HOCKEYO_PASS = 419431426
DIBUTTON_HOCKEYO_BURST = 419431427
DIBUTTON_HOCKEYO_SPECIAL = 419431428
DIBUTTON_HOCKEYO_FAKE = 419431429
DIBUTTON_HOCKEYO_MENU = 419431677
DIHATSWITCH_HOCKEYO_SCROLL = 419448321
DIBUTTON_HOCKEYO_ZOOM = 419447814
DIBUTTON_HOCKEYO_STRATEGY = 419447815
DIBUTTON_HOCKEYO_TIMEOUT = 419447816
DIBUTTON_HOCKEYO_SUBSTITUTE = 419447817
DIBUTTON_HOCKEYO_LEFT_LINK = 419480804
DIBUTTON_HOCKEYO_RIGHT_LINK = 419480812
DIBUTTON_HOCKEYO_FORWARD_LINK = 419513568
DIBUTTON_HOCKEYO_BACK_LINK = 419513576
DIBUTTON_HOCKEYO_DEVICE = 419448062
DIBUTTON_HOCKEYO_PAUSE = 419448060
DIVIRTUAL_SPORTS_HOCKEY_DEFENSE = 436207616
DIAXIS_HOCKEYD_LATERAL = 436240897
DIAXIS_HOCKEYD_MOVE = 436273666
DIBUTTON_HOCKEYD_PLAYER = 436208641
DIBUTTON_HOCKEYD_STEAL = 436208642
DIBUTTON_HOCKEYD_BURST = 436208643
DIBUTTON_HOCKEYD_BLOCK = 436208644
DIBUTTON_HOCKEYD_FAKE = 436208645
DIBUTTON_HOCKEYD_MENU = 436208893
DIHATSWITCH_HOCKEYD_SCROLL = 436225537
DIBUTTON_HOCKEYD_ZOOM = 436225030
DIBUTTON_HOCKEYD_STRATEGY = 436225031
DIBUTTON_HOCKEYD_TIMEOUT = 436225032
DIBUTTON_HOCKEYD_SUBSTITUTE = 436225033
DIBUTTON_HOCKEYD_LEFT_LINK = 436258020
DIBUTTON_HOCKEYD_RIGHT_LINK = 436258028
DIBUTTON_HOCKEYD_FORWARD_LINK = 436290784
DIBUTTON_HOCKEYD_BACK_LINK = 436290792
DIBUTTON_HOCKEYD_DEVICE = 436225278
DIBUTTON_HOCKEYD_PAUSE = 436225276
DIVIRTUAL_SPORTS_HOCKEY_GOALIE = 452984832
DIAXIS_HOCKEYG_LATERAL = 453018113
DIAXIS_HOCKEYG_MOVE = 453050882
DIBUTTON_HOCKEYG_PASS = 452985857
DIBUTTON_HOCKEYG_POKE = 452985858
DIBUTTON_HOCKEYG_STEAL = 452985859
DIBUTTON_HOCKEYG_BLOCK = 452985860
DIBUTTON_HOCKEYG_MENU = 452986109
DIHATSWITCH_HOCKEYG_SCROLL = 453002753
DIBUTTON_HOCKEYG_ZOOM = 453002245
DIBUTTON_HOCKEYG_STRATEGY = 453002246
DIBUTTON_HOCKEYG_TIMEOUT = 453002247
DIBUTTON_HOCKEYG_SUBSTITUTE = 453002248
DIBUTTON_HOCKEYG_LEFT_LINK = 453035236
DIBUTTON_HOCKEYG_RIGHT_LINK = 453035244
DIBUTTON_HOCKEYG_FORWARD_LINK = 453068000
DIBUTTON_HOCKEYG_BACK_LINK = 453068008
DIBUTTON_HOCKEYG_DEVICE = 453002494
DIBUTTON_HOCKEYG_PAUSE = 453002492
DIVIRTUAL_SPORTS_BIKING_MOUNTAIN = 469762048
DIAXIS_BIKINGM_TURN = 469795329
DIAXIS_BIKINGM_PEDAL = 469828098
DIBUTTON_BIKINGM_JUMP = 469763073
DIBUTTON_BIKINGM_CAMERA = 469763074
DIBUTTON_BIKINGM_SPECIAL1 = 469763075
DIBUTTON_BIKINGM_SELECT = 469763076
DIBUTTON_BIKINGM_SPECIAL2 = 469763077
DIBUTTON_BIKINGM_MENU = 469763325
DIHATSWITCH_BIKINGM_SCROLL = 469779969
DIBUTTON_BIKINGM_ZOOM = 469779462
DIAXIS_BIKINGM_BRAKE = 470041091
DIBUTTON_BIKINGM_LEFT_LINK = 469812452
DIBUTTON_BIKINGM_RIGHT_LINK = 469812460
DIBUTTON_BIKINGM_FASTER_LINK = 469845216
DIBUTTON_BIKINGM_SLOWER_LINK = 469845224
DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK = 470041832
DIBUTTON_BIKINGM_DEVICE = 469779710
DIBUTTON_BIKINGM_PAUSE = 469779708
DIVIRTUAL_SPORTS_SKIING = 486539264
DIAXIS_SKIING_TURN = 486572545
DIAXIS_SKIING_SPEED = 486605314
DIBUTTON_SKIING_JUMP = 486540289
DIBUTTON_SKIING_CROUCH = 486540290
DIBUTTON_SKIING_CAMERA = 486540291
DIBUTTON_SKIING_SPECIAL1 = 486540292
DIBUTTON_SKIING_SELECT = 486540293
DIBUTTON_SKIING_SPECIAL2 = 486540294
DIBUTTON_SKIING_MENU = 486540541
DIHATSWITCH_SKIING_GLANCE = 486557185
DIBUTTON_SKIING_ZOOM = 486556679
DIBUTTON_SKIING_LEFT_LINK = 486589668
DIBUTTON_SKIING_RIGHT_LINK = 486589676
DIBUTTON_SKIING_FASTER_LINK = 486622432
DIBUTTON_SKIING_SLOWER_LINK = 486622440
DIBUTTON_SKIING_DEVICE = 486556926
DIBUTTON_SKIING_PAUSE = 486556924
DIVIRTUAL_SPORTS_SOCCER_OFFENSE = 503316480
DIAXIS_SOCCERO_LATERAL = 503349761
DIAXIS_SOCCERO_MOVE = 503382530
DIAXIS_SOCCERO_BEND = 503415299
DIBUTTON_SOCCERO_SHOOT = 503317505
DIBUTTON_SOCCERO_PASS = 503317506
DIBUTTON_SOCCERO_FAKE = 503317507
DIBUTTON_SOCCERO_PLAYER = 503317508
DIBUTTON_SOCCERO_SPECIAL1 = 503317509
DIBUTTON_SOCCERO_SELECT = 503317510
DIBUTTON_SOCCERO_MENU = 503317757
DIHATSWITCH_SOCCERO_GLANCE = 503334401
DIBUTTON_SOCCERO_SUBSTITUTE = 503333895
DIBUTTON_SOCCERO_SHOOTLOW = 503333896
DIBUTTON_SOCCERO_SHOOTHIGH = 503333897
DIBUTTON_SOCCERO_PASSTHRU = 503333898
DIBUTTON_SOCCERO_SPRINT = 503333899
DIBUTTON_SOCCERO_CONTROL = 503333900
DIBUTTON_SOCCERO_HEAD = 503333901
DIBUTTON_SOCCERO_LEFT_LINK = 503366884
DIBUTTON_SOCCERO_RIGHT_LINK = 503366892
DIBUTTON_SOCCERO_FORWARD_LINK = 503399648
DIBUTTON_SOCCERO_BACK_LINK = 503399656
DIBUTTON_SOCCERO_DEVICE = 503334142
DIBUTTON_SOCCERO_PAUSE = 503334140
DIVIRTUAL_SPORTS_SOCCER_DEFENSE = 520093696
DIAXIS_SOCCERD_LATERAL = 520126977
DIAXIS_SOCCERD_MOVE = 520159746
DIBUTTON_SOCCERD_BLOCK = 520094721
DIBUTTON_SOCCERD_STEAL = 520094722
DIBUTTON_SOCCERD_FAKE = 520094723
DIBUTTON_SOCCERD_PLAYER = 520094724
DIBUTTON_SOCCERD_SPECIAL = 520094725
DIBUTTON_SOCCERD_SELECT = 520094726
DIBUTTON_SOCCERD_SLIDE = 520094727
DIBUTTON_SOCCERD_MENU = 520094973
DIHATSWITCH_SOCCERD_GLANCE = 520111617
DIBUTTON_SOCCERD_FOUL = 520111112
DIBUTTON_SOCCERD_HEAD = 520111113
DIBUTTON_SOCCERD_CLEAR = 520111114
DIBUTTON_SOCCERD_GOALIECHARGE = 520111115
DIBUTTON_SOCCERD_SUBSTITUTE = 520111116
DIBUTTON_SOCCERD_LEFT_LINK = 520144100
DIBUTTON_SOCCERD_RIGHT_LINK = 520144108
DIBUTTON_SOCCERD_FORWARD_LINK = 520176864
DIBUTTON_SOCCERD_BACK_LINK = 520176872
DIBUTTON_SOCCERD_DEVICE = 520111358
DIBUTTON_SOCCERD_PAUSE = 520111356
DIVIRTUAL_SPORTS_RACQUET = 536870912
DIAXIS_RACQUET_LATERAL = 536904193
DIAXIS_RACQUET_MOVE = 536936962
DIBUTTON_RACQUET_SWING = 536871937
DIBUTTON_RACQUET_BACKSWING = 536871938
DIBUTTON_RACQUET_SMASH = 536871939
DIBUTTON_RACQUET_SPECIAL = 536871940
DIBUTTON_RACQUET_SELECT = 536871941
DIBUTTON_RACQUET_MENU = 536872189
DIHATSWITCH_RACQUET_GLANCE = 536888833
DIBUTTON_RACQUET_TIMEOUT = 536888326
DIBUTTON_RACQUET_SUBSTITUTE = 536888327
DIBUTTON_RACQUET_LEFT_LINK = 536921316
DIBUTTON_RACQUET_RIGHT_LINK = 536921324
DIBUTTON_RACQUET_FORWARD_LINK = 536954080
DIBUTTON_RACQUET_BACK_LINK = 536954088
DIBUTTON_RACQUET_DEVICE = 536888574
DIBUTTON_RACQUET_PAUSE = 536888572
DIVIRTUAL_ARCADE_SIDE2SIDE = 553648128
DIAXIS_ARCADES_LATERAL = 553681409
DIAXIS_ARCADES_MOVE = 553714178
DIBUTTON_ARCADES_THROW = 553649153
DIBUTTON_ARCADES_CARRY = 553649154
DIBUTTON_ARCADES_ATTACK = 553649155
DIBUTTON_ARCADES_SPECIAL = 553649156
DIBUTTON_ARCADES_SELECT = 553649157
DIBUTTON_ARCADES_MENU = 553649405
DIHATSWITCH_ARCADES_VIEW = 553666049
DIBUTTON_ARCADES_LEFT_LINK = 553698532
DIBUTTON_ARCADES_RIGHT_LINK = 553698540
DIBUTTON_ARCADES_FORWARD_LINK = 553731296
DIBUTTON_ARCADES_BACK_LINK = 553731304
DIBUTTON_ARCADES_VIEW_UP_LINK = 554157280
DIBUTTON_ARCADES_VIEW_DOWN_LINK = 554157288
DIBUTTON_ARCADES_VIEW_LEFT_LINK = 554157284
DIBUTTON_ARCADES_VIEW_RIGHT_LINK = 554157292
DIBUTTON_ARCADES_DEVICE = 553665790
DIBUTTON_ARCADES_PAUSE = 553665788
DIVIRTUAL_ARCADE_PLATFORM = 570425344
DIAXIS_ARCADEP_LATERAL = 570458625
DIAXIS_ARCADEP_MOVE = 570491394
DIBUTTON_ARCADEP_JUMP = 570426369
DIBUTTON_ARCADEP_FIRE = 570426370
DIBUTTON_ARCADEP_CROUCH = 570426371
DIBUTTON_ARCADEP_SPECIAL = 570426372
DIBUTTON_ARCADEP_SELECT = 570426373
DIBUTTON_ARCADEP_MENU = 570426621
DIHATSWITCH_ARCADEP_VIEW = 570443265
DIBUTTON_ARCADEP_FIRESECONDARY = 570442758
DIBUTTON_ARCADEP_LEFT_LINK = 570475748
DIBUTTON_ARCADEP_RIGHT_LINK = 570475756
DIBUTTON_ARCADEP_FORWARD_LINK = 570508512
DIBUTTON_ARCADEP_BACK_LINK = 570508520
DIBUTTON_ARCADEP_VIEW_UP_LINK = 570934496
DIBUTTON_ARCADEP_VIEW_DOWN_LINK = 570934504
DIBUTTON_ARCADEP_VIEW_LEFT_LINK = 570934500
DIBUTTON_ARCADEP_VIEW_RIGHT_LINK = 570934508
DIBUTTON_ARCADEP_DEVICE = 570443006
DIBUTTON_ARCADEP_PAUSE = 570443004
DIVIRTUAL_CAD_2DCONTROL = 587202560
DIAXIS_2DCONTROL_LATERAL = 587235841
DIAXIS_2DCONTROL_MOVE = 587268610
DIAXIS_2DCONTROL_INOUT = 587301379
DIBUTTON_2DCONTROL_SELECT = 587203585
DIBUTTON_2DCONTROL_SPECIAL1 = 587203586
DIBUTTON_2DCONTROL_SPECIAL = 587203587
DIBUTTON_2DCONTROL_SPECIAL2 = 587203588
DIBUTTON_2DCONTROL_MENU = 587203837
DIHATSWITCH_2DCONTROL_HATSWITCH = 587220481
DIAXIS_2DCONTROL_ROTATEZ = 587350532
DIBUTTON_2DCONTROL_DISPLAY = 587219973
DIBUTTON_2DCONTROL_DEVICE = 587220222
DIBUTTON_2DCONTROL_PAUSE = 587220220
DIVIRTUAL_CAD_3DCONTROL = 603979776
DIAXIS_3DCONTROL_LATERAL = 604013057
DIAXIS_3DCONTROL_MOVE = 604045826
DIAXIS_3DCONTROL_INOUT = 604078595
DIBUTTON_3DCONTROL_SELECT = 603980801
DIBUTTON_3DCONTROL_SPECIAL1 = 603980802
DIBUTTON_3DCONTROL_SPECIAL = 603980803
DIBUTTON_3DCONTROL_SPECIAL2 = 603980804
DIBUTTON_3DCONTROL_MENU = 603981053
DIHATSWITCH_3DCONTROL_HATSWITCH = 603997697
DIAXIS_3DCONTROL_ROTATEX = 604193284
DIAXIS_3DCONTROL_ROTATEY = 604160517
DIAXIS_3DCONTROL_ROTATEZ = 604127750
DIBUTTON_3DCONTROL_DISPLAY = 603997189
DIBUTTON_3DCONTROL_DEVICE = 603997438
DIBUTTON_3DCONTROL_PAUSE = 603997436
DIVIRTUAL_CAD_FLYBY = 620756992
DIAXIS_CADF_LATERAL = 620790273
DIAXIS_CADF_MOVE = 620823042
DIAXIS_CADF_INOUT = 620855811
DIBUTTON_CADF_SELECT = 620758017
DIBUTTON_CADF_SPECIAL1 = 620758018
DIBUTTON_CADF_SPECIAL = 620758019
DIBUTTON_CADF_SPECIAL2 = 620758020
DIBUTTON_CADF_MENU = 620758269
DIHATSWITCH_CADF_HATSWITCH = 620774913
DIAXIS_CADF_ROTATEX = 620970500
DIAXIS_CADF_ROTATEY = 620937733
DIAXIS_CADF_ROTATEZ = 620904966
DIBUTTON_CADF_DISPLAY = 620774405
DIBUTTON_CADF_DEVICE = 620774654
DIBUTTON_CADF_PAUSE = 620774652
DIVIRTUAL_CAD_MODEL = 637534208
DIAXIS_CADM_LATERAL = 637567489
DIAXIS_CADM_MOVE = 637600258
DIAXIS_CADM_INOUT = 637633027
DIBUTTON_CADM_SELECT = 637535233
DIBUTTON_CADM_SPECIAL1 = 637535234
DIBUTTON_CADM_SPECIAL = 637535235
DIBUTTON_CADM_SPECIAL2 = 637535236
DIBUTTON_CADM_MENU = 637535485
DIHATSWITCH_CADM_HATSWITCH = 637552129
DIAXIS_CADM_ROTATEX = 637747716
DIAXIS_CADM_ROTATEY = 637714949
DIAXIS_CADM_ROTATEZ = 637682182
DIBUTTON_CADM_DISPLAY = 637551621
DIBUTTON_CADM_DEVICE = 637551870
DIBUTTON_CADM_PAUSE = 637551868
DIVIRTUAL_REMOTE_CONTROL = 654311424
DIAXIS_REMOTE_SLIDER = 654639617
DIBUTTON_REMOTE_MUTE = 654312449
DIBUTTON_REMOTE_SELECT = 654312450
DIBUTTON_REMOTE_PLAY = 654320643
DIBUTTON_REMOTE_CUE = 654320644
DIBUTTON_REMOTE_REVIEW = 654320645
DIBUTTON_REMOTE_CHANGE = 654320646
DIBUTTON_REMOTE_RECORD = 654320647
DIBUTTON_REMOTE_MENU = 654312701
DIAXIS_REMOTE_SLIDER2 = 654656002
DIBUTTON_REMOTE_TV = 654334984
DIBUTTON_REMOTE_CABLE = 654334985
DIBUTTON_REMOTE_CD = 654334986
DIBUTTON_REMOTE_VCR = 654334987
DIBUTTON_REMOTE_TUNER = 654334988
DIBUTTON_REMOTE_DVD = 654334989
DIBUTTON_REMOTE_ADJUST = 654334990
DIBUTTON_REMOTE_DIGIT0 = 654332943
DIBUTTON_REMOTE_DIGIT1 = 654332944
DIBUTTON_REMOTE_DIGIT2 = 654332945
DIBUTTON_REMOTE_DIGIT3 = 654332946
DIBUTTON_REMOTE_DIGIT4 = 654332947
DIBUTTON_REMOTE_DIGIT5 = 654332948
DIBUTTON_REMOTE_DIGIT6 = 654332949
DIBUTTON_REMOTE_DIGIT7 = 654332950
DIBUTTON_REMOTE_DIGIT8 = 654332951
DIBUTTON_REMOTE_DIGIT9 = 654332952
DIBUTTON_REMOTE_DEVICE = 654329086
DIBUTTON_REMOTE_PAUSE = 654329084
DIVIRTUAL_BROWSER_CONTROL = 671088640
DIAXIS_BROWSER_LATERAL = 671121921
DIAXIS_BROWSER_MOVE = 671154690
DIBUTTON_BROWSER_SELECT = 671089665
DIAXIS_BROWSER_VIEW = 671187459
DIBUTTON_BROWSER_REFRESH = 671089666
DIBUTTON_BROWSER_MENU = 671089917
DIBUTTON_BROWSER_SEARCH = 671106051
DIBUTTON_BROWSER_STOP = 671106052
DIBUTTON_BROWSER_HOME = 671106053
DIBUTTON_BROWSER_FAVORITES = 671106054
DIBUTTON_BROWSER_NEXT = 671106055
DIBUTTON_BROWSER_PREVIOUS = 671106056
DIBUTTON_BROWSER_HISTORY = 671106057
DIBUTTON_BROWSER_PRINT = 671106058
DIBUTTON_BROWSER_DEVICE = 671106302
DIBUTTON_BROWSER_PAUSE = 671106300
DIVIRTUAL_DRIVING_MECHA = 687865856
DIAXIS_MECHA_STEER = 687899137
DIAXIS_MECHA_TORSO = 687931906
DIAXIS_MECHA_ROTATE = 687997443
DIAXIS_MECHA_THROTTLE = 688095748
DIBUTTON_MECHA_FIRE = 687866881
DIBUTTON_MECHA_WEAPONS = 687866882
DIBUTTON_MECHA_TARGET = 687866883
DIBUTTON_MECHA_REVERSE = 687866884
DIBUTTON_MECHA_ZOOM = 687866885
DIBUTTON_MECHA_JUMP = 687866886
DIBUTTON_MECHA_MENU = 687867133
DIBUTTON_MECHA_CENTER = 687883271
DIHATSWITCH_MECHA_GLANCE = 687883777
DIBUTTON_MECHA_VIEW = 687883272
DIBUTTON_MECHA_FIRESECONDARY = 687883273
DIBUTTON_MECHA_LEFT_LINK = 687916260
DIBUTTON_MECHA_RIGHT_LINK = 687916268
DIBUTTON_MECHA_FORWARD_LINK = 687949024
DIBUTTON_MECHA_BACK_LINK = 687949032
DIBUTTON_MECHA_ROTATE_LEFT_LINK = 688014564
DIBUTTON_MECHA_ROTATE_RIGHT_LINK = 688014572
DIBUTTON_MECHA_FASTER_LINK = 688112864
DIBUTTON_MECHA_SLOWER_LINK = 688112872
DIBUTTON_MECHA_DEVICE = 687883518
DIBUTTON_MECHA_PAUSE = 687883516
DIAXIS_ANY_X_1 = 4278239745
DIAXIS_ANY_X_2 = 4278239746
DIAXIS_ANY_Y_1 = 4278272513
DIAXIS_ANY_Y_2 = 4278272514
DIAXIS_ANY_Z_1 = 4278305281
DIAXIS_ANY_Z_2 = 4278305282
DIAXIS_ANY_R_1 = 4278338049
DIAXIS_ANY_R_2 = 4278338050
DIAXIS_ANY_U_1 = 4278370817
DIAXIS_ANY_U_2 = 4278370818
DIAXIS_ANY_V_1 = 4278403585
DIAXIS_ANY_V_2 = 4278403586
DIAXIS_ANY_A_1 = 4278436353
DIAXIS_ANY_A_2 = 4278436354
DIAXIS_ANY_B_1 = 4278469121
DIAXIS_ANY_B_2 = 4278469122
DIAXIS_ANY_C_1 = 4278501889
DIAXIS_ANY_C_2 = 4278501890
DIAXIS_ANY_S_1 = 4278534657
DIAXIS_ANY_S_2 = 4278534658
DIAXIS_ANY_1 = 4278206977
DIAXIS_ANY_2 = 4278206978
DIAXIS_ANY_3 = 4278206979
DIAXIS_ANY_4 = 4278206980
DIPOV_ANY_1 = 4278208001
DIPOV_ANY_2 = 4278208002
DIPOV_ANY_3 = 4278208003
DIPOV_ANY_4 = 4278208004
JOY_PASSDRIVERDATA = 268435456
JOY_HWS_ISHEADTRACKER = 33554432
JOY_HWS_ISGAMEPORTDRIVER = 67108864
JOY_HWS_ISANALOGPORTDRIVER = 134217728
JOY_HWS_AUTOLOAD = 268435456
JOY_HWS_NODEVNODE = 536870912
JOY_HWS_ISGAMEPORTBUS = -2147483648
JOY_HWS_GAMEPORTBUSBUSY = 1
JOY_US_VOLATILE = 8
JOY_OEMPOLL_PASSDRIVERDATA = 7
BUTTON_BIT_POWER = 1
BUTTON_BIT_WINDOWS = 2
BUTTON_BIT_VOLUMEUP = 4
BUTTON_BIT_VOLUMEDOWN = 8
BUTTON_BIT_ROTATION_LOCK = 16
BUTTON_BIT_BACK = 32
BUTTON_BIT_SEARCH = 64
BUTTON_BIT_CAMERAFOCUS = 128
BUTTON_BIT_CAMERASHUTTER = 256
BUTTON_BIT_RINGERTOGGLE = 512
BUTTON_BIT_HEADSET = 1024
BUTTON_BIT_HWKBDEPLOY = 2048
BUTTON_BIT_CAMERALENS = 4096
BUTTON_BIT_OEMCUSTOM = 8192
BUTTON_BIT_OEMCUSTOM2 = 16384
BUTTON_BIT_OEMCUSTOM3 = 32768
BUTTON_BIT_ALLBUTTONSMASK = 16383
IOCTL_BUTTON_SET_ENABLED_ON_IDLE = 721576
IOCTL_BUTTON_GET_ENABLED_ON_IDLE = 721580
def _define_DICONSTANTFORCE_head():
    class DICONSTANTFORCE(Structure):
        pass
    return DICONSTANTFORCE
def _define_DICONSTANTFORCE():
    DICONSTANTFORCE = win32more.Devices.HumanInterfaceDevice.DICONSTANTFORCE_head
    DICONSTANTFORCE._fields_ = [
        ("lMagnitude", Int32),
    ]
    return DICONSTANTFORCE
def _define_DIRAMPFORCE_head():
    class DIRAMPFORCE(Structure):
        pass
    return DIRAMPFORCE
def _define_DIRAMPFORCE():
    DIRAMPFORCE = win32more.Devices.HumanInterfaceDevice.DIRAMPFORCE_head
    DIRAMPFORCE._fields_ = [
        ("lStart", Int32),
        ("lEnd", Int32),
    ]
    return DIRAMPFORCE
def _define_DIPERIODIC_head():
    class DIPERIODIC(Structure):
        pass
    return DIPERIODIC
def _define_DIPERIODIC():
    DIPERIODIC = win32more.Devices.HumanInterfaceDevice.DIPERIODIC_head
    DIPERIODIC._fields_ = [
        ("dwMagnitude", UInt32),
        ("lOffset", Int32),
        ("dwPhase", UInt32),
        ("dwPeriod", UInt32),
    ]
    return DIPERIODIC
def _define_DICONDITION_head():
    class DICONDITION(Structure):
        pass
    return DICONDITION
def _define_DICONDITION():
    DICONDITION = win32more.Devices.HumanInterfaceDevice.DICONDITION_head
    DICONDITION._fields_ = [
        ("lOffset", Int32),
        ("lPositiveCoefficient", Int32),
        ("lNegativeCoefficient", Int32),
        ("dwPositiveSaturation", UInt32),
        ("dwNegativeSaturation", UInt32),
        ("lDeadBand", Int32),
    ]
    return DICONDITION
def _define_DICUSTOMFORCE_head():
    class DICUSTOMFORCE(Structure):
        pass
    return DICUSTOMFORCE
def _define_DICUSTOMFORCE():
    DICUSTOMFORCE = win32more.Devices.HumanInterfaceDevice.DICUSTOMFORCE_head
    DICUSTOMFORCE._fields_ = [
        ("cChannels", UInt32),
        ("dwSamplePeriod", UInt32),
        ("cSamples", UInt32),
        ("rglForceData", POINTER(Int32)),
    ]
    return DICUSTOMFORCE
def _define_DIENVELOPE_head():
    class DIENVELOPE(Structure):
        pass
    return DIENVELOPE
def _define_DIENVELOPE():
    DIENVELOPE = win32more.Devices.HumanInterfaceDevice.DIENVELOPE_head
    DIENVELOPE._fields_ = [
        ("dwSize", UInt32),
        ("dwAttackLevel", UInt32),
        ("dwAttackTime", UInt32),
        ("dwFadeLevel", UInt32),
        ("dwFadeTime", UInt32),
    ]
    return DIENVELOPE
def _define_DIEFFECT_DX5_head():
    class DIEFFECT_DX5(Structure):
        pass
    return DIEFFECT_DX5
def _define_DIEFFECT_DX5():
    DIEFFECT_DX5 = win32more.Devices.HumanInterfaceDevice.DIEFFECT_DX5_head
    DIEFFECT_DX5._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwDuration", UInt32),
        ("dwSamplePeriod", UInt32),
        ("dwGain", UInt32),
        ("dwTriggerButton", UInt32),
        ("dwTriggerRepeatInterval", UInt32),
        ("cAxes", UInt32),
        ("rgdwAxes", POINTER(UInt32)),
        ("rglDirection", POINTER(Int32)),
        ("lpEnvelope", POINTER(win32more.Devices.HumanInterfaceDevice.DIENVELOPE_head)),
        ("cbTypeSpecificParams", UInt32),
        ("lpvTypeSpecificParams", c_void_p),
    ]
    return DIEFFECT_DX5
def _define_DIEFFECT_head():
    class DIEFFECT(Structure):
        pass
    return DIEFFECT
def _define_DIEFFECT():
    DIEFFECT = win32more.Devices.HumanInterfaceDevice.DIEFFECT_head
    DIEFFECT._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwDuration", UInt32),
        ("dwSamplePeriod", UInt32),
        ("dwGain", UInt32),
        ("dwTriggerButton", UInt32),
        ("dwTriggerRepeatInterval", UInt32),
        ("cAxes", UInt32),
        ("rgdwAxes", POINTER(UInt32)),
        ("rglDirection", POINTER(Int32)),
        ("lpEnvelope", POINTER(win32more.Devices.HumanInterfaceDevice.DIENVELOPE_head)),
        ("cbTypeSpecificParams", UInt32),
        ("lpvTypeSpecificParams", c_void_p),
        ("dwStartDelay", UInt32),
    ]
    return DIEFFECT
def _define_DIFILEEFFECT_head():
    class DIFILEEFFECT(Structure):
        pass
    return DIFILEEFFECT
def _define_DIFILEEFFECT():
    DIFILEEFFECT = win32more.Devices.HumanInterfaceDevice.DIFILEEFFECT_head
    DIFILEEFFECT._fields_ = [
        ("dwSize", UInt32),
        ("GuidEffect", Guid),
        ("lpDiEffect", POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head)),
        ("szFriendlyName", win32more.Foundation.CHAR * 260),
    ]
    return DIFILEEFFECT
def _define_LPDIENUMEFFECTSINFILECALLBACK():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIFILEEFFECT_head),c_void_p, use_last_error=False)
def _define_DIEFFESCAPE_head():
    class DIEFFESCAPE(Structure):
        pass
    return DIEFFESCAPE
def _define_DIEFFESCAPE():
    DIEFFESCAPE = win32more.Devices.HumanInterfaceDevice.DIEFFESCAPE_head
    DIEFFESCAPE._fields_ = [
        ("dwSize", UInt32),
        ("dwCommand", UInt32),
        ("lpvInBuffer", c_void_p),
        ("cbInBuffer", UInt32),
        ("lpvOutBuffer", c_void_p),
        ("cbOutBuffer", UInt32),
    ]
    return DIEFFESCAPE
def _define_IDirectInputEffect_head():
    class IDirectInputEffect(win32more.System.Com.IUnknown_head):
        Guid = Guid('e7e1f7c0-88d2-11d0-9ad0-00a0c9a06e35')
    return IDirectInputEffect
def _define_IDirectInputEffect():
    IDirectInputEffect = win32more.Devices.HumanInterfaceDevice.IDirectInputEffect_head
    IDirectInputEffect.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32,POINTER(Guid), use_last_error=False)(3, 'Initialize', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputEffect.GetEffectGuid = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(4, 'GetEffectGuid', ((1, 'param0'),)))
    IDirectInputEffect.GetParameters = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head),UInt32, use_last_error=False)(5, 'GetParameters', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffect.SetParameters = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head),UInt32, use_last_error=False)(6, 'SetParameters', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffect.Start = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32, use_last_error=False)(7, 'Start', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffect.Stop = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(8, 'Stop', ()))
    IDirectInputEffect.GetEffectStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(9, 'GetEffectStatus', ((1, 'param0'),)))
    IDirectInputEffect.Download = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(10, 'Download', ()))
    IDirectInputEffect.Unload = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(11, 'Unload', ()))
    IDirectInputEffect.Escape = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFESCAPE_head), use_last_error=False)(12, 'Escape', ((1, 'param0'),)))
    return IDirectInputEffect
def _define_DIDEVCAPS_DX3_head():
    class DIDEVCAPS_DX3(Structure):
        pass
    return DIDEVCAPS_DX3
def _define_DIDEVCAPS_DX3():
    DIDEVCAPS_DX3 = win32more.Devices.HumanInterfaceDevice.DIDEVCAPS_DX3_head
    DIDEVCAPS_DX3._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwDevType", UInt32),
        ("dwAxes", UInt32),
        ("dwButtons", UInt32),
        ("dwPOVs", UInt32),
    ]
    return DIDEVCAPS_DX3
def _define_DIDEVCAPS_head():
    class DIDEVCAPS(Structure):
        pass
    return DIDEVCAPS
def _define_DIDEVCAPS():
    DIDEVCAPS = win32more.Devices.HumanInterfaceDevice.DIDEVCAPS_head
    DIDEVCAPS._fields_ = [
        ("dwSize", UInt32),
        ("dwFlags", UInt32),
        ("dwDevType", UInt32),
        ("dwAxes", UInt32),
        ("dwButtons", UInt32),
        ("dwPOVs", UInt32),
        ("dwFFSamplePeriod", UInt32),
        ("dwFFMinTimeResolution", UInt32),
        ("dwFirmwareRevision", UInt32),
        ("dwHardwareRevision", UInt32),
        ("dwFFDriverVersion", UInt32),
    ]
    return DIDEVCAPS
def _define_DIOBJECTDATAFORMAT_head():
    class DIOBJECTDATAFORMAT(Structure):
        pass
    return DIOBJECTDATAFORMAT
def _define_DIOBJECTDATAFORMAT():
    DIOBJECTDATAFORMAT = win32more.Devices.HumanInterfaceDevice.DIOBJECTDATAFORMAT_head
    DIOBJECTDATAFORMAT._fields_ = [
        ("pguid", POINTER(Guid)),
        ("dwOfs", UInt32),
        ("dwType", UInt32),
        ("dwFlags", UInt32),
    ]
    return DIOBJECTDATAFORMAT
def _define_DIDATAFORMAT_head():
    class DIDATAFORMAT(Structure):
        pass
    return DIDATAFORMAT
def _define_DIDATAFORMAT():
    DIDATAFORMAT = win32more.Devices.HumanInterfaceDevice.DIDATAFORMAT_head
    DIDATAFORMAT._fields_ = [
        ("dwSize", UInt32),
        ("dwObjSize", UInt32),
        ("dwFlags", UInt32),
        ("dwDataSize", UInt32),
        ("dwNumObjs", UInt32),
        ("rgodf", POINTER(win32more.Devices.HumanInterfaceDevice.DIOBJECTDATAFORMAT_head)),
    ]
    return DIDATAFORMAT
def _define_DIACTIONA_head():
    class DIACTIONA(Structure):
        pass
    return DIACTIONA
def _define_DIACTIONA():
    DIACTIONA = win32more.Devices.HumanInterfaceDevice.DIACTIONA_head
    class DIACTIONA__Anonymous_e__Union(Union):
        pass
    DIACTIONA__Anonymous_e__Union._fields_ = [
        ("lptszActionName", win32more.Foundation.PSTR),
        ("uResIdString", UInt32),
    ]
    DIACTIONA._anonymous_ = [
        'Anonymous',
    ]
    DIACTIONA._fields_ = [
        ("uAppData", UIntPtr),
        ("dwSemantic", UInt32),
        ("dwFlags", UInt32),
        ("Anonymous", DIACTIONA__Anonymous_e__Union),
        ("guidInstance", Guid),
        ("dwObjID", UInt32),
        ("dwHow", UInt32),
    ]
    return DIACTIONA
def _define_DIACTIONW_head():
    class DIACTIONW(Structure):
        pass
    return DIACTIONW
def _define_DIACTIONW():
    DIACTIONW = win32more.Devices.HumanInterfaceDevice.DIACTIONW_head
    class DIACTIONW__Anonymous_e__Union(Union):
        pass
    DIACTIONW__Anonymous_e__Union._fields_ = [
        ("lptszActionName", win32more.Foundation.PWSTR),
        ("uResIdString", UInt32),
    ]
    DIACTIONW._anonymous_ = [
        'Anonymous',
    ]
    DIACTIONW._fields_ = [
        ("uAppData", UIntPtr),
        ("dwSemantic", UInt32),
        ("dwFlags", UInt32),
        ("Anonymous", DIACTIONW__Anonymous_e__Union),
        ("guidInstance", Guid),
        ("dwObjID", UInt32),
        ("dwHow", UInt32),
    ]
    return DIACTIONW
def _define_DIACTIONFORMATA_head():
    class DIACTIONFORMATA(Structure):
        pass
    return DIACTIONFORMATA
def _define_DIACTIONFORMATA():
    DIACTIONFORMATA = win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATA_head
    DIACTIONFORMATA._fields_ = [
        ("dwSize", UInt32),
        ("dwActionSize", UInt32),
        ("dwDataSize", UInt32),
        ("dwNumActions", UInt32),
        ("rgoAction", POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONA_head)),
        ("guidActionMap", Guid),
        ("dwGenre", UInt32),
        ("dwBufferSize", UInt32),
        ("lAxisMin", Int32),
        ("lAxisMax", Int32),
        ("hInstString", win32more.Foundation.HINSTANCE),
        ("ftTimeStamp", win32more.Foundation.FILETIME),
        ("dwCRC", UInt32),
        ("tszActionMap", win32more.Foundation.CHAR * 260),
    ]
    return DIACTIONFORMATA
def _define_DIACTIONFORMATW_head():
    class DIACTIONFORMATW(Structure):
        pass
    return DIACTIONFORMATW
def _define_DIACTIONFORMATW():
    DIACTIONFORMATW = win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATW_head
    DIACTIONFORMATW._fields_ = [
        ("dwSize", UInt32),
        ("dwActionSize", UInt32),
        ("dwDataSize", UInt32),
        ("dwNumActions", UInt32),
        ("rgoAction", POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONW_head)),
        ("guidActionMap", Guid),
        ("dwGenre", UInt32),
        ("dwBufferSize", UInt32),
        ("lAxisMin", Int32),
        ("lAxisMax", Int32),
        ("hInstString", win32more.Foundation.HINSTANCE),
        ("ftTimeStamp", win32more.Foundation.FILETIME),
        ("dwCRC", UInt32),
        ("tszActionMap", Char * 260),
    ]
    return DIACTIONFORMATW
def _define_DICOLORSET_head():
    class DICOLORSET(Structure):
        pass
    return DICOLORSET
def _define_DICOLORSET():
    DICOLORSET = win32more.Devices.HumanInterfaceDevice.DICOLORSET_head
    DICOLORSET._fields_ = [
        ("dwSize", UInt32),
        ("cTextFore", UInt32),
        ("cTextHighlight", UInt32),
        ("cCalloutLine", UInt32),
        ("cCalloutHighlight", UInt32),
        ("cBorder", UInt32),
        ("cControlFill", UInt32),
        ("cHighlightFill", UInt32),
        ("cAreaFill", UInt32),
    ]
    return DICOLORSET
def _define_DICONFIGUREDEVICESPARAMSA_head():
    class DICONFIGUREDEVICESPARAMSA(Structure):
        pass
    return DICONFIGUREDEVICESPARAMSA
def _define_DICONFIGUREDEVICESPARAMSA():
    DICONFIGUREDEVICESPARAMSA = win32more.Devices.HumanInterfaceDevice.DICONFIGUREDEVICESPARAMSA_head
    DICONFIGUREDEVICESPARAMSA._fields_ = [
        ("dwSize", UInt32),
        ("dwcUsers", UInt32),
        ("lptszUserNames", win32more.Foundation.PSTR),
        ("dwcFormats", UInt32),
        ("lprgFormats", POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATA_head)),
        ("hwnd", win32more.Foundation.HWND),
        ("dics", win32more.Devices.HumanInterfaceDevice.DICOLORSET),
        ("lpUnkDDSTarget", win32more.System.Com.IUnknown_head),
    ]
    return DICONFIGUREDEVICESPARAMSA
def _define_DICONFIGUREDEVICESPARAMSW_head():
    class DICONFIGUREDEVICESPARAMSW(Structure):
        pass
    return DICONFIGUREDEVICESPARAMSW
def _define_DICONFIGUREDEVICESPARAMSW():
    DICONFIGUREDEVICESPARAMSW = win32more.Devices.HumanInterfaceDevice.DICONFIGUREDEVICESPARAMSW_head
    DICONFIGUREDEVICESPARAMSW._fields_ = [
        ("dwSize", UInt32),
        ("dwcUsers", UInt32),
        ("lptszUserNames", win32more.Foundation.PWSTR),
        ("dwcFormats", UInt32),
        ("lprgFormats", POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATW_head)),
        ("hwnd", win32more.Foundation.HWND),
        ("dics", win32more.Devices.HumanInterfaceDevice.DICOLORSET),
        ("lpUnkDDSTarget", win32more.System.Com.IUnknown_head),
    ]
    return DICONFIGUREDEVICESPARAMSW
def _define_DIDEVICEIMAGEINFOA_head():
    class DIDEVICEIMAGEINFOA(Structure):
        pass
    return DIDEVICEIMAGEINFOA
def _define_DIDEVICEIMAGEINFOA():
    DIDEVICEIMAGEINFOA = win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOA_head
    DIDEVICEIMAGEINFOA._fields_ = [
        ("tszImagePath", win32more.Foundation.CHAR * 260),
        ("dwFlags", UInt32),
        ("dwViewID", UInt32),
        ("rcOverlay", win32more.Foundation.RECT),
        ("dwObjID", UInt32),
        ("dwcValidPts", UInt32),
        ("rgptCalloutLine", win32more.Foundation.POINT * 5),
        ("rcCalloutRect", win32more.Foundation.RECT),
        ("dwTextAlign", UInt32),
    ]
    return DIDEVICEIMAGEINFOA
def _define_DIDEVICEIMAGEINFOW_head():
    class DIDEVICEIMAGEINFOW(Structure):
        pass
    return DIDEVICEIMAGEINFOW
def _define_DIDEVICEIMAGEINFOW():
    DIDEVICEIMAGEINFOW = win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOW_head
    DIDEVICEIMAGEINFOW._fields_ = [
        ("tszImagePath", Char * 260),
        ("dwFlags", UInt32),
        ("dwViewID", UInt32),
        ("rcOverlay", win32more.Foundation.RECT),
        ("dwObjID", UInt32),
        ("dwcValidPts", UInt32),
        ("rgptCalloutLine", win32more.Foundation.POINT * 5),
        ("rcCalloutRect", win32more.Foundation.RECT),
        ("dwTextAlign", UInt32),
    ]
    return DIDEVICEIMAGEINFOW
def _define_DIDEVICEIMAGEINFOHEADERA_head():
    class DIDEVICEIMAGEINFOHEADERA(Structure):
        pass
    return DIDEVICEIMAGEINFOHEADERA
def _define_DIDEVICEIMAGEINFOHEADERA():
    DIDEVICEIMAGEINFOHEADERA = win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOHEADERA_head
    DIDEVICEIMAGEINFOHEADERA._fields_ = [
        ("dwSize", UInt32),
        ("dwSizeImageInfo", UInt32),
        ("dwcViews", UInt32),
        ("dwcButtons", UInt32),
        ("dwcAxes", UInt32),
        ("dwcPOVs", UInt32),
        ("dwBufferSize", UInt32),
        ("dwBufferUsed", UInt32),
        ("lprgImageInfoArray", POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOA_head)),
    ]
    return DIDEVICEIMAGEINFOHEADERA
def _define_DIDEVICEIMAGEINFOHEADERW_head():
    class DIDEVICEIMAGEINFOHEADERW(Structure):
        pass
    return DIDEVICEIMAGEINFOHEADERW
def _define_DIDEVICEIMAGEINFOHEADERW():
    DIDEVICEIMAGEINFOHEADERW = win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOHEADERW_head
    DIDEVICEIMAGEINFOHEADERW._fields_ = [
        ("dwSize", UInt32),
        ("dwSizeImageInfo", UInt32),
        ("dwcViews", UInt32),
        ("dwcButtons", UInt32),
        ("dwcAxes", UInt32),
        ("dwcPOVs", UInt32),
        ("dwBufferSize", UInt32),
        ("dwBufferUsed", UInt32),
        ("lprgImageInfoArray", POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOW_head)),
    ]
    return DIDEVICEIMAGEINFOHEADERW
def _define_DIDEVICEOBJECTINSTANCE_DX3A_head():
    class DIDEVICEOBJECTINSTANCE_DX3A(Structure):
        pass
    return DIDEVICEOBJECTINSTANCE_DX3A
def _define_DIDEVICEOBJECTINSTANCE_DX3A():
    DIDEVICEOBJECTINSTANCE_DX3A = win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCE_DX3A_head
    DIDEVICEOBJECTINSTANCE_DX3A._fields_ = [
        ("dwSize", UInt32),
        ("guidType", Guid),
        ("dwOfs", UInt32),
        ("dwType", UInt32),
        ("dwFlags", UInt32),
        ("tszName", win32more.Foundation.CHAR * 260),
    ]
    return DIDEVICEOBJECTINSTANCE_DX3A
def _define_DIDEVICEOBJECTINSTANCE_DX3W_head():
    class DIDEVICEOBJECTINSTANCE_DX3W(Structure):
        pass
    return DIDEVICEOBJECTINSTANCE_DX3W
def _define_DIDEVICEOBJECTINSTANCE_DX3W():
    DIDEVICEOBJECTINSTANCE_DX3W = win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCE_DX3W_head
    DIDEVICEOBJECTINSTANCE_DX3W._fields_ = [
        ("dwSize", UInt32),
        ("guidType", Guid),
        ("dwOfs", UInt32),
        ("dwType", UInt32),
        ("dwFlags", UInt32),
        ("tszName", Char * 260),
    ]
    return DIDEVICEOBJECTINSTANCE_DX3W
def _define_DIDEVICEOBJECTINSTANCEA_head():
    class DIDEVICEOBJECTINSTANCEA(Structure):
        pass
    return DIDEVICEOBJECTINSTANCEA
def _define_DIDEVICEOBJECTINSTANCEA():
    DIDEVICEOBJECTINSTANCEA = win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEA_head
    DIDEVICEOBJECTINSTANCEA._fields_ = [
        ("dwSize", UInt32),
        ("guidType", Guid),
        ("dwOfs", UInt32),
        ("dwType", UInt32),
        ("dwFlags", UInt32),
        ("tszName", win32more.Foundation.CHAR * 260),
        ("dwFFMaxForce", UInt32),
        ("dwFFForceResolution", UInt32),
        ("wCollectionNumber", UInt16),
        ("wDesignatorIndex", UInt16),
        ("wUsagePage", UInt16),
        ("wUsage", UInt16),
        ("dwDimension", UInt32),
        ("wExponent", UInt16),
        ("wReportId", UInt16),
    ]
    return DIDEVICEOBJECTINSTANCEA
def _define_DIDEVICEOBJECTINSTANCEW_head():
    class DIDEVICEOBJECTINSTANCEW(Structure):
        pass
    return DIDEVICEOBJECTINSTANCEW
def _define_DIDEVICEOBJECTINSTANCEW():
    DIDEVICEOBJECTINSTANCEW = win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEW_head
    DIDEVICEOBJECTINSTANCEW._fields_ = [
        ("dwSize", UInt32),
        ("guidType", Guid),
        ("dwOfs", UInt32),
        ("dwType", UInt32),
        ("dwFlags", UInt32),
        ("tszName", Char * 260),
        ("dwFFMaxForce", UInt32),
        ("dwFFForceResolution", UInt32),
        ("wCollectionNumber", UInt16),
        ("wDesignatorIndex", UInt16),
        ("wUsagePage", UInt16),
        ("wUsage", UInt16),
        ("dwDimension", UInt32),
        ("wExponent", UInt16),
        ("wReportId", UInt16),
    ]
    return DIDEVICEOBJECTINSTANCEW
def _define_LPDIENUMDEVICEOBJECTSCALLBACKA():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEA_head),c_void_p, use_last_error=False)
def _define_LPDIENUMDEVICEOBJECTSCALLBACKW():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEW_head),c_void_p, use_last_error=False)
def _define_DIPROPHEADER_head():
    class DIPROPHEADER(Structure):
        pass
    return DIPROPHEADER
def _define_DIPROPHEADER():
    DIPROPHEADER = win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head
    DIPROPHEADER._fields_ = [
        ("dwSize", UInt32),
        ("dwHeaderSize", UInt32),
        ("dwObj", UInt32),
        ("dwHow", UInt32),
    ]
    return DIPROPHEADER
def _define_DIPROPDWORD_head():
    class DIPROPDWORD(Structure):
        pass
    return DIPROPDWORD
def _define_DIPROPDWORD():
    DIPROPDWORD = win32more.Devices.HumanInterfaceDevice.DIPROPDWORD_head
    DIPROPDWORD._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("dwData", UInt32),
    ]
    return DIPROPDWORD
def _define_DIPROPPOINTER_head():
    class DIPROPPOINTER(Structure):
        pass
    return DIPROPPOINTER
def _define_DIPROPPOINTER():
    DIPROPPOINTER = win32more.Devices.HumanInterfaceDevice.DIPROPPOINTER_head
    DIPROPPOINTER._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("uData", UIntPtr),
    ]
    return DIPROPPOINTER
def _define_DIPROPRANGE_head():
    class DIPROPRANGE(Structure):
        pass
    return DIPROPRANGE
def _define_DIPROPRANGE():
    DIPROPRANGE = win32more.Devices.HumanInterfaceDevice.DIPROPRANGE_head
    DIPROPRANGE._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("lMin", Int32),
        ("lMax", Int32),
    ]
    return DIPROPRANGE
def _define_DIPROPCAL_head():
    class DIPROPCAL(Structure):
        pass
    return DIPROPCAL
def _define_DIPROPCAL():
    DIPROPCAL = win32more.Devices.HumanInterfaceDevice.DIPROPCAL_head
    DIPROPCAL._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("lMin", Int32),
        ("lCenter", Int32),
        ("lMax", Int32),
    ]
    return DIPROPCAL
def _define_DIPROPCALPOV_head():
    class DIPROPCALPOV(Structure):
        pass
    return DIPROPCALPOV
def _define_DIPROPCALPOV():
    DIPROPCALPOV = win32more.Devices.HumanInterfaceDevice.DIPROPCALPOV_head
    DIPROPCALPOV._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("lMin", Int32 * 5),
        ("lMax", Int32 * 5),
    ]
    return DIPROPCALPOV
def _define_DIPROPGUIDANDPATH_head():
    class DIPROPGUIDANDPATH(Structure):
        pass
    return DIPROPGUIDANDPATH
def _define_DIPROPGUIDANDPATH():
    DIPROPGUIDANDPATH = win32more.Devices.HumanInterfaceDevice.DIPROPGUIDANDPATH_head
    DIPROPGUIDANDPATH._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("guidClass", Guid),
        ("wszPath", Char * 260),
    ]
    return DIPROPGUIDANDPATH
def _define_DIPROPSTRING_head():
    class DIPROPSTRING(Structure):
        pass
    return DIPROPSTRING
def _define_DIPROPSTRING():
    DIPROPSTRING = win32more.Devices.HumanInterfaceDevice.DIPROPSTRING_head
    DIPROPSTRING._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("wsz", Char * 260),
    ]
    return DIPROPSTRING
def _define_CPOINT_head():
    class CPOINT(Structure):
        pass
    return CPOINT
def _define_CPOINT():
    CPOINT = win32more.Devices.HumanInterfaceDevice.CPOINT_head
    CPOINT._fields_ = [
        ("lP", Int32),
        ("dwLog", UInt32),
    ]
    return CPOINT
def _define_DIPROPCPOINTS_head():
    class DIPROPCPOINTS(Structure):
        pass
    return DIPROPCPOINTS
def _define_DIPROPCPOINTS():
    DIPROPCPOINTS = win32more.Devices.HumanInterfaceDevice.DIPROPCPOINTS_head
    DIPROPCPOINTS._fields_ = [
        ("diph", win32more.Devices.HumanInterfaceDevice.DIPROPHEADER),
        ("dwCPointsNum", UInt32),
        ("cp", win32more.Devices.HumanInterfaceDevice.CPOINT * 8),
    ]
    return DIPROPCPOINTS
def _define_DIDEVICEOBJECTDATA_DX3_head():
    class DIDEVICEOBJECTDATA_DX3(Structure):
        pass
    return DIDEVICEOBJECTDATA_DX3
def _define_DIDEVICEOBJECTDATA_DX3():
    DIDEVICEOBJECTDATA_DX3 = win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_DX3_head
    DIDEVICEOBJECTDATA_DX3._fields_ = [
        ("dwOfs", UInt32),
        ("dwData", UInt32),
        ("dwTimeStamp", UInt32),
        ("dwSequence", UInt32),
    ]
    return DIDEVICEOBJECTDATA_DX3
def _define_DIDEVICEOBJECTDATA_head():
    class DIDEVICEOBJECTDATA(Structure):
        pass
    return DIDEVICEOBJECTDATA
def _define_DIDEVICEOBJECTDATA():
    DIDEVICEOBJECTDATA = win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head
    DIDEVICEOBJECTDATA._fields_ = [
        ("dwOfs", UInt32),
        ("dwData", UInt32),
        ("dwTimeStamp", UInt32),
        ("dwSequence", UInt32),
        ("uAppData", UIntPtr),
    ]
    return DIDEVICEOBJECTDATA
def _define_DIDEVICEINSTANCE_DX3A_head():
    class DIDEVICEINSTANCE_DX3A(Structure):
        pass
    return DIDEVICEINSTANCE_DX3A
def _define_DIDEVICEINSTANCE_DX3A():
    DIDEVICEINSTANCE_DX3A = win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCE_DX3A_head
    DIDEVICEINSTANCE_DX3A._fields_ = [
        ("dwSize", UInt32),
        ("guidInstance", Guid),
        ("guidProduct", Guid),
        ("dwDevType", UInt32),
        ("tszInstanceName", win32more.Foundation.CHAR * 260),
        ("tszProductName", win32more.Foundation.CHAR * 260),
    ]
    return DIDEVICEINSTANCE_DX3A
def _define_DIDEVICEINSTANCE_DX3W_head():
    class DIDEVICEINSTANCE_DX3W(Structure):
        pass
    return DIDEVICEINSTANCE_DX3W
def _define_DIDEVICEINSTANCE_DX3W():
    DIDEVICEINSTANCE_DX3W = win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCE_DX3W_head
    DIDEVICEINSTANCE_DX3W._fields_ = [
        ("dwSize", UInt32),
        ("guidInstance", Guid),
        ("guidProduct", Guid),
        ("dwDevType", UInt32),
        ("tszInstanceName", Char * 260),
        ("tszProductName", Char * 260),
    ]
    return DIDEVICEINSTANCE_DX3W
def _define_DIDEVICEINSTANCEA_head():
    class DIDEVICEINSTANCEA(Structure):
        pass
    return DIDEVICEINSTANCEA
def _define_DIDEVICEINSTANCEA():
    DIDEVICEINSTANCEA = win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEA_head
    DIDEVICEINSTANCEA._fields_ = [
        ("dwSize", UInt32),
        ("guidInstance", Guid),
        ("guidProduct", Guid),
        ("dwDevType", UInt32),
        ("tszInstanceName", win32more.Foundation.CHAR * 260),
        ("tszProductName", win32more.Foundation.CHAR * 260),
        ("guidFFDriver", Guid),
        ("wUsagePage", UInt16),
        ("wUsage", UInt16),
    ]
    return DIDEVICEINSTANCEA
def _define_DIDEVICEINSTANCEW_head():
    class DIDEVICEINSTANCEW(Structure):
        pass
    return DIDEVICEINSTANCEW
def _define_DIDEVICEINSTANCEW():
    DIDEVICEINSTANCEW = win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEW_head
    DIDEVICEINSTANCEW._fields_ = [
        ("dwSize", UInt32),
        ("guidInstance", Guid),
        ("guidProduct", Guid),
        ("dwDevType", UInt32),
        ("tszInstanceName", Char * 260),
        ("tszProductName", Char * 260),
        ("guidFFDriver", Guid),
        ("wUsagePage", UInt16),
        ("wUsage", UInt16),
    ]
    return DIDEVICEINSTANCEW
def _define_IDirectInputDeviceW_head():
    class IDirectInputDeviceW(win32more.System.Com.IUnknown_head):
        Guid = Guid('5944e681-c92e-11cf-bfc7-444553540000')
    return IDirectInputDeviceW
def _define_IDirectInputDeviceW():
    IDirectInputDeviceW = win32more.Devices.HumanInterfaceDevice.IDirectInputDeviceW_head
    IDirectInputDeviceW.GetCapabilities = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVCAPS_head), use_last_error=False)(3, 'GetCapabilities', ((1, 'param0'),)))
    IDirectInputDeviceW.EnumObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICEOBJECTSCALLBACKW,c_void_p,UInt32, use_last_error=False)(4, 'EnumObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDeviceW.GetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(5, 'GetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceW.SetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(6, 'SetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceW.Acquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(7, 'Acquire', ()))
    IDirectInputDeviceW.Unacquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(8, 'Unacquire', ()))
    IDirectInputDeviceW.GetDeviceState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p, use_last_error=False)(9, 'GetDeviceState', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceW.GetDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(10, 'GetDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDeviceW.SetDataFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDATAFORMAT_head), use_last_error=False)(11, 'SetDataFormat', ((1, 'param0'),)))
    IDirectInputDeviceW.SetEventNotification = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HANDLE, use_last_error=False)(12, 'SetEventNotification', ((1, 'param0'),)))
    IDirectInputDeviceW.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(13, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceW.GetObjectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEW_head),UInt32,UInt32, use_last_error=False)(14, 'GetObjectInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDeviceW.GetDeviceInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEW_head), use_last_error=False)(15, 'GetDeviceInfo', ((1, 'param0'),)))
    IDirectInputDeviceW.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(16, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceW.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32,POINTER(Guid), use_last_error=False)(17, 'Initialize', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectInputDeviceW
def _define_IDirectInputDeviceA_head():
    class IDirectInputDeviceA(win32more.System.Com.IUnknown_head):
        Guid = Guid('5944e680-c92e-11cf-bfc7-444553540000')
    return IDirectInputDeviceA
def _define_IDirectInputDeviceA():
    IDirectInputDeviceA = win32more.Devices.HumanInterfaceDevice.IDirectInputDeviceA_head
    IDirectInputDeviceA.GetCapabilities = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVCAPS_head), use_last_error=False)(3, 'GetCapabilities', ((1, 'param0'),)))
    IDirectInputDeviceA.EnumObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICEOBJECTSCALLBACKA,c_void_p,UInt32, use_last_error=False)(4, 'EnumObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDeviceA.GetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(5, 'GetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceA.SetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(6, 'SetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceA.Acquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(7, 'Acquire', ()))
    IDirectInputDeviceA.Unacquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(8, 'Unacquire', ()))
    IDirectInputDeviceA.GetDeviceState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p, use_last_error=False)(9, 'GetDeviceState', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceA.GetDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(10, 'GetDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDeviceA.SetDataFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDATAFORMAT_head), use_last_error=False)(11, 'SetDataFormat', ((1, 'param0'),)))
    IDirectInputDeviceA.SetEventNotification = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HANDLE, use_last_error=False)(12, 'SetEventNotification', ((1, 'param0'),)))
    IDirectInputDeviceA.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(13, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceA.GetObjectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEA_head),UInt32,UInt32, use_last_error=False)(14, 'GetObjectInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDeviceA.GetDeviceInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEA_head), use_last_error=False)(15, 'GetDeviceInfo', ((1, 'param0'),)))
    IDirectInputDeviceA.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(16, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDeviceA.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32,POINTER(Guid), use_last_error=False)(17, 'Initialize', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectInputDeviceA
def _define_DIEFFECTINFOA_head():
    class DIEFFECTINFOA(Structure):
        pass
    return DIEFFECTINFOA
def _define_DIEFFECTINFOA():
    DIEFFECTINFOA = win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOA_head
    DIEFFECTINFOA._fields_ = [
        ("dwSize", UInt32),
        ("guid", Guid),
        ("dwEffType", UInt32),
        ("dwStaticParams", UInt32),
        ("dwDynamicParams", UInt32),
        ("tszName", win32more.Foundation.CHAR * 260),
    ]
    return DIEFFECTINFOA
def _define_DIEFFECTINFOW_head():
    class DIEFFECTINFOW(Structure):
        pass
    return DIEFFECTINFOW
def _define_DIEFFECTINFOW():
    DIEFFECTINFOW = win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOW_head
    DIEFFECTINFOW._fields_ = [
        ("dwSize", UInt32),
        ("guid", Guid),
        ("dwEffType", UInt32),
        ("dwStaticParams", UInt32),
        ("dwDynamicParams", UInt32),
        ("tszName", Char * 260),
    ]
    return DIEFFECTINFOW
def _define_LPDIENUMEFFECTSCALLBACKA():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOA_head),c_void_p, use_last_error=False)
def _define_LPDIENUMEFFECTSCALLBACKW():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOW_head),c_void_p, use_last_error=False)
def _define_LPDIENUMCREATEDEFFECTOBJECTSCALLBACK():
    return CFUNCTYPE(win32more.Foundation.BOOL,win32more.Devices.HumanInterfaceDevice.IDirectInputEffect_head,c_void_p, use_last_error=False)
def _define_IDirectInputDevice2W_head():
    class IDirectInputDevice2W(win32more.Devices.HumanInterfaceDevice.IDirectInputDeviceW_head):
        Guid = Guid('5944e683-c92e-11cf-bfc7-444553540000')
    return IDirectInputDevice2W
def _define_IDirectInputDevice2W():
    IDirectInputDevice2W = win32more.Devices.HumanInterfaceDevice.IDirectInputDevice2W_head
    IDirectInputDevice2W.CreateEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputEffect_head),win32more.System.Com.IUnknown_head, use_last_error=False)(18, 'CreateEffect', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice2W.EnumEffects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSCALLBACKW,c_void_p,UInt32, use_last_error=False)(19, 'EnumEffects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice2W.GetEffectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOW_head),POINTER(Guid), use_last_error=False)(20, 'GetEffectInfo', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice2W.GetForceFeedbackState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(21, 'GetForceFeedbackState', ((1, 'param0'),)))
    IDirectInputDevice2W.SendForceFeedbackCommand = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(22, 'SendForceFeedbackCommand', ((1, 'param0'),)))
    IDirectInputDevice2W.EnumCreatedEffectObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,c_void_p,UInt32, use_last_error=False)(23, 'EnumCreatedEffectObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice2W.Escape = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFESCAPE_head), use_last_error=False)(24, 'Escape', ((1, 'param0'),)))
    IDirectInputDevice2W.Poll = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(25, 'Poll', ()))
    IDirectInputDevice2W.SendDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(26, 'SendDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInputDevice2W
def _define_IDirectInputDevice2A_head():
    class IDirectInputDevice2A(win32more.Devices.HumanInterfaceDevice.IDirectInputDeviceA_head):
        Guid = Guid('5944e682-c92e-11cf-bfc7-444553540000')
    return IDirectInputDevice2A
def _define_IDirectInputDevice2A():
    IDirectInputDevice2A = win32more.Devices.HumanInterfaceDevice.IDirectInputDevice2A_head
    IDirectInputDevice2A.CreateEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputEffect_head),win32more.System.Com.IUnknown_head, use_last_error=False)(18, 'CreateEffect', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice2A.EnumEffects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSCALLBACKA,c_void_p,UInt32, use_last_error=False)(19, 'EnumEffects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice2A.GetEffectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOA_head),POINTER(Guid), use_last_error=False)(20, 'GetEffectInfo', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice2A.GetForceFeedbackState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(21, 'GetForceFeedbackState', ((1, 'param0'),)))
    IDirectInputDevice2A.SendForceFeedbackCommand = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(22, 'SendForceFeedbackCommand', ((1, 'param0'),)))
    IDirectInputDevice2A.EnumCreatedEffectObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,c_void_p,UInt32, use_last_error=False)(23, 'EnumCreatedEffectObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice2A.Escape = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFESCAPE_head), use_last_error=False)(24, 'Escape', ((1, 'param0'),)))
    IDirectInputDevice2A.Poll = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(25, 'Poll', ()))
    IDirectInputDevice2A.SendDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(26, 'SendDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInputDevice2A
def _define_IDirectInputDevice7W_head():
    class IDirectInputDevice7W(win32more.Devices.HumanInterfaceDevice.IDirectInputDevice2W_head):
        Guid = Guid('57d7c6bd-2356-11d3-8e9d-00c04f6844ae')
    return IDirectInputDevice7W
def _define_IDirectInputDevice7W():
    IDirectInputDevice7W = win32more.Devices.HumanInterfaceDevice.IDirectInputDevice7W_head
    IDirectInputDevice7W.EnumEffectsInFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSINFILECALLBACK,c_void_p,UInt32, use_last_error=False)(27, 'EnumEffectsInFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice7W.WriteEffectToFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIFILEEFFECT_head),UInt32, use_last_error=False)(28, 'WriteEffectToFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInputDevice7W
def _define_IDirectInputDevice7A_head():
    class IDirectInputDevice7A(win32more.Devices.HumanInterfaceDevice.IDirectInputDevice2A_head):
        Guid = Guid('57d7c6bc-2356-11d3-8e9d-00c04f6844ae')
    return IDirectInputDevice7A
def _define_IDirectInputDevice7A():
    IDirectInputDevice7A = win32more.Devices.HumanInterfaceDevice.IDirectInputDevice7A_head
    IDirectInputDevice7A.EnumEffectsInFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PSTR,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSINFILECALLBACK,c_void_p,UInt32, use_last_error=False)(27, 'EnumEffectsInFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice7A.WriteEffectToFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PSTR,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIFILEEFFECT_head),UInt32, use_last_error=False)(28, 'WriteEffectToFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInputDevice7A
def _define_IDirectInputDevice8W_head():
    class IDirectInputDevice8W(win32more.System.Com.IUnknown_head):
        Guid = Guid('54d41081-dc15-4833-a41b-748f73a38179')
    return IDirectInputDevice8W
def _define_IDirectInputDevice8W():
    IDirectInputDevice8W = win32more.Devices.HumanInterfaceDevice.IDirectInputDevice8W_head
    IDirectInputDevice8W.GetCapabilities = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVCAPS_head), use_last_error=False)(3, 'GetCapabilities', ((1, 'param0'),)))
    IDirectInputDevice8W.EnumObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICEOBJECTSCALLBACKW,c_void_p,UInt32, use_last_error=False)(4, 'EnumObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8W.GetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(5, 'GetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8W.SetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(6, 'SetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8W.Acquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(7, 'Acquire', ()))
    IDirectInputDevice8W.Unacquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(8, 'Unacquire', ()))
    IDirectInputDevice8W.GetDeviceState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p, use_last_error=False)(9, 'GetDeviceState', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8W.GetDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(10, 'GetDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8W.SetDataFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDATAFORMAT_head), use_last_error=False)(11, 'SetDataFormat', ((1, 'param0'),)))
    IDirectInputDevice8W.SetEventNotification = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HANDLE, use_last_error=False)(12, 'SetEventNotification', ((1, 'param0'),)))
    IDirectInputDevice8W.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(13, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8W.GetObjectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEW_head),UInt32,UInt32, use_last_error=False)(14, 'GetObjectInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8W.GetDeviceInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEW_head), use_last_error=False)(15, 'GetDeviceInfo', ((1, 'param0'),)))
    IDirectInputDevice8W.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(16, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8W.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32,POINTER(Guid), use_last_error=False)(17, 'Initialize', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8W.CreateEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputEffect_head),win32more.System.Com.IUnknown_head, use_last_error=False)(18, 'CreateEffect', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8W.EnumEffects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSCALLBACKW,c_void_p,UInt32, use_last_error=False)(19, 'EnumEffects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8W.GetEffectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOW_head),POINTER(Guid), use_last_error=False)(20, 'GetEffectInfo', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8W.GetForceFeedbackState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(21, 'GetForceFeedbackState', ((1, 'param0'),)))
    IDirectInputDevice8W.SendForceFeedbackCommand = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(22, 'SendForceFeedbackCommand', ((1, 'param0'),)))
    IDirectInputDevice8W.EnumCreatedEffectObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,c_void_p,UInt32, use_last_error=False)(23, 'EnumCreatedEffectObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8W.Escape = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFESCAPE_head), use_last_error=False)(24, 'Escape', ((1, 'param0'),)))
    IDirectInputDevice8W.Poll = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(25, 'Poll', ()))
    IDirectInputDevice8W.SendDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(26, 'SendDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8W.EnumEffectsInFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSINFILECALLBACK,c_void_p,UInt32, use_last_error=False)(27, 'EnumEffectsInFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8W.WriteEffectToFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIFILEEFFECT_head),UInt32, use_last_error=False)(28, 'WriteEffectToFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8W.BuildActionMap = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATW_head),win32more.Foundation.PWSTR,UInt32, use_last_error=False)(29, 'BuildActionMap', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8W.SetActionMap = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATW_head),win32more.Foundation.PWSTR,UInt32, use_last_error=False)(30, 'SetActionMap', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8W.GetImageInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOHEADERW_head), use_last_error=False)(31, 'GetImageInfo', ((1, 'param0'),)))
    return IDirectInputDevice8W
def _define_IDirectInputDevice8A_head():
    class IDirectInputDevice8A(win32more.System.Com.IUnknown_head):
        Guid = Guid('54d41080-dc15-4833-a41b-748f73a38179')
    return IDirectInputDevice8A
def _define_IDirectInputDevice8A():
    IDirectInputDevice8A = win32more.Devices.HumanInterfaceDevice.IDirectInputDevice8A_head
    IDirectInputDevice8A.GetCapabilities = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVCAPS_head), use_last_error=False)(3, 'GetCapabilities', ((1, 'param0'),)))
    IDirectInputDevice8A.EnumObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICEOBJECTSCALLBACKA,c_void_p,UInt32, use_last_error=False)(4, 'EnumObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8A.GetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(5, 'GetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8A.SetProperty = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIPROPHEADER_head), use_last_error=False)(6, 'SetProperty', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8A.Acquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(7, 'Acquire', ()))
    IDirectInputDevice8A.Unacquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(8, 'Unacquire', ()))
    IDirectInputDevice8A.GetDeviceState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,c_void_p, use_last_error=False)(9, 'GetDeviceState', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8A.GetDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(10, 'GetDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8A.SetDataFormat = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDATAFORMAT_head), use_last_error=False)(11, 'SetDataFormat', ((1, 'param0'),)))
    IDirectInputDevice8A.SetEventNotification = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HANDLE, use_last_error=False)(12, 'SetEventNotification', ((1, 'param0'),)))
    IDirectInputDevice8A.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(13, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8A.GetObjectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTINSTANCEA_head),UInt32,UInt32, use_last_error=False)(14, 'GetObjectInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8A.GetDeviceInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEA_head), use_last_error=False)(15, 'GetDeviceInfo', ((1, 'param0'),)))
    IDirectInputDevice8A.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(16, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8A.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32,POINTER(Guid), use_last_error=False)(17, 'Initialize', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8A.CreateEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputEffect_head),win32more.System.Com.IUnknown_head, use_last_error=False)(18, 'CreateEffect', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8A.EnumEffects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSCALLBACKA,c_void_p,UInt32, use_last_error=False)(19, 'EnumEffects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8A.GetEffectInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECTINFOA_head),POINTER(Guid), use_last_error=False)(20, 'GetEffectInfo', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputDevice8A.GetForceFeedbackState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(UInt32), use_last_error=False)(21, 'GetForceFeedbackState', ((1, 'param0'),)))
    IDirectInputDevice8A.SendForceFeedbackCommand = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(22, 'SendForceFeedbackCommand', ((1, 'param0'),)))
    IDirectInputDevice8A.EnumCreatedEffectObjects = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIENUMCREATEDEFFECTOBJECTSCALLBACK,c_void_p,UInt32, use_last_error=False)(23, 'EnumCreatedEffectObjects', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8A.Escape = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFESCAPE_head), use_last_error=False)(24, 'Escape', ((1, 'param0'),)))
    IDirectInputDevice8A.Poll = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(25, 'Poll', ()))
    IDirectInputDevice8A.SendDeviceData = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEOBJECTDATA_head),POINTER(UInt32),UInt32, use_last_error=False)(26, 'SendDeviceData', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8A.EnumEffectsInFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PSTR,win32more.Devices.HumanInterfaceDevice.LPDIENUMEFFECTSINFILECALLBACK,c_void_p,UInt32, use_last_error=False)(27, 'EnumEffectsInFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8A.WriteEffectToFile = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PSTR,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIFILEEFFECT_head),UInt32, use_last_error=False)(28, 'WriteEffectToFile', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputDevice8A.BuildActionMap = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATA_head),win32more.Foundation.PSTR,UInt32, use_last_error=False)(29, 'BuildActionMap', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8A.SetActionMap = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATA_head),win32more.Foundation.PSTR,UInt32, use_last_error=False)(30, 'SetActionMap', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputDevice8A.GetImageInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEIMAGEINFOHEADERA_head), use_last_error=False)(31, 'GetImageInfo', ((1, 'param0'),)))
    return IDirectInputDevice8A
def _define_DIMOUSESTATE_head():
    class DIMOUSESTATE(Structure):
        pass
    return DIMOUSESTATE
def _define_DIMOUSESTATE():
    DIMOUSESTATE = win32more.Devices.HumanInterfaceDevice.DIMOUSESTATE_head
    DIMOUSESTATE._fields_ = [
        ("lX", Int32),
        ("lY", Int32),
        ("lZ", Int32),
        ("rgbButtons", Byte * 4),
    ]
    return DIMOUSESTATE
def _define_DIMOUSESTATE2_head():
    class DIMOUSESTATE2(Structure):
        pass
    return DIMOUSESTATE2
def _define_DIMOUSESTATE2():
    DIMOUSESTATE2 = win32more.Devices.HumanInterfaceDevice.DIMOUSESTATE2_head
    DIMOUSESTATE2._fields_ = [
        ("lX", Int32),
        ("lY", Int32),
        ("lZ", Int32),
        ("rgbButtons", Byte * 8),
    ]
    return DIMOUSESTATE2
def _define_DIJOYSTATE_head():
    class DIJOYSTATE(Structure):
        pass
    return DIJOYSTATE
def _define_DIJOYSTATE():
    DIJOYSTATE = win32more.Devices.HumanInterfaceDevice.DIJOYSTATE_head
    DIJOYSTATE._fields_ = [
        ("lX", Int32),
        ("lY", Int32),
        ("lZ", Int32),
        ("lRx", Int32),
        ("lRy", Int32),
        ("lRz", Int32),
        ("rglSlider", Int32 * 2),
        ("rgdwPOV", UInt32 * 4),
        ("rgbButtons", Byte * 32),
    ]
    return DIJOYSTATE
def _define_DIJOYSTATE2_head():
    class DIJOYSTATE2(Structure):
        pass
    return DIJOYSTATE2
def _define_DIJOYSTATE2():
    DIJOYSTATE2 = win32more.Devices.HumanInterfaceDevice.DIJOYSTATE2_head
    DIJOYSTATE2._fields_ = [
        ("lX", Int32),
        ("lY", Int32),
        ("lZ", Int32),
        ("lRx", Int32),
        ("lRy", Int32),
        ("lRz", Int32),
        ("rglSlider", Int32 * 2),
        ("rgdwPOV", UInt32 * 4),
        ("rgbButtons", Byte * 128),
        ("lVX", Int32),
        ("lVY", Int32),
        ("lVZ", Int32),
        ("lVRx", Int32),
        ("lVRy", Int32),
        ("lVRz", Int32),
        ("rglVSlider", Int32 * 2),
        ("lAX", Int32),
        ("lAY", Int32),
        ("lAZ", Int32),
        ("lARx", Int32),
        ("lARy", Int32),
        ("lARz", Int32),
        ("rglASlider", Int32 * 2),
        ("lFX", Int32),
        ("lFY", Int32),
        ("lFZ", Int32),
        ("lFRx", Int32),
        ("lFRy", Int32),
        ("lFRz", Int32),
        ("rglFSlider", Int32 * 2),
    ]
    return DIJOYSTATE2
def _define_LPDIENUMDEVICESCALLBACKA():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEA_head),c_void_p, use_last_error=False)
def _define_LPDIENUMDEVICESCALLBACKW():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEW_head),c_void_p, use_last_error=False)
def _define_LPDICONFIGUREDEVICESCALLBACK():
    return CFUNCTYPE(win32more.Foundation.BOOL,win32more.System.Com.IUnknown_head,c_void_p, use_last_error=False)
def _define_LPDIENUMDEVICESBYSEMANTICSCBA():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEA_head),win32more.Devices.HumanInterfaceDevice.IDirectInputDevice8A_head,UInt32,UInt32,c_void_p, use_last_error=False)
def _define_LPDIENUMDEVICESBYSEMANTICSCBW():
    return CFUNCTYPE(win32more.Foundation.BOOL,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICEINSTANCEW_head),win32more.Devices.HumanInterfaceDevice.IDirectInputDevice8W_head,UInt32,UInt32,c_void_p, use_last_error=False)
def _define_IDirectInputW_head():
    class IDirectInputW(win32more.System.Com.IUnknown_head):
        Guid = Guid('89521361-aa8a-11cf-bfc7-444553540000')
    return IDirectInputW
def _define_IDirectInputW():
    IDirectInputW = win32more.Devices.HumanInterfaceDevice.IDirectInputW_head
    IDirectInputW.CreateDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputDeviceW_head),win32more.System.Com.IUnknown_head, use_last_error=False)(3, 'CreateDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputW.EnumDevices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICESCALLBACKW,c_void_p,UInt32, use_last_error=False)(4, 'EnumDevices', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputW.GetDeviceStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(5, 'GetDeviceStatus', ((1, 'param0'),)))
    IDirectInputW.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(6, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputW.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32, use_last_error=False)(7, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    return IDirectInputW
def _define_IDirectInputA_head():
    class IDirectInputA(win32more.System.Com.IUnknown_head):
        Guid = Guid('89521360-aa8a-11cf-bfc7-444553540000')
    return IDirectInputA
def _define_IDirectInputA():
    IDirectInputA = win32more.Devices.HumanInterfaceDevice.IDirectInputA_head
    IDirectInputA.CreateDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputDeviceA_head),win32more.System.Com.IUnknown_head, use_last_error=False)(3, 'CreateDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputA.EnumDevices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICESCALLBACKA,c_void_p,UInt32, use_last_error=False)(4, 'EnumDevices', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputA.GetDeviceStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(5, 'GetDeviceStatus', ((1, 'param0'),)))
    IDirectInputA.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(6, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputA.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32, use_last_error=False)(7, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    return IDirectInputA
def _define_IDirectInput2W_head():
    class IDirectInput2W(win32more.Devices.HumanInterfaceDevice.IDirectInputW_head):
        Guid = Guid('5944e663-aa8a-11cf-bfc7-444553540000')
    return IDirectInput2W
def _define_IDirectInput2W():
    IDirectInput2W = win32more.Devices.HumanInterfaceDevice.IDirectInput2W_head
    IDirectInput2W.FindDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),win32more.Foundation.PWSTR,POINTER(Guid), use_last_error=False)(8, 'FindDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectInput2W
def _define_IDirectInput2A_head():
    class IDirectInput2A(win32more.Devices.HumanInterfaceDevice.IDirectInputA_head):
        Guid = Guid('5944e662-aa8a-11cf-bfc7-444553540000')
    return IDirectInput2A
def _define_IDirectInput2A():
    IDirectInput2A = win32more.Devices.HumanInterfaceDevice.IDirectInput2A_head
    IDirectInput2A.FindDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),win32more.Foundation.PSTR,POINTER(Guid), use_last_error=False)(8, 'FindDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectInput2A
def _define_IDirectInput7W_head():
    class IDirectInput7W(win32more.Devices.HumanInterfaceDevice.IDirectInput2W_head):
        Guid = Guid('9a4cb685-236d-11d3-8e9d-00c04f6844ae')
    return IDirectInput7W
def _define_IDirectInput7W():
    IDirectInput7W = win32more.Devices.HumanInterfaceDevice.IDirectInput7W_head
    IDirectInput7W.CreateDeviceEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(Guid),POINTER(c_void_p),win32more.System.Com.IUnknown_head, use_last_error=False)(9, 'CreateDeviceEx', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInput7W
def _define_IDirectInput7A_head():
    class IDirectInput7A(win32more.Devices.HumanInterfaceDevice.IDirectInput2A_head):
        Guid = Guid('9a4cb684-236d-11d3-8e9d-00c04f6844ae')
    return IDirectInput7A
def _define_IDirectInput7A():
    IDirectInput7A = win32more.Devices.HumanInterfaceDevice.IDirectInput7A_head
    IDirectInput7A.CreateDeviceEx = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(Guid),POINTER(c_void_p),win32more.System.Com.IUnknown_head, use_last_error=False)(9, 'CreateDeviceEx', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInput7A
def _define_IDirectInput8W_head():
    class IDirectInput8W(win32more.System.Com.IUnknown_head):
        Guid = Guid('bf798031-483a-4da2-aa99-5d64ed369700')
    return IDirectInput8W
def _define_IDirectInput8W():
    IDirectInput8W = win32more.Devices.HumanInterfaceDevice.IDirectInput8W_head
    IDirectInput8W.CreateDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputDevice8W_head),win32more.System.Com.IUnknown_head, use_last_error=False)(3, 'CreateDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInput8W.EnumDevices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICESCALLBACKW,c_void_p,UInt32, use_last_error=False)(4, 'EnumDevices', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInput8W.GetDeviceStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(5, 'GetDeviceStatus', ((1, 'param0'),)))
    IDirectInput8W.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(6, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInput8W.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32, use_last_error=False)(7, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectInput8W.FindDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),win32more.Foundation.PWSTR,POINTER(Guid), use_last_error=False)(8, 'FindDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInput8W.EnumDevicesBySemantics = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATW_head),win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICESBYSEMANTICSCBW,c_void_p,UInt32, use_last_error=False)(9, 'EnumDevicesBySemantics', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectInput8W.ConfigureDevices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDICONFIGUREDEVICESCALLBACK,POINTER(win32more.Devices.HumanInterfaceDevice.DICONFIGUREDEVICESPARAMSW_head),UInt32,c_void_p, use_last_error=False)(10, 'ConfigureDevices', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInput8W
def _define_IDirectInput8A_head():
    class IDirectInput8A(win32more.System.Com.IUnknown_head):
        Guid = Guid('bf798030-483a-4da2-aa99-5d64ed369700')
    return IDirectInput8A
def _define_IDirectInput8A():
    IDirectInput8A = win32more.Devices.HumanInterfaceDevice.IDirectInput8A_head
    IDirectInput8A.CreateDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),POINTER(win32more.Devices.HumanInterfaceDevice.IDirectInputDevice8A_head),win32more.System.Com.IUnknown_head, use_last_error=False)(3, 'CreateDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInput8A.EnumDevices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICESCALLBACKA,c_void_p,UInt32, use_last_error=False)(4, 'EnumDevices', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInput8A.GetDeviceStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid), use_last_error=False)(5, 'GetDeviceStatus', ((1, 'param0'),)))
    IDirectInput8A.RunControlPanel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(6, 'RunControlPanel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInput8A.Initialize = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32, use_last_error=False)(7, 'Initialize', ((1, 'param0'),(1, 'param1'),)))
    IDirectInput8A.FindDevice = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(Guid),win32more.Foundation.PSTR,POINTER(Guid), use_last_error=False)(8, 'FindDevice', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInput8A.EnumDevicesBySemantics = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PSTR,POINTER(win32more.Devices.HumanInterfaceDevice.DIACTIONFORMATA_head),win32more.Devices.HumanInterfaceDevice.LPDIENUMDEVICESBYSEMANTICSCBA,c_void_p,UInt32, use_last_error=False)(9, 'EnumDevicesBySemantics', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectInput8A.ConfigureDevices = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDICONFIGUREDEVICESCALLBACK,POINTER(win32more.Devices.HumanInterfaceDevice.DICONFIGUREDEVICESPARAMSA_head),UInt32,c_void_p, use_last_error=False)(10, 'ConfigureDevices', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    return IDirectInput8A
def _define_LPFNSHOWJOYCPL():
    return CFUNCTYPE(Void,win32more.Foundation.HWND, use_last_error=False)
def _define_DIOBJECTATTRIBUTES_head():
    class DIOBJECTATTRIBUTES(Structure):
        pass
    return DIOBJECTATTRIBUTES
def _define_DIOBJECTATTRIBUTES():
    DIOBJECTATTRIBUTES = win32more.Devices.HumanInterfaceDevice.DIOBJECTATTRIBUTES_head
    DIOBJECTATTRIBUTES._fields_ = [
        ("dwFlags", UInt32),
        ("wUsagePage", UInt16),
        ("wUsage", UInt16),
    ]
    return DIOBJECTATTRIBUTES
def _define_DIFFOBJECTATTRIBUTES_head():
    class DIFFOBJECTATTRIBUTES(Structure):
        pass
    return DIFFOBJECTATTRIBUTES
def _define_DIFFOBJECTATTRIBUTES():
    DIFFOBJECTATTRIBUTES = win32more.Devices.HumanInterfaceDevice.DIFFOBJECTATTRIBUTES_head
    DIFFOBJECTATTRIBUTES._fields_ = [
        ("dwFFMaxForce", UInt32),
        ("dwFFForceResolution", UInt32),
    ]
    return DIFFOBJECTATTRIBUTES
def _define_DIOBJECTCALIBRATION_head():
    class DIOBJECTCALIBRATION(Structure):
        pass
    return DIOBJECTCALIBRATION
def _define_DIOBJECTCALIBRATION():
    DIOBJECTCALIBRATION = win32more.Devices.HumanInterfaceDevice.DIOBJECTCALIBRATION_head
    DIOBJECTCALIBRATION._fields_ = [
        ("lMin", Int32),
        ("lCenter", Int32),
        ("lMax", Int32),
    ]
    return DIOBJECTCALIBRATION
def _define_DIPOVCALIBRATION_head():
    class DIPOVCALIBRATION(Structure):
        pass
    return DIPOVCALIBRATION
def _define_DIPOVCALIBRATION():
    DIPOVCALIBRATION = win32more.Devices.HumanInterfaceDevice.DIPOVCALIBRATION_head
    DIPOVCALIBRATION._fields_ = [
        ("lMin", Int32 * 5),
        ("lMax", Int32 * 5),
    ]
    return DIPOVCALIBRATION
def _define_DIEFFECTATTRIBUTES_head():
    class DIEFFECTATTRIBUTES(Structure):
        pass
    return DIEFFECTATTRIBUTES
def _define_DIEFFECTATTRIBUTES():
    DIEFFECTATTRIBUTES = win32more.Devices.HumanInterfaceDevice.DIEFFECTATTRIBUTES_head
    DIEFFECTATTRIBUTES._fields_ = [
        ("dwEffectId", UInt32),
        ("dwEffType", UInt32),
        ("dwStaticParams", UInt32),
        ("dwDynamicParams", UInt32),
        ("dwCoords", UInt32),
    ]
    return DIEFFECTATTRIBUTES
def _define_DIFFDEVICEATTRIBUTES_head():
    class DIFFDEVICEATTRIBUTES(Structure):
        pass
    return DIFFDEVICEATTRIBUTES
def _define_DIFFDEVICEATTRIBUTES():
    DIFFDEVICEATTRIBUTES = win32more.Devices.HumanInterfaceDevice.DIFFDEVICEATTRIBUTES_head
    DIFFDEVICEATTRIBUTES._fields_ = [
        ("dwFlags", UInt32),
        ("dwFFSamplePeriod", UInt32),
        ("dwFFMinTimeResolution", UInt32),
    ]
    return DIFFDEVICEATTRIBUTES
def _define_DIDRIVERVERSIONS_head():
    class DIDRIVERVERSIONS(Structure):
        pass
    return DIDRIVERVERSIONS
def _define_DIDRIVERVERSIONS():
    DIDRIVERVERSIONS = win32more.Devices.HumanInterfaceDevice.DIDRIVERVERSIONS_head
    DIDRIVERVERSIONS._fields_ = [
        ("dwSize", UInt32),
        ("dwFirmwareRevision", UInt32),
        ("dwHardwareRevision", UInt32),
        ("dwFFDriverVersion", UInt32),
    ]
    return DIDRIVERVERSIONS
def _define_DIDEVICESTATE_head():
    class DIDEVICESTATE(Structure):
        pass
    return DIDEVICESTATE
def _define_DIDEVICESTATE():
    DIDEVICESTATE = win32more.Devices.HumanInterfaceDevice.DIDEVICESTATE_head
    DIDEVICESTATE._fields_ = [
        ("dwSize", UInt32),
        ("dwState", UInt32),
        ("dwLoad", UInt32),
    ]
    return DIDEVICESTATE
def _define_DIHIDFFINITINFO_head():
    class DIHIDFFINITINFO(Structure):
        pass
    return DIHIDFFINITINFO
def _define_DIHIDFFINITINFO():
    DIHIDFFINITINFO = win32more.Devices.HumanInterfaceDevice.DIHIDFFINITINFO_head
    DIHIDFFINITINFO._fields_ = [
        ("dwSize", UInt32),
        ("pwszDeviceInterface", win32more.Foundation.PWSTR),
        ("GuidInstance", Guid),
    ]
    return DIHIDFFINITINFO
def _define_IDirectInputEffectDriver_head():
    class IDirectInputEffectDriver(win32more.System.Com.IUnknown_head):
        Guid = Guid('02538130-898f-11d0-9ad0-00a0c9a06e35')
    return IDirectInputEffectDriver
def _define_IDirectInputEffectDriver():
    IDirectInputEffectDriver = win32more.Devices.HumanInterfaceDevice.IDirectInputEffectDriver_head
    IDirectInputEffectDriver.DeviceID = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,UInt32,c_void_p, use_last_error=False)(3, 'DeviceID', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectInputEffectDriver.GetVersions = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIDRIVERVERSIONS_head), use_last_error=False)(4, 'GetVersions', ((1, 'param0'),)))
    IDirectInputEffectDriver.Escape = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFESCAPE_head), use_last_error=False)(5, 'Escape', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputEffectDriver.SetGain = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32, use_last_error=False)(6, 'SetGain', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffectDriver.SendForceFeedbackCommand = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32, use_last_error=False)(7, 'SendForceFeedbackCommand', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffectDriver.GetForceFeedbackState = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIDEVICESTATE_head), use_last_error=False)(8, 'GetForceFeedbackState', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffectDriver.DownloadEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(UInt32),POINTER(win32more.Devices.HumanInterfaceDevice.DIEFFECT_head),UInt32, use_last_error=False)(9, 'DownloadEffect', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),(1, 'param4'),)))
    IDirectInputEffectDriver.DestroyEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32, use_last_error=False)(10, 'DestroyEffect', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffectDriver.StartEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,UInt32,UInt32, use_last_error=False)(11, 'StartEffect', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputEffectDriver.StopEffect = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32, use_last_error=False)(12, 'StopEffect', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputEffectDriver.GetEffectStatus = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(UInt32), use_last_error=False)(13, 'GetEffectStatus', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectInputEffectDriver
def _define_JOYPOS_head():
    class JOYPOS(Structure):
        pass
    return JOYPOS
def _define_JOYPOS():
    JOYPOS = win32more.Devices.HumanInterfaceDevice.JOYPOS_head
    JOYPOS._fields_ = [
        ("dwX", UInt32),
        ("dwY", UInt32),
        ("dwZ", UInt32),
        ("dwR", UInt32),
        ("dwU", UInt32),
        ("dwV", UInt32),
    ]
    return JOYPOS
def _define_JOYRANGE_head():
    class JOYRANGE(Structure):
        pass
    return JOYRANGE
def _define_JOYRANGE():
    JOYRANGE = win32more.Devices.HumanInterfaceDevice.JOYRANGE_head
    JOYRANGE._fields_ = [
        ("jpMin", win32more.Devices.HumanInterfaceDevice.JOYPOS),
        ("jpMax", win32more.Devices.HumanInterfaceDevice.JOYPOS),
        ("jpCenter", win32more.Devices.HumanInterfaceDevice.JOYPOS),
    ]
    return JOYRANGE
def _define_JOYREGUSERVALUES_head():
    class JOYREGUSERVALUES(Structure):
        pass
    return JOYREGUSERVALUES
def _define_JOYREGUSERVALUES():
    JOYREGUSERVALUES = win32more.Devices.HumanInterfaceDevice.JOYREGUSERVALUES_head
    JOYREGUSERVALUES._fields_ = [
        ("dwTimeOut", UInt32),
        ("jrvRanges", win32more.Devices.HumanInterfaceDevice.JOYRANGE),
        ("jpDeadZone", win32more.Devices.HumanInterfaceDevice.JOYPOS),
    ]
    return JOYREGUSERVALUES
def _define_JOYREGHWSETTINGS_head():
    class JOYREGHWSETTINGS(Structure):
        pass
    return JOYREGHWSETTINGS
def _define_JOYREGHWSETTINGS():
    JOYREGHWSETTINGS = win32more.Devices.HumanInterfaceDevice.JOYREGHWSETTINGS_head
    JOYREGHWSETTINGS._fields_ = [
        ("dwFlags", UInt32),
        ("dwNumButtons", UInt32),
    ]
    return JOYREGHWSETTINGS
def _define_JOYREGHWVALUES_head():
    class JOYREGHWVALUES(Structure):
        pass
    return JOYREGHWVALUES
def _define_JOYREGHWVALUES():
    JOYREGHWVALUES = win32more.Devices.HumanInterfaceDevice.JOYREGHWVALUES_head
    JOYREGHWVALUES._fields_ = [
        ("jrvHardware", win32more.Devices.HumanInterfaceDevice.JOYRANGE),
        ("dwPOVValues", UInt32 * 4),
        ("dwCalFlags", UInt32),
    ]
    return JOYREGHWVALUES
def _define_JOYREGHWCONFIG_head():
    class JOYREGHWCONFIG(Structure):
        pass
    return JOYREGHWCONFIG
def _define_JOYREGHWCONFIG():
    JOYREGHWCONFIG = win32more.Devices.HumanInterfaceDevice.JOYREGHWCONFIG_head
    JOYREGHWCONFIG._fields_ = [
        ("hws", win32more.Devices.HumanInterfaceDevice.JOYREGHWSETTINGS),
        ("dwUsageSettings", UInt32),
        ("hwv", win32more.Devices.HumanInterfaceDevice.JOYREGHWVALUES),
        ("dwType", UInt32),
        ("dwReserved", UInt32),
    ]
    return JOYREGHWCONFIG
def _define_JOYCALIBRATE_head():
    class JOYCALIBRATE(Structure):
        pass
    return JOYCALIBRATE
def _define_JOYCALIBRATE():
    JOYCALIBRATE = win32more.Devices.HumanInterfaceDevice.JOYCALIBRATE_head
    JOYCALIBRATE._fields_ = [
        ("wXbase", UInt32),
        ("wXdelta", UInt32),
        ("wYbase", UInt32),
        ("wYdelta", UInt32),
        ("wZbase", UInt32),
        ("wZdelta", UInt32),
    ]
    return JOYCALIBRATE
def _define_LPDIJOYTYPECALLBACK():
    return CFUNCTYPE(win32more.Foundation.BOOL,win32more.Foundation.PWSTR,c_void_p, use_last_error=False)
def _define_DIJOYTYPEINFO_DX5_head():
    class DIJOYTYPEINFO_DX5(Structure):
        pass
    return DIJOYTYPEINFO_DX5
def _define_DIJOYTYPEINFO_DX5():
    DIJOYTYPEINFO_DX5 = win32more.Devices.HumanInterfaceDevice.DIJOYTYPEINFO_DX5_head
    DIJOYTYPEINFO_DX5._fields_ = [
        ("dwSize", UInt32),
        ("hws", win32more.Devices.HumanInterfaceDevice.JOYREGHWSETTINGS),
        ("clsidConfig", Guid),
        ("wszDisplayName", Char * 256),
        ("wszCallout", Char * 260),
    ]
    return DIJOYTYPEINFO_DX5
def _define_DIJOYTYPEINFO_DX6_head():
    class DIJOYTYPEINFO_DX6(Structure):
        pass
    return DIJOYTYPEINFO_DX6
def _define_DIJOYTYPEINFO_DX6():
    DIJOYTYPEINFO_DX6 = win32more.Devices.HumanInterfaceDevice.DIJOYTYPEINFO_DX6_head
    DIJOYTYPEINFO_DX6._fields_ = [
        ("dwSize", UInt32),
        ("hws", win32more.Devices.HumanInterfaceDevice.JOYREGHWSETTINGS),
        ("clsidConfig", Guid),
        ("wszDisplayName", Char * 256),
        ("wszCallout", Char * 260),
        ("wszHardwareId", Char * 256),
        ("dwFlags1", UInt32),
    ]
    return DIJOYTYPEINFO_DX6
def _define_DIJOYTYPEINFO_head():
    class DIJOYTYPEINFO(Structure):
        pass
    return DIJOYTYPEINFO
def _define_DIJOYTYPEINFO():
    DIJOYTYPEINFO = win32more.Devices.HumanInterfaceDevice.DIJOYTYPEINFO_head
    DIJOYTYPEINFO._fields_ = [
        ("dwSize", UInt32),
        ("hws", win32more.Devices.HumanInterfaceDevice.JOYREGHWSETTINGS),
        ("clsidConfig", Guid),
        ("wszDisplayName", Char * 256),
        ("wszCallout", Char * 260),
        ("wszHardwareId", Char * 256),
        ("dwFlags1", UInt32),
        ("dwFlags2", UInt32),
        ("wszMapFile", Char * 256),
    ]
    return DIJOYTYPEINFO
def _define_DIJOYCONFIG_DX5_head():
    class DIJOYCONFIG_DX5(Structure):
        pass
    return DIJOYCONFIG_DX5
def _define_DIJOYCONFIG_DX5():
    DIJOYCONFIG_DX5 = win32more.Devices.HumanInterfaceDevice.DIJOYCONFIG_DX5_head
    DIJOYCONFIG_DX5._fields_ = [
        ("dwSize", UInt32),
        ("guidInstance", Guid),
        ("hwc", win32more.Devices.HumanInterfaceDevice.JOYREGHWCONFIG),
        ("dwGain", UInt32),
        ("wszType", Char * 256),
        ("wszCallout", Char * 256),
    ]
    return DIJOYCONFIG_DX5
def _define_DIJOYCONFIG_head():
    class DIJOYCONFIG(Structure):
        pass
    return DIJOYCONFIG
def _define_DIJOYCONFIG():
    DIJOYCONFIG = win32more.Devices.HumanInterfaceDevice.DIJOYCONFIG_head
    DIJOYCONFIG._fields_ = [
        ("dwSize", UInt32),
        ("guidInstance", Guid),
        ("hwc", win32more.Devices.HumanInterfaceDevice.JOYREGHWCONFIG),
        ("dwGain", UInt32),
        ("wszType", Char * 256),
        ("wszCallout", Char * 256),
        ("guidGameport", Guid),
    ]
    return DIJOYCONFIG
def _define_DIJOYUSERVALUES_head():
    class DIJOYUSERVALUES(Structure):
        pass
    return DIJOYUSERVALUES
def _define_DIJOYUSERVALUES():
    DIJOYUSERVALUES = win32more.Devices.HumanInterfaceDevice.DIJOYUSERVALUES_head
    DIJOYUSERVALUES._fields_ = [
        ("dwSize", UInt32),
        ("ruv", win32more.Devices.HumanInterfaceDevice.JOYREGUSERVALUES),
        ("wszGlobalDriver", Char * 256),
        ("wszGameportEmulator", Char * 256),
    ]
    return DIJOYUSERVALUES
def _define_IDirectInputJoyConfig_head():
    class IDirectInputJoyConfig(win32more.System.Com.IUnknown_head):
        Guid = Guid('1de12ab1-c9f5-11cf-bfc7-444553540000')
    return IDirectInputJoyConfig
def _define_IDirectInputJoyConfig():
    IDirectInputJoyConfig = win32more.Devices.HumanInterfaceDevice.IDirectInputJoyConfig_head
    IDirectInputJoyConfig.Acquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(3, 'Acquire', ()))
    IDirectInputJoyConfig.Unacquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(4, 'Unacquire', ()))
    IDirectInputJoyConfig.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(5, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig.SendNotify = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(6, 'SendNotify', ()))
    IDirectInputJoyConfig.EnumTypes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIJOYTYPECALLBACK,c_void_p, use_last_error=False)(7, 'EnumTypes', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig.GetTypeInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYTYPEINFO_head),UInt32, use_last_error=False)(8, 'GetTypeInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig.SetTypeInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYTYPEINFO_head),UInt32, use_last_error=False)(9, 'SetTypeInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig.DeleteType = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR, use_last_error=False)(10, 'DeleteType', ((1, 'param0'),)))
    IDirectInputJoyConfig.GetConfig = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYCONFIG_head),UInt32, use_last_error=False)(11, 'GetConfig', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig.SetConfig = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYCONFIG_head),UInt32, use_last_error=False)(12, 'SetConfig', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig.DeleteConfig = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(13, 'DeleteConfig', ((1, 'param0'),)))
    IDirectInputJoyConfig.GetUserValues = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYUSERVALUES_head),UInt32, use_last_error=False)(14, 'GetUserValues', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig.SetUserValues = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYUSERVALUES_head),UInt32, use_last_error=False)(15, 'SetUserValues', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig.AddNewHardware = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,POINTER(Guid), use_last_error=False)(16, 'AddNewHardware', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig.OpenTypeKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.System.Registry.HKEY), use_last_error=False)(17, 'OpenTypeKey', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig.OpenConfigKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,UInt32,POINTER(win32more.System.Registry.HKEY), use_last_error=False)(18, 'OpenConfigKey', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    return IDirectInputJoyConfig
def _define_IDirectInputJoyConfig8_head():
    class IDirectInputJoyConfig8(win32more.System.Com.IUnknown_head):
        Guid = Guid('eb0d7dfa-1990-4f27-b4d6-edf2eec4a44c')
    return IDirectInputJoyConfig8
def _define_IDirectInputJoyConfig8():
    IDirectInputJoyConfig8 = win32more.Devices.HumanInterfaceDevice.IDirectInputJoyConfig8_head
    IDirectInputJoyConfig8.Acquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(3, 'Acquire', ()))
    IDirectInputJoyConfig8.Unacquire = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(4, 'Unacquire', ()))
    IDirectInputJoyConfig8.SetCooperativeLevel = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,UInt32, use_last_error=False)(5, 'SetCooperativeLevel', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig8.SendNotify = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT, use_last_error=False)(6, 'SendNotify', ()))
    IDirectInputJoyConfig8.EnumTypes = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Devices.HumanInterfaceDevice.LPDIJOYTYPECALLBACK,c_void_p, use_last_error=False)(7, 'EnumTypes', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig8.GetTypeInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYTYPEINFO_head),UInt32, use_last_error=False)(8, 'GetTypeInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig8.SetTypeInfo = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYTYPEINFO_head),UInt32,win32more.Foundation.PWSTR, use_last_error=False)(9, 'SetTypeInfo', ((1, 'param0'),(1, 'param1'),(1, 'param2'),(1, 'param3'),)))
    IDirectInputJoyConfig8.DeleteType = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR, use_last_error=False)(10, 'DeleteType', ((1, 'param0'),)))
    IDirectInputJoyConfig8.GetConfig = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYCONFIG_head),UInt32, use_last_error=False)(11, 'GetConfig', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig8.SetConfig = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYCONFIG_head),UInt32, use_last_error=False)(12, 'SetConfig', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig8.DeleteConfig = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,UInt32, use_last_error=False)(13, 'DeleteConfig', ((1, 'param0'),)))
    IDirectInputJoyConfig8.GetUserValues = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYUSERVALUES_head),UInt32, use_last_error=False)(14, 'GetUserValues', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig8.SetUserValues = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.Devices.HumanInterfaceDevice.DIJOYUSERVALUES_head),UInt32, use_last_error=False)(15, 'SetUserValues', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig8.AddNewHardware = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HWND,POINTER(Guid), use_last_error=False)(16, 'AddNewHardware', ((1, 'param0'),(1, 'param1'),)))
    IDirectInputJoyConfig8.OpenTypeKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.PWSTR,UInt32,POINTER(win32more.System.Registry.HKEY), use_last_error=False)(17, 'OpenTypeKey', ((1, 'param0'),(1, 'param1'),(1, 'param2'),)))
    IDirectInputJoyConfig8.OpenAppStatusKey = COMMETHOD(WINFUNCTYPE(win32more.Foundation.HRESULT,POINTER(win32more.System.Registry.HKEY), use_last_error=False)(18, 'OpenAppStatusKey', ((1, 'param0'),)))
    return IDirectInputJoyConfig8
def _define_KEYBOARD_INPUT_DATA_head():
    class KEYBOARD_INPUT_DATA(Structure):
        pass
    return KEYBOARD_INPUT_DATA
def _define_KEYBOARD_INPUT_DATA():
    KEYBOARD_INPUT_DATA = win32more.Devices.HumanInterfaceDevice.KEYBOARD_INPUT_DATA_head
    KEYBOARD_INPUT_DATA._fields_ = [
        ("UnitId", UInt16),
        ("MakeCode", UInt16),
        ("Flags", UInt16),
        ("Reserved", UInt16),
        ("ExtraInformation", UInt32),
    ]
    return KEYBOARD_INPUT_DATA
def _define_KEYBOARD_TYPEMATIC_PARAMETERS_head():
    class KEYBOARD_TYPEMATIC_PARAMETERS(Structure):
        pass
    return KEYBOARD_TYPEMATIC_PARAMETERS
def _define_KEYBOARD_TYPEMATIC_PARAMETERS():
    KEYBOARD_TYPEMATIC_PARAMETERS = win32more.Devices.HumanInterfaceDevice.KEYBOARD_TYPEMATIC_PARAMETERS_head
    KEYBOARD_TYPEMATIC_PARAMETERS._fields_ = [
        ("UnitId", UInt16),
        ("Rate", UInt16),
        ("Delay", UInt16),
    ]
    return KEYBOARD_TYPEMATIC_PARAMETERS
def _define_KEYBOARD_ID_head():
    class KEYBOARD_ID(Structure):
        pass
    return KEYBOARD_ID
def _define_KEYBOARD_ID():
    KEYBOARD_ID = win32more.Devices.HumanInterfaceDevice.KEYBOARD_ID_head
    KEYBOARD_ID._fields_ = [
        ("Type", Byte),
        ("Subtype", Byte),
    ]
    return KEYBOARD_ID
def _define_KEYBOARD_ATTRIBUTES_head():
    class KEYBOARD_ATTRIBUTES(Structure):
        pass
    return KEYBOARD_ATTRIBUTES
def _define_KEYBOARD_ATTRIBUTES():
    KEYBOARD_ATTRIBUTES = win32more.Devices.HumanInterfaceDevice.KEYBOARD_ATTRIBUTES_head
    KEYBOARD_ATTRIBUTES._fields_ = [
        ("KeyboardIdentifier", win32more.Devices.HumanInterfaceDevice.KEYBOARD_ID),
        ("KeyboardMode", UInt16),
        ("NumberOfFunctionKeys", UInt16),
        ("NumberOfIndicators", UInt16),
        ("NumberOfKeysTotal", UInt16),
        ("InputDataQueueLength", UInt32),
        ("KeyRepeatMinimum", win32more.Devices.HumanInterfaceDevice.KEYBOARD_TYPEMATIC_PARAMETERS),
        ("KeyRepeatMaximum", win32more.Devices.HumanInterfaceDevice.KEYBOARD_TYPEMATIC_PARAMETERS),
    ]
    return KEYBOARD_ATTRIBUTES
def _define_KEYBOARD_EXTENDED_ATTRIBUTES_head():
    class KEYBOARD_EXTENDED_ATTRIBUTES(Structure):
        pass
    return KEYBOARD_EXTENDED_ATTRIBUTES
def _define_KEYBOARD_EXTENDED_ATTRIBUTES():
    KEYBOARD_EXTENDED_ATTRIBUTES = win32more.Devices.HumanInterfaceDevice.KEYBOARD_EXTENDED_ATTRIBUTES_head
    KEYBOARD_EXTENDED_ATTRIBUTES._fields_ = [
        ("Version", Byte),
        ("FormFactor", Byte),
        ("KeyType", Byte),
        ("PhysicalLayout", Byte),
        ("VendorSpecificPhysicalLayout", Byte),
        ("IETFLanguageTagIndex", Byte),
        ("ImplementedInputAssistControls", Byte),
    ]
    return KEYBOARD_EXTENDED_ATTRIBUTES
def _define_KEYBOARD_INDICATOR_PARAMETERS_head():
    class KEYBOARD_INDICATOR_PARAMETERS(Structure):
        pass
    return KEYBOARD_INDICATOR_PARAMETERS
def _define_KEYBOARD_INDICATOR_PARAMETERS():
    KEYBOARD_INDICATOR_PARAMETERS = win32more.Devices.HumanInterfaceDevice.KEYBOARD_INDICATOR_PARAMETERS_head
    KEYBOARD_INDICATOR_PARAMETERS._fields_ = [
        ("UnitId", UInt16),
        ("LedFlags", UInt16),
    ]
    return KEYBOARD_INDICATOR_PARAMETERS
def _define_INDICATOR_LIST_head():
    class INDICATOR_LIST(Structure):
        pass
    return INDICATOR_LIST
def _define_INDICATOR_LIST():
    INDICATOR_LIST = win32more.Devices.HumanInterfaceDevice.INDICATOR_LIST_head
    INDICATOR_LIST._fields_ = [
        ("MakeCode", UInt16),
        ("IndicatorFlags", UInt16),
    ]
    return INDICATOR_LIST
def _define_KEYBOARD_INDICATOR_TRANSLATION_head():
    class KEYBOARD_INDICATOR_TRANSLATION(Structure):
        pass
    return KEYBOARD_INDICATOR_TRANSLATION
def _define_KEYBOARD_INDICATOR_TRANSLATION():
    KEYBOARD_INDICATOR_TRANSLATION = win32more.Devices.HumanInterfaceDevice.KEYBOARD_INDICATOR_TRANSLATION_head
    KEYBOARD_INDICATOR_TRANSLATION._fields_ = [
        ("NumberOfIndicatorKeys", UInt16),
        ("IndicatorList", win32more.Devices.HumanInterfaceDevice.INDICATOR_LIST * 0),
    ]
    return KEYBOARD_INDICATOR_TRANSLATION
def _define_KEYBOARD_UNIT_ID_PARAMETER_head():
    class KEYBOARD_UNIT_ID_PARAMETER(Structure):
        pass
    return KEYBOARD_UNIT_ID_PARAMETER
def _define_KEYBOARD_UNIT_ID_PARAMETER():
    KEYBOARD_UNIT_ID_PARAMETER = win32more.Devices.HumanInterfaceDevice.KEYBOARD_UNIT_ID_PARAMETER_head
    KEYBOARD_UNIT_ID_PARAMETER._fields_ = [
        ("UnitId", UInt16),
    ]
    return KEYBOARD_UNIT_ID_PARAMETER
def _define_KEYBOARD_IME_STATUS_head():
    class KEYBOARD_IME_STATUS(Structure):
        pass
    return KEYBOARD_IME_STATUS
def _define_KEYBOARD_IME_STATUS():
    KEYBOARD_IME_STATUS = win32more.Devices.HumanInterfaceDevice.KEYBOARD_IME_STATUS_head
    KEYBOARD_IME_STATUS._fields_ = [
        ("UnitId", UInt16),
        ("ImeOpen", UInt32),
        ("ImeConvMode", UInt32),
    ]
    return KEYBOARD_IME_STATUS
def _define_MOUSE_INPUT_DATA_head():
    class MOUSE_INPUT_DATA(Structure):
        pass
    return MOUSE_INPUT_DATA
def _define_MOUSE_INPUT_DATA():
    MOUSE_INPUT_DATA = win32more.Devices.HumanInterfaceDevice.MOUSE_INPUT_DATA_head
    class MOUSE_INPUT_DATA__Anonymous_e__Union(Union):
        pass
    class MOUSE_INPUT_DATA__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    MOUSE_INPUT_DATA__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("ButtonFlags", UInt16),
        ("ButtonData", UInt16),
    ]
    MOUSE_INPUT_DATA__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    MOUSE_INPUT_DATA__Anonymous_e__Union._fields_ = [
        ("Buttons", UInt32),
        ("Anonymous", MOUSE_INPUT_DATA__Anonymous_e__Union__Anonymous_e__Struct),
    ]
    MOUSE_INPUT_DATA._anonymous_ = [
        'Anonymous',
    ]
    MOUSE_INPUT_DATA._fields_ = [
        ("UnitId", UInt16),
        ("Flags", UInt16),
        ("Anonymous", MOUSE_INPUT_DATA__Anonymous_e__Union),
        ("RawButtons", UInt32),
        ("LastX", Int32),
        ("LastY", Int32),
        ("ExtraInformation", UInt32),
    ]
    return MOUSE_INPUT_DATA
def _define_MOUSE_ATTRIBUTES_head():
    class MOUSE_ATTRIBUTES(Structure):
        pass
    return MOUSE_ATTRIBUTES
def _define_MOUSE_ATTRIBUTES():
    MOUSE_ATTRIBUTES = win32more.Devices.HumanInterfaceDevice.MOUSE_ATTRIBUTES_head
    MOUSE_ATTRIBUTES._fields_ = [
        ("MouseIdentifier", UInt16),
        ("NumberOfButtons", UInt16),
        ("SampleRate", UInt16),
        ("InputDataQueueLength", UInt32),
    ]
    return MOUSE_ATTRIBUTES
def _define_MOUSE_UNIT_ID_PARAMETER_head():
    class MOUSE_UNIT_ID_PARAMETER(Structure):
        pass
    return MOUSE_UNIT_ID_PARAMETER
def _define_MOUSE_UNIT_ID_PARAMETER():
    MOUSE_UNIT_ID_PARAMETER = win32more.Devices.HumanInterfaceDevice.MOUSE_UNIT_ID_PARAMETER_head
    MOUSE_UNIT_ID_PARAMETER._fields_ = [
        ("UnitId", UInt16),
    ]
    return MOUSE_UNIT_ID_PARAMETER
HIDP_REPORT_TYPE = Int32
HidP_Input = 0
HidP_Output = 1
HidP_Feature = 2
def _define_USAGE_AND_PAGE_head():
    class USAGE_AND_PAGE(Structure):
        pass
    return USAGE_AND_PAGE
def _define_USAGE_AND_PAGE():
    USAGE_AND_PAGE = win32more.Devices.HumanInterfaceDevice.USAGE_AND_PAGE_head
    USAGE_AND_PAGE._fields_ = [
        ("Usage", UInt16),
        ("UsagePage", UInt16),
    ]
    return USAGE_AND_PAGE
def _define_HIDP_BUTTON_CAPS_head():
    class HIDP_BUTTON_CAPS(Structure):
        pass
    return HIDP_BUTTON_CAPS
def _define_HIDP_BUTTON_CAPS():
    HIDP_BUTTON_CAPS = win32more.Devices.HumanInterfaceDevice.HIDP_BUTTON_CAPS_head
    class HIDP_BUTTON_CAPS__Anonymous_e__Union(Union):
        pass
    class HIDP_BUTTON_CAPS__Anonymous_e__Union__Range_e__Struct(Structure):
        pass
    HIDP_BUTTON_CAPS__Anonymous_e__Union__Range_e__Struct._fields_ = [
        ("UsageMin", UInt16),
        ("UsageMax", UInt16),
        ("StringMin", UInt16),
        ("StringMax", UInt16),
        ("DesignatorMin", UInt16),
        ("DesignatorMax", UInt16),
        ("DataIndexMin", UInt16),
        ("DataIndexMax", UInt16),
    ]
    class HIDP_BUTTON_CAPS__Anonymous_e__Union__NotRange_e__Struct(Structure):
        pass
    HIDP_BUTTON_CAPS__Anonymous_e__Union__NotRange_e__Struct._fields_ = [
        ("Usage", UInt16),
        ("Reserved1", UInt16),
        ("StringIndex", UInt16),
        ("Reserved2", UInt16),
        ("DesignatorIndex", UInt16),
        ("Reserved3", UInt16),
        ("DataIndex", UInt16),
        ("Reserved4", UInt16),
    ]
    HIDP_BUTTON_CAPS__Anonymous_e__Union._fields_ = [
        ("Range", HIDP_BUTTON_CAPS__Anonymous_e__Union__Range_e__Struct),
        ("NotRange", HIDP_BUTTON_CAPS__Anonymous_e__Union__NotRange_e__Struct),
    ]
    HIDP_BUTTON_CAPS._anonymous_ = [
        'Anonymous',
    ]
    HIDP_BUTTON_CAPS._fields_ = [
        ("UsagePage", UInt16),
        ("ReportID", Byte),
        ("IsAlias", win32more.Foundation.BOOLEAN),
        ("BitField", UInt16),
        ("LinkCollection", UInt16),
        ("LinkUsage", UInt16),
        ("LinkUsagePage", UInt16),
        ("IsRange", win32more.Foundation.BOOLEAN),
        ("IsStringRange", win32more.Foundation.BOOLEAN),
        ("IsDesignatorRange", win32more.Foundation.BOOLEAN),
        ("IsAbsolute", win32more.Foundation.BOOLEAN),
        ("ReportCount", UInt16),
        ("Reserved2", UInt16),
        ("Reserved", UInt32 * 9),
        ("Anonymous", HIDP_BUTTON_CAPS__Anonymous_e__Union),
    ]
    return HIDP_BUTTON_CAPS
def _define_HIDP_VALUE_CAPS_head():
    class HIDP_VALUE_CAPS(Structure):
        pass
    return HIDP_VALUE_CAPS
def _define_HIDP_VALUE_CAPS():
    HIDP_VALUE_CAPS = win32more.Devices.HumanInterfaceDevice.HIDP_VALUE_CAPS_head
    class HIDP_VALUE_CAPS__Anonymous_e__Union(Union):
        pass
    class HIDP_VALUE_CAPS__Anonymous_e__Union__Range_e__Struct(Structure):
        pass
    HIDP_VALUE_CAPS__Anonymous_e__Union__Range_e__Struct._fields_ = [
        ("UsageMin", UInt16),
        ("UsageMax", UInt16),
        ("StringMin", UInt16),
        ("StringMax", UInt16),
        ("DesignatorMin", UInt16),
        ("DesignatorMax", UInt16),
        ("DataIndexMin", UInt16),
        ("DataIndexMax", UInt16),
    ]
    class HIDP_VALUE_CAPS__Anonymous_e__Union__NotRange_e__Struct(Structure):
        pass
    HIDP_VALUE_CAPS__Anonymous_e__Union__NotRange_e__Struct._fields_ = [
        ("Usage", UInt16),
        ("Reserved1", UInt16),
        ("StringIndex", UInt16),
        ("Reserved2", UInt16),
        ("DesignatorIndex", UInt16),
        ("Reserved3", UInt16),
        ("DataIndex", UInt16),
        ("Reserved4", UInt16),
    ]
    HIDP_VALUE_CAPS__Anonymous_e__Union._fields_ = [
        ("Range", HIDP_VALUE_CAPS__Anonymous_e__Union__Range_e__Struct),
        ("NotRange", HIDP_VALUE_CAPS__Anonymous_e__Union__NotRange_e__Struct),
    ]
    HIDP_VALUE_CAPS._anonymous_ = [
        'Anonymous',
    ]
    HIDP_VALUE_CAPS._fields_ = [
        ("UsagePage", UInt16),
        ("ReportID", Byte),
        ("IsAlias", win32more.Foundation.BOOLEAN),
        ("BitField", UInt16),
        ("LinkCollection", UInt16),
        ("LinkUsage", UInt16),
        ("LinkUsagePage", UInt16),
        ("IsRange", win32more.Foundation.BOOLEAN),
        ("IsStringRange", win32more.Foundation.BOOLEAN),
        ("IsDesignatorRange", win32more.Foundation.BOOLEAN),
        ("IsAbsolute", win32more.Foundation.BOOLEAN),
        ("HasNull", win32more.Foundation.BOOLEAN),
        ("Reserved", Byte),
        ("BitSize", UInt16),
        ("ReportCount", UInt16),
        ("Reserved2", UInt16 * 5),
        ("UnitsExp", UInt32),
        ("Units", UInt32),
        ("LogicalMin", Int32),
        ("LogicalMax", Int32),
        ("PhysicalMin", Int32),
        ("PhysicalMax", Int32),
        ("Anonymous", HIDP_VALUE_CAPS__Anonymous_e__Union),
    ]
    return HIDP_VALUE_CAPS
def _define_HIDP_LINK_COLLECTION_NODE_head():
    class HIDP_LINK_COLLECTION_NODE(Structure):
        pass
    return HIDP_LINK_COLLECTION_NODE
def _define_HIDP_LINK_COLLECTION_NODE():
    HIDP_LINK_COLLECTION_NODE = win32more.Devices.HumanInterfaceDevice.HIDP_LINK_COLLECTION_NODE_head
    HIDP_LINK_COLLECTION_NODE._pack_ = 4
    HIDP_LINK_COLLECTION_NODE._fields_ = [
        ("LinkUsage", UInt16),
        ("LinkUsagePage", UInt16),
        ("Parent", UInt16),
        ("NumberOfChildren", UInt16),
        ("NextSibling", UInt16),
        ("FirstChild", UInt16),
        ("_bitfield", UInt32),
        ("UserContext", c_void_p),
    ]
    return HIDP_LINK_COLLECTION_NODE
def _define__HIDP_PREPARSED_DATA_head():
    class _HIDP_PREPARSED_DATA(Structure):
        pass
    return _HIDP_PREPARSED_DATA
def _define__HIDP_PREPARSED_DATA():
    _HIDP_PREPARSED_DATA = win32more.Devices.HumanInterfaceDevice._HIDP_PREPARSED_DATA_head
    return _HIDP_PREPARSED_DATA
def _define_HIDP_CAPS_head():
    class HIDP_CAPS(Structure):
        pass
    return HIDP_CAPS
def _define_HIDP_CAPS():
    HIDP_CAPS = win32more.Devices.HumanInterfaceDevice.HIDP_CAPS_head
    HIDP_CAPS._fields_ = [
        ("Usage", UInt16),
        ("UsagePage", UInt16),
        ("InputReportByteLength", UInt16),
        ("OutputReportByteLength", UInt16),
        ("FeatureReportByteLength", UInt16),
        ("Reserved", UInt16 * 17),
        ("NumberLinkCollectionNodes", UInt16),
        ("NumberInputButtonCaps", UInt16),
        ("NumberInputValueCaps", UInt16),
        ("NumberInputDataIndices", UInt16),
        ("NumberOutputButtonCaps", UInt16),
        ("NumberOutputValueCaps", UInt16),
        ("NumberOutputDataIndices", UInt16),
        ("NumberFeatureButtonCaps", UInt16),
        ("NumberFeatureValueCaps", UInt16),
        ("NumberFeatureDataIndices", UInt16),
    ]
    return HIDP_CAPS
def _define_HIDP_DATA_head():
    class HIDP_DATA(Structure):
        pass
    return HIDP_DATA
def _define_HIDP_DATA():
    HIDP_DATA = win32more.Devices.HumanInterfaceDevice.HIDP_DATA_head
    class HIDP_DATA__Anonymous_e__Union(Union):
        pass
    HIDP_DATA__Anonymous_e__Union._fields_ = [
        ("RawValue", UInt32),
        ("On", win32more.Foundation.BOOLEAN),
    ]
    HIDP_DATA._anonymous_ = [
        'Anonymous',
    ]
    HIDP_DATA._fields_ = [
        ("DataIndex", UInt16),
        ("Reserved", UInt16),
        ("Anonymous", HIDP_DATA__Anonymous_e__Union),
    ]
    return HIDP_DATA
def _define_HIDP_UNKNOWN_TOKEN_head():
    class HIDP_UNKNOWN_TOKEN(Structure):
        pass
    return HIDP_UNKNOWN_TOKEN
def _define_HIDP_UNKNOWN_TOKEN():
    HIDP_UNKNOWN_TOKEN = win32more.Devices.HumanInterfaceDevice.HIDP_UNKNOWN_TOKEN_head
    HIDP_UNKNOWN_TOKEN._fields_ = [
        ("Token", Byte),
        ("Reserved", Byte * 3),
        ("BitField", UInt32),
    ]
    return HIDP_UNKNOWN_TOKEN
def _define_HIDP_EXTENDED_ATTRIBUTES_head():
    class HIDP_EXTENDED_ATTRIBUTES(Structure):
        pass
    return HIDP_EXTENDED_ATTRIBUTES
def _define_HIDP_EXTENDED_ATTRIBUTES():
    HIDP_EXTENDED_ATTRIBUTES = win32more.Devices.HumanInterfaceDevice.HIDP_EXTENDED_ATTRIBUTES_head
    HIDP_EXTENDED_ATTRIBUTES._pack_ = 4
    HIDP_EXTENDED_ATTRIBUTES._fields_ = [
        ("NumGlobalUnknowns", Byte),
        ("Reserved", Byte * 3),
        ("GlobalUnknowns", POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_UNKNOWN_TOKEN_head)),
        ("Data", UInt32 * 0),
    ]
    return HIDP_EXTENDED_ATTRIBUTES
def _define_HIDP_BUTTON_ARRAY_DATA_head():
    class HIDP_BUTTON_ARRAY_DATA(Structure):
        pass
    return HIDP_BUTTON_ARRAY_DATA
def _define_HIDP_BUTTON_ARRAY_DATA():
    HIDP_BUTTON_ARRAY_DATA = win32more.Devices.HumanInterfaceDevice.HIDP_BUTTON_ARRAY_DATA_head
    HIDP_BUTTON_ARRAY_DATA._fields_ = [
        ("ArrayIndex", UInt16),
        ("On", win32more.Foundation.BOOLEAN),
    ]
    return HIDP_BUTTON_ARRAY_DATA
HIDP_KEYBOARD_DIRECTION = Int32
HidP_Keyboard_Break = 0
HidP_Keyboard_Make = 1
def _define_HIDP_KEYBOARD_MODIFIER_STATE_head():
    class HIDP_KEYBOARD_MODIFIER_STATE(Structure):
        pass
    return HIDP_KEYBOARD_MODIFIER_STATE
def _define_HIDP_KEYBOARD_MODIFIER_STATE():
    HIDP_KEYBOARD_MODIFIER_STATE = win32more.Devices.HumanInterfaceDevice.HIDP_KEYBOARD_MODIFIER_STATE_head
    class HIDP_KEYBOARD_MODIFIER_STATE__Anonymous_e__Union(Union):
        pass
    class HIDP_KEYBOARD_MODIFIER_STATE__Anonymous_e__Union__Anonymous_e__Struct(Structure):
        pass
    HIDP_KEYBOARD_MODIFIER_STATE__Anonymous_e__Union__Anonymous_e__Struct._fields_ = [
        ("_bitfield", UInt32),
    ]
    HIDP_KEYBOARD_MODIFIER_STATE__Anonymous_e__Union._anonymous_ = [
        'Anonymous',
    ]
    HIDP_KEYBOARD_MODIFIER_STATE__Anonymous_e__Union._fields_ = [
        ("Anonymous", HIDP_KEYBOARD_MODIFIER_STATE__Anonymous_e__Union__Anonymous_e__Struct),
        ("ul", UInt32),
    ]
    HIDP_KEYBOARD_MODIFIER_STATE._anonymous_ = [
        'Anonymous',
    ]
    HIDP_KEYBOARD_MODIFIER_STATE._fields_ = [
        ("Anonymous", HIDP_KEYBOARD_MODIFIER_STATE__Anonymous_e__Union),
    ]
    return HIDP_KEYBOARD_MODIFIER_STATE
def _define_PHIDP_INSERT_SCANCODES():
    return CFUNCTYPE(win32more.Foundation.BOOLEAN,c_void_p,win32more.Foundation.PSTR,UInt32, use_last_error=False)
def _define_PFN_HidP_GetVersionInternal():
    return CFUNCTYPE(win32more.Foundation.NTSTATUS,POINTER(UInt32), use_last_error=False)
def _define_HIDD_CONFIGURATION_head():
    class HIDD_CONFIGURATION(Structure):
        pass
    return HIDD_CONFIGURATION
def _define_HIDD_CONFIGURATION():
    HIDD_CONFIGURATION = win32more.Devices.HumanInterfaceDevice.HIDD_CONFIGURATION_head
    HIDD_CONFIGURATION._pack_ = 4
    HIDD_CONFIGURATION._fields_ = [
        ("cookie", c_void_p),
        ("size", UInt32),
        ("RingBufferSize", UInt32),
    ]
    return HIDD_CONFIGURATION
def _define_HIDD_ATTRIBUTES_head():
    class HIDD_ATTRIBUTES(Structure):
        pass
    return HIDD_ATTRIBUTES
def _define_HIDD_ATTRIBUTES():
    HIDD_ATTRIBUTES = win32more.Devices.HumanInterfaceDevice.HIDD_ATTRIBUTES_head
    HIDD_ATTRIBUTES._fields_ = [
        ("Size", UInt32),
        ("VendorID", UInt16),
        ("ProductID", UInt16),
        ("VersionNumber", UInt16),
    ]
    return HIDD_ATTRIBUTES
def _define_HID_XFER_PACKET_head():
    class HID_XFER_PACKET(Structure):
        pass
    return HID_XFER_PACKET
def _define_HID_XFER_PACKET():
    HID_XFER_PACKET = win32more.Devices.HumanInterfaceDevice.HID_XFER_PACKET_head
    HID_XFER_PACKET._fields_ = [
        ("reportBuffer", c_char_p_no),
        ("reportBufferLen", UInt32),
        ("reportId", Byte),
    ]
    return HID_XFER_PACKET
def _define_HID_COLLECTION_INFORMATION_head():
    class HID_COLLECTION_INFORMATION(Structure):
        pass
    return HID_COLLECTION_INFORMATION
def _define_HID_COLLECTION_INFORMATION():
    HID_COLLECTION_INFORMATION = win32more.Devices.HumanInterfaceDevice.HID_COLLECTION_INFORMATION_head
    HID_COLLECTION_INFORMATION._fields_ = [
        ("DescriptorSize", UInt32),
        ("Polled", win32more.Foundation.BOOLEAN),
        ("Reserved1", Byte * 0),
        ("VendorID", UInt16),
        ("ProductID", UInt16),
        ("VersionNumber", UInt16),
    ]
    return HID_COLLECTION_INFORMATION
def _define_HID_DRIVER_CONFIG_head():
    class HID_DRIVER_CONFIG(Structure):
        pass
    return HID_DRIVER_CONFIG
def _define_HID_DRIVER_CONFIG():
    HID_DRIVER_CONFIG = win32more.Devices.HumanInterfaceDevice.HID_DRIVER_CONFIG_head
    HID_DRIVER_CONFIG._fields_ = [
        ("Size", UInt32),
        ("RingBufferSize", UInt32),
    ]
    return HID_DRIVER_CONFIG
GPIOBUTTONS_BUTTON_TYPE = Int32
GPIO_BUTTON_POWER = 0
GPIO_BUTTON_WINDOWS = 1
GPIO_BUTTON_VOLUME_UP = 2
GPIO_BUTTON_VOLUME_DOWN = 3
GPIO_BUTTON_ROTATION_LOCK = 4
GPIO_BUTTON_BACK = 5
GPIO_BUTTON_SEARCH = 6
GPIO_BUTTON_CAMERA_FOCUS = 7
GPIO_BUTTON_CAMERA_SHUTTER = 8
GPIO_BUTTON_RINGER_TOGGLE = 9
GPIO_BUTTON_HEADSET = 10
GPIO_BUTTON_HWKB_DEPLOY = 11
GPIO_BUTTON_CAMERA_LENS = 12
GPIO_BUTTON_OEM_CUSTOM = 13
GPIO_BUTTON_OEM_CUSTOM2 = 14
GPIO_BUTTON_OEM_CUSTOM3 = 15
GPIO_BUTTON_COUNT_MIN = 5
GPIO_BUTTON_COUNT = 16
def _define_INPUT_BUTTON_ENABLE_INFO_head():
    class INPUT_BUTTON_ENABLE_INFO(Structure):
        pass
    return INPUT_BUTTON_ENABLE_INFO
def _define_INPUT_BUTTON_ENABLE_INFO():
    INPUT_BUTTON_ENABLE_INFO = win32more.Devices.HumanInterfaceDevice.INPUT_BUTTON_ENABLE_INFO_head
    INPUT_BUTTON_ENABLE_INFO._fields_ = [
        ("ButtonType", win32more.Devices.HumanInterfaceDevice.GPIOBUTTONS_BUTTON_TYPE),
        ("Enabled", win32more.Foundation.BOOLEAN),
    ]
    return INPUT_BUTTON_ENABLE_INFO
def _define_DirectInput8Create():
    try:
        return WINFUNCTYPE(win32more.Foundation.HRESULT,win32more.Foundation.HINSTANCE,UInt32,POINTER(Guid),POINTER(c_void_p),win32more.System.Com.IUnknown_head, use_last_error=False)(("DirectInput8Create", windll["DINPUT8"]), ((1, 'hinst'),(1, 'dwVersion'),(1, 'riidltf'),(1, 'ppvOut'),(1, 'punkOuter'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_joyConfigChanged():
    try:
        return WINFUNCTYPE(UInt32,UInt32, use_last_error=False)(("joyConfigChanged", windll["WINMM"]), ((1, 'dwFlags'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetCaps():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,IntPtr,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_CAPS_head), use_last_error=False)(("HidP_GetCaps", windll["HID"]), ((1, 'PreparsedData'),(1, 'Capabilities'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetLinkCollectionNodes():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_LINK_COLLECTION_NODE),POINTER(UInt32),IntPtr, use_last_error=False)(("HidP_GetLinkCollectionNodes", windll["HID"]), ((1, 'LinkCollectionNodes'),(1, 'LinkCollectionNodesLength'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetSpecificButtonCaps():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_BUTTON_CAPS),POINTER(UInt16),IntPtr, use_last_error=False)(("HidP_GetSpecificButtonCaps", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'ButtonCaps'),(1, 'ButtonCapsLength'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetButtonCaps():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_BUTTON_CAPS),POINTER(UInt16),IntPtr, use_last_error=False)(("HidP_GetButtonCaps", windll["HID"]), ((1, 'ReportType'),(1, 'ButtonCaps'),(1, 'ButtonCapsLength'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetSpecificValueCaps():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_VALUE_CAPS),POINTER(UInt16),IntPtr, use_last_error=False)(("HidP_GetSpecificValueCaps", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'ValueCaps'),(1, 'ValueCapsLength'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetValueCaps():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_VALUE_CAPS),POINTER(UInt16),IntPtr, use_last_error=False)(("HidP_GetValueCaps", windll["HID"]), ((1, 'ReportType'),(1, 'ValueCaps'),(1, 'ValueCapsLength'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetExtendedAttributes():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,IntPtr,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_EXTENDED_ATTRIBUTES),POINTER(UInt32), use_last_error=False)(("HidP_GetExtendedAttributes", windll["HID"]), ((1, 'ReportType'),(1, 'DataIndex'),(1, 'PreparsedData'),(1, 'Attributes'),(1, 'LengthAttributes'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_InitializeReportForID():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,Byte,IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_InitializeReportForID", windll["HID"]), ((1, 'ReportType'),(1, 'ReportID'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_SetData():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_DATA),POINTER(UInt32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_SetData", windll["HID"]), ((1, 'ReportType'),(1, 'DataList'),(1, 'DataLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetData():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_DATA),POINTER(UInt32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_GetData", windll["HID"]), ((1, 'ReportType'),(1, 'DataList'),(1, 'DataLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_MaxDataListLength():
    try:
        return WINFUNCTYPE(UInt32,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,IntPtr, use_last_error=False)(("HidP_MaxDataListLength", windll["HID"]), ((1, 'ReportType'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_SetUsages():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,POINTER(UInt16),POINTER(UInt32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_SetUsages", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'UsageList'),(1, 'UsageLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_UnsetUsages():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,POINTER(UInt16),POINTER(UInt32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_UnsetUsages", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'UsageList'),(1, 'UsageLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetUsages():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,POINTER(UInt16),POINTER(UInt32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_GetUsages", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'UsageList'),(1, 'UsageLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetUsagesEx():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,POINTER(win32more.Devices.HumanInterfaceDevice.USAGE_AND_PAGE),POINTER(UInt32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_GetUsagesEx", windll["HID"]), ((1, 'ReportType'),(1, 'LinkCollection'),(1, 'ButtonList'),(1, 'UsageLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_MaxUsageListLength():
    try:
        return WINFUNCTYPE(UInt32,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,IntPtr, use_last_error=False)(("HidP_MaxUsageListLength", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_SetUsageValue():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,UInt32,IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_SetUsageValue", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'UsageValue'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_SetScaledUsageValue():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,Int32,IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_SetScaledUsageValue", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'UsageValue'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_SetUsageValueArray():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,win32more.Foundation.PSTR,UInt16,IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_SetUsageValueArray", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'UsageValue'),(1, 'UsageValueByteLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetUsageValue():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,POINTER(UInt32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_GetUsageValue", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'UsageValue'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetScaledUsageValue():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,POINTER(Int32),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_GetScaledUsageValue", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'UsageValue'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetUsageValueArray():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,win32more.Foundation.PSTR,UInt16,IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_GetUsageValueArray", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'UsageValue'),(1, 'UsageValueByteLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_UsageListDifference():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,POINTER(UInt16),POINTER(UInt16),POINTER(UInt16),POINTER(UInt16),UInt32, use_last_error=False)(("HidP_UsageListDifference", windll["HID"]), ((1, 'PreviousUsageList'),(1, 'CurrentUsageList'),(1, 'BreakUsageList'),(1, 'MakeUsageList'),(1, 'UsageListLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_GetButtonArray():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_BUTTON_ARRAY_DATA),POINTER(UInt16),IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_GetButtonArray", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'ButtonData'),(1, 'ButtonDataLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_SetButtonArray():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,win32more.Devices.HumanInterfaceDevice.HIDP_REPORT_TYPE,UInt16,UInt16,UInt16,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_BUTTON_ARRAY_DATA),UInt16,IntPtr,win32more.Foundation.PSTR,UInt32, use_last_error=False)(("HidP_SetButtonArray", windll["HID"]), ((1, 'ReportType'),(1, 'UsagePage'),(1, 'LinkCollection'),(1, 'Usage'),(1, 'ButtonData'),(1, 'ButtonDataLength'),(1, 'PreparsedData'),(1, 'Report'),(1, 'ReportLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidP_TranslateUsagesToI8042ScanCodes():
    try:
        return WINFUNCTYPE(win32more.Foundation.NTSTATUS,POINTER(UInt16),UInt32,win32more.Devices.HumanInterfaceDevice.HIDP_KEYBOARD_DIRECTION,POINTER(win32more.Devices.HumanInterfaceDevice.HIDP_KEYBOARD_MODIFIER_STATE_head),win32more.Devices.HumanInterfaceDevice.PHIDP_INSERT_SCANCODES,c_void_p, use_last_error=False)(("HidP_TranslateUsagesToI8042ScanCodes", windll["HID"]), ((1, 'ChangedUsageList'),(1, 'UsageListLength'),(1, 'KeyAction'),(1, 'ModifierState'),(1, 'InsertCodesProcedure'),(1, 'InsertCodesContext'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetAttributes():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,POINTER(win32more.Devices.HumanInterfaceDevice.HIDD_ATTRIBUTES_head), use_last_error=False)(("HidD_GetAttributes", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Attributes'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetHidGuid():
    try:
        return WINFUNCTYPE(Void,POINTER(Guid), use_last_error=False)(("HidD_GetHidGuid", windll["HID"]), ((1, 'HidGuid'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetPreparsedData():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,POINTER(IntPtr), use_last_error=False)(("HidD_GetPreparsedData", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_FreePreparsedData():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,IntPtr, use_last_error=False)(("HidD_FreePreparsedData", windll["HID"]), ((1, 'PreparsedData'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_FlushQueue():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE, use_last_error=False)(("HidD_FlushQueue", windll["HID"]), ((1, 'HidDeviceObject'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetConfiguration():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,POINTER(win32more.Devices.HumanInterfaceDevice.HIDD_CONFIGURATION_head),UInt32, use_last_error=False)(("HidD_GetConfiguration", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Configuration'),(1, 'ConfigurationLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_SetConfiguration():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,POINTER(win32more.Devices.HumanInterfaceDevice.HIDD_CONFIGURATION_head),UInt32, use_last_error=False)(("HidD_SetConfiguration", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Configuration'),(1, 'ConfigurationLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetFeature():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_GetFeature", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'ReportBuffer'),(1, 'ReportBufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_SetFeature():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_SetFeature", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'ReportBuffer'),(1, 'ReportBufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetInputReport():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_GetInputReport", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'ReportBuffer'),(1, 'ReportBufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_SetOutputReport():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_SetOutputReport", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'ReportBuffer'),(1, 'ReportBufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetNumInputBuffers():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,POINTER(UInt32), use_last_error=False)(("HidD_GetNumInputBuffers", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'NumberBuffers'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_SetNumInputBuffers():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,UInt32, use_last_error=False)(("HidD_SetNumInputBuffers", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'NumberBuffers'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetPhysicalDescriptor():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_GetPhysicalDescriptor", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Buffer'),(1, 'BufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetManufacturerString():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_GetManufacturerString", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Buffer'),(1, 'BufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetProductString():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_GetProductString", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Buffer'),(1, 'BufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetIndexedString():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,UInt32,c_void_p,UInt32, use_last_error=False)(("HidD_GetIndexedString", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'StringIndex'),(1, 'Buffer'),(1, 'BufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetSerialNumberString():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_GetSerialNumberString", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Buffer'),(1, 'BufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
def _define_HidD_GetMsGenreDescriptor():
    try:
        return WINFUNCTYPE(win32more.Foundation.BOOLEAN,win32more.Foundation.HANDLE,c_void_p,UInt32, use_last_error=False)(("HidD_GetMsGenreDescriptor", windll["HID"]), ((1, 'HidDeviceObject'),(1, 'Buffer'),(1, 'BufferLength'),))
    except (FileNotFoundError, AttributeError):
        return None
__all__ = [
    "DIRECTINPUT_VERSION",
    "JOY_HW_NONE",
    "JOY_HW_CUSTOM",
    "JOY_HW_2A_2B_GENERIC",
    "JOY_HW_2A_4B_GENERIC",
    "JOY_HW_2B_GAMEPAD",
    "JOY_HW_2B_FLIGHTYOKE",
    "JOY_HW_2B_FLIGHTYOKETHROTTLE",
    "JOY_HW_3A_2B_GENERIC",
    "JOY_HW_3A_4B_GENERIC",
    "JOY_HW_4B_GAMEPAD",
    "JOY_HW_4B_FLIGHTYOKE",
    "JOY_HW_4B_FLIGHTYOKETHROTTLE",
    "JOY_HW_TWO_2A_2B_WITH_Y",
    "JOY_HW_LASTENTRY",
    "JOY_ISCAL_XY",
    "JOY_ISCAL_Z",
    "JOY_ISCAL_R",
    "JOY_ISCAL_U",
    "JOY_ISCAL_V",
    "JOY_ISCAL_POV",
    "JOY_POV_NUMDIRS",
    "JOY_POVVAL_FORWARD",
    "JOY_POVVAL_BACKWARD",
    "JOY_POVVAL_LEFT",
    "JOY_POVVAL_RIGHT",
    "JOY_HWS_HASZ",
    "JOY_HWS_HASPOV",
    "JOY_HWS_POVISBUTTONCOMBOS",
    "JOY_HWS_POVISPOLL",
    "JOY_HWS_ISYOKE",
    "JOY_HWS_ISGAMEPAD",
    "JOY_HWS_ISCARCTRL",
    "JOY_HWS_XISJ1Y",
    "JOY_HWS_XISJ2X",
    "JOY_HWS_XISJ2Y",
    "JOY_HWS_YISJ1X",
    "JOY_HWS_YISJ2X",
    "JOY_HWS_YISJ2Y",
    "JOY_HWS_ZISJ1X",
    "JOY_HWS_ZISJ1Y",
    "JOY_HWS_ZISJ2X",
    "JOY_HWS_POVISJ1X",
    "JOY_HWS_POVISJ1Y",
    "JOY_HWS_POVISJ2X",
    "JOY_HWS_HASR",
    "JOY_HWS_RISJ1X",
    "JOY_HWS_RISJ1Y",
    "JOY_HWS_RISJ2Y",
    "JOY_HWS_HASU",
    "JOY_HWS_HASV",
    "JOY_US_HASRUDDER",
    "JOY_US_PRESENT",
    "JOY_US_ISOEM",
    "JOY_US_RESERVED",
    "JOYTYPE_ZEROGAMEENUMOEMDATA",
    "JOYTYPE_NOAUTODETECTGAMEPORT",
    "JOYTYPE_NOHIDDIRECT",
    "JOYTYPE_ANALOGCOMPAT",
    "JOYTYPE_DEFAULTPROPSHEET",
    "JOYTYPE_DEVICEHIDE",
    "JOYTYPE_MOUSEHIDE",
    "JOYTYPE_KEYBHIDE",
    "JOYTYPE_GAMEHIDE",
    "JOYTYPE_HIDEACTIVE",
    "JOYTYPE_INFOMASK",
    "JOYTYPE_INFODEFAULT",
    "JOYTYPE_INFOYYPEDALS",
    "JOYTYPE_INFOZYPEDALS",
    "JOYTYPE_INFOYRPEDALS",
    "JOYTYPE_INFOZRPEDALS",
    "JOYTYPE_INFOZISSLIDER",
    "JOYTYPE_INFOZISZ",
    "JOYTYPE_ENABLEINPUTREPORT",
    "MAX_JOYSTRING",
    "MAX_JOYSTICKOEMVXDNAME",
    "DITC_REGHWSETTINGS",
    "DITC_CLSIDCONFIG",
    "DITC_DISPLAYNAME",
    "DITC_CALLOUT",
    "DITC_HARDWAREID",
    "DITC_FLAGS1",
    "DITC_FLAGS2",
    "DITC_MAPFILE",
    "DIJC_GUIDINSTANCE",
    "DIJC_REGHWCONFIGTYPE",
    "DIJC_GAIN",
    "DIJC_CALLOUT",
    "DIJC_WDMGAMEPORT",
    "DIJU_USERVALUES",
    "DIJU_GLOBALDRIVER",
    "DIJU_GAMEPORTEMULATOR",
    "GUID_KeyboardClass",
    "GUID_MediaClass",
    "GUID_MouseClass",
    "GUID_HIDClass",
    "DIMSGWP_NEWAPPSTART",
    "DIMSGWP_DX8APPSTART",
    "DIMSGWP_DX8MAPPERAPPSTART",
    "DIAPPIDFLAG_NOTIME",
    "DIAPPIDFLAG_NOSIZE",
    "DIERR_NOMOREITEMS",
    "DIERR_DRIVERFIRST",
    "DIERR_DRIVERLAST",
    "DIERR_INVALIDCLASSINSTALLER",
    "DIERR_CANCELLED",
    "DIERR_BADINF",
    "DIDIFT_DELETE",
    "GUID_DEVINTERFACE_HID",
    "GUID_HID_INTERFACE_NOTIFY",
    "GUID_HID_INTERFACE_HIDPARSE",
    "DEVPKEY_DeviceInterface_HID_UsagePage",
    "DEVPKEY_DeviceInterface_HID_UsageId",
    "DEVPKEY_DeviceInterface_HID_IsReadOnly",
    "DEVPKEY_DeviceInterface_HID_VendorId",
    "DEVPKEY_DeviceInterface_HID_ProductId",
    "DEVPKEY_DeviceInterface_HID_VersionNumber",
    "DEVPKEY_DeviceInterface_HID_BackgroundAccess",
    "DEVPKEY_DeviceInterface_HID_WakeScreenOnInputCapable",
    "HID_REVISION",
    "HID_USAGE_PAGE_UNDEFINED",
    "HID_USAGE_PAGE_GENERIC",
    "HID_USAGE_PAGE_SIMULATION",
    "HID_USAGE_PAGE_VR",
    "HID_USAGE_PAGE_SPORT",
    "HID_USAGE_PAGE_GAME",
    "HID_USAGE_PAGE_GENERIC_DEVICE",
    "HID_USAGE_PAGE_KEYBOARD",
    "HID_USAGE_PAGE_LED",
    "HID_USAGE_PAGE_BUTTON",
    "HID_USAGE_PAGE_ORDINAL",
    "HID_USAGE_PAGE_TELEPHONY",
    "HID_USAGE_PAGE_CONSUMER",
    "HID_USAGE_PAGE_DIGITIZER",
    "HID_USAGE_PAGE_HAPTICS",
    "HID_USAGE_PAGE_PID",
    "HID_USAGE_PAGE_UNICODE",
    "HID_USAGE_PAGE_ALPHANUMERIC",
    "HID_USAGE_PAGE_SENSOR",
    "HID_USAGE_PAGE_LIGHTING_ILLUMINATION",
    "HID_USAGE_PAGE_BARCODE_SCANNER",
    "HID_USAGE_PAGE_WEIGHING_DEVICE",
    "HID_USAGE_PAGE_MAGNETIC_STRIPE_READER",
    "HID_USAGE_PAGE_CAMERA_CONTROL",
    "HID_USAGE_PAGE_ARCADE",
    "HID_USAGE_PAGE_MICROSOFT_BLUETOOTH_HANDSFREE",
    "HID_USAGE_PAGE_VENDOR_DEFINED_BEGIN",
    "HID_USAGE_PAGE_VENDOR_DEFINED_END",
    "HID_USAGE_GENERIC_POINTER",
    "HID_USAGE_GENERIC_MOUSE",
    "HID_USAGE_GENERIC_JOYSTICK",
    "HID_USAGE_GENERIC_GAMEPAD",
    "HID_USAGE_GENERIC_KEYBOARD",
    "HID_USAGE_GENERIC_KEYPAD",
    "HID_USAGE_GENERIC_MULTI_AXIS_CONTROLLER",
    "HID_USAGE_GENERIC_TABLET_PC_SYSTEM_CTL",
    "HID_USAGE_GENERIC_PORTABLE_DEVICE_CONTROL",
    "HID_USAGE_GENERIC_INTERACTIVE_CONTROL",
    "HID_USAGE_GENERIC_COUNTED_BUFFER",
    "HID_USAGE_GENERIC_SYSTEM_CTL",
    "HID_USAGE_GENERIC_X",
    "HID_USAGE_GENERIC_Y",
    "HID_USAGE_GENERIC_Z",
    "HID_USAGE_GENERIC_RX",
    "HID_USAGE_GENERIC_RY",
    "HID_USAGE_GENERIC_RZ",
    "HID_USAGE_GENERIC_SLIDER",
    "HID_USAGE_GENERIC_DIAL",
    "HID_USAGE_GENERIC_WHEEL",
    "HID_USAGE_GENERIC_HATSWITCH",
    "HID_USAGE_GENERIC_BYTE_COUNT",
    "HID_USAGE_GENERIC_MOTION_WAKEUP",
    "HID_USAGE_GENERIC_START",
    "HID_USAGE_GENERIC_SELECT",
    "HID_USAGE_GENERIC_VX",
    "HID_USAGE_GENERIC_VY",
    "HID_USAGE_GENERIC_VZ",
    "HID_USAGE_GENERIC_VBRX",
    "HID_USAGE_GENERIC_VBRY",
    "HID_USAGE_GENERIC_VBRZ",
    "HID_USAGE_GENERIC_VNO",
    "HID_USAGE_GENERIC_FEATURE_NOTIFICATION",
    "HID_USAGE_GENERIC_RESOLUTION_MULTIPLIER",
    "HID_USAGE_GENERIC_SYSCTL_POWER",
    "HID_USAGE_GENERIC_SYSCTL_SLEEP",
    "HID_USAGE_GENERIC_SYSCTL_WAKE",
    "HID_USAGE_GENERIC_SYSCTL_CONTEXT_MENU",
    "HID_USAGE_GENERIC_SYSCTL_MAIN_MENU",
    "HID_USAGE_GENERIC_SYSCTL_APP_MENU",
    "HID_USAGE_GENERIC_SYSCTL_HELP_MENU",
    "HID_USAGE_GENERIC_SYSCTL_MENU_EXIT",
    "HID_USAGE_GENERIC_SYSCTL_MENU_SELECT",
    "HID_USAGE_GENERIC_SYSCTL_MENU_RIGHT",
    "HID_USAGE_GENERIC_SYSCTL_MENU_LEFT",
    "HID_USAGE_GENERIC_SYSCTL_MENU_UP",
    "HID_USAGE_GENERIC_SYSCTL_MENU_DOWN",
    "HID_USAGE_GENERIC_SYSCTL_COLD_RESTART",
    "HID_USAGE_GENERIC_SYSCTL_WARM_RESTART",
    "HID_USAGE_GENERIC_DPAD_UP",
    "HID_USAGE_GENERIC_DPAD_DOWN",
    "HID_USAGE_GENERIC_DPAD_RIGHT",
    "HID_USAGE_GENERIC_DPAD_LEFT",
    "HID_USAGE_GENERIC_SYSCTL_FN",
    "HID_USAGE_GENERIC_SYSCTL_FN_LOCK",
    "HID_USAGE_GENERIC_SYSCTL_FN_LOCK_INDICATOR",
    "HID_USAGE_GENERIC_SYSCTL_DISMISS_NOTIFICATION",
    "HID_USAGE_GENERIC_SYSCTL_DOCK",
    "HID_USAGE_GENERIC_SYSCTL_UNDOCK",
    "HID_USAGE_GENERIC_SYSCTL_SETUP",
    "HID_USAGE_GENERIC_SYSCTL_SYS_BREAK",
    "HID_USAGE_GENERIC_SYSCTL_SYS_DBG_BREAK",
    "HID_USAGE_GENERIC_SYSCTL_APP_BREAK",
    "HID_USAGE_GENERIC_SYSCTL_APP_DBG_BREAK",
    "HID_USAGE_GENERIC_SYSCTL_MUTE",
    "HID_USAGE_GENERIC_SYSCTL_HIBERNATE",
    "HID_USAGE_GENERIC_SYSCTL_DISP_INVERT",
    "HID_USAGE_GENERIC_SYSCTL_DISP_INTERNAL",
    "HID_USAGE_GENERIC_SYSCTL_DISP_EXTERNAL",
    "HID_USAGE_GENERIC_SYSCTL_DISP_BOTH",
    "HID_USAGE_GENERIC_SYSCTL_DISP_DUAL",
    "HID_USAGE_GENERIC_SYSCTL_DISP_TOGGLE",
    "HID_USAGE_GENERIC_SYSCTL_DISP_SWAP",
    "HID_USAGE_GENERIC_SYSCTL_DISP_AUTOSCALE",
    "HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_BUTTON",
    "HID_USAGE_GENERIC_SYSTEM_DISPLAY_ROTATION_LOCK_SLIDER_SWITCH",
    "HID_USAGE_GENERIC_CONTROL_ENABLE",
    "HID_USAGE_SIMULATION_FLIGHT_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_AUTOMOBILE_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_TANK_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_SPACESHIP_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_SUBMARINE_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_SAILING_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_MOTORCYCLE_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_SPORTS_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_AIRPLANE_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_HELICOPTER_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_MAGIC_CARPET_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_BICYCLE_SIMULATION_DEVICE",
    "HID_USAGE_SIMULATION_FLIGHT_CONTROL_STICK",
    "HID_USAGE_SIMULATION_FLIGHT_STICK",
    "HID_USAGE_SIMULATION_CYCLIC_CONTROL",
    "HID_USAGE_SIMULATION_CYCLIC_TRIM",
    "HID_USAGE_SIMULATION_FLIGHT_YOKE",
    "HID_USAGE_SIMULATION_TRACK_CONTROL",
    "HID_USAGE_SIMULATION_AILERON",
    "HID_USAGE_SIMULATION_AILERON_TRIM",
    "HID_USAGE_SIMULATION_ANTI_TORQUE_CONTROL",
    "HID_USAGE_SIMULATION_AUTOPIOLOT_ENABLE",
    "HID_USAGE_SIMULATION_CHAFF_RELEASE",
    "HID_USAGE_SIMULATION_COLLECTIVE_CONTROL",
    "HID_USAGE_SIMULATION_DIVE_BRAKE",
    "HID_USAGE_SIMULATION_ELECTRONIC_COUNTERMEASURES",
    "HID_USAGE_SIMULATION_ELEVATOR",
    "HID_USAGE_SIMULATION_ELEVATOR_TRIM",
    "HID_USAGE_SIMULATION_RUDDER",
    "HID_USAGE_SIMULATION_THROTTLE",
    "HID_USAGE_SIMULATION_FLIGHT_COMMUNICATIONS",
    "HID_USAGE_SIMULATION_FLARE_RELEASE",
    "HID_USAGE_SIMULATION_LANDING_GEAR",
    "HID_USAGE_SIMULATION_TOE_BRAKE",
    "HID_USAGE_SIMULATION_TRIGGER",
    "HID_USAGE_SIMULATION_WEAPONS_ARM",
    "HID_USAGE_SIMULATION_WEAPONS_SELECT",
    "HID_USAGE_SIMULATION_WING_FLAPS",
    "HID_USAGE_SIMULATION_ACCELLERATOR",
    "HID_USAGE_SIMULATION_BRAKE",
    "HID_USAGE_SIMULATION_CLUTCH",
    "HID_USAGE_SIMULATION_SHIFTER",
    "HID_USAGE_SIMULATION_STEERING",
    "HID_USAGE_SIMULATION_TURRET_DIRECTION",
    "HID_USAGE_SIMULATION_BARREL_ELEVATION",
    "HID_USAGE_SIMULATION_DIVE_PLANE",
    "HID_USAGE_SIMULATION_BALLAST",
    "HID_USAGE_SIMULATION_BICYCLE_CRANK",
    "HID_USAGE_SIMULATION_HANDLE_BARS",
    "HID_USAGE_SIMULATION_FRONT_BRAKE",
    "HID_USAGE_SIMULATION_REAR_BRAKE",
    "HID_USAGE_VR_BELT",
    "HID_USAGE_VR_BODY_SUIT",
    "HID_USAGE_VR_FLEXOR",
    "HID_USAGE_VR_GLOVE",
    "HID_USAGE_VR_HEAD_TRACKER",
    "HID_USAGE_VR_HEAD_MOUNTED_DISPLAY",
    "HID_USAGE_VR_HAND_TRACKER",
    "HID_USAGE_VR_OCULOMETER",
    "HID_USAGE_VR_VEST",
    "HID_USAGE_VR_ANIMATRONIC_DEVICE",
    "HID_USAGE_VR_STEREO_ENABLE",
    "HID_USAGE_VR_DISPLAY_ENABLE",
    "HID_USAGE_SPORT_BASEBALL_BAT",
    "HID_USAGE_SPORT_GOLF_CLUB",
    "HID_USAGE_SPORT_ROWING_MACHINE",
    "HID_USAGE_SPORT_TREADMILL",
    "HID_USAGE_SPORT_STICK_TYPE",
    "HID_USAGE_SPORT_OAR",
    "HID_USAGE_SPORT_SLOPE",
    "HID_USAGE_SPORT_RATE",
    "HID_USAGE_SPORT_STICK_SPEED",
    "HID_USAGE_SPORT_STICK_FACE_ANGLE",
    "HID_USAGE_SPORT_HEEL_TOE",
    "HID_USAGE_SPORT_FOLLOW_THROUGH",
    "HID_USAGE_SPORT_TEMPO",
    "HID_USAGE_SPORT_HEIGHT",
    "HID_USAGE_SPORT_PUTTER",
    "HID_USAGE_SPORT_1_IRON",
    "HID_USAGE_SPORT_2_IRON",
    "HID_USAGE_SPORT_3_IRON",
    "HID_USAGE_SPORT_4_IRON",
    "HID_USAGE_SPORT_5_IRON",
    "HID_USAGE_SPORT_6_IRON",
    "HID_USAGE_SPORT_7_IRON",
    "HID_USAGE_SPORT_8_IRON",
    "HID_USAGE_SPORT_9_IRON",
    "HID_USAGE_SPORT_10_IRON",
    "HID_USAGE_SPORT_11_IRON",
    "HID_USAGE_SPORT_SAND_WEDGE",
    "HID_USAGE_SPORT_LOFT_WEDGE",
    "HID_USAGE_SPORT_POWER_WEDGE",
    "HID_USAGE_SPORT_1_WOOD",
    "HID_USAGE_SPORT_3_WOOD",
    "HID_USAGE_SPORT_5_WOOD",
    "HID_USAGE_SPORT_7_WOOD",
    "HID_USAGE_SPORT_9_WOOD",
    "HID_USAGE_GAME_3D_GAME_CONTROLLER",
    "HID_USAGE_GAME_PINBALL_DEVICE",
    "HID_USAGE_GAME_GUN_DEVICE",
    "HID_USAGE_GAME_POINT_OF_VIEW",
    "HID_USAGE_GAME_GUN_SELECTOR",
    "HID_USAGE_GAME_GAMEPAD_FIRE_JUMP",
    "HID_USAGE_GAME_GAMEPAD_TRIGGER",
    "HID_USAGE_GAME_TURN_RIGHT_LEFT",
    "HID_USAGE_GAME_PITCH_FORWARD_BACK",
    "HID_USAGE_GAME_ROLL_RIGHT_LEFT",
    "HID_USAGE_GAME_MOVE_RIGHT_LEFT",
    "HID_USAGE_GAME_MOVE_FORWARD_BACK",
    "HID_USAGE_GAME_MOVE_UP_DOWN",
    "HID_USAGE_GAME_LEAN_RIGHT_LEFT",
    "HID_USAGE_GAME_LEAN_FORWARD_BACK",
    "HID_USAGE_GAME_POV_HEIGHT",
    "HID_USAGE_GAME_FLIPPER",
    "HID_USAGE_GAME_SECONDARY_FLIPPER",
    "HID_USAGE_GAME_BUMP",
    "HID_USAGE_GAME_NEW_GAME",
    "HID_USAGE_GAME_SHOOT_BALL",
    "HID_USAGE_GAME_PLAYER",
    "HID_USAGE_GAME_GUN_BOLT",
    "HID_USAGE_GAME_GUN_CLIP",
    "HID_USAGE_GAME_GUN_SINGLE_SHOT",
    "HID_USAGE_GAME_GUN_BURST",
    "HID_USAGE_GAME_GUN_AUTOMATIC",
    "HID_USAGE_GAME_GUN_SAFETY",
    "HID_USAGE_GENERIC_DEVICE_BATTERY_STRENGTH",
    "HID_USAGE_GENERIC_DEVICE_WIRELESS_CHANNEL",
    "HID_USAGE_GENERIC_DEVICE_WIRELESS_ID",
    "HID_USAGE_GENERIC_DEVICE_DISCOVER_WIRELESS_CONTROL",
    "HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ENTERED",
    "HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CHAR_ERASED",
    "HID_USAGE_GENERIC_DEVICE_SECURITY_CODE_CLEARED",
    "HID_USAGE_KEYBOARD_NOEVENT",
    "HID_USAGE_KEYBOARD_ROLLOVER",
    "HID_USAGE_KEYBOARD_POSTFAIL",
    "HID_USAGE_KEYBOARD_UNDEFINED",
    "HID_USAGE_KEYBOARD_aA",
    "HID_USAGE_KEYBOARD_zZ",
    "HID_USAGE_KEYBOARD_ONE",
    "HID_USAGE_KEYBOARD_ZERO",
    "HID_USAGE_KEYBOARD_LCTRL",
    "HID_USAGE_KEYBOARD_LSHFT",
    "HID_USAGE_KEYBOARD_LALT",
    "HID_USAGE_KEYBOARD_LGUI",
    "HID_USAGE_KEYBOARD_RCTRL",
    "HID_USAGE_KEYBOARD_RSHFT",
    "HID_USAGE_KEYBOARD_RALT",
    "HID_USAGE_KEYBOARD_RGUI",
    "HID_USAGE_KEYBOARD_SCROLL_LOCK",
    "HID_USAGE_KEYBOARD_NUM_LOCK",
    "HID_USAGE_KEYBOARD_CAPS_LOCK",
    "HID_USAGE_KEYBOARD_F1",
    "HID_USAGE_KEYBOARD_F2",
    "HID_USAGE_KEYBOARD_F3",
    "HID_USAGE_KEYBOARD_F4",
    "HID_USAGE_KEYBOARD_F5",
    "HID_USAGE_KEYBOARD_F6",
    "HID_USAGE_KEYBOARD_F7",
    "HID_USAGE_KEYBOARD_F8",
    "HID_USAGE_KEYBOARD_F9",
    "HID_USAGE_KEYBOARD_F10",
    "HID_USAGE_KEYBOARD_F11",
    "HID_USAGE_KEYBOARD_F12",
    "HID_USAGE_KEYBOARD_F13",
    "HID_USAGE_KEYBOARD_F14",
    "HID_USAGE_KEYBOARD_F15",
    "HID_USAGE_KEYBOARD_F16",
    "HID_USAGE_KEYBOARD_F17",
    "HID_USAGE_KEYBOARD_F18",
    "HID_USAGE_KEYBOARD_F19",
    "HID_USAGE_KEYBOARD_F20",
    "HID_USAGE_KEYBOARD_F21",
    "HID_USAGE_KEYBOARD_F22",
    "HID_USAGE_KEYBOARD_F23",
    "HID_USAGE_KEYBOARD_F24",
    "HID_USAGE_KEYBOARD_RETURN",
    "HID_USAGE_KEYBOARD_ESCAPE",
    "HID_USAGE_KEYBOARD_DELETE",
    "HID_USAGE_KEYBOARD_PRINT_SCREEN",
    "HID_USAGE_KEYBOARD_DELETE_FORWARD",
    "HID_USAGE_LED_NUM_LOCK",
    "HID_USAGE_LED_CAPS_LOCK",
    "HID_USAGE_LED_SCROLL_LOCK",
    "HID_USAGE_LED_COMPOSE",
    "HID_USAGE_LED_KANA",
    "HID_USAGE_LED_POWER",
    "HID_USAGE_LED_SHIFT",
    "HID_USAGE_LED_DO_NOT_DISTURB",
    "HID_USAGE_LED_MUTE",
    "HID_USAGE_LED_TONE_ENABLE",
    "HID_USAGE_LED_HIGH_CUT_FILTER",
    "HID_USAGE_LED_LOW_CUT_FILTER",
    "HID_USAGE_LED_EQUALIZER_ENABLE",
    "HID_USAGE_LED_SOUND_FIELD_ON",
    "HID_USAGE_LED_SURROUND_FIELD_ON",
    "HID_USAGE_LED_REPEAT",
    "HID_USAGE_LED_STEREO",
    "HID_USAGE_LED_SAMPLING_RATE_DETECT",
    "HID_USAGE_LED_SPINNING",
    "HID_USAGE_LED_CAV",
    "HID_USAGE_LED_CLV",
    "HID_USAGE_LED_RECORDING_FORMAT_DET",
    "HID_USAGE_LED_OFF_HOOK",
    "HID_USAGE_LED_RING",
    "HID_USAGE_LED_MESSAGE_WAITING",
    "HID_USAGE_LED_DATA_MODE",
    "HID_USAGE_LED_BATTERY_OPERATION",
    "HID_USAGE_LED_BATTERY_OK",
    "HID_USAGE_LED_BATTERY_LOW",
    "HID_USAGE_LED_SPEAKER",
    "HID_USAGE_LED_HEAD_SET",
    "HID_USAGE_LED_HOLD",
    "HID_USAGE_LED_MICROPHONE",
    "HID_USAGE_LED_COVERAGE",
    "HID_USAGE_LED_NIGHT_MODE",
    "HID_USAGE_LED_SEND_CALLS",
    "HID_USAGE_LED_CALL_PICKUP",
    "HID_USAGE_LED_CONFERENCE",
    "HID_USAGE_LED_STAND_BY",
    "HID_USAGE_LED_CAMERA_ON",
    "HID_USAGE_LED_CAMERA_OFF",
    "HID_USAGE_LED_ON_LINE",
    "HID_USAGE_LED_OFF_LINE",
    "HID_USAGE_LED_BUSY",
    "HID_USAGE_LED_READY",
    "HID_USAGE_LED_PAPER_OUT",
    "HID_USAGE_LED_PAPER_JAM",
    "HID_USAGE_LED_REMOTE",
    "HID_USAGE_LED_FORWARD",
    "HID_USAGE_LED_REVERSE",
    "HID_USAGE_LED_STOP",
    "HID_USAGE_LED_REWIND",
    "HID_USAGE_LED_FAST_FORWARD",
    "HID_USAGE_LED_PLAY",
    "HID_USAGE_LED_PAUSE",
    "HID_USAGE_LED_RECORD",
    "HID_USAGE_LED_ERROR",
    "HID_USAGE_LED_SELECTED_INDICATOR",
    "HID_USAGE_LED_IN_USE_INDICATOR",
    "HID_USAGE_LED_MULTI_MODE_INDICATOR",
    "HID_USAGE_LED_INDICATOR_ON",
    "HID_USAGE_LED_INDICATOR_FLASH",
    "HID_USAGE_LED_INDICATOR_SLOW_BLINK",
    "HID_USAGE_LED_INDICATOR_FAST_BLINK",
    "HID_USAGE_LED_INDICATOR_OFF",
    "HID_USAGE_LED_FLASH_ON_TIME",
    "HID_USAGE_LED_SLOW_BLINK_ON_TIME",
    "HID_USAGE_LED_SLOW_BLINK_OFF_TIME",
    "HID_USAGE_LED_FAST_BLINK_ON_TIME",
    "HID_USAGE_LED_FAST_BLINK_OFF_TIME",
    "HID_USAGE_LED_INDICATOR_COLOR",
    "HID_USAGE_LED_RED",
    "HID_USAGE_LED_GREEN",
    "HID_USAGE_LED_AMBER",
    "HID_USAGE_LED_GENERIC_INDICATOR",
    "HID_USAGE_LED_SYSTEM_SUSPEND",
    "HID_USAGE_LED_EXTERNAL_POWER",
    "HID_USAGE_TELEPHONY_PHONE",
    "HID_USAGE_TELEPHONY_ANSWERING_MACHINE",
    "HID_USAGE_TELEPHONY_MESSAGE_CONTROLS",
    "HID_USAGE_TELEPHONY_HANDSET",
    "HID_USAGE_TELEPHONY_HEADSET",
    "HID_USAGE_TELEPHONY_KEYPAD",
    "HID_USAGE_TELEPHONY_PROGRAMMABLE_BUTTON",
    "HID_USAGE_TELEPHONY_REDIAL",
    "HID_USAGE_TELEPHONY_TRANSFER",
    "HID_USAGE_TELEPHONY_DROP",
    "HID_USAGE_TELEPHONY_LINE",
    "HID_USAGE_TELEPHONY_RING_ENABLE",
    "HID_USAGE_TELEPHONY_SEND",
    "HID_USAGE_TELEPHONY_KEYPAD_0",
    "HID_USAGE_TELEPHONY_KEYPAD_D",
    "HID_USAGE_TELEPHONY_HOST_AVAILABLE",
    "HID_USAGE_CONSUMERCTRL",
    "HID_USAGE_CONSUMER_CHANNEL_INCREMENT",
    "HID_USAGE_CONSUMER_CHANNEL_DECREMENT",
    "HID_USAGE_CONSUMER_PLAY",
    "HID_USAGE_CONSUMER_PAUSE",
    "HID_USAGE_CONSUMER_RECORD",
    "HID_USAGE_CONSUMER_FAST_FORWARD",
    "HID_USAGE_CONSUMER_REWIND",
    "HID_USAGE_CONSUMER_SCAN_NEXT_TRACK",
    "HID_USAGE_CONSUMER_SCAN_PREV_TRACK",
    "HID_USAGE_CONSUMER_STOP",
    "HID_USAGE_CONSUMER_PLAY_PAUSE",
    "HID_USAGE_CONSUMER_GAMEDVR_OPEN_GAMEBAR",
    "HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_RECORD",
    "HID_USAGE_CONSUMER_GAMEDVR_RECORD_CLIP",
    "HID_USAGE_CONSUMER_GAMEDVR_SCREENSHOT",
    "HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_INDICATOR",
    "HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_MICROPHONE",
    "HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_CAMERA",
    "HID_USAGE_CONSUMER_GAMEDVR_TOGGLE_BROADCAST",
    "HID_USAGE_CONSUMER_VOLUME",
    "HID_USAGE_CONSUMER_BALANCE",
    "HID_USAGE_CONSUMER_MUTE",
    "HID_USAGE_CONSUMER_BASS",
    "HID_USAGE_CONSUMER_TREBLE",
    "HID_USAGE_CONSUMER_BASS_BOOST",
    "HID_USAGE_CONSUMER_SURROUND_MODE",
    "HID_USAGE_CONSUMER_LOUDNESS",
    "HID_USAGE_CONSUMER_MPX",
    "HID_USAGE_CONSUMER_VOLUME_INCREMENT",
    "HID_USAGE_CONSUMER_VOLUME_DECREMENT",
    "HID_USAGE_CONSUMER_BASS_INCREMENT",
    "HID_USAGE_CONSUMER_BASS_DECREMENT",
    "HID_USAGE_CONSUMER_TREBLE_INCREMENT",
    "HID_USAGE_CONSUMER_TREBLE_DECREMENT",
    "HID_USAGE_CONSUMER_AL_CONFIGURATION",
    "HID_USAGE_CONSUMER_AL_EMAIL",
    "HID_USAGE_CONSUMER_AL_CALCULATOR",
    "HID_USAGE_CONSUMER_AL_BROWSER",
    "HID_USAGE_CONSUMER_AL_SEARCH",
    "HID_USAGE_CONSUMER_AC_SEARCH",
    "HID_USAGE_CONSUMER_AC_GOTO",
    "HID_USAGE_CONSUMER_AC_HOME",
    "HID_USAGE_CONSUMER_AC_BACK",
    "HID_USAGE_CONSUMER_AC_FORWARD",
    "HID_USAGE_CONSUMER_AC_STOP",
    "HID_USAGE_CONSUMER_AC_REFRESH",
    "HID_USAGE_CONSUMER_AC_PREVIOUS",
    "HID_USAGE_CONSUMER_AC_NEXT",
    "HID_USAGE_CONSUMER_AC_BOOKMARKS",
    "HID_USAGE_CONSUMER_AC_PAN",
    "HID_USAGE_CONSUMER_EXTENDED_KEYBOARD_ATTRIBUTES_COLLECTION",
    "HID_USAGE_CONSUMER_KEYBOARD_FORM_FACTOR",
    "HID_USAGE_CONSUMER_KEYBOARD_KEY_TYPE",
    "HID_USAGE_CONSUMER_KEYBOARD_PHYSICAL_LAYOUT",
    "HID_USAGE_CONSUMER_VENDOR_SPECIFIC_KEYBOARD_PHYSICAL_LAYOUT",
    "HID_USAGE_CONSUMER_KEYBOARD_IETF_LANGUAGE_TAG_INDEX",
    "HID_USAGE_CONSUMER_IMPLEMENTED_KEYBOARD_INPUT_ASSIST_CONTROLS",
    "HID_USAGE_DIGITIZER_DIGITIZER",
    "HID_USAGE_DIGITIZER_PEN",
    "HID_USAGE_DIGITIZER_LIGHT_PEN",
    "HID_USAGE_DIGITIZER_TOUCH_SCREEN",
    "HID_USAGE_DIGITIZER_TOUCH_PAD",
    "HID_USAGE_DIGITIZER_WHITE_BOARD",
    "HID_USAGE_DIGITIZER_COORD_MEASURING",
    "HID_USAGE_DIGITIZER_3D_DIGITIZER",
    "HID_USAGE_DIGITIZER_STEREO_PLOTTER",
    "HID_USAGE_DIGITIZER_ARTICULATED_ARM",
    "HID_USAGE_DIGITIZER_ARMATURE",
    "HID_USAGE_DIGITIZER_MULTI_POINT",
    "HID_USAGE_DIGITIZER_FREE_SPACE_WAND",
    "HID_USAGE_DIGITIZER_HEAT_MAP",
    "HID_USAGE_DIGITIZER_STYLUS",
    "HID_USAGE_DIGITIZER_PUCK",
    "HID_USAGE_DIGITIZER_FINGER",
    "HID_USAGE_DIGITIZER_TABLET_FUNC_KEYS",
    "HID_USAGE_DIGITIZER_PROG_CHANGE_KEYS",
    "HID_USAGE_DIGITIZER_TIP_PRESSURE",
    "HID_USAGE_DIGITIZER_BARREL_PRESSURE",
    "HID_USAGE_DIGITIZER_IN_RANGE",
    "HID_USAGE_DIGITIZER_TOUCH",
    "HID_USAGE_DIGITIZER_UNTOUCH",
    "HID_USAGE_DIGITIZER_TAP",
    "HID_USAGE_DIGITIZER_QUALITY",
    "HID_USAGE_DIGITIZER_DATA_VALID",
    "HID_USAGE_DIGITIZER_TRANSDUCER_INDEX",
    "HID_USAGE_DIGITIZER_BATTERY_STRENGTH",
    "HID_USAGE_DIGITIZER_INVERT",
    "HID_USAGE_DIGITIZER_X_TILT",
    "HID_USAGE_DIGITIZER_Y_TILT",
    "HID_USAGE_DIGITIZER_AZIMUTH",
    "HID_USAGE_DIGITIZER_ALTITUDE",
    "HID_USAGE_DIGITIZER_TWIST",
    "HID_USAGE_DIGITIZER_TIP_SWITCH",
    "HID_USAGE_DIGITIZER_SECONDARY_TIP_SWITCH",
    "HID_USAGE_DIGITIZER_BARREL_SWITCH",
    "HID_USAGE_DIGITIZER_ERASER",
    "HID_USAGE_DIGITIZER_TABLET_PICK",
    "HID_USAGE_DIGITIZER_TRANSDUCER_SERIAL",
    "HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VENDOR_ID",
    "HID_USAGE_DIGITIZER_HEAT_MAP_PROTOCOL_VERSION",
    "HID_USAGE_DIGITIZER_HEAT_MAP_FRAME_DATA",
    "HID_USAGE_DIGITIZER_TRANSDUCER_VENDOR",
    "HID_USAGE_DIGITIZER_TRANSDUCER_PRODUCT",
    "HID_USAGE_DIGITIZER_TRANSDUCER_CONNECTED",
    "HID_USAGE_HAPTICS_SIMPLE_CONTROLLER",
    "HID_USAGE_HAPTICS_WAVEFORM_LIST",
    "HID_USAGE_HAPTICS_DURATION_LIST",
    "HID_USAGE_HAPTICS_AUTO_TRIGGER",
    "HID_USAGE_HAPTICS_MANUAL_TRIGGER",
    "HID_USAGE_HAPTICS_AUTO_ASSOCIATED_CONTROL",
    "HID_USAGE_HAPTICS_INTENSITY",
    "HID_USAGE_HAPTICS_REPEAT_COUNT",
    "HID_USAGE_HAPTICS_RETRIGGER_PERIOD",
    "HID_USAGE_HAPTICS_WAVEFORM_VENDOR_PAGE",
    "HID_USAGE_HAPTICS_WAVEFORM_VENDOR_ID",
    "HID_USAGE_HAPTICS_WAVEFORM_CUTOFF_TIME",
    "HID_USAGE_HAPTICS_WAVEFORM_BEGIN",
    "HID_USAGE_HAPTICS_WAVEFORM_STOP",
    "HID_USAGE_HAPTICS_WAVEFORM_NULL",
    "HID_USAGE_HAPTICS_WAVEFORM_CLICK",
    "HID_USAGE_HAPTICS_WAVEFORM_BUZZ",
    "HID_USAGE_HAPTICS_WAVEFORM_RUMBLE",
    "HID_USAGE_HAPTICS_WAVEFORM_PRESS",
    "HID_USAGE_HAPTICS_WAVEFORM_RELEASE",
    "HID_USAGE_HAPTICS_WAVEFORM_END",
    "HID_USAGE_HAPTICS_WAVEFORM_VENDOR_BEGIN",
    "HID_USAGE_HAPTICS_WAVEFORM_VENDOR_END",
    "HID_USAGE_ALPHANUMERIC_ALPHANUMERIC_DISPLAY",
    "HID_USAGE_ALPHANUMERIC_BITMAPPED_DISPLAY",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_ATTRIBUTES_REPORT",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_CONTROL_REPORT",
    "HID_USAGE_ALPHANUMERIC_CHARACTER_REPORT",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_STATUS",
    "HID_USAGE_ALPHANUMERIC_CURSOR_POSITION_REPORT",
    "HID_USAGE_ALPHANUMERIC_FONT_REPORT",
    "HID_USAGE_ALPHANUMERIC_FONT_DATA",
    "HID_USAGE_ALPHANUMERIC_CHARACTER_ATTRIBUTE",
    "HID_USAGE_ALPHANUMERIC_PALETTE_REPORT",
    "HID_USAGE_ALPHANUMERIC_PALETTE_DATA",
    "HID_USAGE_ALPHANUMERIC_BLIT_REPORT",
    "HID_USAGE_ALPHANUMERIC_BLIT_DATA",
    "HID_USAGE_ALPHANUMERIC_SOFT_BUTTON",
    "HID_USAGE_ALPHANUMERIC_ASCII_CHARACTER_SET",
    "HID_USAGE_ALPHANUMERIC_DATA_READ_BACK",
    "HID_USAGE_ALPHANUMERIC_FONT_READ_BACK",
    "HID_USAGE_ALPHANUMERIC_CLEAR_DISPLAY",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_ENABLE",
    "HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_DELAY",
    "HID_USAGE_ALPHANUMERIC_SCREEN_SAVER_ENABLE",
    "HID_USAGE_ALPHANUMERIC_VERTICAL_SCROLL",
    "HID_USAGE_ALPHANUMERIC_HORIZONTAL_SCROLL",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_DATA",
    "HID_USAGE_ALPHANUMERIC_STATUS_NOT_READY",
    "HID_USAGE_ALPHANUMERIC_STATUS_READY",
    "HID_USAGE_ALPHANUMERIC_ERR_NOT_A_LOADABLE_CHARACTER",
    "HID_USAGE_ALPHANUMERIC_ERR_FONT_DATA_CANNOT_BE_READ",
    "HID_USAGE_ALPHANUMERIC_ROW",
    "HID_USAGE_ALPHANUMERIC_COLUMN",
    "HID_USAGE_ALPHANUMERIC_ROWS",
    "HID_USAGE_ALPHANUMERIC_COLUMNS",
    "HID_USAGE_ALPHANUMERIC_CURSOR_PIXEL_POSITIONING",
    "HID_USAGE_ALPHANUMERIC_CURSOR_MODE",
    "HID_USAGE_ALPHANUMERIC_CURSOR_ENABLE",
    "HID_USAGE_ALPHANUMERIC_CURSOR_BLINK",
    "HID_USAGE_ALPHANUMERIC_CHAR_WIDTH",
    "HID_USAGE_ALPHANUMERIC_CHAR_HEIGHT",
    "HID_USAGE_ALPHANUMERIC_CHAR_SPACING_HORIZONTAL",
    "HID_USAGE_ALPHANUMERIC_CHAR_SPACING_VERTICAL",
    "HID_USAGE_ALPHANUMERIC_UNICODE_CHAR_SET",
    "HID_USAGE_ALPHANUMERIC_FONT_7_SEGMENT",
    "HID_USAGE_ALPHANUMERIC_7_SEGMENT_DIRECT_MAP",
    "HID_USAGE_ALPHANUMERIC_FONT_14_SEGMENT",
    "HID_USAGE_ALPHANUMERIC_14_SEGMENT_DIRECT_MAP",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_BRIGHTNESS",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_CONTRAST",
    "HID_USAGE_ALPHANUMERIC_ATTRIBUTE_READBACK",
    "HID_USAGE_ALPHANUMERIC_ATTRIBUTE_DATA",
    "HID_USAGE_ALPHANUMERIC_CHAR_ATTR_ENHANCE",
    "HID_USAGE_ALPHANUMERIC_CHAR_ATTR_UNDERLINE",
    "HID_USAGE_ALPHANUMERIC_CHAR_ATTR_BLINK",
    "HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_X",
    "HID_USAGE_ALPHANUMERIC_BITMAP_SIZE_Y",
    "HID_USAGE_ALPHANUMERIC_BIT_DEPTH_FORMAT",
    "HID_USAGE_ALPHANUMERIC_DISPLAY_ORIENTATION",
    "HID_USAGE_ALPHANUMERIC_PALETTE_DATA_SIZE",
    "HID_USAGE_ALPHANUMERIC_PALETTE_DATA_OFFSET",
    "HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X1",
    "HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y1",
    "HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_X2",
    "HID_USAGE_ALPHANUMERIC_BLIT_RECTANGLE_Y2",
    "HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_ID",
    "HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_SIDE",
    "HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET1",
    "HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_OFFSET2",
    "HID_USAGE_ALPHANUMERIC_SOFT_BUTTON_REPORT",
    "HID_USAGE_LAMPARRAY",
    "HID_USAGE_LAMPARRAY_ATTRBIUTES_REPORT",
    "HID_USAGE_LAMPARRAY_LAMP_COUNT",
    "HID_USAGE_LAMPARRAY_BOUNDING_BOX_WIDTH_IN_MICROMETERS",
    "HID_USAGE_LAMPARRAY_BOUNDING_BOX_HEIGHT_IN_MICROMETERS",
    "HID_USAGE_LAMPARRAY_BOUNDING_BOX_DEPTH_IN_MICROMETERS",
    "HID_USAGE_LAMPARRAY_KIND",
    "HID_USAGE_LAMPARRAY_MIN_UPDATE_INTERVAL_IN_MICROSECONDS",
    "HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_REQUEST_REPORT",
    "HID_USAGE_LAMPARRAY_LAMP_ID",
    "HID_USAGE_LAMPARRAY_LAMP_ATTRIBUTES_RESPONSE_REPORT",
    "HID_USAGE_LAMPARRAY_POSITION_X_IN_MICROMETERS",
    "HID_USAGE_LAMPARRAY_POSITION_Y_IN_MICROMETERS",
    "HID_USAGE_LAMPARRAY_POSITION_Z_IN_MICROMETERS",
    "HID_USAGE_LAMPARRAY_LAMP_PURPOSES",
    "HID_USAGE_LAMPARRAY_UPDATE_LATENCY_IN_MICROSECONDS",
    "HID_USAGE_LAMPARRAY_RED_LEVEL_COUNT",
    "HID_USAGE_LAMPARRAY_GREEN_LEVEL_COUNT",
    "HID_USAGE_LAMPARRAY_BLUE_LEVEL_COUNT",
    "HID_USAGE_LAMPARRAY_INTENSITY_LEVEL_COUNT",
    "HID_USAGE_LAMPARRAY_IS_PROGRAMMABLE",
    "HID_USAGE_LAMPARRAY_INPUT_BINDING",
    "HID_USAGE_LAMPARRAY_LAMP_MULTI_UPDATE_REPORT",
    "HID_USAGE_LAMPARRAY_LAMP_RED_UPDATE_CHANNEL",
    "HID_USAGE_LAMPARRAY_LAMP_GREEN_UPDATE_CHANNEL",
    "HID_USAGE_LAMPARRAY_LAMP_BLUE_UPDATE_CHANNEL",
    "HID_USAGE_LAMPARRAY_LAMP_INTENSITY_UPDATE_CHANNEL",
    "HID_USAGE_LAMPARRAY_LAMP_UPDATE_FLAGS",
    "HID_USAGE_LAMPARRAY_LAMP_RANGE_UPDATE_REPORT",
    "HID_USAGE_LAMPARRAY_LAMP_ID_START",
    "HID_USAGE_LAMPARRAY_LAMP_ID_END",
    "HID_USAGE_LAMPARRAY_CONTROL_REPORT",
    "HID_USAGE_LAMPARRAY_AUTONOMOUS_MODE",
    "HID_USAGE_CAMERA_AUTO_FOCUS",
    "HID_USAGE_CAMERA_SHUTTER",
    "HID_USAGE_MS_BTH_HF_DIALNUMBER",
    "HID_USAGE_MS_BTH_HF_DIALMEMORY",
    "IOCTL_KEYBOARD_QUERY_ATTRIBUTES",
    "IOCTL_KEYBOARD_SET_TYPEMATIC",
    "IOCTL_KEYBOARD_SET_INDICATORS",
    "IOCTL_KEYBOARD_QUERY_TYPEMATIC",
    "IOCTL_KEYBOARD_QUERY_INDICATORS",
    "IOCTL_KEYBOARD_QUERY_INDICATOR_TRANSLATION",
    "IOCTL_KEYBOARD_INSERT_DATA",
    "IOCTL_KEYBOARD_QUERY_EXTENDED_ATTRIBUTES",
    "IOCTL_KEYBOARD_QUERY_IME_STATUS",
    "IOCTL_KEYBOARD_SET_IME_STATUS",
    "GUID_DEVINTERFACE_KEYBOARD",
    "KEYBOARD_OVERRUN_MAKE_CODE",
    "KEY_MAKE",
    "KEY_BREAK",
    "KEY_E0",
    "KEY_E1",
    "KEY_TERMSRV_SET_LED",
    "KEY_TERMSRV_SHADOW",
    "KEY_TERMSRV_VKPACKET",
    "KEY_RIM_VKEY",
    "KEY_FROM_KEYBOARD_OVERRIDER",
    "KEY_UNICODE_SEQUENCE_ITEM",
    "KEY_UNICODE_SEQUENCE_END",
    "KEYBOARD_EXTENDED_ATTRIBUTES_STRUCT_VERSION_1",
    "KEYBOARD_LED_INJECTED",
    "KEYBOARD_SHADOW",
    "KEYBOARD_KANA_LOCK_ON",
    "KEYBOARD_CAPS_LOCK_ON",
    "KEYBOARD_NUM_LOCK_ON",
    "KEYBOARD_SCROLL_LOCK_ON",
    "KEYBOARD_ERROR_VALUE_BASE",
    "IOCTL_MOUSE_QUERY_ATTRIBUTES",
    "IOCTL_MOUSE_INSERT_DATA",
    "GUID_DEVINTERFACE_MOUSE",
    "MOUSE_LEFT_BUTTON_DOWN",
    "MOUSE_LEFT_BUTTON_UP",
    "MOUSE_RIGHT_BUTTON_DOWN",
    "MOUSE_RIGHT_BUTTON_UP",
    "MOUSE_MIDDLE_BUTTON_DOWN",
    "MOUSE_MIDDLE_BUTTON_UP",
    "MOUSE_BUTTON_1_DOWN",
    "MOUSE_BUTTON_1_UP",
    "MOUSE_BUTTON_2_DOWN",
    "MOUSE_BUTTON_2_UP",
    "MOUSE_BUTTON_3_DOWN",
    "MOUSE_BUTTON_3_UP",
    "MOUSE_BUTTON_4_DOWN",
    "MOUSE_BUTTON_4_UP",
    "MOUSE_BUTTON_5_DOWN",
    "MOUSE_BUTTON_5_UP",
    "MOUSE_WHEEL",
    "MOUSE_HWHEEL",
    "MOUSE_MOVE_RELATIVE",
    "MOUSE_MOVE_ABSOLUTE",
    "MOUSE_VIRTUAL_DESKTOP",
    "MOUSE_ATTRIBUTES_CHANGED",
    "MOUSE_MOVE_NOCOALESCE",
    "MOUSE_TERMSRV_SRC_SHADOW",
    "MOUSE_INPORT_HARDWARE",
    "MOUSE_I8042_HARDWARE",
    "MOUSE_SERIAL_HARDWARE",
    "BALLPOINT_I8042_HARDWARE",
    "BALLPOINT_SERIAL_HARDWARE",
    "WHEELMOUSE_I8042_HARDWARE",
    "WHEELMOUSE_SERIAL_HARDWARE",
    "MOUSE_HID_HARDWARE",
    "WHEELMOUSE_HID_HARDWARE",
    "HORIZONTAL_WHEEL_PRESENT",
    "MOUSE_ERROR_VALUE_BASE",
    "DIRECTINPUT_HEADER_VERSION",
    "CLSID_DirectInput",
    "CLSID_DirectInputDevice",
    "CLSID_DirectInput8",
    "CLSID_DirectInputDevice8",
    "GUID_XAxis",
    "GUID_YAxis",
    "GUID_ZAxis",
    "GUID_RxAxis",
    "GUID_RyAxis",
    "GUID_RzAxis",
    "GUID_Slider",
    "GUID_Button",
    "GUID_Key",
    "GUID_POV",
    "GUID_Unknown",
    "GUID_SysMouse",
    "GUID_SysKeyboard",
    "GUID_Joystick",
    "GUID_SysMouseEm",
    "GUID_SysMouseEm2",
    "GUID_SysKeyboardEm",
    "GUID_SysKeyboardEm2",
    "GUID_ConstantForce",
    "GUID_RampForce",
    "GUID_Square",
    "GUID_Sine",
    "GUID_Triangle",
    "GUID_SawtoothUp",
    "GUID_SawtoothDown",
    "GUID_Spring",
    "GUID_Damper",
    "GUID_Inertia",
    "GUID_Friction",
    "GUID_CustomForce",
    "DIEFT_ALL",
    "DIEFT_CONSTANTFORCE",
    "DIEFT_RAMPFORCE",
    "DIEFT_PERIODIC",
    "DIEFT_CONDITION",
    "DIEFT_CUSTOMFORCE",
    "DIEFT_HARDWARE",
    "DIEFT_FFATTACK",
    "DIEFT_FFFADE",
    "DIEFT_SATURATION",
    "DIEFT_POSNEGCOEFFICIENTS",
    "DIEFT_POSNEGSATURATION",
    "DIEFT_DEADBAND",
    "DIEFT_STARTDELAY",
    "DI_DEGREES",
    "DI_FFNOMINALMAX",
    "DI_SECONDS",
    "DIEFF_OBJECTIDS",
    "DIEFF_OBJECTOFFSETS",
    "DIEFF_CARTESIAN",
    "DIEFF_POLAR",
    "DIEFF_SPHERICAL",
    "DIEP_DURATION",
    "DIEP_SAMPLEPERIOD",
    "DIEP_GAIN",
    "DIEP_TRIGGERBUTTON",
    "DIEP_TRIGGERREPEATINTERVAL",
    "DIEP_AXES",
    "DIEP_DIRECTION",
    "DIEP_ENVELOPE",
    "DIEP_TYPESPECIFICPARAMS",
    "DIEP_STARTDELAY",
    "DIEP_ALLPARAMS_DX5",
    "DIEP_ALLPARAMS",
    "DIEP_START",
    "DIEP_NORESTART",
    "DIEP_NODOWNLOAD",
    "DIEB_NOTRIGGER",
    "DIES_SOLO",
    "DIES_NODOWNLOAD",
    "DIEGES_PLAYING",
    "DIEGES_EMULATED",
    "DIDEVTYPE_DEVICE",
    "DIDEVTYPE_MOUSE",
    "DIDEVTYPE_KEYBOARD",
    "DIDEVTYPE_JOYSTICK",
    "DI8DEVCLASS_ALL",
    "DI8DEVCLASS_DEVICE",
    "DI8DEVCLASS_POINTER",
    "DI8DEVCLASS_KEYBOARD",
    "DI8DEVCLASS_GAMECTRL",
    "DI8DEVTYPE_DEVICE",
    "DI8DEVTYPE_MOUSE",
    "DI8DEVTYPE_KEYBOARD",
    "DI8DEVTYPE_JOYSTICK",
    "DI8DEVTYPE_GAMEPAD",
    "DI8DEVTYPE_DRIVING",
    "DI8DEVTYPE_FLIGHT",
    "DI8DEVTYPE_1STPERSON",
    "DI8DEVTYPE_DEVICECTRL",
    "DI8DEVTYPE_SCREENPOINTER",
    "DI8DEVTYPE_REMOTE",
    "DI8DEVTYPE_SUPPLEMENTAL",
    "DIDEVTYPE_HID",
    "DIDEVTYPEMOUSE_UNKNOWN",
    "DIDEVTYPEMOUSE_TRADITIONAL",
    "DIDEVTYPEMOUSE_FINGERSTICK",
    "DIDEVTYPEMOUSE_TOUCHPAD",
    "DIDEVTYPEMOUSE_TRACKBALL",
    "DIDEVTYPEKEYBOARD_UNKNOWN",
    "DIDEVTYPEKEYBOARD_PCXT",
    "DIDEVTYPEKEYBOARD_OLIVETTI",
    "DIDEVTYPEKEYBOARD_PCAT",
    "DIDEVTYPEKEYBOARD_PCENH",
    "DIDEVTYPEKEYBOARD_NOKIA1050",
    "DIDEVTYPEKEYBOARD_NOKIA9140",
    "DIDEVTYPEKEYBOARD_NEC98",
    "DIDEVTYPEKEYBOARD_NEC98LAPTOP",
    "DIDEVTYPEKEYBOARD_NEC98106",
    "DIDEVTYPEKEYBOARD_JAPAN106",
    "DIDEVTYPEKEYBOARD_JAPANAX",
    "DIDEVTYPEKEYBOARD_J3100",
    "DIDEVTYPEJOYSTICK_UNKNOWN",
    "DIDEVTYPEJOYSTICK_TRADITIONAL",
    "DIDEVTYPEJOYSTICK_FLIGHTSTICK",
    "DIDEVTYPEJOYSTICK_GAMEPAD",
    "DIDEVTYPEJOYSTICK_RUDDER",
    "DIDEVTYPEJOYSTICK_WHEEL",
    "DIDEVTYPEJOYSTICK_HEADTRACKER",
    "DI8DEVTYPEMOUSE_UNKNOWN",
    "DI8DEVTYPEMOUSE_TRADITIONAL",
    "DI8DEVTYPEMOUSE_FINGERSTICK",
    "DI8DEVTYPEMOUSE_TOUCHPAD",
    "DI8DEVTYPEMOUSE_TRACKBALL",
    "DI8DEVTYPEMOUSE_ABSOLUTE",
    "DI8DEVTYPEKEYBOARD_UNKNOWN",
    "DI8DEVTYPEKEYBOARD_PCXT",
    "DI8DEVTYPEKEYBOARD_OLIVETTI",
    "DI8DEVTYPEKEYBOARD_PCAT",
    "DI8DEVTYPEKEYBOARD_PCENH",
    "DI8DEVTYPEKEYBOARD_NOKIA1050",
    "DI8DEVTYPEKEYBOARD_NOKIA9140",
    "DI8DEVTYPEKEYBOARD_NEC98",
    "DI8DEVTYPEKEYBOARD_NEC98LAPTOP",
    "DI8DEVTYPEKEYBOARD_NEC98106",
    "DI8DEVTYPEKEYBOARD_JAPAN106",
    "DI8DEVTYPEKEYBOARD_JAPANAX",
    "DI8DEVTYPEKEYBOARD_J3100",
    "DI8DEVTYPE_LIMITEDGAMESUBTYPE",
    "DI8DEVTYPEJOYSTICK_LIMITED",
    "DI8DEVTYPEJOYSTICK_STANDARD",
    "DI8DEVTYPEGAMEPAD_LIMITED",
    "DI8DEVTYPEGAMEPAD_STANDARD",
    "DI8DEVTYPEGAMEPAD_TILT",
    "DI8DEVTYPEDRIVING_LIMITED",
    "DI8DEVTYPEDRIVING_COMBINEDPEDALS",
    "DI8DEVTYPEDRIVING_DUALPEDALS",
    "DI8DEVTYPEDRIVING_THREEPEDALS",
    "DI8DEVTYPEDRIVING_HANDHELD",
    "DI8DEVTYPEFLIGHT_LIMITED",
    "DI8DEVTYPEFLIGHT_STICK",
    "DI8DEVTYPEFLIGHT_YOKE",
    "DI8DEVTYPEFLIGHT_RC",
    "DI8DEVTYPE1STPERSON_LIMITED",
    "DI8DEVTYPE1STPERSON_UNKNOWN",
    "DI8DEVTYPE1STPERSON_SIXDOF",
    "DI8DEVTYPE1STPERSON_SHOOTER",
    "DI8DEVTYPESCREENPTR_UNKNOWN",
    "DI8DEVTYPESCREENPTR_LIGHTGUN",
    "DI8DEVTYPESCREENPTR_LIGHTPEN",
    "DI8DEVTYPESCREENPTR_TOUCH",
    "DI8DEVTYPEREMOTE_UNKNOWN",
    "DI8DEVTYPEDEVICECTRL_UNKNOWN",
    "DI8DEVTYPEDEVICECTRL_COMMSSELECTION",
    "DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED",
    "DI8DEVTYPESUPPLEMENTAL_UNKNOWN",
    "DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER",
    "DI8DEVTYPESUPPLEMENTAL_HEADTRACKER",
    "DI8DEVTYPESUPPLEMENTAL_HANDTRACKER",
    "DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE",
    "DI8DEVTYPESUPPLEMENTAL_SHIFTER",
    "DI8DEVTYPESUPPLEMENTAL_THROTTLE",
    "DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE",
    "DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS",
    "DI8DEVTYPESUPPLEMENTAL_DUALPEDALS",
    "DI8DEVTYPESUPPLEMENTAL_THREEPEDALS",
    "DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS",
    "DIDC_ATTACHED",
    "DIDC_POLLEDDEVICE",
    "DIDC_EMULATED",
    "DIDC_POLLEDDATAFORMAT",
    "DIDC_FORCEFEEDBACK",
    "DIDC_FFATTACK",
    "DIDC_FFFADE",
    "DIDC_SATURATION",
    "DIDC_POSNEGCOEFFICIENTS",
    "DIDC_POSNEGSATURATION",
    "DIDC_DEADBAND",
    "DIDC_STARTDELAY",
    "DIDC_ALIAS",
    "DIDC_PHANTOM",
    "DIDC_HIDDEN",
    "DIDFT_ALL",
    "DIDFT_RELAXIS",
    "DIDFT_ABSAXIS",
    "DIDFT_AXIS",
    "DIDFT_PSHBUTTON",
    "DIDFT_TGLBUTTON",
    "DIDFT_BUTTON",
    "DIDFT_POV",
    "DIDFT_COLLECTION",
    "DIDFT_NODATA",
    "DIDFT_ANYINSTANCE",
    "DIDFT_INSTANCEMASK",
    "DIDFT_FFACTUATOR",
    "DIDFT_FFEFFECTTRIGGER",
    "DIDFT_OUTPUT",
    "DIDFT_VENDORDEFINED",
    "DIDFT_ALIAS",
    "DIDFT_NOCOLLECTION",
    "DIDF_ABSAXIS",
    "DIDF_RELAXIS",
    "DIA_FORCEFEEDBACK",
    "DIA_APPMAPPED",
    "DIA_APPNOMAP",
    "DIA_NORANGE",
    "DIA_APPFIXED",
    "DIAH_UNMAPPED",
    "DIAH_USERCONFIG",
    "DIAH_APPREQUESTED",
    "DIAH_HWAPP",
    "DIAH_HWDEFAULT",
    "DIAH_DEFAULT",
    "DIAH_ERROR",
    "DIAFTS_NEWDEVICELOW",
    "DIAFTS_NEWDEVICEHIGH",
    "DIAFTS_UNUSEDDEVICELOW",
    "DIAFTS_UNUSEDDEVICEHIGH",
    "DIDBAM_DEFAULT",
    "DIDBAM_PRESERVE",
    "DIDBAM_INITIALIZE",
    "DIDBAM_HWDEFAULTS",
    "DIDSAM_DEFAULT",
    "DIDSAM_NOUSER",
    "DIDSAM_FORCESAVE",
    "DICD_DEFAULT",
    "DICD_EDIT",
    "DIDIFT_CONFIGURATION",
    "DIDIFT_OVERLAY",
    "DIDAL_CENTERED",
    "DIDAL_LEFTALIGNED",
    "DIDAL_RIGHTALIGNED",
    "DIDAL_MIDDLE",
    "DIDAL_TOPALIGNED",
    "DIDAL_BOTTOMALIGNED",
    "DIDOI_FFACTUATOR",
    "DIDOI_FFEFFECTTRIGGER",
    "DIDOI_POLLED",
    "DIDOI_ASPECTPOSITION",
    "DIDOI_ASPECTVELOCITY",
    "DIDOI_ASPECTACCEL",
    "DIDOI_ASPECTFORCE",
    "DIDOI_ASPECTMASK",
    "DIDOI_GUIDISUSAGE",
    "DIPH_DEVICE",
    "DIPH_BYOFFSET",
    "DIPH_BYID",
    "DIPH_BYUSAGE",
    "MAXCPOINTSNUM",
    "DIPROPAXISMODE_ABS",
    "DIPROPAXISMODE_REL",
    "DIPROPAUTOCENTER_OFF",
    "DIPROPAUTOCENTER_ON",
    "DIPROPCALIBRATIONMODE_COOKED",
    "DIPROPCALIBRATIONMODE_RAW",
    "DIGDD_PEEK",
    "DISCL_EXCLUSIVE",
    "DISCL_NONEXCLUSIVE",
    "DISCL_FOREGROUND",
    "DISCL_BACKGROUND",
    "DISCL_NOWINKEY",
    "DISFFC_RESET",
    "DISFFC_STOPALL",
    "DISFFC_PAUSE",
    "DISFFC_CONTINUE",
    "DISFFC_SETACTUATORSON",
    "DISFFC_SETACTUATORSOFF",
    "DIGFFS_EMPTY",
    "DIGFFS_STOPPED",
    "DIGFFS_PAUSED",
    "DIGFFS_ACTUATORSON",
    "DIGFFS_ACTUATORSOFF",
    "DIGFFS_POWERON",
    "DIGFFS_POWEROFF",
    "DIGFFS_SAFETYSWITCHON",
    "DIGFFS_SAFETYSWITCHOFF",
    "DIGFFS_USERFFSWITCHON",
    "DIGFFS_USERFFSWITCHOFF",
    "DIGFFS_DEVICELOST",
    "DISDD_CONTINUE",
    "DIFEF_DEFAULT",
    "DIFEF_INCLUDENONSTANDARD",
    "DIFEF_MODIFYIFNEEDED",
    "DIK_ESCAPE",
    "DIK_1",
    "DIK_2",
    "DIK_3",
    "DIK_4",
    "DIK_5",
    "DIK_6",
    "DIK_7",
    "DIK_8",
    "DIK_9",
    "DIK_0",
    "DIK_MINUS",
    "DIK_EQUALS",
    "DIK_BACK",
    "DIK_TAB",
    "DIK_Q",
    "DIK_W",
    "DIK_E",
    "DIK_R",
    "DIK_T",
    "DIK_Y",
    "DIK_U",
    "DIK_I",
    "DIK_O",
    "DIK_P",
    "DIK_LBRACKET",
    "DIK_RBRACKET",
    "DIK_RETURN",
    "DIK_LCONTROL",
    "DIK_A",
    "DIK_S",
    "DIK_D",
    "DIK_F",
    "DIK_G",
    "DIK_H",
    "DIK_J",
    "DIK_K",
    "DIK_L",
    "DIK_SEMICOLON",
    "DIK_APOSTROPHE",
    "DIK_GRAVE",
    "DIK_LSHIFT",
    "DIK_BACKSLASH",
    "DIK_Z",
    "DIK_X",
    "DIK_C",
    "DIK_V",
    "DIK_B",
    "DIK_N",
    "DIK_M",
    "DIK_COMMA",
    "DIK_PERIOD",
    "DIK_SLASH",
    "DIK_RSHIFT",
    "DIK_MULTIPLY",
    "DIK_LMENU",
    "DIK_SPACE",
    "DIK_CAPITAL",
    "DIK_F1",
    "DIK_F2",
    "DIK_F3",
    "DIK_F4",
    "DIK_F5",
    "DIK_F6",
    "DIK_F7",
    "DIK_F8",
    "DIK_F9",
    "DIK_F10",
    "DIK_NUMLOCK",
    "DIK_SCROLL",
    "DIK_NUMPAD7",
    "DIK_NUMPAD8",
    "DIK_NUMPAD9",
    "DIK_SUBTRACT",
    "DIK_NUMPAD4",
    "DIK_NUMPAD5",
    "DIK_NUMPAD6",
    "DIK_ADD",
    "DIK_NUMPAD1",
    "DIK_NUMPAD2",
    "DIK_NUMPAD3",
    "DIK_NUMPAD0",
    "DIK_DECIMAL",
    "DIK_OEM_102",
    "DIK_F11",
    "DIK_F12",
    "DIK_F13",
    "DIK_F14",
    "DIK_F15",
    "DIK_KANA",
    "DIK_ABNT_C1",
    "DIK_CONVERT",
    "DIK_NOCONVERT",
    "DIK_YEN",
    "DIK_ABNT_C2",
    "DIK_NUMPADEQUALS",
    "DIK_PREVTRACK",
    "DIK_AT",
    "DIK_COLON",
    "DIK_UNDERLINE",
    "DIK_KANJI",
    "DIK_STOP",
    "DIK_AX",
    "DIK_UNLABELED",
    "DIK_NEXTTRACK",
    "DIK_NUMPADENTER",
    "DIK_RCONTROL",
    "DIK_MUTE",
    "DIK_CALCULATOR",
    "DIK_PLAYPAUSE",
    "DIK_MEDIASTOP",
    "DIK_VOLUMEDOWN",
    "DIK_VOLUMEUP",
    "DIK_WEBHOME",
    "DIK_NUMPADCOMMA",
    "DIK_DIVIDE",
    "DIK_SYSRQ",
    "DIK_RMENU",
    "DIK_PAUSE",
    "DIK_HOME",
    "DIK_UP",
    "DIK_PRIOR",
    "DIK_LEFT",
    "DIK_RIGHT",
    "DIK_END",
    "DIK_DOWN",
    "DIK_NEXT",
    "DIK_INSERT",
    "DIK_DELETE",
    "DIK_LWIN",
    "DIK_RWIN",
    "DIK_APPS",
    "DIK_POWER",
    "DIK_SLEEP",
    "DIK_WAKE",
    "DIK_WEBSEARCH",
    "DIK_WEBFAVORITES",
    "DIK_WEBREFRESH",
    "DIK_WEBSTOP",
    "DIK_WEBFORWARD",
    "DIK_WEBBACK",
    "DIK_MYCOMPUTER",
    "DIK_MAIL",
    "DIK_MEDIASELECT",
    "DIK_BACKSPACE",
    "DIK_NUMPADSTAR",
    "DIK_LALT",
    "DIK_CAPSLOCK",
    "DIK_NUMPADMINUS",
    "DIK_NUMPADPLUS",
    "DIK_NUMPADPERIOD",
    "DIK_NUMPADSLASH",
    "DIK_RALT",
    "DIK_UPARROW",
    "DIK_PGUP",
    "DIK_LEFTARROW",
    "DIK_RIGHTARROW",
    "DIK_DOWNARROW",
    "DIK_PGDN",
    "DIK_CIRCUMFLEX",
    "DIENUM_STOP",
    "DIENUM_CONTINUE",
    "DIEDFL_ALLDEVICES",
    "DIEDFL_ATTACHEDONLY",
    "DIEDFL_FORCEFEEDBACK",
    "DIEDFL_INCLUDEALIASES",
    "DIEDFL_INCLUDEPHANTOMS",
    "DIEDFL_INCLUDEHIDDEN",
    "DIEDBS_MAPPEDPRI1",
    "DIEDBS_MAPPEDPRI2",
    "DIEDBS_RECENTDEVICE",
    "DIEDBS_NEWDEVICE",
    "DIEDBSFL_ATTACHEDONLY",
    "DIEDBSFL_THISUSER",
    "DIEDBSFL_FORCEFEEDBACK",
    "DIEDBSFL_AVAILABLEDEVICES",
    "DIEDBSFL_MULTIMICEKEYBOARDS",
    "DIEDBSFL_NONGAMINGDEVICES",
    "DIEDBSFL_VALID",
    "DI_OK",
    "DI_NOTATTACHED",
    "DI_BUFFEROVERFLOW",
    "DI_PROPNOEFFECT",
    "DI_NOEFFECT",
    "DI_POLLEDDEVICE",
    "DI_DOWNLOADSKIPPED",
    "DI_EFFECTRESTARTED",
    "DI_TRUNCATED",
    "DI_SETTINGSNOTSAVED",
    "DI_TRUNCATEDANDRESTARTED",
    "DI_WRITEPROTECT",
    "DIERR_OLDDIRECTINPUTVERSION",
    "DIERR_BETADIRECTINPUTVERSION",
    "DIERR_BADDRIVERVER",
    "DIERR_DEVICENOTREG",
    "DIERR_NOTFOUND",
    "DIERR_OBJECTNOTFOUND",
    "DIERR_INVALIDPARAM",
    "DIERR_NOINTERFACE",
    "DIERR_GENERIC",
    "DIERR_OUTOFMEMORY",
    "DIERR_UNSUPPORTED",
    "DIERR_NOTINITIALIZED",
    "DIERR_ALREADYINITIALIZED",
    "DIERR_NOAGGREGATION",
    "DIERR_OTHERAPPHASPRIO",
    "DIERR_INPUTLOST",
    "DIERR_ACQUIRED",
    "DIERR_NOTACQUIRED",
    "DIERR_READONLY",
    "DIERR_HANDLEEXISTS",
    "DIERR_INSUFFICIENTPRIVS",
    "DIERR_DEVICEFULL",
    "DIERR_MOREDATA",
    "DIERR_NOTDOWNLOADED",
    "DIERR_HASEFFECTS",
    "DIERR_NOTEXCLUSIVEACQUIRED",
    "DIERR_INCOMPLETEEFFECT",
    "DIERR_NOTBUFFERED",
    "DIERR_EFFECTPLAYING",
    "DIERR_UNPLUGGED",
    "DIERR_REPORTFULL",
    "DIERR_MAPFILEFAIL",
    "DIKEYBOARD_ESCAPE",
    "DIKEYBOARD_1",
    "DIKEYBOARD_2",
    "DIKEYBOARD_3",
    "DIKEYBOARD_4",
    "DIKEYBOARD_5",
    "DIKEYBOARD_6",
    "DIKEYBOARD_7",
    "DIKEYBOARD_8",
    "DIKEYBOARD_9",
    "DIKEYBOARD_0",
    "DIKEYBOARD_MINUS",
    "DIKEYBOARD_EQUALS",
    "DIKEYBOARD_BACK",
    "DIKEYBOARD_TAB",
    "DIKEYBOARD_Q",
    "DIKEYBOARD_W",
    "DIKEYBOARD_E",
    "DIKEYBOARD_R",
    "DIKEYBOARD_T",
    "DIKEYBOARD_Y",
    "DIKEYBOARD_U",
    "DIKEYBOARD_I",
    "DIKEYBOARD_O",
    "DIKEYBOARD_P",
    "DIKEYBOARD_LBRACKET",
    "DIKEYBOARD_RBRACKET",
    "DIKEYBOARD_RETURN",
    "DIKEYBOARD_LCONTROL",
    "DIKEYBOARD_A",
    "DIKEYBOARD_S",
    "DIKEYBOARD_D",
    "DIKEYBOARD_F",
    "DIKEYBOARD_G",
    "DIKEYBOARD_H",
    "DIKEYBOARD_J",
    "DIKEYBOARD_K",
    "DIKEYBOARD_L",
    "DIKEYBOARD_SEMICOLON",
    "DIKEYBOARD_APOSTROPHE",
    "DIKEYBOARD_GRAVE",
    "DIKEYBOARD_LSHIFT",
    "DIKEYBOARD_BACKSLASH",
    "DIKEYBOARD_Z",
    "DIKEYBOARD_X",
    "DIKEYBOARD_C",
    "DIKEYBOARD_V",
    "DIKEYBOARD_B",
    "DIKEYBOARD_N",
    "DIKEYBOARD_M",
    "DIKEYBOARD_COMMA",
    "DIKEYBOARD_PERIOD",
    "DIKEYBOARD_SLASH",
    "DIKEYBOARD_RSHIFT",
    "DIKEYBOARD_MULTIPLY",
    "DIKEYBOARD_LMENU",
    "DIKEYBOARD_SPACE",
    "DIKEYBOARD_CAPITAL",
    "DIKEYBOARD_F1",
    "DIKEYBOARD_F2",
    "DIKEYBOARD_F3",
    "DIKEYBOARD_F4",
    "DIKEYBOARD_F5",
    "DIKEYBOARD_F6",
    "DIKEYBOARD_F7",
    "DIKEYBOARD_F8",
    "DIKEYBOARD_F9",
    "DIKEYBOARD_F10",
    "DIKEYBOARD_NUMLOCK",
    "DIKEYBOARD_SCROLL",
    "DIKEYBOARD_NUMPAD7",
    "DIKEYBOARD_NUMPAD8",
    "DIKEYBOARD_NUMPAD9",
    "DIKEYBOARD_SUBTRACT",
    "DIKEYBOARD_NUMPAD4",
    "DIKEYBOARD_NUMPAD5",
    "DIKEYBOARD_NUMPAD6",
    "DIKEYBOARD_ADD",
    "DIKEYBOARD_NUMPAD1",
    "DIKEYBOARD_NUMPAD2",
    "DIKEYBOARD_NUMPAD3",
    "DIKEYBOARD_NUMPAD0",
    "DIKEYBOARD_DECIMAL",
    "DIKEYBOARD_OEM_102",
    "DIKEYBOARD_F11",
    "DIKEYBOARD_F12",
    "DIKEYBOARD_F13",
    "DIKEYBOARD_F14",
    "DIKEYBOARD_F15",
    "DIKEYBOARD_KANA",
    "DIKEYBOARD_ABNT_C1",
    "DIKEYBOARD_CONVERT",
    "DIKEYBOARD_NOCONVERT",
    "DIKEYBOARD_YEN",
    "DIKEYBOARD_ABNT_C2",
    "DIKEYBOARD_NUMPADEQUALS",
    "DIKEYBOARD_PREVTRACK",
    "DIKEYBOARD_AT",
    "DIKEYBOARD_COLON",
    "DIKEYBOARD_UNDERLINE",
    "DIKEYBOARD_KANJI",
    "DIKEYBOARD_STOP",
    "DIKEYBOARD_AX",
    "DIKEYBOARD_UNLABELED",
    "DIKEYBOARD_NEXTTRACK",
    "DIKEYBOARD_NUMPADENTER",
    "DIKEYBOARD_RCONTROL",
    "DIKEYBOARD_MUTE",
    "DIKEYBOARD_CALCULATOR",
    "DIKEYBOARD_PLAYPAUSE",
    "DIKEYBOARD_MEDIASTOP",
    "DIKEYBOARD_VOLUMEDOWN",
    "DIKEYBOARD_VOLUMEUP",
    "DIKEYBOARD_WEBHOME",
    "DIKEYBOARD_NUMPADCOMMA",
    "DIKEYBOARD_DIVIDE",
    "DIKEYBOARD_SYSRQ",
    "DIKEYBOARD_RMENU",
    "DIKEYBOARD_PAUSE",
    "DIKEYBOARD_HOME",
    "DIKEYBOARD_UP",
    "DIKEYBOARD_PRIOR",
    "DIKEYBOARD_LEFT",
    "DIKEYBOARD_RIGHT",
    "DIKEYBOARD_END",
    "DIKEYBOARD_DOWN",
    "DIKEYBOARD_NEXT",
    "DIKEYBOARD_INSERT",
    "DIKEYBOARD_DELETE",
    "DIKEYBOARD_LWIN",
    "DIKEYBOARD_RWIN",
    "DIKEYBOARD_APPS",
    "DIKEYBOARD_POWER",
    "DIKEYBOARD_SLEEP",
    "DIKEYBOARD_WAKE",
    "DIKEYBOARD_WEBSEARCH",
    "DIKEYBOARD_WEBFAVORITES",
    "DIKEYBOARD_WEBREFRESH",
    "DIKEYBOARD_WEBSTOP",
    "DIKEYBOARD_WEBFORWARD",
    "DIKEYBOARD_WEBBACK",
    "DIKEYBOARD_MYCOMPUTER",
    "DIKEYBOARD_MAIL",
    "DIKEYBOARD_MEDIASELECT",
    "DIVOICE_CHANNEL1",
    "DIVOICE_CHANNEL2",
    "DIVOICE_CHANNEL3",
    "DIVOICE_CHANNEL4",
    "DIVOICE_CHANNEL5",
    "DIVOICE_CHANNEL6",
    "DIVOICE_CHANNEL7",
    "DIVOICE_CHANNEL8",
    "DIVOICE_TEAM",
    "DIVOICE_ALL",
    "DIVOICE_RECORDMUTE",
    "DIVOICE_PLAYBACKMUTE",
    "DIVOICE_TRANSMIT",
    "DIVOICE_VOICECOMMAND",
    "DIVIRTUAL_DRIVING_RACE",
    "DIAXIS_DRIVINGR_STEER",
    "DIAXIS_DRIVINGR_ACCELERATE",
    "DIAXIS_DRIVINGR_BRAKE",
    "DIBUTTON_DRIVINGR_SHIFTUP",
    "DIBUTTON_DRIVINGR_SHIFTDOWN",
    "DIBUTTON_DRIVINGR_VIEW",
    "DIBUTTON_DRIVINGR_MENU",
    "DIAXIS_DRIVINGR_ACCEL_AND_BRAKE",
    "DIHATSWITCH_DRIVINGR_GLANCE",
    "DIBUTTON_DRIVINGR_BRAKE",
    "DIBUTTON_DRIVINGR_DASHBOARD",
    "DIBUTTON_DRIVINGR_AIDS",
    "DIBUTTON_DRIVINGR_MAP",
    "DIBUTTON_DRIVINGR_BOOST",
    "DIBUTTON_DRIVINGR_PIT",
    "DIBUTTON_DRIVINGR_ACCELERATE_LINK",
    "DIBUTTON_DRIVINGR_STEER_LEFT_LINK",
    "DIBUTTON_DRIVINGR_STEER_RIGHT_LINK",
    "DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK",
    "DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK",
    "DIBUTTON_DRIVINGR_DEVICE",
    "DIBUTTON_DRIVINGR_PAUSE",
    "DIVIRTUAL_DRIVING_COMBAT",
    "DIAXIS_DRIVINGC_STEER",
    "DIAXIS_DRIVINGC_ACCELERATE",
    "DIAXIS_DRIVINGC_BRAKE",
    "DIBUTTON_DRIVINGC_FIRE",
    "DIBUTTON_DRIVINGC_WEAPONS",
    "DIBUTTON_DRIVINGC_TARGET",
    "DIBUTTON_DRIVINGC_MENU",
    "DIAXIS_DRIVINGC_ACCEL_AND_BRAKE",
    "DIHATSWITCH_DRIVINGC_GLANCE",
    "DIBUTTON_DRIVINGC_SHIFTUP",
    "DIBUTTON_DRIVINGC_SHIFTDOWN",
    "DIBUTTON_DRIVINGC_DASHBOARD",
    "DIBUTTON_DRIVINGC_AIDS",
    "DIBUTTON_DRIVINGC_BRAKE",
    "DIBUTTON_DRIVINGC_FIRESECONDARY",
    "DIBUTTON_DRIVINGC_ACCELERATE_LINK",
    "DIBUTTON_DRIVINGC_STEER_LEFT_LINK",
    "DIBUTTON_DRIVINGC_STEER_RIGHT_LINK",
    "DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK",
    "DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK",
    "DIBUTTON_DRIVINGC_DEVICE",
    "DIBUTTON_DRIVINGC_PAUSE",
    "DIVIRTUAL_DRIVING_TANK",
    "DIAXIS_DRIVINGT_STEER",
    "DIAXIS_DRIVINGT_BARREL",
    "DIAXIS_DRIVINGT_ACCELERATE",
    "DIAXIS_DRIVINGT_ROTATE",
    "DIBUTTON_DRIVINGT_FIRE",
    "DIBUTTON_DRIVINGT_WEAPONS",
    "DIBUTTON_DRIVINGT_TARGET",
    "DIBUTTON_DRIVINGT_MENU",
    "DIHATSWITCH_DRIVINGT_GLANCE",
    "DIAXIS_DRIVINGT_BRAKE",
    "DIAXIS_DRIVINGT_ACCEL_AND_BRAKE",
    "DIBUTTON_DRIVINGT_VIEW",
    "DIBUTTON_DRIVINGT_DASHBOARD",
    "DIBUTTON_DRIVINGT_BRAKE",
    "DIBUTTON_DRIVINGT_FIRESECONDARY",
    "DIBUTTON_DRIVINGT_ACCELERATE_LINK",
    "DIBUTTON_DRIVINGT_STEER_LEFT_LINK",
    "DIBUTTON_DRIVINGT_STEER_RIGHT_LINK",
    "DIBUTTON_DRIVINGT_BARREL_UP_LINK",
    "DIBUTTON_DRIVINGT_BARREL_DOWN_LINK",
    "DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK",
    "DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK",
    "DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK",
    "DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK",
    "DIBUTTON_DRIVINGT_DEVICE",
    "DIBUTTON_DRIVINGT_PAUSE",
    "DIVIRTUAL_FLYING_CIVILIAN",
    "DIAXIS_FLYINGC_BANK",
    "DIAXIS_FLYINGC_PITCH",
    "DIAXIS_FLYINGC_THROTTLE",
    "DIBUTTON_FLYINGC_VIEW",
    "DIBUTTON_FLYINGC_DISPLAY",
    "DIBUTTON_FLYINGC_GEAR",
    "DIBUTTON_FLYINGC_MENU",
    "DIHATSWITCH_FLYINGC_GLANCE",
    "DIAXIS_FLYINGC_BRAKE",
    "DIAXIS_FLYINGC_RUDDER",
    "DIAXIS_FLYINGC_FLAPS",
    "DIBUTTON_FLYINGC_FLAPSUP",
    "DIBUTTON_FLYINGC_FLAPSDOWN",
    "DIBUTTON_FLYINGC_BRAKE_LINK",
    "DIBUTTON_FLYINGC_FASTER_LINK",
    "DIBUTTON_FLYINGC_SLOWER_LINK",
    "DIBUTTON_FLYINGC_GLANCE_LEFT_LINK",
    "DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK",
    "DIBUTTON_FLYINGC_GLANCE_UP_LINK",
    "DIBUTTON_FLYINGC_GLANCE_DOWN_LINK",
    "DIBUTTON_FLYINGC_DEVICE",
    "DIBUTTON_FLYINGC_PAUSE",
    "DIVIRTUAL_FLYING_MILITARY",
    "DIAXIS_FLYINGM_BANK",
    "DIAXIS_FLYINGM_PITCH",
    "DIAXIS_FLYINGM_THROTTLE",
    "DIBUTTON_FLYINGM_FIRE",
    "DIBUTTON_FLYINGM_WEAPONS",
    "DIBUTTON_FLYINGM_TARGET",
    "DIBUTTON_FLYINGM_MENU",
    "DIHATSWITCH_FLYINGM_GLANCE",
    "DIBUTTON_FLYINGM_COUNTER",
    "DIAXIS_FLYINGM_RUDDER",
    "DIAXIS_FLYINGM_BRAKE",
    "DIBUTTON_FLYINGM_VIEW",
    "DIBUTTON_FLYINGM_DISPLAY",
    "DIAXIS_FLYINGM_FLAPS",
    "DIBUTTON_FLYINGM_FLAPSUP",
    "DIBUTTON_FLYINGM_FLAPSDOWN",
    "DIBUTTON_FLYINGM_FIRESECONDARY",
    "DIBUTTON_FLYINGM_GEAR",
    "DIBUTTON_FLYINGM_BRAKE_LINK",
    "DIBUTTON_FLYINGM_FASTER_LINK",
    "DIBUTTON_FLYINGM_SLOWER_LINK",
    "DIBUTTON_FLYINGM_GLANCE_LEFT_LINK",
    "DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK",
    "DIBUTTON_FLYINGM_GLANCE_UP_LINK",
    "DIBUTTON_FLYINGM_GLANCE_DOWN_LINK",
    "DIBUTTON_FLYINGM_DEVICE",
    "DIBUTTON_FLYINGM_PAUSE",
    "DIVIRTUAL_FLYING_HELICOPTER",
    "DIAXIS_FLYINGH_BANK",
    "DIAXIS_FLYINGH_PITCH",
    "DIAXIS_FLYINGH_COLLECTIVE",
    "DIBUTTON_FLYINGH_FIRE",
    "DIBUTTON_FLYINGH_WEAPONS",
    "DIBUTTON_FLYINGH_TARGET",
    "DIBUTTON_FLYINGH_MENU",
    "DIHATSWITCH_FLYINGH_GLANCE",
    "DIAXIS_FLYINGH_TORQUE",
    "DIAXIS_FLYINGH_THROTTLE",
    "DIBUTTON_FLYINGH_COUNTER",
    "DIBUTTON_FLYINGH_VIEW",
    "DIBUTTON_FLYINGH_GEAR",
    "DIBUTTON_FLYINGH_FIRESECONDARY",
    "DIBUTTON_FLYINGH_FASTER_LINK",
    "DIBUTTON_FLYINGH_SLOWER_LINK",
    "DIBUTTON_FLYINGH_GLANCE_LEFT_LINK",
    "DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK",
    "DIBUTTON_FLYINGH_GLANCE_UP_LINK",
    "DIBUTTON_FLYINGH_GLANCE_DOWN_LINK",
    "DIBUTTON_FLYINGH_DEVICE",
    "DIBUTTON_FLYINGH_PAUSE",
    "DIVIRTUAL_SPACESIM",
    "DIAXIS_SPACESIM_LATERAL",
    "DIAXIS_SPACESIM_MOVE",
    "DIAXIS_SPACESIM_THROTTLE",
    "DIBUTTON_SPACESIM_FIRE",
    "DIBUTTON_SPACESIM_WEAPONS",
    "DIBUTTON_SPACESIM_TARGET",
    "DIBUTTON_SPACESIM_MENU",
    "DIHATSWITCH_SPACESIM_GLANCE",
    "DIAXIS_SPACESIM_CLIMB",
    "DIAXIS_SPACESIM_ROTATE",
    "DIBUTTON_SPACESIM_VIEW",
    "DIBUTTON_SPACESIM_DISPLAY",
    "DIBUTTON_SPACESIM_RAISE",
    "DIBUTTON_SPACESIM_LOWER",
    "DIBUTTON_SPACESIM_GEAR",
    "DIBUTTON_SPACESIM_FIRESECONDARY",
    "DIBUTTON_SPACESIM_LEFT_LINK",
    "DIBUTTON_SPACESIM_RIGHT_LINK",
    "DIBUTTON_SPACESIM_FORWARD_LINK",
    "DIBUTTON_SPACESIM_BACKWARD_LINK",
    "DIBUTTON_SPACESIM_FASTER_LINK",
    "DIBUTTON_SPACESIM_SLOWER_LINK",
    "DIBUTTON_SPACESIM_TURN_LEFT_LINK",
    "DIBUTTON_SPACESIM_TURN_RIGHT_LINK",
    "DIBUTTON_SPACESIM_GLANCE_LEFT_LINK",
    "DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK",
    "DIBUTTON_SPACESIM_GLANCE_UP_LINK",
    "DIBUTTON_SPACESIM_GLANCE_DOWN_LINK",
    "DIBUTTON_SPACESIM_DEVICE",
    "DIBUTTON_SPACESIM_PAUSE",
    "DIVIRTUAL_FIGHTING_HAND2HAND",
    "DIAXIS_FIGHTINGH_LATERAL",
    "DIAXIS_FIGHTINGH_MOVE",
    "DIBUTTON_FIGHTINGH_PUNCH",
    "DIBUTTON_FIGHTINGH_KICK",
    "DIBUTTON_FIGHTINGH_BLOCK",
    "DIBUTTON_FIGHTINGH_CROUCH",
    "DIBUTTON_FIGHTINGH_JUMP",
    "DIBUTTON_FIGHTINGH_SPECIAL1",
    "DIBUTTON_FIGHTINGH_SPECIAL2",
    "DIBUTTON_FIGHTINGH_MENU",
    "DIBUTTON_FIGHTINGH_SELECT",
    "DIHATSWITCH_FIGHTINGH_SLIDE",
    "DIBUTTON_FIGHTINGH_DISPLAY",
    "DIAXIS_FIGHTINGH_ROTATE",
    "DIBUTTON_FIGHTINGH_DODGE",
    "DIBUTTON_FIGHTINGH_LEFT_LINK",
    "DIBUTTON_FIGHTINGH_RIGHT_LINK",
    "DIBUTTON_FIGHTINGH_FORWARD_LINK",
    "DIBUTTON_FIGHTINGH_BACKWARD_LINK",
    "DIBUTTON_FIGHTINGH_DEVICE",
    "DIBUTTON_FIGHTINGH_PAUSE",
    "DIVIRTUAL_FIGHTING_FPS",
    "DIAXIS_FPS_ROTATE",
    "DIAXIS_FPS_MOVE",
    "DIBUTTON_FPS_FIRE",
    "DIBUTTON_FPS_WEAPONS",
    "DIBUTTON_FPS_APPLY",
    "DIBUTTON_FPS_SELECT",
    "DIBUTTON_FPS_CROUCH",
    "DIBUTTON_FPS_JUMP",
    "DIAXIS_FPS_LOOKUPDOWN",
    "DIBUTTON_FPS_STRAFE",
    "DIBUTTON_FPS_MENU",
    "DIHATSWITCH_FPS_GLANCE",
    "DIBUTTON_FPS_DISPLAY",
    "DIAXIS_FPS_SIDESTEP",
    "DIBUTTON_FPS_DODGE",
    "DIBUTTON_FPS_GLANCEL",
    "DIBUTTON_FPS_GLANCER",
    "DIBUTTON_FPS_FIRESECONDARY",
    "DIBUTTON_FPS_ROTATE_LEFT_LINK",
    "DIBUTTON_FPS_ROTATE_RIGHT_LINK",
    "DIBUTTON_FPS_FORWARD_LINK",
    "DIBUTTON_FPS_BACKWARD_LINK",
    "DIBUTTON_FPS_GLANCE_UP_LINK",
    "DIBUTTON_FPS_GLANCE_DOWN_LINK",
    "DIBUTTON_FPS_STEP_LEFT_LINK",
    "DIBUTTON_FPS_STEP_RIGHT_LINK",
    "DIBUTTON_FPS_DEVICE",
    "DIBUTTON_FPS_PAUSE",
    "DIVIRTUAL_FIGHTING_THIRDPERSON",
    "DIAXIS_TPS_TURN",
    "DIAXIS_TPS_MOVE",
    "DIBUTTON_TPS_RUN",
    "DIBUTTON_TPS_ACTION",
    "DIBUTTON_TPS_SELECT",
    "DIBUTTON_TPS_USE",
    "DIBUTTON_TPS_JUMP",
    "DIBUTTON_TPS_MENU",
    "DIHATSWITCH_TPS_GLANCE",
    "DIBUTTON_TPS_VIEW",
    "DIBUTTON_TPS_STEPLEFT",
    "DIBUTTON_TPS_STEPRIGHT",
    "DIAXIS_TPS_STEP",
    "DIBUTTON_TPS_DODGE",
    "DIBUTTON_TPS_INVENTORY",
    "DIBUTTON_TPS_TURN_LEFT_LINK",
    "DIBUTTON_TPS_TURN_RIGHT_LINK",
    "DIBUTTON_TPS_FORWARD_LINK",
    "DIBUTTON_TPS_BACKWARD_LINK",
    "DIBUTTON_TPS_GLANCE_UP_LINK",
    "DIBUTTON_TPS_GLANCE_DOWN_LINK",
    "DIBUTTON_TPS_GLANCE_LEFT_LINK",
    "DIBUTTON_TPS_GLANCE_RIGHT_LINK",
    "DIBUTTON_TPS_DEVICE",
    "DIBUTTON_TPS_PAUSE",
    "DIVIRTUAL_STRATEGY_ROLEPLAYING",
    "DIAXIS_STRATEGYR_LATERAL",
    "DIAXIS_STRATEGYR_MOVE",
    "DIBUTTON_STRATEGYR_GET",
    "DIBUTTON_STRATEGYR_APPLY",
    "DIBUTTON_STRATEGYR_SELECT",
    "DIBUTTON_STRATEGYR_ATTACK",
    "DIBUTTON_STRATEGYR_CAST",
    "DIBUTTON_STRATEGYR_CROUCH",
    "DIBUTTON_STRATEGYR_JUMP",
    "DIBUTTON_STRATEGYR_MENU",
    "DIHATSWITCH_STRATEGYR_GLANCE",
    "DIBUTTON_STRATEGYR_MAP",
    "DIBUTTON_STRATEGYR_DISPLAY",
    "DIAXIS_STRATEGYR_ROTATE",
    "DIBUTTON_STRATEGYR_LEFT_LINK",
    "DIBUTTON_STRATEGYR_RIGHT_LINK",
    "DIBUTTON_STRATEGYR_FORWARD_LINK",
    "DIBUTTON_STRATEGYR_BACK_LINK",
    "DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK",
    "DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK",
    "DIBUTTON_STRATEGYR_DEVICE",
    "DIBUTTON_STRATEGYR_PAUSE",
    "DIVIRTUAL_STRATEGY_TURN",
    "DIAXIS_STRATEGYT_LATERAL",
    "DIAXIS_STRATEGYT_MOVE",
    "DIBUTTON_STRATEGYT_SELECT",
    "DIBUTTON_STRATEGYT_INSTRUCT",
    "DIBUTTON_STRATEGYT_APPLY",
    "DIBUTTON_STRATEGYT_TEAM",
    "DIBUTTON_STRATEGYT_TURN",
    "DIBUTTON_STRATEGYT_MENU",
    "DIBUTTON_STRATEGYT_ZOOM",
    "DIBUTTON_STRATEGYT_MAP",
    "DIBUTTON_STRATEGYT_DISPLAY",
    "DIBUTTON_STRATEGYT_LEFT_LINK",
    "DIBUTTON_STRATEGYT_RIGHT_LINK",
    "DIBUTTON_STRATEGYT_FORWARD_LINK",
    "DIBUTTON_STRATEGYT_BACK_LINK",
    "DIBUTTON_STRATEGYT_DEVICE",
    "DIBUTTON_STRATEGYT_PAUSE",
    "DIVIRTUAL_SPORTS_HUNTING",
    "DIAXIS_HUNTING_LATERAL",
    "DIAXIS_HUNTING_MOVE",
    "DIBUTTON_HUNTING_FIRE",
    "DIBUTTON_HUNTING_AIM",
    "DIBUTTON_HUNTING_WEAPON",
    "DIBUTTON_HUNTING_BINOCULAR",
    "DIBUTTON_HUNTING_CALL",
    "DIBUTTON_HUNTING_MAP",
    "DIBUTTON_HUNTING_SPECIAL",
    "DIBUTTON_HUNTING_MENU",
    "DIHATSWITCH_HUNTING_GLANCE",
    "DIBUTTON_HUNTING_DISPLAY",
    "DIAXIS_HUNTING_ROTATE",
    "DIBUTTON_HUNTING_CROUCH",
    "DIBUTTON_HUNTING_JUMP",
    "DIBUTTON_HUNTING_FIRESECONDARY",
    "DIBUTTON_HUNTING_LEFT_LINK",
    "DIBUTTON_HUNTING_RIGHT_LINK",
    "DIBUTTON_HUNTING_FORWARD_LINK",
    "DIBUTTON_HUNTING_BACK_LINK",
    "DIBUTTON_HUNTING_ROTATE_LEFT_LINK",
    "DIBUTTON_HUNTING_ROTATE_RIGHT_LINK",
    "DIBUTTON_HUNTING_DEVICE",
    "DIBUTTON_HUNTING_PAUSE",
    "DIVIRTUAL_SPORTS_FISHING",
    "DIAXIS_FISHING_LATERAL",
    "DIAXIS_FISHING_MOVE",
    "DIBUTTON_FISHING_CAST",
    "DIBUTTON_FISHING_TYPE",
    "DIBUTTON_FISHING_BINOCULAR",
    "DIBUTTON_FISHING_BAIT",
    "DIBUTTON_FISHING_MAP",
    "DIBUTTON_FISHING_MENU",
    "DIHATSWITCH_FISHING_GLANCE",
    "DIBUTTON_FISHING_DISPLAY",
    "DIAXIS_FISHING_ROTATE",
    "DIBUTTON_FISHING_CROUCH",
    "DIBUTTON_FISHING_JUMP",
    "DIBUTTON_FISHING_LEFT_LINK",
    "DIBUTTON_FISHING_RIGHT_LINK",
    "DIBUTTON_FISHING_FORWARD_LINK",
    "DIBUTTON_FISHING_BACK_LINK",
    "DIBUTTON_FISHING_ROTATE_LEFT_LINK",
    "DIBUTTON_FISHING_ROTATE_RIGHT_LINK",
    "DIBUTTON_FISHING_DEVICE",
    "DIBUTTON_FISHING_PAUSE",
    "DIVIRTUAL_SPORTS_BASEBALL_BAT",
    "DIAXIS_BASEBALLB_LATERAL",
    "DIAXIS_BASEBALLB_MOVE",
    "DIBUTTON_BASEBALLB_SELECT",
    "DIBUTTON_BASEBALLB_NORMAL",
    "DIBUTTON_BASEBALLB_POWER",
    "DIBUTTON_BASEBALLB_BUNT",
    "DIBUTTON_BASEBALLB_STEAL",
    "DIBUTTON_BASEBALLB_BURST",
    "DIBUTTON_BASEBALLB_SLIDE",
    "DIBUTTON_BASEBALLB_CONTACT",
    "DIBUTTON_BASEBALLB_MENU",
    "DIBUTTON_BASEBALLB_NOSTEAL",
    "DIBUTTON_BASEBALLB_BOX",
    "DIBUTTON_BASEBALLB_LEFT_LINK",
    "DIBUTTON_BASEBALLB_RIGHT_LINK",
    "DIBUTTON_BASEBALLB_FORWARD_LINK",
    "DIBUTTON_BASEBALLB_BACK_LINK",
    "DIBUTTON_BASEBALLB_DEVICE",
    "DIBUTTON_BASEBALLB_PAUSE",
    "DIVIRTUAL_SPORTS_BASEBALL_PITCH",
    "DIAXIS_BASEBALLP_LATERAL",
    "DIAXIS_BASEBALLP_MOVE",
    "DIBUTTON_BASEBALLP_SELECT",
    "DIBUTTON_BASEBALLP_PITCH",
    "DIBUTTON_BASEBALLP_BASE",
    "DIBUTTON_BASEBALLP_THROW",
    "DIBUTTON_BASEBALLP_FAKE",
    "DIBUTTON_BASEBALLP_MENU",
    "DIBUTTON_BASEBALLP_WALK",
    "DIBUTTON_BASEBALLP_LOOK",
    "DIBUTTON_BASEBALLP_LEFT_LINK",
    "DIBUTTON_BASEBALLP_RIGHT_LINK",
    "DIBUTTON_BASEBALLP_FORWARD_LINK",
    "DIBUTTON_BASEBALLP_BACK_LINK",
    "DIBUTTON_BASEBALLP_DEVICE",
    "DIBUTTON_BASEBALLP_PAUSE",
    "DIVIRTUAL_SPORTS_BASEBALL_FIELD",
    "DIAXIS_BASEBALLF_LATERAL",
    "DIAXIS_BASEBALLF_MOVE",
    "DIBUTTON_BASEBALLF_NEAREST",
    "DIBUTTON_BASEBALLF_THROW1",
    "DIBUTTON_BASEBALLF_THROW2",
    "DIBUTTON_BASEBALLF_BURST",
    "DIBUTTON_BASEBALLF_JUMP",
    "DIBUTTON_BASEBALLF_DIVE",
    "DIBUTTON_BASEBALLF_MENU",
    "DIBUTTON_BASEBALLF_SHIFTIN",
    "DIBUTTON_BASEBALLF_SHIFTOUT",
    "DIBUTTON_BASEBALLF_AIM_LEFT_LINK",
    "DIBUTTON_BASEBALLF_AIM_RIGHT_LINK",
    "DIBUTTON_BASEBALLF_FORWARD_LINK",
    "DIBUTTON_BASEBALLF_BACK_LINK",
    "DIBUTTON_BASEBALLF_DEVICE",
    "DIBUTTON_BASEBALLF_PAUSE",
    "DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE",
    "DIAXIS_BBALLO_LATERAL",
    "DIAXIS_BBALLO_MOVE",
    "DIBUTTON_BBALLO_SHOOT",
    "DIBUTTON_BBALLO_DUNK",
    "DIBUTTON_BBALLO_PASS",
    "DIBUTTON_BBALLO_FAKE",
    "DIBUTTON_BBALLO_SPECIAL",
    "DIBUTTON_BBALLO_PLAYER",
    "DIBUTTON_BBALLO_BURST",
    "DIBUTTON_BBALLO_CALL",
    "DIBUTTON_BBALLO_MENU",
    "DIHATSWITCH_BBALLO_GLANCE",
    "DIBUTTON_BBALLO_SCREEN",
    "DIBUTTON_BBALLO_PLAY",
    "DIBUTTON_BBALLO_JAB",
    "DIBUTTON_BBALLO_POST",
    "DIBUTTON_BBALLO_TIMEOUT",
    "DIBUTTON_BBALLO_SUBSTITUTE",
    "DIBUTTON_BBALLO_LEFT_LINK",
    "DIBUTTON_BBALLO_RIGHT_LINK",
    "DIBUTTON_BBALLO_FORWARD_LINK",
    "DIBUTTON_BBALLO_BACK_LINK",
    "DIBUTTON_BBALLO_DEVICE",
    "DIBUTTON_BBALLO_PAUSE",
    "DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE",
    "DIAXIS_BBALLD_LATERAL",
    "DIAXIS_BBALLD_MOVE",
    "DIBUTTON_BBALLD_JUMP",
    "DIBUTTON_BBALLD_STEAL",
    "DIBUTTON_BBALLD_FAKE",
    "DIBUTTON_BBALLD_SPECIAL",
    "DIBUTTON_BBALLD_PLAYER",
    "DIBUTTON_BBALLD_BURST",
    "DIBUTTON_BBALLD_PLAY",
    "DIBUTTON_BBALLD_MENU",
    "DIHATSWITCH_BBALLD_GLANCE",
    "DIBUTTON_BBALLD_TIMEOUT",
    "DIBUTTON_BBALLD_SUBSTITUTE",
    "DIBUTTON_BBALLD_LEFT_LINK",
    "DIBUTTON_BBALLD_RIGHT_LINK",
    "DIBUTTON_BBALLD_FORWARD_LINK",
    "DIBUTTON_BBALLD_BACK_LINK",
    "DIBUTTON_BBALLD_DEVICE",
    "DIBUTTON_BBALLD_PAUSE",
    "DIVIRTUAL_SPORTS_FOOTBALL_FIELD",
    "DIBUTTON_FOOTBALLP_PLAY",
    "DIBUTTON_FOOTBALLP_SELECT",
    "DIBUTTON_FOOTBALLP_HELP",
    "DIBUTTON_FOOTBALLP_MENU",
    "DIBUTTON_FOOTBALLP_DEVICE",
    "DIBUTTON_FOOTBALLP_PAUSE",
    "DIVIRTUAL_SPORTS_FOOTBALL_QBCK",
    "DIAXIS_FOOTBALLQ_LATERAL",
    "DIAXIS_FOOTBALLQ_MOVE",
    "DIBUTTON_FOOTBALLQ_SELECT",
    "DIBUTTON_FOOTBALLQ_SNAP",
    "DIBUTTON_FOOTBALLQ_JUMP",
    "DIBUTTON_FOOTBALLQ_SLIDE",
    "DIBUTTON_FOOTBALLQ_PASS",
    "DIBUTTON_FOOTBALLQ_FAKE",
    "DIBUTTON_FOOTBALLQ_MENU",
    "DIBUTTON_FOOTBALLQ_FAKESNAP",
    "DIBUTTON_FOOTBALLQ_MOTION",
    "DIBUTTON_FOOTBALLQ_AUDIBLE",
    "DIBUTTON_FOOTBALLQ_LEFT_LINK",
    "DIBUTTON_FOOTBALLQ_RIGHT_LINK",
    "DIBUTTON_FOOTBALLQ_FORWARD_LINK",
    "DIBUTTON_FOOTBALLQ_BACK_LINK",
    "DIBUTTON_FOOTBALLQ_DEVICE",
    "DIBUTTON_FOOTBALLQ_PAUSE",
    "DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE",
    "DIAXIS_FOOTBALLO_LATERAL",
    "DIAXIS_FOOTBALLO_MOVE",
    "DIBUTTON_FOOTBALLO_JUMP",
    "DIBUTTON_FOOTBALLO_LEFTARM",
    "DIBUTTON_FOOTBALLO_RIGHTARM",
    "DIBUTTON_FOOTBALLO_THROW",
    "DIBUTTON_FOOTBALLO_SPIN",
    "DIBUTTON_FOOTBALLO_MENU",
    "DIBUTTON_FOOTBALLO_JUKE",
    "DIBUTTON_FOOTBALLO_SHOULDER",
    "DIBUTTON_FOOTBALLO_TURBO",
    "DIBUTTON_FOOTBALLO_DIVE",
    "DIBUTTON_FOOTBALLO_ZOOM",
    "DIBUTTON_FOOTBALLO_SUBSTITUTE",
    "DIBUTTON_FOOTBALLO_LEFT_LINK",
    "DIBUTTON_FOOTBALLO_RIGHT_LINK",
    "DIBUTTON_FOOTBALLO_FORWARD_LINK",
    "DIBUTTON_FOOTBALLO_BACK_LINK",
    "DIBUTTON_FOOTBALLO_DEVICE",
    "DIBUTTON_FOOTBALLO_PAUSE",
    "DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE",
    "DIAXIS_FOOTBALLD_LATERAL",
    "DIAXIS_FOOTBALLD_MOVE",
    "DIBUTTON_FOOTBALLD_PLAY",
    "DIBUTTON_FOOTBALLD_SELECT",
    "DIBUTTON_FOOTBALLD_JUMP",
    "DIBUTTON_FOOTBALLD_TACKLE",
    "DIBUTTON_FOOTBALLD_FAKE",
    "DIBUTTON_FOOTBALLD_SUPERTACKLE",
    "DIBUTTON_FOOTBALLD_MENU",
    "DIBUTTON_FOOTBALLD_SPIN",
    "DIBUTTON_FOOTBALLD_SWIM",
    "DIBUTTON_FOOTBALLD_BULLRUSH",
    "DIBUTTON_FOOTBALLD_RIP",
    "DIBUTTON_FOOTBALLD_AUDIBLE",
    "DIBUTTON_FOOTBALLD_ZOOM",
    "DIBUTTON_FOOTBALLD_SUBSTITUTE",
    "DIBUTTON_FOOTBALLD_LEFT_LINK",
    "DIBUTTON_FOOTBALLD_RIGHT_LINK",
    "DIBUTTON_FOOTBALLD_FORWARD_LINK",
    "DIBUTTON_FOOTBALLD_BACK_LINK",
    "DIBUTTON_FOOTBALLD_DEVICE",
    "DIBUTTON_FOOTBALLD_PAUSE",
    "DIVIRTUAL_SPORTS_GOLF",
    "DIAXIS_GOLF_LATERAL",
    "DIAXIS_GOLF_MOVE",
    "DIBUTTON_GOLF_SWING",
    "DIBUTTON_GOLF_SELECT",
    "DIBUTTON_GOLF_UP",
    "DIBUTTON_GOLF_DOWN",
    "DIBUTTON_GOLF_TERRAIN",
    "DIBUTTON_GOLF_FLYBY",
    "DIBUTTON_GOLF_MENU",
    "DIHATSWITCH_GOLF_SCROLL",
    "DIBUTTON_GOLF_ZOOM",
    "DIBUTTON_GOLF_TIMEOUT",
    "DIBUTTON_GOLF_SUBSTITUTE",
    "DIBUTTON_GOLF_LEFT_LINK",
    "DIBUTTON_GOLF_RIGHT_LINK",
    "DIBUTTON_GOLF_FORWARD_LINK",
    "DIBUTTON_GOLF_BACK_LINK",
    "DIBUTTON_GOLF_DEVICE",
    "DIBUTTON_GOLF_PAUSE",
    "DIVIRTUAL_SPORTS_HOCKEY_OFFENSE",
    "DIAXIS_HOCKEYO_LATERAL",
    "DIAXIS_HOCKEYO_MOVE",
    "DIBUTTON_HOCKEYO_SHOOT",
    "DIBUTTON_HOCKEYO_PASS",
    "DIBUTTON_HOCKEYO_BURST",
    "DIBUTTON_HOCKEYO_SPECIAL",
    "DIBUTTON_HOCKEYO_FAKE",
    "DIBUTTON_HOCKEYO_MENU",
    "DIHATSWITCH_HOCKEYO_SCROLL",
    "DIBUTTON_HOCKEYO_ZOOM",
    "DIBUTTON_HOCKEYO_STRATEGY",
    "DIBUTTON_HOCKEYO_TIMEOUT",
    "DIBUTTON_HOCKEYO_SUBSTITUTE",
    "DIBUTTON_HOCKEYO_LEFT_LINK",
    "DIBUTTON_HOCKEYO_RIGHT_LINK",
    "DIBUTTON_HOCKEYO_FORWARD_LINK",
    "DIBUTTON_HOCKEYO_BACK_LINK",
    "DIBUTTON_HOCKEYO_DEVICE",
    "DIBUTTON_HOCKEYO_PAUSE",
    "DIVIRTUAL_SPORTS_HOCKEY_DEFENSE",
    "DIAXIS_HOCKEYD_LATERAL",
    "DIAXIS_HOCKEYD_MOVE",
    "DIBUTTON_HOCKEYD_PLAYER",
    "DIBUTTON_HOCKEYD_STEAL",
    "DIBUTTON_HOCKEYD_BURST",
    "DIBUTTON_HOCKEYD_BLOCK",
    "DIBUTTON_HOCKEYD_FAKE",
    "DIBUTTON_HOCKEYD_MENU",
    "DIHATSWITCH_HOCKEYD_SCROLL",
    "DIBUTTON_HOCKEYD_ZOOM",
    "DIBUTTON_HOCKEYD_STRATEGY",
    "DIBUTTON_HOCKEYD_TIMEOUT",
    "DIBUTTON_HOCKEYD_SUBSTITUTE",
    "DIBUTTON_HOCKEYD_LEFT_LINK",
    "DIBUTTON_HOCKEYD_RIGHT_LINK",
    "DIBUTTON_HOCKEYD_FORWARD_LINK",
    "DIBUTTON_HOCKEYD_BACK_LINK",
    "DIBUTTON_HOCKEYD_DEVICE",
    "DIBUTTON_HOCKEYD_PAUSE",
    "DIVIRTUAL_SPORTS_HOCKEY_GOALIE",
    "DIAXIS_HOCKEYG_LATERAL",
    "DIAXIS_HOCKEYG_MOVE",
    "DIBUTTON_HOCKEYG_PASS",
    "DIBUTTON_HOCKEYG_POKE",
    "DIBUTTON_HOCKEYG_STEAL",
    "DIBUTTON_HOCKEYG_BLOCK",
    "DIBUTTON_HOCKEYG_MENU",
    "DIHATSWITCH_HOCKEYG_SCROLL",
    "DIBUTTON_HOCKEYG_ZOOM",
    "DIBUTTON_HOCKEYG_STRATEGY",
    "DIBUTTON_HOCKEYG_TIMEOUT",
    "DIBUTTON_HOCKEYG_SUBSTITUTE",
    "DIBUTTON_HOCKEYG_LEFT_LINK",
    "DIBUTTON_HOCKEYG_RIGHT_LINK",
    "DIBUTTON_HOCKEYG_FORWARD_LINK",
    "DIBUTTON_HOCKEYG_BACK_LINK",
    "DIBUTTON_HOCKEYG_DEVICE",
    "DIBUTTON_HOCKEYG_PAUSE",
    "DIVIRTUAL_SPORTS_BIKING_MOUNTAIN",
    "DIAXIS_BIKINGM_TURN",
    "DIAXIS_BIKINGM_PEDAL",
    "DIBUTTON_BIKINGM_JUMP",
    "DIBUTTON_BIKINGM_CAMERA",
    "DIBUTTON_BIKINGM_SPECIAL1",
    "DIBUTTON_BIKINGM_SELECT",
    "DIBUTTON_BIKINGM_SPECIAL2",
    "DIBUTTON_BIKINGM_MENU",
    "DIHATSWITCH_BIKINGM_SCROLL",
    "DIBUTTON_BIKINGM_ZOOM",
    "DIAXIS_BIKINGM_BRAKE",
    "DIBUTTON_BIKINGM_LEFT_LINK",
    "DIBUTTON_BIKINGM_RIGHT_LINK",
    "DIBUTTON_BIKINGM_FASTER_LINK",
    "DIBUTTON_BIKINGM_SLOWER_LINK",
    "DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK",
    "DIBUTTON_BIKINGM_DEVICE",
    "DIBUTTON_BIKINGM_PAUSE",
    "DIVIRTUAL_SPORTS_SKIING",
    "DIAXIS_SKIING_TURN",
    "DIAXIS_SKIING_SPEED",
    "DIBUTTON_SKIING_JUMP",
    "DIBUTTON_SKIING_CROUCH",
    "DIBUTTON_SKIING_CAMERA",
    "DIBUTTON_SKIING_SPECIAL1",
    "DIBUTTON_SKIING_SELECT",
    "DIBUTTON_SKIING_SPECIAL2",
    "DIBUTTON_SKIING_MENU",
    "DIHATSWITCH_SKIING_GLANCE",
    "DIBUTTON_SKIING_ZOOM",
    "DIBUTTON_SKIING_LEFT_LINK",
    "DIBUTTON_SKIING_RIGHT_LINK",
    "DIBUTTON_SKIING_FASTER_LINK",
    "DIBUTTON_SKIING_SLOWER_LINK",
    "DIBUTTON_SKIING_DEVICE",
    "DIBUTTON_SKIING_PAUSE",
    "DIVIRTUAL_SPORTS_SOCCER_OFFENSE",
    "DIAXIS_SOCCERO_LATERAL",
    "DIAXIS_SOCCERO_MOVE",
    "DIAXIS_SOCCERO_BEND",
    "DIBUTTON_SOCCERO_SHOOT",
    "DIBUTTON_SOCCERO_PASS",
    "DIBUTTON_SOCCERO_FAKE",
    "DIBUTTON_SOCCERO_PLAYER",
    "DIBUTTON_SOCCERO_SPECIAL1",
    "DIBUTTON_SOCCERO_SELECT",
    "DIBUTTON_SOCCERO_MENU",
    "DIHATSWITCH_SOCCERO_GLANCE",
    "DIBUTTON_SOCCERO_SUBSTITUTE",
    "DIBUTTON_SOCCERO_SHOOTLOW",
    "DIBUTTON_SOCCERO_SHOOTHIGH",
    "DIBUTTON_SOCCERO_PASSTHRU",
    "DIBUTTON_SOCCERO_SPRINT",
    "DIBUTTON_SOCCERO_CONTROL",
    "DIBUTTON_SOCCERO_HEAD",
    "DIBUTTON_SOCCERO_LEFT_LINK",
    "DIBUTTON_SOCCERO_RIGHT_LINK",
    "DIBUTTON_SOCCERO_FORWARD_LINK",
    "DIBUTTON_SOCCERO_BACK_LINK",
    "DIBUTTON_SOCCERO_DEVICE",
    "DIBUTTON_SOCCERO_PAUSE",
    "DIVIRTUAL_SPORTS_SOCCER_DEFENSE",
    "DIAXIS_SOCCERD_LATERAL",
    "DIAXIS_SOCCERD_MOVE",
    "DIBUTTON_SOCCERD_BLOCK",
    "DIBUTTON_SOCCERD_STEAL",
    "DIBUTTON_SOCCERD_FAKE",
    "DIBUTTON_SOCCERD_PLAYER",
    "DIBUTTON_SOCCERD_SPECIAL",
    "DIBUTTON_SOCCERD_SELECT",
    "DIBUTTON_SOCCERD_SLIDE",
    "DIBUTTON_SOCCERD_MENU",
    "DIHATSWITCH_SOCCERD_GLANCE",
    "DIBUTTON_SOCCERD_FOUL",
    "DIBUTTON_SOCCERD_HEAD",
    "DIBUTTON_SOCCERD_CLEAR",
    "DIBUTTON_SOCCERD_GOALIECHARGE",
    "DIBUTTON_SOCCERD_SUBSTITUTE",
    "DIBUTTON_SOCCERD_LEFT_LINK",
    "DIBUTTON_SOCCERD_RIGHT_LINK",
    "DIBUTTON_SOCCERD_FORWARD_LINK",
    "DIBUTTON_SOCCERD_BACK_LINK",
    "DIBUTTON_SOCCERD_DEVICE",
    "DIBUTTON_SOCCERD_PAUSE",
    "DIVIRTUAL_SPORTS_RACQUET",
    "DIAXIS_RACQUET_LATERAL",
    "DIAXIS_RACQUET_MOVE",
    "DIBUTTON_RACQUET_SWING",
    "DIBUTTON_RACQUET_BACKSWING",
    "DIBUTTON_RACQUET_SMASH",
    "DIBUTTON_RACQUET_SPECIAL",
    "DIBUTTON_RACQUET_SELECT",
    "DIBUTTON_RACQUET_MENU",
    "DIHATSWITCH_RACQUET_GLANCE",
    "DIBUTTON_RACQUET_TIMEOUT",
    "DIBUTTON_RACQUET_SUBSTITUTE",
    "DIBUTTON_RACQUET_LEFT_LINK",
    "DIBUTTON_RACQUET_RIGHT_LINK",
    "DIBUTTON_RACQUET_FORWARD_LINK",
    "DIBUTTON_RACQUET_BACK_LINK",
    "DIBUTTON_RACQUET_DEVICE",
    "DIBUTTON_RACQUET_PAUSE",
    "DIVIRTUAL_ARCADE_SIDE2SIDE",
    "DIAXIS_ARCADES_LATERAL",
    "DIAXIS_ARCADES_MOVE",
    "DIBUTTON_ARCADES_THROW",
    "DIBUTTON_ARCADES_CARRY",
    "DIBUTTON_ARCADES_ATTACK",
    "DIBUTTON_ARCADES_SPECIAL",
    "DIBUTTON_ARCADES_SELECT",
    "DIBUTTON_ARCADES_MENU",
    "DIHATSWITCH_ARCADES_VIEW",
    "DIBUTTON_ARCADES_LEFT_LINK",
    "DIBUTTON_ARCADES_RIGHT_LINK",
    "DIBUTTON_ARCADES_FORWARD_LINK",
    "DIBUTTON_ARCADES_BACK_LINK",
    "DIBUTTON_ARCADES_VIEW_UP_LINK",
    "DIBUTTON_ARCADES_VIEW_DOWN_LINK",
    "DIBUTTON_ARCADES_VIEW_LEFT_LINK",
    "DIBUTTON_ARCADES_VIEW_RIGHT_LINK",
    "DIBUTTON_ARCADES_DEVICE",
    "DIBUTTON_ARCADES_PAUSE",
    "DIVIRTUAL_ARCADE_PLATFORM",
    "DIAXIS_ARCADEP_LATERAL",
    "DIAXIS_ARCADEP_MOVE",
    "DIBUTTON_ARCADEP_JUMP",
    "DIBUTTON_ARCADEP_FIRE",
    "DIBUTTON_ARCADEP_CROUCH",
    "DIBUTTON_ARCADEP_SPECIAL",
    "DIBUTTON_ARCADEP_SELECT",
    "DIBUTTON_ARCADEP_MENU",
    "DIHATSWITCH_ARCADEP_VIEW",
    "DIBUTTON_ARCADEP_FIRESECONDARY",
    "DIBUTTON_ARCADEP_LEFT_LINK",
    "DIBUTTON_ARCADEP_RIGHT_LINK",
    "DIBUTTON_ARCADEP_FORWARD_LINK",
    "DIBUTTON_ARCADEP_BACK_LINK",
    "DIBUTTON_ARCADEP_VIEW_UP_LINK",
    "DIBUTTON_ARCADEP_VIEW_DOWN_LINK",
    "DIBUTTON_ARCADEP_VIEW_LEFT_LINK",
    "DIBUTTON_ARCADEP_VIEW_RIGHT_LINK",
    "DIBUTTON_ARCADEP_DEVICE",
    "DIBUTTON_ARCADEP_PAUSE",
    "DIVIRTUAL_CAD_2DCONTROL",
    "DIAXIS_2DCONTROL_LATERAL",
    "DIAXIS_2DCONTROL_MOVE",
    "DIAXIS_2DCONTROL_INOUT",
    "DIBUTTON_2DCONTROL_SELECT",
    "DIBUTTON_2DCONTROL_SPECIAL1",
    "DIBUTTON_2DCONTROL_SPECIAL",
    "DIBUTTON_2DCONTROL_SPECIAL2",
    "DIBUTTON_2DCONTROL_MENU",
    "DIHATSWITCH_2DCONTROL_HATSWITCH",
    "DIAXIS_2DCONTROL_ROTATEZ",
    "DIBUTTON_2DCONTROL_DISPLAY",
    "DIBUTTON_2DCONTROL_DEVICE",
    "DIBUTTON_2DCONTROL_PAUSE",
    "DIVIRTUAL_CAD_3DCONTROL",
    "DIAXIS_3DCONTROL_LATERAL",
    "DIAXIS_3DCONTROL_MOVE",
    "DIAXIS_3DCONTROL_INOUT",
    "DIBUTTON_3DCONTROL_SELECT",
    "DIBUTTON_3DCONTROL_SPECIAL1",
    "DIBUTTON_3DCONTROL_SPECIAL",
    "DIBUTTON_3DCONTROL_SPECIAL2",
    "DIBUTTON_3DCONTROL_MENU",
    "DIHATSWITCH_3DCONTROL_HATSWITCH",
    "DIAXIS_3DCONTROL_ROTATEX",
    "DIAXIS_3DCONTROL_ROTATEY",
    "DIAXIS_3DCONTROL_ROTATEZ",
    "DIBUTTON_3DCONTROL_DISPLAY",
    "DIBUTTON_3DCONTROL_DEVICE",
    "DIBUTTON_3DCONTROL_PAUSE",
    "DIVIRTUAL_CAD_FLYBY",
    "DIAXIS_CADF_LATERAL",
    "DIAXIS_CADF_MOVE",
    "DIAXIS_CADF_INOUT",
    "DIBUTTON_CADF_SELECT",
    "DIBUTTON_CADF_SPECIAL1",
    "DIBUTTON_CADF_SPECIAL",
    "DIBUTTON_CADF_SPECIAL2",
    "DIBUTTON_CADF_MENU",
    "DIHATSWITCH_CADF_HATSWITCH",
    "DIAXIS_CADF_ROTATEX",
    "DIAXIS_CADF_ROTATEY",
    "DIAXIS_CADF_ROTATEZ",
    "DIBUTTON_CADF_DISPLAY",
    "DIBUTTON_CADF_DEVICE",
    "DIBUTTON_CADF_PAUSE",
    "DIVIRTUAL_CAD_MODEL",
    "DIAXIS_CADM_LATERAL",
    "DIAXIS_CADM_MOVE",
    "DIAXIS_CADM_INOUT",
    "DIBUTTON_CADM_SELECT",
    "DIBUTTON_CADM_SPECIAL1",
    "DIBUTTON_CADM_SPECIAL",
    "DIBUTTON_CADM_SPECIAL2",
    "DIBUTTON_CADM_MENU",
    "DIHATSWITCH_CADM_HATSWITCH",
    "DIAXIS_CADM_ROTATEX",
    "DIAXIS_CADM_ROTATEY",
    "DIAXIS_CADM_ROTATEZ",
    "DIBUTTON_CADM_DISPLAY",
    "DIBUTTON_CADM_DEVICE",
    "DIBUTTON_CADM_PAUSE",
    "DIVIRTUAL_REMOTE_CONTROL",
    "DIAXIS_REMOTE_SLIDER",
    "DIBUTTON_REMOTE_MUTE",
    "DIBUTTON_REMOTE_SELECT",
    "DIBUTTON_REMOTE_PLAY",
    "DIBUTTON_REMOTE_CUE",
    "DIBUTTON_REMOTE_REVIEW",
    "DIBUTTON_REMOTE_CHANGE",
    "DIBUTTON_REMOTE_RECORD",
    "DIBUTTON_REMOTE_MENU",
    "DIAXIS_REMOTE_SLIDER2",
    "DIBUTTON_REMOTE_TV",
    "DIBUTTON_REMOTE_CABLE",
    "DIBUTTON_REMOTE_CD",
    "DIBUTTON_REMOTE_VCR",
    "DIBUTTON_REMOTE_TUNER",
    "DIBUTTON_REMOTE_DVD",
    "DIBUTTON_REMOTE_ADJUST",
    "DIBUTTON_REMOTE_DIGIT0",
    "DIBUTTON_REMOTE_DIGIT1",
    "DIBUTTON_REMOTE_DIGIT2",
    "DIBUTTON_REMOTE_DIGIT3",
    "DIBUTTON_REMOTE_DIGIT4",
    "DIBUTTON_REMOTE_DIGIT5",
    "DIBUTTON_REMOTE_DIGIT6",
    "DIBUTTON_REMOTE_DIGIT7",
    "DIBUTTON_REMOTE_DIGIT8",
    "DIBUTTON_REMOTE_DIGIT9",
    "DIBUTTON_REMOTE_DEVICE",
    "DIBUTTON_REMOTE_PAUSE",
    "DIVIRTUAL_BROWSER_CONTROL",
    "DIAXIS_BROWSER_LATERAL",
    "DIAXIS_BROWSER_MOVE",
    "DIBUTTON_BROWSER_SELECT",
    "DIAXIS_BROWSER_VIEW",
    "DIBUTTON_BROWSER_REFRESH",
    "DIBUTTON_BROWSER_MENU",
    "DIBUTTON_BROWSER_SEARCH",
    "DIBUTTON_BROWSER_STOP",
    "DIBUTTON_BROWSER_HOME",
    "DIBUTTON_BROWSER_FAVORITES",
    "DIBUTTON_BROWSER_NEXT",
    "DIBUTTON_BROWSER_PREVIOUS",
    "DIBUTTON_BROWSER_HISTORY",
    "DIBUTTON_BROWSER_PRINT",
    "DIBUTTON_BROWSER_DEVICE",
    "DIBUTTON_BROWSER_PAUSE",
    "DIVIRTUAL_DRIVING_MECHA",
    "DIAXIS_MECHA_STEER",
    "DIAXIS_MECHA_TORSO",
    "DIAXIS_MECHA_ROTATE",
    "DIAXIS_MECHA_THROTTLE",
    "DIBUTTON_MECHA_FIRE",
    "DIBUTTON_MECHA_WEAPONS",
    "DIBUTTON_MECHA_TARGET",
    "DIBUTTON_MECHA_REVERSE",
    "DIBUTTON_MECHA_ZOOM",
    "DIBUTTON_MECHA_JUMP",
    "DIBUTTON_MECHA_MENU",
    "DIBUTTON_MECHA_CENTER",
    "DIHATSWITCH_MECHA_GLANCE",
    "DIBUTTON_MECHA_VIEW",
    "DIBUTTON_MECHA_FIRESECONDARY",
    "DIBUTTON_MECHA_LEFT_LINK",
    "DIBUTTON_MECHA_RIGHT_LINK",
    "DIBUTTON_MECHA_FORWARD_LINK",
    "DIBUTTON_MECHA_BACK_LINK",
    "DIBUTTON_MECHA_ROTATE_LEFT_LINK",
    "DIBUTTON_MECHA_ROTATE_RIGHT_LINK",
    "DIBUTTON_MECHA_FASTER_LINK",
    "DIBUTTON_MECHA_SLOWER_LINK",
    "DIBUTTON_MECHA_DEVICE",
    "DIBUTTON_MECHA_PAUSE",
    "DIAXIS_ANY_X_1",
    "DIAXIS_ANY_X_2",
    "DIAXIS_ANY_Y_1",
    "DIAXIS_ANY_Y_2",
    "DIAXIS_ANY_Z_1",
    "DIAXIS_ANY_Z_2",
    "DIAXIS_ANY_R_1",
    "DIAXIS_ANY_R_2",
    "DIAXIS_ANY_U_1",
    "DIAXIS_ANY_U_2",
    "DIAXIS_ANY_V_1",
    "DIAXIS_ANY_V_2",
    "DIAXIS_ANY_A_1",
    "DIAXIS_ANY_A_2",
    "DIAXIS_ANY_B_1",
    "DIAXIS_ANY_B_2",
    "DIAXIS_ANY_C_1",
    "DIAXIS_ANY_C_2",
    "DIAXIS_ANY_S_1",
    "DIAXIS_ANY_S_2",
    "DIAXIS_ANY_1",
    "DIAXIS_ANY_2",
    "DIAXIS_ANY_3",
    "DIAXIS_ANY_4",
    "DIPOV_ANY_1",
    "DIPOV_ANY_2",
    "DIPOV_ANY_3",
    "DIPOV_ANY_4",
    "JOY_PASSDRIVERDATA",
    "JOY_HWS_ISHEADTRACKER",
    "JOY_HWS_ISGAMEPORTDRIVER",
    "JOY_HWS_ISANALOGPORTDRIVER",
    "JOY_HWS_AUTOLOAD",
    "JOY_HWS_NODEVNODE",
    "JOY_HWS_ISGAMEPORTBUS",
    "JOY_HWS_GAMEPORTBUSBUSY",
    "JOY_US_VOLATILE",
    "JOY_OEMPOLL_PASSDRIVERDATA",
    "BUTTON_BIT_POWER",
    "BUTTON_BIT_WINDOWS",
    "BUTTON_BIT_VOLUMEUP",
    "BUTTON_BIT_VOLUMEDOWN",
    "BUTTON_BIT_ROTATION_LOCK",
    "BUTTON_BIT_BACK",
    "BUTTON_BIT_SEARCH",
    "BUTTON_BIT_CAMERAFOCUS",
    "BUTTON_BIT_CAMERASHUTTER",
    "BUTTON_BIT_RINGERTOGGLE",
    "BUTTON_BIT_HEADSET",
    "BUTTON_BIT_HWKBDEPLOY",
    "BUTTON_BIT_CAMERALENS",
    "BUTTON_BIT_OEMCUSTOM",
    "BUTTON_BIT_OEMCUSTOM2",
    "BUTTON_BIT_OEMCUSTOM3",
    "BUTTON_BIT_ALLBUTTONSMASK",
    "IOCTL_BUTTON_SET_ENABLED_ON_IDLE",
    "IOCTL_BUTTON_GET_ENABLED_ON_IDLE",
    "DICONSTANTFORCE",
    "DIRAMPFORCE",
    "DIPERIODIC",
    "DICONDITION",
    "DICUSTOMFORCE",
    "DIENVELOPE",
    "DIEFFECT_DX5",
    "DIEFFECT",
    "DIFILEEFFECT",
    "LPDIENUMEFFECTSINFILECALLBACK",
    "DIEFFESCAPE",
    "IDirectInputEffect",
    "DIDEVCAPS_DX3",
    "DIDEVCAPS",
    "DIOBJECTDATAFORMAT",
    "DIDATAFORMAT",
    "DIACTIONA",
    "DIACTIONW",
    "DIACTIONFORMATA",
    "DIACTIONFORMATW",
    "DICOLORSET",
    "DICONFIGUREDEVICESPARAMSA",
    "DICONFIGUREDEVICESPARAMSW",
    "DIDEVICEIMAGEINFOA",
    "DIDEVICEIMAGEINFOW",
    "DIDEVICEIMAGEINFOHEADERA",
    "DIDEVICEIMAGEINFOHEADERW",
    "DIDEVICEOBJECTINSTANCE_DX3A",
    "DIDEVICEOBJECTINSTANCE_DX3W",
    "DIDEVICEOBJECTINSTANCEA",
    "DIDEVICEOBJECTINSTANCEW",
    "LPDIENUMDEVICEOBJECTSCALLBACKA",
    "LPDIENUMDEVICEOBJECTSCALLBACKW",
    "DIPROPHEADER",
    "DIPROPDWORD",
    "DIPROPPOINTER",
    "DIPROPRANGE",
    "DIPROPCAL",
    "DIPROPCALPOV",
    "DIPROPGUIDANDPATH",
    "DIPROPSTRING",
    "CPOINT",
    "DIPROPCPOINTS",
    "DIDEVICEOBJECTDATA_DX3",
    "DIDEVICEOBJECTDATA",
    "DIDEVICEINSTANCE_DX3A",
    "DIDEVICEINSTANCE_DX3W",
    "DIDEVICEINSTANCEA",
    "DIDEVICEINSTANCEW",
    "IDirectInputDeviceW",
    "IDirectInputDeviceA",
    "DIEFFECTINFOA",
    "DIEFFECTINFOW",
    "LPDIENUMEFFECTSCALLBACKA",
    "LPDIENUMEFFECTSCALLBACKW",
    "LPDIENUMCREATEDEFFECTOBJECTSCALLBACK",
    "IDirectInputDevice2W",
    "IDirectInputDevice2A",
    "IDirectInputDevice7W",
    "IDirectInputDevice7A",
    "IDirectInputDevice8W",
    "IDirectInputDevice8A",
    "DIMOUSESTATE",
    "DIMOUSESTATE2",
    "DIJOYSTATE",
    "DIJOYSTATE2",
    "LPDIENUMDEVICESCALLBACKA",
    "LPDIENUMDEVICESCALLBACKW",
    "LPDICONFIGUREDEVICESCALLBACK",
    "LPDIENUMDEVICESBYSEMANTICSCBA",
    "LPDIENUMDEVICESBYSEMANTICSCBW",
    "IDirectInputW",
    "IDirectInputA",
    "IDirectInput2W",
    "IDirectInput2A",
    "IDirectInput7W",
    "IDirectInput7A",
    "IDirectInput8W",
    "IDirectInput8A",
    "LPFNSHOWJOYCPL",
    "DIOBJECTATTRIBUTES",
    "DIFFOBJECTATTRIBUTES",
    "DIOBJECTCALIBRATION",
    "DIPOVCALIBRATION",
    "DIEFFECTATTRIBUTES",
    "DIFFDEVICEATTRIBUTES",
    "DIDRIVERVERSIONS",
    "DIDEVICESTATE",
    "DIHIDFFINITINFO",
    "IDirectInputEffectDriver",
    "JOYPOS",
    "JOYRANGE",
    "JOYREGUSERVALUES",
    "JOYREGHWSETTINGS",
    "JOYREGHWVALUES",
    "JOYREGHWCONFIG",
    "JOYCALIBRATE",
    "LPDIJOYTYPECALLBACK",
    "DIJOYTYPEINFO_DX5",
    "DIJOYTYPEINFO_DX6",
    "DIJOYTYPEINFO",
    "DIJOYCONFIG_DX5",
    "DIJOYCONFIG",
    "DIJOYUSERVALUES",
    "IDirectInputJoyConfig",
    "IDirectInputJoyConfig8",
    "KEYBOARD_INPUT_DATA",
    "KEYBOARD_TYPEMATIC_PARAMETERS",
    "KEYBOARD_ID",
    "KEYBOARD_ATTRIBUTES",
    "KEYBOARD_EXTENDED_ATTRIBUTES",
    "KEYBOARD_INDICATOR_PARAMETERS",
    "INDICATOR_LIST",
    "KEYBOARD_INDICATOR_TRANSLATION",
    "KEYBOARD_UNIT_ID_PARAMETER",
    "KEYBOARD_IME_STATUS",
    "MOUSE_INPUT_DATA",
    "MOUSE_ATTRIBUTES",
    "MOUSE_UNIT_ID_PARAMETER",
    "HIDP_REPORT_TYPE",
    "HidP_Input",
    "HidP_Output",
    "HidP_Feature",
    "USAGE_AND_PAGE",
    "HIDP_BUTTON_CAPS",
    "HIDP_VALUE_CAPS",
    "HIDP_LINK_COLLECTION_NODE",
    "_HIDP_PREPARSED_DATA",
    "HIDP_CAPS",
    "HIDP_DATA",
    "HIDP_UNKNOWN_TOKEN",
    "HIDP_EXTENDED_ATTRIBUTES",
    "HIDP_BUTTON_ARRAY_DATA",
    "HIDP_KEYBOARD_DIRECTION",
    "HidP_Keyboard_Break",
    "HidP_Keyboard_Make",
    "HIDP_KEYBOARD_MODIFIER_STATE",
    "PHIDP_INSERT_SCANCODES",
    "PFN_HidP_GetVersionInternal",
    "HIDD_CONFIGURATION",
    "HIDD_ATTRIBUTES",
    "HID_XFER_PACKET",
    "HID_COLLECTION_INFORMATION",
    "HID_DRIVER_CONFIG",
    "GPIOBUTTONS_BUTTON_TYPE",
    "GPIO_BUTTON_POWER",
    "GPIO_BUTTON_WINDOWS",
    "GPIO_BUTTON_VOLUME_UP",
    "GPIO_BUTTON_VOLUME_DOWN",
    "GPIO_BUTTON_ROTATION_LOCK",
    "GPIO_BUTTON_BACK",
    "GPIO_BUTTON_SEARCH",
    "GPIO_BUTTON_CAMERA_FOCUS",
    "GPIO_BUTTON_CAMERA_SHUTTER",
    "GPIO_BUTTON_RINGER_TOGGLE",
    "GPIO_BUTTON_HEADSET",
    "GPIO_BUTTON_HWKB_DEPLOY",
    "GPIO_BUTTON_CAMERA_LENS",
    "GPIO_BUTTON_OEM_CUSTOM",
    "GPIO_BUTTON_OEM_CUSTOM2",
    "GPIO_BUTTON_OEM_CUSTOM3",
    "GPIO_BUTTON_COUNT_MIN",
    "GPIO_BUTTON_COUNT",
    "INPUT_BUTTON_ENABLE_INFO",
    "DirectInput8Create",
    "joyConfigChanged",
    "HidP_GetCaps",
    "HidP_GetLinkCollectionNodes",
    "HidP_GetSpecificButtonCaps",
    "HidP_GetButtonCaps",
    "HidP_GetSpecificValueCaps",
    "HidP_GetValueCaps",
    "HidP_GetExtendedAttributes",
    "HidP_InitializeReportForID",
    "HidP_SetData",
    "HidP_GetData",
    "HidP_MaxDataListLength",
    "HidP_SetUsages",
    "HidP_UnsetUsages",
    "HidP_GetUsages",
    "HidP_GetUsagesEx",
    "HidP_MaxUsageListLength",
    "HidP_SetUsageValue",
    "HidP_SetScaledUsageValue",
    "HidP_SetUsageValueArray",
    "HidP_GetUsageValue",
    "HidP_GetScaledUsageValue",
    "HidP_GetUsageValueArray",
    "HidP_UsageListDifference",
    "HidP_GetButtonArray",
    "HidP_SetButtonArray",
    "HidP_TranslateUsagesToI8042ScanCodes",
    "HidD_GetAttributes",
    "HidD_GetHidGuid",
    "HidD_GetPreparsedData",
    "HidD_FreePreparsedData",
    "HidD_FlushQueue",
    "HidD_GetConfiguration",
    "HidD_SetConfiguration",
    "HidD_GetFeature",
    "HidD_SetFeature",
    "HidD_GetInputReport",
    "HidD_SetOutputReport",
    "HidD_GetNumInputBuffers",
    "HidD_SetNumInputBuffers",
    "HidD_GetPhysicalDescriptor",
    "HidD_GetManufacturerString",
    "HidD_GetProductString",
    "HidD_GetIndexedString",
    "HidD_GetSerialNumberString",
    "HidD_GetMsGenreDescriptor",
]
