from win32more import *
import win32more.Devices.Pwm
import win32more.Foundation

def __getattr__(name):
    if name == "__path__":
        raise AttributeError()
    setattr(win32more.Devices.Pwm, name, eval(f"_define_{name}()"))
    return getattr(win32more.Devices.Pwm, name)
GUID_DEVINTERFACE_PWM_CONTROLLER = '60824b4c-eed1-4c9c-b49c-1b961461a819'
IOCTL_PWM_CONTROLLER_GET_INFO = 262144
IOCTL_PWM_CONTROLLER_GET_ACTUAL_PERIOD = 262148
IOCTL_PWM_CONTROLLER_SET_DESIRED_PERIOD = 294920
IOCTL_PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 262544
IOCTL_PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 295316
IOCTL_PWM_PIN_GET_POLARITY = 262552
IOCTL_PWM_PIN_SET_POLARITY = 295324
IOCTL_PWM_PIN_START = 295331
IOCTL_PWM_PIN_STOP = 295335
IOCTL_PWM_PIN_IS_STARTED = 262568
PWM_IOCTL_ID_CONTROLLER_GET_INFO = 0
PWM_IOCTL_ID_CONTROLLER_GET_ACTUAL_PERIOD = 1
PWM_IOCTL_ID_CONTROLLER_SET_DESIRED_PERIOD = 2
PWM_IOCTL_ID_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 100
PWM_IOCTL_ID_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE = 101
PWM_IOCTL_ID_PIN_GET_POLARITY = 102
PWM_IOCTL_ID_PIN_SET_POLARITY = 103
PWM_IOCTL_ID_PIN_START = 104
PWM_IOCTL_ID_PIN_STOP = 105
PWM_IOCTL_ID_PIN_IS_STARTED = 106
def _define_PWM_CONTROLLER_INFO_head():
    class PWM_CONTROLLER_INFO(Structure):
        pass
    return PWM_CONTROLLER_INFO
def _define_PWM_CONTROLLER_INFO():
    PWM_CONTROLLER_INFO = win32more.Devices.Pwm.PWM_CONTROLLER_INFO_head
    PWM_CONTROLLER_INFO._fields_ = [
        ("Size", UIntPtr),
        ("PinCount", UInt32),
        ("MinimumPeriod", UInt64),
        ("MaximumPeriod", UInt64),
    ]
    return PWM_CONTROLLER_INFO
def _define_PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT_head():
    class PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT(Structure):
        pass
    return PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT
def _define_PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT():
    PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT = win32more.Devices.Pwm.PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT_head
    PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT._fields_ = [
        ("ActualPeriod", UInt64),
    ]
    return PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT
def _define_PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT_head():
    class PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT(Structure):
        pass
    return PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT
def _define_PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT():
    PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT = win32more.Devices.Pwm.PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT_head
    PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT._fields_ = [
        ("DesiredPeriod", UInt64),
    ]
    return PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT
def _define_PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT_head():
    class PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT(Structure):
        pass
    return PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT
def _define_PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT():
    PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT = win32more.Devices.Pwm.PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT_head
    PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT._fields_ = [
        ("ActualPeriod", UInt64),
    ]
    return PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT
def _define_PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT_head():
    class PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT(Structure):
        pass
    return PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT
def _define_PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT():
    PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT = win32more.Devices.Pwm.PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT_head
    PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT._fields_ = [
        ("Percentage", UInt64),
    ]
    return PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT
def _define_PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT_head():
    class PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT(Structure):
        pass
    return PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT
def _define_PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT():
    PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT = win32more.Devices.Pwm.PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT_head
    PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT._fields_ = [
        ("Percentage", UInt64),
    ]
    return PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT
PWM_POLARITY = Int32
PWM_ACTIVE_HIGH = 0
PWM_ACTIVE_LOW = 1
def _define_PWM_PIN_GET_POLARITY_OUTPUT_head():
    class PWM_PIN_GET_POLARITY_OUTPUT(Structure):
        pass
    return PWM_PIN_GET_POLARITY_OUTPUT
def _define_PWM_PIN_GET_POLARITY_OUTPUT():
    PWM_PIN_GET_POLARITY_OUTPUT = win32more.Devices.Pwm.PWM_PIN_GET_POLARITY_OUTPUT_head
    PWM_PIN_GET_POLARITY_OUTPUT._fields_ = [
        ("Polarity", win32more.Devices.Pwm.PWM_POLARITY),
    ]
    return PWM_PIN_GET_POLARITY_OUTPUT
def _define_PWM_PIN_SET_POLARITY_INPUT_head():
    class PWM_PIN_SET_POLARITY_INPUT(Structure):
        pass
    return PWM_PIN_SET_POLARITY_INPUT
def _define_PWM_PIN_SET_POLARITY_INPUT():
    PWM_PIN_SET_POLARITY_INPUT = win32more.Devices.Pwm.PWM_PIN_SET_POLARITY_INPUT_head
    PWM_PIN_SET_POLARITY_INPUT._fields_ = [
        ("Polarity", win32more.Devices.Pwm.PWM_POLARITY),
    ]
    return PWM_PIN_SET_POLARITY_INPUT
def _define_PWM_PIN_IS_STARTED_OUTPUT_head():
    class PWM_PIN_IS_STARTED_OUTPUT(Structure):
        pass
    return PWM_PIN_IS_STARTED_OUTPUT
def _define_PWM_PIN_IS_STARTED_OUTPUT():
    PWM_PIN_IS_STARTED_OUTPUT = win32more.Devices.Pwm.PWM_PIN_IS_STARTED_OUTPUT_head
    PWM_PIN_IS_STARTED_OUTPUT._fields_ = [
        ("IsStarted", win32more.Foundation.BOOLEAN),
    ]
    return PWM_PIN_IS_STARTED_OUTPUT
__all__ = [
    "GUID_DEVINTERFACE_PWM_CONTROLLER",
    "IOCTL_PWM_CONTROLLER_GET_INFO",
    "IOCTL_PWM_CONTROLLER_GET_ACTUAL_PERIOD",
    "IOCTL_PWM_CONTROLLER_SET_DESIRED_PERIOD",
    "IOCTL_PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE",
    "IOCTL_PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE",
    "IOCTL_PWM_PIN_GET_POLARITY",
    "IOCTL_PWM_PIN_SET_POLARITY",
    "IOCTL_PWM_PIN_START",
    "IOCTL_PWM_PIN_STOP",
    "IOCTL_PWM_PIN_IS_STARTED",
    "PWM_IOCTL_ID_CONTROLLER_GET_INFO",
    "PWM_IOCTL_ID_CONTROLLER_GET_ACTUAL_PERIOD",
    "PWM_IOCTL_ID_CONTROLLER_SET_DESIRED_PERIOD",
    "PWM_IOCTL_ID_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE",
    "PWM_IOCTL_ID_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE",
    "PWM_IOCTL_ID_PIN_GET_POLARITY",
    "PWM_IOCTL_ID_PIN_SET_POLARITY",
    "PWM_IOCTL_ID_PIN_START",
    "PWM_IOCTL_ID_PIN_STOP",
    "PWM_IOCTL_ID_PIN_IS_STARTED",
    "PWM_CONTROLLER_INFO",
    "PWM_CONTROLLER_GET_ACTUAL_PERIOD_OUTPUT",
    "PWM_CONTROLLER_SET_DESIRED_PERIOD_INPUT",
    "PWM_CONTROLLER_SET_DESIRED_PERIOD_OUTPUT",
    "PWM_PIN_GET_ACTIVE_DUTY_CYCLE_PERCENTAGE_OUTPUT",
    "PWM_PIN_SET_ACTIVE_DUTY_CYCLE_PERCENTAGE_INPUT",
    "PWM_POLARITY",
    "PWM_ACTIVE_HIGH",
    "PWM_ACTIVE_LOW",
    "PWM_PIN_GET_POLARITY_OUTPUT",
    "PWM_PIN_SET_POLARITY_INPUT",
    "PWM_PIN_IS_STARTED_OUTPUT",
]
